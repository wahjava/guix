This following patch was originally found at the debian mingw-w64 team's
binutils repo located here:
https://salsa.debian.org/mingw-w64-team/binutils-mingw-w64.git

Invoke the following in the aforementioned repo to see the original patch:

  $ git show faf7c64:debian/patches/specify-timestamp.patch

Description: Allow the PE timestamp to be specified
Author: Stephen Kitt <skitt@debian.org>

--- a/bfd/peXXigen.c
+++ b/bfd/peXXigen.c
@@ -74,6 +74,9 @@
 #include <wchar.h>
 #include <wctype.h>
 
+#include <errno.h>
+#include <limits.h>
+
 /* NOTE: it's strange to be including an architecture specific header
    in what's supposed to be general (to PE/PEI) code.  However, that's
    where the definitions are, and they don't vary per architecture
@@ -842,6 +845,30 @@
   if ((pe_data (abfd)->timestamp) == -1)
     {
       time_t now = bfd_get_current_time (0);
+      char *source_date_epoch;
+      unsigned long long epoch;
+      char *endptr;
+      source_date_epoch = getenv("SOURCE_DATE_EPOCH");
+      if (source_date_epoch) {
+        errno = 0;
+        epoch = strtoull(source_date_epoch, &endptr, 10);
+        if ((errno == ERANGE && (epoch == ULLONG_MAX || epoch == 0))
+            || (errno != 0 && epoch == 0)) {
+          _bfd_error_handler("Environment variable $SOURCE_DATE_EPOCH: strtoull: %s\n",
+                             strerror(errno));
+        } else if (endptr == source_date_epoch) {
+          _bfd_error_handler("Environment variable $SOURCE_DATE_EPOCH: No digits were found: %s\n",
+                             endptr);
+        } else if (*endptr != '\0') {
+          _bfd_error_handler("Environment variable $SOURCE_DATE_EPOCH: Trailing garbage: %s\n",
+                             endptr);
+        } else if (epoch > ULONG_MAX) {
+          _bfd_error_handler("Environment variable $SOURCE_DATE_EPOCH: value must be smaller than or equal to: %lu but was found to be: %llu\n",
+                             ULONG_MAX, epoch);
+        } else {
+          now = epoch;
+        }
+      }
       H_PUT_32 (abfd, now, filehdr_out->f_timdat);
     }
   else
--- a/ld/pe-dll.c
+++ b/ld/pe-dll.c
@@ -27,6 +27,8 @@
 #include "safe-ctype.h"
 #include "ctf-api.h"
 
+#include <errno.h>
+#include <limits.h>
 #include <time.h>
 
 #include "ld.h"
@@ -1254,6 +1256,30 @@
   if (pe_data (abfd)->timestamp == -1)
     {
       time_t now = bfd_get_current_time (0);
+      char *source_date_epoch;
+      unsigned long long epoch;
+      char *endptr;
+      source_date_epoch = getenv("SOURCE_DATE_EPOCH");
+      if (source_date_epoch) {
+        errno = 0;
+        epoch = strtoull(source_date_epoch, &endptr, 10);
+        if ((errno == ERANGE && (epoch == ULLONG_MAX || epoch == 0))
+            || (errno != 0 && epoch == 0)) {
+          einfo("Environment variable $SOURCE_DATE_EPOCH: strtoull: %s\n",
+                strerror(errno));
+        } else if (endptr == source_date_epoch) {
+          einfo("Environment variable $SOURCE_DATE_EPOCH: No digits were found: %s\n",
+                endptr);
+        } else if (*endptr != '\0') {
+          einfo("Environment variable $SOURCE_DATE_EPOCH: Trailing garbage: %s\n",
+                endptr);
+        } else if (epoch > ULONG_MAX) {
+          einfo("Environment variable $SOURCE_DATE_EPOCH: value must be smaller than or equal to: %lu but was found to be: %llu\n",
+                ULONG_MAX, epoch);
+        } else {
+          now = epoch;
+        }
+      }
       H_PUT_32 (abfd, now, edata_d + 4);
     }
   else
--- a/ld/emultempl/pe.em
+++ b/ld/emultempl/pe.em
@@ -304,7 +304,7 @@
      OPTION_USE_NUL_PREFIXED_IMPORT_TABLES},
     {"no-leading-underscore", no_argument, NULL, OPTION_NO_LEADING_UNDERSCORE},
     {"leading-underscore", no_argument, NULL, OPTION_LEADING_UNDERSCORE},
-    {"insert-timestamp", no_argument, NULL, OPTION_INSERT_TIMESTAMP},
+    {"insert-timestamp", optional_argument, NULL, OPTION_INSERT_TIMESTAMP},
     {"no-insert-timestamp", no_argument, NULL, OPTION_NO_INSERT_TIMESTAMP},
 #ifdef DLL_SUPPORT
     /* getopt allows abbreviations, so we do this to stop it
--- a/ld/emultempl/pep.em
+++ b/ld/emultempl/pep.em
@@ -323,7 +323,7 @@
     {"no-bind", no_argument, NULL, OPTION_NO_BIND},
     {"wdmdriver", no_argument, NULL, OPTION_WDM_DRIVER},
     {"tsaware", no_argument, NULL, OPTION_TERMINAL_SERVER_AWARE},
-    {"insert-timestamp", no_argument, NULL, OPTION_INSERT_TIMESTAMP},
+    {"insert-timestamp", optional_argument, NULL, OPTION_INSERT_TIMESTAMP},
     {"no-insert-timestamp", no_argument, NULL, OPTION_NO_INSERT_TIMESTAMP},
     {"build-id", optional_argument, NULL, OPTION_BUILD_ID},
     {"enable-reloc-section", no_argument, NULL, OPTION_ENABLE_RELOC_SECTION},
