# SOME DESCRIPTIVE TITLE
# Copyright (C) 2021 the authors of Guix (msgids) and the following authors (msgstr)
# This file is distributed under the same license as the guix manual package.
# Rafael Fontenelle <rafaelff@gnome.org>, 2021.
# Thiago Jung Bauermann <bauermann@kolabnow.com>, 2021.
# Camila Flores Granella <cgranell@redhat.com>, 2022, 2023.
# Fábio Rodrigues Ribeiro <farribeiro@gmail.com>, 2022, 2023.
# Alexandre de Siqueira <alex.desiqueira@igdore.org>, 2023.
# Florian Pelz <pelzflorian@pelzflorian.de>, 2023, 2024, 2025.
# Frank McCay <frank.mccay@outlook.com.br>, 2024.
# Felipe Silva <fedora@felipeqq2.rocks>, 2024.
# Krascovict Petrov <krascovict@yandex.ru>, 2024.
# Weblate Translation Memory <noreply-mt-weblate-translation-memory@weblate.org>, 2024, 2025.
# Orahcio Felicio de Sousa <orahcio@gmail.com>, 2024.
# Arthur Rodrigues <arthurhdrodrigues@proton.me>, 2025.
msgid ""
msgstr ""
"Project-Id-Version: guix manual checkout\n"
"Report-Msgid-Bugs-To: bug-guix@gnu.org\n"
"POT-Creation-Date: 2025-07-02 03:18+0000\n"
"PO-Revision-Date: 2025-07-09 20:40+0000\n"
"Last-Translator: pelzflorian <pelzflorian@noreply.codeberg.org>\n"
"Language-Team: Portuguese (Brazil) <https://translate.codeberg.org/projects/guix/documentation-manual/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.12.2\n"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: chapter
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: menuentry
#: guix-git/doc/contributing.texi:1 guix-git/doc/contributing.texi:2
#: guix-git/doc/guix.texi:229
#, no-wrap
msgid "Contributing"
msgstr "Contribuindo"

#. type: Plain text
#: guix-git/doc/contributing.texi:9
msgid "This project is a cooperative effort, and we need your help to make it grow! Please get in touch with us on @email{guix-devel@@gnu.org} and @code{#guix} on the Libera Chat IRC network.  We welcome ideas, bug reports, patches, and anything that may be helpful to the project.  We particularly welcome help on packaging (@pxref{Packaging Guidelines})."
msgstr "Este projeto é um esforço cooperativo e precisamos da sua ajuda para fazê-lo crescer! Por favor, entre em contato conosco por meio de @email{guix-devel@@gnu.org} e @code{#guix} na rede IRC do Libera Chat. Ideias, relatórios de bugs, patches e qualquer coisa que possa ser útil para o projeto são sempre bem-vindos. Nós particularmente agradecemos a ajuda no empacotamento das (@pxref{Packaging Guidelines})."

#. type: cindex
#: guix-git/doc/contributing.texi:10
#, no-wrap
msgid "code of conduct, of contributors"
msgstr "código de conduta, de contribuidores"

#. type: cindex
#: guix-git/doc/contributing.texi:11
#, no-wrap
msgid "contributor covenant"
msgstr "acordo de contribuição"

#. type: Plain text
#: guix-git/doc/contributing.texi:17
msgid "We want to provide a warm, friendly, and harassment-free environment, so that anyone can contribute to the best of their abilities.  To this end our project uses a ``Contributor Covenant'', which was adapted from @url{https://contributor-covenant.org/}.  You can find a local version in the @file{CODE-OF-CONDUCT} file in the source tree."
msgstr "Queremos oferecer um ambiente acolhedor, amigável e sem assédio, para que todos possam contribuir com o melhor de suas habilidades. Para este fim, nosso projeto usa um ``Acordo de contribuição``, que foi adaptado de @url{https://contributor-covenant.org/}. Você pode encontrar uma versão local no arquivo @file{CODE-OF-CONDUCT} na árvore de fontes."

#. type: Plain text
#: guix-git/doc/contributing.texi:21
msgid "Contributors are not required to use their legal name in patches and on-line communication; they can use any name or pseudonym of their choice."
msgstr "Os contribuidores não são obrigados a usar seu nome legal em patches e comunicação on-line; eles podem usar qualquer nome ou pseudônimo de sua escolha."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:45
#: guix-git/doc/contributing.texi:46
#, no-wrap
msgid "Requirements"
msgstr "Requisitos"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Software needed to build and run Guix."
msgstr "Software necessário para compilar e executar o Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:133
#: guix-git/doc/contributing.texi:134
#, no-wrap
msgid "Building from Git"
msgstr "Compilando do git"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "The latest and greatest."
msgstr "A mais recente e melhor."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:325
#: guix-git/doc/contributing.texi:326
#, no-wrap
msgid "Running the Test Suite"
msgstr "Executando o conjunto de testes"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Testing Guix."
msgstr "Testando o Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:436
#: guix-git/doc/contributing.texi:437
#, no-wrap
msgid "Running Guix Before It Is Installed"
msgstr "Executando guix antes dele ser instalado"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Hacker tricks."
msgstr "Truques de hacker."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:526
#: guix-git/doc/contributing.texi:527
#, no-wrap
msgid "The Perfect Setup"
msgstr "A configuração perfeita"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "The right tools."
msgstr "As ferramentas certas."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:703
#: guix-git/doc/contributing.texi:704
#, no-wrap
msgid "Alternative Setups"
msgstr "Configurações alternativas"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Other possible tools that do the job."
msgstr "Outras ferramentas possíveis que esta fazendo o trabalho."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:780
#: guix-git/doc/contributing.texi:781
#, no-wrap
msgid "Source Tree Structure"
msgstr "Estrutura da árvore de origem"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Source code guided tour."
msgstr "Visita guiada ao código-fonte."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1031
#: guix-git/doc/contributing.texi:1032
#, no-wrap
msgid "Packaging Guidelines"
msgstr "Diretrizes de empacotamento"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Growing the distribution."
msgstr "Crescendo a distribuição."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1787
#: guix-git/doc/contributing.texi:1788
#, no-wrap
msgid "Coding Style"
msgstr "Estilo de código"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Hygiene of the contributor."
msgstr "Limpeza do contribuidor."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:1894
#: guix-git/doc/contributing.texi:1895
#, no-wrap
msgid "Submitting Patches"
msgstr "Enviando patches"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Share your work."
msgstr "Compartilhe seu trabalho."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2301
#: guix-git/doc/contributing.texi:2302
#, no-wrap
msgid "Tracking Bugs and Changes"
msgstr "Rastreando Bugs e Mudanças"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Keeping it all organized."
msgstr "Mantendo tudo organizado."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2734
#: guix-git/doc/contributing.texi:2735
#, no-wrap
msgid "Teams"
msgstr "Equipes"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Coordinating efforts."
msgstr "Coordenando esforços."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2835
#: guix-git/doc/contributing.texi:2836
#, no-wrap
msgid "Making Decisions"
msgstr "Tomando decisões"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Collectively choosing the way forward."
msgstr "Escolhendo coletivamente o caminho a seguir."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:2854
#: guix-git/doc/contributing.texi:2855
#, no-wrap
msgid "Commit Access"
msgstr "Confirmar acesso"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Pushing to the official repository."
msgstr "Submeter para o repositório oficial."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3098
#: guix-git/doc/contributing.texi:3099
#, no-wrap
msgid "Reviewing the Work of Others"
msgstr "Revendo o trabalho de outros"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Some guidelines for sharing reviews."
msgstr "Algumas diretrizes para compartilhar avaliações."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3201
#: guix-git/doc/contributing.texi:3202
#, no-wrap
msgid "Updating the Guix Package"
msgstr "Atualizando o pacote Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Updating the Guix package definition."
msgstr "Atualizando a definição do pacote Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3238
#: guix-git/doc/contributing.texi:3239
#, no-wrap
msgid "Deprecation Policy"
msgstr "Política de depreciação"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Commitments and tools for deprecation."
msgstr "Compromissos e ferramentas para depreciação."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3429
#: guix-git/doc/contributing.texi:3430
#, no-wrap
msgid "Writing Documentation"
msgstr "Escrevendo documentação"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Improving documentation in GNU Guix."
msgstr "Melhorando a documentação no GNU Guix."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3473
#: guix-git/doc/contributing.texi:3474
#, no-wrap
msgid "Translating Guix"
msgstr "Traduzindo o Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Make Guix speak your native language."
msgstr "Faça o Guix falar sua língua nativa."

#. type: section
#: guix-git/doc/contributing.texi:43 guix-git/doc/contributing.texi:3756
#: guix-git/doc/contributing.texi:3757
#, no-wrap
msgid "Contributing to Guix's Infrastructure"
msgstr "Contribuindo para a infraestrutura Guix"

#. type: menuentry
#: guix-git/doc/contributing.texi:43
msgid "Make Guix ecosystem work better."
msgstr "Faça o ecossistema do guix funcionar melhor."

#. type: Plain text
#: guix-git/doc/contributing.texi:50
msgid "You can easily hack on Guix itself using Guix and Git, which we use for version control (@pxref{Building from Git})."
msgstr "Você pode facilmente hackear o próprio Guix usando Guix e Git, que usamos para controle de versão (@pxref{Building from Git})."

#. type: Plain text
#: guix-git/doc/contributing.texi:55
msgid "But when packaging Guix for foreign distros or when bootstrapping on systems without Guix, and if you decide to not just trust and install our readily made binary (@pxref{Binary Installation}), you can download a release version of our reproducible source tarball and read on."
msgstr "Mas ao empacotar o Guix para distribuições estrangeiras ou ao inicializar em sistemas sem Guix, e se você decidir não confiar e instalar nosso binário prontamente criado (@pxref{Binary Installation}), você pode baixar uma versão de lançamento do nosso tarball de código-fonte reproduzível e continuar lendo."

#. type: Plain text
#: guix-git/doc/contributing.texi:60
msgid "This section lists requirements when building Guix from source.  The build procedure for Guix is the same as for other GNU software, and is not covered here.  Please see the files @file{README} and @file{INSTALL} in the Guix source tree for additional details."
msgstr "Esta seção lista os requisitos ao compilar o Guix a partir do fonte. O procedimento de compilação do Guix é o mesmo que para outros softwares GNU, e não é coberto aqui. Por favor, veja os arquivos @file{README} e @file{INSTALL} na árvore fonte do Guix para detalhes adicionais."

#. type: cindex
#: guix-git/doc/contributing.texi:61
#, no-wrap
msgid "official website"
msgstr "site oficial"

#. type: Plain text
#: guix-git/doc/contributing.texi:64
msgid "GNU Guix is available for download from its website at @url{https://guix.gnu.org}."
msgstr "O GNU Guix está disponível para download em seu site em @url{https://guix.gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:66
msgid "GNU Guix depends on the following packages:"
msgstr "GNU Guix depende dos seguintes pacotes:"

#. type: item
#: guix-git/doc/contributing.texi:68
#, no-wrap
msgid "@url{https://gnu.org/software/guile/, GNU Guile}, version 3.0.x,"
msgstr "@url{https://gnu.org/software/guile/, GNU Guile}, versão 3.0.x,"

#. type: itemize
#: guix-git/doc/contributing.texi:70
msgid "version 3.0.3 or later;"
msgstr "versão 3.0.3 ou posterior;"

#. type: item
#: guix-git/doc/contributing.texi:70
#, no-wrap
msgid "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt}, version"
msgstr "@url{https://notabug.org/cwebber/guile-gcrypt, Guile-Gcrypt}, versão"

#. type: itemize
#: guix-git/doc/contributing.texi:72
msgid "0.1.0 or later;"
msgstr "0.1.0 ou posterior;"

#. type: itemize
#: guix-git/doc/contributing.texi:78
msgid "@uref{https://gitlab.com/gnutls/guile/, Guile-GnuTLS} (@pxref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile})@footnote{The Guile bindings to @uref{https://gnutls.org/, GnuTLS} were distributed as part of GnuTLS until version 3.7.8 included.};"
msgstr "@uref{https://gitlab.com/gnutls/guile/, Guile-GnuTLS} (@pxref{Guile Preparations, como instalar as ligações do GnuTLS para o Guile, gnutls-guile, GnuTLS-Guile})@footnote{As ligações do Guile para @uref{https://gnutls.org/, GnuTLS} foram distribuídas como parte do GnuTLS até a versão 3.7.8 incluída.};"

#. type: itemize
#: guix-git/doc/contributing.texi:81
msgid "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3}, version 0.1.0 or later;"
msgstr "@uref{https://notabug.org/guile-sqlite3/guile-sqlite3, Guile-SQLite3}, versão 0.1.0 ou posterior;"

#. type: item
#: guix-git/doc/contributing.texi:81
#, no-wrap
msgid "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"
msgstr "@uref{https://notabug.org/guile-zlib/guile-zlib, Guile-zlib},"

#. type: itemize
#: guix-git/doc/contributing.texi:83
msgid "version 0.1.0 or later;"
msgstr "versão 0.1.0 ou posterior;"

#. type: item
#: guix-git/doc/contributing.texi:83
#, no-wrap
msgid "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"
msgstr "@uref{https://notabug.org/guile-lzlib/guile-lzlib, Guile-lzlib};"

#. type: item
#: guix-git/doc/contributing.texi:84
#, no-wrap
msgid "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"
msgstr "@uref{https://www.nongnu.org/guile-avahi/, Guile-Avahi};"

#. type: itemize
#: guix-git/doc/contributing.texi:88
msgid "@uref{https://gitlab.com/guile-git/guile-git, Guile-Git}, version 0.10.0 or later;"
msgstr "@uref{https://gitlab.com/guile-git/guile-git, Guile-Git}, versão 0.10.0 ou posterior;"

#. type: item
#: guix-git/doc/contributing.texi:88
#, no-wrap
msgid "@uref{https://git-scm.com, Git} (yes, both!);"
msgstr "@uref{https://git-scm.com, Git} (sim, ambos!);"

#. type: item
#: guix-git/doc/contributing.texi:89
#, no-wrap
msgid "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"
msgstr "@uref{https://github.com/aconchillo/guile-json, Guile-JSON}"

#. type: itemize
#: guix-git/doc/contributing.texi:91
msgid "4.3.0 or later;"
msgstr "4.3.0 ou posterior;"

#. type: item
#: guix-git/doc/contributing.texi:91
#, no-wrap
msgid "@url{https://www.gnu.org/software/make/, GNU Make}."
msgstr "@url{https://www.gnu.org/software/make/, GNU Make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:95
msgid "The following dependencies are optional:"
msgstr "As seguintes dependências são opcionais:"

#. type: itemize
#: guix-git/doc/contributing.texi:103
msgid "Support for build offloading (@pxref{Daemon Offload Setup}) and @command{guix copy} (@pxref{Invoking guix copy}) depends on @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH}, version 0.13.0 or later."
msgstr "O suporte para descarregamento de compilação (@pxref{Daemon Offload Setup}) e @command{guix copy} (@pxref{Invoking guix copy}) depende do @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH}, versão 0.13.0 ou posterior."

#. type: itemize
#: guix-git/doc/contributing.texi:108
msgid "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, for zstd compression and decompression in @command{guix publish} and for substitutes (@pxref{Invoking guix publish})."
msgstr "@uref{https://notabug.org/guile-zstd/guile-zstd, Guile-zstd}, para compressão e descompressão zstd em @command{guix publish} e para substitutos (@pxref{Invoking guix publish})."

#. type: itemize
#: guix-git/doc/contributing.texi:112
msgid "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} for the @code{crate} importer (@pxref{Invoking guix import})."
msgstr "@uref{https://ngyro.com/software/guile-semver.html, Guile-Semver} para o importador @code{crate} (@pxref{Invoking guix import})."

#. type: itemize
#: guix-git/doc/contributing.texi:117
msgid "@uref{https://www.nongnu.org/guile-lib/doc/ref/htmlprag/, Guile-Lib} for the @code{go} importer (@pxref{Invoking guix import}) and for some of the ``updaters'' (@pxref{Invoking guix refresh})."
msgstr "@uref{https://www.nongnu.org/guile-lib/doc/ref/htmlprag/, Guile-Lib} para o importador @code{go} (@pxref{Invoking guix import}) e para alguns dos ``atualizadores'' (@pxref{Invoking guix refresh})."

#. type: itemize
#: guix-git/doc/contributing.texi:121
msgid "When @url{http://www.bzip.org, libbz2} is available, @command{guix-daemon} can use it to compress build logs."
msgstr "Quando @url{http://www.bzip.org, libbz2} está disponível, @command{guix-daemon} pode usá-lo para comprimir logs de compilação."

#. type: Plain text
#: guix-git/doc/contributing.texi:125
msgid "Unless @option{--disable-daemon} was passed to @command{configure}, the following packages are also needed:"
msgstr "A menos que @option{--disable-daemon} tenha sido passado para @command{configure}, os seguintes pacotes também são necessários:"

#. type: item
#: guix-git/doc/contributing.texi:127
#, no-wrap
msgid "@url{https://gnupg.org/, GNU libgcrypt};"
msgstr "@url{https://gnupg.org/, GNU libgcrypt};"

#. type: item
#: guix-git/doc/contributing.texi:128
#, no-wrap
msgid "@url{https://sqlite.org, SQLite 3};"
msgstr "@url{https://sqlite.org, SQLite 3};"

#. type: item
#: guix-git/doc/contributing.texi:129
#, no-wrap
msgid "@url{https://gcc.gnu.org, GCC's g++}, with support for the"
msgstr "@url{https://gcc.gnu.org, GCC's g++}, com suporte ao"

#. type: itemize
#: guix-git/doc/contributing.texi:131
msgid "C++11 standard."
msgstr "padrão C++11."

#. type: Plain text
#: guix-git/doc/contributing.texi:138
msgid "If you want to hack Guix itself, it is recommended to use the latest version from the Git repository:"
msgstr "Se você quiser hackear o próprio Guix, é recomendado usar a versão mais recente do repositório Git:"

#. type: example
#: guix-git/doc/contributing.texi:141
#, no-wrap
msgid "git clone https://git.guix.gnu.org/guix.git\n"
msgstr "git clone https://git.guix.gnu.org/guix.git\n"

#. type: cindex
#: guix-git/doc/contributing.texi:143
#, no-wrap
msgid "authentication, of a Guix checkout"
msgstr "autenticação, de um checkout Guix"

#. type: Plain text
#: guix-git/doc/contributing.texi:148
msgid "How do you ensure that you obtained a genuine copy of the repository? To do that, run @command{guix git authenticate}, passing it the commit and OpenPGP fingerprint of the @dfn{channel introduction} (@pxref{Invoking guix git authenticate}):"
msgstr "Como você garante que obteve uma cópia genuína do repositório? Para fazer isso, execute @command{guix git authenticate}, passando a ele o commit e a impressão digital OpenPGP do @dfn{introdução ao canal} (@pxref{Invoking guix git authenticate}):"

#. type: example
#: guix-git/doc/contributing.texi:155
#, no-wrap
msgid ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"git fetch origin keyring:keyring\n"
"guix git authenticate 9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:160
msgid "This command completes with exit code zero on success; it prints an error message and exits with a non-zero code otherwise."
msgstr "Este comando é concluído com um código de saída zero em caso de sucesso; caso contrário, ele imprime uma mensagem de erro e sai com um código diferente de zero."

#. type: Plain text
#: guix-git/doc/contributing.texi:167
msgid "As you can see, there is a chicken-and-egg problem: you first need to have Guix installed.  Typically you would install Guix System (@pxref{System Installation}) or Guix on top of another distro (@pxref{Binary Installation}); in either case, you would verify the OpenPGP signature on the installation medium.  This ``bootstraps'' the trust chain."
msgstr "Como você pode ver, há um problema de ovo e galinha: primeiro você precisa ter o Guix instalado. Normalmente você instalaria o Guix System (@pxref{System Installation}) ou o Guix em cima de outra distro (@pxref{Binary Installation}); em ambos os casos, você verificaria a assinatura OpenPGP na mídia de instalação. Isso ``bootstraps'' a cadeia de confiança."

#. type: Plain text
#: guix-git/doc/contributing.texi:172
msgid "The easiest way to set up a development environment for Guix is, of course, by using Guix! The following command starts a new shell where all the dependencies and appropriate environment variables are set up to hack on Guix:"
msgstr "A maneira mais fácil de configurar um ambiente de desenvolvimento para Guix é, claro, usando Guix! O comando a seguir inicia um novo shell onde todas as dependências e variáveis de ambiente apropriadas são configuradas para hackear em Guix:"

#. type: example
#: guix-git/doc/contributing.texi:175
#, no-wrap
msgid "guix shell -D guix -CPW\n"
msgstr "guix shell -D guix -CPW\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:178
msgid "or even, from within a Git worktree for Guix:"
msgstr "ou mesmo, de dentro de uma árvore de trabalho Git para Guix:"

#. type: example
#: guix-git/doc/contributing.texi:181
#, no-wrap
msgid "guix shell -CPW\n"
msgstr "guix shell -CPW\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:186
msgid "If @option{-C} (short for @option{--container}) is not supported on your system, try @command{--pure} instead of @option{-CPW}.  @xref{Invoking guix shell}, for more information on that command."
msgstr "Se @option{-C} (abreviação de @option{--container}) não for compatível com seu sistema, tente @command{--pure} em vez de @option{-CPW}. @xref{Invoking guix shell}, para obter mais informações sobre esse comando."

#. type: Plain text
#: guix-git/doc/contributing.texi:190
msgid "If you are unable to use Guix when building Guix from a checkout, the following are the required packages in addition to those mentioned in the installation instructions (@pxref{Requirements})."
msgstr "Se você não conseguir usar o Guix ao criar o Guix a partir de um checkout, a seguir estão os pacotes necessários, além daqueles mencionados nas instruções de instalação (@pxref{Requirements})."

#. type: item
#: guix-git/doc/contributing.texi:192
#, no-wrap
msgid "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"
msgstr "@url{https://gnu.org/software/autoconf/, GNU Autoconf};"

#. type: item
#: guix-git/doc/contributing.texi:193
#, no-wrap
msgid "@url{https://gnu.org/software/automake/, GNU Automake};"
msgstr "@url{https://gnu.org/software/automake/, GNU Automake};"

#. type: item
#: guix-git/doc/contributing.texi:194
#, no-wrap
msgid "@url{https://gnu.org/software/gettext/, GNU Gettext};"
msgstr "@url{https://gnu.org/software/gettext/, GNU Gettext};"

#. type: item
#: guix-git/doc/contributing.texi:195
#, no-wrap
msgid "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"
msgstr "@url{https://gnu.org/software/texinfo/, GNU Texinfo};"

#. type: item
#: guix-git/doc/contributing.texi:196
#, no-wrap
msgid "@url{https://www.graphviz.org/, Graphviz};"
msgstr "@url{https://www.graphviz.org/, Graphviz};"

#. type: item
#: guix-git/doc/contributing.texi:197
#, no-wrap
msgid "@url{https://www.gnu.org/software/help2man/, GNU Help2man (optional)}."
msgstr "@url{https://www.gnu.org/software/help2man/, GNU Help2man (opcional)}."

#. type: Plain text
#: guix-git/doc/contributing.texi:202
msgid "On Guix, extra dependencies can be added by instead running @command{guix shell}:"
msgstr "No Guix, dependências extras podem ser adicionadas executando @command{guix shell}:"

#. type: example
#: guix-git/doc/contributing.texi:205
#, no-wrap
msgid "guix shell -D guix help2man git strace --pure\n"
msgstr "guix shell -D guix help2man git strace --pure\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:209
msgid "From there you can generate the build system infrastructure using Autoconf and Automake:"
msgstr "A partir daí você pode gerar a infraestrutura do sistema de construção usando Autoconf e Automake:"

#. type: example
#: guix-git/doc/contributing.texi:212
#, no-wrap
msgid "./bootstrap\n"
msgstr "./bootstrap\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:215
msgid "If you get an error like this one:"
msgstr "Se você receber um erro como este:"

#. type: example
#: guix-git/doc/contributing.texi:218
#, no-wrap
msgid "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"
msgstr "configure.ac:46: error: possibly undefined macro: PKG_CHECK_MODULES\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:227
msgid "it probably means that Autoconf couldn’t find @file{pkg.m4}, which is provided by pkg-config.  Make sure that @file{pkg.m4} is available.  The same holds for the @file{guile.m4} set of macros provided by Guile.  For instance, if you installed Automake in @file{/usr/local}, it wouldn’t look for @file{.m4} files in @file{/usr/share}.  In that case, you have to invoke the following command:"
msgstr "provavelmente significa que o Autoconf não conseguiu encontrar o @file{pkg.m4}, que é fornecido pelo pkg-config. Certifique-se de que @file{pkg.m4} esteja disponível. O mesmo vale para o conjunto de macros @file{guile.m4} fornecido pelo Guile. Por exemplo, se você instalou o Automake em @file{/usr/local}, ele não procuraria arquivos @file{.m4} em @file{/usr/share}. Nesse caso, você tem que invocar o seguinte comando:"

#. type: example
#: guix-git/doc/contributing.texi:230
#, no-wrap
msgid "export ACLOCAL_PATH=/usr/share/aclocal\n"
msgstr "export ACLOCAL_PATH=/usr/share/aclocal\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:234
msgid "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, for more information."
msgstr "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, para mais informações."

#. type: cindex
#: guix-git/doc/contributing.texi:235
#, no-wrap
msgid "state directory"
msgstr "diretório de estado"

#. type: cindex
#: guix-git/doc/contributing.texi:236
#, no-wrap
msgid "localstatedir"
msgstr "localstatedir"

#. type: cindex
#: guix-git/doc/contributing.texi:237
#, no-wrap
msgid "system configuration directory"
msgstr "diretório de configuração do sistema"

#. type: cindex
#: guix-git/doc/contributing.texi:238
#, no-wrap
msgid "sysconfdir"
msgstr "sysconfdir"

#. type: Plain text
#: guix-git/doc/contributing.texi:240
msgid "Then, run:"
msgstr "Então, execute:"

#. type: example
#: guix-git/doc/contributing.texi:243
#, no-wrap
msgid "./configure\n"
msgstr "./configure\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:253
msgid "Optionally, @code{--localstatedir} and @code{--sysconfdir} can also be provided as arguments.  By default, @code{localstatedir} is @file{/var} (@pxref{The Store}, for information about this) and @code{sysconfdir} is @file{/etc}.  Note that you will probably not run @command{make install} at the end (you don't have to) but it's still important to pass the right @code{localstatedir} and @code{sysconfdir} values, which get recorded in the @code{(guix config)} Guile module."
msgstr "Opcionalmente, @code{--localstatedir} e @code{--sysconfdir} podem também ser providenciados como argumentos.  Por padrão, @code{localstatedir} é @file{/var} (@pxref{The Store}, para obter informações sobre isso) e @file{/etc} é o valor normal de @code{sysconfdir}. Observe que você provavelmente não executará @command{make install} no final (não é necessário), mas ainda é importante passar os valores @code{localstatedir} e @code{sysconfdir} corretos, que são registrados no módulo @code{(guix config)} do Guile."

#. type: Plain text
#: guix-git/doc/contributing.texi:256
msgid "Finally, you can build Guix and, if you feel so inclined, run the tests (@pxref{Running the Test Suite}):"
msgstr "Finalmente, você pode construir o Guix e, se desejar, executar os testes (@pxref{Running the Test Suite}):"

#. type: example
#: guix-git/doc/contributing.texi:260
#, no-wrap
msgid ""
"make\n"
"make check\n"
msgstr ""
"make\n"
"make check\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:266
msgid "If anything fails, take a look at installation instructions (@pxref{Installation}) or send a message to the @email{guix-devel@@gnu.org, mailing list}."
msgstr "Se alguma coisa falhar, dê uma olhada nas instruções de instalação (@pxref{Installation}) ou envie uma mensagem para a @email{guix-devel@@gnu.org, a lista de discussão}."

#. type: Plain text
#: guix-git/doc/contributing.texi:269
msgid "From there on, you can authenticate all the commits included in your checkout by running:"
msgstr "A partir daí, você pode autenticar todos os commits incluídos no seu checkout executando:"

#. type: example
#: guix-git/doc/contributing.texi:274
#, no-wrap
msgid ""
"guix git authenticate \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:281
msgid "The first run takes a couple of minutes, but subsequent runs are faster.  On subsequent runs, you can run the command without any arguments since the @dfn{introduction} (the commit ID and OpenPGP fingerprints above)  will have been recorded@footnote{This requires a recent version of Guix, from May 2024 or more recent.}:"
msgstr "A primeira execução leva alguns minutos, mas as execuções subsequentes são mais rápidas. Em execuções subsequentes, você pode executar o comando sem argumentos, já que o @dfn{introduction} (o ID de confirmação e as impressões digitais do OpenPGP acima) terão sido registrados@footnote{Isso requer uma versão recente do Guix, de maio de 2024 ou mais recente.}:"

#. type: example
#: guix-git/doc/contributing.texi:284 guix-git/doc/contributing.texi:2969
#, no-wrap
msgid "guix git authenticate\n"
msgstr "guix git authenticate\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:291
msgid "When your configuration for your local Git repository doesn't match the default one, you can provide the reference for the @code{keyring} branch @i{via} the @option{-k} option.  The following example assumes that you have a Git remote called @samp{myremote} pointing to the official repository:"
msgstr "Quando sua configuração para seu repositório Git local não corresponde ao padrão, você pode fornecer a referência para o branch @code{keyring} @i{via} a opção @option{-k}. O exemplo a seguir pressupõe que você tenha um Git remoto chamado @samp{myremote} apontando para o repositório oficial:"

#. type: example
#: guix-git/doc/contributing.texi:297
#, no-wrap
msgid ""
"guix git authenticate \\\n"
"  -k myremote/keyring \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"
msgstr ""
"guix git authenticate \\\n"
"  -k myremote/keyring \\\n"
"  9edb3f66fd807b096b48283debdcddccfea34bad \\\n"
"  \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:301
msgid "@xref{Invoking guix git authenticate}, for more information on this command."
msgstr "@xref{Invoking guix git authenticate}, para mais informações sobre este comando."

#. type: quotation
#: guix-git/doc/contributing.texi:302 guix-git/doc/contributing.texi:1525
#: guix-git/doc/contributing.texi:2162 guix-git/doc/contributing.texi:2207
#: guix-git/doc/contributing.texi:2230 guix-git/doc/contributing.texi:2255
#: guix-git/doc/contributing.texi:2942 guix-git/doc/guix.texi:824
#: guix-git/doc/guix.texi:850 guix-git/doc/guix.texi:1340
#: guix-git/doc/guix.texi:1365 guix-git/doc/guix.texi:1438
#: guix-git/doc/guix.texi:1838 guix-git/doc/guix.texi:2062
#: guix-git/doc/guix.texi:2141 guix-git/doc/guix.texi:2329
#: guix-git/doc/guix.texi:2551 guix-git/doc/guix.texi:3848
#: guix-git/doc/guix.texi:4260 guix-git/doc/guix.texi:4780
#: guix-git/doc/guix.texi:4794 guix-git/doc/guix.texi:4877
#: guix-git/doc/guix.texi:4892 guix-git/doc/guix.texi:4955
#: guix-git/doc/guix.texi:5185 guix-git/doc/guix.texi:6099
#: guix-git/doc/guix.texi:6132 guix-git/doc/guix.texi:6764
#: guix-git/doc/guix.texi:7043 guix-git/doc/guix.texi:7177
#: guix-git/doc/guix.texi:7206 guix-git/doc/guix.texi:7247
#: guix-git/doc/guix.texi:7293 guix-git/doc/guix.texi:7300
#: guix-git/doc/guix.texi:7344 guix-git/doc/guix.texi:8995
#: guix-git/doc/guix.texi:11361 guix-git/doc/guix.texi:11510
#: guix-git/doc/guix.texi:11580 guix-git/doc/guix.texi:13564
#: guix-git/doc/guix.texi:13604 guix-git/doc/guix.texi:13706
#: guix-git/doc/guix.texi:13874 guix-git/doc/guix.texi:13981
#: guix-git/doc/guix.texi:13993 guix-git/doc/guix.texi:14901
#: guix-git/doc/guix.texi:16918 guix-git/doc/guix.texi:17449
#: guix-git/doc/guix.texi:17507 guix-git/doc/guix.texi:17540
#: guix-git/doc/guix.texi:17618 guix-git/doc/guix.texi:18019
#: guix-git/doc/guix.texi:19071 guix-git/doc/guix.texi:19641
#: guix-git/doc/guix.texi:20128 guix-git/doc/guix.texi:20238
#: guix-git/doc/guix.texi:20299 guix-git/doc/guix.texi:21192
#: guix-git/doc/guix.texi:23425 guix-git/doc/guix.texi:24689
#: guix-git/doc/guix.texi:24872 guix-git/doc/guix.texi:24933
#: guix-git/doc/guix.texi:25409 guix-git/doc/guix.texi:30631
#: guix-git/doc/guix.texi:31981 guix-git/doc/guix.texi:35503
#: guix-git/doc/guix.texi:36411 guix-git/doc/guix.texi:38825
#: guix-git/doc/guix.texi:38836 guix-git/doc/guix.texi:38847
#: guix-git/doc/guix.texi:40058 guix-git/doc/guix.texi:40497
#: guix-git/doc/guix.texi:43943 guix-git/doc/guix.texi:45371
#: guix-git/doc/guix.texi:45999 guix-git/doc/guix.texi:46073
#: guix-git/doc/guix.texi:46115 guix-git/doc/guix.texi:46461
#: guix-git/doc/guix.texi:46644 guix-git/doc/guix.texi:46657
#: guix-git/doc/guix.texi:46825 guix-git/doc/guix.texi:46932
#: guix-git/doc/guix.texi:46978 guix-git/doc/guix.texi:47035
#: guix-git/doc/guix.texi:47062 guix-git/doc/guix.texi:47550
#: guix-git/doc/guix.texi:49114 guix-git/doc/guix.texi:49165
#: guix-git/doc/guix.texi:49221 guix-git/doc/guix.texi:49330
#: guix-git/doc/guix.texi:49990 guix-git/doc/guix.texi:51842
#: guix-git/doc/guix.texi:51888 guix-git/doc/guix.texi:51982
#: guix-git/doc/guix.texi:52047 guix-git/doc/guix.texi:52482
#: guix-git/doc/guix.texi:52526
#, no-wrap
msgid "Note"
msgstr "Nota"

#. type: quotation
#: guix-git/doc/contributing.texi:306
msgid "By default, hooks are installed such that @command{guix git authenticate} is invoked anytime you run @command{git pull} or @command{git push}."
msgstr "Por padrão, os hooks são instalados de forma que @command{guix git authenticate} seja invocado sempre que você executar @command{git pull} ou @command{git push}."

#. type: Plain text
#: guix-git/doc/contributing.texi:310
msgid "After updating the repository, @command{make} might fail with an error similar to the following example:"
msgstr "Após atualizar o repositório, @command{make} pode falhar com um erro semelhante ao exemplo a seguir:"

#. type: example
#: guix-git/doc/contributing.texi:314
#, no-wrap
msgid ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"
msgstr ""
"error: failed to load 'gnu/packages/linux.scm':\n"
"ice-9/eval.scm:293:34: In procedure abi-check: #<record-type <origin>>: record ABI mismatch; recompilation needed\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:320
msgid "This means that one of the record types that Guix defines (in this example, the @code{origin} record) has changed, and all of guix needs to be recompiled to take that change into account.  To do so, run @command{make clean-go} followed by @command{make}."
msgstr "Isso significa que um dos tipos de registro que o Guix define (neste exemplo, o registro @code{origin}) foi alterado e todo o guix precisa ser recompilado para levar essa mudança em consideração. Para fazer isso, execute @command{make clean-go} seguido de @command{make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:324
msgid "Should @command{make} fail with an Automake error message after updating, you need to repeat the steps outlined in this section, commencing with @command{./bootstrap}."
msgstr "Caso @command{make} falhe com uma mensagem de erro do Automake após a atualização, você precisará repetir as etapas descritas nesta seção, começando com @command{./bootstrap}."

#. type: cindex
#: guix-git/doc/contributing.texi:328
#, no-wrap
msgid "test suite"
msgstr "suíte/conjunto de testes"

#. type: Plain text
#: guix-git/doc/contributing.texi:334
msgid "After a successful @command{configure} and @code{make} run, it is a good idea to run the test suite.  It can help catch issues with the setup or environment, or bugs in Guix itself---and really, reporting test failures is a good way to help improve the software.  To run the test suite, type:"
msgstr "Depois que um @command{configure} e @code{make} bem-sucedido forem executados, é uma boa ideia executar o conjunto de testes. Ele pode ajudar a detectar problemas com a configuração ou o ambiente, ou com bugs no próprio Guix – e realmente, relatar falhas de teste é uma boa maneira de ajudar a melhorar o software. Para executar o conjunto de testes, digite:"

#. type: example
#: guix-git/doc/contributing.texi:337
#, no-wrap
msgid "make check\n"
msgstr "make check\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:344
msgid "Test cases can run in parallel: you can use the @code{-j} option of GNU@tie{}make to speed things up.  The first run may take a few minutes on a recent machine; subsequent runs will be faster because the store that is created for test purposes will already have various things in cache."
msgstr "Os casos de teste podem ser executados em paralelo: você pode usar a opção @code{-j} do GNU@tie{}make para acelerar as coisas. A primeira execução pode levar alguns minutos em uma máquina recente; as execuções subsequentes serão mais rápidas porque o armazém criado para fins de teste já terá vários itens no cache."

#. type: Plain text
#: guix-git/doc/contributing.texi:347
msgid "It is also possible to run a subset of the tests by defining the @code{TESTS} makefile variable as in this example:"
msgstr "Também é possível executar um subconjunto dos testes definindo a variável makefile @code{TESTS} como neste exemplo:"

#. type: example
#: guix-git/doc/contributing.texi:350
#, no-wrap
msgid "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"
msgstr "make check TESTS=\"tests/store.scm tests/cpio.scm\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:355
msgid "By default, tests results are displayed at a file level.  In order to see the details of every individual test cases, it is possible to define the @code{SCM_LOG_DRIVER_FLAGS} makefile variable as in this example:"
msgstr "Por padrão, os resultados dos testes são exibidos em um nível de arquivo. Para ver os detalhes de cada caso de teste individual, é possível definir a variável makefile @code{SCM_LOG_DRIVER_FLAGS} como neste exemplo:"

#. type: example
#: guix-git/doc/contributing.texi:358
#, no-wrap
msgid "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"
msgstr "make check TESTS=\"tests/base64.scm\" SCM_LOG_DRIVER_FLAGS=\"--brief=no\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:366
msgid "The underlying SRFI 64 custom Automake test driver used for the 'check' test suite (located at @file{build-aux/test-driver.scm}) also allows selecting which test cases to run at a finer level, via its @option{--select} and @option{--exclude} options.  Here's an example, to run all the test cases from the @file{tests/packages.scm} test file whose names start with ``transaction-upgrade-entry'':"
msgstr "O driver de teste Automake personalizado SRFI 64 subjacente usado para o conjunto de testes 'check' (localizado em @file{build-aux/test-driver.scm}) também permite selecionar quais casos de teste executar em um nível mais fino, por meio de suas opções @option{--select} e @option{--exclude}. Aqui está um exemplo, para executar todos os casos de teste do arquivo de teste @file{tests/packages.scm} cujos nomes começam com ``transaction-upgrade-entry'':"

#. type: example
#: guix-git/doc/contributing.texi:370
#, no-wrap
msgid ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"
msgstr ""
"export SCM_LOG_DRIVER_FLAGS=\"--select=^transaction-upgrade-entry\"\n"
"make check TESTS=\"tests/packages.scm\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:376
msgid "Those wishing to inspect the results of failed tests directly from the command line can add the @option{--errors-only=yes} option to the @code{SCM_LOG_DRIVER_FLAGS} makefile variable and set the @code{VERBOSE} Automake makefile variable, as in:"
msgstr "Aqueles que desejam inspecionar os resultados de testes com falha diretamente da linha de comando podem adicionar a opção @option{--errors-only=yes} à variável makefile @code{SCM_LOG_DRIVER_FLAGS} e definir a variável makefile do Automake @code{VERBOSE}, como em:"

#. type: example
#: guix-git/doc/contributing.texi:379
#, no-wrap
msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --errors-only=yes\" VERBOSE=1\n"
msgstr "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --errors-only=yes\" VERBOSE=1\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:384
msgid "The @option{--show-duration=yes} option can be used to print the duration of the individual test cases, when used in combination with @option{--brief=no}:"
msgstr "A opção @option{--show-duration=yes} pode ser usada para imprimir a duração dos casos de teste individuais, quando usada em combinação com @option{--brief=no}:"

#. type: example
#: guix-git/doc/contributing.texi:387
#, no-wrap
msgid "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --show-duration=yes\"\n"
msgstr "make check SCM_LOG_DRIVER_FLAGS=\"--brief=no --show-duration=yes\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:391
msgid "@xref{Parallel Test Harness,,,automake,GNU Automake} for more information about the Automake Parallel Test Harness."
msgstr "@xref{Parallel Test Harness,,,automake,GNU Automake} para mais informações sobre o Automake Parallel Test Harness."

#. type: Plain text
#: guix-git/doc/contributing.texi:396
msgid "Upon failure, please email @email{bug-guix@@gnu.org} and attach the @file{test-suite.log} file.  Please specify the Guix version being used as well as version numbers of the dependencies (@pxref{Requirements}) in your message."
msgstr "Em caso de falha, envie um e-mail para @email{bug-guix@@gnu.org} e anexe o arquivo @file{test-suite.log}. Por favor, especifique a versão do Guix que está sendo usada, bem como os números de versão das dependências (@pxref{Requirements}) em sua mensagem."

#. type: Plain text
#: guix-git/doc/contributing.texi:400
msgid "Guix also comes with a whole-system test suite that tests complete Guix System instances.  It can only run on systems where Guix is already installed, using:"
msgstr "O Guix também vem com um conjunto de testes de sistema completo que testa instâncias completas do Guix System. Ele só pode ser executado em sistemas nos quais o Guix já está instalado, usando:"

#. type: example
#: guix-git/doc/contributing.texi:403
#, no-wrap
msgid "make check-system\n"
msgstr "make check-system\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:407
msgid "or, again, by defining @code{TESTS} to select a subset of tests to run:"
msgstr "ou, novamente, definindo @code{TESTS} para selecionar um subconjunto de testes a serem executados:"

#. type: example
#: guix-git/doc/contributing.texi:410
#, no-wrap
msgid "make check-system TESTS=\"basic mcron\"\n"
msgstr "make check-system TESTS=\"basic mcron\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:418
msgid "These system tests are defined in the @code{(gnu tests @dots{})} modules.  They work by running the operating systems under test with lightweight instrumentation in a virtual machine (VM).  They can be computationally intensive or rather cheap, depending on whether substitutes are available for their dependencies (@pxref{Substitutes}).  Some of them require a lot of storage space to hold VM images."
msgstr "Esses testes de sistema são definidos nos módulos @code{(gnu tests @dots{})}. Eles trabalham executando os sistemas operacionais em teste com instrumentação leve em uma máquina virtual (VM). Eles podem ser computacionalmente intensivos ou bastante baratos, dependendo se os substitutos estão disponíveis para suas dependências (@pxref{Substitutes}). Alguns deles exigem muito espaço de armazenamento para armazenar imagens de VM."

#. type: Plain text
#: guix-git/doc/contributing.texi:420
msgid "If you encounter an error like:"
msgstr "Se você encontrar um erro como:"

#. type: example
#: guix-git/doc/contributing.texi:426
#, no-wrap
msgid ""
"Compiling Scheme modules...\n"
"ice-9/eval.scm:142:16: In procedure compile-top-call:\n"
"error: all-system-tests: unbound variable\n"
"hint: Did you forget `(use-modules (gnu tests))'?\n"
msgstr ""
"Compiling Scheme modules...\n"
"ice-9/eval.scm:142:16: In procedure compile-top-call:\n"
"error: all-system-tests: unbound variable\n"
"dica: Você se esqueceu de `(use-modules (gnu tests))'?\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:432
msgid "there may be inconsistencies in the work tree from previous builds.  To resolve this, try running @command{make clean-go} followed by @command{make}."
msgstr "pode haver inconsistências na árvore de trabalho de compilações anteriores. Para resolver isso, tente executar @command{make clean-go} seguido por @command{make}."

#. type: Plain text
#: guix-git/doc/contributing.texi:435
msgid "Again in case of test failures, please send @email{bug-guix@@gnu.org} all the details."
msgstr "Novamente, em caso de falhas nos testes, por favor envie @email{bug-guix@@gnu.org} todos os detalhes."

#. type: Plain text
#: guix-git/doc/contributing.texi:443
msgid "In order to keep a sane working environment, you will find it useful to test the changes made in your local source tree checkout without actually installing them.  So that you can distinguish between your ``end-user'' hat and your ``motley'' costume."
msgstr "Para manter um ambiente de trabalho saudável, você achará útil testar as alterações feitas na árvore local de fontes sem realmente instalá-las. Para que você possa distinguir entre o seu chapéude ''usuário final'' e sua fantasia ''misturada''."

#. type: Plain text
#: guix-git/doc/contributing.texi:453
msgid "To that end, all the command-line tools can be used even if you have not run @code{make install}.  To do that, you first need to have an environment with all the dependencies available (@pxref{Building from Git}), and then simply prefix each command with @command{./pre-inst-env} (the @file{pre-inst-env} script lives in the top build tree of Guix; @pxref{Building from Git} to generate it).  As an example, here is how you would build the @code{hello} package as defined in your working tree (this assumes @command{guix-daemon} is already running on your system; it's OK if it's a different version):"
msgstr "Para esse fim, todas as ferramentas de linha de comando podem ser usadas mesmo se você não tiver executado @code{make install}. Para fazer isso, primeiro você precisa ter um ambiente com todas as dependências disponíveis (@pxref{Building from Git}) e, em seguida, simplesmente prefixar cada comando com @command{./pre-inst-env} (o @file{pre-inst-env} fica na árvore de construção superior do Guix; @pxref{Building from Git} para gerá-lo). Como exemplo, aqui está como você construiria o pacote @code{hello} conforme definido em sua árvore de trabalho (isso pressupõe que @command{guix-daemon} já esteja em execução em seu sistema; não há problema se for uma versão diferente):"

#. type: example
#: guix-git/doc/contributing.texi:456
#, no-wrap
msgid "$ ./pre-inst-env guix build hello\n"
msgstr "$ ./pre-inst-env guix build hello\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:460
msgid "Similarly, an example for a Guile session using the Guix modules:"
msgstr "Da mesma forma, um exemplo para uma sessão do Guile usando os módulos Guix:"

#. type: example
#: guix-git/doc/contributing.texi:463
#, no-wrap
msgid ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"
msgstr ""
"$ ./pre-inst-env guile -c '(use-modules (guix utils)) (pk (%current-system))'\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:465
#, no-wrap
msgid ";;; (\"x86_64-linux\")\n"
msgstr ";;; (\"x86_64-linux\")\n"

#. type: cindex
#: guix-git/doc/contributing.texi:468
#, no-wrap
msgid "REPL"
msgstr "REPL"

#. type: cindex
#: guix-git/doc/contributing.texi:469
#, no-wrap
msgid "read-eval-print loop"
msgstr "read-eval-print loop"

#. type: Plain text
#: guix-git/doc/contributing.texi:471
msgid "@dots{} and for a REPL (@pxref{Using Guix Interactively}):"
msgstr "@dots{} e para um REPL (@pxref{Using Guix Interactively}):"

#. type: example
#: guix-git/doc/contributing.texi:486
#, no-wrap
msgid ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"
msgstr ""
"$ ./pre-inst-env guile\n"
"scheme@@(guile-user)> ,use(guix)\n"
"scheme@@(guile-user)> ,use(gnu)\n"
"scheme@@(guile-user)> (define snakes\n"
"                       (fold-packages\n"
"                         (lambda (package lst)\n"
"                           (if (string-prefix? \"python\"\n"
"                                               (package-name package))\n"
"                               (cons package lst)\n"
"                               lst))\n"
"                         '()))\n"
"scheme@@(guile-user)> (length snakes)\n"
"$1 = 361\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:494
msgid "If you are hacking on the daemon and its supporting code or if @command{guix-daemon} is not already running on your system, you can launch it straight from the build tree@footnote{The @option{-E} flag to @command{sudo} guarantees that @code{GUILE_LOAD_PATH} is correctly set such that @command{guix-daemon} and the tools it uses can find the Guile modules they need.}:"
msgstr "Se você estiver hackeando o daemon e seu código de suporte ou se @command{guix-daemon} ainda não estiver em execução no seu sistema, você pode iniciá-lo diretamente da build tree@footnote{O sinalizador @option{-E} para @command{sudo} garante que @code{GUILE_LOAD_PATH} esteja configurado corretamente para que @command{guix-daemon} e as ferramentas que ele usa possam encontrar os módulos Guile necessários.}:"

#. type: example
#: guix-git/doc/contributing.texi:497
#, no-wrap
msgid "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"
msgstr "$ sudo -E ./pre-inst-env guix-daemon --build-users-group=guixbuild\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:501
msgid "The @command{pre-inst-env} script sets up all the environment variables necessary to support this, including @env{PATH} and @env{GUILE_LOAD_PATH}."
msgstr "O script @command{pre-inst-env} configura todas as variáveis de ambiente necessárias para prover suporte a isso, incluindo @env{PATH} e @env{GUILE_LOAD_PATH}."

#. type: Plain text
#: guix-git/doc/contributing.texi:506
msgid "Note that @command{./pre-inst-env guix pull} does @emph{not} upgrade the local source tree; it simply updates the @file{~/.config/guix/current} symlink (@pxref{Invoking guix pull}).  Run @command{git pull} instead if you want to upgrade your local source tree."
msgstr "Observe que @command{./pre-inst-env guix pull} @emph{não} atualiza a área de fontes local; ele simplesmente atualiza a ligação simbólica @file{~/.config/guix/current} (@pxref{Invoking guix pull}). Execute @command{git pull} em vez disso, se você quiser atualizar sua árvore de fontes local."

#. type: Plain text
#: guix-git/doc/contributing.texi:510
msgid "Sometimes, especially if you have recently updated your repository, running @command{./pre-inst-env} will print a message similar to the following example:"
msgstr "Às vezes, especialmente se você atualizou seu repositório recentemente, executar @command{./pre-inst-env} imprimirá uma mensagem semelhante ao exemplo a seguir:"

#. type: example
#: guix-git/doc/contributing.texi:514
#, no-wrap
msgid ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"
msgstr ""
";;; note: source file /home/user/projects/guix/guix/progress.scm\n"
";;;       newer than compiled /home/user/projects/guix/guix/progress.go\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:520
msgid "This is only a note and you can safely ignore it.  You can get rid of the message by running @command{make -j4}.  Until you do, Guile will run slightly slower because it will interpret the code instead of using prepared Guile object (@file{.go}) files."
msgstr "Esta é apenas uma nota e você pode ignorá-la com segurança. Você pode se livrar da mensagem executando @command{make -j4}. Até que você faça isso, o Guile será executado um pouco mais devagar porque interpretará o código em vez de usar arquivos de objeto Guile preparados (@file{.go})."

#. type: Plain text
#: guix-git/doc/contributing.texi:525
msgid "You can run @command{make} automatically as you work using @command{watchexec} from the @code{watchexec} package.  For example, to build again each time you update a package file, run @samp{watchexec -w gnu/packages -- make -j4}."
msgstr "Você pode executar @command{make} automaticamente enquanto trabalha usando @command{watchexec} do pacote @code{watchexec}. Por exemplo, para compilar novamente cada vez que você atualizar um arquivo de pacote, execute @samp{watchexec -w gnu/packages -- make -j4}."

#. type: Plain text
#: guix-git/doc/contributing.texi:534
msgid "The Perfect Setup to hack on Guix is basically the perfect setup used for Guile hacking (@pxref{Using Guile in Emacs,,, guile, Guile Reference Manual}).  First, you need more than an editor, you need @url{https://www.gnu.org/software/emacs, Emacs}, empowered by the wonderful @url{https://nongnu.org/geiser/, Geiser}.  To set that up, run:"
msgstr "A configuração perfeita para hackear no Guix é basicamente a configuração perfeita usada para hackear o Guile (@pxref{Using Guile in Emacs,,, guile, Manual de referência do GNU Guile}). Primeiro, você precisa de mais do que um editor, você precisa de @url{https://www.gnu.org/software/emacs, Emacs}, capacitado pelo maravilhoso @url{https://nongnu.org/geiser/, Geiser }. Para configurar isso, execute:"

#. type: example
#: guix-git/doc/contributing.texi:537
#, no-wrap
msgid "guix install emacs guile emacs-geiser emacs-geiser-guile\n"
msgstr "guix install emacs guile emacs-geiser emacs-geiser-guile\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:547
msgid "Geiser allows for interactive and incremental development from within Emacs: code compilation and evaluation from within buffers, access to on-line documentation (docstrings), context-sensitive completion, @kbd{M-.} to jump to an object definition, a REPL to try out your code, and more (@pxref{Introduction,,, geiser, Geiser User Manual}).  If you allow Emacs to load the @file{.dir-locals.el} file at the root of the project checkout, it will cause Geiser to automatically add the local Guix sources to the Guile load path."
msgstr "O Geiser permite desenvolvimento interativo e incremental de dentro do Emacs: compilação e avaliação de código de dentro de buffers, acesso à documentação on-line (docstrings), conclusão sensível ao contexto, @kbd{M-.} para pular para uma definição de objeto, um REPL para testar seu código e muito mais (@pxref{Introduction,,, geiser, Manual do Usuário do Geiser}). Se você permitir que o Emacs carregue o arquivo @file{.dir-locals.el} na raiz do checkout do projeto, isso fará com que o Geiser adicione automaticamente as fontes locais do Guix ao caminho de carregamento do Guile."

#. type: Plain text
#: guix-git/doc/contributing.texi:554
msgid "To actually edit the code, Emacs already has a neat Scheme mode.  But in addition to that, you must not miss @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}.  It provides facilities to directly operate on the syntax tree, such as raising an s-expression or wrapping it, swallowing or rejecting the following s-expression, etc."
msgstr "Para realmente editar o código, o Emacs já possui um modo Scheme bacana. Mas além disso, você não deve perder @url{https://www.emacswiki.org/emacs/ParEdit, Paredit}. Ele fornece recursos para operar diretamente na árvore sintática, como aumentar ou agrupar uma expressão simbólica (S-expression), engolir ou rejeitar a expressão simbólica seguinte, etc."

#. type: cindex
#: guix-git/doc/contributing.texi:555
#, no-wrap
msgid "code snippets"
msgstr "trechos de código"

#. type: cindex
#: guix-git/doc/contributing.texi:556
#, no-wrap
msgid "templates"
msgstr "modelos"

#. type: cindex
#: guix-git/doc/contributing.texi:557
#, no-wrap
msgid "reducing boilerplate"
msgstr "reduzindo boilerplate"

#. type: Plain text
#: guix-git/doc/contributing.texi:567
msgid "We also provide templates for common git commit messages and package definitions in the @file{etc/snippets} directory.  These templates can be used to expand short trigger strings to interactive text snippets. If you use @url{https://joaotavora.github.io/yasnippet/, YASnippet}, you may want to add the @file{etc/snippets/yas} snippets directory to the @var{yas-snippet-dirs} variable.  If you use @url{https://github.com/minad/tempel/, Tempel}, you may want to add the @file{etc/snippets/tempel/*} path to the @var{tempel-path} variable in Emacs."
msgstr "Também fornecemos modelos para mensagens comuns de commit do git e definições de pacotes no diretório @file{etc/snippets}. Esses modelos podem ser usados para expandir sequências curtas de gatilho para trechos de texto interativos. Se você usar @url{https://joaotavora.github.io/yasnippet/, YASnippet}, você pode querer adicionar o diretório de snippets @file{etc/snippets/yas} ao @var{yas-snippet-dirs} variável. Se você usar @url{https://github.com/minad/tempel/, Tempel}, você pode querer adicionar o caminho @file{etc/snippets/tempel/*} à variável @var{tempel-path} no Emacs."

#. type: lisp
#: guix-git/doc/contributing.texi:579
#, no-wrap
msgid ""
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
";; @r{Yasnippet configuration}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Tempel configuration}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Ensure tempel-path is a list -- it may also be a string.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"
msgstr ""
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
";; @r{Yasnippet configuration}\n"
"(with-eval-after-load 'yasnippet\n"
"  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets/yas\"))\n"
";; @r{Tempel configuration}\n"
"(with-eval-after-load 'tempel\n"
"   ;; Certifique-se de que tempel-path seja uma lista — também pode ser uma string.\n"
"   (unless (listp 'tempel-path)\n"
"     (setq tempel-path (list tempel-path)))\n"
"   (add-to-list 'tempel-path \"~/src/guix/etc/snippets/tempel/*\"))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:587
msgid "The commit message snippets depend on @url{https://magit.vc/, Magit} to display staged files.  When editing a commit message type @code{add} followed by @kbd{TAB} to insert a commit message template for adding a package; type @code{update} followed by @kbd{TAB} to insert a template for updating a package; type @code{https} followed by @kbd{TAB} to insert a template for changing the home page URI of a package to HTTPS."
msgstr "Os trechos de mensagens de commit dependem de @url{https://magit.vc/, Magit} para exibir arquivos \"staged\". Ao editar uma mensagem de commit, digite @code{add} seguido por @kbd{TAB} para inserir um modelo de mensagem de commit para adicionar um pacote; digite @code{update} seguido por @kbd{TAB} para inserir um modelo para atualizar um pacote; digite @code{https} seguido por @kbd{TAB} para inserir um modelo para alterar a URI da página inicial de um pacote para HTTPS."

#. type: Plain text
#: guix-git/doc/contributing.texi:593
msgid "The main snippet for @code{scheme-mode} is triggered by typing @code{package...} followed by @kbd{TAB}.  This snippet also inserts the trigger string @code{origin...}, which can be expanded further.  The @code{origin} snippet in turn may insert other trigger strings ending on @code{...}, which also can be expanded further."
msgstr "O trecho principal para @code{scheme-mode} é acionado digitando @code{package ...} seguido de @kbd{TAB}. Esse trecho também insere a string de acionamento @code{origin...}, que pode ser expandida ainda mais. O trecho @code{origin}, por sua vez, pode inserir outras strings acionadoras que terminam em @code{...}, que também podem ser expandidas."

#. type: cindex
#: guix-git/doc/contributing.texi:594
#, no-wrap
msgid "insert or update copyright"
msgstr "inserir ou atualizar direitos autorais"

#. type: code{#1}
#: guix-git/doc/contributing.texi:595
#, no-wrap
msgid "M-x guix-copyright"
msgstr "M-x guix-copyright"

#. type: code{#1}
#: guix-git/doc/contributing.texi:596
#, no-wrap
msgid "M-x copyright-update"
msgstr "M-x copyright-update"

#. type: Plain text
#: guix-git/doc/contributing.texi:600
msgid "We additionally provide insertion and automatic update of a copyright in @file{etc/copyright.el}.  You may want to set your full name, mail, and load a file."
msgstr "Além disso, fornecemos inserção e atualização automática de direitos autorais em @file{etc/copyright.el}. Você pode definir seu nome completo, e-mail e carregar um arquivo."

#. type: lisp
#: guix-git/doc/contributing.texi:606
#, no-wrap
msgid ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"
msgstr ""
"(setq user-full-name \"Alice Doe\")\n"
"(setq user-mail-address \"alice@@mail.org\")\n"
";; @r{Supondo que o checkout do Guix esteja em ~/src/guix.}\n"
"(load-file \"~/src/guix/etc/copyright.el\")\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:609
msgid "To insert a copyright at the current line invoke @code{M-x guix-copyright}."
msgstr "Para inserir um copyright na linha atual, invoque @code{M-x guix-copyright}."

#. type: Plain text
#: guix-git/doc/contributing.texi:611
msgid "To update a copyright you need to specify a @code{copyright-names-regexp}."
msgstr "Para atualizar um copyright você precisa especificar um @code{copyright-names-regexp}."

#. type: lisp
#: guix-git/doc/contributing.texi:615
#, no-wrap
msgid ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"
msgstr ""
"(setq copyright-names-regexp\n"
"      (format \"%s <%s>\" user-full-name user-mail-address))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:621
msgid "You can check if your copyright is up to date by evaluating @code{M-x copyright-update}.  If you want to do it automatically after each buffer save then add @code{(add-hook 'after-save-hook 'copyright-update)} in Emacs."
msgstr "Você pode verificar se seus direitos autorais estão atualizados avaliando @code{M-x copyright-update}. Se você quiser fazer isso automaticamente após cada salvamento de buffer, adicione @code{(add-hook 'after-save-hook 'copyright-update)} no Emacs."

#. type: subsection
#: guix-git/doc/contributing.texi:622 guix-git/doc/contributing.texi:623
#, no-wrap
msgid "Viewing Bugs within Emacs"
msgstr "Visualizando Bugs no Emacs"

#. type: Plain text
#: guix-git/doc/contributing.texi:633
msgid "Emacs has a nice minor mode called @code{bug-reference}, which, when combined with @samp{emacs-debbugs} (the Emacs package), can be used to open links such as @samp{<https://bugs.gnu.org/58697>} or @samp{<https://issues.guix.gnu.org/58697>} as bug report buffers.  From there you can easily consult the email thread via the Gnus interface, reply or modify the bug status, all without leaving the comfort of Emacs! Below is a sample configuration to add to your @file{~/.emacs} configuration file:"
msgstr "O Emacs tem um modo secundário interessante chamado @code{bug-reference}, que, quando combinado com @samp{emacs-debbugs} (o pacote Emacs), pode ser usado para abrir links como @samp{<https://bugs .gnu.org/58697>} ou @samp{<https://issues.guix.gnu.org/58697>} como buffers de relatório de bugs. A partir daí você pode facilmente consultar o tópico do email através da interface do Gnus, responder ou modificar o status do bug, tudo sem sair do conforto do Emacs! Abaixo está um exemplo de configuração para adicionar ao seu arquivo de configuração @file{~/.emacs}:"

#. type: lisp
#: guix-git/doc/contributing.texi:642
#, no-wrap
msgid ""
";;; Bug references.\n"
"(require 'bug-reference)\n"
"(add-hook 'prog-mode-hook #'bug-reference-prog-mode)\n"
"(add-hook 'gnus-mode-hook #'bug-reference-mode)\n"
"(add-hook 'erc-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-summary-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-article-mode-hook #'bug-reference-mode)\n"
"\n"
msgstr ""
";;; Bug references.\n"
"(require 'bug-reference)\n"
"(add-hook 'prog-mode-hook #'bug-reference-prog-mode)\n"
"(add-hook 'gnus-mode-hook #'bug-reference-mode)\n"
"(add-hook 'erc-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-summary-mode-hook #'bug-reference-mode)\n"
"(add-hook 'gnus-article-mode-hook #'bug-reference-mode)\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:674
#, no-wrap
msgid ""
";;; This extends the default expression (the top-most, first expression\n"
";;; provided to 'or') to also match URLs such as\n"
";;; <https://issues.guix.gnu.org/58697> or <https://bugs.gnu.org/58697>.\n"
";;; It is also extended to detect \"Fixes: #NNNNN\" git trailers.\n"
"(setq bug-reference-bug-regexp\n"
"      (rx (group (or (seq word-boundary\n"
"                          (or (seq (char \"Bb\") \"ug\"\n"
"                                   (zero-or-one \" \")\n"
"                                   (zero-or-one \"#\"))\n"
"                              (seq (char \"Pp\") \"atch\"\n"
"                                   (zero-or-one \" \")\n"
"                                   \"#\")\n"
"                              (seq (char \"Ff\") \"ixes\"\n"
"                                   (zero-or-one \":\")\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"RFE\"\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"PR \"\n"
"                                   (one-or-more (char \"a-z+-\")) \"/\"))\n"
"                          (group (one-or-more (char \"0-9\"))\n"
"                                 (zero-or-one\n"
"                                  (seq \"#\" (one-or-more\n"
"                                            (char \"0-9\"))))))\n"
"                     (seq (? \"<\") \"https://bugs.gnu.org/\"\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))\n"
"                     (seq (? \"<\") \"https://issues.guix.gnu.org/\"\n"
"                          (? \"issue/\")\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))))))\n"
"(setq bug-reference-url-format \"https://issues.guix.gnu.org/%s\")\n"
"\n"
msgstr ""
";;; Isso estende a expressão padrão (a primeira expressão mais alta\n"
";;; fornecida para 'or') para também corresponder a URLs como\n"
";;; <https://issues.guix.gnu.org/58697> ou <https://bugs.gnu.org/58697>.\n"
";;; Também é estendido para detectar trailers git \"Fixes: #NNNNN\".\n"
"(setq bug-reference-bug-regexp\n"
"      (rx (group (or (seq word-boundary\n"
"                          (or (seq (char \"Bb\") \"ug\"\n"
"                                   (zero-or-one \" \")\n"
"                                   (zero-or-one \"#\"))\n"
"                              (seq (char \"Pp\") \"atch\"\n"
"                                   (zero-or-one \" \")\n"
"                                   \"#\")\n"
"                              (seq (char \"Ff\") \"ixes\"\n"
"                                   (zero-or-one \":\")\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"RFE\"\n"
"                                   (zero-or-one \" \") \"#\")\n"
"                              (seq \"PR \"\n"
"                                   (one-or-more (char \"a-z+-\")) \"/\"))\n"
"                          (group (one-or-more (char \"0-9\"))\n"
"                                 (zero-or-one\n"
"                                  (seq \"#\" (one-or-more\n"
"                                            (char \"0-9\"))))))\n"
"                     (seq (? \"<\") \"https://bugs.gnu.org/\"\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))\n"
"                     (seq (? \"<\") \"https://issues.guix.gnu.org/\"\n"
"                          (? \"issue/\")\n"
"                          (group-n 2 (one-or-more (char \"0-9\")))\n"
"                          (? \">\"))))))\n"
"(setq bug-reference-url-format \"https://issues.guix.gnu.org/%s\")\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:679
#, no-wrap
msgid ""
"(require 'debbugs)\n"
"(require 'debbugs-browse)\n"
"(add-hook 'bug-reference-mode-hook #'debbugs-browse-mode)\n"
"(add-hook 'bug-reference-prog-mode-hook #'debbugs-browse-mode)\n"
"\n"
msgstr ""
"(require 'debbugs)\n"
"(require 'debbugs-browse)\n"
"(add-hook 'bug-reference-mode-hook #'debbugs-browse-mode)\n"
"(add-hook 'bug-reference-prog-mode-hook #'debbugs-browse-mode)\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:690
#, no-wrap
msgid ""
";; The following allows Emacs Debbugs user to open the issue directly within\n"
";; Emacs.\n"
"(setq debbugs-browse-url-regexp\n"
"      (rx line-start\n"
"          \"http\" (zero-or-one \"s\") \"://\"\n"
"          (or \"debbugs\" \"issues.guix\" \"bugs\")\n"
"          \".gnu.org\" (one-or-more \"/\")\n"
"          (group (zero-or-one \"cgi/bugreport.cgi?bug=\"))\n"
"          (group-n 3 (one-or-more digit))\n"
"          line-end))\n"
"\n"
msgstr ""
";; O seguinte permite que o usuário do Emacs Debbugs abra o problema diretamente dentro\n"
"(setq debbugs-browse-url-regexp\n"
"      (rx line-start\n"
"          \"http\" (zero-or-one \"s\") \"://\"\n"
"          (or \"debbugs\" \"issues.guix\" \"bugs\")\n"
"          \".gnu.org\" (one-or-more \"/\")\n"
"          (group (zero-or-one \"cgi/bugreport.cgi?bug=\"))\n"
"          (group-n 3 (one-or-more digit))\n"
"          line-end))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:693
#, no-wrap
msgid ""
";; Change the default when run as 'M-x debbugs-gnu'.\n"
"(setq debbugs-gnu-default-packages '(\"guix\" \"guix-patches\"))\n"
"\n"
msgstr ""
";; Altera o padrão quando executado como 'M-x debbugs-gnu'.\n"
"(setq debbugs-gnu-default-packages '(\"guix\" \"guix-patches\"))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:697
#, no-wrap
msgid ""
";; Show feature requests.\n"
"(setq debbugs-gnu-default-severities\n"
" '(\"serious\" \"important\" \"normal\" \"minor\" \"wishlist\"))\n"
msgstr ""
";; Mostrar solicitações de recursos.\n"
"(setq debbugs-gnu-default-severities\n"
" '(\"serious\" \"important\" \"normal\" \"minor\" \"wishlist\"))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:702
msgid "For more information, refer to @ref{Bug Reference,,, emacs, The GNU Emacs Manual} and @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."
msgstr "Para obter mais informações, consulte @ref{Bug Reference,,, emacs, The GNU Emacs Manual} e @ref{Minor Mode,,, debbugs-ug, The Debbugs User Guide}."

#. type: Plain text
#: guix-git/doc/contributing.texi:709
msgid "Alternative setups than Emacs may let you work on Guix with a similar development experience and they might work better with the tools you currently use or help you make the transition to Emacs."
msgstr "Configurações alternativas ao Emacs podem permitir que você trabalhe no Guix com uma experiência de desenvolvimento semelhante e podem funcionar melhor com as ferramentas que você usa atualmente ou ajudá-lo a fazer a transição para o Emacs."

#. type: Plain text
#: guix-git/doc/contributing.texi:715
msgid "The options listed below only provide the alternatives to the Emacs based setup, which is the most widely used in the Guix community. If you want to really understand how is the perfect setup for Guix development supposed to work, we encourage you to read the section before this regardless the editor you choose to use."
msgstr "As opções listadas abaixo fornecem apenas alternativas à configuração baseada em Emacs, que é a mais utilizada na comunidade Guix. Se você quiser realmente entender como a configuração perfeita para o desenvolvimento do Guix deve funcionar, nós o encorajamos a ler a seção anterior, independentemente do editor que você escolher usar."

#. type: subsection
#: guix-git/doc/contributing.texi:719 guix-git/doc/contributing.texi:721
#: guix-git/doc/contributing.texi:722
#, no-wrap
msgid "Guile Studio"
msgstr "Guile Estúdio"

#. type: menuentry
#: guix-git/doc/contributing.texi:719
msgid "First step in your transition to Emacs."
msgstr "Primeiro passo na sua transição para o Emacs."

#. type: subsection
#: guix-git/doc/contributing.texi:719 guix-git/doc/contributing.texi:734
#: guix-git/doc/contributing.texi:735
#, no-wrap
msgid "Vim and NeoVim"
msgstr "Vim e NeoVim"

#. type: menuentry
#: guix-git/doc/contributing.texi:719
msgid "When you are evil to the root."
msgstr "Quando você é mau até a raiz."

#. type: Plain text
#: guix-git/doc/contributing.texi:727
msgid "Guile Studio is a pre-configured Emacs with mostly everything you need to start hacking in Guile. If you are not familiar with Emacs it makes the transition easier for you."
msgstr "Guile Studio é um Emacs pré-configurado com praticamente tudo que você precisa para começar a hackear no Guile. Se você não estiver familiarizado com o Emacs, a transição será mais fácil para você."

#. type: example
#: guix-git/doc/contributing.texi:730
#, no-wrap
msgid "guix install guile-studio\n"
msgstr "guix install guile-studio\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:733
msgid "Guile Studio comes with Geiser preinstalled and prepared for action."
msgstr "Guile Studio vem com Geiser pré-instalado e preparado para ação."

#. type: Plain text
#: guix-git/doc/contributing.texi:740
msgid "Vim (and NeoVim) are also packaged in Guix, just in case you decided to go for the evil path."
msgstr "O Vim (e o NeoVim) também são empacotados no Guix, caso você decida seguir o caminho do mal."

#. type: example
#: guix-git/doc/contributing.texi:743
#, no-wrap
msgid "guix install vim\n"
msgstr "guix install vim\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:751
msgid "If you want to enjoy a similar development experience to that in the perfect setup, you should install several plugins to configure the editor. Vim (and NeoVim) have the equivalent to Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, that will help you with the structural editing of Scheme files (the support for very large files is not great, though)."
msgstr "Se você deseja desfrutar de uma experiência de desenvolvimento semelhante à configuração perfeita, você deve instalar vários plugins para configurar o editor. O Vim (e o NeoVim) têm o equivalente ao Paredit, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}}, que irá ajudá-lo com a estrutura edição de arquivos Scheme (embora o suporte para arquivos muito grandes não seja ótimo)."

#. type: example
#: guix-git/doc/contributing.texi:754
#, no-wrap
msgid "guix install vim-paredit\n"
msgstr "guix install vim-paredit\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:758
msgid "We also recommend that you run @code{:set autoindent} so that your code is automatically indented as you type."
msgstr "Também recomendamos que você execute @code{:set autoindent} para que seu código seja recuado automaticamente conforme você digita."

#. type: Plain text
#: guix-git/doc/contributing.texi:762
msgid "For the interaction with Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} is the most commonly used plugin:"
msgstr "Para a interação com Git, @uref{https://www.vim.org/scripts/script.php?script_id=2975, @code{fugitive.vim}} é o plugin mais comumente usado:"

#. type: example
#: guix-git/doc/contributing.texi:765
#, no-wrap
msgid "guix install vim-fugitive\n"
msgstr "guix install vim-fugitive\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:770
msgid "And of course if you want to interact with Guix directly from inside of vim, using the built-in terminal emulator, we have our very own @code{guix.vim} package!"
msgstr "E claro, se você quiser interagir com o Guix diretamente de dentro do vim, usando o emulador de terminal integrado, temos nosso próprio pacote @code{guix.vim}!"

#. type: example
#: guix-git/doc/contributing.texi:773
#, no-wrap
msgid "guix install vim-guix-vim\n"
msgstr "guix install vim-guix-vim\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:778
msgid "In NeoVim you can even make a similar setup to Geiser using @url{https://conjure.fun/, Conjure} that lets you connect to a running Guile process and inject your code there live (sadly it's not packaged in Guix yet)."
msgstr "No NeoVim você pode até fazer uma configuração semelhante ao Geiser usando @url{https://conjure.fun/, Conjure} que permite conectar-se a um processo Guile em execução e injetar seu código ao vivo (infelizmente ainda não está empacotado no Guix) ."

#. type: cindex
#: guix-git/doc/contributing.texi:783
#, no-wrap
msgid "structure, of the source tree"
msgstr "estrutura da árvore de origem"

#. type: Plain text
#: guix-git/doc/contributing.texi:787
msgid "If you're willing to contribute to Guix beyond packages, or if you'd like to learn how it all fits together, this section provides a guided tour in the code base that you may find useful."
msgstr "Se você estiver disposto a contribuir com o Guix além dos pacotes, ou se quiser aprender como tudo se encaixa, esta seção fornece um tour guiado na base de código que pode ser útil."

#. type: Plain text
#: guix-git/doc/contributing.texi:791
msgid "Overall, the Guix source tree contains almost exclusively Guile @dfn{modules}, each of which can be seen as an independent library (@pxref{Modules,,, guile, GNU Guile Reference Manual})."
msgstr "No geral, a árvore de origem do Guix contém quase exclusivamente Guile @dfn{módulos}, cada um dos quais pode ser visto como uma biblioteca independente (@pxref{Modules,,, guile, Manual de Referência do GNU Guile})."

#. type: Plain text
#: guix-git/doc/contributing.texi:796
msgid "The following table gives an overview of the main directories and what they contain.  Remember that in Guile, each module name is derived from its file name---e.g., the module in file @file{guix/packages.scm} is called @code{(guix packages)}."
msgstr "A tabela a seguir fornece uma visão geral dos principais diretórios e o que eles contêm. Lembre-se de que no Guile, cada nome de módulo é derivado de seu nome de arquivo---por exemplo, o módulo no arquivo @file{guix/packages.scm} é chamado @code{(guix packages)}."

#. type: item
#: guix-git/doc/contributing.texi:798 guix-git/doc/contributing.texi:3551
#: guix-git/doc/guix.texi:11539
#, no-wrap
msgid "guix"
msgstr "guix"

#. type: table
#: guix-git/doc/contributing.texi:802
msgid "This is the location of core Guix mechanisms.  To illustrate what is meant by ``core'', here are a few examples, starting from low-level tools and going towards higher-level tools:"
msgstr "Esta é a localização dos mecanismos principais do Guix. Para ilustrar o que significa ``core'', aqui estão alguns exemplos, começando com ferramentas de baixo nível e indo em direção a ferramentas de nível mais alto:"

#. type: item
#: guix-git/doc/contributing.texi:804
#, no-wrap
msgid "(guix store)"
msgstr "(guix store)"

#. type: table
#: guix-git/doc/contributing.texi:806
msgid "Connecting to and interacting with the build daemon (@pxref{The Store})."
msgstr "Conectando e interagindo com o daemon de compilação (@pxref{The Store})."

#. type: item
#: guix-git/doc/contributing.texi:806
#, no-wrap
msgid "(guix derivations)"
msgstr "(guix derivations)"

#. type: table
#: guix-git/doc/contributing.texi:808
msgid "Creating derivations (@pxref{Derivations})."
msgstr "Criando derivações (@pxref{Derivations})."

#. type: item
#: guix-git/doc/contributing.texi:808
#, no-wrap
msgid "(guix gexps)"
msgstr "(guix gexps)"

#. type: table
#: guix-git/doc/contributing.texi:810
msgid "Writing G-expressions (@pxref{G-Expressions})."
msgstr "Escrevendo expressões-G (@pxref{G-Expressions})."

#. type: item
#: guix-git/doc/contributing.texi:810
#, no-wrap
msgid "(guix packages)"
msgstr "(guix packages)"

#. type: table
#: guix-git/doc/contributing.texi:812
msgid "Defining packages and origins (@pxref{package Reference})."
msgstr "Definindo pacotes e origens (@pxref{package Reference})."

#. type: item
#: guix-git/doc/contributing.texi:812
#, no-wrap
msgid "(guix download)"
msgstr "(guix download)"

#. type: itemx
#: guix-git/doc/contributing.texi:813
#, no-wrap
msgid "(guix git-download)"
msgstr "(guix git-download)"

#. type: table
#: guix-git/doc/contributing.texi:816
msgid "The @code{url-fetch} and @code{git-fetch} origin download methods (@pxref{origin Reference})."
msgstr "Os métodos de download de origem @code{url-fetch} e @code{git-fetch} (@pxref{origin Reference})."

#. type: item
#: guix-git/doc/contributing.texi:816
#, no-wrap
msgid "(guix swh)"
msgstr "(guix swh)"

#. type: table
#: guix-git/doc/contributing.texi:819
msgid "Fetching source code from the @uref{https://archive.softwareheritage.org,Software Heritage archive}."
msgstr "Obtendo código-fonte do @uref{https://archive.softwareheritage.org, arquivo Software Heritage}."

#. type: item
#: guix-git/doc/contributing.texi:819
#, no-wrap
msgid "(guix search-paths)"
msgstr "(guix search-paths)"

#. type: table
#: guix-git/doc/contributing.texi:821
msgid "Implementing search paths (@pxref{Search Paths})."
msgstr "Implementando caminhos de pesquisa (@pxref{Search Paths})."

#. type: item
#: guix-git/doc/contributing.texi:821
#, no-wrap
msgid "(guix build-system)"
msgstr "(guix build-system)"

#. type: table
#: guix-git/doc/contributing.texi:823
msgid "The build system interface (@pxref{Build Systems})."
msgstr "A interface do sistema de compilação (@pxref{Build Systems})."

#. type: item
#: guix-git/doc/contributing.texi:823
#, no-wrap
msgid "(guix profiles)"
msgstr "(guix profiles)"

#. type: table
#: guix-git/doc/contributing.texi:825
msgid "Implementing profiles."
msgstr "Implementando perfis."

#. type: cindex
#: guix-git/doc/contributing.texi:827
#, no-wrap
msgid "build system, directory structure"
msgstr "sistema de construção, estrutura de diretório"

#. type: item
#: guix-git/doc/contributing.texi:828
#, no-wrap
msgid "guix/build-system"
msgstr "guix/build-system"

#. type: table
#: guix-git/doc/contributing.texi:831
msgid "This directory contains specific build system implementations (@pxref{Build Systems}), such as:"
msgstr "Este diretório contém implementações específicas do sistema de compilação (@pxref{Build Systems}), como:"

#. type: item
#: guix-git/doc/contributing.texi:833
#, no-wrap
msgid "(guix build-system gnu)"
msgstr "(guix build-system gnu)"

#. type: table
#: guix-git/doc/contributing.texi:835
msgid "the GNU build system;"
msgstr "o sistema de compilação do GNU;"

#. type: item
#: guix-git/doc/contributing.texi:835
#, no-wrap
msgid "(guix build-system cmake)"
msgstr "(guix build-system cmake)"

#. type: table
#: guix-git/doc/contributing.texi:837
msgid "the CMake build system;"
msgstr "o sistema de compilação CMake;"

#. type: item
#: guix-git/doc/contributing.texi:837
#, no-wrap
msgid "(guix build-system pyproject)"
msgstr "(guix build-system pyproject)"

#. type: table
#: guix-git/doc/contributing.texi:839
msgid "The Python ``pyproject'' build system."
msgstr "O sistema de compilção ``pyproject'' do Python"

#. type: item
#: guix-git/doc/contributing.texi:841
#, no-wrap
msgid "guix/build"
msgstr "guix/build"

#. type: table
#: guix-git/doc/contributing.texi:846
msgid "This contains code generally used on the ``build side'' (@pxref{G-Expressions, strata of code}).  This includes code used to build packages or other operating system components, as well as utilities:"
msgstr "Isto contém código geralmente usado no ``lado da construção'' (@pxref{G-Expressions, strata of code}). Isto inclui código usado para construir pacotes ou outros componentes do sistema operacional, assim como utilitários:"

#. type: item
#: guix-git/doc/contributing.texi:848
#, no-wrap
msgid "(guix build utils)"
msgstr "(guix build utils)"

#. type: table
#: guix-git/doc/contributing.texi:850
msgid "Utilities for package definitions and more (@pxref{Build Utilities})."
msgstr "Utilitários para definições de pacotes e muito mais (@pxref{Build Utilities})."

#. type: item
#: guix-git/doc/contributing.texi:850
#, no-wrap
msgid "(guix build gnu-build-system)"
msgstr "(guix build gnu-build-system)"

#. type: itemx
#: guix-git/doc/contributing.texi:851
#, no-wrap
msgid "(guix build cmake-build-system)"
msgstr "(guix build cmake-build-system)"

#. type: itemx
#: guix-git/doc/contributing.texi:852
#, no-wrap
msgid "(guix build pyproject-build-system)"
msgstr "(guix build pyproject-build-system)"

#. type: table
#: guix-git/doc/contributing.texi:855
msgid "Implementation of build systems, and in particular definition of their build phases (@pxref{Build Phases})."
msgstr "Implementação de sistemas de construção e, em particular, definição de suas fases de construção (@pxref{Build Phases})."

#. type: item
#: guix-git/doc/contributing.texi:855
#, no-wrap
msgid "(guix build syscalls)"
msgstr "(guix build syscalls)"

#. type: table
#: guix-git/doc/contributing.texi:857
msgid "Interface to the C library and to Linux system calls."
msgstr "Interface para a biblioteca C e para chamadas de sistema Linux."

#. type: cindex
#: guix-git/doc/contributing.texi:859
#, no-wrap
msgid "command-line tools, as Guile modules"
msgstr "ferramentas de linha de comando, como módulos Guile"

#. type: cindex
#: guix-git/doc/contributing.texi:860
#, no-wrap
msgid "command modules"
msgstr "módulos de comando"

#. type: item
#: guix-git/doc/contributing.texi:861
#, no-wrap
msgid "guix/scripts"
msgstr "guix/scripts"

#. type: table
#: guix-git/doc/contributing.texi:866
msgid "This contains modules corresponding to @command{guix} sub-commands.  For example, the @code{(guix scripts shell)} module exports the @code{guix-shell} procedure, which directly corresponds to the @command{guix shell} command (@pxref{Invoking guix shell})."
msgstr "Isto contém módulos correspondentes aos subcomandos @command{guix}. Por exemplo, o módulo @code{(guix scripts shell)} exporta o procedimento @code{guix-shell}, que corresponde diretamente ao comando @command{guix shell} (@pxref{Invoking guix shell})."

#. type: cindex
#: guix-git/doc/contributing.texi:867
#, no-wrap
msgid "importer modules"
msgstr "módulos importadores"

#. type: item
#: guix-git/doc/contributing.texi:868
#, no-wrap
msgid "guix/import"
msgstr "guix/import"

#. type: table
#: guix-git/doc/contributing.texi:873
msgid "This contains supporting code for the importers and updaters (@pxref{Invoking guix import}, and @pxref{Invoking guix refresh}).  For example, @code{(guix import pypi)} defines the interface to PyPI, which is used by the @command{guix import pypi} command."
msgstr "Isto contém código de suporte para os importadores e atualizadores (@pxref{Invoking guix import} e @pxref{Invoking guix refresh}). Por exemplo, @code{(guix import pypi)} define a interface para PyPI, que é usada pelo comando @command{guix import pypi}."

#. type: Plain text
#: guix-git/doc/contributing.texi:888
msgid "The directories we have seen so far all live under @file{guix/}.  The other important place is the @file{gnu/} directory, which contains primarily package definitions as well as libraries and tools for Guix System (@pxref{System Configuration}) and Guix Home (@pxref{Home Configuration}), all of which build upon functionality provided by @code{(guix @dots{})} modules@footnote{For this reason, @code{(guix @dots{})} modules must generally not depend on @code{(gnu @dots{})} modules, with notable exceptions: @code{(guix build-system @dots{})} modules may look up packages at run time---e.g., @code{(guix build-system cmake)} needs to access the @code{cmake} variable at run time---, @code{(guix scripts @dots{})} often rely on @code{(gnu @dots{})} modules, and the same goes for some of the @code{(guix import @dots{})} modules.}."
msgstr "Todos os diretórios que vimos até agora estão em @file{guix/}. O outro lugar importante é o diretório @file{gnu/}, que contém principalmente definições de pacotes, bem como bibliotecas e ferramentas para Guix System (@pxref{System Configuration}) e Guix Home (@pxref{Home Configuration}), todos os quais se baseiam na funcionalidade fornecida pelos módulos @code{(guix @dots{})}@footnote{Por esse motivo, os módulos @code{(guix @dots{})} geralmente não devem depender dos módulos @code{(gnu @dots{})}, com exceções notáveis: os módulos @code{(guix build-system @dots{})} podem procurar pacotes em tempo de execução --- por exemplo, @code{(guix build-system cmake)} precisa acessar a variável @code{cmake} em tempo de execução ---, @code{(guix scripts @dots{})} geralmente dependem dos módulos @code{(gnu @dots{})}, e o mesmo vale para alguns dos módulos @code{(guix import @dots{})} módulos.}."

#. type: cindex
#: guix-git/doc/contributing.texi:890
#, no-wrap
msgid "package modules"
msgstr "módulos de pacote"

#. type: item
#: guix-git/doc/contributing.texi:891
#, no-wrap
msgid "gnu/packages"
msgstr "gnu/packages"

#. type: table
#: guix-git/doc/contributing.texi:895
msgid "This is by far the most crowded directory of the source tree: it contains @dfn{package modules} that export package definitions (@pxref{Package Modules}).  A few examples:"
msgstr "Este é de longe o diretório mais lotado da árvore de fontes: ele contém @dfn{package modules} que exportam definições de pacotes (@pxref{Package Modules}). Alguns exemplos:"

#. type: item
#: guix-git/doc/contributing.texi:897
#, no-wrap
msgid "(gnu packages base)"
msgstr "(gnu packages base)"

#. type: table
#: guix-git/doc/contributing.texi:900
msgid "Module providing ``base'' packages: @code{glibc}, @code{coreutils}, @code{grep}, etc."
msgstr "Módulo que fornece pacotes ``base'': @code{glibc}, @code{coreutils}, @code{grep}, etc."

#. type: item
#: guix-git/doc/contributing.texi:900
#, no-wrap
msgid "(gnu packages guile)"
msgstr "(gnu packages guile)"

#. type: table
#: guix-git/doc/contributing.texi:902
msgid "Guile and core Guile packages."
msgstr "Guile e pacotes principais do Guile."

#. type: item
#: guix-git/doc/contributing.texi:902
#, no-wrap
msgid "(gnu packages linux)"
msgstr "(gnu packages linux)"

#. type: table
#: guix-git/doc/contributing.texi:904
msgid "The Linux-libre kernel and related packages."
msgstr "O kernel Linux-libre e pacotes relacionados."

#. type: item
#: guix-git/doc/contributing.texi:904
#, no-wrap
msgid "(gnu packages python)"
msgstr "(gnu packages python)"

#. type: table
#: guix-git/doc/contributing.texi:906
msgid "Python and core Python packages."
msgstr "Python e pacotes principais do Python."

#. type: item
#: guix-git/doc/contributing.texi:906
#, no-wrap
msgid "(gnu packages python-xyz)"
msgstr "(gnu packages python-xyz)"

#. type: table
#: guix-git/doc/contributing.texi:908
msgid "Miscellaneous Python packages (we were not very creative)."
msgstr "Pacotes Python diversos (não fomos muito criativos)."

#. type: table
#: guix-git/doc/contributing.texi:913
msgid "In any case, you can jump to a package definition using @command{guix edit} (@pxref{Invoking guix edit}) and view its location with @command{guix show} (@pxref{Invoking guix package})."
msgstr "Em qualquer caso, você pode pular para uma definição de pacote usando @command{guix edit} (@pxref{Invoking guix edit}) e visualizar sua localização com @command{guix show} (@pxref{Invoking guix package})."

#. type: findex
#: guix-git/doc/contributing.texi:914
#, no-wrap
msgid "search-patches"
msgstr "search-patches"

#. type: item
#: guix-git/doc/contributing.texi:915
#, no-wrap
msgid "gnu/packages/patches"
msgstr "gnu/packages/patches"

#. type: table
#: guix-git/doc/contributing.texi:918
msgid "This directory contains patches applied against packages and obtained using the @code{search-patches} procedure."
msgstr "Este diretório contém patches aplicados aos pacotes e obtidos usando o procedimento @code{search-patches}."

#. type: item
#: guix-git/doc/contributing.texi:919
#, no-wrap
msgid "gnu/services"
msgstr "gnu/services"

#. type: table
#: guix-git/doc/contributing.texi:923
msgid "This contains service definitions, primarily for Guix System (@pxref{Services}) but some of them are adapted and reused for Guix Home as we will see below.  Examples:"
msgstr "Isto contém definições de serviço, principalmente para Guix System (@pxref{Services}), mas algumas delas são adaptadas e reutilizadas para Guix Home, como veremos abaixo. Exemplos:"

#. type: item
#: guix-git/doc/contributing.texi:925
#, no-wrap
msgid "(gnu services)"
msgstr "(gnu services)"

#. type: table
#: guix-git/doc/contributing.texi:928
msgid "The service framework itself, which defines the service and service type data types (@pxref{Service Composition})."
msgstr "A estrutura do serviço em si, que define os tipos de dados do serviço e do tipo de serviço (@pxref{Service Composition})."

#. type: item
#: guix-git/doc/contributing.texi:928
#, no-wrap
msgid "(gnu services base)"
msgstr "(gnu services base)"

#. type: table
#: guix-git/doc/contributing.texi:930
msgid "``Base'' services (@pxref{Base Services})."
msgstr "Serviços ``básicos'' (@pxref{Base Services})."

#. type: item
#: guix-git/doc/contributing.texi:930
#, no-wrap
msgid "(gnu services desktop)"
msgstr "(gnu services desktop)"

#. type: table
#: guix-git/doc/contributing.texi:932
msgid "``Desktop'' services (@pxref{Desktop Services})."
msgstr "Serviços ``desktop'' (@pxref{Desktop Services})."

#. type: item
#: guix-git/doc/contributing.texi:932
#, no-wrap
msgid "(gnu services shepherd)"
msgstr "(gnu services shepherd)"

#. type: table
#: guix-git/doc/contributing.texi:934
msgid "Support for Shepherd services (@pxref{Shepherd Services})."
msgstr "Apoio aos serviços Shepherd (@pxref{Shepherd Services})."

#. type: table
#: guix-git/doc/contributing.texi:939
msgid "You can jump to a service definition using @command{guix system edit} and view its location with @command{guix system search} (@pxref{Invoking guix system})."
msgstr "Você pode pular para uma definição de serviço usando @command{guix system edit} e visualizar sua localização com @command{guix system search} (@pxref{Invoking guix system})."

#. type: item
#: guix-git/doc/contributing.texi:940
#, no-wrap
msgid "gnu/system"
msgstr "gnu/system"

#. type: table
#: guix-git/doc/contributing.texi:942
msgid "These are core Guix System modules, such as:"
msgstr "Estes são os principais módulos do sistema Guix, como:"

#. type: item
#: guix-git/doc/contributing.texi:944
#, no-wrap
msgid "(gnu system)"
msgstr "(gnu system)"

#. type: table
#: guix-git/doc/contributing.texi:946
msgid "Defines @code{operating-system} (@pxref{operating-system Reference})."
msgstr "Define @code{operating-system} (@pxref{operating-system Reference})."

#. type: item
#: guix-git/doc/contributing.texi:946
#, no-wrap
msgid "(gnu system file-systems)"
msgstr "(gnu system file-systems)"

#. type: table
#: guix-git/doc/contributing.texi:948
msgid "Defines @code{file-system} (@pxref{File Systems})."
msgstr "Define @code{file-system} (@pxref{File Systems})."

#. type: item
#: guix-git/doc/contributing.texi:948
#, no-wrap
msgid "(gnu system mapped-devices)"
msgstr "(gnu system mapped-devices)"

#. type: table
#: guix-git/doc/contributing.texi:950
msgid "Defines @code{mapped-device} (@pxref{Mapped Devices})."
msgstr "Define @code{mapped-device} (@pxref{Mapped Devices})."

#. type: item
#: guix-git/doc/contributing.texi:952
#, no-wrap
msgid "gnu/build"
msgstr "gnu/build"

#. type: table
#: guix-git/doc/contributing.texi:956
msgid "These are modules that are either used on the ``build side'' when building operating systems or packages, or at run time by operating systems."
msgstr "Esses são módulos que são usados no ``lado da compilação'' ao criar sistemas operacionais ou pacotes, ou em tempo de execução pelos sistemas operacionais."

#. type: item
#: guix-git/doc/contributing.texi:958
#, no-wrap
msgid "(gnu build accounts)"
msgstr "(gnu build accounts)"

#. type: table
#: guix-git/doc/contributing.texi:961
msgid "Creating @file{/etc/passwd}, @file{/etc/shadow}, etc. (@pxref{User Accounts})."
msgstr "Criando @file{/etc/passwd}, @file{/etc/shadow}, etc. (@pxref{User Accounts})."

#. type: item
#: guix-git/doc/contributing.texi:961
#, no-wrap
msgid "(gnu build activation)"
msgstr "(gnu build activation)"

#. type: table
#: guix-git/doc/contributing.texi:963
msgid "Activating an operating system at boot time or reconfiguration time."
msgstr "Ativar um sistema operacional no momento da inicialização ou da reconfiguração."

#. type: item
#: guix-git/doc/contributing.texi:963
#, no-wrap
msgid "(gnu build file-systems)"
msgstr "(gnu build file-systems)"

#. type: table
#: guix-git/doc/contributing.texi:965
msgid "Searching, checking, and mounting file systems."
msgstr "Pesquisar, verificar e montar sistemas de arquivos."

#. type: item
#: guix-git/doc/contributing.texi:965
#, no-wrap
msgid "(gnu build linux-boot)"
msgstr "(gnu build linux-boot)"

#. type: itemx
#: guix-git/doc/contributing.texi:966
#, no-wrap
msgid "(gnu build hurd-boot)"
msgstr "(gnu build hurd-boot)"

#. type: table
#: guix-git/doc/contributing.texi:968
msgid "Booting GNU/Linux and GNU/Hurd operating systems."
msgstr "Inicializando sistemas operacionais GNU/Linux e GNU/Hurd."

#. type: item
#: guix-git/doc/contributing.texi:968
#, no-wrap
msgid "(gnu build linux-initrd)"
msgstr "(gnu build linux-initrd)"

#. type: table
#: guix-git/doc/contributing.texi:970
msgid "Creating a Linux initial RAM disk (@pxref{Initial RAM Disk})."
msgstr "Criando um disco RAM inicial do Linux (@pxref{Initial RAM Disk})."

#. type: item
#: guix-git/doc/contributing.texi:972
#, no-wrap
msgid "gnu/home"
msgstr "gnu/home"

#. type: table
#: guix-git/doc/contributing.texi:975
msgid "This contains all things Guix Home (@pxref{Home Configuration}); examples:"
msgstr "Isso contém todas as coisas do Guix Home (@pxref{Home Configuration}); exemplos:"

#. type: item
#: guix-git/doc/contributing.texi:977
#, no-wrap
msgid "(gnu home services)"
msgstr "(gnu home services)"

#. type: table
#: guix-git/doc/contributing.texi:979
msgid "Core services such as @code{home-files-service-type}."
msgstr "Serviços principais como @code{home-files-service-type}."

#. type: item
#: guix-git/doc/contributing.texi:979
#, no-wrap
msgid "(gnu home services ssh)"
msgstr "(gnu home services ssh)"

#. type: table
#: guix-git/doc/contributing.texi:981
msgid "SSH-related services (@pxref{Secure Shell})."
msgstr "Serviços relacionados a SSH (@pxref{Secure Shell})."

#. type: item
#: guix-git/doc/contributing.texi:983
#, no-wrap
msgid "gnu/installer"
msgstr "gnu/installer"

#. type: table
#: guix-git/doc/contributing.texi:986
msgid "This contains the text-mode graphical system installer (@pxref{Guided Graphical Installation})."
msgstr "Isso contém o instalador do sistema gráfico em modo texto (@pxref{Guided Graphical Installation})."

#. type: item
#: guix-git/doc/contributing.texi:987
#, no-wrap
msgid "gnu/machine"
msgstr "gnu/machine"

#. type: table
#: guix-git/doc/contributing.texi:990
msgid "These are the @dfn{machine abstractions} used by @command{guix deploy} (@pxref{Invoking guix deploy})."
msgstr "Estas são as @dfn{abstrações de máquina} usadas por @command{guix deploy} (@pxref{Invoking guix deploy})."

#. type: item
#: guix-git/doc/contributing.texi:991
#, no-wrap
msgid "gnu/tests"
msgstr "gnu/tests"

#. type: table
#: guix-git/doc/contributing.texi:994
msgid "This contains system tests---tests that spawn virtual machines to check that system services work as expected (@pxref{Running the Test Suite})."
msgstr "Isso contém testes de sistema — testes que geram máquinas virtuais para verificar se os serviços do sistema funcionam conforme o esperado (@pxref{Running the Test Suite})."

#. type: Plain text
#: guix-git/doc/contributing.texi:998
msgid "Last, there's also a few directories that contain files that are @emph{not} Guile modules:"
msgstr "Por fim, há também alguns diretórios que contêm arquivos que não são módulos Guile:"

#. type: item
#: guix-git/doc/contributing.texi:1000
#, no-wrap
msgid "nix"
msgstr "nix"

#. type: table
#: guix-git/doc/contributing.texi:1003
msgid "This is the C++ implementation of @command{guix-daemon}, inherited from Nix (@pxref{Invoking guix-daemon})."
msgstr "Esta é a implementação C++ do @command{guix-daemon}, herdada do Nix (@pxref{Invoking guix-daemon})."

#. type: item
#: guix-git/doc/contributing.texi:1004
#, no-wrap
msgid "tests"
msgstr "tests"

#. type: table
#: guix-git/doc/contributing.texi:1008
msgid "These are unit tests, each file corresponding more or less to one module, in particular @code{(guix @dots{})} modules (@pxref{Running the Test Suite})."
msgstr "Esses são testes unitários, cada arquivo correspondendo mais ou menos a um módulo, em particular os módulos @code{(guix @dots{})} (@pxref{Running the Test Suite})."

#. type: item
#: guix-git/doc/contributing.texi:1009
#, no-wrap
msgid "doc"
msgstr "doc"

#. type: table
#: guix-git/doc/contributing.texi:1013
msgid "This is the documentation in the form of Texinfo files: this manual and the Cookbook.  @xref{Writing a Texinfo File,,, texinfo, GNU Texinfo}, for information on Texinfo markup language."
msgstr "Esta é a documentação na forma de arquivos Texinfo: este manual e o Livro de receitas. @xref{Writing a Texinfo File,,, texinfo, GNU Texinfo}, para informações sobre a linguagem de marcação Texinfo."

#. type: item
#: guix-git/doc/contributing.texi:1014
#, no-wrap
msgid "po"
msgstr "po"

#. type: table
#: guix-git/doc/contributing.texi:1019
msgid "This is the location of translations of Guix itself, of package synopses and descriptions, of the manual, and of the cookbook.  Note that @file{.po} files that live here are pulled directly from Weblate (@pxref{Translating Guix})."
msgstr "Este é o local das traduções do próprio Guix, das sinopses e descrições dos pacotes, do manual e do livro de receitas. Note que os arquivos @file{.po} que vivem aqui são retirados diretamente do Weblate (@pxref{Translating Guix})."

#. type: item
#: guix-git/doc/contributing.texi:1020
#, no-wrap
msgid "etc"
msgstr "etc"

#. type: table
#: guix-git/doc/contributing.texi:1023
msgid "Miscellaneous files: shell completions, support for systemd and other init systems, Git hooks, etc."
msgstr "Arquivos diversos: conclusões de shell, suporte para systemd e outros sistemas init, ganchos do Git, etc."

#. type: Plain text
#: guix-git/doc/contributing.texi:1030
msgid "With all this, a fair chunk of your operating system is at your fingertips! Beyond @command{grep} and @command{git grep}, @pxref{The Perfect Setup} on how to navigate code from your editor, and @pxref{Using Guix Interactively} for information on how to use Scheme modules interactively.  Enjoy!"
msgstr "Com tudo isso, uma boa parte do seu sistema operacional está na ponta dos seus dedos! Além de @command{grep} e @command{git grep}, @pxref{The Perfect Setup} sobre como navegar no código do seu editor e @pxref{Using Guix Interactively} para obter informações sobre como usar módulos Scheme interativamente. Aproveite!"

#. type: cindex
#: guix-git/doc/contributing.texi:1034
#, no-wrap
msgid "packages, creating"
msgstr "pacotes, criação"

#. type: Plain text
#: guix-git/doc/contributing.texi:1038
msgid "The GNU distribution is nascent and may well lack some of your favorite packages.  This section describes how you can help make the distribution grow."
msgstr "A distribuição do GNU é incipiente e pode muito bem não ter alguns dos seus pacotes favoritos. Esta seção descreve como você pode ajudar a fazer a distribuição crescer."

#. type: Plain text
#: guix-git/doc/contributing.texi:1046
msgid "Free software packages are usually distributed in the form of @dfn{source code tarballs}---typically @file{tar.gz} files that contain all the source files.  Adding a package to the distribution means essentially two things: adding a @dfn{recipe} that describes how to build the package, including a list of other packages required to build it, and adding @dfn{package metadata} along with that recipe, such as a description and licensing information."
msgstr "Pacotes de software livre geralmente são distribuídos na forma de @dfn{tarballs de código-fonte} -- geralmente arquivos @file{tar.gz} que contêm todos os arquivos fonte. Adicionar um pacote à distribuição significa essencialmente duas coisas: adicionar uma @dfn{receita} que descreve como criar o pacote, incluindo uma lista de outros pacotes necessários para compilá-lo e adicionar @dfn{metadados de pacote} junto com essa receita, como uma descrição e informações de licenciamento."

#. type: Plain text
#: guix-git/doc/contributing.texi:1055
msgid "In Guix all this information is embodied in @dfn{package definitions}.  Package definitions provide a high-level view of the package.  They are written using the syntax of the Scheme programming language; in fact, for each package we define a variable bound to the package definition, and export that variable from a module (@pxref{Package Modules}).  However, in-depth Scheme knowledge is @emph{not} a prerequisite for creating packages.  For more information on package definitions, @pxref{Defining Packages}."
msgstr "No Guix, todas essas informações estão incorporadas em @dfn{configurações de pacote}. As definições de pacote fornecem uma visão de alto nível do pacote. Elas são escritas usando a sintaxe da linguagem de programação Scheme; de fato, para cada pacote, definimos uma variável vinculada à definição do pacote e exportamos essa variável de um módulo (@pxref{Package Modules}). No entanto, o conhecimento profundo de Scheme @emph{não} é um pré-requisito para a criação de pacotes. Para mais informações sobre definições de pacotes, @pxref{Defining Packages}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1061
msgid "Once a package definition is in place, stored in a file in the Guix source tree, it can be tested using the @command{guix build} command (@pxref{Invoking guix build}).  For example, assuming the new package is called @code{gnew}, you may run this command from the Guix build tree (@pxref{Running Guix Before It Is Installed}):"
msgstr "Quando uma definição de pacote está em vigor, armazenada em um arquivo na árvore de fontes do Guix, ela pode ser testada usando o comando @command{guix build} (@pxref{Invoking guix build}). Por exemplo, supondo que o novo pacote seja chamado @code{gnew}, você pode executar este comando na árvore de construção do Guix (@pxref{Running Guix Before It Is Installed}):"

#. type: example
#: guix-git/doc/contributing.texi:1064
#, no-wrap
msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1070
msgid "Using @code{--keep-failed} makes it easier to debug build failures since it provides access to the failed build tree.  Another useful command-line option when debugging is @code{--log-file}, to access the build log."
msgstr "O uso de @code{--keep-failed} facilita a depuração de falhas de compilação, pois fornece acesso à árvore de compilação com falha. Outra opção útil da linha de comando ao depurar é @code{--log-file}, para acessar o log de compilação."

#. type: Plain text
#: guix-git/doc/contributing.texi:1075
msgid "If the package is unknown to the @command{guix} command, it may be that the source file contains a syntax error, or lacks a @code{define-public} clause to export the package variable.  To figure it out, you may load the module from Guile to get more information about the actual error:"
msgstr "Se o pacote for desconhecido para o comando @command{guix}, pode ser que o arquivo fonte contenha um erro de sintaxe ou não tenha uma cláusula @code{define-public} para exportar a variável do pacote. Para descobrir isso, você pode carregar o módulo do Guile para obter mais informações sobre o erro real:"

#. type: example
#: guix-git/doc/contributing.texi:1078
#, no-wrap
msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgstr "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1085
msgid "Once your package builds correctly, please send us a patch (@pxref{Submitting Patches}).  Well, if you need help, we will be happy to help you too.  Once the patch is committed in the Guix repository, the new package automatically gets built on the supported platforms by @url{https://@value{SUBSTITUTE-SERVER-1}, our continuous integration system}."
msgstr "Assim que seu pacote for compilado corretamente, envie-nos um patch (@pxref{Submitting Patches}). Bem, se precisar de ajuda, ficaremos felizes em ajudá-lo também. Depois que o patch é confirmado no repositório Guix, o novo pacote é compilado automaticamente nas plataformas suportadas por @url{https://@value{SUBSTITUTE-SERVER-1}, nosso sistema de integração contínua}."

#. type: cindex
#: guix-git/doc/contributing.texi:1086
#, no-wrap
msgid "substituter"
msgstr "substituidor"

#. type: Plain text
#: guix-git/doc/contributing.texi:1093
msgid "Users can obtain the new package definition simply by running @command{guix pull} (@pxref{Invoking guix pull}).  When @code{@value{SUBSTITUTE-SERVER-1}} is done building the package, installing the package automatically downloads binaries from there (@pxref{Substitutes}).  The only place where human intervention is needed is to review and apply the patch."
msgstr "Os usuários podem obter a nova definição de pacote simplesmente executando @command{guix pull} (@pxref{Invoking guix pull}). Quando @code{@value{SUBSTITUTE-SERVER-1}} termina de construir o pacote, a instalação do pacote baixa automaticamente os binários de lá (@pxref{Substitutes}). O único lugar onde a intervenção humana é necessária é para revisar e aplicar o patch."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1112
#: guix-git/doc/contributing.texi:1113
#, no-wrap
msgid "Software Freedom"
msgstr "Liberdade de software"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "What may go into the distribution."
msgstr "O que pode ir na distribuição."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1140
#: guix-git/doc/contributing.texi:1141
#, no-wrap
msgid "Package Naming"
msgstr "Nomeando um pacote"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "What's in a name?"
msgstr "Que há em um nome?"

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1173
#: guix-git/doc/contributing.texi:1174
#, no-wrap
msgid "Version Numbers"
msgstr "Números de versão"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "When the name is not enough."
msgstr "Quando o nome não é suficiente."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1280
#: guix-git/doc/contributing.texi:1281
#, no-wrap
msgid "Synopses and Descriptions"
msgstr "Sinopses e descrições"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Helping users find the right package."
msgstr "Ajudando usuários a localizar o pacote certo."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1359
#: guix-git/doc/contributing.texi:1360
#, no-wrap
msgid "Snippets versus Phases"
msgstr "Snippets versus Phases"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Whether to use a snippet, or a build phase."
msgstr "Seja para usar um snippet ou uma fase de construção."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1374
#: guix-git/doc/contributing.texi:1375
#, no-wrap
msgid "Cyclic Module Dependencies"
msgstr "Dependências do módulo cíclico"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Going full circle."
msgstr "Fazendo um círculo completo."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1429
#: guix-git/doc/contributing.texi:1430
#, fuzzy, no-wrap
#| msgid "security updates"
msgid "Bulk Updates"
msgstr "atualizações de segurança"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "This Little Maneuver's Gonna Cost Us 51 Years."
msgstr ""

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1463
#: guix-git/doc/contributing.texi:1464 guix-git/doc/guix.texi:2043
#, no-wrap
msgid "Emacs Packages"
msgstr "Pacotes Emacs"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Your Elisp fix."
msgstr "Sua correção Elisp."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1503
#: guix-git/doc/contributing.texi:1504
#, no-wrap
msgid "Python Modules"
msgstr "Módulos Python"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "A touch of British comedy."
msgstr "Um toque de comédia britânica."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1598
#: guix-git/doc/contributing.texi:1599
#, no-wrap
msgid "Perl Modules"
msgstr "Módulos Perl"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Little pearls."
msgstr "Pequenas pérolas."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1614
#: guix-git/doc/contributing.texi:1615
#, no-wrap
msgid "Java Packages"
msgstr "Pacotes Java"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Coffee break."
msgstr "Parada para o café."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1634
#: guix-git/doc/contributing.texi:1635
#, no-wrap
msgid "Rust Crates"
msgstr "Rust Crates"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Beware of oxidation."
msgstr "Cuidado com a oxidação."

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1668
#: guix-git/doc/contributing.texi:1669
#, no-wrap
msgid "Elm Packages"
msgstr "Pacotes Elm"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Trees of browser code"
msgstr "Árvores de código do navegador"

#. type: subsection
#: guix-git/doc/contributing.texi:1110 guix-git/doc/contributing.texi:1749
#: guix-git/doc/contributing.texi:1750
#, no-wrap
msgid "Fonts"
msgstr "Fontes"

#. type: menuentry
#: guix-git/doc/contributing.texi:1110
msgid "Fond of fonts."
msgstr "Vício em fontes."

#. type: cindex
#: guix-git/doc/contributing.texi:1116
#, no-wrap
msgid "free software"
msgstr "software livre"

#. type: Plain text
#: guix-git/doc/contributing.texi:1124
msgid "The GNU operating system has been developed so that users can have freedom in their computing.  GNU is @dfn{free software}, meaning that users have the @url{https://www.gnu.org/philosophy/free-sw.html,four essential freedoms}: to run the program, to study and change the program in source code form, to redistribute exact copies, and to distribute modified versions.  Packages found in the GNU distribution provide only software that conveys these four freedoms."
msgstr "O sistema operacional GNU foi desenvolvido para que os usuários possam ter liberdade em sua computação. GNU é @dfn{software livre}, o que significa que os usuários têm a @url{https://www.gnu.org/philosophy/free-sw.html,quatro liberdades essenciais}: executar o programa, estudar e alterar o programa em forma de código-fonte, para redistribuir cópias exatas e para distribuir versões modificadas. Os pacotes encontrados na distribuição GNU fornecem apenas softwares que transmitem essas quatro liberdades."

#. type: Plain text
#: guix-git/doc/contributing.texi:1130
msgid "In addition, the GNU distribution follow the @url{https://www.gnu.org/distros/free-system-distribution-guidelines.html,free software distribution guidelines}.  Among other things, these guidelines reject non-free firmware, recommendations of non-free software, and discuss ways to deal with trademarks and patents."
msgstr "Além disso, a distribuição GNU segue o @url{https://www.gnu.org/distros/free-system-distribution-guidelines.html,diretrizes de distribuição de software livre}. Entre outras coisas, estas diretrizes rejeitam firmware não-livre, recomendações de software não-livre e discutem formas de lidar com marcas registradas e patentes."

#. type: Plain text
#: guix-git/doc/contributing.texi:1138
msgid "Some otherwise free upstream package sources contain a small and optional subset that violates the above guidelines, for instance because this subset is itself non-free code.  When that happens, the offending items are removed with appropriate patches or code snippets in the @code{origin} form of the package (@pxref{Defining Packages}).  This way, @code{guix build --source} returns the ``freed'' source rather than the unmodified upstream source."
msgstr "Algumas fontes de pacotes upstream livres de outra forma contêm um subconjunto pequeno e opcional que viola as diretrizes acima, por exemplo, porque esse subconjunto é ele próprio um código não livre. Quando isso acontece, os itens incorretos são removidos com patches ou trechos de código apropriados no formato @code{origin} do pacote (@pxref{Defining Packages}). Dessa forma, o @code{guix build --source} retorna a fonte ``lançada'' em vez da fonte upstream não modificada."

#. type: cindex
#: guix-git/doc/contributing.texi:1143
#, no-wrap
msgid "package name"
msgstr "nome de pacote"

#. type: Plain text
#: guix-git/doc/contributing.texi:1151
msgid "A package actually has two names associated with it.  First, there is the name of the @emph{Scheme variable}, the one following @code{define-public}.  By this name, the package can be made known in the Scheme code, for instance as input to another package.  Second, there is the string in the @code{name} field of a package definition.  This name is used by package management commands such as @command{guix package} and @command{guix build}."
msgstr "Um pacote na verdade tem dois nomes associados a ele. Primeiro, há o nome da @emph{variável Scheme}, a que segue @code{define-public}. Por esse nome, o pacote pode ser tornado conhecido no código Scheme, por exemplo, como entrada para outro pacote. Segundo, há a string no campo @code{name} de uma definição de pacote. Esse nome é usado por comandos de gerenciamento de pacotes, como @command{guix package} e @command{guix build}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1156
msgid "Both are usually the same and correspond to the lowercase conversion of the project name chosen upstream, with underscores replaced with hyphens.  For instance, GNUnet is available as @code{gnunet}, and SDL_net as @code{sdl-net}."
msgstr "Ambos são geralmente iguais e correspondem à conversão em minúscula do nome do projeto escolhido a montante, com os sublinhados substituídos por hífenes. Por exemplo, o GNUnet está disponível como @code{gnunet} e SDL_net como @code{sdl-net}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1164
msgid "A noteworthy exception to this rule is when the project name is only a single character, or if an older maintained project with the same name already exists---regardless of whether it has already been packaged for Guix.  Use common sense to make such names unambiguous and meaningful.  For example, Guix's package for the shell called ``s'' upstream is @code{s-shell} and @emph{not} @code{s}.  Feel free to ask your fellow hackers for inspiration."
msgstr "Uma exceção digna de nota a esta regra é quando o nome do projeto é apenas um único caractere, ou se já existe um projeto mantido mais antigo com o mesmo nome - independentemente de já ter sido empacotado para Guix. Use o bom senso para tornar esses nomes inequívocos e significativos. Por exemplo, o pacote do Guix para o shell chamado ``s'' upstream é @code{s-shell} e @emph{não} @code{s}. Sinta-se à vontade para pedir inspiração a seus colegas hackers."

#. type: Plain text
#: guix-git/doc/contributing.texi:1169
msgid "We do not add @code{lib} prefixes for library packages, unless these are already part of the official project name.  But @pxref{Python Modules} and @ref{Perl Modules} for special rules concerning modules for the Python and Perl languages."
msgstr "Não adicionamos prefixos @code{lib} para pacotes de bibliotecas, a menos que eles já façam parte do nome oficial do projeto. Mas @pxref{Python Modules} e @ref{Perl Modules} para regras especiais relativas a módulos para as linguagens Python e Perl."

#. type: Plain text
#: guix-git/doc/contributing.texi:1171
msgid "Font package names are handled differently, @pxref{Fonts}."
msgstr "Nomes de pacote de fontes são lidados de forma diferente. @xref{Fonts}."

#. type: cindex
#: guix-git/doc/contributing.texi:1176
#, no-wrap
msgid "package version"
msgstr "versão de pacote"

#. type: Plain text
#: guix-git/doc/contributing.texi:1185
msgid "We usually package only the latest version of a given free software project.  But sometimes, for instance for incompatible library versions, two (or more) versions of the same package are needed.  These require different Scheme variable names.  We use the name as defined in @ref{Package Naming} for the most recent version; previous versions use the same name, suffixed by @code{-} and the smallest prefix of the version number that may distinguish the two versions."
msgstr "Geralmente, empacotamos apenas a versão mais recente de um determinado projeto de software livre. Mas, às vezes, por exemplo, para versões incompatíveis de bibliotecas, são necessárias duas (ou mais) versões do mesmo pacote. Isso requer nomes de variáveis Scheme diferentes. Usamos o nome como definido em @ref{Package Naming} para a versão mais recente; as versões anteriores usam o mesmo nome, com o sufixo @code{-} e o menor prefixo do número da versão que pode distinguir as duas versões."

#. type: Plain text
#: guix-git/doc/contributing.texi:1188
msgid "The name inside the package definition is the same for all versions of a package and does not contain any version number."
msgstr "O nome dentro da definição do pacote é o mesmo para todas as versões de um pacote e não contém nenhum número de versão."

#. type: Plain text
#: guix-git/doc/contributing.texi:1190
msgid "For instance, the versions 2.24.20 and 3.9.12 of GTK+ may be packaged as follows:"
msgstr "Por exemplo, as versões 2.24.20 e 3.9.12 do GTK podem ser empacotados da seguinte forma:"

#. type: lisp
#: guix-git/doc/contributing.texi:1202
#, no-wrap
msgid ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.9.12\")\n"
"    ...))\n"
"(define-public gtk+-2\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"2.24.20\")\n"
"    ...))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1204
msgid "If we also wanted GTK+ 3.8.2, this would be packaged as"
msgstr "Se também quiséssemos GTK 3.8.2, este seria empacotado como"

#. type: lisp
#: guix-git/doc/contributing.texi:1210
#, no-wrap
msgid ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"
msgstr ""
"(define-public gtk+-3.8\n"
"  (package\n"
"    (name \"gtk+\")\n"
"    (version \"3.8.2\")\n"
"    ...))\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1214
#, no-wrap
msgid "version number, for VCS snapshots"
msgstr "número de versão, para snapshots de VCS"

#. type: Plain text
#: guix-git/doc/contributing.texi:1220
msgid "Occasionally, we package snapshots of upstream's version control system (VCS) instead of formal releases.  This should remain exceptional, because it is up to upstream developers to clarify what the stable release is.  Yet, it is sometimes necessary.  So, what should we put in the @code{version} field?"
msgstr "Ocasionalmente, empacotamos snapshots do sistema de controle de versão (VCS) do upstream em vez de lançamentos formais. Isso deve permanecer excepcional, porque cabe aos desenvolvedores upstream esclarecer qual é a versão estável. No entanto, às vezes é necessário. Então, o que devemos colocar no campo @code{version}?"

#. type: Plain text
#: guix-git/doc/contributing.texi:1228
msgid "Clearly, we need to make the commit identifier of the VCS snapshot visible in the version string, but we also need to make sure that the version string is monotonically increasing so that @command{guix package --upgrade} can determine which version is newer.  Since commit identifiers, notably with Git, are not monotonically increasing, we add a revision number that we increase each time we upgrade to a newer snapshot.  The resulting version string looks like this:"
msgstr "Claramente, precisamos tornar o identificador de commit do snapshot VCS visível na string de versão, mas também precisamos garantir que a string de versão esteja aumentando monotonicamente para que o @command{guix package --upgrade} possa determinar qual versão é mais recente. Como os identificadores de commit, principalmente com o Git, não estão aumentando monotonicamente, adicionamos um número de revisão que aumentamos cada vez que atualizamos para um snapshot mais recente. A sequência da versão resultante é assim:"

#. type: example
#: guix-git/doc/contributing.texi:1237
#, no-wrap
msgid ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- upstream commit ID\n"
"  |    |\n"
"  |    `--- Guix package revision\n"
"  |\n"
"latest upstream version\n"
msgstr ""
"2.0.11-3.cabba9e\n"
"  ^    ^    ^\n"
"  |    |    `-- ID do commit do upstream\n"
"  |    |\n"
"  |    `--- revisão do pacote do Guix\n"
"  |\n"
"versão mais recente do upstream\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1247
msgid "It is a good idea to strip commit identifiers in the @code{version} field to, say, 7 digits.  It avoids an aesthetic annoyance (assuming aesthetics have a role to play here) as well as problems related to OS limits such as the maximum shebang length (127 bytes for the Linux kernel).  There are helper functions for doing this for packages using @code{git-fetch} or @code{hg-fetch} (see below).  It is best to use the full commit identifiers in @code{origin}s, though, to avoid ambiguities.  A typical package definition may look like this:"
msgstr "É uma boa ideia reduzir os identificadores de commit no campo @code{version} para, digamos, 7 dígitos. Isso evita um incômodo estético (assumindo que a estética tenha um papel a desempenhar aqui), bem como problemas relacionados aos limites do sistema operacional, como o comprimento máximo do shebang (127 bytes para o kernel Linux). Existem funções auxiliares para fazer isso para pacotes usando @code{git-fetch} ou @code{hg-fetch} (veja abaixo). Porém, é melhor usar os identificadores de commit completos em @code{origin}s para evitar ambiguidades. Uma definição típica de pacote pode ser assim:"

#. type: lisp
#: guix-git/doc/contributing.texi:1264
#, no-wrap
msgid ""
"(define my-package\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;Guix package revision\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/my-package.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"
msgstr ""
"(define meu-pacote\n"
"  (let ((commit \"c3f29bc928d5900971f65965feaae59e1272a3f7\")\n"
"        (revision \"1\"))          ;revisão do pacote do Guix\n"
"    (package\n"
"      (version (git-version \"0.9\" revision commit))\n"
"      (source (origin\n"
"                (method git-fetch)\n"
"                (uri (git-reference\n"
"                      (url \"git://example.org/meu-pacote.git\")\n"
"                      (commit commit)))\n"
"                (sha256 (base32 \"1mbikn@dots{}\"))\n"
"                (file-name (git-file-name name version))))\n"
"      ;; @dots{}\n"
"      )))\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1266
#, no-wrap
msgid "{Procedure} git-version @var{VERSION} @var{REVISION} @var{COMMIT}"
msgstr "{Procedimento} git-version @var{VERSION} @var{REVISION} @var{COMMIT}"

#. type: deffn
#: guix-git/doc/contributing.texi:1268
msgid "Return the version string for packages using @code{git-fetch}."
msgstr "Retorne a string de versão para pacotes usando @code{git-fetch}."

#. type: lisp
#: guix-git/doc/contributing.texi:1272
#, no-wrap
msgid ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"
msgstr ""
"(git-version \"0.2.3\" \"0\" \"93818c936ee7e2f1ba1b315578bde363a7d43d05\")\n"
"@result{} \"0.2.3-0.93818c9\"\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1275
#, no-wrap
msgid "{Procedure} hg-version @var{VERSION} @var{REVISION} @var{CHANGESET}"
msgstr "{Procedimento} hg-version @var{VERSION} @var{REVISION} @var{CHANGESET}"

#. type: deffn
#: guix-git/doc/contributing.texi:1278
msgid "Return the version string for packages using @code{hg-fetch}.  It works in the same way as @code{git-version}."
msgstr "Retorne a string de versão para pacotes usando @code{hg-fetch}. Funciona da mesma forma que @code{git-version}."

#. type: cindex
#: guix-git/doc/contributing.texi:1283
#, no-wrap
msgid "package description"
msgstr "descrição do pacote"

#. type: cindex
#: guix-git/doc/contributing.texi:1284
#, no-wrap
msgid "package synopsis"
msgstr "sinopse do pacote"

#. type: Plain text
#: guix-git/doc/contributing.texi:1291
msgid "As we have seen before, each package in GNU@tie{}Guix includes a synopsis and a description (@pxref{Defining Packages}).  Synopses and descriptions are important: They are what @command{guix package --search} searches, and a crucial piece of information to help users determine whether a given package suits their needs.  Consequently, packagers should pay attention to what goes into them."
msgstr "Como vimos anteriormente, cada pacote no GNU@tie{}Guix inclui uma sinopse e uma descrição (@pxref{Defining Packages}). Sinopses e descrições são importantes: são o que o @command{guix package --search} pesquisa e uma informação crucial para ajudar os usuários a determinar se um determinado pacote atende às suas necessidades. Consequentemente, os empacotadores devem prestar atenção ao que entra neles."

#. type: Plain text
#: guix-git/doc/contributing.texi:1299
msgid "Synopses must start with a capital letter and must not end with a period.  They must not start with ``a'' or ``the'', which usually does not bring anything; for instance, prefer ``File-frobbing tool'' over ``A tool that frobs files''.  The synopsis should say what the package is---e.g., ``Core GNU utilities (file, text, shell)''---or what it is used for---e.g., the synopsis for GNU@tie{}grep is ``Print lines matching a pattern''."
msgstr "As sinopses devem começar com uma letra maiúscula e não devem terminar com um ponto. Elas não devem começar com ``a'' ou ``the'', que geralmente não traz nada; por exemplo, prefira ``Tool-frobbing tool'' em vez de ``A tool that frobs files''. A sinopse deve dizer o que é o pacote -- por exemplo, ``Core GNU utilities (file, text, shell)'' -- ou para que é usado -- por exemplo, a sinopse do GNU@tie{}grep é ``Print lines matching a pattern''."

#. type: Plain text
#: guix-git/doc/contributing.texi:1309
msgid "Keep in mind that the synopsis must be meaningful for a very wide audience.  For example, ``Manipulate alignments in the SAM format'' might make sense for a seasoned bioinformatics researcher, but might be fairly unhelpful or even misleading to a non-specialized audience.  It is a good idea to come up with a synopsis that gives an idea of the application domain of the package.  In this example, this might give something like ``Manipulate nucleotide sequence alignments'', which hopefully gives the user a better idea of whether this is what they are looking for."
msgstr "Lembre-se de que a sinopse deve ser significativa para um público muito amplo. Por exemplo, ``Manipulate alignments in the SAM format'' pode fazer sentido para um pesquisador experiente em bioinformática, mas pode ser bastante inútil ou até enganoso para um público não especializado. É uma boa ideia apresentar uma sinopse que dê uma ideia do domínio do aplicativo do pacote. Neste exemplo, isso pode fornecer algo como ``Manipulate nucleotide sequence alignments'', o que, esperançosamente, dá ao usuário uma melhor ideia de se é isso que eles estão procurando."

#. type: Plain text
#: guix-git/doc/contributing.texi:1317
msgid "Descriptions should take between five and ten lines.  Use full sentences, and avoid using acronyms without first introducing them.  Please avoid marketing phrases such as ``world-leading'', ``industrial-strength'', and ``next-generation'', and avoid superlatives like ``the most advanced''---they are not helpful to users looking for a package and may even sound suspicious.  Instead, try to be factual, mentioning use cases and features."
msgstr "Descrições devem levar entre cinco e dez linhas. Use sentenças completas e evite usar acrônimos sem primeiro apresentá-los. Por favor, evite frases de marketing como ``inovação mundial'', ``força industrial'' e ``próxima geração'', e evite superlativos como ``a mais avançada'' -- eles não ajudam o usuário procurando por um pacote e podem atém parece suspeito. Em vez idsso, tente se ater aos fatos, mencionando casos de uso e recursos."

#. type: cindex
#: guix-git/doc/contributing.texi:1318
#, no-wrap
msgid "Texinfo markup, in package descriptions"
msgstr "Marcação Texinfo, em descrições de pacote"

#. type: Plain text
#: guix-git/doc/contributing.texi:1327
msgid "Descriptions can include Texinfo markup, which is useful to introduce ornaments such as @code{@@code} or @code{@@dfn}, bullet lists, or hyperlinks (@pxref{Overview,,, texinfo, GNU Texinfo}).  However you should be careful when using some characters for example @samp{@@} and curly braces which are the basic special characters in Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}).  User interfaces such as @command{guix show} take care of rendering it appropriately."
msgstr "As descrições podem incluir marcação Texinfo, que é útil para introduzir ornamentos como @code{@@code} ou @code{@@dfn}, listas de marcadores ou hiperlinks (@pxref{Overview,,, texinfo, GNU Texinfo}). No entanto, você deve ter cuidado ao usar alguns caracteres, por exemplo @samp{@@} e chaves, que são os caracteres especiais básicos em Texinfo (@pxref{Special Characters,,, texinfo, GNU Texinfo}). Interfaces de usuário como @command{guix show} cuidam de renderizá-lo apropriadamente."

#. type: Plain text
#: guix-git/doc/contributing.texi:1333
msgid "Synopses and descriptions are translated by volunteers @uref{https://translate.codeberg.org/projects/guix/packages, at Weblate} so that as many users as possible can read them in their native language.  User interfaces search them and display them in the language specified by the current locale."
msgstr "Sinopses e descrições são traduzidas por voluntários @uref{https://translate.codeberg.org/projects/guix/packages, no Weblate} para que o maior número possível de usuários possam lê-las em seu idioma nativo. As interfaces de usuário os pesquisam e os exibem no idioma especificado pelo código do idioma atual."

#. type: Plain text
#: guix-git/doc/contributing.texi:1338
msgid "To allow @command{xgettext} to extract them as translatable strings, synopses and descriptions @emph{must be literal strings}.  This means that you cannot use @code{string-append} or @code{format} to construct these strings:"
msgstr "Para permitir que @command{xgettext} extrai-as com strings traduzíveis, as sinopses e descrições @emph{devem ser strings literais}. Isso significa que você não pode usar @code{string-append} ou @code{format} para construir essas strings:"

#. type: lisp
#: guix-git/doc/contributing.texi:1344
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"This is translatable\")\n"
"  (description (string-append \"This is \" \"*not*\" \" translatable.\")))\n"
msgstr ""
"(package\n"
"  ;; @dots{}\n"
"  (synopsis \"Isso é traduzível\")\n"
"  (description (string-append \"Isso \" \"*não*\" \" é traduzível.\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1352
msgid "Translation is a lot of work so, as a packager, please pay even more attention to your synopses and descriptions as every change may entail additional work for translators.  In order to help them, it is possible to make recommendations or instructions visible to them by inserting special comments like this (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"
msgstr "Tradução é muito trabalhoso, então, como empacotador, por favor, tenha ainda mais atenção às suas sinopses e descrições, pois cada alteração pode implicar em trabalho adicional para tradutores. Para ajudá-loas, é possível tornar recomendações ou instruções visíveis inserindo comentários especiais como esse (@pxref{xgettext Invocation,,, gettext, GNU Gettext}):"

#. type: lisp
#: guix-git/doc/contributing.texi:1357
#, no-wrap
msgid ""
";; TRANSLATORS: \"X11 resize-and-rotate\" should not be translated.\n"
"(description \"ARandR is designed to provide a simple visual front end\n"
"for the X11 resize-and-rotate (RandR) extension. @dots{}\")\n"
msgstr ""
";; TRANSLATORS: \"X11 resize-and-rotate\" should not be translated.\n"
"(description \"ARandR is designed to provide a simple visual front end\n"
"for the X11 resize-and-rotate (RandR) extension. @dots{}\")\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1362
#, no-wrap
msgid "snippets, when to use"
msgstr "snippets, quando usar"

#. type: Plain text
#: guix-git/doc/contributing.texi:1373
msgid "The boundary between using an origin snippet versus a build phase to modify the sources of a package can be elusive.  Origin snippets are typically used to remove unwanted files such as bundled libraries, nonfree sources, or to apply simple substitutions.  The source derived from an origin should produce a source that can be used to build the package on any system that the upstream package supports (i.e., act as the corresponding source).  In particular, origin snippets must not embed store items in the sources; such patching should rather be done using build phases.  Refer to the @code{origin} record documentation for more information (@pxref{origin Reference})."
msgstr "A fronteira entre usar um snippet de origem e uma fase de construção para modificar as fontes de um pacote pode ser ilusória. Os snippets de origem são normalmente usados para remover arquivos indesejados, como bibliotecas agrupadas, fontes não livres ou para aplicar substituições simples. A fonte derivada de uma origem deve produzir uma fonte que possa ser usada para construir o pacote em qualquer sistema que o pacote suporte (ou seja, atuar como a fonte correspondente). Em particular, os snippets de origem não devem incorporar itens do armazém nas fontes; tal correção deve ser feita usando fases de construção. Consulte a documentação do registro @code{origin} para obter mais informações (@pxref{origin Reference})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1381
msgid "While there cannot be circular dependencies between packages, Guile's lax module loading mechanism allows circular dependencies between Guile modules, which doesn't cause problems as long as the following conditions are followed for two modules part of a dependency cycle:"
msgstr "Embora não possa haver dependências circulares entre pacotes, o mecanismo frouxo de carregamento de módulos do Guile permite dependências circulares entre módulos do Guile, o que não causa problemas, desde que as seguintes condições sejam seguidas para dois módulos que fazem parte de um ciclo de dependência:"

#. type: cindex
#: guix-git/doc/contributing.texi:1382
#, no-wrap
msgid "rules to cope with circular module dependencies"
msgstr "regras para lidar com dependências de módulos circulares"

#. type: enumerate
#: guix-git/doc/contributing.texi:1386
msgid "Macros are not shared between the co-dependent modules"
msgstr "As macros não devem ser compartilhadas entre os módulos co-dependentes"

#. type: enumerate
#: guix-git/doc/contributing.texi:1390
msgid "Top-level variables are only referenced in delayed (@i{thunked}) package fields: @code{arguments}, @code{native-inputs}, @code{inputs}, @code{propagated-inputs} or @code{replacement}"
msgstr "Variáveis de nível superior são referenciadas apenas em campos de pacote atrasados (@i{thunked}): @code{arguments}, @code{native-inputs}, @code{inputs}, @code{propagated-inputs} ou @code{replacement}"

#. type: enumerate
#: guix-git/doc/contributing.texi:1393
msgid "Procedures referencing top-level variables from another module are not called at the top level of a module themselves."
msgstr "Procedimentos que fazem referência a variáveis de nível superior de outro módulo não são chamados no nível superior de um módulo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1399
msgid "Straying away from the above rules may work while there are no dependency cycles between modules, but given such cycles are confusing and difficult to troubleshoot, it is best to follow the rules to avoid introducing problems down the line."
msgstr "Afastar-se das regras acima pode funcionar enquanto não houver ciclos de dependência entre os módulos, mas como tais ciclos são confusos e difíceis de solucionar, é melhor seguir as regras para evitar a introdução de problemas no futuro."

#. type: Plain text
#: guix-git/doc/contributing.texi:1402
msgid "Here is a common trap to avoid:"
msgstr "Aqui está uma armadilha comum a ser evitada:"

#. type: lisp
#: guix-git/doc/contributing.texi:1408
#, no-wrap
msgid ""
"(define-public avr-binutils\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"
msgstr ""
"(define-public avr-binutils\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1417
msgid "In the above example, the @code{avr-binutils} package was defined in the module @code{(gnu packages avr)}, and the @code{cross-binutils} procedure in @code{(gnu packages cross-base)}.  Because the @code{inherit} field is not delayed (thunked), it is evaluated at the top level at load time, which is problematic in the presence of module dependency cycles.  This could be resolved by turning the package into a procedure instead, like:"
msgstr "No exemplo acima, o pacote @code{avr-binutils} foi definido no módulo @code{(gnu packages avr)}, e o procedimento @code{cross-binutils} em @code{(gnu packages cross-base)}. Como o campo @code{inherit} não é atrasado (thunked), ele é avaliado no nível superior no momento do carregamento, o que é problemático na presença de ciclos de dependência do módulo. Isso pode ser resolvido transformando o pacote em um procedimento, como:"

#. type: lisp
#: guix-git/doc/contributing.texi:1423
#, no-wrap
msgid ""
"(define (make-avr-binutils)\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"
msgstr ""
"(define (make-avr-binutils)\n"
"  (package\n"
"    (inherit (cross-binutils \"avr\"))\n"
"    (name \"avr-binutils\")))\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1428
msgid "Care would need to be taken to ensure the above procedure is only ever used in a package delayed fields or within another procedure also not called at the top level."
msgstr "Seria necessário tomar cuidado para garantir que o procedimento acima só seja usado em campos atrasados de pacote ou dentro de outro procedimento também não chamado no nível superior."

#. type: cindex
#: guix-git/doc/contributing.texi:1432
#, fuzzy, no-wrap
#| msgid "Packaging Guidelines"
msgid "packaging, maintenance"
msgstr "Diretrizes de empacotamento"

#. type: Plain text
#: guix-git/doc/contributing.texi:1439
msgid "Sometimes you may need to update a monotonic collection of grouped packages, in a particular module---e.g., @code{(gnu packages astronomy)}.  Doing so requires refreshing package versions, creating commits following guidelines and testing them.  Let's say there are 200+ packages with fresh versions, you may deal with this task by applying the following technique."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1442
msgid "Enter a development shell in your local Guix checkout, assuming you already ran @code{bootstrap} and @code{configure}:"
msgstr ""

#. type: example
#: guix-git/doc/contributing.texi:1448
#, no-wrap
msgid ""
"~$ guix shell --development guix\n"
"[env: /gnu/store/@dots{}-profile]\n"
"> ./pre-inst-env guix refresh --select=module:astronomy --update\n"
"> ./pre-inst-env etc/committer.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1455
msgid "The first command updates all packages in @code{(gnu packages astronomy)} to the latest versions and writes changes back to the file.  The second invokes @code{etc/commiter.scm} script, a helper script for larger scale updates; it identifies each package diff and creates corresponding commits with the correct style."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:1458
msgid "If your machine is powerful enough, you may check that the whole collection has no regressions and can still be built successfully:"
msgstr ""

#. type: example
#: guix-git/doc/contributing.texi:1461
#, no-wrap
msgid ""
"[env: /gnu/store/@dots{}-profile]\n"
"> ./pre-inst-env guix build $(./pre-inst-env guix package -A | awk '/astronomy.scm/@{print $1\"@@\"$2@}')\n"
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:1466
#, no-wrap
msgid "emacs, packaging"
msgstr "emacs, empacotando"

#. type: cindex
#: guix-git/doc/contributing.texi:1467
#, no-wrap
msgid "elisp, packaging"
msgstr "elisp, empacotando"

#. type: Plain text
#: guix-git/doc/contributing.texi:1479
msgid "Emacs packages should preferably use the Emacs build system (@pxref{emacs-build-system}), for uniformity and the benefits provided by its build phases, such as the auto-generation of the autoloads file and the byte compilation of the sources.  Because there is no standardized way to run a test suite for Emacs packages, tests are disabled by default.  When a test suite is available, it should be enabled by setting the @code{#:tests?} argument to @code{#true}.  By default, the command to run the test is @command{make check}, but any command can be specified via the @code{#:test-command} argument.  The @code{#:test-command} argument expects a list containing a command and its arguments, to be invoked during the @code{check} phase."
msgstr "Os pacotes Emacs devem preferencialmente usar o sistema de compilação Emacs (@pxref{emacs-build-system}), para uniformidade e os benefícios proporcionados por suas fases de compilação, como a geração automática do arquivo autoloads e a compilação de bytes das fontes. Como não existe uma maneira padronizada de executar um conjunto de testes para pacotes Emacs, os testes são desabilitados por padrão. Quando um conjunto de testes estiver disponível, ele deverá ser habilitado definindo o argumento @code{#:tests?} como @code{#true}. Por padrão, o comando para executar o teste é @command{make check}, mas qualquer comando pode ser especificado através do argumento @code{#:test-command}. O argumento @code{#:test-command} espera que uma lista contendo um comando e seus argumentos seja invocada durante a fase @code{check}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1484
msgid "The Elisp dependencies of Emacs packages are typically provided as @code{propagated-inputs} when required at run time.  As for other packages, build or test dependencies should be specified as @code{native-inputs}."
msgstr "As dependências Elisp dos pacotes Emacs são normalmente fornecidas como @code{propagated-inputs} quando necessário em tempo de execução. Quanto a outros pacotes, as dependências de construção ou teste devem ser especificadas como @code{native-inputs}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1493
msgid "Emacs packages sometimes depend on resources directories that should be installed along the Elisp files.  The @code{#:include} argument can be used for that purpose, by specifying a list of regexps to match.  The best practice when using the @code{#:include} argument is to extend rather than override its default value (accessible via the @code{%default-include} variable).  As an example, a yasnippet extension package typically include a @file{snippets} directory, which could be copied to the installation directory using:"
msgstr "Pacotes Emacs às vezes dependem de diretórios de recursos que devem ser instalados junto com os arquivos Elisp. O argumento @code{#:include} pode ser usado para esse propósito, especificando uma lista de regexps para corresponder. A melhor prática ao usar o argumento @code{#:include} é estender em vez de substituir seu valor padrão (acessível por meio da variável @code{%default-include}). Como exemplo, um pacote de extensão yasnippet normalmente inclui um diretório @file{snippets}, que pode ser copiado para o diretório de instalação usando:"

#. type: lisp
#: guix-git/doc/contributing.texi:1496
#, no-wrap
msgid "#:include (cons \"^snippets/\" %default-include)\n"
msgstr "#:include (cons \"^snippets/\" %default-include)\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1502
msgid "When encountering problems, it is wise to check for the presence of the @code{Package-Requires} extension header in the package main source file, and whether any dependencies and their versions listed therein are satisfied."
msgstr "Ao encontrar problemas, é aconselhável verificar a presença do cabeçalho de extensão @code{Package-Requires} no arquivo de origem principal do pacote e se quaisquer dependências e suas versões listadas nele foram atendidas."

#. type: cindex
#: guix-git/doc/contributing.texi:1506
#, no-wrap
msgid "python"
msgstr "python"

#. type: Plain text
#: guix-git/doc/contributing.texi:1512
msgid "We currently package Python 2 and Python 3, under the Scheme variable names @code{python-2} and @code{python} as explained in @ref{Version Numbers}.  To avoid confusion and naming clashes with other programming languages, it seems desirable that the name of a package for a Python module contains the word @code{python}."
msgstr "Atualmente empacotamos Python 2 e Python 3, sob os nomes de variável Scheme @code{python-2} e @code{python} conforme explicado em @ref{Version Numbers}.  Para evitar confusão e conflitos de nomes com outras linguagens de programação, parece desejável que o nome de um pacote para um módulo Python contenha a palavra @code{python}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1518
msgid "Some modules are compatible with only one version of Python, others with both.  If the package Foo is compiled with Python 3, we name it @code{python-foo}.  If it is compiled with Python 2, we name it @code{python2-foo}.  Python 2 packages are being removed from the distribution; please do no not submit any new Python 2 packages."
msgstr "Alguns módulos são compatíveis com apenas uma versão do Python, outros com ambas. Se o pacote Foo for compilado com Python 3, nós o nomeamos @code{python-foo}. Se ele for compilado com Python 2, nós o nomeamos @code{python2-foo}. Pacotes Python 2 estão sendo removidos da distribuição; por favor, não envie nenhum pacote Python 2 novo."

#. type: Plain text
#: guix-git/doc/contributing.texi:1524
msgid "If a project already contains the word @code{python}, we drop this; for instance, the module python-dateutil is packaged under the names @code{python-dateutil} and @code{python2-dateutil}.  If the project name starts with @code{py} (e.g.@: @code{pytz}), we keep it and prefix it as described above."
msgstr "Se um projeto já contém a palavra @code{python}, nós a descartamos; por exemplo, o módulo python-dateutil é empacotado sob os nomes @code{python-dateutil} e @code{python2-dateutil}. Se o nome do projeto começa com @code{py} (p.ex., @code{pytz}), nós o mantemos e o prefixamos conforme descrito acima."

#. type: quotation
#: guix-git/doc/contributing.texi:1538
msgid "Currently there are two different build systems for Python packages in Guix: @var{python-build-system} and @var{pyproject-build-system}.  For the longest time, Python packages were built from an informally specified @file{setup.py} file.  That worked amazingly well, considering Python's success, but was difficult to build tooling around.  As a result, a host of alternative build systems emerged and the community eventually settled on a @url{https://peps.python.org/pep-0517/, formal standard} for specifying build requirements.  @var{pyproject-build-system} is Guix's implementation of this standard.  It is considered ``experimental'' in that it does not yet support all the various PEP-517 @emph{build backends}, but you are encouraged to try it for new Python packages and report any problems.  It will eventually be deprecated and merged into @var{python-build-system}."
msgstr "Atualmente, há dois sistemas de construção diferentes para pacotes Python no Guix: @var{python-build-system} e @var{pyproject-build-system}. Por muito tempo, os pacotes Python foram construídos a partir de um arquivo @file{setup.py} especificado informalmente. Isso funcionou incrivelmente bem, considerando o sucesso do Python, mas era difícil construir ferramentas em torno dele. Como resultado, uma série de sistemas de construção alternativos surgiram e a comunidade eventualmente decidiu por um @url{https://peps.python.org/pep-0517/, padrão formal} para especificar os requisitos de construção. @var{pyproject-build-system} é a implementação do Guix desse padrão. Ele é considerado ``experimental'', pois ainda não suporta todos os vários @emph{backends de construção} PEP-517, mas você é encorajado a experimentá-lo para novos pacotes Python e relatar quaisquer problemas. Ele eventualmente será descontinuado e mesclado ao @var{python-build-system}."

#. type: subsubsection
#: guix-git/doc/contributing.texi:1540
#, no-wrap
msgid "Specifying Dependencies"
msgstr "Especificando dependências"

#. type: cindex
#: guix-git/doc/contributing.texi:1541
#, no-wrap
msgid "inputs, for Python packages"
msgstr "entradas, para pacotes Python"

#. type: Plain text
#: guix-git/doc/contributing.texi:1548
msgid "Dependency information for Python packages is usually available in the package source tree, with varying degrees of accuracy: in the @file{pyproject.toml} file, the @file{setup.py} file, in @file{requirements.txt}, or in @file{tox.ini} (the latter mostly for test dependencies)."
msgstr "Informações de dependências para pacotes Python estão geralmente disponíveis na árvore de fonte do pacote, com variados graus de precisão nos arquivos: @file{setup.py}, @file{requirements.txt} ou @file{tox.ini} (este último principalmente para testes de dependência)."

#. type: Plain text
#: guix-git/doc/contributing.texi:1554
msgid "Your mission, when writing a recipe for a Python package, is to map these dependencies to the appropriate type of ``input'' (@pxref{package Reference, inputs}).  Although the @code{pypi} importer normally does a good job (@pxref{Invoking guix import}), you may want to check the following check list to determine which dependency goes where."
msgstr "Sua missão, ao escrever uma receita para um pacote Python, é mapear essas dependências para o tipo apropriado de ``entrada'' (@pxref{package Reference, inputs}). Apesar do importador do @code{pypi} normalmente fazer um bom trabalho (@pxref{Invoking guix import}), você pode se interessar em verificar a lista de verificação a seguir para determinar qual dependência vai onde."

#. type: itemize
#: guix-git/doc/contributing.texi:1561
msgid "We currently package Python with @code{setuptools} and @code{pip} installed per default.  This is about to change, and users are encouraged to use @code{python-toolchain} if they want a build environment for Python."
msgstr "Atualmente empacotamos Python com @code{setuptools} e @code{pip} instalados por padrão.  Isto está prestes a mudar, e os usuários são encorajados a usar o @code{python-toolchain} se quiserem um ambiente de construção para Python."

#. type: itemize
#: guix-git/doc/contributing.texi:1564
msgid "@command{guix lint} will warn if @code{setuptools} or @code{pip} are added as native-inputs because they are generally not necessary."
msgstr "@command{guix lint} avisará se @code{setuptools} ou @code{pip} forem adicionados como entradas nativas porque geralmente não são necessários."

#. type: itemize
#: guix-git/doc/contributing.texi:1570
msgid "Python dependencies required at run time go into @code{propagated-inputs}.  They are typically defined with the @code{install_requires} keyword in @file{setup.py}, or in the @file{requirements.txt} file."
msgstr "Dependências de Python necessárias em tempo de execução vão em @code{propagated-inputs}. Elas geralmente são definidas com a palavra-chave @code{install_requires} em @file{setup.py} ou no arquivo @file{requirements.txt}."

#. type: itemize
#: guix-git/doc/contributing.texi:1579
msgid "Python packages required only at build time---e.g., those listed under @code{build-system.requires} in @file{pyproject.toml} or with the @code{setup_requires} keyword in @file{setup.py}---or dependencies only for testing---e.g., those in @code{tests_require} or @file{tox.ini}---go into @code{native-inputs}.  The rationale is that (1) they do not need to be propagated because they are not needed at run time, and (2) in a cross-compilation context, it's the ``native'' input that we'd want."
msgstr "Pacotes Python necessários apenas em tempo de compilação --- e.g., aqueles listados sob @code{build-system.requires} no @file{pyproject.toml} ou com a palavra-chave @code{setup_requires} no @file{setup.py} --- ou dependencias apenas para teste --- e.g., aqueles no @code{tests_require} ou no @file{tox.ini} --- vão no @code{native-inputs}.  A razão é que (1) eles não precisam ser propagados porque não são necessários em tempo de execução e (2) em um contexto de compilação cruzada, é a entrada ``nativa'' que nós queríamo."

#. type: itemize
#: guix-git/doc/contributing.texi:1583
msgid "Examples are the @code{pytest}, @code{mock}, and @code{nose} test frameworks.  Of course if any of these packages is also required at run-time, it needs to go to @code{propagated-inputs}."
msgstr "Exemplos são os frameworks de teste @code{pytest}, @code{mock} e @code{nose}. É claro, se qualquer um desses pacotes também for necessário em tempo de compilação, ele precisa ir para @code{propagated-inputs}."

#. type: itemize
#: guix-git/doc/contributing.texi:1588
msgid "Anything that does not fall in the previous categories goes to @code{inputs}, for example programs or C libraries required for building Python packages containing C extensions."
msgstr "Qualquer coisa que não encaixar nas categorias anteriores vai para @code{inputs}. Por exemplo, programas ou bibliotecas C necessárias para compilar pacotes Python contendo extensões C."

#. type: itemize
#: guix-git/doc/contributing.texi:1594
msgid "If a Python package has optional dependencies (@code{extras_require}), it is up to you to decide whether to add them or not, based on their usefulness/overhead ratio (@pxref{Submitting Patches, @command{guix size}})."
msgstr "Se um pacote Python tem dependências opcionais (@code{extras_require}), fica a seu critério adicioná-las ou não, com base na sua proporção de utilidade/sobrecarga (@pxref{Submitting Patches, @command{guix size}})."

#. type: cindex
#: guix-git/doc/contributing.texi:1601
#, no-wrap
msgid "perl"
msgstr "perl"

#. type: Plain text
#: guix-git/doc/contributing.texi:1612
msgid "Perl programs standing for themselves are named as any other package, using the lowercase upstream name.  For Perl packages containing a single class, we use the lowercase class name, replace all occurrences of @code{::} by dashes and prepend the prefix @code{perl-}.  So the class @code{XML::Parser} becomes @code{perl-xml-parser}.  Modules containing several classes keep their lowercase upstream name and are also prepended by @code{perl-}.  Such modules tend to have the word @code{perl} somewhere in their name, which gets dropped in favor of the prefix.  For instance, @code{libwww-perl} becomes @code{perl-libwww}."
msgstr "Os programas Perl próprios são nomeados como qualquer outro pacote, usando o nome upstream em letras minúsculas. Para pacotes Perl que contêm uma única classe, usamos o nome da classe em letras minúsculas, substituímos todas as ocorrências de @code{::} por traços e precede o prefixo @code{perl-}. Portanto, a classe @code{XML::Parser} se torna @code{perl-xml-parser}. Módulos contendo várias classes mantêm seu nome upstream em minúsculas e também são precedidos por @code{perl-}. Esses módulos tendem a ter a palavra @code{perl} em algum lugar do nome, que é descartada em favor do prefixo. Por exemplo, @code{libwww-perl} se torna @code{perl-libwww}."

#. type: cindex
#: guix-git/doc/contributing.texi:1617
#, no-wrap
msgid "java"
msgstr "java"

#. type: Plain text
#: guix-git/doc/contributing.texi:1620
msgid "Java programs standing for themselves are named as any other package, using the lowercase upstream name."
msgstr "Os programas Java próprios são nomeados como qualquer outro pacote, usando o nome do upstream em letras minúsculas."

#. type: Plain text
#: guix-git/doc/contributing.texi:1626
msgid "To avoid confusion and naming clashes with other programming languages, it is desirable that the name of a package for a Java package is prefixed with @code{java-}.  If a project already contains the word @code{java}, we drop this; for instance, the package @code{ngsjava} is packaged under the name @code{java-ngs}."
msgstr "Para evitar confusão e conflitos de nomes com outras linguagens de programação, é desejável que o nome de um pacote para um pacote Java seja prefixado com @code{java-}. Se um projeto já contém a palavra @code{java}, descartamos isso; por exemplo, o pacote @code{ngsjava} é empacotado com o nome @code{java-ngs}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1632
msgid "For Java packages containing a single class or a small class hierarchy, we use the lowercase class name, replace all occurrences of @code{.} by dashes and prepend the prefix @code{java-}.  So the class @code{apache.commons.cli} becomes package @code{java-apache-commons-cli}."
msgstr "Para pacotes Java que contêm uma única classe ou uma pequena hierarquia de classes, usamos o nome da classe em letras minúsculas, substitua todas as ocorrências de @code{.} por traços e acrescente o prefixo @code{java-}. Assim, a classe @code{apache.commons.cli} se torna o pacote @code{java-apache-commons-cli}."

#. type: cindex
#: guix-git/doc/contributing.texi:1637
#, no-wrap
msgid "rust"
msgstr "rust"

#. type: Plain text
#: guix-git/doc/contributing.texi:1640
msgid "Rust programs standing for themselves are named as any other package, using the lowercase upstream name."
msgstr "Os programas Rust que se autodenominam são nomeados como qualquer outro pacote, usando o nome original em letras minúsculas."

#. type: Plain text
#: guix-git/doc/contributing.texi:1644
msgid "To prevent namespace collisions we prefix all other Rust packages with the @code{rust-} prefix.  The name should be changed to lowercase as appropriate and dashes should remain in place."
msgstr "Para evitar colisões de namespace, prefixamos todos os outros pacotes Rust com o prefixo @code{rust-}. O nome deve ser alterado para minúsculas conforme apropriado e os traços devem permanecer no lugar."

#. type: Plain text
#: guix-git/doc/contributing.texi:1650
msgid "In the rust ecosystem it is common for multiple incompatible versions of a package to be used at any given time, so all package definitions should have a versioned suffix.  The versioned suffix is the left-most non-zero digit (and any leading zeros, of course).  This follows the ``caret'' version scheme intended by Cargo.  Examples@: @code{rust-clap-2}, @code{rust-rand-0.6}."
msgstr "No ecossistema rust é comum que várias versões incompatíveis de um pacote sejam usadas a qualquer momento, então todas as definições de pacote devem ter um sufixo versionado. O sufixo versionado é o dígito diferente de zero mais à esquerda (e quaisquer zeros à esquerda, é claro). Isso segue o esquema de versão ``caret'' pretendido pelo Cargo. Exemplos@: @code{rust-clap-2}, @code{rust-rand-0.6}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1660
msgid "Because of the difficulty in reusing rust packages as pre-compiled inputs for other packages the Cargo build system (@pxref{Build Systems, @code{cargo-build-system}}) presents the @code{#:cargo-inputs} and @code{cargo-development-inputs} keywords as build system arguments.  It would be helpful to think of these as similar to @code{propagated-inputs} and @code{native-inputs}.  Rust @code{dependencies} and @code{build-dependencies} should go in @code{#:cargo-inputs}, and @code{dev-dependencies} should go in @code{#:cargo-development-inputs}.  If a Rust package links to other libraries then the standard placement in @code{inputs} and the like should be used."
msgstr "Devido à dificuldade em reutilizar pacotes rust como entradas pré-compiladas para outros pacotes, o sistema de construção Cargo (@pxref{Build Systems, @code{cargo-build-system}}) apresenta as palavras-chave @code{#:cargo-inputs} e @code{cargo-development-inputs} como argumentos do sistema de construção. Seria útil pensar nelas como semelhantes a @code{propagated-inputs} e @code{native-inputs}. Rust @code{dependencies} e @code{build-dependencies} devem ir em @code{#:cargo-inputs}, e @code{dev-dependencies} deve ir em @code{#:cargo-development-inputs}. Se um pacote Rust vincular a outras bibliotecas, o posicionamento padrão em @code{inputs} e semelhantes deve ser usado."

#. type: Plain text
#: guix-git/doc/contributing.texi:1666
msgid "Care should be taken to ensure the correct version of dependencies are used; to this end we try to refrain from skipping the tests or using @code{#:skip-build?} when possible.  Of course this is not always possible, as the package may be developed for a different Operating System, depend on features from the Nightly Rust compiler, or the test suite may have atrophied since it was released."
msgstr "Deve-se tomar cuidado para garantir que a versão correta das dependências seja usada; para esse fim, tentamos evitar pular os testes ou usar @code{#:skip-build?} quando possível. Claro que isso nem sempre é possível, pois o pacote pode ser desenvolvido para um sistema operacional diferente, depender de recursos do compilador Nightly Rust ou o conjunto de testes pode ter se atrofiado desde que foi lançado."

#. type: cindex
#: guix-git/doc/contributing.texi:1671
#, no-wrap
msgid "Elm"
msgstr "Elm"

#. type: Plain text
#: guix-git/doc/contributing.texi:1674
msgid "Elm applications can be named like other software: their names need not mention Elm."
msgstr "Os aplicativos Elm podem ser nomeados como outros softwares: seus nomes não precisam mencionar Elm."

#. type: Plain text
#: guix-git/doc/contributing.texi:1680
msgid "Packages in the Elm sense (see @code{elm-build-system} under @ref{Build Systems}) are required use names of the format @var{author}@code{/}@var{project}, where both the @var{author} and the @var{project} may contain hyphens internally, and the @var{author} sometimes contains uppercase letters."
msgstr "Pacotes no sentido Elm (veja @code{elm-build-system} em @ref{Build Systems}) devem usar nomes no formato @var{author}@code{/}@var{project}, onde tanto @var{author} quanto @var{project} podem conter hifens internamente, e @var{author} às vezes contém letras maiúsculas."

#. type: Plain text
#: guix-git/doc/contributing.texi:1684
msgid "To form the Guix package name from the upstream name, we follow a convention similar to Python packages (@pxref{Python Modules}), adding an @code{elm-} prefix unless the name would already begin with @code{elm-}."
msgstr "Para formar o nome do pacote Guix a partir do nome upstream, seguimos uma convenção semelhante aos pacotes Python (@pxref{Python Modules}), adicionando um prefixo @code{elm-}, a menos que o nome já comece com @code{elm-}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1691
msgid "In many cases we can reconstruct an Elm package's upstream name heuristically, but, since conversion to a Guix-style name involves a loss of information, this is not always possible.  Care should be taken to add the @code{'upstream-name} property when necessary so that @samp{guix import elm} will work correctly (@pxref{Invoking guix import}). The most notable scenarios when explicitly specifying the upstream name is necessary are:"
msgstr "Em muitos casos, podemos reconstruir o nome upstream de um pacote Elm heuristicamente, mas, como a conversão para um nome no estilo Guix envolve perda de informações, isso nem sempre é possível. Deve-se tomar cuidado para adicionar a propriedade @code{'upstream-name} quando necessário para que @samp{guix import elm} funcione corretamente (@pxref{Invoking guix import}). Os cenários mais notáveis quando especificar explicitamente o nome upstream é necessário são:"

#. type: enumerate
#: guix-git/doc/contributing.texi:1696
msgid "When the @var{author} is @code{elm} and the @var{project} contains one or more hyphens, as with @code{elm/virtual-dom}; and"
msgstr "Quando @var{author} é @code{elm} e @var{project} contém um ou mais hifens, como em @code{elm/virtual-dom}; e"

#. type: enumerate
#: guix-git/doc/contributing.texi:1703
msgid "When the @var{author} contains hyphens or uppercase letters, as with @code{Elm-Canvas/raster-shapes}---unless the @var{author} is @code{elm-explorations}, which is handled as a special case, so packages like @code{elm-explorations/markdown} do @emph{not} need to use the @code{'upstream-name} property."
msgstr "Quando @var{author} contém hifens ou letras maiúsculas, como em @code{Elm-Canvas/raster-shapes}---a menos que @var{author} seja @code{elm-explorations}, que é tratado como um caso especial, então pacotes como @code{elm-explorations/markdown} @emph{não} precisam usar a propriedade @code{'upstream-name}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1707
msgid "The module @code{(guix build-system elm)} provides the following utilities for working with names and related conventions:"
msgstr "O módulo @code{(guix build-system elm)} fornece os seguintes utilitários para trabalhar com nomes e convenções relacionadas:"

#. type: deffn
#: guix-git/doc/contributing.texi:1708
#, no-wrap
msgid "{Procedure} elm-package-origin @var{elm-name} @var{version} @"
msgstr "{Procedimento} elm-package-origin @var{nome-elm} @var{versão} @"

#. type: deffn
#: guix-git/doc/contributing.texi:1713
msgid "@var{hash} Returns a Git origin using the repository naming and tagging regime required for a published Elm package with the upstream name @var{elm-name} at version @var{version} with sha256 checksum @var{hash}."
msgstr "@var{hash} Retorna uma origem Git usando o regime de nomenclatura e marcação de repositório necessário para um pacote Elm publicado com o nome upstream @var{nome-elm} na versão @var{versão} com soma de verificação sha256 @var{hash}."

#. type: deffn
#: guix-git/doc/contributing.texi:1715 guix-git/doc/guix.texi:40354
#: guix-git/doc/guix.texi:44943
msgid "For example:"
msgstr "Por exemplo:"

#. type: lisp
#: guix-git/doc/contributing.texi:1725
#, no-wrap
msgid ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"
msgstr ""
"(package\n"
"  (name \"elm-html\")\n"
"  (version \"1.0.0\")\n"
"  (source\n"
"   (elm-package-origin\n"
"    \"elm/html\"\n"
"    version\n"
"    (base32 \"15k1679ja57vvlpinpv06znmrxy09lbhzfkzdc89i01qa8c4gb4a\")))\n"
"  ...)\n"

#. type: deffn
#: guix-git/doc/contributing.texi:1728
#, no-wrap
msgid "{Procedure} elm->package-name @var{elm-name}"
msgstr "{Procedimento} elm->package-name @var{nome-elm}"

#. type: deffn
#: guix-git/doc/contributing.texi:1731
msgid "Returns the Guix-style package name for an Elm package with upstream name @var{elm-name}."
msgstr "Retorna o nome do pacote no estilo Guix para um pacote Elm com nome upstream @var{nome-elm}."

#. type: deffn
#: guix-git/doc/contributing.texi:1734
msgid "Note that there is more than one possible @var{elm-name} for which @code{elm->package-name} will produce a given result."
msgstr "Observe que há mais de um @var{nome-elm} possível para o qual @code{elm->package-name} produzirá um determinado resultado."

#. type: deffn
#: guix-git/doc/contributing.texi:1736
#, no-wrap
msgid "{Procedure} guix-package->elm-name @var{package}"
msgstr "{Procedimento} guix-package->elm-name @var{pacote}"

#. type: deffn
#: guix-git/doc/contributing.texi:1740
msgid "Given an Elm @var{package}, returns the possibly-inferred upstream name, or @code{#f} the upstream name is not specified via the @code{'upstream-name} property and can not be inferred by @code{infer-elm-package-name}."
msgstr "Dado um Elm @var{pacote}, retorna o nome upstream possivelmente inferido, ou @code{#f} o nome upstream não é especificado por meio da propriedade @code{'upstream-name} e não pode ser inferido por @code{infer-elm-package-name}."

#. type: deffn
#: guix-git/doc/contributing.texi:1742
#, no-wrap
msgid "{Procedure} infer-elm-package-name @var{guix-name}"
msgstr "{Procedimento} infer-elm-package-name @var{guix-name}"

#. type: deffn
#: guix-git/doc/contributing.texi:1747
msgid "Given the @var{guix-name} of an Elm package, returns the inferred upstream name, or @code{#f} if the upstream name can't be inferred.  If the result is not @code{#f}, supplying it to @code{elm->package-name} would produce @var{guix-name}."
msgstr "Dado o @var{guix-name} de um pacote Elm, retorna o nome upstream inferido, ou @code{#f} se o nome upstream não puder ser inferido. Se o resultado não for @code{#f}, fornecê-lo a @code{elm->package-name} produziria @var{guix-name}."

#. type: cindex
#: guix-git/doc/contributing.texi:1752 guix-git/doc/guix.texi:1978
#, no-wrap
msgid "fonts"
msgstr "fontes"

#. type: Plain text
#: guix-git/doc/contributing.texi:1758
msgid "For fonts that are in general not installed by a user for typesetting purposes, or that are distributed as part of a larger software package, we rely on the general packaging rules for software; for instance, this applies to the fonts delivered as part of the X.Org system or fonts that are part of TeX Live."
msgstr "Para fontes que geralmente não são instaladas por um usuário para fins de digitação ou que são distribuídas como parte de um pacote de software maior, contamos com as regras gerais de empacotamento de software; por exemplo, isso se aplica às fontes entregues como parte do sistema X.Org ou às fontes que fazem parte do TeX Live."

#. type: Plain text
#: guix-git/doc/contributing.texi:1762
msgid "To make it easier for a user to search for fonts, names for other packages containing only fonts are constructed as follows, independently of the upstream package name."
msgstr "Para facilitar a busca de fontes por um usuário, os nomes de outros pacotes contendo apenas fontes são compilados da seguinte maneira, independentemente do nome do pacote upstream."

#. type: Plain text
#: guix-git/doc/contributing.texi:1770
msgid "The name of a package containing only one font family starts with @code{font-}; it is followed by the foundry name and a dash @code{-} if the foundry is known, and the font family name, in which spaces are replaced by dashes (and as usual, all upper case letters are transformed to lower case).  For example, the Gentium font family by SIL is packaged under the name @code{font-sil-gentium}."
msgstr "O nome de um pacote que contém apenas uma família de fontes começa com @code{font-}; é seguido pelo nome da fundição e um traço @code{-} se a fundição for conhecida e o nome da família da fonte, em que os espaços são substituídos por hífenes (e, como sempre, todas as letras maiúsculas são transformadas em minúsculas). Por exemplo, a família de fontes Gentium da SIL é empacotada com o nome @code{font-sil-gentium}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1779
msgid "For a package containing several font families, the name of the collection is used in the place of the font family name.  For instance, the Liberation fonts consist of three families, Liberation Sans, Liberation Serif and Liberation Mono.  These could be packaged separately under the names @code{font-liberation-sans} and so on; but as they are distributed together under a common name, we prefer to package them together as @code{font-liberation}."
msgstr "Para um pacote que contém várias famílias de fontes, o nome da coleção é usado no lugar do nome da família de fontes. Por exemplo, as fontes Liberation consistem em três famílias, Liberation Sans, Liberation Serif e Liberation Mono. Eles podem ser empacotados separadamente com os nomes @code{font-liberation-sans} e assim por diante; mas como eles são distribuídos juntos com um nome comum, preferimos agrupá-los como @code{font-liberation}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1785
msgid "In the case where several formats of the same font family or font collection are packaged separately, a short form of the format, prepended by a dash, is added to the package name.  We use @code{-ttf} for TrueType fonts, @code{-otf} for OpenType fonts and @code{-type1} for PostScript Type 1 fonts."
msgstr "No caso de vários formatos da mesma família ou coleção de fontes serem empacotados separadamente, um formato abreviado do formato, precedido por um traço, é adicionado ao nome do pacote. Usamos @code{-ttf} para fontes TrueType, @code{-otf} para fontes OpenType e @code{-type1} para fontes PostScript Type 1."

#. type: Plain text
#: guix-git/doc/contributing.texi:1793
msgid "In general our code follows the GNU Coding Standards (@pxref{Top,,, standards, GNU Coding Standards}).  However, they do not say much about Scheme, so here are some additional rules."
msgstr "Em geral, nosso código segue os Padrões de Codificação GNU (@pxref{Top ,,, standards, GNU Coding Standards}). No entanto, eles não dizem muito sobre Scheme, então aqui estão algumas regras adicionais."

#. type: subsection
#: guix-git/doc/contributing.texi:1799 guix-git/doc/contributing.texi:1801
#: guix-git/doc/contributing.texi:1802
#, no-wrap
msgid "Programming Paradigm"
msgstr "Paradigma de programação"

#. type: menuentry
#: guix-git/doc/contributing.texi:1799
msgid "How to compose your elements."
msgstr "Como compor seus elementos."

#. type: subsection
#: guix-git/doc/contributing.texi:1799 guix-git/doc/contributing.texi:1808
#: guix-git/doc/contributing.texi:1809
#, no-wrap
msgid "Modules"
msgstr "Módulos"

#. type: menuentry
#: guix-git/doc/contributing.texi:1799
msgid "Where to store your code?"
msgstr "Onde armazenar seu código?"

#. type: subsection
#: guix-git/doc/contributing.texi:1799 guix-git/doc/contributing.texi:1824
#: guix-git/doc/contributing.texi:1825
#, no-wrap
msgid "Data Types and Pattern Matching"
msgstr "Tipos de dados e correspondência de padrão"

#. type: menuentry
#: guix-git/doc/contributing.texi:1799
msgid "Implementing data structures."
msgstr "Implementação de estruturas de dados."

#. type: subsection
#: guix-git/doc/contributing.texi:1799 guix-git/doc/contributing.texi:1855
#: guix-git/doc/contributing.texi:1856
#, no-wrap
msgid "Formatting Code"
msgstr "Formatação de código"

#. type: menuentry
#: guix-git/doc/contributing.texi:1799
msgid "Writing conventions."
msgstr "Convenções de escrita."

#. type: Plain text
#: guix-git/doc/contributing.texi:1807
msgid "Scheme code in Guix is written in a purely functional style.  One exception is code that involves input/output, and procedures that implement low-level concepts, such as the @code{memoize} procedure."
msgstr "O código Scheme no Guix é escrito em um estilo puramente funcional. Uma exceção é o código que envolve entrada/saída e procedimentos que implementam conceitos de baixo nível, como o procedimento @code{memoize}."

#. type: cindex
#: guix-git/doc/contributing.texi:1810
#, no-wrap
msgid "build-side modules"
msgstr "módulos da banda de compilação"

#. type: cindex
#: guix-git/doc/contributing.texi:1811
#, no-wrap
msgid "host-side modules"
msgstr "módulos do lado do host"

#. type: Plain text
#: guix-git/doc/contributing.texi:1820
msgid "Guile modules that are meant to be used on the builder side must live in the @code{(guix build @dots{})} name space.  They must not refer to other Guix or GNU modules.  However, it is OK for a ``host-side'' module to use a build-side module.  As an example, the @code{(guix search-paths)} module should not be imported and used by a package since it isn't meant to be used as a ``build-side'' module.  It would also couple the module with the package's dependency graph, which is undesirable."
msgstr "Os módulos do Guile que devem ser usados no lado do compilador devem residir no espaço de nomes @code{(guix build @dots{})}. Eles não devem fazer referência a outros módulos Guix ou GNU. No entanto, é aceitável que um módulo no lado do ``hospedeiro'' use um módulo na banda do compilador. Como um exemplo, o módulo @code{(guix search-paths)} não deveria ser importado e usado por um pacote desde que o mesmo não é feito para ser usado como módulo da ``banda de compilação''.  Isso também acoplaria o módulo ao grafo de pacotes de dependência, o que não é desejado."

#. type: Plain text
#: guix-git/doc/contributing.texi:1823
msgid "Modules that deal with the broader GNU system should be in the @code{(gnu @dots{})} name space rather than @code{(guix @dots{})}."
msgstr "Módulos que lidam com o sistema GNU mais amplo devem estar no espaço de nome @code{(gnu @dots{})} em vez de @code{(guix @dots{})}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1832
msgid "The tendency in classical Lisp is to use lists to represent everything, and then to browse them ``by hand'' using @code{car}, @code{cdr}, @code{cadr}, and co.  There are several problems with that style, notably the fact that it is hard to read, error-prone, and a hindrance to proper type error reports."
msgstr "A tendência no Lisp clássico é usar listas para representar tudo e, em seguida, pesquisá-las ``à mão'' usando @code{car}, @code{cdr}, @code{cadr} e co. Existem vários problemas com esse estilo, notadamente o fato de que é difícil de ler, propenso a erros e um obstáculo para os relatórios de erros de tipos adequados."

#. type: findex
#: guix-git/doc/contributing.texi:1833
#, no-wrap
msgid "define-record-type*"
msgstr "define-record-type*"

#. type: findex
#: guix-git/doc/contributing.texi:1834
#, no-wrap
msgid "match-record"
msgstr "match-record"

#. type: cindex
#: guix-git/doc/contributing.texi:1835
#, no-wrap
msgid "pattern matching"
msgstr "correspondência de padrão"

#. type: Plain text
#: guix-git/doc/contributing.texi:1843
msgid "Guix code should define appropriate data types (for instance, using @code{define-record-type*}) rather than abuse lists.  In addition, it should use pattern matching, via Guile’s @code{(ice-9 match)} module, especially when matching lists (@pxref{Pattern Matching,,, guile, GNU Guile Reference Manual}); pattern matching for records is better done using @code{match-record} from @code{(guix records)}, which, unlike @code{match}, verifies field names at macro-expansion time."
msgstr "O código Guix deve definir tipos de dados apropriados (por exemplo, usando @code{define-record-type*}) em vez de listas de abuso. Além disso, ele deve usar correspondência de padrões, por meio do módulo @code{(ice-9 match)} do Guile, especialmente ao corresponder listas (@pxref{Pattern Matching,,, guile, Manual de Referência do GNU Guile}); a correspondência de padrões para registros é melhor feita usando @code{match-record} do @code{(guix records)}, que, diferentemente do @code{match}, verifica nomes de campos no momento da macroexpansão."

#. type: Plain text
#: guix-git/doc/contributing.texi:1854
msgid "When defining a new record type, keep the @dfn{record type descriptor} (RTD) private (@pxref{Records,,, guile, GNU Guile Reference Manual}, for more on records and RTDs).  As an example, the @code{(guix packages)} module defines @code{<package>} as the RTD for package records but it does not export it; instead, it exports a type predicate, a constructor, and field accessors.  Exporting RTDs would make it harder to change the application binary interface (because code in other modules might be matching fields by position) and would make it trivial for users to forge records of that type, bypassing any checks we may have in the official constructor (such as ``field sanitizers'')."
msgstr "Ao definir um novo tipo de registro, mantenha o @dfn{record type descriptor} (RTD) privado (@pxref{Records,,, guile, Manual de Referência do GNU Guile}, para mais informações sobre registros e RTDs). Como exemplo, o módulo @code{(guix packages)} define @code{<package>} como o RTD para registros de pacote, mas não o exporta; em vez disso, ele exporta um predicado de tipo, um construtor e acessadores de campo. Exportar RTDs tornaria mais difícil alterar a interface binária do aplicativo (porque o código em outros módulos pode estar correspondendo campos por posição) e tornaria trivial para os usuários falsificar registros desse tipo, ignorando quaisquer verificações que possamos ter no construtor oficial (como ``sanitizadores de campo'')."

#. type: cindex
#: guix-git/doc/contributing.texi:1858
#, no-wrap
msgid "formatting code"
msgstr "formatação de código"

#. type: cindex
#: guix-git/doc/contributing.texi:1859
#, no-wrap
msgid "coding style"
msgstr "estilo de codificação"

#. type: Plain text
#: guix-git/doc/contributing.texi:1866
msgid "When writing Scheme code, we follow common wisdom among Scheme programmers.  In general, we follow the @url{https://mumble.net/~campbell/scheme/style.txt, Riastradh's Lisp Style Rules}.  This document happens to describe the conventions mostly used in Guile’s code too.  It is very thoughtful and well written, so please do read it."
msgstr "Ao escrever código Scheme, seguimos a sabedoria comum entre os programadores Scheme. Em geral, seguimos o @url{https://mumble.net/~campbell/scheme/style.txt, Riastradh's Lisp Style Rules}. Este documento descreve as convenções mais usadas no código de Guile também. Ele é muito bem pensado e bem escrito, então, por favor, leia."

#. type: Plain text
#: guix-git/doc/contributing.texi:1873
msgid "Some special forms introduced in Guix, such as the @code{substitute*} macro, have special indentation rules.  These are defined in the @file{.dir-locals.el} file, which Emacs automatically uses.  Also note that Emacs-Guix provides @code{guix-devel-mode} mode that indents and highlights Guix code properly (@pxref{Development,,, emacs-guix, The Emacs-Guix Reference Manual})."
msgstr "Alguns formulários especiais introduzidos no Guix, como a macro @code{substitute*}, possuem regras especiais de recuo. Estes são definidos no arquivo @file{.dir-locals.el}, que o Emacs usa automaticamente. Observe também que o Emacs-Guix fornece o modo @code{guix-devel-mode} que recua e destaca o código Guix corretamente (@pxref{Development ,,, emacs-guix, O manual de referência do Emacs-Guix})."

#. type: cindex
#: guix-git/doc/contributing.texi:1874
#, no-wrap
msgid "indentation, of code"
msgstr "recuo, de código"

#. type: cindex
#: guix-git/doc/contributing.texi:1875
#, no-wrap
msgid "formatting, of code"
msgstr "formatação, de código"

#. type: Plain text
#: guix-git/doc/contributing.texi:1878
msgid "If you do not use Emacs, please make sure your editor knows these rules.  To automatically indent a package definition, you can also run:"
msgstr "Se você não usa o Emacs, por favor, certifique-se que o seu editor conhece estas regras. Para recuar automaticamente uma definição de pacote, você também pode executar:"

#. type: example
#: guix-git/doc/contributing.texi:1881
#, no-wrap
msgid "./pre-inst-env guix style @var{package}\n"
msgstr "./pre-inst-env guix style @var{package}\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:1885
msgid "@xref{Invoking guix style}, for more information."
msgstr "@xref{Invoking guix style}, para mais informações."

#. type: Plain text
#: guix-git/doc/contributing.texi:1889
msgid "We require all top-level procedures to carry a docstring.  This requirement can be relaxed for simple private procedures in the @code{(guix build @dots{})} name space, though."
msgstr "Nós exigimos que todos os procedimentos de nível superior carreguem uma docstring. Porém, este requisito pode ser relaxado para procedimentos privados simples no espaço de nomes @code{(guix build @dots{})}."

#. type: Plain text
#: guix-git/doc/contributing.texi:1892
msgid "Procedures should not have more than four positional parameters.  Use keyword parameters for procedures that take more than four parameters."
msgstr "Os procedimentos não devem ter mais de quatro parâmetros posicionais. Use os parâmetros de palavra-chave para procedimentos que levam mais de quatro parâmetros."

#. type: Plain text
#: guix-git/doc/contributing.texi:1900
msgid "Development is done using the Git distributed version control system.  Thus, access to the repository is not strictly necessary.  We welcome contributions in one of the following forms:"
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:1903
#, no-wrap
msgid "pull request, for contributions"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:1907
msgid "As a @dfn{pull request} (PR) at @url{https://codeberg.org/guix/guix/pulls/}.  This is now the preferred form."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:1916
msgid "Until December 31st, 2025@footnote{This date is the result of a decision made collectively in @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Guix Consensus Document 002} in May 2025.}, you may also send patches as produced by @code{git format-patch} to the @email{guix-patches@@gnu.org} mailing list (@pxref{Submitting patches to a project,,, git, Git User Manual})."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:1923
msgid "This mailing list is backed by a Debbugs instance, which allows us to keep track of submissions (@pxref{Tracking Bugs and Changes}).  Each message sent to that mailing list gets a new tracking number assigned; people can then follow up on the submission by sending email to @code{@var{ISSUE_NUMBER}@@debbugs.gnu.org}, where @var{ISSUE_NUMBER} is the tracking number (@pxref{Sending a Patch Series})."
msgstr "Esta lista de discussão é apoiada por uma instância do Debbugs, o que nos permite acompanhar os envios (@pxref{Tracking Bugs and Changes}). Cada mensagem enviada para essa lista de discussão recebe um novo número de rastreamento atribuído; as pessoas podem então acompanhar o envio enviando um e-mail para @code{@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org}, onde @var{NÚMERO_DE_ISSÃO} é o número de rastreamento (@pxref{Sending a Patch Series})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1929
#, fuzzy
#| msgid "Development is done using the Git distributed version control system.  Thus, access to the repository is not strictly necessary.  We welcome contributions in the form of patches as produced by @code{git format-patch} sent to the @email{guix-patches@@gnu.org} mailing list (@pxref{Submitting patches to a project,,, git, Git User Manual}).  Contributors are encouraged to take a moment to set some Git repository options (@pxref{Configuring Git}) first, which can improve the readability of patches.  Seasoned Guix developers may also want to look at the section on commit access (@pxref{Commit Access})."
msgid "Either way, contributors are encouraged to take a moment to set some Git repository options (@pxref{Configuring Git}) first, which can improve the readability of patches.  Seasoned Guix developers may also want to look at the section on commit access (@pxref{Commit Access})."
msgstr "O desenvolvimento é feito usando o sistema de controle de versão distribuído Git. Assim, o acesso ao repositório não é estritamente necessário. Aceitamos contribuições na forma de patches produzidos por @code{git format-patch} enviados para a lista de discussão @email{guix-patches@@gnu.org} (@pxref{Submitting patches to a project,,, git, Manual do usuário do Git}). Os colaboradores são encorajados a reservar um momento para definir algumas opções do repositório Git (@pxref{Configuring Git}) primeiro, o que pode melhorar a legibilidade dos patches. Desenvolvedores Guix experientes também podem querer dar uma olhada na seção sobre acesso de commit (@pxref{Commit Access})."

#. type: Plain text
#: guix-git/doc/contributing.texi:1933
msgid "Please write commit logs in the ChangeLog format (@pxref{Change Logs,,, standards, GNU Coding Standards}); you can check the commit history for examples."
msgstr "Por favor, escreva os logs de commit no formato de ChangeLog (@pxref{Change Logs ,,, standards, GNU Coding Standards}); você pode verificar o histórico de commit para exemplos."

#. type: Plain text
#: guix-git/doc/contributing.texi:1943
msgid "You can help make the review process more efficient, and increase the chance that your patch will be reviewed quickly, by describing the context of your patch and the impact you expect it to have.  For example, if your patch is fixing something that is broken, describe the problem and how your patch fixes it.  Tell us how you have tested your patch.  Will users of the code changed by your patch have to adjust their workflow at all? If so, tell us how.  In general, try to imagine what questions a reviewer will ask, and answer those questions in advance."
msgstr "Você pode ajudar a tornar o processo de revisão mais eficiente e aumentar a chance de que seu patch seja revisado rapidamente, descrevendo o contexto do seu patch e o impacto que você espera que ele tenha. Por exemplo, se seu patch estiver corrigindo algo que está quebrado, descreva o problema e como seu patch o corrige. Conte-nos como você testou seu patch. Os usuários do código alterado pelo seu patch terão que ajustar seu fluxo de trabalho? Se sim, conte-nos como. Em geral, tente imaginar quais perguntas um revisor fará e responda a essas perguntas com antecedência."

#. type: Plain text
#: guix-git/doc/contributing.texi:1946
msgid "Before submitting a patch that adds or modifies a package definition, please run through this check list:"
msgstr "Antes de enviar um patch que adicione ou modifique uma definição de pacote, execute esta lista de verificação:"

#. type: enumerate
#: guix-git/doc/contributing.texi:1953
msgid "If the authors of the packaged software provide a cryptographic signature for the release tarball, make an effort to verify the authenticity of the archive.  For a detached GPG signature file this would be done with the @code{gpg --verify} command."
msgstr "Se os autores do software empacotado fornecerem uma assinatura criptográfica para o tarball de lançamento, faça um esforço para verificar a autenticidade do arquivo. Para um arquivo de assinatura GPG separado, isso seria feito com o comando @code{gpg --verify}."

#. type: enumerate
#: guix-git/doc/contributing.texi:1957
msgid "Take some time to provide an adequate synopsis and description for the package.  @xref{Synopses and Descriptions}, for some guidelines."
msgstr "Reserve algum tempo para fornecer uma sinopse e descrição adequadas para o pacote. @xref{Synopses and Descriptions}, para algumas diretrizes."

#. type: enumerate
#: guix-git/doc/contributing.texi:1962
msgid "Run @command{guix lint @var{package}}, where @var{package} is the name of the new or modified package, and fix any errors it reports (@pxref{Invoking guix lint})."
msgstr "Execute @command{guix lint @var{pacote}}, sendo @var{pacote} o nome do pacote novo ou modificado e corrija quaisquer erros que forem relatados (@pxref{Invoking guix lint})."

#. type: enumerate
#: guix-git/doc/contributing.texi:1966
msgid "Run @command{guix style @var{package}} to format the new package definition according to the project's conventions (@pxref{Invoking guix style})."
msgstr "Execute @command{guix style @var{pacote}}, para formatar a nova definição de pacote de acordo com as convençôes do projeto (@pxref{Invoking guix style})."

#. type: enumerate
#: guix-git/doc/contributing.texi:1972
msgid "Make sure the package builds on your platform, using @command{guix build @var{package}}.  Also build at least its direct dependents with @command{guix build --dependents=1 @var{package}} (@pxref{build-dependents, @command{guix build}})."
msgstr "Certifique-se de que o pacote compila em sua plataforma, usando @command{guix build @var{pacote}}. Também compile pelo menos suas depêndencias diretas com @command{guix build --dependents=1 @var{pacote}} (@pxref{build-dependents, @command{guix build}})."

#. type: enumerate
#: guix-git/doc/contributing.texi:1980
msgid "We recommend you also try building the package on other supported platforms.  As you may not have access to actual hardware platforms, we recommend using the @code{qemu-binfmt-service-type} to emulate them.  In order to enable it, add the @code{virtualization} service module and the following service to the list of services in your @code{operating-system} configuration:"
msgstr "Recomendamos que você também tente compilar o pacote em outras plataformas suportadas. Como você pode não ter acesso às plataformas de hardware reais, recomendamos o uso do @code{qemu-binfmt-service-type} para emulá-las. Para habilitar isso, adicione o módulo de serviço @code{virtualization} e o sequinte serviço à lista de serviços da sua configuração do @code{operating-system}:"

#. type: lisp
#: guix-git/doc/contributing.texi:1985
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""
"(service qemu-binfmt-service-type\n"
" (qemu-binfmt-configuration\n"
"   (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:1988
msgid "Then reconfigure your system."
msgstr "Então, reconfigure seu sistema."

#. type: enumerate
#: guix-git/doc/contributing.texi:1993
msgid "You can then build packages for different platforms by specifying the @code{--system} option.  For example, to build the \"hello\" package for the armhf or aarch64 architectures, you would run the following commands, respectively:"
msgstr "Você pode criar pacotes para plataformas diferentes especificando a opção @code{--system}. Por exemplo, para compilar o pacote \"hello\" para as arquiteturas armhf ou aarch64, você executaria os seguintes comandos, respectivamente:"

#. type: example
#: guix-git/doc/contributing.texi:1996
#, no-wrap
msgid ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"
msgstr ""
"guix build --system=armhf-linux --rounds=2 hello\n"
"guix build --system=aarch64-linux --rounds=2 hello\n"

#. type: cindex
#: guix-git/doc/contributing.texi:1999
#, no-wrap
msgid "bundling"
msgstr "incorporando"

#. type: enumerate
#: guix-git/doc/contributing.texi:2002
msgid "Make sure the package does not use bundled copies of software already available as separate packages."
msgstr "Verifique se o pacote não usa cópias de software já disponíveis como pacotes separados."

#. type: enumerate
#: guix-git/doc/contributing.texi:2011
msgid "Sometimes, packages include copies of the source code of their dependencies as a convenience for users.  However, as a distribution, we want to make sure that such packages end up using the copy we already have in the distribution, if there is one.  This improves resource usage (the dependency is built and stored only once), and allows the distribution to make transverse changes such as applying security updates for a given software package in a single place and have them affect the whole system---something that bundled copies prevent."
msgstr "Às vezes, os pacotes incluem cópias do código-fonte de suas dependências como uma conveniência para os usuários. No entanto, como uma distribuição, queremos garantir que esses pacotes acabem usando a cópia que já temos na distribuição, se houver. Isso melhora o uso de recursos (a dependência é criada e armazenada apenas uma vez) e permite que a distribuição faça alterações transversais, como aplicar atualizações de segurança para um determinado pacote de software em um único local e fazê-las afetar todo o sistema -- algo que cópias incluídas impedem."

#. type: enumerate
#: guix-git/doc/contributing.texi:2020
msgid "Take a look at the profile reported by @command{guix size} (@pxref{Invoking guix size}).  This will allow you to notice references to other packages unwillingly retained.  It may also help determine whether to split the package (@pxref{Packages with Multiple Outputs}), and which optional dependencies should be used.  In particular, avoid adding @code{texlive} as a dependency: because of its extreme size, use @code{texlive-local-tree} procedure instead."
msgstr "Dê uma olhada no perfil relatado por @command{guix size} (@pxref{Invoking guix size}). Isso permitirá que você perceba referências a outros pacotes retidos involuntariamente. Também pode ajudar a determinar se deve dividir o pacote (@pxref{Packages with Multiple Outputs}) e quais dependências opcionais devem ser usadas. Em particular, evite adicionar @code{texlive} como uma dependência: devido ao seu tamanho extremo, em vez disso, use o procedimento @code{texlive-local-tree}."

#. type: enumerate
#: guix-git/doc/contributing.texi:2025
msgid "Check that dependent packages (if applicable) are not affected by the change; @command{guix refresh --list-dependent @var{package}} will help you do that (@pxref{Invoking guix refresh})."
msgstr "Verifique-se os pacotes dependentes (se aplicável) não são afetados pela alteração; @command{guix refresh --list-dependent @var{pacote}} ajudará você a fazer isso (@pxref{Invoking guix refresh})."

#. type: cindex
#: guix-git/doc/contributing.texi:2027
#, no-wrap
msgid "determinism, of build processes"
msgstr "determinismo, de processos de compilação"

#. type: cindex
#: guix-git/doc/contributing.texi:2028
#, no-wrap
msgid "reproducible builds, checking"
msgstr "compilações reproduzíveis, verificação"

#. type: enumerate
#: guix-git/doc/contributing.texi:2032
msgid "Check whether the package's build process is deterministic.  This typically means checking whether an independent build of the package yields the exact same result that you obtained, bit for bit."
msgstr "Verifique se o processo de compilação do pacote é determinístico. Isso normalmente significa verificar se uma compilação independente do pacote produz o mesmo resultado que você obteve, bit por bit."

#. type: enumerate
#: guix-git/doc/contributing.texi:2035
msgid "A simple way to do that is by building the same package several times in a row on your machine (@pxref{Invoking guix build}):"
msgstr "Uma maneira simples de fazer isso é compilar o mesmo pacote várias vezes seguidas em sua máquina (@pxref{Invoking guix build}):"

#. type: example
#: guix-git/doc/contributing.texi:2038
#, no-wrap
msgid "guix build --rounds=2 my-package\n"
msgstr "guix build --rounds=2 meu-pacote\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:2042
msgid "This is enough to catch a class of common non-determinism issues, such as timestamps or randomly-generated output in the build result."
msgstr "Isso é suficiente para capturar uma classe de problemas comuns de não-determinismo, como registros de data e hora ou saída gerada aleatoriamente no resultado da compilação."

#. type: enumerate
#: guix-git/doc/contributing.texi:2052
msgid "Another option is to use @command{guix challenge} (@pxref{Invoking guix challenge}).  You may run it once the package has been committed and built by @code{@value{SUBSTITUTE-SERVER-1}} to check whether it obtains the same result as you did.  Better yet: Find another machine that can build it and run @command{guix publish}.  Since the remote build machine is likely different from yours, this can catch non-determinism issues related to the hardware---e.g., use of different instruction set extensions---or to the operating system kernel---e.g., reliance on @code{uname} or @file{/proc} files."
msgstr "Outra opção é usar @command{guix challenge} (@pxref{Invoking guix challenge}). Você pode executá-lo uma vez que o pacote se tenha sido feito o commit e compilação por @code{SUBSTITUTE-SERVER-1} para verificar se obtém o mesmo resultado que você fez. Melhor ainda: encontre outra máquina que possa compilá-lo e executar @command{guix publish}. Como a máquina de compilação remota provavelmente é diferente da sua, isso pode capturar problemas de não determinismo relacionados ao hardware - por exemplo, uso de extensões de conjunto de instruções diferentes – ou ao kernel do sistema operacional – por exemplo, confiança em @code{uname} ou arquivos de @file{/proc}."

#. type: enumerate
#: guix-git/doc/contributing.texi:2058
msgid "When writing documentation, please use gender-neutral wording when referring to people, such as @uref{https://en.wikipedia.org/wiki/Singular_they, singular ``they''@comma{} ``their''@comma{} ``them''}, and so forth."
msgstr "Ao escrever documentação, por favor, use palavras de gênero neutras ao se referir a pessoas, como @uref{https://en.wikipedia.org/wiki/Singular_they, singular ``they''@comma{} ``their'' @comma{} ``them''}, e assim por diante."

#. type: enumerate
#: guix-git/doc/contributing.texi:2062
msgid "Verify that your patch contains only one set of related changes.  Bundling unrelated changes together makes reviewing harder and slower."
msgstr "Verifique se o seu patch contém apenas um conjunto de alterações relacionadas. Agrupar mudanças não relacionadas juntas torna a revisão mais difícil e lenta."

#. type: enumerate
#: guix-git/doc/contributing.texi:2065
msgid "Examples of unrelated changes include the addition of several packages, or a package update along with fixes to that package."
msgstr "Exemplos de alterações não relacionadas incluem a adição de vários pacotes ou uma atualização de pacote juntamente com correções para esse pacote."

#. type: enumerate
#: guix-git/doc/contributing.texi:2070
msgid "Please follow our code formatting rules, possibly running @command{guix style} script to do that automatically for you (@pxref{Formatting Code})."
msgstr "Siga nossas regras de formatação de código, possivelmente executando o script @command{guix style} para fazer isso automaticamente para você (@pxref{Formatting Code})."

#. type: enumerate
#: guix-git/doc/contributing.texi:2078
msgid "When possible, use mirrors in the source URL (@pxref{Invoking guix download}).  Use reliable URLs, not generated ones.  For instance, GitHub archives are not necessarily identical from one generation to the next, so in this case it's often better to clone the repository.  Don't use the @code{name} field in the URL: it is not very useful and if the name changes, the URL will probably be wrong."
msgstr "Quando possível, use espelhos no URL fonte (@pxref{Invoking guix download}). Use URLs confiáveis, não os gerados. Por exemplo, os arquivos do GitHub não são necessariamente idênticos de uma geração para a seguinte, portanto, nesse caso, geralmente é melhor clonar o repositório. Não use o campo @code{name} no URL: não é muito útil e se o nome mudar, o URL provavelmente estará errado."

#. type: enumerate
#: guix-git/doc/contributing.texi:2082
msgid "Check if Guix builds (@pxref{Building from Git}) and address the warnings, especially those about use of undefined symbols."
msgstr "Verifique se o Guix compila (@pxref{Building from Git}) e resolva os avisos, especialmente aqueles sobre o uso de símbolos indefinidos."

#. type: enumerate
#: guix-git/doc/contributing.texi:2086
msgid "Make sure your changes do not break Guix and simulate a @command{guix pull} with:"
msgstr "Certifique-se de que suas alterações não quebrem o Guix e simule um @command{guix pull} com:"

#. type: example
#: guix-git/doc/contributing.texi:2088
#, no-wrap
msgid "guix pull --url=/path/to/your/checkout --profile=/tmp/guix.master --disable-authentication\n"
msgstr "guix pull --url=/caminho/para/seu/checkout --profile=/tmp/guix.master --disable-authentication\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2096
msgid "When posting a patch to the mailing list, use @samp{[PATCH] @dots{}} as a subject, if your patch is to be applied on a branch other than @code{master}, say @code{core-updates}, specify it in the subject like @samp{[PATCH core-updates] @dots{}}."
msgstr "Ao postar um patch na lista de discussão, use @samp{[PATCH] @dots{}} como assunto. Se seu patch for aplicado em uma ramificação diferente de @code{master}, digamos @code{core-updates}, especifique-o no assunto como @samp{[PATCH core-updates] @dots{}}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2103
msgid "You may use your email client, the @command{git send-email} command (@pxref{Sending a Patch Series}) or the @command{mumi send-email} command (@pxref{Debbugs User Interfaces}).  We prefer to get patches in plain text messages, either inline or as MIME attachments.  You are advised to pay attention if your email client changes anything like line breaks or indentation which could potentially break the patches."
msgstr "Você pode usar seu cliente de e-mail, o comando @command{git send-email} (@pxref{Sending a Patch Series}) ou o comando @command{mumi send-email} (@pxref{Debbugs User Interfaces}). Preferimos obter patches em mensagens de texto simples, seja em linha ou como anexos MIME. É aconselhável que você preste atenção se seu cliente de e-mail alterar algo como quebras de linha ou recuo, o que pode potencialmente quebrar os patches."

#. type: Plain text
#: guix-git/doc/contributing.texi:2108
msgid "Expect some delay when you submit your very first patch to @email{guix-patches@@gnu.org}. You have to wait until you get an acknowledgement with the assigned tracking number. Future acknowledgements should not be delayed."
msgstr "Espere algum atraso quando você enviar seu primeiro patch para @email{guix-patches@@gnu.org}. Você tem que esperar até receber uma confirmação com o número de rastreamento atribuído. Confirmações futuras não devem ser atrasadas."

#. type: Plain text
#: guix-git/doc/contributing.texi:2111
msgid "When a bug is resolved, please close the thread by sending an email to @email{@var{ISSUE_NUMBER}-done@@debbugs.gnu.org}."
msgstr "Quando um erro for resolvido, feche o tópico enviando um e-mail para @email{@var{NÚMERO_DE_ISSÃO}-done@@debbugs.gnu.org}."

#. type: subsection
#: guix-git/doc/contributing.texi:2115 guix-git/doc/contributing.texi:2117
#: guix-git/doc/contributing.texi:2118
#, no-wrap
msgid "Configuring Git"
msgstr "Configurando o Git"

#. type: subsection
#: guix-git/doc/contributing.texi:2115 guix-git/doc/contributing.texi:2141
#: guix-git/doc/contributing.texi:2142
#, no-wrap
msgid "Sending a Patch Series"
msgstr "Enviando uma série de patches"

#. type: cindex
#: guix-git/doc/contributing.texi:2119
#, no-wrap
msgid "git configuration"
msgstr "Configuração do git"

#. type: code{#1}
#: guix-git/doc/contributing.texi:2120 guix-git/doc/contributing.texi:2145
#, no-wrap
msgid "git format-patch"
msgstr "git format-patch"

#. type: code{#1}
#: guix-git/doc/contributing.texi:2121 guix-git/doc/contributing.texi:2144
#, no-wrap
msgid "git send-email"
msgstr "git send-email"

#. type: Plain text
#: guix-git/doc/contributing.texi:2129
msgid "If you have not done so already, you may wish to set a name and email that will be associated with your commits (@pxref{telling git your name, , Telling Git your name, git, Git User Manual}).  If you wish to use a different name or email just for commits in this repository, you can use @command{git config --local}, or edit @file{.git/config} in the repository instead of @file{~/.gitconfig}."
msgstr "Se você ainda não fez isso, você pode querer definir um nome e e-mail que serão associados aos seus commits (@pxref{telling git your name, , Telling Git your name, git, Git User Manual}). Se você quiser usar um nome ou e-mail diferente apenas para commits neste repositório, você pode usar @command{git config --local}, ou editar @file{.git/config} no repositório em vez de @file{~/.gitconfig}."

#. type: cindex
#: guix-git/doc/contributing.texi:2130
#, no-wrap
msgid "commit-msg hook"
msgstr "gancho commit-msg"

#. type: Plain text
#: guix-git/doc/contributing.texi:2140
msgid "Other important Git configuration will automatically be configured when building the project (@pxref{Building from Git}).  A @file{.git/hooks/commit-msg} hook will be installed that embeds @samp{Change-Id} Git @emph{trailers} in your commit messages for traceability purposes.  It is important to preserve these when editing your commit messages, particularly if a first version of your proposed changes was already submitted for review.  If you have a @file{commit-msg} hook of your own you would like to use with Guix, you can place it under the @file{.git/hooks/commit-msg.d/} directory."
msgstr "Outras configurações importantes do Git serão configuradas automaticamente ao construir o projeto (@pxref{Building from Git}). Um hook @file{.git/hooks/commit-msg} será instalado, incorporando @samp{Change-Id} Git @emph{trailers} em suas mensagens de commit para fins de rastreabilidade. É importante preservá-los ao editar suas mensagens de commit, principalmente se uma primeira versão de suas alterações propostas já foi enviada para revisão. Se você tiver um hook @file{commit-msg} próprio que gostaria de usar com o Guix, pode colocá-lo no diretório @file{.git/hooks/commit-msg.d/}."

#. type: cindex
#: guix-git/doc/contributing.texi:2143
#, no-wrap
msgid "patch series"
msgstr "série de patches"

#. type: quotation
#: guix-git/doc/contributing.texi:2147 guix-git/doc/contributing.texi:2445
#: guix-git/doc/guix.texi:1053 guix-git/doc/guix.texi:1094
#: guix-git/doc/guix.texi:1694 guix-git/doc/guix.texi:5767
#: guix-git/doc/guix.texi:7214 guix-git/doc/guix.texi:7254
#: guix-git/doc/guix.texi:7282 guix-git/doc/guix.texi:13743
#: guix-git/doc/guix.texi:17989 guix-git/doc/guix.texi:20197
#: guix-git/doc/guix.texi:21448 guix-git/doc/guix.texi:22444
#: guix-git/doc/guix.texi:22452 guix-git/doc/guix.texi:27578
#: guix-git/doc/guix.texi:27585 guix-git/doc/guix.texi:36767
#: guix-git/doc/guix.texi:40107 guix-git/doc/guix.texi:43395
#: guix-git/doc/guix.texi:45156
#, no-wrap
msgid "Warning"
msgstr "Aviso"

#. type: quotation
#: guix-git/doc/contributing.texi:2152
msgid "This section is about contributing code by sending patches by email.  This option is supported until December 31st, 2025, but we recommend getting familiar with the @dfn{pull request} workflow, which will become the norm after that date.  @xref{Submitting Patches}, for more info."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2154 guix-git/doc/contributing.texi:2161
#, no-wrap
msgid "Single Patches"
msgstr "Patches únicos"

#. type: Plain text
#: guix-git/doc/contributing.texi:2161
msgid "The @command{git send-email} command is the best way to send both single patches and patch series (@pxref{Multiple Patches}) to the Guix mailing list.  Sending patches as email attachments may make them difficult to review in some mail clients, and @command{git diff} does not store commit metadata."
msgstr "O comando @command{git send-email} é a melhor maneira de enviar patches únicos e séries de patches (@pxref{Multiple Patches}) para a lista de discussão do Guix. Enviar patches como anexos de e-mail pode dificultar sua revisão em alguns clientes de e-mail, e @command{git diff} não armazena metadados de commit."

#. type: quotation
#: guix-git/doc/contributing.texi:2165
msgid "The @command{git send-email} command is provided by the @code{send-email} output of the @code{git} package, i.e. @code{git:send-email}."
msgstr "O comando @command{git send-email} é fornecido pela saída @code{send-email} do pacote @code{git}, ou seja, @code{git:send-email}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2172
msgid "The following command will create a patch email from the latest commit, open it in your @var{EDITOR} or @var{VISUAL} for editing, and send it to the Guix mailing list to be reviewed and merged.  Assuming you have already configured Git according to @xref{Configuring Git}, you can simply use:"
msgstr "O comando a seguir criará um e-mail de patch a partir do último commit, abrirá no seu @var{EDITOR} ou @var{VISUAL} para edição e o enviará para a lista de discussão do Guix para ser revisado e mesclado. Supondo que você já tenha configurado o Git de acordo com @xref{Configuring Git}, você pode simplesmente usar:"

#. type: example
#: guix-git/doc/contributing.texi:2175
#, no-wrap
msgid "$ git send-email --annotate -1\n"
msgstr "$ git send-email --annotate -1\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2177 guix-git/doc/guix.texi:10795
#: guix-git/doc/guix.texi:21245 guix-git/doc/guix.texi:21253
#: guix-git/doc/guix.texi:37481
#, no-wrap
msgid "Tip"
msgstr "Dica"

#. type: quotation
#: guix-git/doc/contributing.texi:2183
msgid "To add a prefix to the subject of your patch, you may use the @option{--subject-prefix} option.  The Guix project uses this to specify that the patch is intended for a branch or repository other than the @code{master} branch of @url{https://codeberg.org/guix/guix.git}."
msgstr "Para adicionar um prefixo ao assunto do seu patch, você pode usar a opção @option{--subject-prefix}. O projeto Guix usa isso para especificar que o patch é destinado a um branch ou repositório diferente do branch @code{master} do @url{https://codeberg.org/guix/guix.git}."

#. type: example
#: guix-git/doc/contributing.texi:2186
#, no-wrap
msgid "git send-email --annotate --subject-prefix='PATCH core-updates' -1\n"
msgstr "git send-email --annotate --subject-prefix='PATCH core-updates' -1\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2193
msgid "The patch email contains a three-dash separator line after the commit message.  You may ``annotate'' the patch with explanatory text by adding it under this line.  If you do not wish to annotate the email, you may drop the @option{--annotate} option."
msgstr "O e-mail do patch contém uma linha separadora de três traços após a mensagem de commit. Você pode ``anotar'' o patch com texto explicativo adicionando-o abaixo desta linha. Se não quiser anotar o e-mail, você pode remover a opção @option{--annotate}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2200
msgid "If you need to send a revised patch, don't resend it like this or send a ``fix'' patch to be applied on top of the last one; instead, use @command{git commit --amend} or @url{https://git-rebase.io, @command{git rebase}} to modify the commit, and use the @email{@var{ISSUE_NUMBER}@@debbugs.gnu.org} address and the @option{-v} flag with @command{git send-email}."
msgstr "Se você precisar enviar um patch revisado, não o reenvie dessa forma ou envie um patch ``fix'' para ser aplicado sobre o último; em vez disso, use @command{git commit --amend} ou @url{https://git-rebase.io, @command{git rebase}} para modificar o commit e use o endereço @email{@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org} e o sinalizador @option{-v} com @command{git send-email}."

#. type: example
#: guix-git/doc/contributing.texi:2205
#, no-wrap
msgid ""
"$ git commit --amend\n"
"$ git send-email --annotate -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -1\n"
msgstr ""
"$ git commit --amend\n"
"$ git send-email --annotate -v@var{REVISÃO} \\\n"
"      --to=@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org -1\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2211
msgid "Due to an apparent bug in @command{git send-email}, @option{-v @var{REVISION}} (with the space) will not work; you @emph{must} use @option{-v@var{REVISION}}."
msgstr "Devido a um bug aparente em @command{git send-email}, @option{-v @var{REVISÃO}} (com o espaço) não funcionará; você @emph{deve} usar @option{-v@var{REVISÃO}}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2217
msgid "You can find out @var{ISSUE_NUMBER} either by searching on the mumi interface at @url{https://issues.guix.gnu.org} for the name of your patch or reading the acknowledgement email sent automatically by Debbugs in reply to incoming bugs and patches, which contains the bug number."
msgstr "Você pode descobrir @var{NÚMERO_DE_ISSÃO} pesquisando na interface do mumi em @url{https://issues.guix.gnu.org} pelo nome do seu patch ou lendo o e-mail de confirmação enviado automaticamente pelo Debbugs em resposta a bugs e patches recebidos, que contém o número do bug."

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2218 guix-git/doc/contributing.texi:2220
#, no-wrap
msgid "Notifying Teams"
msgstr "Notificando equipes"

#. type: cindex
#: guix-git/doc/contributing.texi:2220 guix-git/doc/contributing.texi:2736
#, no-wrap
msgid "teams"
msgstr "equipes"

#. type: Plain text
#: guix-git/doc/contributing.texi:2229
msgid "If your git checkout has been correctly configured (@pxref{Configuring Git}), the @command{git send-email} command will automatically notify the appropriate team members, based on the scope of your changes.  This relies on the @file{etc/teams.scm} script, which can also be invoked manually if you do not use the preferred @command{git send-email} command to submit patches.  To list the available actions of the script, you can invoke it via the @command{etc/teams.scm help} command.  For more information regarding teams, @pxref{Teams}."
msgstr "Se o seu git checkout tiver sido configurado corretamente (@pxref{Configuring Git}), o comando @command{git send-email} notificará automaticamente os membros apropriados da equipe, com base no escopo das suas alterações. Isso depende do script @file{etc/teams.scm}, que também pode ser invocado manualmente se você não usar o comando @command{git send-email} preferencial para enviar patches. Para listar as ações disponíveis do script, você pode invocá-lo por meio do comando @command{etc/teams.scm help}. Para obter mais informações sobre equipes, @pxref{Teams}."

#. type: quotation
#: guix-git/doc/contributing.texi:2233
msgid "On foreign distros, you might have to use @command{./pre-inst-env git send-email} for @file{etc/teams.scm} to work."
msgstr "Em distros estrangeiras, talvez seja necessário usar @command{./pre-inst-env git send-email} para que @file{etc/teams.scm} funcione."

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:2235 guix-git/doc/contributing.texi:2237
#, no-wrap
msgid "Multiple Patches"
msgstr "Vários Patches"

#. type: cindex
#: guix-git/doc/contributing.texi:2237
#, no-wrap
msgid "cover letter"
msgstr "carta de apresentação"

#. type: Plain text
#: guix-git/doc/contributing.texi:2243
msgid "While @command{git send-email} alone will suffice for a single patch, an unfortunate flaw in Debbugs means you need to be more careful when sending multiple patches: if you send them all to the @email{guix-patches@@gnu.org} address, a new issue will be created for each patch!"
msgstr "Embora @command{git send-email} sozinho seja suficiente para um único patch, uma falha infeliz no Debbugs significa que você precisa ter mais cuidado ao enviar vários patches: se você enviá-los todos para o endereço @email{guix-patches@@gnu.org}, um novo problema será criado para cada patch!"

#. type: Plain text
#: guix-git/doc/contributing.texi:2249
msgid "When sending a series of patches, it's best to send a Git ``cover letter'' first, to give reviewers an overview of the patch series.  We can create a directory called @file{outgoing} containing both our patch series and a cover letter called @file{0000-cover-letter.patch} with @command{git format-patch}."
msgstr "Ao enviar uma série de patches, é melhor enviar uma ``carta de apresentação'' do Git primeiro, para dar aos revisores uma visão geral da série de patches. Podemos criar um diretório chamado @file{outgoing} contendo nossa série de patches e uma carta de apresentação chamada @file{0000-cover-letter.patch} com @command{git format-patch}."

#. type: example
#: guix-git/doc/contributing.texi:2253
#, no-wrap
msgid ""
"$ git format-patch -@var{NUMBER_COMMITS} -o outgoing \\\n"
"      --cover-letter\n"
msgstr ""
"$ git format-patch -@var{NÚMERO_COMMITS} -o outgoing \\\n"
"      --cover-letter --base=auto\n"

#. type: quotation
#: guix-git/doc/contributing.texi:2260
msgid "@code{git format-patch} accepts a wide range of @uref{https://git-scm.com/docs/gitrevisions, revision range} specifiers.  For example, if you are working in a branch, you could select all commits in your branch starting at @code{master}."
msgstr "@code{git format-patch} aceita uma ampla variedade de especificadores de @uref{https://git-scm.com/docs/gitrevisions, intervalo de revisão}. Por exemplo, se você estiver trabalhando em um ramo, poderá selecionar todos os commits em seu ramo começando em @code{master}."

#. type: example
#: guix-git/doc/contributing.texi:2264
#, no-wrap
msgid ""
"$ git format-patch master..@var{MY_BRANCH} -o outgoing \\\n"
"      --cover-letter\n"
msgstr ""
"$ git format-patch master..@var{MEU_RAMO} -o outgoing \\\n"
"      --cover-letter\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2270
msgid "We can now send @emph{just} the cover letter to the @email{guix-patches@@gnu.org} address, which will create an issue that we can send the rest of the patches to."
msgstr "Agora podemos enviar @emph{apenas} a carta de apresentação para o endereço @email{guix-patches@@gnu.org}, o que criará um problema para o qual podemos enviar o restante dos patches."

#. type: example
#: guix-git/doc/contributing.texi:2274
#, no-wrap
msgid ""
"$ git send-email outgoing/0000-cover-letter.patch --annotate\n"
"$ rm outgoing/0000-cover-letter.patch # we don't want to resend it!\n"
msgstr ""
"$ git send-email outgoing/0000-cover-letter.patch --annotate\n"
"$ rm outgoing/0000-cover-letter.patch # não queremos reenviar isso.\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2279
msgid "Ensure you edit the email to add an appropriate subject line and blurb before sending it.  Note the automatically generated shortlog and diffstat below the blurb."
msgstr "Certifique-se de editar o e-mail para adicionar uma linha de assunto e um resumo apropriados antes de enviá-lo. Observe o shortlog e o diffstat gerados automaticamente abaixo do resumo."

#. type: Plain text
#: guix-git/doc/contributing.texi:2282
msgid "Once the Debbugs mailer has replied to your cover letter email, you can send the actual patches to the newly-created issue address."
msgstr "Depois que o remetente do Debbugs responder ao seu e-mail de carta de apresentação, você poderá enviar os patches reais para o endereço do problema recém-criado."

#. type: example
#: guix-git/doc/contributing.texi:2286
#, no-wrap
msgid ""
"$ git send-email outgoing/*.patch --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"
"$ rm -rf outgoing # we don't need these anymore\n"
msgstr ""
"$ git send-email outgoing/*.patch --to=@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org\n"
"$ rm -rf outgoing # we don't need these anymore\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2291
msgid "Thankfully, this @command{git format-patch} dance is not necessary to send an amended patch series, since an issue already exists for the patchset."
msgstr "Felizmente, essa dança @command{git format-patch} não é necessária para enviar uma série de patches corrigida, pois já existe um problema para o conjunto de patches."

#. type: example
#: guix-git/doc/contributing.texi:2295
#, no-wrap
msgid ""
"$ git send-email -@var{NUMBER_COMMITS} -v@var{REVISION} \\\n"
"      --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org\n"
msgstr ""
"$ git send-email -@var{NÚMERO_COMMITS} -v@var{REVISÃO} \\\n"
"      --to=@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2300
msgid "If need be, you may use @option{--cover-letter --annotate} to send another cover letter, e.g. for explaining what's changed since the last revision, and these changes are necessary."
msgstr "Se necessário, você pode usar @option{--cover-letter --annotate} para enviar outra carta de apresentação, por exemplo, para explicar o que mudou desde a última revisão e se essas mudanças são necessárias."

#. type: Plain text
#: guix-git/doc/contributing.texi:2306
msgid "This section describes how the Guix project tracks its bug reports, patch submissions and topic branches."
msgstr "Esta seção descreve como o projeto Guix rastreia seus relatórios de bugs, envios de patches e ramificações de tópicos."

#. type: subsection
#: guix-git/doc/contributing.texi:2313 guix-git/doc/contributing.texi:2315
#: guix-git/doc/contributing.texi:2316
#, no-wrap
msgid "The Issue Tracker"
msgstr "O rastreador de problemas"

#. type: menuentry
#: guix-git/doc/contributing.texi:2313
msgid "The official bug and patch tracker."
msgstr "O rastreador oficial de bugs e patches."

#. type: subsection
#: guix-git/doc/contributing.texi:2313 guix-git/doc/contributing.texi:2337
#: guix-git/doc/contributing.texi:2338
#, no-wrap
msgid "Managing Patches and Branches"
msgstr "Gerenciando Patches e Branches"

#. type: menuentry
#: guix-git/doc/contributing.texi:2313
msgid "How changes to Guix are managed."
msgstr "Como as alterações no Guix são gerenciadas."

#. type: subsection
#: guix-git/doc/contributing.texi:2313 guix-git/doc/contributing.texi:2442
#: guix-git/doc/contributing.texi:2443
#, no-wrap
msgid "Debbugs User Interfaces"
msgstr "Interfaces de usuário do Debbugs"

#. type: menuentry
#: guix-git/doc/contributing.texi:2313
msgid "Ways to interact with Debbugs."
msgstr "Maneiras de interagir com Debbugs."

#. type: subsection
#: guix-git/doc/contributing.texi:2313 guix-git/doc/contributing.texi:2640
#: guix-git/doc/contributing.texi:2641
#, no-wrap
msgid "Debbugs Usertags"
msgstr "Debbugs Marcadores de usuário"

#. type: menuentry
#: guix-git/doc/contributing.texi:2313
msgid "Tag reports with custom labels."
msgstr "Marque relatórios com rótulos personalizados."

#. type: subsection
#: guix-git/doc/contributing.texi:2313 guix-git/doc/contributing.texi:2697
#: guix-git/doc/contributing.texi:2698
#, no-wrap
msgid "Cuirass Build Notifications"
msgstr "Notificações de construção de Cuirass"

#. type: menuentry
#: guix-git/doc/contributing.texi:2313
msgid "Be alerted of any breakage via RSS feeds."
msgstr "Seja alertado sobre qualquer quebra via feeds RSS."

#. type: cindex
#: guix-git/doc/contributing.texi:2318
#, no-wrap
msgid "bug reports, tracking"
msgstr "relatórios de bugs, rastreamento"

#. type: cindex
#: guix-git/doc/contributing.texi:2319
#, no-wrap
msgid "patch submissions, tracking"
msgstr "envios de patches, rastreamento"

#. type: cindex
#: guix-git/doc/contributing.texi:2320
#, no-wrap
msgid "issue tracking"
msgstr "rastreamento de problemas"

#. type: cindex
#: guix-git/doc/contributing.texi:2321
#, no-wrap
msgid "Debbugs, issue tracking system"
msgstr "Debbugs, sistema de rastreamento de problemas"

#. type: Plain text
#: guix-git/doc/contributing.texi:2325
msgid "Bug reports (@dfn{issues}) and patch submissions (@dfn{pull requests})  are currently tracked at the @uref{https://codeberg.org/guix/guix, project's home at Codeberg}."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:2336
msgid "Before May 25th, 2025, bug reports and patches were exclusively tracked using the Debbugs instance at @uref{https://bugs.gnu.org}; it may still be used for these purposes until December 31st, 2025, after which Codeberg will become the sole option to report new bugs and propose new changes@footnote{Check out @uref{https://codeberg.org/guix/guix-consensus-documents/src/branch/main/002-codeberg.md, Guix Consensus Document 002} for details on this decision.}.  With Debbugs, bug reports are sent by email to @email{bug-guix@@gnu.org} and patches are sent to @email{guix-patches@@gnu.org} (@pxref{Submitting Patches})."
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:2339
#, no-wrap
msgid "branching strategy"
msgstr "estratégia de ramificação"

#. type: cindex
#: guix-git/doc/contributing.texi:2340
#, no-wrap
msgid "rebuild scheduling strategy"
msgstr "estratégia de agendamento de recompilação"

#. type: Plain text
#: guix-git/doc/contributing.texi:2349
#, fuzzy
#| msgid "Changes should be posted to @email{guix-patches@@gnu.org}.  This mailing list fills the patch-tracking database (@pxref{The Issue Tracker}).  It also allows patches to be picked up and tested by the quality assurance tooling; the result of that testing eventually shows up on the dashboard at @indicateurl{https://qa.guix.gnu.org/issue/@var{ISSUE_NUMBER}}, where @var{ISSUE_NUMBER} is the number assigned by the issue tracker.  Leave time for a review, without committing anything."
msgid "Submitted patches are picked up and tested by the quality assurance service; the result of that testing eventually shows up on the dashboard at @indicateurl{https://qa.guix.gnu.org/issue/@var{ISSUE_NUMBER}}, where @var{ISSUE_NUMBER} is the number assigned by the issue tracker, currently Debbugs (work is in progress to support Codeberg pull requests).  Leave time for a review, without committing anything."
msgstr "As alterações devem ser postadas em @email{guix-patches@@gnu.org}. Esta lista de discussão preenche o banco de dados de rastreamento de patches (@pxref{The Issue Tracker}). Ela também permite que patches sejam coletados e testados pela ferramenta de garantia de qualidade; o resultado desse teste eventualmente aparece no painel em @indicateurl{https://qa.guix.gnu.org/issue/@var{NÚMERO_DE_ISSÃO}}, onde @var{NÚMERO_DE_ISSÃO} é o número atribuído pelo rastreador de problemas. Reserve um tempo para uma revisão, sem comprometer nada."

#. type: Plain text
#: guix-git/doc/contributing.texi:2355
msgid "As an exception, some changes considered ``trivial'' or ``obvious'' may be pushed directly to the @code{master} branch.  This includes changes to fix typos and reverting commits that caused immediate problems.  This is subject to being adjusted, allowing individuals to commit directly on non-controversial changes on parts they’re familiar with."
msgstr "Como exceção, algumas mudanças consideradas ``triviais'' ou ``óbvias'' podem ser enviadas diretamente para o branch @code{master}. Isso inclui mudanças para corrigir erros de digitação e reverter commits que causaram problemas imediatos. Isso está sujeito a ajustes, permitindo que indivíduos se comprometam diretamente com mudanças não controversas em partes com as quais estão familiarizados."

#. type: Plain text
#: guix-git/doc/contributing.texi:2363
msgid "Changes which affect more than 300 dependent packages (@pxref{Invoking guix refresh}) should first be pushed to a topic branch other than @code{master}; the set of changes should be consistent---e.g., ``GNOME update'', ``NumPy update'', etc.  This allows for testing: the branch will automatically show up at @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}}, with an indication of its build status on various platforms."
msgstr "Alterações que afetam mais de 300 pacotes dependentes (@pxref{Invoking guix refresh}) devem primeiro ser enviadas para um branch de tópico diferente de @code{master}; o conjunto de alterações deve ser consistente, por exemplo, ``GNOME update'', ``NumPy update'', etc. Isso permite testes: o branch aparecerá automaticamente em @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}}, com uma indicação de seu status de compilação em várias plataformas."

#. type: cindex
#: guix-git/doc/contributing.texi:2364
#, no-wrap
msgid "feature branches, coordination"
msgstr "ramos de recursos, coordenação"

#. type: Plain text
#: guix-git/doc/contributing.texi:2369
msgid "To help coordinate the merging of branches, you must create a new guix-patches issue each time you create a branch (@pxref{The Issue Tracker}).  The title of the issue requesting to merge a branch should have the following format:"
msgstr "Para ajudar a coordenar a fusão de branches, você deve criar um novo problema guix-patches sempre que criar um branch (@pxref{The Issue Tracker}). O título do problema que solicita a fusão de um branch deve ter o seguinte formato:"

#. type: cindex
#: guix-git/doc/contributing.texi:2370
#, no-wrap
msgid "merge requests, template"
msgstr "solicitações de mesclagem, modelo"

#. type: example
#: guix-git/doc/contributing.texi:2373
#, no-wrap
msgid "Request for merging \"@var{name}\" branch\n"
msgstr "Solicitação de mesclagem do branch \"@var{name}\"\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2378
msgid "The @url{https://qa.guix.gnu.org/, QA infrastructure} recognizes such issues and lists the merge requests on its main page.  The following points apply to managing these branches:"
msgstr "O @url{https://qa.guix.gnu.org/, infraestrutura de QA} reconhece tais problemas e lista as solicitações de mesclagem em sua página principal. Os seguintes pontos se aplicam ao gerenciamento dessas ramificações:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2384
msgid "The commits on the branch should be a combination of the patches relevant to the branch.  Patches not related to the topic of the branch should go elsewhere."
msgstr "Os commits no branch devem ser uma combinação dos patches relevantes para o branch. Patches não relacionados ao tópico do branch devem ir para outro lugar."

#. type: enumerate
#: guix-git/doc/contributing.texi:2389
msgid "Any changes that can be made on the master branch, should be made on the master branch.  If a commit can be split to apply part of the changes on master, this is good to do."
msgstr "Quaisquer alterações que possam ser feitas no branch master, devem ser feitas no branch master. Se um commit puder ser dividido para aplicar parte das alterações no master, isso é bom de se fazer."

#. type: enumerate
#: guix-git/doc/contributing.texi:2393
msgid "It should be possible to re-create the branch by starting from master and applying the relevant patches."
msgstr "Deve ser possível recriar a ramificação iniciando pelo master e aplicando os patches relevantes."

#. type: enumerate
#: guix-git/doc/contributing.texi:2397
msgid "Avoid merging master in to the branch.  Prefer rebasing or re-creating the branch on top of an updated master revision."
msgstr "Evite mesclar o master no branch. Prefira rebasear ou recriar o branch em cima de uma revisão master atualizada."

#. type: enumerate
#: guix-git/doc/contributing.texi:2402
msgid "Minimise the changes on master that are missing on the branch prior to merging the branch in to master.  This means that the state of the branch better reflects the state of master should the branch be merged."
msgstr "Minimize as alterações no master que estão faltando no branch antes de mesclar o branch no master. Isso significa que o estado do branch reflete melhor o estado do master caso o branch seja mesclado."

#. type: enumerate
#: guix-git/doc/contributing.texi:2407
msgid "If you don't have commit access, create the ``Request for merging'' issue and request that someone creates the branch.  Include a list of issues/patches to include on the branch."
msgstr "Se você não tiver acesso de commit, crie o issue ``Request for merging'' e solicite que alguém crie o branch. Inclua uma lista de issues/patches para incluir no branch."

#. type: Plain text
#: guix-git/doc/contributing.texi:2421
msgid "Normally branches will be merged in a ``first come, first merged'' manner, tracked through the guix-patches issues.  If you agree on a different order with those involved, you can track this by updating which issues block@footnote{You can mark an issue as blocked by another by emailing @email{control@@debbugs.gnu.org} with the following line in the body of the email: @code{block XXXXX by YYYYY}.  Where @code{XXXXX} is the number for the blocked issue, and @code{YYYYY} is the number for the issue blocking it.} which other issues.  Therefore, to know which branch is at the front of the queue, look for the oldest issue, or the issue that isn't @dfn{blocked} by any other branch merges.  An ordered list of branches with the open issues is available at @url{https://qa.guix.gnu.org}."
msgstr "Normalmente, os branches serão mesclados de uma maneira ``primeiro a chegar, primeiro a ser mesclado'', rastreados por meio dos problemas guix-patches. Se você concordar com uma ordem diferente com os envolvidos, você pode rastrear isso atualizando which issues block@footnote{Você pode marcar um issue como bloqueado por outro enviando um e-mail para @email{control@@debbugs.gnu.org} com a seguinte linha no corpo do e-mail: @code{block XXXXX by YYYYY}. Onde @code{XXXXX} é o número do issue bloqueado, e @code{YYYYY} é o número do issue que o está bloqueando.} which other issues. Portanto, para saber qual branch está na frente da fila, procure o issue mais antigo, ou o issue que não está @dfn{bloqueado} por nenhuma outra branch merges. Uma lista ordenada de branches com os issues abertos está disponível em @url{https://qa.guix.gnu.org}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2427
msgid "Once a branch is at the front of the queue, wait until sufficient time has passed for the build farms to have processed the changes, and for the necessary testing to have happened.  For example, you can check @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}} to see information on some builds and substitute availability."
msgstr "Uma vez que um branch esteja na frente da fila, espere até que tenha passado tempo suficiente para que as farms de build tenham processado as mudanças, e para que os testes necessários tenham acontecido. Por exemplo, você pode verificar @indicateurl{https://qa.guix.gnu.org/branch/@var{branch}} para ver informações sobre alguns builds e disponibilidade de substitutos."

#. type: Plain text
#: guix-git/doc/contributing.texi:2430
msgid "Once the branch has been merged, the issue should be closed and the branch deleted."
msgstr "Depois que a ramificação for mesclada, o problema deverá ser fechado e a ramificação excluída."

#. type: cindex
#: guix-git/doc/contributing.texi:2431
#, no-wrap
msgid "work-in-progress branches, wip"
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:2432
#, fuzzy, no-wrap
#| msgid "patches"
msgid "wip branches"
msgstr "remendos"

#. type: Plain text
#: guix-git/doc/contributing.texi:2441
msgid "Sometimes, a branch may be a work in progress, for example for larger efforts such as updating the GNOME desktop.  In these cases, the branch name should reflect this by having the @samp{wip-} prefix.  The QA infrastructure will avoid building work-in-progress branches, so that the available resources can be better focused on building the branches that are ready to be merged.  When the branch is no longer a work in progress, it should be renamed, with the @samp{wip-} prefix removed, and only then should the merge requests be created, as documented earlier."
msgstr ""

#. type: quotation
#: guix-git/doc/contributing.texi:2452
msgid "This section is about bug reports and patches sent by email to @uref{https://issues.guix.gnu.org, Debbugs}.  This option is supported until December 31st, 2025, after which @uref{https://codeberg.org/guix/guix, Codeberg} will be the only interface for submitting bug reports and changes.  @xref{Submitting Patches}, for more info."
msgstr ""

#. type: subsubsection
#: guix-git/doc/contributing.texi:2454
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "Web interface"
msgstr "interfaces de usuário"

#. type: cindex
#: guix-git/doc/contributing.texi:2456
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "mumi, web interface for issues"
msgstr "interfaces de usuário"

#. type: Plain text
#: guix-git/doc/contributing.texi:2459
msgid "A web interface (actually @emph{two} web interfaces!) are available to browse issues:"
msgstr "Uma interface web (na verdade @emph{duas} interfaces web!) está disponível para navegar pelos problemas:"

#. type: itemize
#: guix-git/doc/contributing.texi:2468
#, fuzzy
#| msgid "@url{https://issues.guix.gnu.org} provides a pleasant interface powered by mumi@footnote{Mumi is a nice piece of software written in Guile, and you can help! See @url{https://git.savannah.gnu.org/cgit/guix/mumi.git}.} to browse bug reports and patches, and to participate in discussions; mumi also has a command-line interface as we will see below;"
msgid "@url{https://issues.guix.gnu.org} provides a pleasant interface powered by mumi@footnote{Mumi is a nice piece of software written in Guile, and you can help! See @url{https://codeberg.org/guix/mumi}.} to browse bug reports and patches, and to participate in discussions; mumi also has a command-line interface as we will see below;"
msgstr "@url{https://issues.guix.gnu.org} fornece uma interface agradável alimentada por mumi@footnote{Mumi é um bom software escrito em Guile, e você pode ajudar! Veja @url{https://git.savannah.gnu.org/cgit/guix/mumi.git}.} para navegar por relatórios de bugs e patches, e para participar de discussões; mumi também tem uma interface de linha de comando como veremos abaixo;"

#. type: itemize
#: guix-git/doc/contributing.texi:2470
msgid "@url{https://bugs.gnu.org/guix} lists bug reports;"
msgstr "@url{https://bugs.gnu.org/guix} lista relatórios de bugs;"

#. type: itemize
#: guix-git/doc/contributing.texi:2472
msgid "@url{https://bugs.gnu.org/guix-patches} lists patch submissions."
msgstr "@url{https://bugs.gnu.org/guix-patches} lista envios de patches."

#. type: Plain text
#: guix-git/doc/contributing.texi:2477
msgid "To view discussions related to issue number @var{n}, go to @indicateurl{https://issues.guix.gnu.org/@var{n}} or @indicateurl{https://bugs.gnu.org/@var{n}}."
msgstr "Para visualizar discussões relacionadas ao problema número @var{n}, acesse @indicateurl{https://issues.guix.gnu.org/@var{n}} ou @indicateurl{https://bugs.gnu.org/@var{n}}."

#. type: subsubsection
#: guix-git/doc/contributing.texi:2478
#, fuzzy, no-wrap
#| msgid "Programming Interface"
msgid "Command-Line Interface"
msgstr "Interface de programação"

#. type: cindex
#: guix-git/doc/contributing.texi:2480
#, fuzzy, no-wrap
#| msgid "Programming Interface"
msgid "mumi command-line interface"
msgstr "Interface de programação"

#. type: cindex
#: guix-git/doc/contributing.texi:2481
#, no-wrap
msgid "mumi am"
msgstr "mumi am"

#. type: cindex
#: guix-git/doc/contributing.texi:2482
#, fuzzy, no-wrap
msgid "mumi compose"
msgstr "mumi compose"

#. type: cindex
#: guix-git/doc/contributing.texi:2483
#, fuzzy, no-wrap
#| msgid "git send-email"
msgid "mumi send-email"
msgstr "git send-email"

#. type: cindex
#: guix-git/doc/contributing.texi:2484
#, fuzzy, no-wrap
msgid "mumi www"
msgstr "mumi www"

#. type: Plain text
#: guix-git/doc/contributing.texi:2489
msgid "Mumi also comes with a command-line interface that can be used to search existing issues, open new issues, compose replies, apply and send patches.  You do not need to use Emacs to use the mumi command-line client.  You interact with it only on the command-line."
msgstr "O Mumi também vem com uma interface de linha de comando que pode ser usada para pesquisar problemas existentes, abrir novos problemas, compor respostas, aplicar e enviar patches. Você não precisa usar o Emacs para usar o cliente de linha de comando mumi. Você interage com ele apenas na linha de comando."

#. type: Plain text
#: guix-git/doc/contributing.texi:2493
msgid "To use the mumi command-line interface, navigate to a local clone of the Guix git repository, and drop into a shell with mumi, git and git:send-email installed."
msgstr "Para usar a interface de linha de comando mumi, navegue até um clone local do repositório git Guix e entre em um shell com mumi, git e git:send-email instalados."

#. type: example
#: guix-git/doc/contributing.texi:2497
#, fuzzy, no-wrap
msgid ""
"$ cd guix\n"
"~/guix$ guix shell mumi git git:send-email\n"
msgstr ""
"$ cd guix\n"
"~/guix$ guix shell mumi git git:send-email\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2500
msgid "To search for issues, say all open issues about \"zig\", run"
msgstr "Para procurar problemas, diga todos os problemas abertos sobre \"zig\", execute"

#. type: example
#: guix-git/doc/contributing.texi:2503
#, fuzzy, no-wrap
msgid ""
"~/guix [env]$ mumi search zig is:open\n"
"\n"
msgstr ""
"~/guix [env]$ mumi search zig is:open\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:2514
#, no-wrap
msgid ""
"#60889 Add zig-build-system\n"
"opened on 17 Jan 17:37 Z by Ekaitz Zarraga\n"
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
"#39136 [PATCH] gnu: services: Add endlessh.\n"
"opened on 14 Jan 2020 21:21 by Nicol? Balzarotti\n"
"#60424 [PATCH] gnu: Add python-online-judge-tools\n"
"opened on 30 Dec 2022 07:03 by gemmaro\n"
"#45601 [PATCH 0/6] vlang 0.2 update\n"
"opened on  1 Jan 2021 19:23 by Ryan Prior\n"
msgstr ""
"#60889 Add zig-build-system\n"
"opened on 17 Jan 17:37 Z by Ekaitz Zarraga\n"
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
"#39136 [PATCH] gnu: services: Add endlessh.\n"
"opened on 14 Jan 2020 21:21 by Nicol? Balzarotti\n"
"#60424 [PATCH] gnu: Add python-online-judge-tools\n"
"opened on 30 Dec 2022 07:03 by gemmaro\n"
"#45601 [PATCH 0/6] vlang 0.2 update\n"
"opened on  1 Jan 2021 19:23 by Ryan Prior\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2517
msgid "Pick an issue and make it the \"current\" issue."
msgstr "Escolha uma questão e torne-a a questão \"atual\"."

#. type: example
#: guix-git/doc/contributing.texi:2520
#, fuzzy, no-wrap
msgid ""
"~/guix [env]$ mumi current 61036\n"
"\n"
msgstr ""
"~/guix [env]$ mumi current 61036\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:2523
#, no-wrap
msgid ""
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"
msgstr ""
"#61036 [PATCH 0/3] Update zig to 0.10.1\n"
"opened on 24 Jan 09:42 Z by Efraim Flashner\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2528
msgid "Once an issue is the current issue, you can open the issue in a web browser, compose replies, apply patches, send patches, etc. with short succinct commands."
msgstr "Quando um problema é o problema atual, você pode abri-lo em um navegador da web, redigir respostas, aplicar patches, enviar patches, etc. com comandos curtos e sucintos."

#. type: Plain text
#: guix-git/doc/contributing.texi:2530
msgid "Open the issue in your web browser using"
msgstr "Abra o problema no seu navegador da web usando"

#. type: example
#: guix-git/doc/contributing.texi:2533
#, fuzzy, no-wrap
msgid "~/guix [env]$ mumi www\n"
msgstr "~/guix [env]$ mumi www\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2536
msgid "Compose a reply using"
msgstr "Redija uma resposta usando"

#. type: example
#: guix-git/doc/contributing.texi:2539
#, no-wrap
msgid "~/guix [env]$ mumi compose\n"
msgstr "~/guix [env]$ mumi compose\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2542
msgid "Compose a reply and close the issue using"
msgstr "Redija uma resposta e feche o problema usando"

#. type: example
#: guix-git/doc/contributing.texi:2545
#, no-wrap
msgid "~/guix [env]$ mumi compose --close\n"
msgstr "~/guix [env]$ mumi compose --close\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2550
msgid "@command{mumi compose} opens your mail client by passing @samp{mailto:} URIs to @command{xdg-open}.  So, you need to have @command{xdg-open} set up to open your mail client correctly."
msgstr "@command{mumi compose} abre seu cliente de e-mail passando URIs @samp{mailto:} para @command{xdg-open}. Então, você precisa ter @command{xdg-open} configurado para abrir seu cliente de e-mail corretamente."

#. type: Plain text
#: guix-git/doc/contributing.texi:2552
msgid "Apply the latest patchset from the issue using"
msgstr "Aplique o patchset mais recente do problema usando"

#. type: example
#: guix-git/doc/contributing.texi:2555
#, no-wrap
msgid "~/guix [env]$ mumi am\n"
msgstr "~/guix [env]$ mumi am\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2558
msgid "You may also apply a patchset of a specific version (say, v3) using"
msgstr "Você também pode aplicar um patchset de uma versão específica (digamos, v3) usando"

#. type: example
#: guix-git/doc/contributing.texi:2561
#, no-wrap
msgid "~/guix [env]$ mumi am v3\n"
msgstr "~/guix [env]$ mumi am v3\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2566
msgid "Or, you may apply a patch from a specific e-mail message.  For example, to apply the patch from the 4th message (message index starts from 0), run"
msgstr "Ou você pode aplicar um patch de uma mensagem de e-mail específica. Por exemplo, para aplicar o patch da 4ª mensagem (o índice da mensagem começa em 0), execute"

#. type: example
#: guix-git/doc/contributing.texi:2569
#, no-wrap
msgid "~/guix [env]$ mumi am @@4\n"
msgstr "~/guix [env]$ mumi am @@4\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2574
msgid "@command{mumi am} is a wrapper around @command{git am}.  You can pass @command{git am} arguments to it after a @samp{--}.  For example, to add a Signed-off-by trailer, run"
msgstr "@command{mumi am} é um wrapper em torno de @command{git am}. Você pode passar argumentos @command{git am} para ele depois de um @samp{--}. Por exemplo, para adicionar um trailer Signed-off-by, execute"

#. type: example
#: guix-git/doc/contributing.texi:2577
#, no-wrap
msgid "~/guix [env]$ mumi am -- -s\n"
msgstr "~/guix [env]$ mumi am -- -s\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2580
msgid "Create and send patches to the issue using"
msgstr "Crie e envie patches para o problema usando"

#. type: example
#: guix-git/doc/contributing.texi:2584
#, no-wrap
msgid ""
"~/guix [env]$ git format-patch origin/master\n"
"~/guix [env]$ mumi send-email foo.patch bar.patch\n"
msgstr ""
"~/guix [env]$ git format-patch origin/master\n"
"~/guix [env]$ mumi send-email foo.patch bar.patch\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2589
msgid "Note that you do not have to pass in @samp{--to} or @samp{--cc} arguments to @command{git format-patch}.  @command{mumi send-email} will put them in correctly when sending the patches."
msgstr "Observe que você não precisa passar os argumentos @samp{--to} ou @samp{--cc} para @command{git format-patch}. @command{mumi send-email} os inserirá corretamente ao enviar os patches."

#. type: Plain text
#: guix-git/doc/contributing.texi:2591
msgid "To open a new issue, run"
msgstr "Para abrir um novo problema, execute"

#. type: example
#: guix-git/doc/contributing.texi:2594
#, no-wrap
msgid "~/guix [env]$ mumi new\n"
msgstr "~/guix [env]$ mumi new\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2598
msgid "and send an email (using @command{mumi compose}) or patches (using @command{mumi send-email})."
msgstr "e enviar um e-mail (usando @command{mumi compose}) ou patches (usando @command{mumi send-email})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2604
msgid "@command{mumi send-email} is really a wrapper around @command{git send-email} that automates away all the nitty-gritty of sending patches.  It uses the current issue state to automatically figure out the correct @samp{To} address to send to, other participants to @samp{Cc}, headers to add, etc."
msgstr "@command{mumi send-email} é realmente um wrapper em torno de @command{git send-email} que automatiza todos os detalhes do envio de patches. Ele usa o estado atual do problema para descobrir automaticamente o endereço @samp{To} correto para enviar, outros participantes para @samp{Cc}, cabeçalhos para adicionar, etc."

#. type: Plain text
#: guix-git/doc/contributing.texi:2612
msgid "Also note that, unlike @command{git send-email}, @command{mumi send-email} works perfectly well with single and multiple patches alike.  It automates away the debbugs dance of sending the first patch, waiting for a response from debbugs and sending the remaining patches.  It does so by sending the first patch, polling the server for a response, and then sending the remaining patches.  This polling can unfortunately take a few minutes.  So, please be patient."
msgstr "Observe também que, diferentemente de @command{git send-email}, @command{mumi send-email} funciona perfeitamente bem com patches únicos e múltiplos. Ele automatiza a dança dos debbugs de enviar o primeiro patch, esperar por uma resposta dos debbugs e enviar os patches restantes. Ele faz isso enviando o primeiro patch, sondando o servidor para uma resposta e, em seguida, enviando os patches restantes. Infelizmente, essa sondagem pode levar alguns minutos. Então, seja paciente."

#. type: subsubsection
#: guix-git/doc/contributing.texi:2613
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "Emacs Interface"
msgstr "interfaces de usuário"

#. type: Plain text
#: guix-git/doc/contributing.texi:2617
msgid "If you use Emacs, you may find it more convenient to interact with issues using @file{debbugs.el}, which you can install with:"
msgstr "Se você usa o Emacs, pode achar mais conveniente interagir com problemas usando @file{debbugs.el}, que pode ser instalado com:"

#. type: example
#: guix-git/doc/contributing.texi:2620
#, no-wrap
msgid "guix install emacs-debbugs\n"
msgstr "guix install emacs-debbugs\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2623
msgid "For example, to list all open issues on @code{guix-patches}, hit:"
msgstr "Por exemplo, para listar todos os problemas abertos em @code{guix-patches}, clique em:"

#. type: example
#: guix-git/doc/contributing.texi:2626
#, no-wrap
msgid "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"
msgstr "@kbd{C-u} @kbd{M-x} debbugs-gnu @kbd{RET} @kbd{RET} guix-patches @kbd{RET} n y\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2633
msgid "For a more convenient (shorter) way to access both the bugs and patches submissions, you may want to configure the @code{debbugs-gnu-default-packages} and @code{debbugs-gnu-default-severities} Emacs variables (@pxref{Viewing Bugs within Emacs})."
msgstr "Para uma maneira mais conveniente (mais curta) de acessar os envios de bugs e patches, você pode configurar as variáveis @code{debbugs-gnu-default-packages} e @code{debbugs-gnu-default-severities} do Emacs (@pxref{Viewing Bugs within Emacs})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2636
msgid "To search for bugs, @samp{@kbd{M-x} debbugs-gnu-guix-search} can be used."
msgstr "Para procurar bugs, @samp{@kbd{M-x} debbugs-gnu-guix-search} pode ser usado."

#. type: Plain text
#: guix-git/doc/contributing.texi:2639
msgid "@xref{Top,,, debbugs-ug, Debbugs User Guide}, for more information on this nifty tool!"
msgstr "@xref{Top,,, debbugs-ug, Guia do usuário do Debbugs}, para mais informações sobre esta ferramenta bacana!"

#. type: cindex
#: guix-git/doc/contributing.texi:2643
#, no-wrap
msgid "usertags, for debbugs"
msgstr "usertags, para debbugs"

#. type: cindex
#: guix-git/doc/contributing.texi:2644
#, no-wrap
msgid "Debbugs usertags"
msgstr "Debuga as tags do usuário"

#. type: Plain text
#: guix-git/doc/contributing.texi:2655
msgid "Debbugs provides a feature called @dfn{usertags} that allows any user to tag any bug with an arbitrary label.  Bugs can be searched by usertag, so this is a handy way to organize bugs@footnote{The list of usertags is public information, and anyone can modify any user's list of usertags, so keep that in mind if you choose to use this feature.}.  If you use Emacs Debbugs, the entry-point to consult existing usertags is the @samp{C-u M-x debbugs-gnu-usertags} procedure.  To set a usertag, press @samp{C} while consulting a bug within the *Guix-Patches* buffer opened with @samp{C-u M-x debbugs-gnu-bugs} buffer, then select @code{usertag} and follow the instructions."
msgstr "O Debbugs fornece um recurso chamado @dfn{usertags} que permite que qualquer usuário marque qualquer bug com um rótulo arbitrário. Os bugs podem ser pesquisados por usertag, então esta é uma maneira útil de organizar bugs@footnote{A lista de usertags é uma informação pública, e qualquer um pode modificar a lista de usertags de qualquer usuário, então tenha isso em mente se você escolher usar este recurso.}. Se você usa o Emacs Debbugs, o ponto de entrada para consultar usertags existentes é o procedimento @samp{C-u M-x debbugs-gnu-usertags}. Para definir um usertag, pressione @samp{C} enquanto consulta um bug dentro do buffer *Guix-Patches* aberto com o buffer @samp{C-u M-x debbugs-gnu-bugs}, então selecione @code{usertag} e siga as instruções."

#. type: Plain text
#: guix-git/doc/contributing.texi:2661
msgid "For example, to view all the bug reports (or patches, in the case of @code{guix-patches}) tagged with the usertag @code{powerpc64le-linux} for the user @code{guix}, open a URL like the following in a web browser: @url{https://debbugs.gnu.org/cgi-bin/pkgreport.cgi?tag=powerpc64le-linux;users=guix}."
msgstr "Por exemplo, para visualizar todos os relatórios de bugs (ou patches, no caso de @code{guix-patches}) marcados com a usertag @code{powerpc64le-linux} para o usuário @code{guix}, abra uma URL como a seguinte em um navegador da web: @url{https://debbugs.gnu.org/cgi-bin/pkgreport.cgi?tag=powerpc64le-linux;users=guix}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2665
msgid "For more information on how to use usertags, please refer to the documentation for Debbugs or the documentation for whatever tool you use to interact with Debbugs."
msgstr "Para mais informações sobre como usar usertags, consulte a documentação do Debbugs ou a documentação de qualquer ferramenta que você use para interagir com o Debbugs."

#. type: Plain text
#: guix-git/doc/contributing.texi:2670
msgid "In Guix, we are experimenting with usertags to keep track of architecture-specific issues, as well as reviewed ones.  To facilitate collaboration, all our usertags are associated with the single user @code{guix}.  The following usertags currently exist for that user:"
msgstr "No Guix, estamos experimentando usertags para manter o controle de problemas específicos da arquitetura, bem como os revisados. Para facilitar a colaboração, todos os nossos usertags estão associados ao usuário único @code{guix}. Os seguintes usertags existem atualmente para esse usuário:"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: defvar
#: guix-git/doc/contributing.texi:2673 guix-git/doc/guix.texi:671
#: guix-git/doc/guix.texi:52850
#, fuzzy, no-wrap
msgid "powerpc64le-linux"
msgstr "aarch64-linux"

#. type: table
#: guix-git/doc/contributing.texi:2681
msgid "The purpose of this usertag is to make it easy to find the issues that matter most for the @code{powerpc64le-linux} system type.  Please assign this usertag to bugs or patches that affect @code{powerpc64le-linux} but not other system types.  In addition, you may use it to identify issues that for some reason are particularly important for the @code{powerpc64le-linux} system type, even if the issue affects other system types, too."
msgstr "O propósito desta usertag é facilitar a localização dos problemas mais importantes para o tipo de sistema @code{powerpc64le-linux}. Atribua esta usertag a bugs ou patches que afetam o @code{powerpc64le-linux}, mas não outros tipos de sistema. Além disso, você pode usá-la para identificar problemas que, por algum motivo, são particularmente importantes para o tipo de sistema @code{powerpc64le-linux}, mesmo que o problema afete outros tipos de sistema também."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: cindex
#: guix-git/doc/contributing.texi:2682 guix-git/doc/guix.texi:3127
#: guix-git/doc/guix.texi:5079
#, no-wrap
msgid "reproducibility"
msgstr "reprodutibilidade"

#. type: table
#: guix-git/doc/contributing.texi:2686
msgid "For issues related to reproducibility.  For example, it would be appropriate to assign this usertag to a bug report for a package that fails to build reproducibly."
msgstr "Para problemas relacionados à reprodutibilidade. Por exemplo, seria apropriado atribuir esta usertag a um relatório de bug para um pacote que falha em construir de forma reprodutível."

#. type: item
#: guix-git/doc/contributing.texi:2687
#, no-wrap
msgid "reviewed-looks-good"
msgstr "reviewed-looks-good"

#. type: table
#: guix-git/doc/contributing.texi:2689
msgid "You have reviewed the series and it looks good to you (LGTM)."
msgstr "Você analisou a série e ela parece boa para você (LGTM)."

#. type: Plain text
#: guix-git/doc/contributing.texi:2696
msgid "If you're a committer and you want to add a usertag, just start using it with the @code{guix} user.  If the usertag proves useful to you, consider updating this section of the manual so that others will know what your usertag means."
msgstr "Se você for um committer e quiser adicionar uma usertag, basta começar a usá-la com o usuário @code{guix}. Se a usertag for útil para você, considere atualizar esta seção do manual para que outros saibam o que sua usertag significa."

#. type: cindex
#: guix-git/doc/contributing.texi:2700
#, no-wrap
msgid "build event notifications, RSS feed"
msgstr "criar notificações de eventos, feed RSS"

#. type: cindex
#: guix-git/doc/contributing.texi:2701
#, fuzzy, no-wrap
#| msgid "container, build environment"
msgid "notifications, build events"
msgstr "contêiner, ambiente de compilação"

#. type: Plain text
#: guix-git/doc/contributing.texi:2710
msgid "Cuirass includes @acronym{RSS, Really Simple Syndication} feeds as one of its features (@pxref{Notifications,,,cuirass}).  Since @url{https://ci.guix.gnu.org/, Berlin} runs an instance of Cuirass, this feature can be used to keep track of recently broken or fixed packages caused by changes pushed to the Guix git repository.  Any RSS client can be used.  A good one, included with Emacs, is @xref{Gnus,,,gnus}.  To register the feed, copy its URL, then from the main Gnus buffer, @samp{*Group*}, do the following:"
msgstr "O Cuirass inclui feeds @acronym{RSS, Really Simple Syndication} como um de seus recursos (@pxref{Notifications,,,cuirass}). Como @url{https://ci.guix.gnu.org/, Berlin} executa uma instância do Cuirass, esse recurso pode ser usado para manter o controle de pacotes recentemente quebrados ou corrigidos causados por alterações enviadas ao repositório git do Guix. Qualquer cliente RSS pode ser usado. Um bom, incluído no Emacs, é @xref{Gnus,,,gnus}. Para registrar o feed, copie sua URL e, a partir do buffer principal do Gnus, @samp{*Group*}, faça o seguinte:"

#. type: cindex
#: guix-git/doc/contributing.texi:2711
#, no-wrap
msgid "Gnus, configuration to read CI RSS feeds"
msgstr "Gnus, configuração para ler feeds RSS do CI"

#. type: cindex
#: guix-git/doc/contributing.texi:2712
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "RSS feeds, Gnus configuration"
msgstr "Configuração do git"

#. type: example
#: guix-git/doc/contributing.texi:2716
#, no-wrap
msgid ""
"@kbd{G R} https://ci.guix.gnu.org/events/rss/?specification=master RET\n"
"Guix CI - master RET Build events for specification master. RET\n"
msgstr ""
"@kbd{G R} https://ci.guix.gnu.org/events/rss/?specification=master RET\n"
"Guix CI - master RET Build events for specification master. RET\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2723
msgid "Then, back at the @samp{*Group*} buffer, press @kbd{s} to save the newly added RSS group.  As for any other Gnus group, you can update its content by pressing the @kbd{g} key.  You should now receive notifications that read like:"
msgstr "Então, de volta ao buffer @samp{*Group*}, pressione @kbd{s} para salvar o grupo RSS recém-adicionado. Assim como para qualquer outro grupo Gnus, você pode atualizar seu conteúdo pressionando a tecla @kbd{g}. Agora você deve receber notificações que dizem algo como:"

#. type: example
#: guix-git/doc/contributing.texi:2728
#, no-wrap
msgid ""
" . [ ?: Cuirass ] Build tree-sitter-meson.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.x86_64-linux on master is fixed.\n"
msgstr ""
" . [ ?: Cuirass ] Build tree-sitter-meson.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.aarch64-linux on master is fixed.\n"
" . [ ?: Cuirass ] Build rust-pbkdf2.x86_64-linux on master is fixed.\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2733
msgid "where each RSS entry contains a link to the Cuirass build details page of the associated build."
msgstr "onde cada entrada RSS contém um link para a página de detalhes da compilação do Cuirass associada."

#. type: Plain text
#: guix-git/doc/contributing.texi:2747
msgid "To organize work on Guix, including but not just development efforts, the project has a set of @dfn{teams}.  Each team has its own focus and interests and is the primary contact point for questions and contributions in those areas.  A team's primary mission is to coordinate and review the work of individuals in its scope (@pxref{Reviewing the Work of Others}); it can make decisions within its scope, in agreement with other teams whenever there is overlap or a close connection, and in accordance with other project rules such as seeking consensus (@pxref{Making Decisions})."
msgstr "Para organizar o trabalho no Guix, incluindo, mas não apenas, os esforços de desenvolvimento, o projeto tem um conjunto de @dfn{equipes}. Cada equipe tem seu próprio foco e interesses e é o principal ponto de contato para perguntas e contribuições nessas áreas. A principal missão de uma equipe é coordenar e revisar o trabalho de indivíduos em seu escopo (@pxref{Reviewing the Work of Others}); ela pode tomar decisões dentro de seu escopo, em acordo com outras equipes sempre que houver sobreposição ou uma conexão próxima, e de acordo com outras regras do projeto, como buscar consenso (@pxref{Making Decisions})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2761
msgid "As an example, the Python team is responsible for core Python packaging matters; it can decide to upgrade core Python packages in a dedicated @code{python-team} branch, in collaboration with any team whose scope is directly dependent on Python---e.g., the Science team---and following branching rules (@pxref{Managing Patches and Branches}).  The Documentation team helps review changes to the documentation and can initiate overarching documentation changes.  The Translations team organizes translation of Guix and its manual and coordinates efforts in that area.  The Core team is responsible for the development of core functionality and interfaces of Guix; because of its central nature, some of its work may require soliciting input from the community at large and seeking consensus before enacting decisions that would affect the entire community."
msgstr "Como exemplo, a equipe Python é responsável por questões de empacotamento do núcleo Python; ela pode decidir atualizar os pacotes principais do Python em uma ramificação dedicada @code{python-team}, em colaboração com qualquer equipe cujo escopo seja diretamente dependente do Python --- por exemplo, a equipe Science --- e seguindo regras de ramificação (@pxref{Managing Patches and Branches}). A equipe Documentation ajuda a revisar as alterações na documentação e pode iniciar alterações abrangentes na documentação. A equipe Translations organiza a tradução do Guix e seu manual e coordena os esforços nessa área. A equipe Core é responsável pelo desenvolvimento da funcionalidade principal e das interfaces do Guix; devido à sua natureza central, parte de seu trabalho pode exigir a solicitação de contribuições da comunidade em geral e a busca de consenso antes de promulgar decisões que afetariam toda a comunidade."

#. type: Plain text
#: guix-git/doc/contributing.texi:2765
msgid "Teams are defined in the @file{etc/teams.scm} file in the Guix repository.  The scope of each team is defined, when applicable, as a set of files or as a regular expression matching file names."
msgstr "As equipes são definidas no arquivo @file{etc/teams.scm} no repositório Guix. O escopo de cada equipe é definido, quando aplicável, como um conjunto de arquivos ou como uma expressão regular que corresponde a nomes de arquivos."

#. type: cindex
#: guix-git/doc/contributing.texi:2766
#, no-wrap
msgid "team membership"
msgstr "membros da equipe"

#. type: Plain text
#: guix-git/doc/contributing.texi:2773
msgid "Anyone with interest in a team's domain and willing to contribute to its work can apply to become a member by contacting current members by email; commit access is not a precondition.  Membership is formalized by adding the person's name and email address to @file{etc/teams.scm}.  Members who have not been participating in the team's work for one year or more may be removed; they are free to reapply for membership later."
msgstr "Qualquer pessoa interessada no domínio de uma equipe e disposta a contribuir com seu trabalho pode se candidatar para se tornar um membro entrando em contato com os membros atuais por e-mail; acesso de commit não é uma pré-condição. A filiação é formalizada adicionando o nome e endereço de e-mail da pessoa em @file{etc/teams.scm}. Membros que não participam do trabalho da equipe por um ano ou mais podem ser removidos; eles são livres para se candidatar novamente para filiação mais tarde."

#. type: cindex
#: guix-git/doc/contributing.texi:2774
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "team creation"
msgstr "Configuração do sistema"

#. type: Plain text
#: guix-git/doc/contributing.texi:2780
msgid "One or more people may propose the creation of a new team by reaching out to the community by email at @email{guix-devel@@gnu.org}, clarifying the intended scope and purpose.  When consensus is reached on the creation of this team, someone with commit access formalizes its creation by adding it and its initial members to @file{etc/teams.scm}."
msgstr "Uma ou mais pessoas podem propor a criação de uma nova equipe entrando em contato com a comunidade por e-mail em @email{guix-devel@@gnu.org}, esclarecendo o escopo e o propósito pretendidos. Quando o consenso é alcançado sobre a criação desta equipe, alguém com acesso de commit formaliza sua criação adicionando-a e seus membros iniciais a @file{etc/teams.scm}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2782
msgid "To list existing teams, run the following command from a Guix checkout:"
msgstr "Para listar as equipes existentes, execute o seguinte comando em um checkout do Guix:"

#. type: example
#: guix-git/doc/contributing.texi:2791
#, fuzzy, no-wrap
#| msgid ""
#| "$ ./etc/teams.scm list-teams\n"
#| "id: mentors\n"
#| "name: Mentors\n"
#| "description: A group of mentors who chaperone contributions by newcomers.\n"
#| "members:\n"
#| "+ Christopher Baines <mail@@cbaines.net>\n"
#| "+ Ricardo Wurmus <rekado@@elephly.net>\n"
#| "+ Mathieu Othacehe <othacehe@@gnu.org>\n"
#| "+ jgart <jgart@@dismail.de>\n"
#| "+ Ludovic Courtès <ludo@@gnu.org>\n"
#| "@dots{}\n"
msgid ""
"$ ./etc/teams.scm list-teams\n"
"id: mentors\n"
"name: Mentors\n"
"description: A group of mentors who chaperone contributions by newcomers.\n"
"members:\n"
"+ Charlie Smith <charlie@@example.org>\n"
"@dots{}\n"
msgstr ""
"$ ./etc/teams.scm list-teams\n"
"id: mentores\n"
"name:Mentores\n"
"description: Um grupo de mentores que acompanham as contribuições dos novatos.\n"
"membros:\n"
"+ Christopher Baines <mail@@cbaines.net>\n"
"+ Ricardo Wurmus <rekado@@elephly.net>\n"
"+ Mathieu Othacehe <othacehe@@gnu.org>\n"
"+ jgart <jgart@@dismail.de>\n"
"+ Ludovic Courtès <ludo@@gnu.org>\n"
"@dots{}\n"

#. type: cindex
#: guix-git/doc/contributing.texi:2793
#, no-wrap
msgid "mentoring"
msgstr "mentoria"

#. type: Plain text
#: guix-git/doc/contributing.texi:2796
#, fuzzy
#| msgid "You can run the following command to have the @code{Mentors} team put in CC of a patch series:"
msgid "You can run the following command to have the Mentors team put in CC of a patch series:"
msgstr "Você pode executar o seguinte comando para que a equipe @code{Mentors} coloque em CC uma série de patches:"

#. type: example
#: guix-git/doc/contributing.texi:2800
#, no-wrap
msgid ""
"$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org \\\n"
"  --header-cmd='etc/teams.scm cc-mentors-header-cmd' *.patch\n"
msgstr ""
"$ git send-email --to=@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org \\\n"
"  --header-cmd='etc/teams.scm cc-mentors-header-cmd' *.patch\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2805
msgid "The appropriate team or teams can also be inferred from the modified files.  For instance, if you want to send the two latest commits of the current Git repository to review, you can run:"
msgstr "A equipe ou equipes apropriadas também podem ser inferidas a partir dos arquivos modificados. Por exemplo, se você quiser enviar os dois últimos commits do repositório Git atual para revisão, você pode executar:"

#. type: example
#: guix-git/doc/contributing.texi:2809
#, no-wrap
msgid ""
"$ guix shell -D guix\n"
"[env]$ git send-email --to=@var{ISSUE_NUMBER}@@debbugs.gnu.org -2\n"
msgstr ""
"$ guix shell -D guix\n"
"[env]$ git send-email --to=@var{NÚMERO_DE_ISSÃO}@@debbugs.gnu.org -2\n"

#. type: cindex
#: guix-git/doc/contributing.texi:2811
#, no-wrap
msgid "teams, on Codeberg"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:2815
msgid "To generate a @file{CODEOWNERS} file, which Forgejo---the software behind Codeberg---uses to determine which team or person should review changes to a given set of files, run:"
msgstr ""

#. type: example
#: guix-git/doc/contributing.texi:2818
#, no-wrap
msgid "./etc/teams.scm codeowners > CODEOWNERS\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:2826
msgid "Teams defined in @file{etc/teams.scm} are reflected @uref{https://codeberg.org/guix/guix, on Codeberg}; the ``Owners'' team on Codeberg, whose members have administration privileges over @uref{https://codeberg.org/guix, the entire ``organization''}, is the only one missing from this file.  To synchronize team changes with Codeberg, a member of the ``Owners'' team can run:"
msgstr ""

#. type: example
#: guix-git/doc/contributing.texi:2829
#, no-wrap
msgid "./etc/teams.scm sync-codeberg-teams @var{token}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:2834
msgid "... where @var{token} is a token created on the Codeberg interface granting access to the relevant settings."
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:2838
#, no-wrap
msgid "decision making"
msgstr "tomando uma decisão"

#. type: cindex
#: guix-git/doc/contributing.texi:2839
#, no-wrap
msgid "consensus seeking"
msgstr "busca de consenso"

#. type: Plain text
#: guix-git/doc/contributing.texi:2846
msgid "It is expected from all contributors, and even more so from committers, to help build consensus and make decisions based on consensus.  By using consensus, we are committed to finding solutions that everyone can live with.  It implies that no decision is made against significant concerns and these concerns are actively resolved with proposals that work for everyone."
msgstr "Espera-se de todos os contribuidores, e ainda mais dos committers, que ajudem a construir consenso e tomar decisões com base no consenso. Ao usar o consenso, estamos comprometidos em encontrar soluções com as quais todos possam conviver. Isso implica que nenhuma decisão é tomada contra preocupações significativas e essas preocupações são ativamente resolvidas com propostas que funcionam para todos."

#. type: Plain text
#: guix-git/doc/contributing.texi:2853
msgid "A contributor (who may or may not have commit access) wishing to block a proposal bears a special responsibility for finding alternatives, proposing ideas/code or explain the rationale for the status quo to resolve the deadlock.  To learn what consensus decision making means and understand its finer details, you are encouraged to read @url{https://www.seedsforchange.org.uk/consensus}."
msgstr "Um colaborador (que pode ou não ter acesso de commit) que deseja bloquear uma proposta tem uma responsabilidade especial de encontrar alternativas, propor ideias/código ou explicar a lógica do status quo para resolver o impasse. Para aprender o que significa tomada de decisão por consenso e entender seus detalhes mais sutis, você é encorajado a ler @url{https://www.seedsforchange.org.uk/consensus}."

#. type: cindex
#: guix-git/doc/contributing.texi:2857
#, no-wrap
msgid "commit access, for developers"
msgstr "acesso de confirmação, para desenvolvedores"

#. type: Plain text
#: guix-git/doc/contributing.texi:2868
msgid "Everyone can contribute to Guix without having commit access (@pxref{Submitting Patches}).  However, for frequent contributors, having write access to the repository can be convenient.  As a rule of thumb, a contributor should have accumulated fifty (50) reviewed commits to be considered as a committer and have sustained their activity in the project for at least 6 months.  This ensures enough interactions with the contributor, which is essential for mentoring and assessing whether they are ready to become a committer.  Commit access should not be thought of as a ``badge of honor'' but rather as a responsibility a contributor is willing to take to help the project."
msgstr "Todos podem contribuir para o Guix sem ter acesso de commit (@pxref{Submitting Patches}). No entanto, para contribuidores frequentes, ter acesso de gravação ao repositório pode ser conveniente. Como regra geral, um contribuidor deve ter acumulado cinquenta (50) commits revisados para ser considerado um committer e ter mantido sua atividade no projeto por pelo menos 6 meses. Isso garante interações suficientes com o contribuidor, o que é essencial para a orientação e avaliação se ele está pronto para se tornar um committer. O acesso de commit não deve ser pensado como um ``emblema de honra'', mas sim como uma responsabilidade que um contribuidor está disposto a assumir para ajudar o projeto."

#. type: Plain text
#: guix-git/doc/contributing.texi:2873
msgid "Committers are in a position where they enact technical decisions.  Such decisions must be made by @emph{actively building consensus} among interested parties and stakeholders.  @xref{Making Decisions}, for more on that."
msgstr "Os committers estão em uma posição onde eles promulgam decisões técnicas. Tais decisões devem ser tomadas por @emph{construindo ativamente o consenso} entre as partes interessadas e stakeholders. @xref{Making Decisions}, para mais sobre isso."

#. type: Plain text
#: guix-git/doc/contributing.texi:2877
msgid "The following sections explain how to get commit access, how to be ready to push commits, and the policies and community expectations for commits pushed upstream."
msgstr "As seções a seguir explicam como obter acesso de commit, como estar pronto para enviar commits e as políticas e expectativas da comunidade para commits enviados upstream."

#. type: subsection
#: guix-git/doc/contributing.texi:2878
#, no-wrap
msgid "Applying for Commit Access"
msgstr "Solicitando acesso de confirmação"

#. type: Plain text
#: guix-git/doc/contributing.texi:2882
msgid "When you deem it necessary, consider applying for commit access by following these steps:"
msgstr "Quando você julgar necessário, considere solicitar acesso de confirmação seguindo estas etapas:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2891
msgid "Find three committers who would vouch for you.  You can view the list of committers at @url{https://codeberg.org/guix/guix/settings/collaboration}.  Each of them should email a statement to @email{guix-maintainers@@gnu.org} (a private alias for the collective of maintainers), signed with their OpenPGP key."
msgstr "Encontre três committers que atestariam por você. Você pode ver a lista de committers em @url{https://codeberg.org/guix/guix/settings/collaboration}. Cada um deles deve enviar uma declaração por e-mail para @email{guix-maintainers@@gnu.org} (um alias privado para o coletivo de mantenedores), assinado com sua chave OpenPGP."

#. type: enumerate
#: guix-git/doc/contributing.texi:2897
msgid "Committers are expected to have had some interactions with you as a contributor and to be able to judge whether you are sufficiently familiar with the project's practices.  It is @emph{not} a judgment on the value of your work, so a refusal should rather be interpreted as ``let's try again later''."
msgstr "Espera-se que os committers tenham tido algumas interações com você como colaborador e sejam capazes de julgar se você está suficientemente familiarizado com as práticas do projeto. Não é um julgamento sobre o valor do seu trabalho, então uma recusa deve ser interpretada como \"vamos tentar novamente mais tarde''."

#. type: enumerate
#: guix-git/doc/contributing.texi:2904
msgid "Send @email{guix-maintainers@@gnu.org} a message stating your intent, listing the three committers who support your application, signed with the OpenPGP key you will use to sign commits, and giving its fingerprint (see below).  See @uref{https://emailselfdefense.fsf.org/en/}, for an introduction to public-key cryptography with GnuPG."
msgstr "Envie para @email{guix-maintainers@@gnu.org} uma mensagem informando sua intenção, listando os três committers que dão suporte ao seu aplicativo, assinados com a chave OpenPGP que você usará para assinar commits e fornecendo sua impressão digital (veja abaixo). Veja @uref{https://emailselfdefense.fsf.org/en/}, para uma introdução à criptografia de chave pública com GnuPG."

#. type: enumerate
#: guix-git/doc/contributing.texi:2910
msgid "Set up GnuPG such that it never uses the SHA1 hash algorithm for digital signatures, which is known to be unsafe since 2019, for instance by adding the following line to @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"
msgstr "Configure o GnuPG de forma que ele nunca use o algoritmo de hash SHA1 para assinaturas digitais, que é conhecido por ser inseguro desde 2019, por exemplo, adicionando a seguinte linha em @file{~/.gnupg/gpg.conf} (@pxref{GPG Esoteric Options,,, gnupg, The GNU Privacy Guard Manual}):"

#. type: example
#: guix-git/doc/contributing.texi:2913
#, no-wrap
msgid "digest-algo sha512\n"
msgstr "digest-algo sha512\n"

#. type: enumerate
#: guix-git/doc/contributing.texi:2918
msgid "Maintainers ultimately decide whether to grant you commit access, usually following your referrals' recommendation."
msgstr "Os mantenedores decidem, em última instância, se lhe concedem acesso de confirmação, geralmente seguindo a recomendação das suas referências."

#. type: cindex
#: guix-git/doc/contributing.texi:2920
#, no-wrap
msgid "OpenPGP, signed commits"
msgstr "OpenPGP, confirmações assinadas"

#. type: enumerate
#: guix-git/doc/contributing.texi:2925
msgid "If and once you've been given access, please send a message to @email{guix-devel@@gnu.org} to say so, again signed with the OpenPGP key you will use to sign commits (do that before pushing your first commit).  That way, everyone can notice and ensure you control that OpenPGP key."
msgstr "Se e uma vez que você tenha recebido acesso, envie uma mensagem para @email{guix-devel@@gnu.org} para dizer isso, novamente assinada com a chave OpenPGP que você usará para assinar os commits (faça isso antes de enviar seu primeiro commit). Dessa forma, todos podem notar e garantir que você controle essa chave OpenPGP."

#. type: quotation
#: guix-git/doc/contributing.texi:2926 guix-git/doc/guix.texi:727
#: guix-git/doc/guix.texi:759 guix-git/doc/guix.texi:23090
#: guix-git/doc/guix.texi:38028 guix-git/doc/guix.texi:39063
#, no-wrap
msgid "Important"
msgstr "Importante"

#. type: quotation
#: guix-git/doc/contributing.texi:2928
msgid "Before you can push for the first time, maintainers must:"
msgstr "Antes de poder fazer push pela primeira vez, os mantenedores devem:"

#. type: enumerate
#: guix-git/doc/contributing.texi:2932
msgid "add your OpenPGP key to the @code{keyring} branch;"
msgstr "adicione sua chave OpenPGP à ramificação @code{keyring};"

#. type: enumerate
#: guix-git/doc/contributing.texi:2935
msgid "add your OpenPGP fingerprint to the @file{.guix-authorizations} file of the branch(es) you will commit to."
msgstr "adicione sua impressão digital OpenPGP ao arquivo @file{.guix-authorizations} da(s) ramificação(ões) para as quais você fará o commit."

#. type: enumerate
#: guix-git/doc/contributing.texi:2940
msgid "Make sure to read the rest of this section and... profit!"
msgstr "Não deixe de ler o restante desta seção e... lucre!"

#. type: quotation
#: guix-git/doc/contributing.texi:2946
msgid "Maintainers are happy to give commit access to people who have been contributing for some time and have a track record---don't be shy and don't underestimate your work!"
msgstr "Os mantenedores ficarão felizes em dar acesso de comprometimento a pessoas que contribuem há algum tempo e têm um histórico. Não seja tímido e não subestime seu trabalho!"

#. type: quotation
#: guix-git/doc/contributing.texi:2950
msgid "However, note that the project is working towards a more automated patch review and merging system, which, as a consequence, may lead us to have fewer people with commit access to the main repository.  Stay tuned!"
msgstr "No entanto, observe que o projeto está trabalhando em direção a um sistema de revisão e mesclagem de patches mais automatizado, o que, como consequência, pode nos levar a ter menos pessoas com acesso de commit ao repositório principal. Fique ligado!"

#. type: Plain text
#: guix-git/doc/contributing.texi:2957
msgid "All commits that are pushed to the central repository on Codeberg must be signed with an OpenPGP key, and the public key should be uploaded to your user account on Codeberg and to public key servers, such as @code{keys.openpgp.org}.  To configure Git to automatically sign commits, run:"
msgstr "Todos os commits que são enviados para o repositório central no Codeberg devem ser assinados com uma chave OpenPGP, e a chave pública deve ser carregada para sua conta de usuário no Codeberg e para servidores de chave pública, como @code{keys.openpgp.org}. Para configurar o Git para assinar commits automaticamente, execute:"

#. type: example
#: guix-git/doc/contributing.texi:2960
#, no-wrap
msgid ""
"git config commit.gpgsign true\n"
"\n"
msgstr ""
"git config commit.gpgsign true\n"
"\n"

#. type: example
#: guix-git/doc/contributing.texi:2963
#, no-wrap
msgid ""
"# Substitute the fingerprint of your public PGP key.\n"
"git config user.signingkey CABBA6EA1DC0FF33\n"
msgstr ""
"# Substitua a impressão digital da sua chave PGP pública.\n"
"git config user.signingkey CABBA6EA1DC0FF33\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:2966
msgid "To check that commits are signed with correct key, use:"
msgstr "Para verificar se os commits estão assinados com a chave correta, use:"

#. type: Plain text
#: guix-git/doc/contributing.texi:2973
msgid "@xref{Building from Git} for running the first authentication of a Guix checkout."
msgstr "@xref{Building from Git} para executar a primeira autenticação de um checkout do Guix."

#. type: Plain text
#: guix-git/doc/contributing.texi:2977
msgid "To avoid accidentally pushing unsigned or signed with the wrong key commits to Codeberg, make sure to configure Git according to @xref{Configuring Git}."
msgstr "Para evitar enviar acidentalmente commits não assinados ou assinados com a chave errada para o Codeberg, certifique-se de configurar o Git de acordo com @xref{Configuring Git}."

#. type: subsection
#: guix-git/doc/contributing.texi:2978
#, no-wrap
msgid "Commit Policy"
msgstr "Política de Comprometimento"

#. type: Plain text
#: guix-git/doc/contributing.texi:2983
msgid "If you get commit access, please make sure to follow the policy below (discussions of the policy can take place on @email{guix-devel@@gnu.org})."
msgstr "Se você obtiver acesso de confirmação, certifique-se de seguir a política abaixo (as discussões sobre a política podem ocorrer em @email{guix-devel@@gnu.org})."

#. type: Plain text
#: guix-git/doc/contributing.texi:2987
msgid "Ensure you're aware of how the changes should be handled (@pxref{Managing Patches and Branches}) prior to being pushed to the repository, especially for the @code{master} branch."
msgstr "Certifique-se de estar ciente de como as alterações devem ser tratadas (@pxref{Managing Patches and Branches}) antes de serem enviadas ao repositório, especialmente para a ramificação @code{master}."

#. type: Plain text
#: guix-git/doc/contributing.texi:2994
msgid "If you're committing and pushing your own changes, try and wait at least one week (two weeks for more significant changes, up to one month for changes such as removing a package---@pxref{package-removal-policy, Package Removal}) after you send them for review.  After this, if no one else is available to review them and if you're confident about the changes, it's OK to commit."
msgstr "Se você estiver fazendo commit e enviando suas próprias alterações, tente esperar pelo menos uma semana (duas semanas para alterações mais significativas, até um mês para alterações como remover um pacote---@pxref{package-removal-policy, Remoção de Pacotes}) depois de enviá-las para revisão. Depois disso, se ninguém mais estiver disponível para revisá-las e se você estiver confiante sobre as alterações, está tudo bem fazer commit."

#. type: Plain text
#: guix-git/doc/contributing.texi:2999
msgid "When pushing a commit on behalf of somebody else, please add a @code{Signed-off-by} line at the end of the commit log message---e.g., with @command{git am --signoff}.  This improves tracking of who did what."
msgstr "Ao enviar um commit em nome de outra pessoa, adicione uma linha @code{Signed-off-by} no final da mensagem de log do commit---por exemplo, com @command{git am --signoff}. Isso melhora o rastreamento de quem fez o quê."

#. type: Plain text
#: guix-git/doc/contributing.texi:3003
msgid "When adding channel news entries (@pxref{Channels, Writing Channel News}), make sure they are well-formed by running the following command right before pushing:"
msgstr "Ao adicionar entradas de notícias do canal (@pxref{Channels, Escrevendo Notícias do Canal}), certifique-se de que elas estejam bem formadas executando o seguinte comando antes de enviar:"

#. type: example
#: guix-git/doc/contributing.texi:3006
#, no-wrap
msgid "make check-channel-news\n"
msgstr "make check-channel-news\n"

#. type: subsection
#: guix-git/doc/contributing.texi:3008
#, no-wrap
msgid "Addressing Issues"
msgstr "Abordando questões"

#. type: Plain text
#: guix-git/doc/contributing.texi:3019
msgid "Peer review (@pxref{Submitting Patches}) and tools such as @command{guix lint} (@pxref{Invoking guix lint}) and the test suite (@pxref{Running the Test Suite}) should catch issues before they are pushed.  Yet, commits that ``break'' functionality might occasionally go through.  When that happens, there are two priorities: mitigating the impact, and understanding what happened to reduce the chance of similar incidents in the future.  The responsibility for both these things primarily lies with those involved, but like everything this is a group effort."
msgstr "A revisão por pares (@pxref{Submitting Patches}) e ferramentas como @command{guix lint} (@pxref{Invoking guix lint}) e o conjunto de testes (@pxref{Running the Test Suite}) devem detectar problemas antes que eles sejam enviados. No entanto, confirmações que ``quebram'' a funcionalidade podem ocasionalmente passar. Quando isso acontece, há duas prioridades: mitigar o impacto e entender o que aconteceu para reduzir a chance de incidentes semelhantes no futuro. A responsabilidade por ambas as coisas recai principalmente sobre os envolvidos, mas, como tudo, este é um esforço de grupo."

#. type: Plain text
#: guix-git/doc/contributing.texi:3024
msgid "Some issues can directly affect all users---for instance because they make @command{guix pull} fail or break core functionality, because they break major packages (at build time or run time), or because they introduce known security vulnerabilities."
msgstr "Alguns problemas podem afetar diretamente todos os usuários, por exemplo, porque fazem com que @command{guix pull} falhe ou interrompa a funcionalidade principal, porque interrompem pacotes importantes (em tempo de compilação ou execução) ou porque introduzem vulnerabilidades de segurança conhecidas."

#. type: cindex
#: guix-git/doc/contributing.texi:3025
#, no-wrap
msgid "reverting commits"
msgstr "revertendo commits"

#. type: Plain text
#: guix-git/doc/contributing.texi:3031
msgid "The people involved in authoring, reviewing, and pushing such commit(s) should be at the forefront to mitigate their impact in a timely fashion: by pushing a followup commit to fix it (if possible), or by reverting it to leave time to come up with a proper fix, and by communicating with other developers about the problem."
msgstr "As pessoas envolvidas na criação, revisão e envio de tais confirmações devem estar na vanguarda para mitigar seu impacto em tempo hábil: enviando uma confirmação de acompanhamento para corrigi-lo (se possível) ou revertendo-o para dar tempo de encontrar uma correção adequada e comunicando-se com outros desenvolvedores sobre o problema."

#. type: Plain text
#: guix-git/doc/contributing.texi:3037
msgid "If these persons are unavailable to address the issue in time, other committers are entitled to revert the commit(s), explaining in the commit log and on the mailing list what the problem was, with the goal of leaving time to the original committer, reviewer(s), and author(s)  to propose a way forward."
msgstr "Se essas pessoas não estiverem disponíveis para resolver o problema a tempo, outros responsáveis pelo commit têm o direito de reverter o(s) commit(s), explicando no log de commits e na lista de discussão qual era o problema, com o objetivo de dar tempo ao responsável pelo commit original, revisor(es) e autor(es) para propor um caminho a seguir."

#. type: Plain text
#: guix-git/doc/contributing.texi:3046
msgid "Once the problem has been dealt with, it is the responsibility of those involved to make sure the situation is understood.  If you are working to understand what happened, focus on gathering information and avoid assigning any blame.  Do ask those involved to describe what happened, do not ask them to explain the situation---this would implicitly blame them, which is unhelpful.  Accountability comes from a consensus about the problem, learning from it and improving processes so that it's less likely to reoccur."
msgstr "Uma vez que o problema tenha sido resolvido, é responsabilidade dos envolvidos garantir que a situação seja compreendida. Se você estiver trabalhando para entender o que aconteceu, concentre-se em reunir informações e evite atribuir qualquer culpa. Peça aos envolvidos para descrever o que aconteceu, não peça para eles explicarem a situação --- isso os culparia implicitamente, o que não ajuda. A responsabilização vem de um consenso sobre o problema, aprendendo com ele e melhorando os processos para que seja menos provável que ele ocorra novamente."

#. type: subsubsection
#: guix-git/doc/contributing.texi:3047
#, fuzzy, no-wrap
#| msgid "reverting commits"
msgid "Reverting commits"
msgstr "revertendo commits"

#. type: Plain text
#: guix-git/doc/contributing.texi:3052
msgid "Like normal commits, the commit message should state why the changes are being made, which in this case would be why the commits are being reverted."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3060
msgid "If the changes are being reverted because they led to excessive number of packages being affected, then a decision should be made whether to allow the build farms to build the changes, or whether to avoid this. For the bordeaux build farm, commits can be ignored by adding them to the @code{ignore-commits} list in the @code{build-from-guix-data-service} record, found in the bayfront machine configuration."
msgstr ""

#. type: subsection
#: guix-git/doc/contributing.texi:3061
#, fuzzy, no-wrap
#| msgid "Log Rotation"
msgid "Commit Revocation"
msgstr "Rotação de log"

#. type: Plain text
#: guix-git/doc/contributing.texi:3068
msgid "In order to reduce the possibility of mistakes, committers will have their Codeberg account removed from the Guix Codeberg project and their key removed from @file{.guix-authorizations} after 12 months of inactivity; they can ask to regain commit access by emailing the maintainers, without going through the vouching process."
msgstr "Para reduzir a possibilidade de erros, os responsáveis pelo commit terão suas contas Codeberg removidas do projeto Guix em Codeberg e suas chaves removidas de @file{.guix-authorizations} após 12 meses de inatividade; eles podem solicitar o acesso de commit novamente enviando um e-mail aos mantenedores, sem passar pelo processo de garantia."

#. type: Plain text
#: guix-git/doc/contributing.texi:3078
msgid "Maintainers@footnote{See @uref{https://guix.gnu.org/en/about} for the current list of maintainers.  You can email them privately at @email{guix-maintainers@@gnu.org}.} may also revoke an individual's commit rights, as a last resort, if cooperation with the rest of the community has caused too much friction---even within the bounds of the project's code of conduct (@pxref{Contributing}).  They would only do so after public or private discussion with the individual and a clear notice.  Examples of behavior that hinders cooperation and could lead to such a decision include:"
msgstr "Mantenedores@footnote{Veja @uref{https://guix.gnu.org/pt-BR/about} para a lista atual de mantenedores. Você pode enviar um e-mail privado para eles em @email{guix-maintainers@@gnu.org}.} também pode revogar os direitos de commit de um indivíduo, como último recurso, se a cooperação com o resto da comunidade tiver causado muito atrito --- mesmo dentro dos limites do código de conduta do projeto (@pxref{Contributing}). Eles só fariam isso após discussão pública ou privada com o indivíduo e um aviso claro. Exemplos de comportamento que dificulta a cooperação e pode levar a tal decisão incluem:"

#. type: item
#: guix-git/doc/contributing.texi:3080
#, no-wrap
msgid "repeated violation of the commit policy stated above;"
msgstr "violação repetida da política de compromisso declarada acima;"

#. type: item
#: guix-git/doc/contributing.texi:3081
#, no-wrap
msgid "repeated failure to take peer criticism into account;"
msgstr "falha repetida em levar em consideração as críticas dos colegas;"

#. type: item
#: guix-git/doc/contributing.texi:3082
#, no-wrap
msgid "breaching trust through a series of grave incidents."
msgstr "quebrando a confiança através de uma série de incidentes graves."

#. type: Plain text
#: guix-git/doc/contributing.texi:3089
msgid "When maintainers resort to such a decision, they notify developers on @email{guix-devel@@gnu.org}; inquiries may be sent to @email{guix-maintainers@@gnu.org}.  Depending on the situation, the individual may still be welcome to contribute."
msgstr "Quando os mantenedores recorrem a tal decisão, eles notificam os desenvolvedores em @email{guix-devel@@gnu.org}; consultas podem ser enviadas para @email{guix-maintainers@@gnu.org}. Dependendo da situação, o indivíduo ainda pode ser bem-vindo para contribuir."

#. type: subsection
#: guix-git/doc/contributing.texi:3090
#, no-wrap
msgid "Helping Out"
msgstr "Ajudando"

#. type: Plain text
#: guix-git/doc/contributing.texi:3097
msgid "One last thing: the project keeps moving forward because committers not only push their own awesome changes, but also offer some of their time @emph{reviewing} and pushing other people's changes.  As a committer, you're welcome to use your expertise and commit rights to help other contributors, too!"
msgstr "Uma última coisa: o projeto continua avançando porque os committers não apenas empurram suas próprias mudanças incríveis, mas também oferecem parte do seu tempo @emph{revisando} e empurrando as mudanças de outras pessoas. Como committer, você é bem-vindo para usar sua expertise e direitos de commit para ajudar outros contribuidores também!"

#. type: Plain text
#: guix-git/doc/contributing.texi:3113
#, fuzzy
#| msgid "Perhaps the biggest action you can do to help GNU Guix grow as a project is to review the work contributed by others.  You do not need to be a committer to do so; applying, reading the source, building, linting and running other people's series and sharing your comments about your experience will give some confidence to committers.  Basically, you must ensure the check list found in the @ref{Submitting Patches} section has been correctly followed.  A reviewed patch series should give the best chances for the proposed change to be merged faster, so if a change you would like to see merged hasn't yet been reviewed, this is the most appropriate thing to do!"
msgid "Perhaps the biggest action you can do to help GNU Guix grow as a project is to review the work contributed by others.  You do not need to be a committer to do so; applying, reading the source, building, linting and running other people's series and sharing your comments about your experience will give some confidence to committers.  You must ensure the check list found in the @ref{Submitting Patches} section has been correctly followed.  A reviewed patch series should give the best chances for the proposed change to be merged faster, so if a change you would like to see merged hasn't yet been reviewed, this is the most appropriate thing to do! If you would like to review changes in a specific area and to receive notifications for incoming patches relevant to that domain, consider joining the relevant team(s) (@pxref{Teams})."
msgstr "Talvez a maior ação que você pode fazer para ajudar o GNU Guix a crescer como um projeto é revisar o trabalho contribuído por outros. Você não precisa ser um committer para fazer isso; aplicar, ler o código-fonte, construir, lintar e executar séries de outras pessoas e compartilhar seus comentários sobre sua experiência dará alguma confiança aos committers. Basicamente, você deve garantir que a lista de verificação encontrada na seção @ref{Enviando Patches} tenha sido seguida corretamente. Uma série de patches revisada deve dar as melhores chances para a mudança proposta ser mesclada mais rápido, então se uma mudança que você gostaria de ver mesclada ainda não foi revisada, esta é a coisa mais apropriada a fazer!"

#. type: cindex
#: guix-git/doc/contributing.texi:3114
#, fuzzy, no-wrap
#| msgid "Packaging Guidelines"
msgid "reviewing, guidelines"
msgstr "Diretrizes de empacotamento"

#. type: Plain text
#: guix-git/doc/contributing.texi:3119
msgid "Review comments should be unambiguous; be as clear and explicit as you can about what you think should be changed, ensuring the author can take action on it.  Please try to keep the following guidelines in mind during review:"
msgstr "Comentários de revisão devem ser inequívocos; seja o mais claro e explícito possível sobre o que você acha que deve ser alterado, garantindo que o autor possa tomar medidas sobre isso. Tente manter as seguintes diretrizes em mente durante a revisão:"

#. type: enumerate
#: guix-git/doc/contributing.texi:3125
msgid "@emph{Be clear and explicit about changes you are suggesting}, ensuring the author can take action on it.  In particular, it is a good idea to explicitly ask for new revisions when you want it."
msgstr "@emph{Seja claro e explícito sobre as mudanças que você está sugerindo}, garantindo que o autor possa agir sobre isso. Em particular, é uma boa ideia pedir explicitamente por novas revisões quando você quiser."

#. type: enumerate
#: guix-git/doc/contributing.texi:3133
msgid "@emph{Remain focused: do not change the scope of the work being reviewed.} For example, if the contribution touches code that follows a pattern deemed unwieldy, it would be unfair to ask the submitter to fix all occurrences of that pattern in the code; to put it simply, if a problem unrelated to the patch at hand was already there, do not ask the submitter to fix it."
msgstr "@emph{Mantenha o foco: não altere o escopo do trabalho que está sendo revisado.} Por exemplo, se a contribuição aborda um código que segue um padrão considerado difícil de manejar, seria injusto pedir ao remetente para corrigir todas as ocorrências desse padrão no código; para simplificar, se um problema não relacionado ao patch em questão já estava lá, não peça ao remetente para corrigi-lo."

#. type: enumerate
#: guix-git/doc/contributing.texi:3140
msgid "@emph{Ensure progress.} As they respond to review, submitters may submit new revisions of their changes; avoid requesting changes that you did not request in the previous round of comments.  Overall, the submitter should get a clear sense of progress; the number of items open for discussion should clearly decrease over time."
msgstr "@emph{Garantir o progresso.} Conforme respondem à revisão, os remetentes podem enviar novas revisões de suas alterações; evite solicitar alterações que você não solicitou na rodada anterior de comentários. No geral, o remetente deve ter uma noção clara do progresso; o número de itens abertos para discussão deve diminuir claramente ao longo do tempo."

#. type: enumerate
#: guix-git/doc/contributing.texi:3147
msgid "@emph{Aim for finalization.} Reviewing code is time-consuming.  Your goal as a reviewer is to put the process on a clear path towards integration, possibly with agreed-upon changes, or rejection, with a clear and mutually-understood reasoning.  Avoid leaving the review process in a lingering state with no clear way out."
msgstr "@emph{Aim for finalization.} Revisar código consome tempo. Seu objetivo como revisor é colocar o processo em um caminho claro em direção à integração, possivelmente com mudanças acordadas, ou rejeição, com um raciocínio claro e mutuamente compreendido. Evite deixar o processo de revisão em um estado persistente sem uma saída clara."

#. type: enumerate
#: guix-git/doc/contributing.texi:3161
#, fuzzy
#| msgid "@emph{Review is a discussion.} The submitter's and reviewer's views on how to achieve a particular change may not always be aligned.  To lead the discussion, remain focused, ensure progress and aim for finalization, spending time proportional to the stakes@footnote{The tendency to discuss minute details at length is often referred to as ``bikeshedding'', where much time is spent discussing each one's preference for the color of the shed at the expense of progress made on the project to keep bikes dry.}.  As a reviewer, try hard to explain the rationale for suggestions you make, and to understand and take into account the submitter's motivation for doing things in a certain way."
msgid "@emph{Review is a discussion.} The submitter's and reviewer's views on how to achieve a particular change may not always be aligned.  To lead the discussion, remain focused, ensure progress and aim for finalization, spending time proportional to the stakes@footnote{The tendency to discuss minute details at length is often referred to as ``bikeshedding'', where much time is spent discussing each one's preference for the color of the shed at the expense of progress made on the project to keep bikes dry.}.  As a reviewer, try hard to explain the rationale for suggestions you make, and to understand and take into account the submitter's motivation for doing things in a certain way.  In other words, build consensus with everyone involved (@pxref{Making Decisions})."
msgstr "@emph{A revisão é uma discussão.} As visões do remetente e do revisor sobre como alcançar uma mudança específica podem nem sempre estar alinhadas. Para liderar a discussão, mantenha o foco, garanta o progresso e busque a finalização, gastando tempo proporcional aos riscos@footnote{A tendência de discutir detalhes minuciosos longamente é frequentemente chamada de ``bikeshedding'', onde muito tempo é gasto discutindo a preferência de cada um pela cor do galpão em detrimento do progresso feito no projeto para manter as bicicletas secas.}. Como revisor, tente explicar a justificativa para as sugestões que você faz e entenda e leve em consideração a motivação do remetente para fazer as coisas de uma determinada maneira."

#. type: Plain text
#: guix-git/doc/contributing.texi:3167
msgid "When you deem the proposed change adequate and ready for inclusion in Guix, you can explicitly say so for pull requests on Codeberg, for example by selecting ``Approve changes'' in the ``Finish review'' dialog of the web interface."
msgstr ""

#. type: cindex
#: guix-git/doc/contributing.texi:3168
#, no-wrap
msgid "LGTM, Looks Good To Me"
msgstr "LGTM, parece bom para mim"

#. type: cindex
#: guix-git/doc/contributing.texi:3169
#, no-wrap
msgid "review tags"
msgstr "tags de revisão"

#. type: cindex
#: guix-git/doc/contributing.texi:3170
#, no-wrap
msgid "Reviewed-by, git trailer"
msgstr "Revisado por, git trailer"

#. type: Plain text
#: guix-git/doc/contributing.texi:3180
#, fuzzy
#| msgid "When you deem the proposed change adequate and ready for inclusion within Guix, the following well understood/codified @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} @footnote{The @samp{Reviewed-by} Git trailer is used by other projects such as Linux, and is understood by third-party tools such as the @samp{b4 am} sub-command, which is able to retrieve the complete submission email thread from a public-inbox instance and add the Git trailers found in replies to the commit patches.} line should be used to sign off as a reviewer, meaning you have reviewed the change and that it looks good to you:"
msgid "The following well understood/codified @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} @footnote{The @samp{Reviewed-by} Git trailer is used by other projects such as Linux, and is understood by third-party tools such as the @samp{b4 am} sub-command, which is able to retrieve the complete submission email thread from a public-inbox instance and add the Git trailers found in replies to the commit patches.} line should be used to sign off as a reviewer, meaning you have reviewed the change and that it looks good to you:"
msgstr "Quando você considera a alteração proposta adequada e pronta para inclusão no Guix, a seguinte linha bem compreendida/codificada @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} @footnote{O trailer do Git @samp{Reviewed-by} é usado por outros projetos, como o Linux, e é compreendido por ferramentas de terceiros, como o subcomando @samp{b4 am}, que é capaz de recuperar o tópico completo do e-mail de envio de uma instância de caixa de entrada pública e adicionar os trailers do Git encontrados nas respostas aos patches de confirmação.} deve ser usada para assinar como revisor, o que significa que você revisou a alteração e que ela parece boa para você:"

#. type: itemize
#: guix-git/doc/contributing.texi:3189
msgid "If the @emph{whole} series (containing multiple commits) looks good to you, reply with @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} to the cover page if it has one, or to the last patch of the series otherwise, adding another @samp{(for the whole series)} comment on the line below to explicit this fact."
msgstr "Se a série @emph{toda} (contendo vários commits) parecer boa para você, responda com @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} para a página de capa, se houver uma, ou para o último patch da série, caso contrário, adicionando outro comentário @samp{(para toda a série)} na linha abaixo para explicitar esse fato."

#. type: itemize
#: guix-git/doc/contributing.texi:3195
msgid "If you instead want to mark a @emph{single commit} as reviewed (but not the whole series), simply reply with @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} to that commit message."
msgstr "Se você quiser marcar um @emph{único commit} como revisado (mas não a série inteira), basta responder com @samp{Reviewed-by:@tie{}Your@tie{}Name@tie{}<your-email@@example.com>} para essa mensagem de commit."

#. type: Plain text
#: guix-git/doc/contributing.texi:3200
msgid "If you are not a committer, you can help others find a @emph{series} you have reviewed more easily by adding a @code{reviewed-looks-good} usertag for the @code{guix} user (@pxref{Debbugs Usertags})."
msgstr "Se você não for um colaborador, pode ajudar outras pessoas a encontrar uma @emph{série} que você revisou mais facilmente adicionando uma usertag @code{reviewed-looks-good} para o usuário @code{guix} (@pxref{Debbugs Usertags})."

#. type: cindex
#: guix-git/doc/contributing.texi:3204
#, no-wrap
msgid "update-guix-package, updating the guix package"
msgstr "update-guix-package, atualizando o pacote guix"

#. type: Plain text
#: guix-git/doc/contributing.texi:3210
msgid "It is sometimes desirable to update the @code{guix} package itself (the package defined in @code{(gnu packages package-management)}), for example to make new daemon features available for use by the @code{guix-service-type} service type.  In order to simplify this task, the following command can be used:"
msgstr "Às vezes, é desejável atualizar o pacote @code{guix} em si (o pacote definido em @code{(gnu packages package-management)}), por exemplo, para tornar novos recursos de daemon disponíveis para uso pelo tipo de serviço @code{guix-service-type}. Para simplificar essa tarefa, o seguinte comando pode ser usado:"

#. type: example
#: guix-git/doc/contributing.texi:3213
#, no-wrap
msgid "make update-guix-package\n"
msgstr "make update-guix-package\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3220
msgid "The @code{update-guix-package} make target will use the last known @emph{commit} corresponding to @code{HEAD} in your Guix checkout, compute the hash of the Guix sources corresponding to that commit and update the @code{commit}, @code{revision} and hash of the @code{guix} package definition."
msgstr "O destino de criação do @code{update-guix-package} usará o último @emph{commit} conhecido correspondente ao @code{HEAD} no seu checkout do Guix, calculará o hash das fontes do Guix correspondentes a esse commit e atualizará o @code{commit}, @code{revision} e o hash da definição do pacote @code{guix}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3224
msgid "To validate that the updated @code{guix} package hashes are correct and that it can be built successfully, the following command can be run from the directory of your Guix checkout:"
msgstr "Para validar se os hashes do pacote @code{guix} atualizados estão corretos e se ele pode ser construído com sucesso, o seguinte comando pode ser executado no diretório do seu checkout Guix:"

#. type: example
#: guix-git/doc/contributing.texi:3227
#, no-wrap
msgid "./pre-inst-env guix build guix\n"
msgstr "./pre-inst-env guix build guix\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3232
msgid "To guard against accidentally updating the @code{guix} package to a commit that others can't refer to, a check is made that the commit used has already been pushed to the Codeberg-hosted Guix Git repository."
msgstr "Para evitar a atualização acidental do pacote @code{guix} para um commit ao qual outros não podem se referir, é feita uma verificação de que o commit usado já foi enviado para o repositório Git de Guix hospedado em Codeberg."

#. type: Plain text
#: guix-git/doc/contributing.texi:3237
msgid "This check can be disabled, @emph{at your own peril}, by setting the @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT} environment variable.  When this variable is set, the updated package source is also added to the store.  This is used as part of the release process of Guix."
msgstr "Esta verificação pode ser desabilitada, @emph{por sua conta e risco}, definindo a variável de ambiente @code{GUIX_ALLOW_ME_TO_USE_PRIVATE_COMMIT}. Quando esta variável é definida, a fonte do pacote atualizado também é adicionada ao armazém. Isto é usado como parte do processo de lançamento do Guix."

#. type: cindex
#: guix-git/doc/contributing.texi:3241
#, no-wrap
msgid "deprecation policy"
msgstr "política de depreciação"

#. type: Plain text
#: guix-git/doc/contributing.texi:3251
msgid "As any lively project with a broad scope, Guix changes all the time and at all levels.  Because it's user-extensible and programmable, incompatible changes can directly impact users and make their life harder.  It is thus important to reduce user-visible incompatible changes to a minimum and, when such changes are deemed necessary, to clearly communicate them through a @dfn{deprecation period} so everyone can adapt with minimum hassle.  This section defines the project's commitments for smooth deprecation and describes procedures and mechanisms to honor them."
msgstr "Como qualquer projeto animado com um escopo amplo, o Guix muda o tempo todo e em todos os níveis. Como é extensível e programável pelo usuário, mudanças incompatíveis podem impactar diretamente os usuários e dificultar suas vidas. Portanto, é importante reduzir as mudanças incompatíveis visíveis ao usuário ao mínimo e, quando tais mudanças forem consideradas necessárias, comunicá-las claramente por meio de um @dfn{período de depreciação} para que todos possam se adaptar com o mínimo de problemas. Esta seção define os compromissos do projeto para uma depreciação suave e descreve procedimentos e mecanismos para honrá-los."

#. type: Plain text
#: guix-git/doc/contributing.texi:3254
msgid "There are several ways to use Guix; how to handle deprecation will depend on each use case.  Those can be roughly categorized like this:"
msgstr "Há várias maneiras de usar Guix; como lidar com a descontinuação dependerá de cada caso de uso. Elas podem ser categorizadas aproximadamente assim:"

#. type: itemize
#: guix-git/doc/contributing.texi:3258
msgid "package management exclusively through the command line;"
msgstr "gerenciamento de pacotes exclusivamente através da linha de comando;"

#. type: itemize
#: guix-git/doc/contributing.texi:3261
msgid "advanced package management using the manifest and package interfaces;"
msgstr "gerenciamento avançado de pacotes usando as interfaces de manifesto e pacote;"

#. type: itemize
#: guix-git/doc/contributing.texi:3265
msgid "Home and System management, using the @code{operating-system} and/or @code{home-environment} interfaces together with the service interfaces;"
msgstr "Gerenciamento de sistema e home, usando as interfaces @code{operating-system} e/ou @code{home-environment} juntamente com as interfaces de serviço;"

#. type: itemize
#: guix-git/doc/contributing.texi:3269
msgid "development or use of external tools that use programming interfaces such as the @code{(guix ...)} modules."
msgstr "desenvolvimento ou utilização de ferramentas externas que utilizam interfaces de programação como os módulos @code{(guix ...)}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3275
msgid "These use cases form a spectrum with varying degrees of coupling---from ``distant'' to tightly coupled.  Based on this insight, we define the following @dfn{deprecation policies} that we consider suitable for each of these levels."
msgstr "Esses casos de uso formam um espectro com vários graus de acoplamento --- de ``distante'' a fortemente acoplado. Com base nesse insight, definimos as seguintes @dfn{políticas de depreciação} que consideramos adequadas para cada um desses níveis."

#. type: item
#: guix-git/doc/contributing.texi:3277
#, fuzzy, no-wrap
#| msgid "Programming Interface"
msgid "Command-line tools"
msgstr "Interface de programação"

#. type: table
#: guix-git/doc/contributing.texi:3282
msgid "Guix sub-commands should be thought of as remaining available ``forever''.  Once a Guix sub-command is to be removed, it should be deprecated first, and then remain available for @b{at least one year} after the first release that deprecated it."
msgstr "Os subcomandos Guix devem ser pensados como permanecendo disponíveis ``para sempre''. Uma vez que um subcomando Guix deve ser removido, ele deve ser descontinuado primeiro, e então permanecer disponível por @b{pelo menos um ano} após o primeiro lançamento que o descontinuou."

#. type: table
#: guix-git/doc/contributing.texi:3292
msgid "Deprecation should first be announced in the manual and as an entry in @file{etc/news.scm}; additional communication such as a blog post explaining the rationale is welcome.  Months before the scheduled removal date, the command should print a warning explaining how to migrate.  An example of this is the replacement of @command{guix environment} by @command{guix shell}, started in October 2021@footnote{For more details on the @command{guix shell} transition, see @uref{https://guix.gnu.org/en/blog/2021/from-guix-environment-to-guix-shell/}.}."
msgstr "A descontinuação deve ser anunciada primeiro no manual e como uma entrada em @file{etc/news.scm}; comunicações adicionais, como uma postagem de blog explicando a justificativa, são bem-vindas. Meses antes da data de remoção programada, o comando deve imprimir um aviso explicando como migrar. Um exemplo disso é a substituição de @command{guix environment} por @command{guix shell}, iniciada em outubro de 2021@footnote{Para mais detalhes sobre a transição do @command{guix shell}, consulte @uref{https://guix.gnu.org/en/blog/2021/from-guix-environment-to-guix-shell/}.}."

#. type: table
#: guix-git/doc/contributing.texi:3295
msgid "Because of the broad impact of such a change, we recommend conducting a user survey before enacting a plan."
msgstr "Devido ao amplo impacto de tal mudança, recomendamos realizar uma pesquisa com usuários antes de implementar um plano."

#. type: cindex
#: guix-git/doc/contributing.texi:3296
#, fuzzy, no-wrap
#| msgid "package description"
msgid "package deprecation"
msgstr "descrição do pacote"

#. type: item
#: guix-git/doc/contributing.texi:3297
#, fuzzy, no-wrap
#| msgid "Package management commands."
msgid "Package name changes"
msgstr "Comandos de gerenciamento de pacote."

#. type: table
#: guix-git/doc/contributing.texi:3302
msgid "When a package name changes, it must remain available under its old name for @b{at least one year}.  For example, @code{go-ipfs} was renamed to @code{kubo} following a decision made upstream; to communicate the name change to users, the package module provided this definition:"
msgstr "Quando um nome de pacote muda, ele deve permanecer disponível sob seu nome antigo por @b{pelo menos um ano}. Por exemplo, @code{go-ipfs} foi renomeado para @code{kubo} após uma decisão tomada upstream; para comunicar a mudança de nome aos usuários, o módulo do pacote forneceu esta definição:"

#. type: findex
#: guix-git/doc/contributing.texi:3303
#, fuzzy, no-wrap
#| msgid "package"
msgid "deprecated-package"
msgstr "pacote"

#. type: lisp
#: guix-git/doc/contributing.texi:3307
#, no-wrap
msgid ""
"(define-public go-ipfs\n"
"  (deprecated-package \"go-ipfs\" kubo))\n"
msgstr ""
"(define-public go-ipfs\n"
"  (deprecated-package \"go-ipfs\" kubo))\n"

#. type: table
#: guix-git/doc/contributing.texi:3311
msgid "That way, someone running @command{guix install go-ipfs} or similar sees a deprecation warning mentioning the new name."
msgstr "Dessa forma, alguém executando @command{guix install go-ipfs} ou similar verá um aviso de descontinuação mencionando o novo nome."

#. type: cindex
#: guix-git/doc/contributing.texi:3312
#, fuzzy, no-wrap
#| msgid "packages, creating"
msgid "package removal policy"
msgstr "pacotes, criação"

#. type: anchor{#1}
#: guix-git/doc/contributing.texi:3314
msgid "package-removal-policy"
msgstr "package-removal-policy"

#. type: item
#: guix-git/doc/contributing.texi:3314
#, fuzzy, no-wrap
#| msgid "Package Modules"
msgid "Package removal"
msgstr "Módulos de pacote"

#. type: table
#: guix-git/doc/contributing.texi:3318
msgid "Packages whose upstream developers have declared as having reached ``end of life'' or being unmaintained may be removed; likewise, packages that have been @b{failing to build for two months or more} may be removed."
msgstr "Pacotes cujos desenvolvedores originais declararam que atingiram o ``fim da vida útil'' ou não são mantidos podem ser removidos; da mesma forma, pacotes que estão @b{falhando na compilação por dois meses ou mais} podem ser removidos."

#. type: table
#: guix-git/doc/contributing.texi:3322
msgid "There is no formal deprecation mechanism for this case, unless a replacement exists, in which case the @code{deprecated-package} procedure mentioned above can be used."
msgstr "Não há um mecanismo formal de descontinuação para este caso, a menos que exista uma substituição, caso em que o procedimento @code{deprecated-package} mencionado acima pode ser usado."

#. type: table
#: guix-git/doc/contributing.texi:3327
msgid "If the package being removed is a ``leaf'' (no other packages depend on it), it may be removed after a @b{one-month review period} of the patch removing it (this applies even when the removal has additional motivations such as security problems affecting the package)."
msgstr "Se o pacote que está sendo removido for um ``leaf'' (nenhum outro pacote depende dele), ele poderá ser removido após um @b{período de revisão de um mês} do patch que o removeu (isso se aplica mesmo quando a remoção tem motivações adicionais, como problemas de segurança que afetam o pacote)."

#. type: table
#: guix-git/doc/contributing.texi:3335
msgid "If it has many dependent packages---as is the case for example with Python version@tie{}2---the relevant team must propose a deprecation removal agenda and seek consensus with other packagers for @b{at least one month}.  It may also invite feedback from the broader user community, for example through a survey.  Removal of all impacted packages may be gradual, spanning multiple months, to accommodate all use cases."
msgstr "Se tiver muitos pacotes dependentes --- como é o caso, por exemplo, com a versão Python@tie{}2 --- a equipe relevante deve propor uma agenda de remoção de descontinuação e buscar consenso com outros empacotadores por @b{pelo menos um mês}. Também pode convidar feedback da comunidade de usuários mais ampla, por exemplo, por meio de uma pesquisa. A remoção de todos os pacotes impactados pode ser gradual, abrangendo vários meses, para acomodar todos os casos de uso."

#. type: table
#: guix-git/doc/contributing.texi:3339
msgid "When the package being removed is considered popular, whether or not it is a leaf, its deprecation must be announced as an entry in @code{etc/news.scm}."
msgstr "Quando o pacote que está sendo removido é considerado popular, seja ou não uma folha, sua descontinuação deve ser anunciada como uma entrada em @code{etc/news.scm}."

#. type: item
#: guix-git/doc/contributing.texi:3340
#, fuzzy, no-wrap
#| msgid "Package Modules"
msgid "Package upgrade"
msgstr "Módulos de pacote"

#. type: table
#: guix-git/doc/contributing.texi:3343
msgid "In the case of packages with many dependents and/or many users, an upgrade may be treated like the @emph{removal} of the previous version."
msgstr "No caso de pacotes com muitos dependentes e/ou muitos usuários, uma atualização pode ser tratada como a @emph{remoção} da versão anterior."

#. type: table
#: guix-git/doc/contributing.texi:3347
msgid "Examples include major version upgrades of programming language implementations, as we've seen above with Python, and major upgrades of ``big'' libraries such as Qt or GTK."
msgstr "Exemplos incluem grandes atualizações de versões de implementações de linguagens de programação, como vimos acima com Python, e grandes atualizações de bibliotecas ``grandes'' como Qt ou GTK."

#. type: cindex
#: guix-git/doc/contributing.texi:3348
#, fuzzy, no-wrap
#| msgid "Service Composition"
msgid "service deprecation"
msgstr "Composição de serviço"

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: node
#: guix-git/doc/contributing.texi:3349 guix-git/doc/guix.texi:395
#: guix-git/doc/guix.texi:401 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:19423 guix-git/doc/guix.texi:19424
#: guix-git/doc/guix.texi:37454
#, no-wrap
msgid "Services"
msgstr "Serviços"

#. type: table
#: guix-git/doc/contributing.texi:3354
msgid "Changes to services for Guix Home and Guix System have a direct impact on user configuration.  For a user, adjusting to interface changes is rarely rewarding, which is why any such change must be clearly communicated in advance through deprecation warnings and documentation."
msgstr "Mudanças nos serviços para Guix Home e Guix System têm um impacto direto na configuração do usuário. Para um usuário, ajustar-se a mudanças de interface raramente é recompensador, e é por isso que qualquer mudança desse tipo deve ser claramente comunicada com antecedência por meio de avisos de descontinuação e documentação."

#. type: table
#: guix-git/doc/contributing.texi:3360
msgid "Renaming of variables related to service, home, or system configuration must be communicated for at least six months before removal using the @code{(guix deprecation)} mechanisms.  For example, renaming of @code{murmur-configuration} to @code{mumble-server-configuration} was communicated through a series of definitions like this one:"
msgstr "A renomeação de variáveis relacionadas a configuração de serviço, home ou sistema deve ser comunicada por pelo menos seis meses antes da remoção usando os mecanismos @code{(guix deprecation)}. Por exemplo, a renomeação de @code{murmur-configuration} para @code{mumble-server-configuration} foi comunicada por meio de uma série de definições como esta:"

#. type: findex
#: guix-git/doc/contributing.texi:3361
#, no-wrap
msgid "define-deprecated/public-alias"
msgstr "define-deprecated/public-alias"

#. type: lisp
#: guix-git/doc/contributing.texi:3366
#, no-wrap
msgid ""
"(define-deprecated/public-alias\n"
"  murmur-configuration\n"
"  mumble-server-configuration)\n"
msgstr ""
"(define-deprecated/public-alias\n"
"  murmur-configuration\n"
"  mumble-server-configuration)\n"

#. type: table
#: guix-git/doc/contributing.texi:3369
msgid "Procedures slated for removal may be defined like this:"
msgstr "Os procedimentos previstos para remoção podem ser definidos assim:"

#. type: findex
#: guix-git/doc/contributing.texi:3370
#, no-wrap
msgid "define-deprecated"
msgstr "define-deprecated"

#. type: lisp
#: guix-git/doc/contributing.texi:3375
#, no-wrap
msgid ""
"(define-deprecated (elogind-service #:key (config (elogind-configuration)))\n"
"  elogind-service-type\n"
"  (service elogind-service-type config))\n"
msgstr ""
"(define-deprecated (elogind-service #:key (config (elogind-configuration)))\n"
"  elogind-service-type\n"
"  (service elogind-service-type config))\n"

#. type: table
#: guix-git/doc/contributing.texi:3382
msgid "Record fields, notably fields of service configuration records, must follow a similar deprecation period.  This is usually achieved through @i{ad hoc} means though.  For example, the @code{hosts-file} field of @code{operating-system} was deprecated by adding a @code{sanitized} property that would emit a warning:"
msgstr "Campos de registro, notavelmente campos de registros de configuração de serviço, devem seguir um período de depreciação similar. Isso geralmente é obtido por meio de @i{ad hoc}. Por exemplo, o campo @code{hosts-file} de @code{operating-system} foi depreciado pela adição de uma propriedade @code{sanitized} que emitiria um aviso:"

#. type: lisp
#: guix-git/doc/contributing.texi:3389
#, fuzzy, no-wrap
msgid ""
"(define-record-type* <operating-system>\n"
"  ;; @dots{}\n"
"  (hosts-file %operating-system-hosts-file         ;deprecated\n"
"              (default #f)\n"
"              (sanitize warn-hosts-file-field-deprecation)))\n"
"\n"
msgstr ""
"(define-record-type* <operating-system>\n"
"  ;; @dots{}\n"
"  (hosts-file %operating-system-hosts-file         ;deprecated\n"
"              (default #f)\n"
"              (sanitize warn-hosts-file-field-deprecation)))\n"
"\n"

#. type: lisp
#: guix-git/doc/contributing.texi:3393
#, fuzzy, no-wrap
msgid ""
"(define-deprecated (operating-system-hosts-file os)\n"
"  hosts-service-type\n"
"  (%operating-system-hosts-file os))\n"
msgstr ""
"(define-deprecated (operating-system-hosts-file os)\n"
"  hosts-service-type\n"
"  (%operating-system-hosts-file os))\n"

#. type: table
#: guix-git/doc/contributing.texi:3398
msgid "When deprecating interfaces in @code{operating-system}, @code{home-environment}, @code{(gnu services)}, or any popular service, the deprecation must come with an entry in @code{etc/news.scm}."
msgstr "Ao descontinuar interfaces em @code{operating-system}, @code{home-environment}, @code{(gnu services)} ou qualquer serviço popular, a descontinuação deve vir com uma entrada em @code{etc/news.scm}."

#. type: cindex
#: guix-git/doc/contributing.texi:3399
#, fuzzy, no-wrap
#| msgid "Programming Interface"
msgid "deprecation of programming interfaces"
msgstr "Interface de programação"

#. type: item
#: guix-git/doc/contributing.texi:3400
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "Core interfaces"
msgstr "interfaces de usuário"

#. type: table
#: guix-git/doc/contributing.texi:3407
msgid "Core programming interfaces, in particular the @code{(guix ...)} modules, may be relied on by a variety of external tools and channels.  Any incompatible change must be formally deprecated with @code{define-deprecated}, as shown above, for @b{at least one year} before removal.  The manual must clearly document the new interface and, except in obvious cases, explain how to migrate from the old one."
msgstr "Interfaces de programação principais, em particular os módulos @code{(guix ...)}, podem ser confiáveis por uma variedade de ferramentas e canais externos. Qualquer alteração incompatível deve ser formalmente descontinuada com @code{define-deprecated}, como mostrado acima, por @b{pelo menos um ano} antes da remoção. O manual deve documentar claramente a nova interface e, exceto em casos óbvios, explicar como migrar da antiga."

#. type: table
#: guix-git/doc/contributing.texi:3411
msgid "As an example, the @code{build-expression->derivation} procedure was superseded by @code{gexp->derivation} and remained available as a deprecated symbol:"
msgstr "Como exemplo, o procedimento @code{build-expression->derivation} foi substituído por @code{gexp->derivation} e permaneceu disponível como um símbolo obsoleto:"

#. type: lisp
#: guix-git/doc/contributing.texi:3417
#, fuzzy, no-wrap
msgid ""
"(define-deprecated (build-expression->derivation store name exp\n"
"                                                 #:key @dots{})\n"
"  gexp->derivation\n"
"  @dots{})\n"
msgstr ""
"(define-deprecated (build-expression->derivation store name exp\n"
"                                                 #:key @dots{})\n"
"  gexp->derivation\n"
"  @dots{})\n"

#. type: table
#: guix-git/doc/contributing.texi:3422
msgid "Sometimes bindings are moved from one module to another.  In those cases, bindings must be reexported from the original module for at least one year."
msgstr "Às vezes, bindings são movidos de um módulo para outro. Nesses casos, bindings devem ser reexportados do módulo original por pelo menos um ano."

#. type: Plain text
#: guix-git/doc/contributing.texi:3427
msgid "This section does not cover all possible situations but hopefully allows users to know what to expect and developers to stick to its spirit.  Please email @email{guix-devel@@gnu.org} for any questions."
msgstr "Esta seção não cobre todas as situações possíveis, mas espera-se que permita que os usuários saibam o que esperar e que os desenvolvedores se mantenham fiéis ao seu espírito. Por favor, envie um e-mail para @email{guix-devel@@gnu.org} para quaisquer perguntas."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: cindex
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#: guix-git/doc/contributing.texi:3428 guix-git/doc/guix.texi:4166
#: guix-git/doc/guix.texi:48269 guix-git/doc/guix.texi:48326
#, no-wrap
msgid "documentation"
msgstr "documentation"

#. type: Plain text
#: guix-git/doc/contributing.texi:3435
msgid "Guix is documented using the Texinfo system.  If you are not yet familiar with it, we accept contributions for documentation in most formats.  That includes plain text, Markdown, Org, etc."
msgstr "Guix é documentado usando o sistema Texinfo. Se você ainda não está familiarizado com ele, aceitamos contribuições para documentação na maioria dos formatos. Isso inclui texto simples, Markdown, Org, etc."

#. type: Plain text
#: guix-git/doc/contributing.texi:3439
msgid "Documentation contributions can be sent to @email{guix-patches@@gnu.org}.  Prepend @samp{[DOCUMENTATION]} to the subject."
msgstr "Contribuições de documentação podem ser enviadas para @email{guix-patches@@gnu.org}. Adicione @samp{[DOCUMENTATION]} ao assunto."

#. type: Plain text
#: guix-git/doc/contributing.texi:3444
msgid "When you need to make more than a simple addition to the documentation, we prefer that you send a proper patch as opposed to sending an email as described above.  @xref{Submitting Patches} for more information on how to send your patches."
msgstr "Quando você precisar fazer mais do que uma simples adição à documentação, preferimos que você envie um patch adequado em vez de enviar um e-mail como descrito acima. @xref{Submitting Patches} para obter mais informações sobre como enviar seus patches."

#. type: Plain text
#: guix-git/doc/contributing.texi:3453
msgid "To modify the documentation, you need to edit @file{doc/guix.texi} and @file{doc/contributing.texi} (which contains this documentation section), or @file{doc/guix-cookbook.texi} for the cookbook.  If you compiled the Guix repository before, you will have many more @file{.texi} files that are translations of these documents.  Do not modify them, the translation is managed through @uref{https://translate.codeberg.org/projects/guix, Weblate}.  @xref{Translating Guix} for more information."
msgstr "Para modificar a documentação, você precisa editar @file{doc/guix.texi} e @file{doc/contributing.texi} (que contém esta seção de documentação), ou @file{doc/guix-cookbook.texi} para o livro de receitas. Se você compilou o repositório Guix antes, você terá muito mais arquivos @file{.texi} que são traduções desses documentos. Não os modifique, a tradução é gerenciada através de @uref{https://translate.codeberg.org/projects/guix, Weblate}. @xref{Translating Guix} para mais informações."

#. type: Plain text
#: guix-git/doc/contributing.texi:3458
msgid "To render documentation, you must first make sure that you ran @command{./configure} in your source tree (@pxref{Running Guix Before It Is Installed}).  After that you can run one of the following commands:"
msgstr "Para renderizar a documentação, você deve primeiro certificar-se de que executou @command{./configure} na sua árvore de origem (@pxref{Running Guix Before It Is Installed}). Depois disso, você pode executar um dos seguintes comandos:"

#. type: item
#: guix-git/doc/contributing.texi:3460
#, no-wrap
msgid "@samp{make doc/guix.info} to compile the Info manual."
msgstr "@samp{make doc/guix.info} para compilar o manual de informações."

#. type: itemize
#: guix-git/doc/contributing.texi:3462
msgid "You can check it with @command{info doc/guix.info}."
msgstr "Você pode verificar com @command{info doc/guix.info}."

#. type: item
#: guix-git/doc/contributing.texi:3462
#, no-wrap
msgid "@samp{make doc/guix.html} to compile the HTML version."
msgstr "@samp{make doc/guix.html} para compilar a versão HTML."

#. type: itemize
#: guix-git/doc/contributing.texi:3465
msgid "You can point your browser to the relevant file in the @file{doc/guix.html} directory."
msgstr "Você pode apontar seu navegador para o arquivo relevante no diretório @file{doc/guix.html}."

#. type: item
#: guix-git/doc/contributing.texi:3465
#, no-wrap
msgid "@samp{make doc/guix-cookbook.info} for the cookbook Info manual."
msgstr "@samp{make doc/guix-cookbook.info} para o manual de informações do livro de receitas."

#. type: item
#: guix-git/doc/contributing.texi:3466
#, no-wrap
msgid "@samp{make doc/guix-cookbook.html} for the cookbook HTML version."
msgstr "@samp{make doc/guix-cookbook.html} para a versão HTML do livro de receitas."

#. type: cindex
#: guix-git/doc/contributing.texi:3469
#, no-wrap
msgid "translation"
msgstr "tradução"

#. type: cindex
#: guix-git/doc/contributing.texi:3470
#, no-wrap
msgid "l10n"
msgstr "l10n"

#. type: cindex
#: guix-git/doc/contributing.texi:3471
#, no-wrap
msgid "i18n"
msgstr "i18n"

#. type: cindex
#: guix-git/doc/contributing.texi:3472
#, no-wrap
msgid "native language support"
msgstr "suporte a idioma nativo"

#. type: Plain text
#: guix-git/doc/contributing.texi:3482
msgid "Writing code and packages is not the only way to provide a meaningful contribution to Guix.  Translating to a language you speak is another example of a valuable contribution you can make.  This section is designed to describe the translation process.  It gives you advice on how you can get involved, what can be translated, what mistakes you should avoid and what we can do to help you!"
msgstr "Escrever código e pacotes não é a única maneira de fornecer uma contribuição significativa para o Guix. Traduzir para um idioma que você fala é outro exemplo de uma contribuição valiosa que você pode fazer. Esta seção foi criada para descrever o processo de tradução. Ela dá conselhos sobre como você pode se envolver, o que pode ser traduzido, quais erros você deve evitar e o que podemos fazer para ajudar você!"

#. type: Plain text
#: guix-git/doc/contributing.texi:3488
msgid "Guix is a big project that has multiple components that can be translated.  We coordinate the translation effort on a @uref{https://translate.codeberg.org/projects/guix/,Weblate instance} hosted by our friends at Fedora.  You will need an account to submit translations."
msgstr "Guix é um grande projeto que tem vários componentes que podem ser traduzidos. Nós coordenamos o esforço de tradução em uma instância @uref{https://translate.codeberg.org/projects/guix/,Weblate} hospedada por nossos amigos no Fedora. Você precisará de uma conta para enviar traduções."

#. type: Plain text
#: guix-git/doc/contributing.texi:3495
msgid "Some of the software packaged in Guix also contain translations.  We do not host a translation platform for them.  If you want to translate a package provided by Guix, you should contact their developers or find the information on their website.  As an example, you can find the homepage of the @code{hello} package by typing @command{guix show hello}.  On the ``homepage'' line, you will see @url{https://www.gnu.org/software/hello/} as the homepage."
msgstr "Alguns dos softwares empacotados no Guix também contêm traduções. Não hospedamos uma plataforma de tradução para eles. Se você quiser traduzir um pacote fornecido pelo Guix, entre em contato com os desenvolvedores ou encontre as informações no site deles. Como exemplo, você pode encontrar a homepage do pacote @code{hello} digitando @command{guix show hello}. Na linha \"homepage'', você verá @url{https://www.gnu.org/software/hello/} como a homepage."

#. type: Plain text
#: guix-git/doc/contributing.texi:3500
msgid "Many GNU and non-GNU packages can be translated on the @uref{https://translationproject.org,Translation Project}.  Some projects with multiple components have their own platform.  For instance, GNOME has its own platform, @uref{https://l10n.gnome.org/,Damned Lies}."
msgstr "Muitos pacotes GNU e não-GNU podem ser traduzidos no @uref{https://translationproject.org,Translation Project}. Alguns projetos com múltiplos componentes têm sua própria plataforma. Por exemplo, o GNOME tem sua própria plataforma, @uref{https://l10n.gnome.org/,Damned Lies}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3502
msgid "Guix has five components hosted on Weblate."
msgstr "O Guix tem cinco componentes hospedados no Weblate."

#. type: item
#: guix-git/doc/contributing.texi:3504
#, no-wrap
msgid "@code{guix} contains all the strings from the Guix software (the"
msgstr "@code{guix} contém todas as strings do software Guix (o"

#. type: itemize
#: guix-git/doc/contributing.texi:3506
msgid "guided system installer, the package manager, etc), excluding packages."
msgstr "instalador de sistema guiado, gerenciador de pacotes, etc.), excluindo pacotes."

#. type: item
#: guix-git/doc/contributing.texi:3506
#, no-wrap
msgid "@code{packages} contains the synopsis (single-sentence description"
msgstr "@code{packages} contém a sinopse (descrição de uma única frase"

#. type: itemize
#: guix-git/doc/contributing.texi:3508
msgid "of a package) and description (longer description) of packages in Guix."
msgstr "de um pacote) e descrição (descrição mais longa) de pacotes no Guix."

#. type: item
#: guix-git/doc/contributing.texi:3508
#, no-wrap
msgid "@code{website} contains the official Guix website, except for"
msgstr "@code{website} contém o site oficial do Guix, exceto para"

#. type: itemize
#: guix-git/doc/contributing.texi:3510
msgid "blog posts and multimedia content."
msgstr "postagens de blog e conteúdo multimídia."

#. type: item
#: guix-git/doc/contributing.texi:3510
#, no-wrap
msgid "@code{documentation-manual} corresponds to this manual."
msgstr "@code{documentation-manual} corresponde a este manual."

#. type: item
#: guix-git/doc/contributing.texi:3511
#, no-wrap
msgid "@code{documentation-cookbook} is the component for the cookbook."
msgstr "@code{documentation-cookbook} é o componente do livro de receitas."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3514
#, fuzzy, no-wrap
#| msgid "generations"
msgid "General Directions"
msgstr "gerações"

#. type: Plain text
#: guix-git/doc/contributing.texi:3522
msgid "Once you get an account, you should be able to select a component from @uref{https://translate.codeberg.org/projects/guix/,the guix project}, and select a language.  If your language does not appear in the list, go to the bottom and click on the ``Start new translation'' button.  Select the language you want to translate to from the list, to start your new translation."
msgstr "Depois de obter uma conta, você deve conseguir selecionar um componente do @uref{https://translate.codeberg.org/projects/guix/, o projeto guix} e selecionar um idioma. Se seu idioma não aparecer na lista, vá até o final e clique no botão \"niciar nova tradução''. Selecione o idioma para o qual deseja traduzir na lista para iniciar sua nova tradução."

#. type: Plain text
#: guix-git/doc/contributing.texi:3527
msgid "Like lots of other free software packages, Guix uses @uref{https://www.gnu.org/software/gettext,GNU Gettext} for its translations, with which translatable strings are extracted from the source code to so-called PO files."
msgstr "Como muitos outros pacotes de software livre, o Guix usa @uref{https://www.gnu.org/software/gettext,GNU Gettext} para suas traduções, com as quais sequências traduzíveis são extraídas do código-fonte para os chamados arquivos PO."

#. type: Plain text
#: guix-git/doc/contributing.texi:3538
msgid "Even though PO files are text files, changes should not be made with a text editor but with PO editing software.  Weblate integrates PO editing functionality.  Alternatively, translators can use any of various free-software tools for filling in translations, of which @uref{https://poedit.net/,Poedit} is one example, and (after logging in)  @uref{https://docs.weblate.org/en/latest/user/files.html,upload} the changed file.  There is also a special @uref{https://www.emacswiki.org/emacs/PoMode,PO editing mode} for users of GNU Emacs.  Over time translators find out what software they are happy with and what features they need."
msgstr "Embora os arquivos PO sejam arquivos de texto, as alterações não devem ser feitas com um editor de texto, mas com um software de edição PO. O Weblate integra a funcionalidade de edição PO. Como alternativa, os tradutores podem usar qualquer uma das várias ferramentas de software livre para preencher traduções, das quais @uref{https://poedit.net/,Poedit} é um exemplo, e (após efetuar login) @uref{https://docs.weblate.org/en/latest/user/files.html,upload} o arquivo alterado. Há também um @uref{https://www.emacswiki.org/emacs/PoMode,modo de edição PO} especial para usuários do GNU Emacs. Com o tempo, os tradutores descobrem com qual software estão satisfeitos e quais recursos precisam."

#. type: Plain text
#: guix-git/doc/contributing.texi:3543
msgid "On Weblate, you will find various links to the editor, that will show various subsets (or all) of the strings.  Have a look around and at the @uref{https://docs.weblate.org/en/latest/,documentation} to familiarize yourself with the platform."
msgstr "No Weblate, você encontrará vários links para o editor, que mostrarão vários subconjuntos (ou todos) das strings. Dê uma olhada ao redor e na @uref{https://docs.weblate.org/en/latest/,documentation} para se familiarizar com a plataforma."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3544
#, no-wrap
msgid "Translation Components"
msgstr "Componentes de tradução"

#. type: Plain text
#: guix-git/doc/contributing.texi:3549
msgid "In this section, we provide more detailed guidance on the translation process, as well as details on what you should or should not do.  When in doubt, please contact us, we will be happy to help!"
msgstr "Nesta seção, fornecemos orientações mais detalhadas sobre o processo de tradução, bem como detalhes sobre o que você deve ou não fazer. Em caso de dúvida, entre em contato conosco, ficaremos felizes em ajudar!"

#. type: table
#: guix-git/doc/contributing.texi:3556
msgid "Guix is written in the Guile programming language, and some strings contain special formatting that is interpreted by Guile.  These special formatting should be highlighted by Weblate.  They start with @code{~} followed by one or more characters."
msgstr "Guix é escrito na linguagem de programação Guile, e algumas strings contêm formatação especial que é interpretada pelo Guile. Essas formatações especiais devem ser destacadas pelo Weblate. Elas começam com @code{~} seguido por um ou mais caracteres."

#. type: table
#: guix-git/doc/contributing.texi:3565
msgid "When printing the string, Guile replaces the special formatting symbols with actual values.  For instance, the string @samp{ambiguous package specification `~a'} would be substituted to contain said package specification instead of @code{~a}.  To properly translate this string, you must keep the formatting code in your translation, although you can place it where it makes sense in your language.  For instance, the French translation says @samp{spécification du paquet « ~a » ambiguë} because the adjective needs to be placed in the end of the sentence."
msgstr "Ao imprimir a string, Guile substitui os símbolos especiais de formatação por valores reais. Por exemplo, a string @samp{ambiguous package specification `~a'} seria substituída para conter a dita especificação de pacote em vez de @code{~a}. Para traduzir corretamente essa string, você deve manter o código de formatação em sua tradução, embora você possa colocá-lo onde fizer sentido em seu idioma. Por exemplo, a tradução francesa diz @samp{spécification du paquet « ~a » ambiguë} porque o adjetivo precisa ser colocado no final da frase."

#. type: table
#: guix-git/doc/contributing.texi:3569
msgid "If there are multiple formatting symbols, make sure to respect the order.  Guile does not know in which order you intended the string to be read, so it will substitute the symbols in the same order as the English sentence."
msgstr "Se houver vários símbolos de formatação, certifique-se de respeitar a ordem. O Guile não sabe em qual ordem você pretendia que a string fosse lida, então ele substituirá os símbolos na mesma ordem da frase em inglês."

#. type: table
#: guix-git/doc/contributing.texi:3577
msgid "As an example, you cannot translate @samp{package '~a' has been superseded by '~a'} by @samp{'~a' supersedes package '~a'}, because the meaning would be reversed.  If @var{foo} is superseded by @var{bar}, the translation would read @samp{'foo' supersedes package 'bar'}.  To work around this problem, it is possible to use more advanced formatting to select a given piece of data, instead of following the default English order.  @xref{Formatted Output,,, guile, GNU Guile Reference Manual}, for more information on formatting in Guile."
msgstr "Por exemplo, você não pode traduzir @samp{package '~a' has been superseded by '~a'} como @samp{'~a' supersedes package '~a'}, porque o significado seria invertido. Se @var{foo} for substituído por @var{bar}, a tradução seria @samp{'foo' supersedes package 'bar'}. Para contornar esse problema, é possível usar uma formatação mais avançada para selecionar um dado pedaço de dados, em vez de seguir a ordem padrão em inglês. @xref{Formatted Output,,, guile, GNU Guile Reference Manual}, para mais informações sobre formatação no Guile."

#. #-#-#-#-#  contributing.pot (guix manual checkout)  #-#-#-#-#
#. type: item
#. #-#-#-#-#  guix.pot (guix manual checkout)  #-#-#-#-#
#. type: code{#1}
#: guix-git/doc/contributing.texi:3578 guix-git/doc/guix.texi:3044
#: guix-git/doc/guix.texi:35152
#, no-wrap
msgid "packages"
msgstr "pacotes"

#. type: table
#: guix-git/doc/contributing.texi:3583
msgid "Package descriptions occasionally contain Texinfo markup (@pxref{Synopses and Descriptions}).  Texinfo markup looks like @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}}, etc.  When translating, please leave markup as is."
msgstr "As descrições de pacotes ocasionalmente contêm marcação Texinfo (@pxref{Synopses and Descriptions}). A marcação Texinfo se parece com @samp{@@code@{rm -rf@}}, @samp{@@emph@{important@}}, etc. Ao traduzir, deixe a marcação como está."

#. type: table
#: guix-git/doc/contributing.texi:3592
msgid "The characters after ``@@'' form the name of the markup, and the text between ``@{'' and ``@}'' is its content.  In general, you should not translate the content of markup like @code{@@code}, as it contains literal code that do not change with language.  You can translate the content of formatting markup such as @code{@@emph}, @code{@@i}, @code{@@itemize}, @code{@@item}.  However, do not translate the name of the markup, or it will not be recognized.  Do not translate the word after @code{@@end}, it is the name of the markup that is closed at this position (e.g.@: @code{@@itemize ... @@end itemize})."
msgstr "Os caracteres após ``@@'' formam o nome da marcação, e o texto entre ``@{'' e ``@}'' é seu conteúdo. Em geral, você não deve traduzir o conteúdo de uma marcação como @code{@@code}, pois ela contém código literal que não muda com o idioma. Você pode traduzir o conteúdo de uma marcação de formatação como @code{@@emph}, @code{@@i}, @code{@@itemize}, @code{@@item}. No entanto, não traduza o nome da marcação, ou ela não será reconhecida. Não traduza a palavra após @code{@@end}, é o nome da marcação que é fechado nesta posição (por exemplo, @code{@@itemize ... @@end itemize})."

#. type: item
#: guix-git/doc/contributing.texi:3593
#, no-wrap
msgid "documentation-manual and documentation-cookbook"
msgstr "documentation-manual e documentation-cookbook"

#. type: table
#: guix-git/doc/contributing.texi:3597
msgid "The first step to ensure a successful translation of the manual is to find and translate the following strings @emph{first}:"
msgstr "O primeiro passo para garantir uma tradução bem-sucedida do manual é encontrar e traduzir as seguintes strings @emph{primeiro}:"

#. type: item
#: guix-git/doc/contributing.texi:3599
#, no-wrap
msgid "@code{version.texi}: Translate this string as @code{version-xx.texi},"
msgstr "@code{version.texi}: Traduza esta string como @code{version-xx.texi},"

#. type: itemize
#: guix-git/doc/contributing.texi:3602
msgid "where @code{xx} is your language code (the one shown in the URL on weblate)."
msgstr "onde @code{xx} é o código do seu idioma (aquele mostrado na URL no weblate)."

#. type: item
#: guix-git/doc/contributing.texi:3602
#, no-wrap
msgid "@code{contributing.texi}: Translate this string as"
msgstr "@code{contributing.texi}: Traduzir esta string como"

#. type: itemize
#: guix-git/doc/contributing.texi:3604
msgid "@code{contributing.xx.texi}, where @code{xx} is the same language code."
msgstr "@code{contributing.xx.texi}, onde @code{xx} é o mesmo código de idioma."

#. type: item
#: guix-git/doc/contributing.texi:3604
#, no-wrap
msgid "@code{Top}: Do not translate this string, it is important for Texinfo."
msgstr "@code{Top}: Não traduza esta string, ela é importante para o Texinfo."

#. type: itemize
#: guix-git/doc/contributing.texi:3607
msgid "If you translate it, the document will be empty (missing a Top node).  Please look for it, and register @code{Top} as its translation."
msgstr "Se você traduzi-lo, o documento estará vazio (faltando um nó Top). Por favor, procure por ele e registre @code{Top} como sua tradução."

#. type: table
#: guix-git/doc/contributing.texi:3612
msgid "Translating these strings first ensure we can include your translation in the guix repository without breaking the make process or the @command{guix pull} machinery."
msgstr "Traduzir essas strings primeiro garante que podemos incluir sua tradução no repositório guix sem interromper o processo de criação ou a máquina @command{guix pull}."

#. type: table
#: guix-git/doc/contributing.texi:3619
msgid "The manual and the cookbook both use Texinfo.  As for @code{packages}, please keep Texinfo markup as is.  There are more possible markup types in the manual than in the package descriptions.  In general, do not translate the content of @code{@@code}, @code{@@file}, @code{@@var}, @code{@@value}, etc.  You should translate the content of formatting markup such as @code{@@emph}, @code{@@i}, etc."
msgstr "O manual e o livro de receitas usam Texinfo. Quanto a @code{packages}, mantenha a marcação Texinfo como está. Há mais tipos de marcação possíveis no manual do que nas descrições de pacotes. Em geral, não traduza o conteúdo de @code{@@code}, @code{@@file}, @code{@@var}, @code{@@value}, etc. Você deve traduzir o conteúdo da marcação de formatação, como @code{@@emph}, @code{@@i}, etc."

#. type: table
#: guix-git/doc/contributing.texi:3627
msgid "The manual contains sections that can be referred to by name by @code{@@ref}, @code{@@xref} and @code{@@pxref}.  We have a mechanism in place so you do not have to translate their content.  If you keep the English title, we will automatically replace it with your translation of that title.  This ensures that Texinfo will always be able to find the node. If you decide to change the translation of the title, the references will automatically be updated and you will not have to update them all yourself."
msgstr "O manual contém seções que podem ser referenciadas pelo nome por @code{@@ref}, @code{@@xref} e @code{@@pxref}. Temos um mecanismo em vigor para que você não tenha que traduzir o conteúdo delas. Se você mantiver o título em inglês, nós o substituiremos automaticamente pela sua tradução desse título. Isso garante que o Texinfo sempre será capaz de encontrar o nó. Se você decidir alterar a tradução do título, as referências serão atualizadas automaticamente e você não terá que atualizá-las todas sozinho."

#. type: table
#: guix-git/doc/contributing.texi:3637
msgid "When translating references from the cookbook to the manual, you need to replace the name of the manual and the name of the section.  For instance, to translate @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, you would replace @code{Defining Packages} with the title of that section in the translated manual @emph{only} if that title is translated.  If the title is not translated in your language yet, do not translate it here, or the link will be broken.  Replace @code{guix} with @code{guix.xx} where @code{xx} is your language code.  @code{GNU Guix Reference Manual} is the text of the link.  You can translate it however you wish."
msgstr "Ao traduzir referências do livro de receitas para o manual, você precisa substituir o nome do manual e o nome da seção. Por exemplo, para traduzir @code{@@pxref@{Defining Packages,,, guix, GNU Guix Reference Manual@}}, você substituiria @code{Defining Packages} pelo título daquela seção no manual traduzido @emph{somente} se aquele título estiver traduzido. Se o título ainda não estiver traduzido para o seu idioma, não o traduza aqui, ou o link será quebrado. Substitua @code{guix} por @code{guix.xx} onde @code{xx} é o código do seu idioma. @code{GNU Guix Reference Manual} é o texto do link. Você pode traduzi-lo como quiser."

#. type: item
#: guix-git/doc/contributing.texi:3638
#, no-wrap
msgid "website"
msgstr "website"

#. type: table
#: guix-git/doc/contributing.texi:3645
msgid "The website pages are written using SXML, an s-expression version of HTML, the basic language of the web.  We have a process to extract translatable strings from the source, and replace complex s-expressions with a more familiar XML markup, where each markup is numbered.  Translators can arbitrarily change the ordering, as in the following example."
msgstr "As páginas do site são escritas usando SXML, uma versão s-expression do HTML, a linguagem básica da web. Temos um processo para extrair strings traduzíveis da fonte e substituir s-expressions complexas por uma marcação XML mais familiar, onde cada marcação é numerada. Os tradutores podem alterar arbitrariamente a ordem, como no exemplo a seguir."

#. type: example
#: guix-git/doc/contributing.texi:3652
#, no-wrap
msgid ""
"#. TRANSLATORS: Defining Packages is a section name\n"
"#. in the English (en) manual.\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"Pakete werden als reine <2>Guile</2>-Module <1>definiert<1.1>de</1.1><1.2>Pakete-definieren.html</1.2></1>.\"\n"
msgstr ""
"#. TRANSLATORS: Defining Packages is a section name\n"
"#. in the English (en) manual.\n"
"#: apps/base/templates/about.scm:64\n"
"msgid \"Packages are <1>defined<1.1>en</1.1><1.2>Defining-Packages.html</1.2></1> as native <2>Guile</2> modules.\"\n"
"msgstr \"Pakete werden als reine <2>Guile</2>-Module <1>definiert<1.1>de</1.1><1.2>Pakete-definieren.html</1.2></1>.\"\n"

#. type: table
#: guix-git/doc/contributing.texi:3655
msgid "Note that you need to include the same markups.  You cannot skip any."
msgstr "Note que você precisa incluir as mesmas marcações. Você não pode pular nenhuma."

#. type: Plain text
#: guix-git/doc/contributing.texi:3663
msgid "In case you make a mistake, the component might fail to build properly with your language, or even make guix pull fail.  To prevent that, we have a process in place to check the content of the files before pushing to our repository.  We will not be able to update the translation for your language in Guix, so we will notify you (through weblate and/or by email) so you get a chance to fix the issue."
msgstr "Caso você cometa um erro, o componente pode falhar ao construir corretamente com seu idioma, ou até mesmo fazer o guix pull falhar. Para evitar isso, temos um processo em vigor para verificar o conteúdo dos arquivos antes de enviar para nosso repositório. Não poderemos atualizar a tradução para seu idioma no Guix, então iremos notificá-lo (por meio do weblate e/ou por e-mail) para que você tenha a chance de corrigir o problema."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3664
#, no-wrap
msgid "Outside of Weblate"
msgstr "Fora do Weblate"

#. type: Plain text
#: guix-git/doc/contributing.texi:3667
msgid "Currently, some parts of Guix cannot be translated on Weblate, help wanted!"
msgstr "Atualmente, algumas partes do Guix não podem ser traduzidas no Weblate. Precisamos de ajuda!"

#. type: item
#: guix-git/doc/contributing.texi:3669
#, no-wrap
msgid "@command{guix pull} news can be translated in @file{news.scm}, but is not"
msgstr "@command{guix pull} news pode ser traduzido em @file{news.scm}, mas não é"

#. type: itemize
#: guix-git/doc/contributing.texi:3675
msgid "available from Weblate.  If you want to provide a translation, you can prepare a patch as described above, or simply send us your translation with the name of the news entry you translated and your language. @xref{Writing Channel News}, for more information about channel news."
msgstr "disponível no Weblate. Se você quiser fornecer uma tradução, pode preparar um patch conforme descrito acima, ou simplesmente nos enviar sua tradução com o nome da entrada de notícias que você traduziu e seu idioma. @xref{Writing Channel News}, para mais informações sobre notícias do canal."

#. type: item
#: guix-git/doc/contributing.texi:3675
#, no-wrap
msgid "Guix blog posts cannot currently be translated."
msgstr "As postagens do blog Guix não podem ser traduzidas no momento."

#. type: item
#: guix-git/doc/contributing.texi:3676
#, no-wrap
msgid "The installer script (for foreign distributions) is entirely in English."
msgstr "O script do instalador (para distribuições estrangeiras) é inteiramente em inglês."

#. type: item
#: guix-git/doc/contributing.texi:3677
#, no-wrap
msgid "Some of the libraries Guix uses cannot be translated or are translated"
msgstr "Algumas das bibliotecas que o Guix usa não podem ser traduzidas ou são traduzidas"

#. type: itemize
#: guix-git/doc/contributing.texi:3679
msgid "outside of the Guix project.  Guile itself is not internationalized."
msgstr "fora do projeto Guix. O Guile em si não é internacionalizado."

#. type: item
#: guix-git/doc/contributing.texi:3679
#, no-wrap
msgid "Other manuals linked from this manual or the cookbook might not be"
msgstr "Outros manuais vinculados a este manual ou ao livro de receitas podem não estar disponíveis"

#. type: itemize
#: guix-git/doc/contributing.texi:3681
msgid "translated."
msgstr "traduzido."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3683
#, no-wrap
msgid "Conditions for Inclusion"
msgstr "Condições de inclusão"

#. type: Plain text
#: guix-git/doc/contributing.texi:3690
msgid "There are no conditions for adding new translations of the @code{guix} and @code{guix-packages} components, other than they need at least one translated string.  New languages will be added to Guix as soon as possible.  The files may be removed if they fall out of sync and have no more translated strings."
msgstr "Não há condições para adicionar novas traduções dos componentes @code{guix} e @code{guix-packages}, além de que eles precisam de pelo menos uma string traduzida. Novos idiomas serão adicionados ao Guix o mais rápido possível. Os arquivos podem ser removidos se ficarem fora de sincronia e não tiverem mais strings traduzidas."

#. type: Plain text
#: guix-git/doc/contributing.texi:3696
msgid "Given that the web site is dedicated to new users, we want its translation to be as complete as possible before we include it in the language menu.  For a new language to be included, it needs to reach at least 80% completion.  When a language is included, it may be removed in the future if it stays out of sync and falls below 60% completion."
msgstr "Dado que o site é dedicado a novos usuários, queremos que sua tradução esteja o mais completa possível antes de incluí-la no menu de idiomas. Para que um novo idioma seja incluído, ele precisa atingir pelo menos 80% de conclusão. Quando um idioma é incluído, ele pode ser removido no futuro se ficar fora de sincronia e ficar abaixo de 60% de conclusão."

#. type: Plain text
#: guix-git/doc/contributing.texi:3704
msgid "The manual and cookbook are automatically added in the default compilation target.  Every time we synchronize translations, developers need to recompile all the translated manuals and cookbooks.  This is useless for what is essentially the English manual or cookbook.  Therefore, we will only include a new language when it reaches 10% completion in the component.  When a language is included, it may be removed in the future if it stays out of sync and falls below 5% completion."
msgstr "O manual e o livro de receitas são adicionados automaticamente no destino de compilação padrão. Toda vez que sincronizamos traduções, os desenvolvedores precisam recompilar todos os manuais e livros de receitas traduzidos. Isso é inútil para o que é essencialmente o manual ou livro de receitas em inglês. Portanto, só incluiremos um novo idioma quando ele atingir 10% de conclusão no componente. Quando um idioma é incluído, ele pode ser removido no futuro se ficar fora de sincronia e cair abaixo de 5% de conclusão."

#. type: subsubheading
#: guix-git/doc/contributing.texi:3705
#, no-wrap
msgid "Translation Infrastructure"
msgstr "Infraestrutura de tradução"

#. type: Plain text
#: guix-git/doc/contributing.texi:3716
msgid "Weblate is backed by a git repository from which it discovers new strings to translate and pushes new and updated translations.  Normally, it would be enough to give it commit access to our repositories.  However, we decided to use a separate repository for two reasons.  First, we would have to give Weblate commit access and authorize its signing key, but we do not trust it in the same way we trust guix developers, especially since we do not manage the instance ourselves.  Second, if translators mess something up, it can break the generation of the website and/or guix pull for all our users, independently of their language."
msgstr "O Weblate é apoiado por um repositório git do qual ele descobre novas strings para traduzir e envia traduções novas e atualizadas. Normalmente, seria suficiente dar a ele acesso de commit para nossos repositórios. No entanto, decidimos usar um repositório separado por dois motivos. Primeiro, teríamos que dar ao Weblate acesso de commit e autorizar sua chave de assinatura, mas não confiamos nele da mesma forma que confiamos nos desenvolvedores do guix, especialmente porque não gerenciamos a instância nós mesmos. Segundo, se os tradutores bagunçarem alguma coisa, isso pode quebrar a geração do site e/ou o guix pull para todos os nossos usuários, independentemente do idioma deles."

#. type: Plain text
#: guix-git/doc/contributing.texi:3720
msgid "For these reasons, we use a dedicated repository to host translations, and we synchronize it with our guix and artworks repositories after checking no issue was introduced in the translation."
msgstr "Por esses motivos, usamos um repositório dedicado para hospedar as traduções e o sincronizamos com nossos repositórios guix e artworks após verificar se nenhum problema foi introduzido na tradução."

#. type: Plain text
#: guix-git/doc/contributing.texi:3726
msgid "Developers can download the latest PO files from weblate in the Guix repository by running the @command{make download-po} command.  It will automatically download the latest files from weblate, reformat them to a canonical form, and check they do not contain issues.  The manual needs to be built again to check for additional issues that might crash Texinfo."
msgstr "Os desenvolvedores podem baixar os arquivos PO mais recentes do weblate no repositório Guix executando o comando @command{make download-po}. Ele baixará automaticamente os arquivos mais recentes do weblate, os reformatará para um formato canônico e verificará se eles não contêm problemas. O manual precisa ser construído novamente para verificar se há problemas adicionais que podem travar o Texinfo."

#. type: Plain text
#: guix-git/doc/contributing.texi:3730
msgid "Before pushing new translation files, developers should add them to the make machinery so the translations are actually available.  The process differs for the various components."
msgstr "Antes de enviar novos arquivos de tradução, os desenvolvedores devem adicioná-los à maquinaria de make para que as traduções estejam realmente disponíveis. O processo difere para os vários componentes."

#. type: item
#: guix-git/doc/contributing.texi:3732
#, no-wrap
msgid "New po files for the @code{guix} and @code{packages} components must"
msgstr "Novos arquivos po para os componentes @code{guix} e @code{packages} devem"

#. type: itemize
#: guix-git/doc/contributing.texi:3735
msgid "be registered by adding the new language to @file{po/guix/LINGUAS} or @file{po/packages/LINGUAS}."
msgstr "ser registrado adicionando o novo idioma em @file{po/guix/LINGUAS} ou @file{po/packages/LINGUAS}."

#. type: item
#: guix-git/doc/contributing.texi:3735
#, no-wrap
msgid "New po files for the @code{documentation-manual} component must be"
msgstr "Novos arquivos po para o componente @code{documentation-manual} devem ser"

#. type: itemize
#: guix-git/doc/contributing.texi:3741
msgid "registered by adding the file name to @code{DOC_PO_FILES} in @file{po/doc/local.mk}, the generated @file{%D%/guix.xx.texi} manual to @code{info_TEXINFOS} in @file{doc/local.mk} and the generated @file{%D%/guix.xx.texi} and @file{%D%/contributing.xx.texi} to @code{TRANSLATED_INFO} also in @file{doc/local.mk}."
msgstr "registrado adicionando o nome do arquivo em @code{DOC_PO_FILES} em @file{po/doc/local.mk}, o manual gerado em @file{%D%/guix.xx.texi} em @code{info_TEXINFOS} em @file{doc/local.mk} e o gerado em @file{%D%/guix.xx.texi} e @file{%D%/contributing.xx.texi} em @code{TRANSLATED_INFO} também em @file{doc/local.mk}."

#. type: item
#: guix-git/doc/contributing.texi:3741
#, no-wrap
msgid "New po files for the @code{documentation-cookbook} component must be"
msgstr "Novos arquivos po para o componente @code{documentation-cookbook} devem ser"

#. type: itemize
#: guix-git/doc/contributing.texi:3747
msgid "registered by adding the file name to @code{DOC_COOKBOOK_PO_FILES} in @file{po/doc/local.mk}, the generated @file{%D%/guix-cookbook.xx.texi} manual to @code{info_TEXINFOS} in @file{doc/local.mk} and the generated @file{%D%/guix-cookbook.xx.texi} to @code{TRANSLATED_INFO} also in @file{doc/local.mk}."
msgstr "registrado adicionando o nome do arquivo em @code{DOC_COOKBOOK_PO_FILES} em @file{po/doc/local.mk}, o manual gerado em @file{%D%/guix-cookbook.xx.texi} em @code{info_TEXINFOS} em @file{doc/local.mk} e o gerado em @file{%D%/guix-cookbook.xx.texi} em @code{TRANSLATED_INFO} também em @file{doc/local.mk}."

#. type: item
#: guix-git/doc/contributing.texi:3747
#, no-wrap
msgid "New po files for the @code{website} component must be added to the"
msgstr "Novos arquivos po para o componente @code{website} devem ser adicionados ao"

#. type: itemize
#: guix-git/doc/contributing.texi:3752
msgid "@code{guix-artwork} repository, in @file{website/po/}.  @file{website/po/LINGUAS} and @file{website/po/ietf-tags.scm} must be updated accordingly (see @file{website/i18n-howto.txt} for more information on the process)."
msgstr "Repositório @code{guix-artwork}, em @file{website/po/}. @file{website/po/LINGUAS} e @file{website/po/ietf-tags.scm} devem ser atualizados adequadamente (veja @file{website/i18n-howto.txt} para mais informações sobre o processo)."

#. type: cindex
#: guix-git/doc/contributing.texi:3755
#, fuzzy, no-wrap
#| msgid "Translation Infrastructure"
msgid "infrastructure"
msgstr "Infraestrutura de tradução"

#. type: Plain text
#: guix-git/doc/contributing.texi:3762
msgid "Since its inception, the Guix project has always valued its autonomy, and that reflects in its infrastructure: our servers run Guix System and exclusively free software, and are administered by volunteers."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3766
msgid "Of course this comes at a cost and this is why we need contributions.  Our hope is to make infrastructure-related activity more legible so that maybe you can picture yourself helping in one of these areas."
msgstr ""

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3777
#: guix-git/doc/contributing.texi:3778
#, fuzzy, no-wrap
#| msgid "Coding Style"
msgid "Coding"
msgstr "Estilo de código"

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3816
#: guix-git/doc/contributing.texi:3817
#, no-wrap
msgid "System Administration"
msgstr "Administração do sistema"

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3869
#: guix-git/doc/contributing.texi:3870
#, fuzzy, no-wrap
#| msgid "System administration"
msgid "Day-to-Day System Administration"
msgstr "Administração do Sistema"

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3889
#: guix-git/doc/contributing.texi:3890
#, no-wrap
msgid "On-Site Intervention"
msgstr ""

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3904
#: guix-git/doc/contributing.texi:3905
#, fuzzy, no-wrap
#| msgid "Porting"
msgid "Hosting"
msgstr "Portando"

#. type: subsection
#: guix-git/doc/contributing.texi:3775 guix-git/doc/contributing.texi:3928
#: guix-git/doc/contributing.texi:3929
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "Administrative Tasks"
msgstr "interfaces de usuário"

#. type: Plain text
#: guix-git/doc/contributing.texi:3782
msgid "The project runs many Guix-specific services; this is all lovely Scheme code but it tends to receive less attention than Guix itself:"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3786
msgid "@url{https://git.cbaines.net/guix/bffe, Build Farm Front End}"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3788
#, fuzzy
#| msgid "@url{https://bugs.gnu.org/guix} lists bug reports;"
msgid "@url{https://codeberg.org/guix/cuirass/, Cuirass}"
msgstr "@url{https://bugs.gnu.org/guix} lista relatórios de bugs;"

#. type: itemize
#: guix-git/doc/contributing.texi:3791
msgid "@url{https://codeberg.org/guix/maintenance/src/branch/master/hydra/goggles.scm, Goggles} (IRC logger)"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3793
msgid "@url{https://codeberg.org/guix/build-coordinator, Guix Build Coordinator}"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3795
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/data-service, Guix Data Service}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3798
msgid "@url{https://codeberg.org/luis-felipe/guix-packages-website, Guix Packages Website}"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3800
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/mumi, mumi}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3802
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/nar-herder, Nar Herder}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: itemize
#: guix-git/doc/contributing.texi:3804
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/qa-frontpage, QA Frontpage}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3809
msgid "There is no time constraint on this coding activity: any improvement is welcome, whenever it comes.  Most of these code bases are relatively small, which should make it easier to get started."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3811
msgid "Prerequisites: Familiarity with Guile, HTTP, and databases."
msgstr "Pré-requisitos: familiaridade com o Guile, HTTP, e banco de dados."

#. type: Plain text
#: guix-git/doc/contributing.texi:3815
msgid "If you wish to get started, check out the README of the project of your choice and get in touch with guix-devel and the primary developer(s) of the tool as per @code{git shortlog -s | sort -k1 -n}."
msgstr "Se você deseja iniciar, dê uma olhada no README do projeto de sua escolha e entre em contato com o guix-devel e os desenvolvedores principais da ferramenta conforme @code{git shortlog -s | sort -k1 -n}."

#. type: Plain text
#: guix-git/doc/contributing.texi:3820
msgid "Guix System configuration for all our systems is held in this repository:"
msgstr "A configuração do Sistema Guix para todos os nossos sistemas é mantida neste repositório:"

#. type: Plain text
#: guix-git/doc/contributing.texi:3822
#, fuzzy
#| msgid "git clone https://git.savannah.gnu.org/git/guix.git\n"
msgid "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/hydra/}"
msgstr "git clone https://git.savannah.gnu.org/git/guix.git\n"

#. type: Plain text
#: guix-git/doc/contributing.texi:3827
msgid "The two front-ends are @file{berlin.scm} (the machine behind ci.guix.gnu.org)  and @file{bayfront.scm} (the machine behind bordeaux.guix.gnu.org, guix.gnu.org, hpc.guix.info, qa.guix.gnu.org, and more).  Both connect to a number of build machines and helpers."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3831
msgid "Without even having SSH access to the machine, you can help by posting patches to improve the configuration (you can test it with @code{guix system vm}).  Here are ways you can help:"
msgstr "Caso não tenha inclusive acesso SSH à máquina, voucê pode ajudar postando patches para melhorar a configuração (pode testar isso com @code{guix system vm}). Alguns caminhos para você poder ajudar:"

#. type: itemize
#: guix-git/doc/contributing.texi:3836
msgid "Improve infra monitoring: set up a dashboard to monitor all the infrastructure, and an out-of-band channel to communicate about downtime."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3840
msgid "Implement web site redundancy: guix.gnu.org should be backed by several machines on different sites.  Get in touch with us and/or send a patch!"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3844
msgid "Implement substitute redundancy: likewise, bordeaux.guix.gnu.org and ci.guix.gnu.org should be backed by several head nodes."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3849
msgid "Improve backup: there's currently ad-hoc backup of selected pieces over rsync between the two head nodes; we can improve on that, for example with a dedicated backup site and proper testing of recoverability."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3853
msgid "Support mirroring: We'd like to make it easy for others to mirror substitutes from ci.guix and bordeaux.guix, perhaps by offering public rsync access."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3857
msgid "Optimize our web services: Monitor the performance of our services and tweak nginx config or whatever it takes to improve it."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3860
msgid "There is no time constraint on this activity: any improvement is welcome, whenever you can work on it."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3863
msgid "Prerequisite: Familiarity with Guix System administration and ideally with the infrastructure handbook:"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3866 guix-git/doc/contributing.texi:3888
msgid "@url{https://codeberg.org/guix/maintenance.git/src/branch/master/doc/infra-handbook.org, Infra-Handbook}"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3876
msgid "We're also looking for people who'd be willing to have SSH access to some of the infrastructure to help with day-to-day maintenance: restarting a build, restarting the occasional service that has gone wild (that can happen), reconfiguring/upgrading a machine, rebooting, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3881
msgid "This day-to-day activity requires you to be available some of the time (during office hours or not, during the week-end or not), whenever is convenient for you, so you can react to issues reported on IRC, on the mailing list, or elsewhere, and synchronize with other sysadmins."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3885
msgid "Prerequisite: Being a ``known'' member of the community, familiarity with Guix System administration, with some of the services/web sites being run, and with the infrastructure handbook:"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3895
msgid "The first front-end is currently generously hosted by the Max Delbrück Center (MDC), a research institute in Berlin, Germany. Only authorized personnel can physically access it."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3900
msgid "The second one, bordeaux.guix.gnu.org, is hosted in Bordeaux, France, in a professional data center shared with non-profit ISP Aquilenet.  If you live in the region of Bordeaux and would like to help out when we need to go on-site, please make yourself known by emailing @email{guix-sysadmin@@gnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3903
msgid "On-site interventions are rare, but they're usually in response to an emergency."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3909
msgid "We're looking for people who can host machines and help out whenever physical access is needed.  More specifically:"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3914
msgid "We need hosting of ``small'' machines such as single-board computers (AArch64, RISC-V) for use as build machines."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3919
msgid "We need hosting for front-ends and x86_64 build machines in a data center where they can be racked and where, ideally, several local Guix sysadmins can physically access them."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3924
msgid "The machines should be accessible over Wireguard VPN most of the time, so longer power or network interruptions should be the exception."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3927
msgid "Prerequisites: Familiarity with installing and remotely administering Guix System."
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3933
msgid "The infra remains up and running thanks to crucial administrative tasks, which includes:"
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3937
msgid "Selecting and purchasing hardware, for example build machines."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3939
msgid "Renewing domain names."
msgstr ""

#. type: itemize
#: guix-git/doc/contributing.texi:3943
msgid "Securing funding, in particular via the Guix Foundation: @url{https://foundation.guix.info, Guix Foundation}"
msgstr ""

#. type: Plain text
#: guix-git/doc/contributing.texi:3946
msgid "Prerequisites: Familiarity with hardware, and/or DNS registrars, and/or sponsorship, and/or crowdfunding."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:7
msgid "@documentencoding UTF-8"
msgstr ""
"@documentencoding UTF-8\n"
"@documentlanguage pt_BR\n"
"@frenchspacing on"

#. type: title
#: guix-git/doc/guix.texi:7 guix-git/doc/guix.texi:172
#, no-wrap
msgid "GNU Guix Reference Manual"
msgstr "Manual de referência do GNU Guix"

#. type: include
#: guix-git/doc/guix.texi:10
#, no-wrap
msgid "version.texi"
msgstr "version-pt_BR.texi"

#. type: copying
#: guix-git/doc/guix.texi:144
#, fuzzy
#| msgid "Copyright @copyright{} 2012-2024 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Jan Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019, 2020, 2021, 2022, 2023, 2024 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2024 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023, 2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023, 2024 Tomas Volf@* Copyright @copyright{} 2024 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@*"
msgid "Copyright @copyright{} 2012--2025 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2025 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025 Janneke Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024, 2025 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019--2025 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024, 2025 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2025 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023-2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023-2025 Tomas Volf@* Copyright @copyright{} 2024, 2025 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024-2025 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@* Copyright @copyright{} 2024 45mg@* Copyright @copyright{} 2025 Sören Tempel@* Copyright @copyright{} 2025 Rostislav Svoboda@* Copyright @copyright{} 2025 Zacchaeus@* Copyright @copyright{} 2025 Sergio Pastor Pérez@* Copyright @copyright{} 2024 Evgeny Pisemsky@* Copyright @copyright{} 2025 jgart@*"
msgstr "Copyright @copyright{} 2012-2024 Ludovic Courtès@* Copyright @copyright{} 2013, 2014, 2016, 2024 Andreas Enge@* Copyright @copyright{} 2013 Nikita Karetnikov@* Copyright @copyright{} 2014, 2015, 2016 Alex Kost@* Copyright @copyright{} 2015, 2016 Mathieu Lirzin@* Copyright @copyright{} 2014 Pierre-Antoine Rault@* Copyright @copyright{} 2015 Taylan Ulrich Bayırlı/Kammer@* Copyright @copyright{} 2015, 2016, 2017, 2019, 2020, 2021, 2023 Leo Famulari@* Copyright @copyright{} 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Ricardo Wurmus@* Copyright @copyright{} 2016 Ben Woodcroft@* Copyright @copyright{} 2016, 2017, 2018, 2021 Chris Marusich@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Efraim Flashner@* Copyright @copyright{} 2016 John Darrington@* Copyright @copyright{} 2016, 2017 Nikita Gillmann@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Jan Nieuwenhuizen@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Julien Lepiller@* Copyright @copyright{} 2016 Alex ter Weele@* Copyright @copyright{} 2016, 2017, 2018, 2019, 2020, 2021 Christopher Baines@* Copyright @copyright{} 2017, 2018, 2019 Clément Lassieur@* Copyright @copyright{} 2017, 2018, 2020, 2021, 2022 Mathieu Othacehe@* Copyright @copyright{} 2017 Federico Beffa@* Copyright @copyright{} 2017, 2018, 2024 Carlo Zancanaro@* Copyright @copyright{} 2017 Thomas Danckaert@* Copyright @copyright{} 2017 humanitiesNerd@* Copyright @copyright{} 2017, 2021 Christine Lemmer-Webber@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2021, 2022 Marius Bakke@* Copyright @copyright{} 2017, 2019, 2020, 2022 Hartmut Goebel@* Copyright @copyright{} 2017, 2019, 2020, 2021, 2022, 2023, 2024 Maxim Cournoyer@* Copyright @copyright{} 2017–2022 Tobias Geerinckx-Rice@* Copyright @copyright{} 2017 George Clemmer@* Copyright @copyright{} 2017 Andy Wingo@* Copyright @copyright{} 2017, 2018, 2019, 2020, 2023, 2024 Arun Isaac@* Copyright @copyright{} 2017 nee@* Copyright @copyright{} 2018 Rutger Helling@* Copyright @copyright{} 2018, 2021, 2023 Oleg Pykhalov@* Copyright @copyright{} 2018 Mike Gerwitz@* Copyright @copyright{} 2018 Pierre-Antoine Rouby@* Copyright @copyright{} 2018, 2019 Gábor Boskovits@* Copyright @copyright{} 2018, 2019, 2020, 2022, 2023, 2024 Florian Pelz@* Copyright @copyright{} 2018 Laura Lazzati@* Copyright @copyright{} 2018 Alex Vong@* Copyright @copyright{} 2019 Josh Holland@* Copyright @copyright{} 2019, 2020 Diego Nicola Barbato@* Copyright @copyright{} 2019 Ivan Petkov@* Copyright @copyright{} 2019 Jakob L. Kreuze@* Copyright @copyright{} 2019 Kyle Andrews@* Copyright @copyright{} 2019 Alex Griffin@* Copyright @copyright{} 2019, 2020, 2021, 2022 Guillaume Le Vaillant@* Copyright @copyright{} 2020 Liliana Marie Prikler@* Copyright @copyright{} 2019, 2020, 2021, 2022, 2023 Simon Tournier@* Copyright @copyright{} 2020 Wiktor Żelazny@* Copyright @copyright{} 2020 Damien Cassou@* Copyright @copyright{} 2020 Jakub Kądziołka@* Copyright @copyright{} 2020 Jack Hill@* Copyright @copyright{} 2020 Naga Malleswari@* Copyright @copyright{} 2020, 2021 Brice Waegeneire@* Copyright @copyright{} 2020 R Veera Kumar@* Copyright @copyright{} 2020, 2021, 2022 Pierre Langlois@* Copyright @copyright{} 2020 pinoaffe@* Copyright @copyright{} 2020, 2023 André Batista@* Copyright @copyright{} 2020, 2021 Alexandru-Sergiu Marton@* Copyright @copyright{} 2020 raingloom@* Copyright @copyright{} 2020 Daniel Brooks@* Copyright @copyright{} 2020 John Soo@* Copyright @copyright{} 2020 Jonathan Brielmaier@* Copyright @copyright{} 2020 Edgar Vincent@* Copyright @copyright{} 2021, 2022 Maxime Devos@* Copyright @copyright{} 2021 B. Wilson@* Copyright @copyright{} 2021 Xinglu Chen@* Copyright @copyright{} 2021 Raghav Gururajan@* Copyright @copyright{} 2021 Domagoj Stolfa@* Copyright @copyright{} 2021 Hui Lu@* Copyright @copyright{} 2021 pukkamustard@* Copyright @copyright{} 2021 Alice Brenon@* Copyright @copyright{} 2021-2023 Josselin Poiret@* Copyright @copyright{} 2021, 2023 muradm@* Copyright @copyright{} 2021, 2022 Andrew Tropin@* Copyright @copyright{} 2021 Sarah Morgensen@* Copyright @copyright{} 2022 Remco van 't Veer@* Copyright @copyright{} 2022 Aleksandr Vityazev@* Copyright @copyright{} 2022 Philip M@sup{c}Grath@* Copyright @copyright{} 2022 Karl Hallsby@* Copyright @copyright{} 2022 Justin Veilleux@* Copyright @copyright{} 2022 Reily Siegel@* Copyright @copyright{} 2022 Simon Streit@* Copyright @copyright{} 2022 (@* Copyright @copyright{} 2022 John Kehayias@* Copyright @copyright{} 2022⁠–⁠2023 Bruno Victal@* Copyright @copyright{} 2022 Ivan Vilata-i-Balaguer@* Copyright @copyright{} 2023-2024 Giacomo Leidi@* Copyright @copyright{} 2022 Antero Mejr@* Copyright @copyright{} 2023 Karl Hallsby@* Copyright @copyright{} 2023 Nathaniel Nicandro@* Copyright @copyright{} 2023 Tanguy Le Carrour@* Copyright @copyright{} 2023, 2024 Zheng Junjie@* Copyright @copyright{} 2023 Brian Cully@* Copyright @copyright{} 2023 Felix Lechner@* Copyright @copyright{} 2023 Foundation Devices, Inc.@* Copyright @copyright{} 2023 Thomas Ieong@* Copyright @copyright{} 2023 Saku Laesvuori@* Copyright @copyright{} 2023 Graham James Addis@* Copyright @copyright{} 2023, 2024 Tomas Volf@* Copyright @copyright{} 2024 Herman Rimm@* Copyright @copyright{} 2024 Matthew Trzcinski@* Copyright @copyright{} 2024 Richard Sent@* Copyright @copyright{} 2024 Dariqq@* Copyright @copyright{} 2024 Denis 'GNUtoo' Carikli@* Copyright @copyright{} 2024 Fabio Natali@* Copyright @copyright{} 2024 Arnaud Daby-Seesaram@* Copyright @copyright{} 2024 Nigko Yerden@* Copyright @copyright{} 2024 Troy Figiel@* Copyright @copyright{} 2024 Sharlatan Hellseher@*"

#. type: copying
#: guix-git/doc/guix.texi:151
msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr "Permissão concedida para copiar, distribuir e/ou modificar este documento sob os termos da Licença de Documentação Livre GNU, Versão 1.3 ou qualquer versão mais recente publicada pela Free Software Foundation; sem Seções Invariantes, Textos de Capa Frontal, e sem Textos de Contracapa. Uma cópia da licença está incluída na seção intitulada ``GNU Free Documentation License''."

#. type: dircategory
#: guix-git/doc/guix.texi:153
#, no-wrap
msgid "System administration"
msgstr "Administração do Sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Guix: (guix)"
msgstr "Guix.pt_BR: (guix.pt_BR)"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Manage installed software and system configuration."
msgstr "Gerencie softwares instalados e configuração do sistema."

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "guix package: (guix)Invoking guix package"
msgstr "guix package: (guix.pt_BR)Invocando guix package"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Installing, removing, and upgrading packages."
msgstr "Instalando, removendo e atualizando pacotes."

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "guix gc: (guix)Invoking guix gc"
msgstr "guix gc: (guix.pt_BR)Invocando guix gc"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Reclaiming unused disk space."
msgstr "Recuperando espaço em disco não utilizado."

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "guix pull: (guix)Invoking guix pull"
msgstr "guix pull: (guix.pt_BR)Invocando guix pull"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Update the list of available packages."
msgstr "Atualize a lista de pacotes disponíveis."

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "guix system: (guix)Invoking guix system"
msgstr "guix system: (guix.pt_BR)Invocando guix system"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Manage the operating system configuration."
msgstr "Gerencie a configuração do sistema operacional."

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "guix deploy: (guix)Invoking guix deploy"
msgstr "guix deploy: (guix.pt_BR)Invocando guix deploy"

#. type: menuentry
#: guix-git/doc/guix.texi:161
msgid "Manage operating system configurations for remote hosts."
msgstr "Gerenciar configurações do sistema operacional para hosts remotos."

#. type: dircategory
#: guix-git/doc/guix.texi:163
#, no-wrap
msgid "Software development"
msgstr "Desenvolvimento de software"

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "guix shell: (guix)Invoking guix shell"
msgstr "guix shell: (guix.pt_BR)Invocando guix shell"

#. type: menuentry
#: guix-git/doc/guix.texi:169
#, fuzzy
#| msgid "Creating software bundles."
msgid "Creating software environments."
msgstr "Criando pacotes de software."

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "guix environment: (guix)Invoking guix environment"
msgstr "guix environment: (guix.pt_BR)Invocando guix environment"

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "Building development environments with Guix."
msgstr "Compilando ambientes de desenvolvimento com Guix."

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "guix build: (guix)Invoking guix build"
msgstr "guix build: (guix.pt_BR)Invocando guix build"

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "Building packages."
msgstr "Compilando pacotes."

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "guix pack: (guix)Invoking guix pack"
msgstr "guix pack: (guix.pt_BR)Invocando guix pack"

#. type: menuentry
#: guix-git/doc/guix.texi:169
msgid "Creating binary bundles."
msgstr "Criando embalagens de binários."

#. type: subtitle
#: guix-git/doc/guix.texi:173
#, no-wrap
msgid "Using the GNU Guix Functional Package Manager"
msgstr "Usando o Gerenciador de Pacotes Funcional GNU Guix"

#. type: author
#: guix-git/doc/guix.texi:174
#, no-wrap
msgid "The GNU Guix Developers"
msgstr "Desenvolvedores do GNU Guix"

#. type: titlepage
#: guix-git/doc/guix.texi:180
msgid "Edition @value{EDITION} @* @value{UPDATED} @*"
msgstr "Edição @value{EDITION} @* @value{UPDATED} @*"

#. type: node
#: guix-git/doc/guix.texi:187
#, no-wrap
msgid "Top"
msgstr "Top"

#. type: top
#: guix-git/doc/guix.texi:188
#, no-wrap
msgid "GNU Guix"
msgstr "GNU Guix"

#. type: Plain text
#: guix-git/doc/guix.texi:192
msgid "This document describes GNU Guix version @value{VERSION}, a functional package management tool written for the GNU system."
msgstr "Esse documento descreve Guix versão @value{VERSION}, uma ferramenta de gerenciamento de pacotes funcional escrita para o sistema GNU."

#.  You can replace the following paragraph with information on
#. type: Plain text
#: guix-git/doc/guix.texi:205
msgid "This manual is also available in Simplified Chinese (@pxref{Top,,, guix.zh_CN, GNU Guix参考手册}), French (@pxref{Top,,, guix.fr, Manuel de référence de GNU Guix}), German (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), Spanish (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), Italian (@pxref{Top,,, guix.it, Manuale di riferimento di GNU Guix}), Brazilian Portuguese (@pxref{Top,,, guix.pt_BR, Manual de referência do GNU Guix}), and Russian (@pxref{Top,,, guix.ru, Руководство GNU Guix}).  If you would like to translate it in your native language, consider joining @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."
msgstr "Este manual também está disponível em inglês (@pxref{Top,,, guix, GNU Guix Reference Manual}), chinês simplificado (@pxref{Top ,,, guix.zh_CN, GNU Guix参考手册}), francês (@pxref{Top ,,, guix.fr, Manuel de référence de GNU Guix}), alemão (@pxref{Top,,, guix.de, Referenzhandbuch zu GNU Guix}), espanhol (@pxref{Top,,, guix.es, Manual de referencia de GNU Guix}), italiano (@pxref{Top,,, guix.it, Manuale di riferimento di GNU Guix}) e russo (@pxref{Top,,, guix.ru, Руководство GNU Guix}). Se você quiser traduzi-lo para seu idioma nativo, considere participar do @uref{https://translate.codeberg.org/projects/guix/documentation-manual, Weblate} (@pxref{Translating Guix})."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:239
#: guix-git/doc/guix.texi:510 guix-git/doc/guix.texi:511
#, no-wrap
msgid "Introduction"
msgstr "Introdução"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "What is Guix about?"
msgstr "Sobre o que é o Guix?"

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:244
#: guix-git/doc/guix.texi:714 guix-git/doc/guix.texi:715
#, no-wrap
msgid "Installation"
msgstr "Instalação"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Installing Guix."
msgstr "Instalando o Guix."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:258
#: guix-git/doc/guix.texi:2130 guix-git/doc/guix.texi:2131
#, no-wrap
msgid "System Installation"
msgstr "Instalação do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Installing the whole operating system."
msgstr "Instalando todo o sistema operacional."

#. type: section
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:2842
#: guix-git/doc/guix.texi:2843 guix-git/doc/guix.texi:17431
#, no-wrap
msgid "Getting Started"
msgstr "Começando"

#. type: menuentry
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:395
#: guix-git/doc/guix.texi:17428
msgid "Your first steps."
msgstr "Seus primeiros passos."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:275
#: guix-git/doc/guix.texi:3041 guix-git/doc/guix.texi:3042
#, no-wrap
msgid "Package Management"
msgstr "Gerenciamento de pacote"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Package installation, upgrade, etc."
msgstr "Instalação de pacote, atualização, etc."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:299
#: guix-git/doc/guix.texi:5364 guix-git/doc/guix.texi:5365
#, no-wrap
msgid "Channels"
msgstr "Canais"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Customizing the package collection."
msgstr "Personalizando a coleção de pacotes."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:314
#: guix-git/doc/guix.texi:6064 guix-git/doc/guix.texi:6065
#, no-wrap
msgid "Development"
msgstr "Desenvolvimento"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Guix-aided software development."
msgstr "Desenvolvimento de software auxiliado pelo Guix."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:322
#: guix-git/doc/guix.texi:7693 guix-git/doc/guix.texi:7694
#, no-wrap
msgid "Programming Interface"
msgstr "Interface de programação"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Using Guix in Scheme."
msgstr "Usando o Guix no Scheme."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:344
#: guix-git/doc/guix.texi:13139 guix-git/doc/guix.texi:13140
#, no-wrap
msgid "Utilities"
msgstr "Utilitários"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Package management commands."
msgstr "Comandos de gerenciamento de pacote."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:370
#: guix-git/doc/guix.texi:17216 guix-git/doc/guix.texi:17217
#, no-wrap
msgid "Foreign Architectures"
msgstr "Arquiteturas estrangeiras"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Build for foreign architectures."
msgstr "Construir para arquiteturas estrangeiras."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:375
#: guix-git/doc/guix.texi:17383 guix-git/doc/guix.texi:17384
#, no-wrap
msgid "System Configuration"
msgstr "Configuração do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Configuring the operating system."
msgstr "Configurando o sistema operacional."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:449
#: guix-git/doc/guix.texi:48915 guix-git/doc/guix.texi:48916
#, no-wrap
msgid "System Troubleshooting Tips"
msgstr "Dicas para solução de problemas do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "When things don't go as planned."
msgstr "Quando as coisas não saem como planejado."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:453
#: guix-git/doc/guix.texi:49030 guix-git/doc/guix.texi:49031
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "Home Configuration"
msgstr "Configuração do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:229
#, fuzzy
#| msgid "Configuring the boot loader."
msgid "Configuring the home environment."
msgstr "Configurando o \"bootloader\"."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:52697
#: guix-git/doc/guix.texi:52698
#, no-wrap
msgid "Documentation"
msgstr "Documentação"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Browsing software user manuals."
msgstr "Navegando por manuais do usuário do software."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:481
#: guix-git/doc/guix.texi:52763 guix-git/doc/guix.texi:52764
#, no-wrap
msgid "Platforms"
msgstr "Plataformas"

#. type: menuentry
#: guix-git/doc/guix.texi:229
#, fuzzy
#| msgid "Defining new packages."
msgid "Defining platforms."
msgstr "Definindo novos pacotes."

#. type: node
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:52901
#, no-wrap
msgid "System Images"
msgstr "Imagens do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:229
#, fuzzy
#| msgid "Creating software bundles."
msgid "Creating system images."
msgstr "Criando pacotes de software."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:497
#: guix-git/doc/guix.texi:53442 guix-git/doc/guix.texi:53443
#, no-wrap
msgid "Installing Debugging Files"
msgstr "Instalando arquivos de depuração"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Feeding the debugger."
msgstr "Alimentando o depurador."

#. type: node
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:53597
#, no-wrap
msgid "Using TeX and LaTeX"
msgstr "Usando TeX e LaTeX"

#. type: menuentry
#: guix-git/doc/guix.texi:229
#, fuzzy
#| msgid "Testing Guix."
msgid "Typesetting."
msgstr "Testando o Guix."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:53716
#: guix-git/doc/guix.texi:53717
#, no-wrap
msgid "Security Updates"
msgstr "Atualizações de segurança"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Deploying security fixes quickly."
msgstr "Implementando correções de segurança rapidamente."

#. type: chapter
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:502
#: guix-git/doc/guix.texi:53831 guix-git/doc/guix.texi:53832
#, no-wrap
msgid "Bootstrapping"
msgstr "Inicializando"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "GNU/Linux built from scratch."
msgstr "GNU/Linux compilado do zero."

#. type: node
#: guix-git/doc/guix.texi:229 guix-git/doc/guix.texi:54135
#, no-wrap
msgid "Porting"
msgstr "Portando"

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Targeting another platform or kernel."
msgstr "Objetivando outra plataforma ou kernel."

#. type: menuentry
#: guix-git/doc/guix.texi:229
msgid "Your help needed!"
msgstr "Sua ajuda é necessária!"

#. type: chapter
#: guix-git/doc/guix.texi:234 guix-git/doc/guix.texi:54185
#: guix-git/doc/guix.texi:54186
#, no-wrap
msgid "Acknowledgments"
msgstr "Agradecimentos"

#. type: menuentry
#: guix-git/doc/guix.texi:234
msgid "Thanks!"
msgstr "Obrigado!"

#. type: appendix
#: guix-git/doc/guix.texi:234 guix-git/doc/guix.texi:54207
#: guix-git/doc/guix.texi:54208
#, no-wrap
msgid "GNU Free Documentation License"
msgstr "Licença de Documentação Livre GNU"

#. type: menuentry
#: guix-git/doc/guix.texi:234
msgid "The license of this manual."
msgstr "A licença deste manual."

#. type: unnumbered
#: guix-git/doc/guix.texi:234 guix-git/doc/guix.texi:54213
#: guix-git/doc/guix.texi:54214
#, no-wrap
msgid "Concept Index"
msgstr "Índice de conceitos"

#. type: menuentry
#: guix-git/doc/guix.texi:234
msgid "Concepts."
msgstr "Conceitos."

#. type: unnumbered
#: guix-git/doc/guix.texi:234 guix-git/doc/guix.texi:54217
#: guix-git/doc/guix.texi:54218
#, no-wrap
msgid "Programming Index"
msgstr "Índice de programação"

#. type: menuentry
#: guix-git/doc/guix.texi:234
msgid "Data types, functions, and variables."
msgstr "Tipos de dados, funções e variáveis."

#. type: menuentry
#: guix-git/doc/guix.texi:237
msgid "--- The Detailed Node Listing ---"
msgstr "--- A listagem detalhada de nós ---"

#. type: section
#: guix-git/doc/guix.texi:242 guix-git/doc/guix.texi:537
#: guix-git/doc/guix.texi:539 guix-git/doc/guix.texi:540
#, no-wrap
msgid "Managing Software the Guix Way"
msgstr "Gerenciando software do jeito do Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:242 guix-git/doc/guix.texi:537
msgid "What's special."
msgstr "O que há de especial."

#. type: section
#: guix-git/doc/guix.texi:242 guix-git/doc/guix.texi:537
#: guix-git/doc/guix.texi:594 guix-git/doc/guix.texi:595
#, no-wrap
msgid "GNU Distribution"
msgstr "Distribuição GNU"

#. type: menuentry
#: guix-git/doc/guix.texi:242 guix-git/doc/guix.texi:537
msgid "The packages and tools."
msgstr "Os pacotes e as ferramentas."

#. type: section
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
#: guix-git/doc/guix.texi:749 guix-git/doc/guix.texi:750
#, no-wrap
msgid "Binary Installation"
msgstr "Instalação de binários"

#. type: menuentry
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
msgid "Getting Guix running in no time!"
msgstr "Faça o Guix funcionar rapidamente!"

#. type: section
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:252
#: guix-git/doc/guix.texi:747 guix-git/doc/guix.texi:881
#: guix-git/doc/guix.texi:882
#, no-wrap
msgid "Setting Up the Daemon"
msgstr "Configurando o daemon"

#. type: menuentry
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
msgid "Preparing the build daemon's environment."
msgstr "Preparando o ambiente do daemon de compilação."

#. type: node
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
#: guix-git/doc/guix.texi:1533
#, no-wrap
msgid "Invoking guix-daemon"
msgstr "Invocando guix-daemon"

#. type: menuentry
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
msgid "Running the build daemon."
msgstr "Executando o daemon de compilação."

#. type: section
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
#: guix-git/doc/guix.texi:1852 guix-git/doc/guix.texi:1853
#, no-wrap
msgid "Application Setup"
msgstr "Configuração de aplicativo"

#. type: menuentry
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
msgid "Application-specific setup."
msgstr "Configuração específica de aplicativo."

#. type: section
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
#: guix-git/doc/guix.texi:2089 guix-git/doc/guix.texi:2090
#, no-wrap
msgid "Upgrading Guix"
msgstr "Atualizando o Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:250 guix-git/doc/guix.texi:747
msgid "Upgrading Guix and its build daemon."
msgstr "Atualizando o Guix e seu daemon de compilação."

#. type: subsection
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
#: guix-git/doc/guix.texi:924 guix-git/doc/guix.texi:925
#, no-wrap
msgid "Build Environment Setup"
msgstr "Configuração do ambiente de compilação"

#. type: menuentry
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
msgid "Preparing the isolated build environment."
msgstr "Preparando o ambiente de compilação isolado."

#. type: node
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
#: guix-git/doc/guix.texi:1171
#, no-wrap
msgid "Daemon Offload Setup"
msgstr "Configuração de descarregamento de daemon"

#. type: menuentry
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
msgid "Offloading builds to remote machines."
msgstr "Descarregando compilações para máquinas remotas."

#. type: subsection
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
#: guix-git/doc/guix.texi:1423 guix-git/doc/guix.texi:1424
#, no-wrap
msgid "SELinux Support"
msgstr "Suporte a SELinux"

#. type: menuentry
#: guix-git/doc/guix.texi:256 guix-git/doc/guix.texi:922
msgid "Using an SELinux policy for the daemon."
msgstr "Usando um política SELinux para o daemon."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:1478
#: guix-git/doc/guix.texi:2164 guix-git/doc/guix.texi:2166
#: guix-git/doc/guix.texi:2167
#, no-wrap
msgid "Limitations"
msgstr "Limitações"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "What you can expect."
msgstr "O que você pode esperar."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2183 guix-git/doc/guix.texi:2184
#, no-wrap
msgid "Hardware Considerations"
msgstr "Considerações de hardware"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Supported hardware."
msgstr "Hardware suportado."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2221 guix-git/doc/guix.texi:2222
#, no-wrap
msgid "USB Stick and DVD Installation"
msgstr "Instalação em um pendrive e em DVD"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Preparing the installation medium."
msgstr "Preparando a mídia de instalação."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2312 guix-git/doc/guix.texi:2313
#, no-wrap
msgid "Preparing for Installation"
msgstr "Preparando para instalação"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Networking, partitioning, etc."
msgstr "Rede, particionamento, etc."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2335 guix-git/doc/guix.texi:2336
#, no-wrap
msgid "Guided Graphical Installation"
msgstr "Instalação gráfica guiada"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Easy graphical installation."
msgstr "Instalação gráfica fácil."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:270
#: guix-git/doc/guix.texi:2164 guix-git/doc/guix.texi:2366
#: guix-git/doc/guix.texi:2367
#, no-wrap
msgid "Manual Installation"
msgstr "Instalação manual"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Manual installation for wizards."
msgstr "Instalação manual para magos."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2737 guix-git/doc/guix.texi:2738
#, no-wrap
msgid "After System Installation"
msgstr "Após a instalação do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "When installation succeeded."
msgstr "Quando a instalação conclui com sucesso."

#. type: node
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2758
#, no-wrap
msgid "Installing Guix in a VM"
msgstr "Instalando Guix em uma VM"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "Guix System playground."
msgstr "Parque de diversões do Guix System."

#. type: section
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
#: guix-git/doc/guix.texi:2809 guix-git/doc/guix.texi:2810
#, no-wrap
msgid "Building the Installation Image"
msgstr "Compilando a imagem de instalação"

#. type: menuentry
#: guix-git/doc/guix.texi:268 guix-git/doc/guix.texi:2164
msgid "How this comes to be."
msgstr "Como isso vem a ser."

#. type: node
#: guix-git/doc/guix.texi:273 guix-git/doc/guix.texi:2384
#: guix-git/doc/guix.texi:2386
#, no-wrap
msgid "Keyboard Layout and Networking and Partitioning"
msgstr "Disposição de teclado e rede e particionamento"

#. type: menuentry
#: guix-git/doc/guix.texi:273 guix-git/doc/guix.texi:2384
msgid "Initial setup."
msgstr "Configuração inicial."

#. type: subsection
#: guix-git/doc/guix.texi:273 guix-git/doc/guix.texi:2384
#: guix-git/doc/guix.texi:2648 guix-git/doc/guix.texi:2649
#, no-wrap
msgid "Proceeding with the Installation"
msgstr "Prosseguindo com a instalação"

#. type: menuentry
#: guix-git/doc/guix.texi:273 guix-git/doc/guix.texi:2384
msgid "Installing."
msgstr "Instalando."

#. type: section
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:3076 guix-git/doc/guix.texi:3077
#, no-wrap
msgid "Features"
msgstr "Recursos"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "How Guix will make your life brighter."
msgstr "Como o Guix vai iluminar a sua vida."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:3166
#, no-wrap
msgid "Invoking guix package"
msgstr "Invocando guix package"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Package installation, removal, etc."
msgstr "Instalação de pacote, remoção, etc."

#. type: section
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:289
#: guix-git/doc/guix.texi:3074 guix-git/doc/guix.texi:3779
#: guix-git/doc/guix.texi:3780
#, no-wrap
msgid "Substitutes"
msgstr "Substitutos"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Downloading pre-built binaries."
msgstr "Baixando binários pré-compilados."

#. type: section
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4138 guix-git/doc/guix.texi:4139
#, no-wrap
msgid "Packages with Multiple Outputs"
msgstr "Pacotes com múltiplas saídas"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Single source package, multiple outputs."
msgstr "Um único pacote de fontes, várias saídas."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4211
#, no-wrap
msgid "Invoking guix locate"
msgstr "Invocando guix locate"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Locating packages that provide a file."
msgstr "Localizando pacotes que fornecem um arquivo."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4341
#, no-wrap
msgid "Invoking guix gc"
msgstr "Invocando guix gc"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Running the garbage collector."
msgstr "Executando o coletor de lixo."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4565
#, no-wrap
msgid "Invoking guix pull"
msgstr "Invocando guix pull"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Fetching the latest Guix and distribution."
msgstr "Obtendo o Guix mais recente e distribuição."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4825
#, no-wrap
msgid "Invoking guix time-machine"
msgstr "Invocando guix time-machine"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Running an older revision of Guix."
msgstr "Executando uma revisão mais antiga do Guix."

#. type: section
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:4951 guix-git/doc/guix.texi:4952
#, no-wrap
msgid "Inferiors"
msgstr "Inferiores"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Interacting with another revision of Guix."
msgstr "Interagindo com outra revisão do Guix."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:5076
#, no-wrap
msgid "Invoking guix describe"
msgstr "Invocando guix describe"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Display information about your Guix revision."
msgstr "Exibe informações sobre sua revisão do Guix."

#. type: node
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
#: guix-git/doc/guix.texi:5172
#, no-wrap
msgid "Invoking guix archive"
msgstr "Invocando guix archive"

#. type: menuentry
#: guix-git/doc/guix.texi:287 guix-git/doc/guix.texi:3074
msgid "Exporting and importing store files."
msgstr "Exportando e importando arquivos do armazém."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:3805 guix-git/doc/guix.texi:3806
#, fuzzy, no-wrap
#| msgid "Official Substitute Server"
msgid "Official Substitute Servers"
msgstr "Servidor substituto oficial"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "One particular source of substitutes."
msgstr "Uma fonte específica de substitutos."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:3835 guix-git/doc/guix.texi:3836
#, no-wrap
msgid "Substitute Server Authorization"
msgstr "Autorização de servidor substituto"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "How to enable or disable substitutes."
msgstr "Como habilitar ou desabilitar substitutos."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:3905 guix-git/doc/guix.texi:3906
#, no-wrap
msgid "Getting Substitutes from Other Servers"
msgstr "Obtendo substitutos de outros servidores"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "Substitute diversity."
msgstr "Diversidade de substitutos."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:4026 guix-git/doc/guix.texi:4027
#, no-wrap
msgid "Substitute Authentication"
msgstr "Autenticação de substituto"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "How Guix verifies substitutes."
msgstr "Como Guix verifica substitutos."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:4061 guix-git/doc/guix.texi:4062
#, no-wrap
msgid "Proxy Settings"
msgstr "Configurações de proxy"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "How to get substitutes via proxy."
msgstr "Como obter substitutos via proxy."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:4073 guix-git/doc/guix.texi:4074
#, no-wrap
msgid "Substitution Failure"
msgstr "Falha na substituição"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "What happens when substitution fails."
msgstr "O que acontece quando a substituição falha."

#. type: subsection
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
#: guix-git/doc/guix.texi:4101 guix-git/doc/guix.texi:4102
#, no-wrap
msgid "On Trusting Binaries"
msgstr "Confiança em binários"

#. type: menuentry
#: guix-git/doc/guix.texi:297 guix-git/doc/guix.texi:3803
msgid "How can you trust that binary blob?"
msgstr "Como você pode confiar naquele blob binário?"

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5398 guix-git/doc/guix.texi:5399
#, no-wrap
msgid "Specifying Additional Channels"
msgstr "Especificando canais adicionais"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Extending the package collection."
msgstr "Ampliando a coleta de pacotes."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5444 guix-git/doc/guix.texi:5445
#, no-wrap
msgid "Using a Custom Guix Channel"
msgstr "Usando um canal Guix personalizado"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Using a customized Guix."
msgstr "Usando um Guix personalizado."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5485 guix-git/doc/guix.texi:5486
#, no-wrap
msgid "Replicating Guix"
msgstr "Replicando Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Running the @emph{exact same} Guix."
msgstr "Executando o @emph{exatamente o mesmo} Guix."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5545 guix-git/doc/guix.texi:5546
#, fuzzy, no-wrap
#| msgid "Customizing your GNU system."
msgid "Customizing the System-Wide Guix"
msgstr "Personalizando seu sistema GNU."

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#, fuzzy
#| msgid "locales, when not on Guix System"
msgid "Default channels on Guix System."
msgstr "locales, quando não está no Guix System"

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5604 guix-git/doc/guix.texi:5605
#, no-wrap
msgid "Channel Authentication"
msgstr "Autenticação de canal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "How Guix verifies what it fetches."
msgstr "Como o Guix verifica o que busca."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5644 guix-git/doc/guix.texi:5645
#, no-wrap
msgid "Channels with Substitutes"
msgstr "Canais com substitutos"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Using channels with available substitutes."
msgstr "Utilizando canais com substitutos disponíveis."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5669 guix-git/doc/guix.texi:5670
#, no-wrap
msgid "Creating a Channel"
msgstr "Criando um canal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "How to write your custom channel."
msgstr "Como escrever seu canal personalizado."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5800 guix-git/doc/guix.texi:5801
#, no-wrap
msgid "Package Modules in a Sub-directory"
msgstr "Módulos de pacote em um subdiretório"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Specifying the channel's package modules location."
msgstr "Especificando a localização dos módulos do pacote do canal."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5826 guix-git/doc/guix.texi:5827
#, no-wrap
msgid "Declaring Channel Dependencies"
msgstr "Declarando dependências de canal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "How to depend on other channels."
msgstr "Como depender de outros canais."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5868 guix-git/doc/guix.texi:5869
#, no-wrap
msgid "Specifying Channel Authorizations"
msgstr "Especificando autorizações de canal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Defining channel authors authorizations."
msgstr "Definindo autorizações de autores de canais."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5971 guix-git/doc/guix.texi:5972
#, no-wrap
msgid "Primary URL"
msgstr "URL principal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Distinguishing mirror to original."
msgstr "Distinguir o espelho do original."

#. type: section
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
#: guix-git/doc/guix.texi:5994 guix-git/doc/guix.texi:5995
#, no-wrap
msgid "Writing Channel News"
msgstr "Escrevendo notícias do canal"

#. type: menuentry
#: guix-git/doc/guix.texi:312 guix-git/doc/guix.texi:5396
msgid "Communicating information to channel's users."
msgstr "Comunicar informações aos usuários do canal."

#. type: node
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#: guix-git/doc/guix.texi:6086
#, no-wrap
msgid "Invoking guix shell"
msgstr "Invocando guix shell"

#. type: menuentry
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#, fuzzy
#| msgid "Preparing the isolated build environment."
msgid "Spawning one-off software environments."
msgstr "Preparando o ambiente de compilação isolado."

#. type: node
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#: guix-git/doc/guix.texi:6636
#, no-wrap
msgid "Invoking guix environment"
msgstr "Invocando guix environment"

#. type: menuentry
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
msgid "Setting up development environments."
msgstr "Configurando ambientes de desenvolvimento."

#. type: node
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#: guix-git/doc/guix.texi:7033
#, no-wrap
msgid "Invoking guix pack"
msgstr "Invocando guix pack"

#. type: menuentry
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
msgid "Creating software bundles."
msgstr "Criando embalagens de software."

#. type: section
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#: guix-git/doc/guix.texi:7571 guix-git/doc/guix.texi:7572
#, no-wrap
msgid "The GCC toolchain"
msgstr "A cadeia de ferramentas do GCC"

#. type: menuentry
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
msgid "Working with languages supported by GCC."
msgstr "Trabalhando com idiomas suportados pelo GCC."

#. type: node
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
#: guix-git/doc/guix.texi:7597
#, no-wrap
msgid "Invoking guix git authenticate"
msgstr "Invocando guix git authenticate"

#. type: menuentry
#: guix-git/doc/guix.texi:320 guix-git/doc/guix.texi:6084
msgid "Authenticating Git repositories."
msgstr "Autenticando repositórios Git."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:7739 guix-git/doc/guix.texi:7740
#, no-wrap
msgid "Package Modules"
msgstr "Módulos de pacote"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Packages from the programmer's viewpoint."
msgstr "Pacotes do ponto de vista do programador."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:339
#: guix-git/doc/guix.texi:7737 guix-git/doc/guix.texi:7801
#: guix-git/doc/guix.texi:7802
#, no-wrap
msgid "Defining Packages"
msgstr "Definindo pacotes"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Defining new packages."
msgstr "Definindo novos pacotes."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:8630 guix-git/doc/guix.texi:8631
#, no-wrap
msgid "Defining Package Variants"
msgstr "Definindo variantes de pacote"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Customizing packages."
msgstr "Personalização de pacotes."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:8924 guix-git/doc/guix.texi:8925
#, no-wrap
msgid "Writing Manifests"
msgstr "Escrevendo manifestos"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "The bill of materials of your environment."
msgstr "A lista de materiais do seu ambiente."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:9229 guix-git/doc/guix.texi:9230
#, no-wrap
msgid "Build Systems"
msgstr "Sistemas de compilação"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Specifying how packages are built."
msgstr "Especificando como pacotes são compilados."

#. type: subsection
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:10584 guix-git/doc/guix.texi:10585
#: guix-git/doc/guix.texi:11127
#, no-wrap
msgid "Build Phases"
msgstr "Fases de construção"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Phases of the build process of a package."
msgstr "Fases do processo de construção de um pacote."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:10809 guix-git/doc/guix.texi:10810
#, no-wrap
msgid "Build Utilities"
msgstr "Construir utilitários"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Helpers for your package definitions and more."
msgstr "Auxiliares para suas definições de pacotes e muito mais."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:11284 guix-git/doc/guix.texi:11285
#, no-wrap
msgid "Search Paths"
msgstr "Caminhos de pesquisa"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#, fuzzy
#| msgid "Preparing the isolated build environment."
msgid "Declaring search path environment variables."
msgstr "Declarando variáveis de ambiente caminhos de pesquisa."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:11488 guix-git/doc/guix.texi:11489
#, no-wrap
msgid "The Store"
msgstr "O armazém"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Manipulating the package store."
msgstr "Manipulação do armazém de pacotes."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:11640 guix-git/doc/guix.texi:11641
#, no-wrap
msgid "Derivations"
msgstr "Derivações"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Low-level interface to package derivations."
msgstr "Interface de baixo nível para derivações de pacotes."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:11833 guix-git/doc/guix.texi:11834
#, no-wrap
msgid "The Store Monad"
msgstr "A mônada do armazém"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Purely functional interface to the store."
msgstr "Interface puramente funcional para o armazém."

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:12155 guix-git/doc/guix.texi:12156
#, no-wrap
msgid "G-Expressions"
msgstr "Expressões-G"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Manipulating build expressions."
msgstr "Manipulação de expressões de compilação."

#. type: node
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:12860
#, no-wrap
msgid "Invoking guix repl"
msgstr "Invocando guix repl"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Programming Guix in Guile"
msgstr "Programação Guix em Guile"

#. type: section
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
#: guix-git/doc/guix.texi:12977 guix-git/doc/guix.texi:12978
#, no-wrap
msgid "Using Guix Interactively"
msgstr "Usando Guix interativamente"

#. type: menuentry
#: guix-git/doc/guix.texi:337 guix-git/doc/guix.texi:7737
msgid "Fine-grain interaction at the REPL."
msgstr "Interação de granulação fina no REPL."

#. type: node
#: guix-git/doc/guix.texi:342 guix-git/doc/guix.texi:8005
#: guix-git/doc/guix.texi:8008
#, no-wrap
msgid "package Reference"
msgstr "Referência do package"

#. type: menuentry
#: guix-git/doc/guix.texi:342 guix-git/doc/guix.texi:8005
msgid "The package data type."
msgstr "O tipo de dados package."

#. type: node
#: guix-git/doc/guix.texi:342 guix-git/doc/guix.texi:8005
#: guix-git/doc/guix.texi:8324
#, no-wrap
msgid "origin Reference"
msgstr "Referência do origin"

#. type: menuentry
#: guix-git/doc/guix.texi:342 guix-git/doc/guix.texi:8005
msgid "The origin data type."
msgstr "O tipo de dados origin."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:13166
#, no-wrap
msgid "Invoking guix build"
msgstr "Invocando guix build"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Building packages from the command line."
msgstr "Compilando pacotes a partir da linha de comando."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:14177
#, no-wrap
msgid "Invoking guix edit"
msgstr "Invocando guix edit"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Editing package definitions."
msgstr "Editando definições de pacote."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:14207
#, no-wrap
msgid "Invoking guix download"
msgstr "Invocando guix download"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Downloading a file and printing its hash."
msgstr "Baixando um arquivo e imprimindo seu hash."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:14288
#, no-wrap
msgid "Invoking guix hash"
msgstr "Invocando guix hash"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Computing the cryptographic hash of a file."
msgstr "Computando a hash criptográfica de um arquivo."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:14379
#, no-wrap
msgid "Invoking guix import"
msgstr "Invocando guix import"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Importing package definitions."
msgstr "Importando definições de pacote."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:15070
#, no-wrap
msgid "Invoking guix refresh"
msgstr "Invocando guix refresh"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Updating package definitions."
msgstr "Atualizando definições de pacotes."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:15549
#, no-wrap
msgid "Invoking guix style"
msgstr "Invocando guix style"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#, fuzzy
#| msgid "Editing package definitions."
msgid "Styling package definitions."
msgstr "Editando definições de pacote."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:15758
#, no-wrap
msgid "Invoking guix lint"
msgstr "Invocando guix lint"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Finding errors in package definitions."
msgstr "Encontrando erros nas definições de pacote."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:15962
#, no-wrap
msgid "Invoking guix size"
msgstr "Invocando guix size"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Profiling disk usage."
msgstr "Perfilando uso de disco."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16106
#, no-wrap
msgid "Invoking guix graph"
msgstr "Invocando guix graph"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Visualizing the graph of packages."
msgstr "Visualizando o grafo de pacotes."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16387
#, no-wrap
msgid "Invoking guix publish"
msgstr "Invocando guix publish"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Sharing substitutes."
msgstr "Compartilhando substitutos."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16661
#, no-wrap
msgid "Invoking guix challenge"
msgstr "Invocando guix challenge"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Challenging substitute servers."
msgstr "Desafiando servidores substitutos."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16850
#, no-wrap
msgid "Invoking guix copy"
msgstr "Invocando guix copy"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Copying to and from a remote store."
msgstr "Copiando para e de um armazém remoto."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16914
#, no-wrap
msgid "Invoking guix container"
msgstr "Invocando guix container"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Process isolation."
msgstr "Isolação de processo."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:16968
#, no-wrap
msgid "Invoking guix weather"
msgstr "Invocando guix weather"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Assessing substitute availability."
msgstr "Acessando disponibilidade de substituto."

#. type: node
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
#: guix-git/doc/guix.texi:17117
#, no-wrap
msgid "Invoking guix processes"
msgstr "Invocando guix processes"

#. type: menuentry
#: guix-git/doc/guix.texi:361 guix-git/doc/guix.texi:13164
msgid "Listing client processes."
msgstr "Listando processos do cliente."

#. type: section
#: guix-git/doc/guix.texi:363 guix-git/doc/guix.texi:13167
#, no-wrap
msgid "Invoking @command{guix build}"
msgstr "Invocando @command{guix build}"

#. type: subsection
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
#: guix-git/doc/guix.texi:13220 guix-git/doc/guix.texi:13221
#, no-wrap
msgid "Common Build Options"
msgstr "Opções de compilação comuns"

#. type: menuentry
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
msgid "Build options for most commands."
msgstr "Opções de compilação para a maioria dos comandos."

#. type: subsection
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
#: guix-git/doc/guix.texi:13375 guix-git/doc/guix.texi:13376
#, no-wrap
msgid "Package Transformation Options"
msgstr "Opções de transformação de pacote"

#. type: menuentry
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
msgid "Creating variants of packages."
msgstr "Criando variantes de pacotes."

#. type: subsection
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
#: guix-git/doc/guix.texi:13800 guix-git/doc/guix.texi:13801
#, no-wrap
msgid "Additional Build Options"
msgstr "Opções de compilação adicional"

#. type: menuentry
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
msgid "Options specific to 'guix build'."
msgstr "Opções específicas para \"guix build\"."

#. type: subsection
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
#: guix-git/doc/guix.texi:14096 guix-git/doc/guix.texi:14097
#, no-wrap
msgid "Debugging Build Failures"
msgstr "Depurando falhas de compilação"

#. type: menuentry
#: guix-git/doc/guix.texi:368 guix-git/doc/guix.texi:13218
msgid "Real life packaging experience."
msgstr "Experiência de empacotamento na vida real."

#. type: section
#: guix-git/doc/guix.texi:373 guix-git/doc/guix.texi:17240
#: guix-git/doc/guix.texi:17242 guix-git/doc/guix.texi:17243
#, no-wrap
msgid "Cross-Compilation"
msgstr "Compilação cruzada"

#. type: menuentry
#: guix-git/doc/guix.texi:373 guix-git/doc/guix.texi:17240
msgid "Cross-compiling for another architecture."
msgstr "Compilação cruzada para outra arquitetura."

#. type: section
#: guix-git/doc/guix.texi:373 guix-git/doc/guix.texi:17240
#: guix-git/doc/guix.texi:17295 guix-git/doc/guix.texi:17296
#, no-wrap
msgid "Native Builds"
msgstr "Construções nativas"

#. type: menuentry
#: guix-git/doc/guix.texi:373 guix-git/doc/guix.texi:17240
#, fuzzy
#| msgid "Targeting another platform or kernel."
msgid "Targeting another architecture through native builds."
msgstr "Objetivando outra plataforma ou kernel."

#. type: node
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:17430
#, no-wrap
msgid "Getting Started with the System"
msgstr "Começando com o Sistema"

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:17633 guix-git/doc/guix.texi:17634
#, no-wrap
msgid "Using the Configuration System"
msgstr "Usando o sistema de configuração"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Customizing your GNU system."
msgstr "Personalizando seu sistema GNU."

#. type: node
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:17962
#, no-wrap
msgid "operating-system Reference"
msgstr "Referência do operating-system"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Detail of operating-system declarations."
msgstr "Detalhe das declarações do operating-system."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:397
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:18181
#: guix-git/doc/guix.texi:18182
#, no-wrap
msgid "File Systems"
msgstr "Sistemas de arquivos"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Configuring file system mounts."
msgstr "Configurando montagens de sistema de arquivos."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:18586 guix-git/doc/guix.texi:18587
#, no-wrap
msgid "Mapped Devices"
msgstr "Dispositivos mapeados"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Block device extra processing."
msgstr "Processamento extra de dispositivo de bloco."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:18768 guix-git/doc/guix.texi:18769
#, no-wrap
msgid "Swap Space"
msgstr "Espaço de troca (swap)"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Backing RAM with disk space."
msgstr "Apoiando a RAM com espaço em disco."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:18950 guix-git/doc/guix.texi:18951
#, no-wrap
msgid "User Accounts"
msgstr "Contas de usuário"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Specifying user accounts."
msgstr "Especificando contas de usuários."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:2393
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:19138
#: guix-git/doc/guix.texi:19139
#, no-wrap
msgid "Keyboard Layout"
msgstr "Disposição do teclado"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "How the system interprets key strokes."
msgstr "Como o sistema interpreta pressionamento de teclas."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:1860
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:19283
#: guix-git/doc/guix.texi:19284
#, no-wrap
msgid "Locales"
msgstr "Localidades"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Language and cultural convention settings."
msgstr "Configurações de idioma e de convenção cultural."

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Specifying system services."
msgstr "Especificando serviços de sistema."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:45436 guix-git/doc/guix.texi:45437
#, fuzzy, no-wrap
#| msgid "Setuid Programs"
msgid "Privileged Programs"
msgstr "Programas setuid"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#, fuzzy
#| msgid "Programs running with root privileges."
msgid "Programs running with elevated privileges."
msgstr "Programas sendo executados com privilégios de root."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:2032
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:45533
#: guix-git/doc/guix.texi:45534
#, no-wrap
msgid "X.509 Certificates"
msgstr "Certificados X.509"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Authenticating HTTPS servers."
msgstr "Autenticando servidores HTTPS."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:1919
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:45597
#: guix-git/doc/guix.texi:45598
#, no-wrap
msgid "Name Service Switch"
msgstr "Name Service Switch"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Configuring libc's name service switch."
msgstr "Configurando name service switch do libc."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:45735 guix-git/doc/guix.texi:45736
#, no-wrap
msgid "Initial RAM Disk"
msgstr "Disco de RAM inicial"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Linux-Libre bootstrapping."
msgstr "Inicialização do Linux-Libre."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:45942 guix-git/doc/guix.texi:45943
#, no-wrap
msgid "Bootloader Configuration"
msgstr "Configuração do carregador de inicialização"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Configuring the boot loader."
msgstr "Configurando o \"bootloader\"."

#. type: node
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:46378
#, no-wrap
msgid "Invoking guix system"
msgstr "Invocando guix system"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Instantiating a system configuration."
msgstr "Inicializando uma configuração de sistema."

#. type: node
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:47051
#, no-wrap
msgid "Invoking guix deploy"
msgstr "Invocando guix deploy"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Deploying a system configuration to a remote host."
msgstr "Implantando uma configuração de sistema em um host remoto."

#. type: node
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
#: guix-git/doc/guix.texi:47442
#, no-wrap
msgid "Running Guix in a VM"
msgstr "Executando Guix em uma VM"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "How to run Guix System in a virtual machine."
msgstr "Como executar Guix System em uma máquina virtual."

#. type: section
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:441
#: guix-git/doc/guix.texi:17428 guix-git/doc/guix.texi:47577
#: guix-git/doc/guix.texi:47578
#, no-wrap
msgid "Defining Services"
msgstr "Definindo serviços"

#. type: menuentry
#: guix-git/doc/guix.texi:395 guix-git/doc/guix.texi:17428
msgid "Adding new service definitions."
msgstr "Adicionando novas definições de serviço."

#. type: subsection
#: guix-git/doc/guix.texi:399 guix-git/doc/guix.texi:18480
#: guix-git/doc/guix.texi:18482 guix-git/doc/guix.texi:18483
#, no-wrap
msgid "Btrfs file system"
msgstr "Sistema de arquivos Btrfs"

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:19523 guix-git/doc/guix.texi:19524
#, no-wrap
msgid "Base Services"
msgstr "Serviços básicos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Essential system services."
msgstr "Serviços essenciais do sistema."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:21075 guix-git/doc/guix.texi:21076
#, no-wrap
msgid "Scheduled Job Execution"
msgstr "Execução de trabalho agendado"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "The mcron service."
msgstr "O serviço mcron."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:21358 guix-git/doc/guix.texi:21359
#, no-wrap
msgid "Log Rotation"
msgstr "Rotação de log"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Archiving and deleting old logs."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:21668 guix-git/doc/guix.texi:21669
#, fuzzy, no-wrap
#| msgid "Networking"
msgid "Networking Setup"
msgstr "Rede"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Setting up network interfaces."
msgstr "Configurando interfaces de rede."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:22663 guix-git/doc/guix.texi:22664
#, no-wrap
msgid "Networking Services"
msgstr "Serviços de Rede"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#, fuzzy
#| msgid "Network setup, SSH daemon, etc."
msgid "Firewall, SSH daemon, etc."
msgstr "Configuração de rede, daemon SSH, etc."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:24549 guix-git/doc/guix.texi:24550
#, no-wrap
msgid "Unattended Upgrades"
msgstr "Atualizações sem supervisão"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Automated system upgrades."
msgstr "Atualizações automatizadas do sistema."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:24707 guix-git/doc/guix.texi:24708
#, no-wrap
msgid "X Window"
msgstr "X Window"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Graphical display."
msgstr "Exibição gráfica."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:25370 guix-git/doc/guix.texi:25371
#, no-wrap
msgid "Printing Services"
msgstr "Serviços de impressão"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Local and remote printer support."
msgstr "Suporte a impressora local e remota."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:26192 guix-git/doc/guix.texi:26193
#, no-wrap
msgid "Desktop Services"
msgstr "Serviços de desktop"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "D-Bus and desktop services."
msgstr "Serviços de D-Bus e desktop."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:27493 guix-git/doc/guix.texi:27494
#, no-wrap
msgid "Sound Services"
msgstr "Serviços de som"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "ALSA and Pulseaudio services."
msgstr "Serviços ALSA e Pulseaudio."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:27718 guix-git/doc/guix.texi:27719
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "File Search Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Tools to search for files."
msgstr "Ferramentas para procurar arquivos."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:27824 guix-git/doc/guix.texi:27825
#, no-wrap
msgid "Database Services"
msgstr "Serviços de bancos de dados"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "SQL databases, key-value stores, etc."
msgstr "Banco de dados SQL, armazenamentos de valor chave, etc."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:28209 guix-git/doc/guix.texi:28210
#, no-wrap
msgid "Mail Services"
msgstr "Serviços de correio"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "IMAP, POP3, SMTP, and all that."
msgstr "IMAP, POP3, SMTP e tudo isso."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:30334 guix-git/doc/guix.texi:30335
#, no-wrap
msgid "Messaging Services"
msgstr "Serviços de mensageria"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Messaging services."
msgstr "Serviços de mensageria."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:31578 guix-git/doc/guix.texi:31579
#, no-wrap
msgid "Telephony Services"
msgstr "Serviços de telefonia"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Telephony services."
msgstr "Serviços de telefonia."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:32030 guix-git/doc/guix.texi:32031
#, no-wrap
msgid "File-Sharing Services"
msgstr "Serviços de compartilhamento de arquivos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "File-sharing services."
msgstr "Serviços de compartilhamento de arquivos."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:32828 guix-git/doc/guix.texi:32829
#, no-wrap
msgid "Monitoring Services"
msgstr "Serviços de monitoramento"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Monitoring services."
msgstr "Serviços de monitoramento."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:33486 guix-git/doc/guix.texi:33487
#, no-wrap
msgid "Kerberos Services"
msgstr "Serviços Kerberos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Kerberos services."
msgstr "Serviços Kerberos."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:33612 guix-git/doc/guix.texi:33613
#, no-wrap
msgid "LDAP Services"
msgstr "Serviços LDAP"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "LDAP services."
msgstr "Serviços LDAP."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:34276 guix-git/doc/guix.texi:34277
#, no-wrap
msgid "Web Services"
msgstr "Serviços web"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Web servers."
msgstr "Servidores Web."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:35651 guix-git/doc/guix.texi:35652
#, no-wrap
msgid "Certificate Services"
msgstr "Serviços de certificado"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "TLS certificates via Let's Encrypt."
msgstr "Certificados TLS via Let's Encrypt."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:35866 guix-git/doc/guix.texi:35867
#, no-wrap
msgid "DNS Services"
msgstr "Serviços DNS"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "DNS daemons."
msgstr "Deamons DNS."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:36696 guix-git/doc/guix.texi:36697
#, fuzzy, no-wrap
#| msgid "VPN Services"
msgid "VNC Services"
msgstr "Serviços VPN"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#, fuzzy
#| msgid "VPN daemons."
msgid "VNC daemons."
msgstr "Deamons VPN."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:36850 guix-git/doc/guix.texi:36851
#, no-wrap
msgid "VPN Services"
msgstr "Serviços VPN"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "VPN daemons."
msgstr "Deamons VPN."

#. type: node
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:37258 guix-git/doc/guix.texi:37259
#: guix-git/doc/guix.texi:37454
#, no-wrap
msgid "Network File System"
msgstr "Sistema de arquivos de rede"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "NFS related services."
msgstr "Serviços relacionados a NFS."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:37454 guix-git/doc/guix.texi:37455
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Samba Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Samba services."
msgstr "Serviços Samba."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:37454 guix-git/doc/guix.texi:37606
#: guix-git/doc/guix.texi:37607
#, no-wrap
msgid "Continuous Integration"
msgstr "Integração Contínua"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Cuirass and Laminar services."
msgstr "Os serviços Cuirass e Laminar."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:38015 guix-git/doc/guix.texi:38016
#, no-wrap
msgid "Power Management Services"
msgstr "Serviços de gerenciamento de energia"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#, fuzzy
#| msgid "Extending battery life."
msgid "Extending battery life, etc."
msgstr "Estendendo a vida da bateria."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:39036 guix-git/doc/guix.texi:39037
#, no-wrap
msgid "Audio Services"
msgstr "Serviços de áudio"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "The MPD."
msgstr "O MPD."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:39443 guix-git/doc/guix.texi:39444
#, no-wrap
msgid "Virtualization Services"
msgstr "Serviços de virtualização"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Virtualization services."
msgstr "Serviços de virtualização."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:41169 guix-git/doc/guix.texi:41170
#, no-wrap
msgid "Version Control Services"
msgstr "Serviços de controlando versão"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Providing remote access to Git repositories."
msgstr "Fornecendo acesso remoto a repositórios Git."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:42574 guix-git/doc/guix.texi:42575
#, no-wrap
msgid "Game Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Game servers."
msgstr "Servidores de jogos."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:42629 guix-git/doc/guix.texi:42630
#, no-wrap
msgid "PAM Mount Service"
msgstr "Serviço de montagem PAM"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Service to mount volumes when logging in."
msgstr "Serviço para montar volumes ao efetuar login."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:42810 guix-git/doc/guix.texi:42811
#, no-wrap
msgid "Guix Services"
msgstr "Serviços Guix"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Services relating specifically to Guix."
msgstr "Serviços relacionados especificamente ao Guix."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:43321 guix-git/doc/guix.texi:43322
#, no-wrap
msgid "Linux Services"
msgstr "Serviços Linux"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Services tied to the Linux kernel."
msgstr "Serviços vinculados ao kernel Linux."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:43702 guix-git/doc/guix.texi:43703
#, no-wrap
msgid "Hurd Services"
msgstr "Serviços Hurd"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Services specific for a Hurd System."
msgstr "Serviços específicos para um Sistema Hurd."

#. type: subsection
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
#: guix-git/doc/guix.texi:43744 guix-git/doc/guix.texi:43745
#, no-wrap
msgid "Miscellaneous Services"
msgstr "Serviços diversos"

#. type: menuentry
#: guix-git/doc/guix.texi:439 guix-git/doc/guix.texi:19521
msgid "Other services."
msgstr "Outros serviços."

#. type: subsection
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#: guix-git/doc/guix.texi:47592 guix-git/doc/guix.texi:47593
#, no-wrap
msgid "Service Composition"
msgstr "Composição de serviço"

#. type: menuentry
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
msgid "The model for composing services."
msgstr "O modelo para serviços de composição."

#. type: subsection
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#: guix-git/doc/guix.texi:47648 guix-git/doc/guix.texi:47649
#, no-wrap
msgid "Service Types and Services"
msgstr "Tipos de Service e Serviços"

#. type: menuentry
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
msgid "Types and services."
msgstr "Tipos e serviços."

#. type: subsection
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#: guix-git/doc/guix.texi:47784 guix-git/doc/guix.texi:47785
#, no-wrap
msgid "Service Reference"
msgstr "Referência de Service"

#. type: menuentry
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
msgid "API reference."
msgstr "Referência de API."

#. type: subsection
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#: guix-git/doc/guix.texi:48153 guix-git/doc/guix.texi:48154
#, no-wrap
msgid "Shepherd Services"
msgstr "Serviços de Shepherd"

#. type: menuentry
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
msgid "A particular type of service."
msgstr "Um tipo em particular de serviço."

#. type: subsection
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#: guix-git/doc/guix.texi:48538 guix-git/doc/guix.texi:48539
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "Complex Configurations"
msgstr "Configuração do sistema"

#. type: menuentry
#: guix-git/doc/guix.texi:447 guix-git/doc/guix.texi:47590
#, fuzzy
#| msgid "Instantiating a system configuration."
msgid "Defining bindings for complex configurations."
msgstr "Inicializando uma configuração de sistema."

#. type: section
#: guix-git/doc/guix.texi:451 guix-git/doc/guix.texi:48932
#: guix-git/doc/guix.texi:48934 guix-git/doc/guix.texi:48935
#, no-wrap
msgid "Chrooting into an existing system"
msgstr "Acessando um sistema existente via chroot"

#. type: section
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
#: guix-git/doc/guix.texi:49089 guix-git/doc/guix.texi:49090
#, no-wrap
msgid "Declaring the Home Environment"
msgstr "Declarando o ambiente pessoal"

#. type: menuentry
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
msgid "Customizing your Home."
msgstr "Personalizando seu ambiente pessoal."

#. type: section
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
#: guix-git/doc/guix.texi:49179 guix-git/doc/guix.texi:49180
#, no-wrap
msgid "Configuring the Shell"
msgstr "Configurando o \"Shell\""

#. type: menuentry
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
msgid "Enabling home environment."
msgstr "Habilitando o ambiente pessoal."

#. type: section
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:460
#: guix-git/doc/guix.texi:49087 guix-git/doc/guix.texi:49226
#: guix-git/doc/guix.texi:49227
#, no-wrap
msgid "Home Services"
msgstr "Serviços pessoais"

#. type: menuentry
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
msgid "Specifying home services."
msgstr "Especificando serviços pessoais."

#. type: node
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
#: guix-git/doc/guix.texi:52355
#, no-wrap
msgid "Invoking guix home"
msgstr "Invocando guix home"

#. type: menuentry
#: guix-git/doc/guix.texi:458 guix-git/doc/guix.texi:49087
msgid "Instantiating a home configuration."
msgstr "Inicializando uma configuração pessoal."

#. type: subsection
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#: guix-git/doc/guix.texi:49279 guix-git/doc/guix.texi:49280
#, no-wrap
msgid "Essential Home Services"
msgstr "Serviços essenciais pessoais"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Environment variables, packages, on-* scripts."
msgstr "Variáveis de ambiente, pacotes, scripts on-*."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Shepherd Services"
msgid "Shells: Shells Home Services"
msgstr "Serviços de Shepherd"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "POSIX shells, Bash, Zsh."
msgstr "POSIX shells, Bash, Zsh."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Version Control Services"
msgid "Mcron: Mcron Home Service"
msgstr "Serviços de controlando versão"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Scheduled User's Job Execution."
msgstr "Execução de trabalho do Usuário agendado."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Power Management Services"
msgid "Power Management: Power Management Home Services"
msgstr "Serviços de gerenciamento de energia"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Services"
msgid "Services for battery power."
msgstr "Serviços"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Shepherd Services"
msgid "Shepherd: Shepherd Home Service"
msgstr "Serviços de Shepherd"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Managing User's Daemons."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "SSH: Secure Shell"
msgstr "SSH: Secure Shell"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Setting up the secure shell client."
msgstr "Configurando o cliente de shell seguro."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "GPG: GNU Privacy Guard"
msgstr "GPG: GNU Privacy Guard"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Setting up GPG and related tools."
msgstr "Configurando GPG e ferramentas relacionadas."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Desktop Services"
msgid "Desktop: Desktop Home Services"
msgstr "Serviços de desktop"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Services for graphical environments."
msgstr "Serviços para ambientes gráficos."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Game Services"
msgid "Guix: Guix Home Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Services"
msgid "Services for Guix."
msgstr "Serviços"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Base Services"
msgid "Backup: Backup Home Services"
msgstr "Serviços base"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Services for backing up User's files."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Version Control Services"
msgid "Fonts: Fonts Home Services"
msgstr "Serviços de controlando versão"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Services for managing User's fonts."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Version Control Services"
msgid "Sound: Sound Home Services"
msgstr "Serviços de controlando versão"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Dealing with audio."
msgstr "Lidando com áudio."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Game Services"
msgid "Mail: Mail Home Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Services for managing mail."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging Services"
msgid "Messaging: Messaging Home Services"
msgstr "Serviços de mensageria"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Services for managing messaging."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Game Services"
msgid "Media: Media Home Services"
msgstr "Serviços de jogos"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Messaging services."
msgid "Services for managing media."
msgstr "Serviços de mensageria."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
msgid "Sway: Sway window manager"
msgstr "Sway: Gerenciador de janelas Sway"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Instantiating a system configuration."
msgid "Setting up the Sway configuration."
msgstr "Inicializando uma configuração de sistema."

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Networking Services"
msgid "Networking: Networking Home Services"
msgstr "Serviços de Rede"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Networking Services"
msgid "Networking services."
msgstr "Serviços de Rede"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Miscellaneous Services"
msgid "Miscellaneous: Miscellaneous Home Services"
msgstr "Serviços diversos"

#. type: menuentry
#: guix-git/doc/guix.texi:479 guix-git/doc/guix.texi:49276
#, fuzzy
#| msgid "Other services."
msgid "More services."
msgstr "Serviços domésticos"

#. type: node
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:52775
#: guix-git/doc/guix.texi:52777
#, no-wrap
msgid "platform Reference"
msgstr "Referência do platform"

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:52775
#, fuzzy
#| msgid "Detail of operating-system declarations."
msgid "Detail of platform declarations."
msgstr "Detalhe das declarações do operating-system."

#. type: section
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:52775
#: guix-git/doc/guix.texi:52824 guix-git/doc/guix.texi:52825
#, fuzzy, no-wrap
#| msgid "Supported hardware."
msgid "Supported Platforms"
msgstr "Hardware suportado."

#. type: menuentry
#: guix-git/doc/guix.texi:484 guix-git/doc/guix.texi:52775
#, fuzzy
#| msgid "List the supported graph types."
msgid "Description of the supported platforms."
msgstr "Lista os tipos de gráficos disponíveis."

#. type: chapter
#: guix-git/doc/guix.texi:486 guix-git/doc/guix.texi:52902
#, no-wrap
msgid "Creating System Images"
msgstr "Criando imagens do sistema"

#. type: node
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#: guix-git/doc/guix.texi:52936
#, fuzzy, no-wrap
#| msgid "package Reference"
msgid "image Reference"
msgstr "Referência do package"

#. type: menuentry
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#, fuzzy
#| msgid "Detail of operating-system declarations."
msgid "Detail of image declarations."
msgstr "Detalhe das declarações do operating-system."

#. type: section
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#: guix-git/doc/guix.texi:53090 guix-git/doc/guix.texi:53091
#, no-wrap
msgid "Instantiate an Image"
msgstr "Instanciar uma imagem"

#. type: menuentry
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
msgid "How to instantiate an image record."
msgstr "Como instanciar um registro de imagem."

#. type: section
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#: guix-git/doc/guix.texi:53260 guix-git/doc/guix.texi:53261
#, fuzzy, no-wrap
#| msgid "package Reference"
msgid "image-type Reference"
msgstr "Referência do package"

#. type: menuentry
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#, fuzzy
#| msgid "Detail of operating-system declarations."
msgid "Detail of image types declaration."
msgstr "Detalhe das declarações do operating-system."

#. type: section
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
#: guix-git/doc/guix.texi:53389 guix-git/doc/guix.texi:53390
#, no-wrap
msgid "Image Modules"
msgstr "Módulos de imagem"

#. type: menuentry
#: guix-git/doc/guix.texi:491 guix-git/doc/guix.texi:52934
msgid "Definition of image modules."
msgstr "Definição de módulos de imagem."

#. type: section
#: guix-git/doc/guix.texi:493 guix-git/doc/guix.texi:52937
#, fuzzy, no-wrap
#| msgid "package Reference"
msgid "@code{image} Reference"
msgstr "Referência do package"

#. type: node
#: guix-git/doc/guix.texi:495 guix-git/doc/guix.texi:53026
#: guix-git/doc/guix.texi:53028
#, no-wrap
msgid "partition Reference"
msgstr "Referência do partition"

#. type: section
#: guix-git/doc/guix.texi:500 guix-git/doc/guix.texi:53459
#: guix-git/doc/guix.texi:53461 guix-git/doc/guix.texi:53462
#, no-wrap
msgid "Separate Debug Info"
msgstr "Informações de depuração separadas"

#. type: menuentry
#: guix-git/doc/guix.texi:500 guix-git/doc/guix.texi:53459
msgid "Installing 'debug' outputs."
msgstr "Instalando saídas de 'depuração'."

#. type: section
#: guix-git/doc/guix.texi:500 guix-git/doc/guix.texi:53459
#: guix-git/doc/guix.texi:53534 guix-git/doc/guix.texi:53535
#, no-wrap
msgid "Rebuilding Debug Info"
msgstr "Reconstruindo informações de depuração"

#. type: menuentry
#: guix-git/doc/guix.texi:500 guix-git/doc/guix.texi:53459
msgid "Building missing debug info."
msgstr "Informações de depuração ausentes no edifício."

#. type: node
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:53870
#: guix-git/doc/guix.texi:53872
#, no-wrap
msgid "Full-Source Bootstrap"
msgstr "Bootstrap de código fonte completo"

#. type: menuentry
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:53870
msgid "A Bootstrap worthy of GNU."
msgstr "Um Bootstrap digno do GNU."

#. type: section
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:53870
#: guix-git/doc/guix.texi:53959 guix-git/doc/guix.texi:53960
#, no-wrap
msgid "Preparing to Use the Bootstrap Binaries"
msgstr "Preparando para usar os binários do Bootstrap"

#. type: menuentry
#: guix-git/doc/guix.texi:505 guix-git/doc/guix.texi:53870
msgid "Building that what matters most."
msgstr "Construindo o que mais importa."

#. type: cindex
#: guix-git/doc/guix.texi:513
#, no-wrap
msgid "purpose"
msgstr "propósito"

#. type: Plain text
#: guix-git/doc/guix.texi:521
msgid "GNU Guix@footnote{``Guix'' is pronounced like ``geeks'', or ``ɡiːks'' using the international phonetic alphabet (IPA).} is a package management tool for and distribution of the GNU system.  Guix makes it easy for unprivileged users to install, upgrade, or remove software packages, to roll back to a previous package set, to build packages from source, and generally assists with the creation and maintenance of software environments."
msgstr "GNU Guix@footnote{``Guix'' é pronunciado como ``geeks'', ou ``ɡiːks'' usando o alfabeto fonético internacional (IPA).} é uma ferramenta de gerenciamento de pacotes e distribuição do sistema GNU. O Guix facilita a instalação, a atualização ou a remoção de pacotes de software, a reversão para um conjunto de pacotes anterior, a compilação de pacotes a partir do código-fonte e geralmente ajuda na criação e manutenção de ambientes de software."

#. type: cindex
#: guix-git/doc/guix.texi:522 guix-git/doc/guix.texi:597
#: guix-git/doc/guix.texi:719
#, no-wrap
msgid "Guix System"
msgstr "Sistema Guix"

#. type: cindex
#: guix-git/doc/guix.texi:523
#, no-wrap
msgid "GuixSD, now Guix System"
msgstr "GuixSD, agora Guix System"

#. type: cindex
#: guix-git/doc/guix.texi:524
#, no-wrap
msgid "Guix System Distribution, now Guix System"
msgstr "Guix System Distribution, agora Guix System"

#. type: Plain text
#: guix-git/doc/guix.texi:533
msgid "You can install GNU@tie{}Guix on top of an existing GNU/Linux system where it complements the available tools without interference (@pxref{Installation}), or you can use it as a standalone operating system distribution, @dfn{Guix@tie{}System}@footnote{We used to refer to Guix System as ``Guix System Distribution'' or ``GuixSD''.  We now consider it makes more sense to group everything under the ``Guix'' banner since, after all, Guix System is readily available through the @command{guix system} command, even if you're using a different distro underneath!}.  @xref{GNU Distribution}."
msgstr "Você pode instalar o GNU@tie{}Guix sobre um sistema GNU/Linux existente, onde ele complementa as ferramentas disponíveis sem interferência (@pxref{Installation}) ou você pode usá-lo como uma distribuição de sistema operacional independente, @dfn{Guix@tie{}System}@footnote{Costumávamos nos referir ao Guix System como ``Guix System Distribution'' ou ``GuixSD''. Agora consideramos que faz mais sentido agrupar tudo sob o banner ``Guix'', pois, afinal, o Guix System está prontamente disponível através do comando @command{guix system}, mesmo se você estiver usando uma distribuição diferente por baixo!}. @xref{GNU Distribution}."

#. type: cindex
#: guix-git/doc/guix.texi:542
#, no-wrap
msgid "user interfaces"
msgstr "interfaces de usuário"

#. type: Plain text
#: guix-git/doc/guix.texi:548
msgid "Guix provides a command-line package management interface (@pxref{Package Management}), tools to help with software development (@pxref{Development}), command-line utilities for more advanced usage (@pxref{Utilities}), as well as Scheme programming interfaces (@pxref{Programming Interface})."
msgstr "O Guix fornece uma interface de gerenciamento de pacotes de linha de comando (@pxref{Package Management}), ferramentas para ajudar no desenvolvimento de software (@pxref{Development}), utilitários de linha de comando para uso mais avançado (@pxref{Utilities}), bem como interfaces de programação Scheme (@pxref{Programming Interface})."

#. type: cindex
#: guix-git/doc/guix.texi:548 guix-git/doc/guix.texi:885
#, no-wrap
msgid "build daemon"
msgstr "build daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:552
msgid "Its @dfn{build daemon} is responsible for building packages on behalf of users (@pxref{Setting Up the Daemon}) and for downloading pre-built binaries from authorized sources (@pxref{Substitutes})."
msgstr "O @dfn{build daemon} é responsável por compilar pacotes em nome dos usuários (@pxref{Setting Up the Daemon}) e por baixar binários pré-compilados de fontes autorizados (@pxref{Substitutes})."

#. type: cindex
#: guix-git/doc/guix.texi:553
#, no-wrap
msgid "extensibility of the distribution"
msgstr "extensibilidade da distribuição"

#. type: cindex
#: guix-git/doc/guix.texi:554 guix-git/doc/guix.texi:7761
#, no-wrap
msgid "customization, of packages"
msgstr "personalização, de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:563
msgid "Guix includes package definitions for many GNU and non-GNU packages, all of which @uref{https://www.gnu.org/philosophy/free-sw.html, respect the user's computing freedom}.  It is @emph{extensible}: users can write their own package definitions (@pxref{Defining Packages}) and make them available as independent package modules (@pxref{Package Modules}).  It is also @emph{customizable}: users can @emph{derive} specialized package definitions from existing ones, including from the command line (@pxref{Package Transformation Options})."
msgstr "Guix inclui definições de pacotes para muitos pacotes GNU e não-GNU, todos os quais @uref{https://www.gnu.org/philosophy/free-sw.html, respeitam a liberdade de computação do usuário}. É @emph{extensível}: os usuários podem escrever suas próprias definições de pacotes (@pxref{Defining Packages}) e disponibilizá-los como módulos de pacotes independentes (@pxref{Package Modules}). Também é @emph{personalizável}: os usuários podem @emph{derivar} definições de pacotes especializados das existentes, incluindo da linha de comando (@pxref{Package Transformation Options})."

#. type: cindex
#: guix-git/doc/guix.texi:564
#, no-wrap
msgid "functional package management"
msgstr "gerenciamento de pacotes funcional"

#. type: cindex
#: guix-git/doc/guix.texi:565
#, no-wrap
msgid "isolation"
msgstr "isolação"

#. type: Plain text
#: guix-git/doc/guix.texi:580
msgid "Under the hood, Guix implements the @dfn{functional package management} discipline pioneered by Nix (@pxref{Acknowledgments}).  In Guix, the package build and installation process is seen as a @emph{function}, in the mathematical sense.  That function takes inputs, such as build scripts, a compiler, and libraries, and returns an installed package.  As a pure function, its result depends solely on its inputs---for instance, it cannot refer to software or scripts that were not explicitly passed as inputs.  A build function always produces the same result when passed a given set of inputs.  It cannot alter the environment of the running system in any way; for instance, it cannot create, modify, or delete files outside of its build and installation directories.  This is achieved by running build processes in isolated environments (or @dfn{containers}), where only their explicit inputs are visible."
msgstr "Nos bastidores, a Guix implementa a disciplina @dfn{gerenciamento de pacotes funcional} pioneira da Nix (@pxref{Acknowledgments}). No Guix, o processo de compilação e instalação de pacotes é visto como uma @emph{função}, no sentido matemático. Essa função recebe entradas, como scripts de compilação, um compilador e bibliotecas, e retorna um pacote instalado. Como uma função pura, seu resultado depende apenas de suas entradas – por exemplo, não pode fazer referência a um software ou scripts que não foram explicitamente passados como entradas. Uma função de compilação sempre produz o mesmo resultado ao passar por um determinado conjunto de entradas. Não pode alterar o ambiente do sistema em execução de qualquer forma; por exemplo, ele não pode criar, modificar ou excluir arquivos fora de seus diretórios de compilação e instalação. Isto é conseguido através da execução de processos de compilação em ambientes isolados (ou @dfn{containers}), onde somente suas entradas explícitas são visíveis."

#. type: cindex
#: guix-git/doc/guix.texi:581 guix-git/doc/guix.texi:4333
#: guix-git/doc/guix.texi:11491
#, no-wrap
msgid "store"
msgstr "store"

#. type: Plain text
#: guix-git/doc/guix.texi:588
msgid "The result of package build functions is @dfn{cached} in the file system, in a special directory called @dfn{the store} (@pxref{The Store}).  Each package is installed in a directory of its own in the store---by default under @file{/gnu/store}.  The directory name contains a hash of all the inputs used to build that package; thus, changing an input yields a different directory name."
msgstr "O resultado das funções de compilação do pacote é mantido (@dfn{cached}) no sistema de arquivos, em um diretório especial chamado @dfn{armazém} (@pxref{The Store}). Cada pacote é instalado em um diretório próprio no armazém – por padrão, em @file{/gnu/store}. O nome do diretório contém um hash de todas as entradas usadas para compilar esse pacote; Assim, a alteração uma entrada gera um nome de diretório diferente."

#. type: Plain text
#: guix-git/doc/guix.texi:592
msgid "This approach is the foundation for the salient features of Guix: support for transactional package upgrade and rollback, per-user installation, and garbage collection of packages (@pxref{Features})."
msgstr "Essa abordagem é a fundação para os principais recursos do Guix: suporte para atualização transacional de pacotes e reversão, instalação por usuário e coleta de lixo de pacotes (@pxref{Features})."

#. type: Plain text
#: guix-git/doc/guix.texi:607
msgid "Guix comes with a distribution of the GNU system consisting entirely of free software@footnote{The term ``free'' here refers to the @url{https://www.gnu.org/philosophy/free-sw.html,freedom provided to users of that software}.}.  The distribution can be installed on its own (@pxref{System Installation}), but it is also possible to install Guix as a package manager on top of an installed GNU/Linux system (@pxref{Installation}).  When we need to distinguish between the two, we refer to the standalone distribution as Guix@tie{}System."
msgstr "O Guix vem com uma distribuição do sistema GNU que consiste inteiramente de software livre@footnote{O termo ``free'' em ``free software`` se refere à @url{https://www.gnu.org/philosophy/free-sw.html,liberdade fornecida aos usuários desse software}. A ambiguidade no termo em inglês não ocorre na tradução para português ``livre``.}. A distribuição pode ser instalada por conta própria (@pxref{System Installation}), mas também é possível instalar o Guix como um gerenciador de pacotes em cima de um sistema GNU/Linux instalado (@pxref{Installation}). Quando precisamos distinguir entre os dois, nos referimos à distribuição independente como Guix@tie{}System."

#. type: Plain text
#: guix-git/doc/guix.texi:613
msgid "The distribution provides core GNU packages such as GNU libc, GCC, and Binutils, as well as many GNU and non-GNU applications.  The complete list of available packages can be browsed @url{https://www.gnu.org/software/guix/packages,on-line} or by running @command{guix package} (@pxref{Invoking guix package}):"
msgstr "A distribuição fornece pacotes GNU principais, como GNU libc, GCC e Binutils, além de muitos aplicativos GNU e não GNU. A lista completa de pacotes disponíveis pode ser acessada @url{https://www.gnu.org/software/guix/packages,online} ou executando @command{guix package} (@pxref{Invoking guix package}):"

#. type: example
#: guix-git/doc/guix.texi:616
#, no-wrap
msgid "guix package --list-available\n"
msgstr "guix package --list-available\n"

#. type: Plain text
#: guix-git/doc/guix.texi:622
msgid "Our goal is to provide a practical 100% free software distribution of Linux-based and other variants of GNU, with a focus on the promotion and tight integration of GNU components, and an emphasis on programs and tools that help users exert that freedom."
msgstr "Nosso objetivo é fornecer uma distribuição prática e 100% de software livre, baseada em Linux e outras variantes do GNU, com foco na promoção e forte integração de componentes do GNU e ênfase em programas e ferramentas que ajudam os usuários a exercer essa liberdade."

#. type: Plain text
#: guix-git/doc/guix.texi:624
msgid "Packages are currently available on the following platforms:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: defvar
#: guix-git/doc/guix.texi:627 guix-git/doc/guix.texi:2230
#: guix-git/doc/guix.texi:52862
#, no-wrap
msgid "x86_64-linux"
msgstr "x86_64-linux"

#. type: table
#: guix-git/doc/guix.texi:629
msgid "Intel/AMD @code{x86_64} architecture, Linux-Libre kernel."
msgstr "Arquitetura Intel/AMD @code{x86_64}, kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:630 guix-git/doc/guix.texi:2233
#: guix-git/doc/guix.texi:52858
#, no-wrap
msgid "i686-linux"
msgstr "i686-linux"

#. type: table
#: guix-git/doc/guix.texi:632
msgid "Intel 32-bit architecture (IA32), Linux-Libre kernel."
msgstr "Arquitetura Intel de 32 bits (IA32), kernel Linux-Libre."

#. type: item
#: guix-git/doc/guix.texi:633
#, no-wrap
msgid "armhf-linux"
msgstr "armhf-linux"

#. type: table
#: guix-git/doc/guix.texi:637
msgid "ARMv7-A architecture with hard float, Thumb-2 and NEON, using the EABI hard-float application binary interface (ABI), and Linux-Libre kernel."
msgstr "Arquitetura ARMv7-A com hard float, Thumb-2 e NEON, usando a interface binária de aplicativos EABI hard-float (ABI) e o kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:638 guix-git/doc/guix.texi:52834
#, no-wrap
msgid "aarch64-linux"
msgstr "aarch64-linux"

#. type: table
#: guix-git/doc/guix.texi:640
msgid "little-endian 64-bit ARMv8-A processors, Linux-Libre kernel."
msgstr "Processadores ARMv8-A little-endian de 64 bits, kernel Linux-Libre."

#. type: defvar
#: guix-git/doc/guix.texi:641 guix-git/doc/guix.texi:52881
#, no-wrap
msgid "i586-gnu"
msgstr "i586-gnu"

#. type: table
#: guix-git/doc/guix.texi:644
msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the Intel 32-bit architecture (IA32)."
msgstr "@uref{https://hurd.gnu.org, GNU/Hurd} sobre a arquitetura Intel de 32 bits (IA32)."

#. type: table
#: guix-git/doc/guix.texi:650
msgid "This configuration is experimental and under development.  The easiest way for you to give it a try is by setting up an instance of @code{hurd-vm-service-type} on your GNU/Linux machine (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}).  @xref{Contributing}, on how to help!"
msgstr "Esta configuração é experimental e está em desenvolvimento. A maneira mais fácil de você tentar é configurando uma instância de @code{hurd-vm-service-type} na sua máquina GNU/Linux (@pxref{transparent-emulation-qemu, @code{hurd-vm-service-type}}). @xref{Contributing}, sobre como ajudar!"

#. type: item
#: guix-git/doc/guix.texi:651
#, fuzzy, no-wrap
#| msgid "x86_64-linux"
msgid "x86_64-gnu"
msgstr "x86_64-linux"

#. type: table
#: guix-git/doc/guix.texi:654
#, fuzzy
#| msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the Intel 32-bit architecture (IA32)."
msgid "@uref{https://hurd.gnu.org, GNU/Hurd} on the @code{x86_64} Intel/AMD 64-bit architecture."
msgstr "@uref{https://hurd.gnu.org, GNU/Hurd} sobre a arquitetura Intel de 32 bits (IA32)."

#. type: table
#: guix-git/doc/guix.texi:657
msgid "This configuration is even more experimental and under heavy upstream development."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:658
#, no-wrap
msgid "mips64el-linux (unsupported)"
msgstr "mips64el-linux (sem suporte)"

#. type: table
#: guix-git/doc/guix.texi:664
msgid "little-endian 64-bit MIPS processors, specifically the Loongson series, n32 ABI, and Linux-Libre kernel.  This configuration is no longer fully supported; in particular, there is no ongoing work to ensure that this architecture still works.  Should someone decide they wish to revive this architecture then the code is still available."
msgstr "processadores little-endian MIPS de 64 bits, especificamente a série Loongson, n32 ABI e kernel Linux-Libre. Esta configuração não é mais totalmente suportada; em particular, não há trabalho em andamento para garantir que esta arquitetura ainda funcione. Caso alguém decida que deseja reviver esta arquitetura, o código ainda estará disponível."

#. type: item
#: guix-git/doc/guix.texi:665
#, no-wrap
msgid "powerpc-linux (unsupported)"
msgstr "powerpc-linux (sem suporte)"

#. type: table
#: guix-git/doc/guix.texi:670
msgid "big-endian 32-bit PowerPC processors, specifically the PowerPC G4 with AltiVec support, and Linux-Libre kernel.  This configuration is not fully supported and there is no ongoing work to ensure this architecture works."
msgstr "processadores PowerPC big-endian de 32 bits, especificamente o PowerPC G4 com suporte AltiVec e kernel Linux-Libre. Esta configuração não é totalmente suportada e não há trabalho em andamento para garantir que esta arquitetura funcione."

#. type: table
#: guix-git/doc/guix.texi:681
msgid "little-endian 64-bit Power ISA processors, Linux-Libre kernel.  This includes POWER9 systems such as the @uref{https://www.fsf.org/news/talos-ii-mainboard-and-talos-ii-lite-mainboard-now-fsf-certified-to-respect-your-freedom, RYF Talos II mainboard}. This platform is available as a \"technology preview\": although it is supported, substitutes are not yet available from the build farm (@pxref{Substitutes}), and some packages may fail to build (@pxref{Tracking Bugs and Changes}).  That said, the Guix community is actively working on improving this support, and now is a great time to try it and get involved!"
msgstr "processadores little-endian 64 bits Power ISA, kernel Linux-Libre. Isso inclui sistemas POWER9 como o @uref{https://www.fsf.org/news/talos-ii-mainboard-and-talos-ii-lite-mainboard-now-fsf-certified-to-respect-your-freedom, placa-mãe RYF Talos II}. Esta plataforma está disponível como uma \"prévia de tecnologia\": embora seja suportada, substitutos ainda não estão disponíveis na fazenda de construção (@pxref{Substitutes}), e alguns pacotes podem falhar na construção (@pxref{Tracking Bugs and Changes}). Dito isso, a comunidade Guix está trabalhando ativamente para melhorar esse suporte, e agora é um ótimo momento para experimentá-lo e se envolver!"

#. type: defvar
#: guix-git/doc/guix.texi:682 guix-git/doc/guix.texi:52854
#, fuzzy, no-wrap
#| msgid "aarch64-linux"
msgid "riscv64-linux"
msgstr "aarch64-linux"

#. type: table
#: guix-git/doc/guix.texi:690
msgid "little-endian 64-bit RISC-V processors, specifically RV64GC, and Linux-Libre kernel. This platform is available as a \"technology preview\": although it is supported, substitutes are not yet available from the build farm (@pxref{Substitutes}), and some packages may fail to build (@pxref{Tracking Bugs and Changes}).  That said, the Guix community is actively working on improving this support, and now is a great time to try it and get involved!"
msgstr "processadores little-endian RISC-V de 64 bits, especificamente RV64GC, e kernel Linux-Libre. Esta plataforma está disponível como uma \"prévia de tecnologia\": embora seja suportada, substitutos ainda não estão disponíveis na build farm (@pxref{Substitutes}), e alguns pacotes podem falhar na compilação (@pxref{Tracking Bugs and Changes}). Dito isto, a comunidade Guix está trabalhando ativamente para melhorar este suporte, e agora é um ótimo momento para experimentá-lo e se envolver!"

#. type: Plain text
#: guix-git/doc/guix.texi:700
msgid "With Guix@tie{}System, you @emph{declare} all aspects of the operating system configuration and Guix takes care of instantiating the configuration in a transactional, reproducible, and stateless fashion (@pxref{System Configuration}).  Guix System uses the Linux-libre kernel, the Shepherd initialization system (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}), the well-known GNU utilities and tool chain, as well as the graphical environment or system services of your choice."
msgstr "Com o Guix@tie{}System, você @emph{declara} todos os aspectos da configuração do sistema operacional, e o Guix cuida de instanciar a configuração de maneira transacional, reproduzível e sem estado (@pxref{System Configuration}). O Guix System usa o kernel Linux-libre, o sistema de inicialização Shepherd (@pxref{Introduction ,,, shepherd, The GNU Shepherd Manual}), os conhecidos utilitários do GNU e cadeia de ferramentas, bem como o ambiente gráfico ou os serviços de sistema do sua escolha."

#. type: Plain text
#: guix-git/doc/guix.texi:704
#, fuzzy
msgid "Guix System is available on all the above platforms except @code{mips64el-linux}, @code{powerpc-linux}, @code{powerpc64le-linux} and @code{riscv64-linux}."
msgstr "O Guix System está disponível em todas as plataformas acima, exceto @code{mips64el-linux}."

#. type: Plain text
#: guix-git/doc/guix.texi:708
msgid "For information on porting to other architectures or kernels, @pxref{Porting}."
msgstr "Para obter informações sobre como portar para outras arquiteturas ou kernels, @pxref{Porting}."

#. type: Plain text
#: guix-git/doc/guix.texi:711
msgid "Building this distribution is a cooperative effort, and you are invited to join! @xref{Contributing}, for information about how you can help."
msgstr "A construção desta distribuição é um esforço cooperativo e você está convidado a participar! @xref{Contributing}, para obter informações sobre como você pode ajudar."

#. type: cindex
#: guix-git/doc/guix.texi:717
#, no-wrap
msgid "installing Guix"
msgstr "instalando Guix"

#. type: cindex
#: guix-git/doc/guix.texi:718 guix-git/doc/guix.texi:1855
#, no-wrap
msgid "foreign distro"
msgstr "distro alheia"

#. type: Plain text
#: guix-git/doc/guix.texi:726
msgid "You can install the package management tool Guix on top of an existing GNU/Linux or GNU/Hurd system@footnote{Hurd support is currently limited.}, referred to as a @dfn{foreign distro}.  If, instead, you want to install the complete, standalone GNU system distribution, @dfn{Guix@tie{}System}, @pxref{System Installation}.  This section is concerned only with the installation of Guix on a foreign distro."
msgstr "Você pode instalar a ferramenta de gerenciamento de pacotes Guix sobre um sistema GNU/Linux ou GNU/Hurd existente@footnote{O suporte ao Hurd é atualmente limitado.}, conhecido como @dfn{distro estrangeiro}. Se, em vez disso, você quiser instalar a distribuição completa e autônoma do sistema GNU, @dfn{Guix@tie{}System}, @pxref{System Installation}. Esta seção se preocupa apenas com a instalação do Guix em uma distro estrangeira."

#. type: quotation
#: guix-git/doc/guix.texi:730 guix-git/doc/guix.texi:762
msgid "This section only applies to systems without Guix.  Following it for existing Guix installations will overwrite important system files."
msgstr "Esta seção se aplica somente a sistemas sem Guix. Segui-la para instalações Guix existentes sobrescreverá arquivos importantes do sistema."

#. type: cindex
#: guix-git/doc/guix.texi:732
#, no-wrap
msgid "directories related to foreign distro"
msgstr "diretórios relacionados à distro alheia"

#. type: Plain text
#: guix-git/doc/guix.texi:737
msgid "When installed on a foreign distro, GNU@tie{}Guix complements the available tools without interference.  Its data lives exclusively in two directories, usually @file{/gnu/store} and @file{/var/guix}; other files on your system, such as @file{/etc}, are left untouched."
msgstr "Quando instalado sobre uma distro alheia. GNU@tie{}Guix complementa as ferramentas disponíveis sem interferência. Seus dados residem exclusivamente em dois diretórios, geralmente @file{/gnu/store} e @file{/var/guix}; outros arquivos no seu sistema, como @file{/etc}, são deixados intactos."

#. type: Plain text
#: guix-git/doc/guix.texi:740
msgid "Once installed, Guix can be updated by running @command{guix pull} (@pxref{Invoking guix pull})."
msgstr "Uma vez instalado, o Guix pode ser atualizado executando @command{guix pull} (@pxref{Invoking guix pull})."

#. type: cindex
#: guix-git/doc/guix.texi:752
#, no-wrap
msgid "installing Guix from binaries"
msgstr "instalando Guix de binários"

#. type: cindex
#: guix-git/doc/guix.texi:753
#, no-wrap
msgid "installer script"
msgstr "script de instalação"

#. type: Plain text
#: guix-git/doc/guix.texi:758
#, fuzzy
#| msgid "This section describes how to install Guix on an arbitrary system from a self-contained tarball providing binaries for Guix and for all its dependencies.  This is often quicker than installing from source, which is described in the next sections.  The only requirement is to have GNU@tie{}tar and Xz."
msgid "This section describes how to install Guix from a self-contained tarball providing binaries for Guix and for all its dependencies.  This is often quicker than installing from source, described later (@pxref{Building from Git})."
msgstr "Esta seção descreve como instalar o Guix em um sistema arbitrário a partir de um tarball independente que fornece binários para o Guix e para todas as suas dependências. Isso geralmente é mais rápido do que instalar do código-fonte, o que é descrito nas próximas seções. O único requisito é ter o GNU@tie{}tar e Xz."

#. type: Plain text
#: guix-git/doc/guix.texi:768
msgid "Some GNU/Linux distributions, such as Debian, Ubuntu, and openSUSE provide Guix through their own package managers.  The version of Guix may be older than @value{VERSION} but you can update it afterwards by running @samp{guix pull}."
msgstr "Algumas distribuições GNU/Linux, como Debian, Ubuntu e openSUSE fornecem Guix por meio de seus próprios gerenciadores de pacotes. A versão do Guix pode ser mais antiga que @value{VERSION}, mas você pode atualizá-la depois executando @samp{guix pull}."

#. type: Plain text
#: guix-git/doc/guix.texi:773
msgid "We advise system administrators who install Guix, both from the installation script or @i{via} the native package manager of their foreign distribution, to also regularly read and follow security notices, as shown by @command{guix pull}."
msgstr "Aconselhamos os administradores de sistema que instalam o Guix, tanto a partir do script de instalação quanto por meio do gerenciador de pacotes nativo de sua distribuição estrangeira, a também ler e seguir regularmente os avisos de segurança, conforme mostrado pelo @command{guix pull}."

#. type: Plain text
#: guix-git/doc/guix.texi:775
msgid "For Debian or derivatives such as Ubuntu or Trisquel, call:"
msgstr "Para Debian ou derivados como Ubuntu ou Trisquel, chame:"

#. type: example
#: guix-git/doc/guix.texi:778
#, no-wrap
msgid "sudo apt install guix\n"
msgstr "sudo apt install guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:781
msgid "Likewise, on openSUSE:"
msgstr "Da mesma forma, no openSUSE:"

#. type: example
#: guix-git/doc/guix.texi:784
#, no-wrap
msgid "sudo zypper install guix\n"
msgstr "sudo zypper install guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:788
msgid "If you are running Parabola, after enabling the pcr (Parabola Community Repo) repository, you can install Guix with:"
msgstr "Se você estiver executando o Parabola, depois de habilitar o repositório pcr (Parabola Community Repo), você pode instalar o Guix com:"

#. type: example
#: guix-git/doc/guix.texi:790
#, no-wrap
msgid "sudo pacman -S guix\n"
msgstr "sudo pacman -S guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:798
msgid "The Guix project also provides a shell script, @file{guix-install.sh}, which automates the binary installation process without use of a foreign distro package manager@footnote{@uref{https://guix.gnu.org/install.sh}}.  Use of @file{guix-install.sh} requires Bash, GnuPG, GNU@tie{}tar, wget, and Xz."
msgstr "O projeto Guix também fornece um script de shell, @file{guix-install.sh}, que automatiza o processo de instalação binária sem o uso de um gerenciador de pacotes de distro estrangeiro@footnote{@uref{https://guix.gnu.org/install.sh}}. O uso de @file{guix-install.sh} requer Bash, GnuPG, GNU@tie{}tar, wget e Xz."

#. type: Plain text
#: guix-git/doc/guix.texi:800
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "The script guides you through the following:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: item
#: guix-git/doc/guix.texi:802
#, no-wrap
msgid "Downloading and extracting the binary tarball"
msgstr "Baixando e extraindo o tarball binário"

#. type: item
#: guix-git/doc/guix.texi:803
#, fuzzy, no-wrap
#| msgid "Setting Up the Daemon"
msgid "Setting up the build daemon"
msgstr "Configurando o daemon"

#. type: item
#: guix-git/doc/guix.texi:804
#, no-wrap
msgid "Making the ‘guix’ command available to non-root users"
msgstr "Disponibilizando o comando ‘guix’ para usuários não root"

#. type: item
#: guix-git/doc/guix.texi:805
#, fuzzy, no-wrap
#| msgid "Challenging substitute servers."
msgid "Configuring substitute servers"
msgstr "Desafiando servidores substitutos."

#. type: Plain text
#: guix-git/doc/guix.texi:809
msgid "As root, run:"
msgstr "Como root, execute:"

#. type: example
#: guix-git/doc/guix.texi:815
#, fuzzy, no-wrap
#| msgid ""
#| "# cd /tmp\n"
#| "# wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
#| "# chmod +x guix-install.sh\n"
#| "# ./guix-install.sh\n"
msgid ""
"# cd /tmp\n"
"# wget https://guix.gnu.org/install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"
msgstr ""
"# cd /tmp\n"
"# wget https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n"
"# chmod +x guix-install.sh\n"
"# ./guix-install.sh\n"

#. type: Plain text
#: guix-git/doc/guix.texi:819
msgid "The script to install Guix is also packaged in Parabola (in the pcr repository). You can install and run it with:"
msgstr "O script para instalar o Guix também está empacotado no Parabola (no repositório pcr). Você pode instalá-lo e executá-lo com:"

#. type: example
#: guix-git/doc/guix.texi:822
#, no-wrap
msgid ""
"sudo pacman -S guix-installer\n"
"sudo guix-install.sh\n"
msgstr ""
"sudo pacman -S guix-installer\n"
"sudo guix-install.sh\n"

#. type: quotation
#: guix-git/doc/guix.texi:832
msgid "By default, @file{guix-install.sh} will configure Guix to download pre-built package binaries, called @dfn{substitutes} (@pxref{Substitutes}), from the project's build farms.  If you choose not to permit this, Guix will build @emph{everything} from source, making each installation and upgrade very expensive.  @xref{On Trusting Binaries} for a discussion of why you may want to build packages from source."
msgstr "Por padrão, @file{guix-install.sh} configurará o Guix para baixar binários de pacotes pré-construídos, chamados @dfn{substitutes} (@pxref{Substitutes}), das fazendas de construção do projeto. Se você escolher não permitir isso, o Guix construirá @emph{tudo} a partir da fonte, tornando cada instalação e atualização muito cara. @xref{On Trusting Binaries} para uma discussão sobre por que você pode querer construir pacotes a partir da fonte."

#. type: cindex
#: guix-git/doc/guix.texi:833 guix-git/doc/guix.texi:3839
#: guix-git/doc/guix.texi:20225
#, no-wrap
msgid "substitutes, authorization thereof"
msgstr "substitutos, autenticação dela"

#. type: quotation
#: guix-git/doc/guix.texi:837
msgid "To use substitutes from @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} or a mirror, you must authorize them.  For example,"
msgstr "Para usar substitutos de @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} ou um espelho, você deve autorizá-los. Por exemplo,"

#. type: example
#: guix-git/doc/guix.texi:843
#, no-wrap
msgid ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < \\\n"
"     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"

#. type: Plain text
#: guix-git/doc/guix.texi:849
msgid "When you're done installing Guix, @pxref{Application Setup} for extra configuration you might need, and @ref{Getting Started} for your first steps!"
msgstr "Quando terminar de instalar o Guix, @pxref{Application Setup} para configurações extras que você pode precisar e @ref{Getting Started} para seus primeiros passos!"

#. type: quotation
#: guix-git/doc/guix.texi:853
msgid "The binary installation tarball can be (re)produced and verified simply by running the following command in the Guix source tree:"
msgstr "O tarball da instalação binária pode ser (re)produzido e verificado simplesmente executando o seguinte comando na árvore de código-fonte do Guix:"

#. type: example
#: guix-git/doc/guix.texi:856
#, no-wrap
msgid "make guix-binary.@var{system}.tar.xz\n"
msgstr "make guix-binary.@var{sistema}.tar.xz\n"

#. type: quotation
#: guix-git/doc/guix.texi:860
msgid "...@: which, in turn, runs:"
msgstr "...@: que, por sua vez, executa:"

#. type: example
#: guix-git/doc/guix.texi:864
#, no-wrap
msgid ""
"guix pack -s @var{system} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"
msgstr ""
"guix pack -s @var{sistema} --localstatedir \\\n"
"  --profile-name=current-guix guix\n"

#. type: quotation
#: guix-git/doc/guix.texi:867
msgid "@xref{Invoking guix pack}, for more info on this handy tool."
msgstr "@xref{Invoking guix pack}, para mais informações sobre essa ferramenta útil."

#. type: cindex
#: guix-git/doc/guix.texi:869
#, fuzzy, no-wrap
#| msgid "installing Guix"
msgid "uninstalling Guix"
msgstr "instalando Guix"

#. type: cindex
#: guix-git/doc/guix.texi:870
#, fuzzy, no-wrap
#| msgid "installing Guix"
msgid "uninstallation, of Guix"
msgstr "instalando Guix"

#. type: Plain text
#: guix-git/doc/guix.texi:873
msgid "Should you eventually want to uninstall Guix, run the same script with the @option{--uninstall} flag:"
msgstr "Caso você queira desinstalar o Guix, execute o mesmo script com o sinalizador @option{--uninstall}:"

#. type: example
#: guix-git/doc/guix.texi:876
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "./guix-install.sh --uninstall\n"
msgstr "# guix install hello\n"

#. type: Plain text
#: guix-git/doc/guix.texi:880
msgid "With @option{--uninstall}, the script irreversibly deletes all the Guix files, configuration, and services."
msgstr "Com @option{--uninstall}, o script exclui irreversivelmente todos os arquivos Guix, configuração e serviços."

#. type: cindex
#: guix-git/doc/guix.texi:884
#, no-wrap
msgid "daemon"
msgstr "daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:889
msgid "During installation, the @dfn{build daemon} that must be running to use Guix has already been set up and you can run @command{guix} commands in your terminal program, @pxref{Getting Started}:"
msgstr "Durante a instalação, o @dfn{build daemon} que deve estar em execução para usar o Guix já foi configurado e você pode executar comandos @command{guix} no seu programa de terminal, @pxref{Getting Started}:"

#. type: example
#: guix-git/doc/guix.texi:892
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "guix build hello\n"
msgstr "# guix install hello\n"

#. type: Plain text
#: guix-git/doc/guix.texi:897
msgid "If this runs through without error, feel free to skip this section.  You should continue with the following section, @ref{Application Setup}."
msgstr "Se isso ocorrer sem erros, sinta-se à vontade para pular esta seção. Você deve continuar com a seção seguinte, @ref{Application Setup}."

#. type: Plain text
#: guix-git/doc/guix.texi:905
msgid "However, now would be a good time to replace outdated daemon versions, tweak it, perform builds on other machines (@pxref{Daemon Offload Setup}), or start it manually in special environments like ``chroots'' (@pxref{Chrooting into an existing system}) or WSL (not needed for WSL images created with Guix, @pxref{System Images, @code{wsl2-image-type}}).  If you want to know more or optimize your system, this section is worth reading."
msgstr "No entanto, agora seria um bom momento para substituir versões desatualizadas do daemon, ajustá-lo, executar compilações em outras máquinas (@pxref{Daemon Offload Setup}) ou iniciá-lo manualmente em ambientes especiais como ``chroots'' (@pxref{Chrooting into an existing system}) ou WSL (não necessário para imagens WSL criadas com Guix, @pxref{System Images, @code{wsl2-image-type}}). Se você quiser saber mais ou otimizar seu sistema, vale a pena ler esta seção."

#. type: Plain text
#: guix-git/doc/guix.texi:913
msgid "Operations such as building a package or running the garbage collector are all performed by a specialized process, the build daemon, on behalf of clients.  Only the daemon may access the store and its associated database.  Thus, any operation that manipulates the store goes through the daemon.  For instance, command-line tools such as @command{guix package} and @command{guix build} communicate with the daemon (@i{via} remote procedure calls) to instruct it what to do."
msgstr "Operações como compilar um pacote ou executar o coletor de lixo são todas executadas por um processo especializado, o build daemon, em nome dos clientes. Apenas o daemon pode acessar o armazém e seu banco de dados associado. Assim, qualquer operação que manipule o armazém passa pelo daemon. Por exemplo, ferramentas de linha de comando como @command{guix package} e @command{guix build} se comunicam com o daemon (@i{via} chamadas de procedimento remoto) para instruir o que fazer."

#. type: Plain text
#: guix-git/doc/guix.texi:917
msgid "The following sections explain how to prepare the build daemon's environment.  @xref{Substitutes} for how to allow the daemon to download pre-built binaries."
msgstr "As seções a seguir explicam como preparar o ambiente do daemon de compilação. @xref{Substitutes} para informações sobre como permitir que o daemon baixe binários pré-compilados."

#. type: cindex
#: guix-git/doc/guix.texi:927 guix-git/doc/guix.texi:1554
#, no-wrap
msgid "build environment"
msgstr "ambiente de compilação"

#. type: Plain text
#: guix-git/doc/guix.texi:934
msgid "In a standard multi-user setup, Guix and its daemon---the @command{guix-daemon} program---are installed by the system administrator.  Unprivileged users may use Guix tools to build packages or otherwise access the store, and the daemon will do it on their behalf, ensuring that the store is kept in a consistent state, and allowing built packages to be shared among users."
msgstr "Em uma configuração multiusuário padrão, o Guix e seu daemon – o programa @command{guix-daemon} – são instalados pelo administrador do sistema. Usuários desprivilegiados podem usar ferramentas Guix para criar pacotes ou acessar o armazém, e o daemon fará isso em seu nome, garantindo que o armazém seja mantido em um estado consistente e permitindo que pacotes construídos sejam compartilhados entre os usuários."

#. type: Plain text
#: guix-git/doc/guix.texi:936
msgid "There are currently two ways to set up and run the build daemon:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:942
msgid "running @command{guix-daemon} as ``root'', letting it run build processes as unprivileged users taken from a pool of build users---this is the historical approach;"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:949
msgid "running @command{guix-daemon} as a separate unprivileged user, relying on Linux's @dfn{unprivileged user namespace} functionality to set up isolated environments---this is the option chosen when installing Guix on a systemd-based distribution with the installation script (@pxref{Binary Installation})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:953
msgid "The sections below describe each of these two configurations in more detail and summarize the kind of build isolation they provide."
msgstr ""

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:954
#, no-wrap
msgid "Daemon Running as Root"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:956
#, no-wrap
msgid "build users"
msgstr "usuários de compilação"

#. type: Plain text
#: guix-git/doc/guix.texi:965
msgid "When @command{guix-daemon} runs as @code{root}, you may not want package build processes themselves to run as @code{root} too, for obvious security reasons.  To avoid that, a special pool of @dfn{build users} should be created for use by build processes started by the daemon.  Having several such users allows the daemon to launch distinct build processes under separate UIDs, which guarantees that they do not interfere with each other---an essential feature since builds are regarded as pure functions (@pxref{Introduction})."
msgstr "Quando @command{guix-daemon} é executado como @code{root}, você pode não querer que os próprios processos de compilação de pacotes também sejam executados como @code{root}, por razões óbvias de segurança. Para evitar isso, um conjunto especial de @dfn{usuários de compilação} deve ser criado para uso pelos processos de construção iniciados pelo daemon. Ter vários desses usuários permite que o daemon ative processos de compilação distintos sob UIDs separados, o que garante que eles não interfiram uns com os outros - um recurso essencial, pois as compilações são consideradas funções puras (@pxref{Introduction})."

#. type: Plain text
#: guix-git/doc/guix.texi:968
msgid "On a GNU/Linux system, a build user pool may be created like this (using Bash syntax and the @code{shadow} commands):"
msgstr "Em um sistema GNU/Linux, um conjunto de usuários de construção pode ser criado assim (usando a sintaxe Bash e os comandos @code{shadow}):"

#. type: example
#: guix-git/doc/guix.texi:980
#, fuzzy, no-wrap
msgid ""
"# groupadd --system guixbuild\n"
"# for i in $(seq -w 1 10);\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s $(which nologin)   \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"
msgstr ""
"# groupadd --system guixbuild\n"
"# for i in `seq -w 1 10`;\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s `which nologin`    \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"

#. type: Plain text
#: guix-git/doc/guix.texi:990
msgid "The number of build users determines how many build jobs may run in parallel, as specified by the @option{--max-jobs} option (@pxref{Invoking guix-daemon, @option{--max-jobs}}).  To use @command{guix system vm} and related commands, you may need to add the build users to the @code{kvm} group so they can access @file{/dev/kvm}, using @code{-G guixbuild,kvm} instead of @code{-G guixbuild} (@pxref{Invoking guix system})."
msgstr "O número de usuários de compilação determina quantos trabalhos de compilação podem ser executados em paralelo, conforme especificado pela opção @option{--max-jobs} (@pxref{Invoking guix-daemon, @option{--max-jobs}}). Para usar @command{guix system vm} e comandos relacionados, você pode precisar adicionar os usuários de compilação ao grupo @code{kvm} para que eles possam acessar @file{/dev/kvm}, usando @code{-G guixbuild,kvm} em vez de @code{-G guixbuild} (@pxref{Invoking guix system})."

#. type: Plain text
#: guix-git/doc/guix.texi:999
#, fuzzy
#| msgid "The @code{guix-daemon} program may then be run as @code{root} with the following command@footnote{If your machine uses the systemd init system, dropping the @file{@var{prefix}/lib/systemd/system/guix-daemon.service} file in @file{/etc/systemd/system} will ensure that @command{guix-daemon} is automatically started.  Similarly, if your machine uses the Upstart init system, drop the @file{@var{prefix}/lib/upstart/system/guix-daemon.conf} file in @file{/etc/init}.}:"
msgid "The @code{guix-daemon} program may then be run as @code{root} with the following command@footnote{If your machine uses the systemd init system, copying the @file{@var{prefix}/lib/systemd/system/guix-daemon.service} file to @file{/etc/systemd/system} will ensure that @command{guix-daemon} is automatically started.  Similarly, if your machine uses the Upstart init system, copy the @file{@var{prefix}/lib/upstart/system/guix-daemon.conf} file to @file{/etc/init}.}:"
msgstr "O programa @code{guix-daemon} pode então ser executado como @code{root} com o seguinte comando@footnote{Se sua máquina usa o sistema init systemd, colocar o arquivo @file{@var{prefixo}/lib/systemd/system/guix-daemon.service} em @file{/etc/systemd/system} irá assegurar que @command{guix-daemon} seja iniciado automaticamente. Da mesma forma, se a sua máquina usa o sistema init Upstart, coloque o arquivo @file{@var{prefixo}/lib/upstart/system/guix-daemon.conf} em @file{/etc/init}.}:"

#. type: example
#: guix-git/doc/guix.texi:1002 guix-git/doc/guix.texi:1543
#, no-wrap
msgid "# guix-daemon --build-users-group=guixbuild\n"
msgstr "# guix-daemon --build-users-group=guixbuild\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1005
msgid "In this setup, @file{/gnu/store} is owned by @code{root}."
msgstr ""

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1006
#, fuzzy, no-wrap
#| msgid "Programs running with root privileges."
msgid "Daemon Running Without Privileges"
msgstr "Programas sendo executados com privilégios de root."

#. type: cindex
#: guix-git/doc/guix.texi:1008
#, fuzzy, no-wrap
#| msgid "build daemon"
msgid "rootless build daemon"
msgstr "build daemon"

#. type: cindex
#: guix-git/doc/guix.texi:1009
#, fuzzy, no-wrap
#| msgid "Running the build daemon."
msgid "unprivileged build daemon"
msgstr "Executando o daemon de compilação."

#. type: cindex
#: guix-git/doc/guix.texi:1010
#, fuzzy, no-wrap
#| msgid "build daemon"
msgid "build daemon, unprivileged"
msgstr "build daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:1019
msgid "The second and preferred option is to run @command{guix-daemon} @emph{as an unprivileged user}.  It has the advantage of reducing the harm that can be done should a build process manage to exploit a vulnerability in the daemon.  This option requires the use of Linux's unprivileged user namespace mechanism; today it is available and enabled by most GNU/Linux distributions but can still be disabled.  The installation script automatically determines whether this option is available on your system (@pxref{Binary Installation})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1022
msgid "When using this option, you only need to create one user account, and @command{guix-daemon} will run with the authority of that account:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1029
#, fuzzy, no-wrap
msgid ""
"# groupadd --system guix-daemon\n"
"# useradd -g guix-daemon -G guix-daemon              \\\n"
"          -d /var/empty -s $(which nologin)          \\\n"
"          -c \"Guix daemon privilege separation user\" \\\n"
"          --system guix-daemon\n"
msgstr ""
"# groupadd --system guixbuild\n"
"# for i in `seq -w 1 10`;\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s `which nologin`    \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1033
msgid "In this configuration, @file{/gnu/store} is owned by the @code{guix-daemon} user."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1035
#, fuzzy
#| msgid "Running the build daemon."
msgid "unprivileged-daemon-migration"
msgstr "Executando o daemon de compilação."

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1035
#, fuzzy, no-wrap
#| msgid "Setting Up the Daemon"
msgid "Migrating to the Unprivileged Daemon"
msgstr "Configurando o daemon"

#. type: cindex
#: guix-git/doc/guix.texi:1037
#, fuzzy, no-wrap
#| msgid "Running the build daemon."
msgid "unprivileged daemon, migration"
msgstr "Executando o daemon de compilação."

#. type: cindex
#: guix-git/doc/guix.texi:1038
#, fuzzy, no-wrap
#| msgid "Bootloader Configuration"
msgid "rootless daemon, migration"
msgstr "Configuração do carregador de inicialização"

#. type: Plain text
#: guix-git/doc/guix.texi:1044
msgid "To switch an existing installation to the unprivileged execution mode, a number of steps must be taken: creating a new dedicated @code{guix-daemon} user account, changing ownership of the relevant files to @code{guix-daemon}, and ensuring that the @command{guix-daemon} program runs as @code{guix-daemon}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1049
msgid "On Guix System, these steps are carried out automatically when you set the @code{privileged?} field of the @code{guix-configuration} record to @code{#f} and reconfigure (@pxref{guix-configuration-type, @code{guix-configuration}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1052
msgid "However, on a foreign distribution, the process is manual.  The following paragraphs describe what you need to do."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:1057
msgid "Follow the instructions below only after making sure you have a recent version of @command{guix-daemon} with support for unprivileged execution."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1062
msgid "File ownership can be changed, after stopping the daemon, by running the following commands as root (the @command{chown} can take a while if there are many files in @file{/gnu/store}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1069
#, fuzzy, no-wrap
msgid ""
"groupadd --system guix-daemon\n"
"useradd -g guix-daemon -G guix-daemon,kvm               \\\n"
"        -d /var/empty -s $(which nologin)               \\\n"
"        -c \"Guix daemon privilege separation user\"      \\\n"
"        --system guix-daemon\n"
"\n"
msgstr ""
"# groupadd --system guixbuild\n"
"# for i in `seq -w 1 10`;\n"
"  do\n"
"    useradd -g guixbuild -G guixbuild           \\\n"
"            -d /var/empty -s `which nologin`    \\\n"
"            -c \"Guix build user $i\" --system    \\\n"
"            guixbuilder$i;\n"
"  done\n"

#. type: example
#: guix-git/doc/guix.texi:1073
#, no-wrap
msgid ""
"# Make the store writable, in case the systemd 'gnu-store.mount'\n"
"# unit made it read-only.\n"
"mount -o remount,rw /gnu/store\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1080
#, no-wrap
msgid ""
"chown -R guix-daemon:guix-daemon                        \\\n"
"  /gnu                                                  \\\n"
"  /var/guix/@{gc.lock,daemon-socket,db,discover@}         \\\n"
"  /var/guix/@{gcroots,offload,substitute,temproots@}      \\\n"
"  /var/log/guix                                         \\\n"
"  /etc/guix\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1086
msgid "If your system uses the systemd service manager, running the daemon as @code{guix-daemon} will be a matter of copying the relevant configuration files---make sure to review any changes you might have made in your own @file{.service} files before overwriting them:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:1092
#, no-wrap
msgid ""
"cp /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/*.service \\\n"
"   /etc/systemd/system\n"
"systemctl daemon-reload\n"
"systemctl start guix-daemon\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:1097
#, fuzzy
#| msgid "The @command{guix} command must be in the search path on the build machines.  You can check whether this is the case by running:"
msgid "The commands above assume that @command{guix pull} was run for the root user.  You can check whether this is the case by running this command:"
msgstr "O comando @command{guix} deve estar no caminho de pesquisa nas máquinas de compilação. Você pode verificar se este é o caso executando:"

#. type: example
#: guix-git/doc/guix.texi:1101
#, fuzzy, no-wrap
#| msgid ""
#| "# mkdir -p /usr/local/bin\n"
#| "# cd /usr/local/bin\n"
#| "# ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix\n"
msgid ""
"grep User=guix-daemon \\\n"
"  /var/guix/profiles/per-user/root/current-guix/lib/systemd/system/guix-daemon.service\n"
msgstr "semodule -i /var/guix/profiles/per-user/root/current-guix/share/selinux/guix-daemon.cil\n"

#. type: quotation
#: guix-git/doc/guix.texi:1105
msgid "If that command does not show the @code{User=guix-daemon} line, then run @command{guix pull} as the root user."
msgstr ""

#. type: unnumberedsubsubsec
#: guix-git/doc/guix.texi:1107
#, fuzzy, no-wrap
#| msgid "Preparing the isolated build environment."
msgid "The Isolated Build Environment"
msgstr "Preparando o ambiente de compilação isolado."

#. type: cindex
#: guix-git/doc/guix.texi:1109 guix-git/doc/guix.texi:1552
#, no-wrap
msgid "chroot"
msgstr "chroot"

#. type: cindex
#: guix-git/doc/guix.texi:1110
#, fuzzy, no-wrap
#| msgid "build environment"
msgid "build environment isolation"
msgstr "ambiente de compilação"

#. type: cindex
#: guix-git/doc/guix.texi:1111
#, fuzzy, no-wrap
#| msgid "build environment"
msgid "isolated build environment"
msgstr "ambiente de compilação"

#. type: cindex
#: guix-git/doc/guix.texi:1112
#, fuzzy, no-wrap
#| msgid "build environment"
msgid "hermetic build environment"
msgstr "ambiente de compilação"

#. type: Plain text
#: guix-git/doc/guix.texi:1117
#, fuzzy
#| msgid "This way, the daemon starts build processes in a chroot, under one of the @code{guixbuilder} users.  On GNU/Linux, by default, the chroot environment contains nothing but:"
msgid "In both cases, privileged and unprivileged, the daemon starts build processes without privileges in an @emph{isolated} or @emph{hermetic} build environment---a ``chroot''.  On GNU/Linux, by default, the build environment contains nothing but:"
msgstr "Dessa forma, o daemon inicia os processos de compilação em um chroot, sob um dos usuários @code{guixbuilder}. No GNU/Linux, por padrão, o ambiente chroot contém nada além de:"

#. type: itemize
#: guix-git/doc/guix.texi:1125
msgid "a minimal @code{/dev} directory, created mostly independently from the host @code{/dev}@footnote{``Mostly'', because while the set of files that appear in the chroot's @code{/dev} is fixed, most of these files can only be created if the host has them.};"
msgstr "um diretório @code{/dev} mínimo, criado principalmente independentemente do @code{/dev} do hospedeiro@footnote{``Principalmente'' porque enquanto o conjunto de arquivos que aparece no @code{/dev} do chroot é corrigido, a maioria desses arquivos só pode ser criada se o hospedeiro os possuir.};"

#. type: itemize
#: guix-git/doc/guix.texi:1129
msgid "the @code{/proc} directory; it only shows the processes of the container since a separate PID name space is used;"
msgstr "o diretório @code{/proc}; mostra apenas os processos do contêiner desde que um espaço de nome PID separado é usado;"

#. type: itemize
#: guix-git/doc/guix.texi:1133
msgid "@file{/etc/passwd} with an entry for the current user and an entry for user @file{nobody};"
msgstr "@file{/etc/passwd} com uma entrada para o usuário atual e uma entrada para o usuário @file{nobody};"

#. type: itemize
#: guix-git/doc/guix.texi:1136
msgid "@file{/etc/group} with an entry for the user's group;"
msgstr "@file{/etc/group} com uma entrada para o grupo de usuários;"

#. type: itemize
#: guix-git/doc/guix.texi:1140
msgid "@file{/etc/hosts} with an entry that maps @code{localhost} to @code{127.0.0.1};"
msgstr "@file{/etc/hosts} com uma entrada que mapeia @code{localhost} para @code{127.0.0.1};"

#. type: itemize
#: guix-git/doc/guix.texi:1143
msgid "a writable @file{/tmp} directory."
msgstr "um diretório @file{/tmp} com permissão de escrita."

#. type: Plain text
#: guix-git/doc/guix.texi:1149
msgid "The chroot does not contain a @file{/home} directory, and the @env{HOME} environment variable is set to the non-existent @file{/homeless-shelter}.  This helps to highlight inappropriate uses of @env{HOME} in the build scripts of packages."
msgstr "O chroot não contém um diretório @file{/home}, e a variável de ambiente @env{HOME} é definida como o inexistente @file{/homeless-shelter}. Isso ajuda a destacar usos inapropriados de @env{HOME} nos scripts de construção de pacotes."

#. type: Plain text
#: guix-git/doc/guix.texi:1154
msgid "All this is usually enough to ensure details of the environment do not influence build processes.  In some exceptional cases where more control is needed---typically over the date, kernel, or CPU---you can resort to a virtual build machine (@pxref{build-vm, virtual build machines})."
msgstr "Tudo isso geralmente é suficiente para garantir que os detalhes do ambiente não influenciem os processos de construção. Em alguns casos excepcionais em que mais controle é necessário --- normalmente sobre a data, kernel ou CPU --- você pode recorrer a uma máquina de construção virtual (@pxref{build-vm, máquinas de construção virtual})."

#. type: Plain text
#: guix-git/doc/guix.texi:1162
msgid "You can influence the directory where the daemon stores build trees @i{via} the @env{TMPDIR} environment variable.  However, the build tree within the chroot is always called @file{/tmp/guix-build-@var{name}.drv-0}, where @var{name} is the derivation name---e.g., @code{coreutils-8.24}.  This way, the value of @env{TMPDIR} does not leak inside build environments, which avoids discrepancies in cases where build processes capture the name of their build tree."
msgstr "Você pode influenciar o diretório onde o daemon armazena árvores de build @i{via} a variável de ambiente @env{TMPDIR}. No entanto, a árvore de build dentro do chroot é sempre chamada @file{/tmp/guix-build-@var{name}.drv-0}, onde @var{name} é o nome da derivação---por exemplo, @code{coreutils-8.24}. Dessa forma, o valor de @env{TMPDIR} não vaza dentro de ambientes de build, o que evita discrepâncias em casos em que os processos de build capturam o nome de sua árvore de build."

#. type: vindex
#: guix-git/doc/guix.texi:1163 guix-git/doc/guix.texi:4064
#, no-wrap
msgid "http_proxy"
msgstr "http_proxy"

#. type: vindex
#: guix-git/doc/guix.texi:1164 guix-git/doc/guix.texi:4065
#, no-wrap
msgid "https_proxy"
msgstr "https_proxy"

#. type: Plain text
#: guix-git/doc/guix.texi:1169
msgid "The daemon also honors the @env{http_proxy} and @env{https_proxy} environment variables for HTTP and HTTPS downloads it performs, be it for fixed-output derivations (@pxref{Derivations}) or for substitutes (@pxref{Substitutes})."
msgstr "O daemon também respeita as variáveis de ambiente @env{http_proxy} e @env{https_proxy} para downloads HTTP e HTTPS que ele realiza, seja para derivações de saída fixa (@pxref{Derivations}) ou para substitutos (@pxref{Substitutes})."

#. type: subsection
#: guix-git/doc/guix.texi:1172
#, no-wrap
msgid "Using the Offload Facility"
msgstr "Usando o recurso de descarregamento"

#. type: cindex
#: guix-git/doc/guix.texi:1174 guix-git/doc/guix.texi:1613
#, no-wrap
msgid "offloading"
msgstr "descarregamento"

#. type: cindex
#: guix-git/doc/guix.texi:1175
#, no-wrap
msgid "build hook"
msgstr "hook de compilação"

#. type: Plain text
#: guix-git/doc/guix.texi:1194
msgid "When desired, the build daemon can @dfn{offload} derivation builds to other machines running Guix, using the @code{offload} @dfn{build hook}@footnote{This feature is available only when @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} is present.}.  When that feature is enabled, a list of user-specified build machines is read from @file{/etc/guix/machines.scm}; every time a build is requested, for instance via @code{guix build}, the daemon attempts to offload it to one of the machines that satisfy the constraints of the derivation, in particular its system types---e.g., @code{x86_64-linux}.  A single machine can have multiple system types, either because its architecture natively supports it, via emulation (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}), or both.  Missing prerequisites for the build are copied over SSH to the target machine, which then proceeds with the build; upon success the output(s) of the build are copied back to the initial machine.  The offload facility comes with a basic scheduler that attempts to select the best machine.  The best machine is chosen among the available machines based on criteria such as:"
msgstr "Quando desejado, o daemon de compilação pode @dfn{offload} compilações de derivação para outras máquinas executando Guix, usando o @code{offload} @dfn{build hook}@footnote{Este recurso está disponível somente quando @uref{https://github.com/artyom-poptsov/guile-ssh, Guile-SSH} está presente.}. Quando esse recurso é habilitado, uma lista de máquinas de compilação especificadas pelo usuário é lida de @file{/etc/guix/machines.scm}; toda vez que uma compilação é solicitada, por exemplo via @code{guix build}, o daemon tenta descarregá-la para uma das máquinas que satisfazem as restrições da derivação, em particular seus tipos de sistema --- por exemplo, @code{x86_64-linux}. Uma única máquina pode ter vários tipos de sistema, seja porque sua arquitetura o suporta nativamente, via emulação (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU}), ou ambos. Os pré-requisitos ausentes para a compilação são copiados por SSH para a máquina de destino, que então prossegue com a compilação; em caso de sucesso, a(s) saída(s) da compilação são copiadas de volta para a máquina inicial. O recurso de offload vem com um agendador básico que tenta selecionar a melhor máquina. A melhor máquina é escolhida entre as máquinas disponíveis com base em critérios como:"

#. type: enumerate
#: guix-git/doc/guix.texi:1200
msgid "The availability of a build slot.  A build machine can have as many build slots (connections) as the value of the @code{parallel-builds} field of its @code{build-machine} object."
msgstr "A disponibilidade de um slot de build. Uma máquina de build pode ter tantos slots de build (conexões) quanto o valor do campo @code{parallel-builds} do seu objeto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1204
msgid "Its relative speed, as defined via the @code{speed} field of its @code{build-machine} object."
msgstr "Sua velocidade relativa, conforme definida pelo campo @code{speed} do seu objeto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1209
msgid "Its load.  The normalized machine load must be lower than a threshold value, configurable via the @code{overload-threshold} field of its @code{build-machine} object."
msgstr "Sua carga. A carga normalizada da máquina deve ser menor que um valor limite, configurável por meio do campo @code{overload-threshold} de seu objeto @code{build-machine}."

#. type: enumerate
#: guix-git/doc/guix.texi:1212
msgid "Disk space availability.  More than a 100 MiB must be available."
msgstr "Disponibilidade de espaço em disco. Mais de 100 MiB devem estar disponíveis."

#. type: Plain text
#: guix-git/doc/guix.texi:1215
msgid "The @file{/etc/guix/machines.scm} file typically looks like this:"
msgstr "O arquivo @file{/etc/guix/machines.scm} geralmente se parece com isso:"

#. type: lisp
#: guix-git/doc/guix.texi:1223
#, no-wrap
msgid ""
"(list (build-machine\n"
"        (name \"eightysix.example.org\")\n"
"        (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"        (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"        (user \"bob\")\n"
"        (speed 2.))     ;incredibly fast!\n"
"\n"
msgstr ""
"(list (build-machine\n"
"        (name \"eightysix.example.org\")\n"
"        (systems (list \"x86_64-linux\" \"i686-linux\"))\n"
"        (host-key \"ssh-ed25519 AAAAC3Nza@dots{}\")\n"
"        (user \"bob\")\n"
"        (speed 2.))     ;incredibly fast!\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:1229
#, no-wrap
msgid ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"
msgstr ""
"      (build-machine\n"
"        (name \"armeight.example.org\")\n"
"        (systems (list \"aarch64-linux\"))\n"
"        (host-key \"ssh-rsa AAAAB3Nza@dots{}\")\n"
"        (user \"alice\")\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:1233
#, no-wrap
msgid ""
"        ;; Remember 'guix offload' is spawned by\n"
"        ;; 'guix-daemon' as root.\n"
"        (private-key \"/root/.ssh/identity-for-guix\")))\n"
msgstr ""
"        ;; Lembre-se de que 'guix offload' é gerado por\n"
"        ;; 'guix-daemon' como root.\n"
"        (private-key \"/root/.ssh/identity-for-guix\")))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1239
msgid "In the example above we specify a list of two build machines, one for the @code{x86_64} and @code{i686} architectures and one for the @code{aarch64} architecture."
msgstr "No exemplo acima, especificamos uma lista de duas máquinas de compilação, uma para as arquiteturas @code{x86_64} e @code{i686} e uma para a arquitetura @code{aarch64}."

#. type: Plain text
#: guix-git/doc/guix.texi:1248
msgid "In fact, this file is---not surprisingly!---a Scheme file that is evaluated when the @code{offload} hook is started.  Its return value must be a list of @code{build-machine} objects.  While this example shows a fixed list of build machines, one could imagine, say, using DNS-SD to return a list of potential build machines discovered in the local network (@pxref{Introduction, Guile-Avahi,, guile-avahi, Using Avahi in Guile Scheme Programs}).  The @code{build-machine} data type is detailed below."
msgstr "De fato, esse arquivo é -- não surpreendentemente! -- um arquivo de Scheme que é avaliado quando o hook @code{offload} é iniciado. Seu valor de retorno deve ser uma lista de objetos de @code{build-machine}. Embora este exemplo mostre uma lista fixa de máquinas de compilação, pode-se imaginar, digamos, usando DNS-SD para retornar uma lista de possíveis máquinas de compilação descobertas na rede local (@pxref{Introduction, Guile-Avahi ,, guile-avahi, Using Avahi in Guile Scheme Programs}). O tipo de dados de @code{build-machine} está detalhado abaixo."

#. type: deftp
#: guix-git/doc/guix.texi:1249
#, no-wrap
msgid "{Data Type} build-machine"
msgstr "{Tipo de dados} build-machine"

#. type: deftp
#: guix-git/doc/guix.texi:1252
msgid "This data type represents build machines to which the daemon may offload builds.  The important fields are:"
msgstr "Esse tipo de dados representa máquinas de compilação nas quais o daemon pode descarregar compilações. Os campos importantes são:"

#. type: code{#1}
#: guix-git/doc/guix.texi:1255 guix-git/doc/guix.texi:8018
#: guix-git/doc/guix.texi:9087 guix-git/doc/guix.texi:18996
#: guix-git/doc/guix.texi:19095 guix-git/doc/guix.texi:19342
#: guix-git/doc/guix.texi:21843 guix-git/doc/guix.texi:23053
#: guix-git/doc/guix.texi:23378 guix-git/doc/guix.texi:28051
#: guix-git/doc/guix.texi:32006 guix-git/doc/guix.texi:33547
#: guix-git/doc/guix.texi:34344 guix-git/doc/guix.texi:34756
#: guix-git/doc/guix.texi:34811 guix-git/doc/guix.texi:35164
#: guix-git/doc/guix.texi:37231 guix-git/doc/guix.texi:38933
#: guix-git/doc/guix.texi:40659 guix-git/doc/guix.texi:40697
#: guix-git/doc/guix.texi:43974 guix-git/doc/guix.texi:43991
#: guix-git/doc/guix.texi:45714 guix-git/doc/guix.texi:47906
#: guix-git/doc/guix.texi:48323 guix-git/doc/guix.texi:53277
#, no-wrap
msgid "name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:1257
msgid "The host name of the remote machine."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:1258
#, no-wrap
msgid "systems"
msgstr "systems"

#. type: table
#: guix-git/doc/guix.texi:1261
msgid "The system types the remote machine supports---e.g., @code{(list \"x86_64-linux\" \"i686-linux\")}."
msgstr "O sistema digita os tipos que a máquina remota suporta, por exemplo, @code{(list \"x86_64-linux\" \"i686-linux\")}."

#. type: code{#1}
#: guix-git/doc/guix.texi:1262 guix-git/doc/guix.texi:23063
#, no-wrap
msgid "user"
msgstr "user"

#. type: table
#: guix-git/doc/guix.texi:1266
#, fuzzy
#| msgid "The user account to use when connecting to the remote machine over SSH.  Note that the SSH key pair must @emph{not} be passphrase-protected, to allow non-interactive logins."
msgid "The user account on the remote machine to use when connecting over SSH.  Note that the SSH key pair must @emph{not} be passphrase-protected, to allow non-interactive logins."
msgstr "A conta de usuário a ser usada ao conectar-se à máquina remota por SSH. Observe que o par de chaves SSH deve @emph{não} protegido por senha, para permitir logins não interativos."

#. type: item
#: guix-git/doc/guix.texi:1267
#, no-wrap
msgid "host-key"
msgstr "host-key"

#. type: table
#: guix-git/doc/guix.texi:1271
msgid "This must be the machine's SSH @dfn{public host key} in OpenSSH format.  This is used to authenticate the machine when we connect to it.  It is a long string that looks like this:"
msgstr "Essa deve ser a SSH @dfn{chave pública do host} da máquina no formato OpenSSH. Isso é usado para autenticar a máquina quando nos conectamos a ela. É uma string longa que se parece com isso:"

#. type: example
#: guix-git/doc/guix.texi:1274
#, no-wrap
msgid "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"
msgstr "ssh-ed25519 AAAAC3NzaC@dots{}mde+UhL hint@@example.org\n"

#. type: table
#: guix-git/doc/guix.texi:1279
msgid "If the machine is running the OpenSSH daemon, @command{sshd}, the host key can be found in a file such as @file{/etc/ssh/ssh_host_ed25519_key.pub}."
msgstr "Se a máquina estiver executando o daemon OpenSSH, @command{sshd}, a chave do host poderá ser encontrada em um arquivo como @file{/etc/ssh/ssh_host_ed25519_key.pub}."

#. type: table
#: guix-git/doc/guix.texi:1284
msgid "If the machine is running the SSH daemon of GNU@tie{}lsh, @command{lshd}, the host key is in @file{/etc/lsh/host-key.pub} or a similar file.  It can be converted to the OpenSSH format using @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"
msgstr "Se a máquina estiver executando o daemon SSH do GNU@tie{}lsh, @command{lshd}, a chave do host estará em @file{/etc/lsh/host-key.pub} ou em um arquivo semelhante. Ele pode ser convertido para o formato OpenSSH usando o @command{lsh-export-key} (@pxref{Converting keys,,, lsh, LSH Manual}):"

#. type: example
#: guix-git/doc/guix.texi:1288
#, no-wrap
msgid ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"
msgstr ""
"$ lsh-export-key --openssh < /etc/lsh/host-key.pub\n"
"ssh-rsa AAAAB3NzaC1yc2EAAAAEOp8FoQAAAQEAs1eB46LV@dots{}\n"

#. type: deftp
#: guix-git/doc/guix.texi:1293
msgid "A number of optional fields may be specified:"
msgstr "Vários campos opcionais podem ser especificados:"

#. type: item
#: guix-git/doc/guix.texi:1296 guix-git/doc/guix.texi:47240
#, no-wrap
msgid "@code{port} (default: @code{22})"
msgstr "@code{port} (padrão: @code{22})"

#. type: table
#: guix-git/doc/guix.texi:1298
msgid "Port number of SSH server on the machine."
msgstr "O número da porta para o servidor SSH na máquina."

#. type: item
#: guix-git/doc/guix.texi:1299
#, no-wrap
msgid "@code{private-key} (default: @file{~root/.ssh/id_rsa})"
msgstr "@code{private-key} (padrão: @file{~root/.ssh/id_rsa})"

#. type: table
#: guix-git/doc/guix.texi:1302
msgid "The SSH private key file to use when connecting to the machine, in OpenSSH format.  This key must not be protected with a passphrase."
msgstr "O arquivo de chave privada SSH a ser usado ao conectar-se à máquina, no formato OpenSSH. Esta chave não deve ser protegida com uma senha."

#. type: table
#: guix-git/doc/guix.texi:1305
msgid "Note that the default value is the private key @emph{of the root account}.  Make sure it exists if you use the default."
msgstr "Observe que o valor padrão é a chave privada @emph{da usuário root}. Verifique se ele existe se você usar o padrão."

#. type: item
#: guix-git/doc/guix.texi:1306
#, no-wrap
msgid "@code{compression} (default: @code{\"zlib@@openssh.com,zlib\"})"
msgstr "@code{compression} (padrão: @code{\"zlib@@openssh.com,zlib\"})"

#. type: itemx
#: guix-git/doc/guix.texi:1307
#, no-wrap
msgid "@code{compression-level} (default: @code{3})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:1309
msgid "The SSH-level compression methods and compression level requested."
msgstr "Os métodos de compactação no nível SSH e o nível de compactação solicitado."

#. type: table
#: guix-git/doc/guix.texi:1312
msgid "Note that offloading relies on SSH compression to reduce bandwidth usage when transferring files to and from build machines."
msgstr "Observe que o descarregamento depende da compactação SSH para reduzir o uso da largura de banda ao transferir arquivos de e para máquinas de compilação."

#. type: item
#: guix-git/doc/guix.texi:1313
#, no-wrap
msgid "@code{daemon-socket} (default: @code{\"/var/guix/daemon-socket/socket\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:1316
msgid "File name of the Unix-domain socket @command{guix-daemon} is listening to on that machine."
msgstr "O nome do arquivo do soquete do domínio Unix @command{guix-daemon} está escutando nessa máquina."

#. type: item
#: guix-git/doc/guix.texi:1317
#, fuzzy, no-wrap
#| msgid "@code{no-resolv?} (default: @code{#f})"
msgid "@code{overload-threshold} (default: @code{0.8})"
msgstr "@code{no-resolv?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:1323
msgid "The load threshold above which a potential offload machine is disregarded by the offload scheduler.  The value roughly translates to the total processor usage of the build machine, ranging from 0.0 (0%) to 1.0 (100%).  It can also be disabled by setting @code{overload-threshold} to @code{#f}."
msgstr "O limite de carga acima do qual uma máquina de offload potencial é desconsiderada pelo agendador de offload. O valor traduz aproximadamente o uso total do processador da máquina de build, variando de 0,0 (0%) a 1,0 (100%). Ele também pode ser desabilitado definindo @code{overload-threshold} para @code{#f}."

#. type: item
#: guix-git/doc/guix.texi:1324
#, no-wrap
msgid "@code{parallel-builds} (default: @code{1})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:1326
msgid "The number of builds that may run in parallel on the machine."
msgstr "O número de compilações que podem ser executadas paralelamente na máquina."

#. type: item
#: guix-git/doc/guix.texi:1327
#, no-wrap
msgid "@code{speed} (default: @code{1.0})"
msgstr "@code{speed} (padrão: @code{1.0})"

#. type: table
#: guix-git/doc/guix.texi:1330
msgid "A ``relative speed factor''.  The offload scheduler will tend to prefer machines with a higher speed factor."
msgstr "Um ``fator de velocidade relativo''. O agendador de descarregamento tenderá a preferir máquinas com um fator de velocidade mais alto."

#. type: item
#: guix-git/doc/guix.texi:1331
#, no-wrap
msgid "@code{features} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:1336
msgid "A list of strings denoting specific features supported by the machine.  An example is @code{\"kvm\"} for machines that have the KVM Linux modules and corresponding hardware support.  Derivations can request features by name, and they will be scheduled on matching build machines."
msgstr "Uma lista de strgins que denotam recursos específicos suportados pela máquina. Um exemplo é @code{\"kvm\"} para máquinas que possuem os módulos KVM Linux e o suporte de hardware correspondente. As derivações podem solicitar recursos pelo nome e serão agendadas nas máquinas de compilação correspondentes."

#. type: quotation
#: guix-git/doc/guix.texi:1346
msgid "On Guix System, instead of managing @file{/etc/guix/machines.scm} independently, you can choose to specify build machines directly in the @code{operating-system} declaration, in the @code{build-machines} field of @code{guix-configuration}.  @xref{guix-configuration-build-machines, @code{build-machines} field of @code{guix-configuration}}."
msgstr "No Guix System, em vez de gerenciar @file{/etc/guix/machines.scm} de forma independente, você pode escolher especificar máquinas de compilação diretamente na declaração @code{operating-system}, no campo @code{build-machines} de @code{guix-configuration}. @xref{guix-configuration-build-machines, campo @code{build-machines} de @code{guix-configuration}}."

#. type: Plain text
#: guix-git/doc/guix.texi:1350
msgid "The @command{guix} command must be in the search path on the build machines.  You can check whether this is the case by running:"
msgstr "O comando @command{guix} deve estar no caminho de pesquisa nas máquinas de compilação. Você pode verificar se este é o caso executando:"

#. type: example
#: guix-git/doc/guix.texi:1353
#, no-wrap
msgid "ssh build-machine guix repl --version\n"
msgstr "ssh build-machine guix repl --version\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1360
msgid "There is one last thing to do once @file{machines.scm} is in place.  As explained above, when offloading, files are transferred back and forth between the machine stores.  For this to work, you first need to generate a key pair on each machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}):"
msgstr "Há uma última coisa a fazer quando o @file{machines.scm} está em vigor. Como explicado acima, ao descarregar, os arquivos são transferidos entre os armazéns das máquinas. Para que isso funcione, primeiro você precisa gerar um par de chaves em cada máquina para permitir que o daemon exporte arquivos assinados de arquivos do armazém (@pxref{Invoking guix archive}):"

#. type: example
#: guix-git/doc/guix.texi:1363 guix-git/doc/guix.texi:47136
#, no-wrap
msgid "# guix archive --generate-key\n"
msgstr "# guix archive --generate-key\n"

#. type: quotation
#: guix-git/doc/guix.texi:1368
msgid "This key pair is not related to the SSH key pair that was previously mentioned in the description of the @code{build-machine} data type."
msgstr "Este par de chaves não está relacionado ao par de chaves SSH mencionado anteriormente na descrição do tipo de dados @code{build-machine}."

#. type: Plain text
#: guix-git/doc/guix.texi:1373
msgid "Each build machine must authorize the key of the master machine so that it accepts store items it receives from the master:"
msgstr "Cada máquina de construção deve autorizar a chave da máquina principal para que ela aceite itens do armazém que recebe do mestre:"

#. type: example
#: guix-git/doc/guix.texi:1376
#, no-wrap
msgid "# guix archive --authorize < master-public-key.txt\n"
msgstr "# guix archive --authorize < master-public-key.txt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1380
msgid "Likewise, the master machine must authorize the key of each build machine."
msgstr "Da mesma forma, a máquina principal deve autorizar a chave de cada máquina de compilação."

#. type: Plain text
#: guix-git/doc/guix.texi:1386
msgid "All the fuss with keys is here to express pairwise mutual trust relations between the master and the build machines.  Concretely, when the master receives files from a build machine (and @i{vice versa}), its build daemon can make sure they are genuine, have not been tampered with, and that they are signed by an authorized key."
msgstr "Todo esse barulho com as chaves está aqui para expressar relações de confiança mútua de pares entre a máquina mestre e as de compilação. Concretamente, quando o mestre recebe arquivos de uma máquina de compilação (e @i{vice-versa}), seu daemon de compilação pode garantir que eles sejam genuínos, não tenham sido violados e que sejam assinados por uma chave autorizada."

#. type: cindex
#: guix-git/doc/guix.texi:1387
#, no-wrap
msgid "offload test"
msgstr "offload test"

#. type: Plain text
#: guix-git/doc/guix.texi:1390
msgid "To test whether your setup is operational, run this command on the master node:"
msgstr "Para testar se sua configuração está operacional, execute este comando no nó principal:"

#. type: example
#: guix-git/doc/guix.texi:1393
#, no-wrap
msgid "# guix offload test\n"
msgstr "# guix offload test\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1399
msgid "This will attempt to connect to each of the build machines specified in @file{/etc/guix/machines.scm}, make sure Guix is available on each machine, attempt to export to the machine and import from it, and report any error in the process."
msgstr "Isso tentará se conectar a cada uma das máquinas de compilação especificadas em @file{/etc/guix/machines.scm}, certificar-se de que o Guix esteja disponível em cada máquina, tentará exportar para a máquina e importar dela e relatará qualquer erro no processo."

#. type: Plain text
#: guix-git/doc/guix.texi:1402
msgid "If you want to test a different machine file, just specify it on the command line:"
msgstr "Se você quiser testar um arquivo de máquina diferente, basta especificá-lo na linha de comando:"

#. type: example
#: guix-git/doc/guix.texi:1405
#, no-wrap
msgid "# guix offload test machines-qualif.scm\n"
msgstr "# guix offload test machines-qualif.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1409
msgid "Last, you can test the subset of the machines whose name matches a regular expression like this:"
msgstr "Por fim, você pode testar o subconjunto das máquinas cujo nome corresponde a uma expressão regular como esta:"

#. type: example
#: guix-git/doc/guix.texi:1412
#, no-wrap
msgid "# guix offload test machines.scm '\\.gnu\\.org$'\n"
msgstr "# guix offload test machines.scm '\\.gnu\\.org$'\n"

#. type: cindex
#: guix-git/doc/guix.texi:1414
#, no-wrap
msgid "offload status"
msgstr "offload status"

#. type: Plain text
#: guix-git/doc/guix.texi:1417
msgid "To display the current load of all build hosts, run this command on the main node:"
msgstr "Para exibir o carregamento atual de todos os hosts de compilação, execute este comando no nó principal:"

#. type: example
#: guix-git/doc/guix.texi:1420
#, no-wrap
msgid "# guix offload status\n"
msgstr "# guix offload status\n"

#. type: cindex
#: guix-git/doc/guix.texi:1426
#, no-wrap
msgid "SELinux, daemon policy"
msgstr "SELinux, política de daemons"

#. type: cindex
#: guix-git/doc/guix.texi:1427
#, no-wrap
msgid "mandatory access control, SELinux"
msgstr "controle de acesso obrigatório, SELinux"

#. type: cindex
#: guix-git/doc/guix.texi:1428
#, no-wrap
msgid "security, guix-daemon"
msgstr "segurança, guix-daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:1434
msgid "Guix includes an SELinux policy file at @file{etc/guix-daemon.cil} that can be installed on a system where SELinux is enabled, in order to label Guix files and to specify the expected behavior of the daemon.  Since Guix System does not provide an SELinux base policy, the daemon policy cannot be used on Guix System."
msgstr "O Guix inclui um arquivo de políticas do SELinux em @file{etc/guix-daemon.cil} que pode ser instalado em um sistema em que o SELinux está ativado, para rotular os arquivos do Guix e especificar o comportamento esperado do daemon. Como o Guix System não fornece uma política básica do SELinux, a política do daemon não pode ser usada no Guix System."

#. type: subsubsection
#: guix-git/doc/guix.texi:1435
#, no-wrap
msgid "Installing the SELinux policy"
msgstr "Instalando a política do SELinux"

#. type: cindex
#: guix-git/doc/guix.texi:1436
#, no-wrap
msgid "SELinux, policy installation"
msgstr "SELinux, instalação de política"

#. type: quotation
#: guix-git/doc/guix.texi:1441
msgid "The @code{guix-install.sh} binary installation script offers to perform the steps below for you (@pxref{Binary Installation})."
msgstr "O script de instalação binária @code{guix-install.sh} se oferece para executar as etapas abaixo para você (@pxref{Binary Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:1444
msgid "To install the policy run this command as root:"
msgstr "Para instalar a política, execute esse comando como root:"

#. type: example
#: guix-git/doc/guix.texi:1447
#, fuzzy, no-wrap
#| msgid ""
#| "# mkdir -p /usr/local/bin\n"
#| "# cd /usr/local/bin\n"
#| "# ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix\n"
msgid "semodule -i /var/guix/profiles/per-user/root/current-guix/share/selinux/guix-daemon.cil\n"
msgstr "semodule -i /var/guix/profiles/per-user/root/current-guix/share/selinux/guix-daemon.cil\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1451
msgid "Then, as root, relabel the file system, possibly after making it writable:"
msgstr "Então, como root, renomeie o sistema de arquivos, possivelmente depois de torná-lo gravável:"

#. type: example
#: guix-git/doc/guix.texi:1455
#, no-wrap
msgid ""
"mount -o remount,rw /gnu/store\n"
"restorecon -R /gnu /var/guix\n"
msgstr ""
"mount -o remount,rw /gnu/store\n"
"restorecon -R /gnu /var/guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1460
msgid "At this point you can start or restart @command{guix-daemon}; on a distribution that uses systemd as its service manager, you can do that with:"
msgstr "Neste ponto, você pode iniciar ou reiniciar @command{guix-daemon}; em uma distribuição que usa systemd como seu gerenciador de serviços, você pode fazer isso com:"

#. type: example
#: guix-git/doc/guix.texi:1463
#, fuzzy, no-wrap
#| msgid "security, guix-daemon"
msgid "systemctl restart guix-daemon\n"
msgstr "systemctl restart guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1469
msgid "Once the policy is installed, the file system has been relabeled, and the daemon has been restarted, it should be running in the @code{guix_daemon_t} context.  You can confirm this with the following command:"
msgstr "Depois que a política é instalada, o sistema de arquivos foi rotulado novamente e o daemon foi reiniciado, ele deve estar em execução no contexto @code{guix_daemon_t}. Você pode confirmar isso com o seguinte comando:"

#. type: example
#: guix-git/doc/guix.texi:1472
#, no-wrap
msgid "ps -Zax | grep guix-daemon\n"
msgstr "ps -Zax | grep guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1477
msgid "Monitor the SELinux log files as you run a command like @code{guix build hello} to convince yourself that SELinux permits all necessary operations."
msgstr "Monitore os arquivos de log do SELinux enquanto executa um comando como @code{guix build hello} para se convencer de que o SELinux permite todas as operações necessárias."

#. type: cindex
#: guix-git/doc/guix.texi:1479
#, no-wrap
msgid "SELinux, limitations"
msgstr "SELinux, limitações"

#. type: Plain text
#: guix-git/doc/guix.texi:1484
msgid "This policy is not perfect.  Here is a list of limitations or quirks that should be considered when deploying the provided SELinux policy for the Guix daemon."
msgstr "Esta política não é perfeita. Aqui está uma lista de limitações ou peculiaridades que devem ser consideradas ao implementar a política SELinux fornecida para o daemon Guix."

#. type: enumerate
#: guix-git/doc/guix.texi:1491
#, fuzzy
msgid "@code{guix_daemon_socket_t} isn’t actually used.  None of the socket operations involve contexts that have anything to do with @code{guix_daemon_socket_t}.  It doesn’t hurt to have this unused label, but it would be preferable to define socket rules for only this label."
msgstr "@code{guix_daemon_socket_t} não é realmente usado. Nenhuma das operações de soquete envolve contextos que têm algo a ver com @code{guix_daemon_socket_t}. Não faz mal ter esse rótulo não utilizado, mas seria preferível definir regras de soquete apenas para esse rótulo."

#. type: enumerate
#: guix-git/doc/guix.texi:1502
msgid "@code{guix gc} cannot access arbitrary links to profiles.  By design, the file label of the destination of a symlink is independent of the file label of the link itself.  Although all profiles under @file{$localstatedir} are labelled, the links to these profiles inherit the label of the directory they are in.  For links in the user’s home directory this will be @code{user_home_t}.  But for links from the root user’s home directory, or @file{/tmp}, or the HTTP server’s working directory, etc, this won’t work.  @code{guix gc} would be prevented from reading and following these links."
msgstr "@code{guix gc} não pode acessar links arbitrários para perfis. Por design, o rótulo do arquivo do destino de uma ligação simbólica é independente do rótulo do arquivo do próprio link. Embora todos os perfis em @file{$localstatedir} estejam rotulados, as ligações para esses perfis herdam o rótulo do diretório em que estão. Para as ligações no diretório pessoal do usuário, será @code{user_home_t}. Mas, para ligações do diretório pessoal do usuário root, ou @file{/tmp}, ou do diretório de trabalho do servidor HTTP etc., isso não funcionará. @code{guix gc} seria impedido de ler e seguir essas ligações."

#. type: enumerate
#: guix-git/doc/guix.texi:1507
msgid "The daemon’s feature to listen for TCP connections might no longer work.  This might require extra rules, because SELinux treats network sockets differently from files."
msgstr "O recurso do daemon de escutar conexões TCP pode não funcionar mais. Isso pode exigir regras extras, porque o SELinux trata os soquetes de rede de maneira diferente dos arquivos."

#. type: enumerate
#: guix-git/doc/guix.texi:1518
msgid "Currently all files with a name matching the regular expression @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon} are assigned the label @code{guix_daemon_exec_t}; this means that @emph{any} file with that name in any profile would be permitted to run in the @code{guix_daemon_t} domain.  This is not ideal.  An attacker could build a package that provides this executable and convince a user to install and run it, which lifts it into the @code{guix_daemon_t} domain.  At that point SELinux could not prevent it from accessing files that are allowed for processes in that domain."
msgstr "Atualmente, todos os arquivos com um nome correspondente à expressão regular @code{/gnu/store/.+-(guix-.+|profile)/bin/guix-daemon} recebem o rótulo @code{guix_daemon_exec_t}; isso significa que @emph{qualquer} arquivo com esse nome em qualquer perfil poderá ser executado no domínio de @code{guix_daemon_t}. Isto não é o ideal. Um invasor pode criar um pacote que forneça esse executável e convencer um usuário a instalar e executá-lo, o que o eleva ao domínio de @code{guix_daemon_t}. Nesse ponto, o SELinux não poderia impedir o acesso a arquivos permitidos para processos nesse domínio."

#. type: enumerate
#: guix-git/doc/guix.texi:1523
msgid "You will need to relabel the store directory after all upgrades to @file{guix-daemon}, such as after running @code{guix pull}.  Assuming the store is in @file{/gnu}, you can do this with @code{restorecon -vR /gnu}, or by other means provided by your operating system."
msgstr "Você precisará renomear o diretório store após todas as atualizações para @file{guix-daemon}, como após executar @code{guix pull}. Supondo que o store esteja em @file{/gnu}, você pode fazer isso com @code{restorecon -vR /gnu}, ou por outros meios fornecidos pelo seu sistema operacional."

#. type: enumerate
#: guix-git/doc/guix.texi:1531
msgid "We could generate a much more restrictive policy at installation time, so that only the @emph{exact} file name of the currently installed @code{guix-daemon} executable would be labelled with @code{guix_daemon_exec_t}, instead of using a broad regular expression.  The downside is that root would have to install or upgrade the policy at installation time whenever the Guix package that provides the effectively running @code{guix-daemon} executable is upgraded."
msgstr "Poderíamos gerar uma política muito mais restritiva no momento da instalação, para que apenas o nome do arquivo @emph{exato} do executável @code{guix-daemon} atualmente instalado seja rotulado com @code{guix_daemon_exec_t}, em vez de usar um amplo expressão regular. A desvantagem é que o root precisaria instalar ou atualizar a política no momento da instalação sempre que o pacote Guix que fornece o executável @code{guix-daemon} em execução efetiva for atualizado."

#. type: section
#: guix-git/doc/guix.texi:1534
#, no-wrap
msgid "Invoking @command{guix-daemon}"
msgstr "Invocando @command{guix-daemon}"

#. type: command{#1}
#: guix-git/doc/guix.texi:1535
#, fuzzy, no-wrap
#| msgid "Invoking guix-daemon"
msgid "guix-daemon"
msgstr "Invocando guix-daemon"

#. type: Plain text
#: guix-git/doc/guix.texi:1540
msgid "The @command{guix-daemon} program implements all the functionality to access the store.  This includes launching build processes, running the garbage collector, querying the availability of a build result, etc.  It is normally run as @code{root} like this:"
msgstr "O programa @command{guix-daemon} implementa todas as funcionalidades para acessar o armazém. Isso inclui iniciar processos de compilação, executar o coletor de lixo, consultar a disponibilidade de um resultado da compilação etc. É normalmente executado como @code{root}, assim:"

#. type: cindex
#: guix-git/doc/guix.texi:1545
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix-daemon}"
msgid "socket activation, for @command{guix-daemon}"
msgstr "Invocando @command{guix-daemon}"

#. type: Plain text
#: guix-git/doc/guix.texi:1549
msgid "This daemon can also be started following the systemd ``socket activation'' protocol (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr "Este daemon também pode ser iniciado seguindo o protocolo de ``ativação de soquete'' do systemd (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."

#. type: Plain text
#: guix-git/doc/guix.texi:1551
msgid "For details on how to set it up, @pxref{Setting Up the Daemon}."
msgstr "Para detalhes sobre como configurá-lo, @pxref{Setting Up the Daemon}."

#. type: cindex
#: guix-git/doc/guix.texi:1553
#, no-wrap
msgid "container, build environment"
msgstr "contêiner, ambiente de compilação"

#. type: cindex
#: guix-git/doc/guix.texi:1555 guix-git/doc/guix.texi:3128
#: guix-git/doc/guix.texi:4045 guix-git/doc/guix.texi:16664
#, no-wrap
msgid "reproducible builds"
msgstr "compilações reproduzíveis"

#. type: Plain text
#: guix-git/doc/guix.texi:1567
msgid "By default, @command{guix-daemon} launches build processes under different UIDs, taken from the build group specified with @option{--build-users-group}.  In addition, each build process is run in a chroot environment that only contains the subset of the store that the build process depends on, as specified by its derivation (@pxref{Programming Interface, derivation}), plus a set of specific system directories.  By default, the latter contains @file{/dev} and @file{/dev/pts}.  Furthermore, on GNU/Linux, the build environment is a @dfn{container}: in addition to having its own file system tree, it has a separate mount name space, its own PID name space, network name space, etc.  This helps achieve reproducible builds (@pxref{Features})."
msgstr "Por padrão, @command{guix-daemon} inicia processos de compilação sob diferentes UIDs, obtidos do grupo de compilação especificado com @option{--build-users-group}. Além disso, cada processo de compilação é executado em um ambiente chroot que contém apenas o subconjunto do armazém do qual o processo de compilação depende, conforme especificado por sua derivação (@pxref{Programming Interface, derivação}), mais um conjunto de diretórios de sistema específicos. Por padrão, o último contém @file{/dev} e @file{/dev/pts}. Além disso, no GNU/Linux, o ambiente de compilação é um @dfn{container}: além de ter sua própria árvore de sistema de arquivos, ele tem um espaço de nome de montagem separado, seu próprio espaço de nome PID, espaço de nome de rede, etc. Isso ajuda a obter compilações reproduzíveis (@pxref{Features})."

#. type: Plain text
#: guix-git/doc/guix.texi:1573
msgid "When the daemon performs a build on behalf of the user, it creates a build directory under @file{/tmp} or under the directory specified by its @env{TMPDIR} environment variable.  This directory is shared with the container for the duration of the build, though within the container, the build tree is always called @file{/tmp/guix-build-@var{name}.drv-0}."
msgstr "Quando o daemon executa uma compilação em nome do usuário, ele cria um diretório de compilação em @file{/tmp} ou no diretório especificado por sua variável de ambiente @env{TMPDIR}. Esse diretório é compartilhado com o contêiner durante a compilação, embora dentro do contêiner, a árvore de compilação seja sempre chamada de @file{/tmp/guix-build-@var{name}.drv-0}."

#. type: Plain text
#: guix-git/doc/guix.texi:1577
msgid "The build directory is automatically deleted upon completion, unless the build failed and the client specified @option{--keep-failed} (@pxref{Common Build Options, @option{--keep-failed}})."
msgstr "O diretório de compilação é excluído automaticamente após a conclusão, a menos que a compilação falhe e o cliente tenha especificado @option{--keep-failed} (@pxref{Common Build Options, @option{--keep-failed}})."

#. type: Plain text
#: guix-git/doc/guix.texi:1583
msgid "The daemon listens for connections and spawns one sub-process for each session started by a client (one of the @command{guix} sub-commands).  The @command{guix processes} command allows you to get an overview of the activity on your system by viewing each of the active sessions and clients.  @xref{Invoking guix processes}, for more information."
msgstr "O daemon escuta conexões e gera um subprocesso para cada sessão iniciada por um cliente (um dos subcomandos @command{guix}). O comando @command{guix processes} permite que você tenha uma visão geral da atividade no seu sistema visualizando cada uma das sessões e clientes ativos. @xref{Invoking guix processes}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:1585
msgid "The following command-line options are supported:"
msgstr "As seguintes opções de linha de comando são suportadas:"

#. type: item
#: guix-git/doc/guix.texi:1587
#, no-wrap
msgid "--build-users-group=@var{group}"
msgstr "--build-users-group=@var{grupo}"

#. type: table
#: guix-git/doc/guix.texi:1590
msgid "Take users from @var{group} to run build processes (@pxref{Setting Up the Daemon, build users})."
msgstr "Obtém os usuários do @var{grupo} para executar os processos de compilação (@pxref{Setting Up the Daemon, usuários de compilação})."

#. type: item
#: guix-git/doc/guix.texi:1591 guix-git/doc/guix.texi:13280
#, no-wrap
msgid "--no-substitutes"
msgstr "--no-substitutes"

#. type: cindex
#: guix-git/doc/guix.texi:1592 guix-git/doc/guix.texi:3140
#: guix-git/doc/guix.texi:3782
#, no-wrap
msgid "substitutes"
msgstr "substitutos"

#. type: table
#: guix-git/doc/guix.texi:1596 guix-git/doc/guix.texi:13284
msgid "Do not use substitutes for build products.  That is, always build things locally instead of allowing downloads of pre-built binaries (@pxref{Substitutes})."
msgstr "Não use substitutos para compilar produtos. Ou seja, sempre crie coisas localmente, em vez de permitir downloads de binários pré-compilados (@pxref{Substitutes})."

#. type: table
#: guix-git/doc/guix.texi:1600
msgid "When the daemon runs with @option{--no-substitutes}, clients can still explicitly enable substitution @i{via} the @code{set-build-options} remote procedure call (@pxref{The Store})."
msgstr "Quando o daemon é executado com @option{--no-substitutes}, os clientes ainda podem habilitar explicitamente a substituição por meio da chamada de procedimento remoto @code{set-build-options} (@pxref{The Store})."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1602
msgid "daemon-substitute-urls"
msgstr "daemon-substitute-urls"

#. type: item
#: guix-git/doc/guix.texi:1602 guix-git/doc/guix.texi:13267
#: guix-git/doc/guix.texi:16066 guix-git/doc/guix.texi:16816
#: guix-git/doc/guix.texi:17046
#, no-wrap
msgid "--substitute-urls=@var{urls}"
msgstr "--substitute-urls=@var{urls}"

#. type: table
#: guix-git/doc/guix.texi:1606
#, fuzzy
#| msgid "Consider @var{urls} the default whitespace-separated list of substitute source URLs.  When this option is omitted, @indicateurl{https://@value{SUBSTITUTE-SERVER}} is used."
msgid "Consider @var{urls} the default whitespace-separated list of substitute source URLs.  When this option is omitted, @indicateurl{@value{SUBSTITUTE-URLS}} is used."
msgstr "Considere @var{urls} a lista padrão separada por espaços em branco de URLs de fontes substitutos. Quando essa opção é omitida, @indicateurl{https://@value{SUBSTITUTE-SERVER}} é usado."

#. type: table
#: guix-git/doc/guix.texi:1609
msgid "This means that substitutes may be downloaded from @var{urls}, as long as they are signed by a trusted signature (@pxref{Substitutes})."
msgstr "Isso significa que os substitutos podem ser baixados de @var{urls}, desde que assinados por uma assinatura confiável (@pxref{Substitutes})."

#. type: table
#: guix-git/doc/guix.texi:1612
msgid "@xref{Getting Substitutes from Other Servers}, for more information on how to configure the daemon to get substitutes from other servers."
msgstr "@xref{Getting Substitutes from Other Servers}, para mais informações sobre como configurar o daemon para obter substitutos de outros servidores."

#. type: item
#: guix-git/doc/guix.texi:1614 guix-git/doc/guix.texi:13303
#, no-wrap
msgid "--no-offload"
msgstr "--no-offload"

#. type: table
#: guix-git/doc/guix.texi:1618 guix-git/doc/guix.texi:13307
msgid "Do not use offload builds to other machines (@pxref{Daemon Offload Setup}).  That is, always build things locally instead of offloading builds to remote machines."
msgstr "Não use compilações de offload para outras máquinas (@pxref{Daemon Offload Setup}). Ou seja, sempre compile as coisas localmente em vez de descarregar compilações para máquinas remotas."

#. type: item
#: guix-git/doc/guix.texi:1619
#, no-wrap
msgid "--cache-failures"
msgstr "--cache-failures"

#. type: table
#: guix-git/doc/guix.texi:1621
msgid "Cache build failures.  By default, only successful builds are cached."
msgstr "Armazena em cache as compilações que falharam. Por padrão, apenas compilações bem-sucedidas são armazenadas em cache."

#. type: table
#: guix-git/doc/guix.texi:1626
msgid "When this option is used, @command{guix gc --list-failures} can be used to query the set of store items marked as failed; @command{guix gc --clear-failures} removes store items from the set of cached failures.  @xref{Invoking guix gc}."
msgstr "Quando essa opção é usada, o @command{guix gc --list-failures} pode ser usado para consultar o conjunto de itens do armazém marcados como com falha; O @command{guix gc --clear-failures} remove os itens do armazém do conjunto de falhas em cache. @xref{Invoking guix gc}."

#. type: item
#: guix-git/doc/guix.texi:1627 guix-git/doc/guix.texi:13333
#, no-wrap
msgid "--cores=@var{n}"
msgstr "--cores=@var{n}"

#. type: itemx
#: guix-git/doc/guix.texi:1628 guix-git/doc/guix.texi:13334
#, no-wrap
msgid "-c @var{n}"
msgstr "-c @var{n}"

#. type: table
#: guix-git/doc/guix.texi:1631
msgid "Use @var{n} CPU cores to build each derivation; @code{0} means as many as available."
msgstr "Usa @var{n} núcleos de CPU para compilar cada derivação; @code{0} significa todos disponíveis."

#. type: table
#: guix-git/doc/guix.texi:1635
msgid "The default value is @code{0}, but it may be overridden by clients, such as the @option{--cores} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr "O valor padrão é @code{0}, mas pode ser substituído pelos clientes, como a opção @option{--cores} de @command{guix build} (@pxref{Invoking guix build})."

#. type: table
#: guix-git/doc/guix.texi:1639
msgid "The effect is to define the @env{NIX_BUILD_CORES} environment variable in the build process, which can then use it to exploit internal parallelism---for instance, by running @code{make -j$NIX_BUILD_CORES}."
msgstr "O efeito é definir a variável de ambiente @env{NIX_BUILD_CORES} no processo de compilação, que pode então usá-la para explorar o paralelismo interno — por exemplo, executando @code{make -j$NIX_BUILD_CORES}."

#. type: item
#: guix-git/doc/guix.texi:1640 guix-git/doc/guix.texi:13338
#, no-wrap
msgid "--max-jobs=@var{n}"
msgstr "--max-jobs=@var{n}"

#. type: itemx
#: guix-git/doc/guix.texi:1641 guix-git/doc/guix.texi:13339
#, no-wrap
msgid "-M @var{n}"
msgstr "-M @var{n}"

#. type: table
#: guix-git/doc/guix.texi:1646
msgid "Allow at most @var{n} build jobs in parallel.  The default value is @code{1}.  Setting it to @code{0} means that no builds will be performed locally; instead, the daemon will offload builds (@pxref{Daemon Offload Setup}), or simply fail."
msgstr "Permite no máximo @var{n} tarefas de compilação em paralelo. O valor padrão é @code{1}. Definir como @code{0} significa que nenhuma compilação será executada localmente; em vez disso, o daemon descarregará as compilações (@pxref{Daemon Offload Setup}) ou simplesmente falhará."

#. type: item
#: guix-git/doc/guix.texi:1647 guix-git/doc/guix.texi:13308
#, no-wrap
msgid "--max-silent-time=@var{seconds}"
msgstr "--max-silent-time=@var{segundos}"

#. type: table
#: guix-git/doc/guix.texi:1650 guix-git/doc/guix.texi:13311
msgid "When the build or substitution process remains silent for more than @var{seconds}, terminate it and report a build failure."
msgstr "Quando o processo de compilação ou substituição permanecer em silêncio por mais de @var{segundos}, encerra-o e relata uma falha de compilação."

#. type: table
#: guix-git/doc/guix.texi:1652
#, fuzzy
#| msgid "The default value is @code{0}, which disables the timeout."
msgid "The default value is @code{3600} (one hour)."
msgstr "O valor padrão é @code{0}, que desativa o tempo limite."

#. type: table
#: guix-git/doc/guix.texi:1655
msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--max-silent-time}})."
msgstr "O valor especificado aqui pode ser substituído pelos clientes (@pxref{Common Build Options, @option{--max-silent-time}})."

#. type: item
#: guix-git/doc/guix.texi:1656 guix-git/doc/guix.texi:13315
#, no-wrap
msgid "--timeout=@var{seconds}"
msgstr "--timeout=@var{segundos}"

#. type: table
#: guix-git/doc/guix.texi:1659 guix-git/doc/guix.texi:13318
msgid "Likewise, when the build or substitution process lasts for more than @var{seconds}, terminate it and report a build failure."
msgstr "Da mesma forma, quando o processo de compilação ou substituição durar mais que @var{segundos}, encerra-o e relata uma falha de compilação."

#. type: table
#: guix-git/doc/guix.texi:1661
msgid "The default value is 24 hours."
msgstr "O valor padrão é 24 horas."

#. type: table
#: guix-git/doc/guix.texi:1664
msgid "The value specified here can be overridden by clients (@pxref{Common Build Options, @option{--timeout}})."
msgstr "O valor especificado aqui pode ser substituído pelos clientes (@pxref{Common Build Options, @option{--timeout}})."

#. type: item
#: guix-git/doc/guix.texi:1665
#, no-wrap
msgid "--rounds=@var{N}"
msgstr "--rounds=@var{N}"

#. type: table
#: guix-git/doc/guix.texi:1670
msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical.  Note that this setting can be overridden by clients such as @command{guix build} (@pxref{Invoking guix build})."
msgstr "Compila cada derivação @var{n} vezes seguidas e gera um erro se os resultados consecutivos da compilação não forem idênticos bit a bit. Observe que essa configuração pode ser substituída por clientes como @command{guix build} (@pxref{Invoking guix build})."

#. type: table
#: guix-git/doc/guix.texi:1674 guix-git/doc/guix.texi:13302
#: guix-git/doc/guix.texi:14038
msgid "When used in conjunction with @option{--keep-failed}, the differing output is kept in the store, under @file{/gnu/store/@dots{}-check}.  This makes it easy to look for differences between the two results."
msgstr "Quando usado em conjunto com @option{--keep-failed}, uma saída de comparação é mantida no armazém, sob  @file{/gnu/store/@dots{}-check}. Isso facilita procurar por diferenças entre os dois resultados."

#. type: item
#: guix-git/doc/guix.texi:1675
#, no-wrap
msgid "--debug"
msgstr "--debug"

#. type: table
#: guix-git/doc/guix.texi:1677
msgid "Produce debugging output."
msgstr "Produz uma saída de depuração."

#. type: table
#: guix-git/doc/guix.texi:1681
msgid "This is useful to debug daemon start-up issues, but then it may be overridden by clients, for example the @option{--verbosity} option of @command{guix build} (@pxref{Invoking guix build})."
msgstr "Isso é útil para depurar problemas de inicialização do daemon, mas pode ser substituído pelos clientes, por exemplo, a opção @option{--verbosity} de @command{guix build} (@pxref{Invoking guix build})."

#. type: item
#: guix-git/doc/guix.texi:1682
#, no-wrap
msgid "--chroot-directory=@var{dir}"
msgstr "--chroot-directory=@var{dir}"

#. type: table
#: guix-git/doc/guix.texi:1684
msgid "Add @var{dir} to the build chroot."
msgstr "adiciona @var{dir} ao chroot de compilação."

#. type: table
#: guix-git/doc/guix.texi:1690
msgid "Doing this may change the result of build processes---for instance if they use optional dependencies found in @var{dir} when it is available, and not otherwise.  For that reason, it is not recommended to do so.  Instead, make sure that each derivation declares all the inputs that it needs."
msgstr "Isso pode alterar o resultado dos processos de compilação -- por exemplo, se eles usam dependências opcionais encontradas em @var{dir} quando estão disponíveis, e não o contrário. Por esse motivo, não é recomendável fazê-lo. Em vez disso, verifique se cada derivação declara todas as entradas necessárias."

#. type: item
#: guix-git/doc/guix.texi:1691
#, no-wrap
msgid "--disable-chroot"
msgstr "--disable-chroot"

#. type: table
#: guix-git/doc/guix.texi:1693
msgid "Disable chroot builds."
msgstr "Desabilita compilações em chroot."

#. type: quotation
#: guix-git/doc/guix.texi:1700
#, fuzzy
msgid "Using this option is not recommended since it allows build processes to gain access to undeclared dependencies, to interfere with one another, and more generally to do anything that can be done with the authority of build users or that of the daemon---which includes at least the ability to tamper with any file in the store!"
msgstr "O uso dessa opção não é recomendado, pois, novamente, isso permitiria que os processos de compilação obtivessem acesso a dependências não declaradas. Porém, é necessário quando o @command{guix-daemon} está sendo executado em uma conta de usuário sem privilégios."

#. type: quotation
#: guix-git/doc/guix.texi:1704
msgid "You may find it necessary, though, when support for Linux unprivileged user namespaces is missing (@pxref{Build Environment Setup}).  Use at your own risk!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1706
#, no-wrap
msgid "--isolate-host-loopback"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:1711
msgid "Prevent fixed-output chroot builds from accessing the host loopback.  When this is used, fixed-output builds will have their own loopback interface, and attempts to connect to 127.0.0.1 or ::1 will instead attempt to connect to its local loopback interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:1712
#, no-wrap
msgid "--log-compression=@var{type}"
msgstr "--log-compression=@var{tipo}"

#. type: table
#: guix-git/doc/guix.texi:1715
msgid "Compress build logs according to @var{type}, one of @code{gzip}, @code{bzip2}, or @code{none}."
msgstr "Compacta logs de compilação de aconrdo com @var{tipo}, que pode ser um entre @code{gzip}, @code{bzip2} e @code{none}."

#. type: table
#: guix-git/doc/guix.texi:1719
msgid "Unless @option{--lose-logs} is used, all the build logs are kept in the @var{localstatedir}.  To save space, the daemon automatically compresses them with gzip by default."
msgstr "A menos que @option{--lose-logs} seja usado, todos os logs de build são mantidos em @var{localstatedir}. Para economizar espaço, o daemon os compacta automaticamente com gzip por padrão."

#. type: item
#: guix-git/doc/guix.texi:1720
#, no-wrap
msgid "--discover[=yes|no]"
msgstr "--discover[=yes|no]"

#. type: table
#: guix-git/doc/guix.texi:1723 guix-git/doc/guix.texi:20320
msgid "Whether to discover substitute servers on the local network using mDNS and DNS-SD."
msgstr "Se deve descobrir servidores substitutos na rede local usando mDNS e DNS-SD."

#. type: table
#: guix-git/doc/guix.texi:1726
msgid "This feature is still experimental.  However, here are a few considerations."
msgstr "Este recurso ainda é experimental. No entanto, aqui estão algumas considerações."

#. type: enumerate
#: guix-git/doc/guix.texi:1730
msgid "It might be faster/less expensive than fetching from remote servers;"
msgstr "Pode ser mais rápido/menos caro do que buscar em servidores remotos;"

#. type: enumerate
#: guix-git/doc/guix.texi:1733
msgid "There are no security risks, only genuine substitutes will be used (@pxref{Substitute Authentication});"
msgstr "Não há riscos de segurança, apenas substitutos genuínos serão usados (@pxref{Substitute Authentication});"

#. type: enumerate
#: guix-git/doc/guix.texi:1737
msgid "An attacker advertising @command{guix publish} on your LAN cannot serve you malicious binaries, but they can learn what software you’re installing;"
msgstr "Um invasor anunciando @command{guix publish} na sua LAN não pode fornecer binários maliciosos, mas pode descobrir qual software você está instalando;"

#. type: enumerate
#: guix-git/doc/guix.texi:1740
msgid "Servers may serve substitute over HTTP, unencrypted, so anyone on the LAN can see what software you’re installing."
msgstr "Os servidores podem servir substitutos via HTTP, sem criptografia, para que qualquer pessoa na LAN possa ver qual software você está instalando."

#. type: table
#: guix-git/doc/guix.texi:1744
msgid "It is also possible to enable or disable substitute server discovery at run-time by running:"
msgstr "Também é possível habilitar ou desabilitar a descoberta de servidor substituto em tempo de execução executando:"

#. type: example
#: guix-git/doc/guix.texi:1748
#, no-wrap
msgid ""
"herd discover guix-daemon on\n"
"herd discover guix-daemon off\n"
msgstr ""
"herd discover guix-daemon on\n"
"herd discover guix-daemon off\n"

#. type: item
#: guix-git/doc/guix.texi:1750
#, no-wrap
msgid "--disable-deduplication"
msgstr "--disable-deduplication"

#. type: cindex
#: guix-git/doc/guix.texi:1751 guix-git/doc/guix.texi:4541
#, no-wrap
msgid "deduplication"
msgstr "deduplicação"

#. type: table
#: guix-git/doc/guix.texi:1753
msgid "Disable automatic file ``deduplication'' in the store."
msgstr "Desabilita ``deduplicação'' automática de arquivos no armazém."

#. type: table
#: guix-git/doc/guix.texi:1760
msgid "By default, files added to the store are automatically ``deduplicated'': if a newly added file is identical to another one found in the store, the daemon makes the new file a hard link to the other file.  This can noticeably reduce disk usage, at the expense of slightly increased input/output load at the end of a build process.  This option disables this optimization."
msgstr "Por padrão, os arquivos adicionados ao armazém são automaticamente ``deduplicados'': se um arquivo recém-adicionado for idêntico a outro encontrado no armazém, o daemon tornará o novo arquivo um link físico para o outro arquivo. Isso pode reduzir notavelmente o uso do disco, às custas de um leve aumento na carga de entrada/saída no final de um processo de criação. Esta opção desativa essa otimização."

#. type: item
#: guix-git/doc/guix.texi:1761
#, no-wrap
msgid "--gc-keep-outputs[=yes|no]"
msgstr "--gc-keep-outputs[=yes|no]"

#. type: table
#: guix-git/doc/guix.texi:1764
msgid "Tell whether the garbage collector (GC) must keep outputs of live derivations."
msgstr "Diz se o coletor de lixo (GC) deve manter as saídas de derivações vivas."

#. type: cindex
#: guix-git/doc/guix.texi:1765 guix-git/doc/guix.texi:4353
#, no-wrap
msgid "GC roots"
msgstr "raízes de GC"

#. type: cindex
#: guix-git/doc/guix.texi:1766 guix-git/doc/guix.texi:4354
#, no-wrap
msgid "garbage collector roots"
msgstr "raízes de coletor de lixo"

#. type: table
#: guix-git/doc/guix.texi:1772
msgid "When set to @code{yes}, the GC will keep the outputs of any live derivation available in the store---the @file{.drv} files.  The default is @code{no}, meaning that derivation outputs are kept only if they are reachable from a GC root.  @xref{Invoking guix gc}, for more on GC roots."
msgstr "Quando definido como @code{yes}, o GC manterá as saídas de qualquer derivação ativa disponível no armazém---os arquivos @file{.drv}. O padrão é @code{no}, o que significa que as saídas de derivação são mantidas somente se forem acessíveis a partir de uma raiz do GC. @xref{Invoking guix gc}, para mais informações sobre raízes do GC."

#. type: item
#: guix-git/doc/guix.texi:1773
#, no-wrap
msgid "--gc-keep-derivations[=yes|no]"
msgstr "--gc-keep-derivations[=yes|no]"

#. type: table
#: guix-git/doc/guix.texi:1776
msgid "Tell whether the garbage collector (GC) must keep derivations corresponding to live outputs."
msgstr "Diz se o coletor de lixo (GC) deve manter as derivações correspondentes às saídas vivas."

#. type: table
#: guix-git/doc/guix.texi:1782
msgid "When set to @code{yes}, as is the case by default, the GC keeps derivations---i.e., @file{.drv} files---as long as at least one of their outputs is live.  This allows users to keep track of the origins of items in their store.  Setting it to @code{no} saves a bit of disk space."
msgstr "Quando definido como @code{yes}, como é o caso por padrão, o GC mantém derivações---ou seja, arquivos @file{.drv}---desde que pelo menos uma de suas saídas esteja ativa. Isso permite que os usuários acompanhem as origens dos itens em seu armazém. Defini-lo como @code{no} economiza um pouco de espaço em disco."

#. type: table
#: guix-git/doc/guix.texi:1791
msgid "In this way, setting @option{--gc-keep-derivations} to @code{yes} causes liveness to flow from outputs to derivations, and setting @option{--gc-keep-outputs} to @code{yes} causes liveness to flow from derivations to outputs.  When both are set to @code{yes}, the effect is to keep all the build prerequisites (the sources, compiler, libraries, and other build-time tools) of live objects in the store, regardless of whether these prerequisites are reachable from a GC root.  This is convenient for developers since it saves rebuilds or downloads."
msgstr "Dessa forma, definir @option{--gc-keep-derivations} como @code{yes} faz com que a vivacidade flua das saídas para as derivações, e definir @option{--gc-keep-outputs} como @code{yes} faz com que a vivacidade flua das derivações para as saídas. Quando ambos são definidos como @code{yes}, o efeito é manter todos os pré-requisitos de compilação (as fontes, o compilador, as bibliotecas e outras ferramentas de tempo de compilação) de objetos ativos no armazém, independentemente de esses pré-requisitos serem acessíveis a partir de uma raiz GC. Isso é conveniente para desenvolvedores, pois economiza reconstruções ou downloads."

#. type: item
#: guix-git/doc/guix.texi:1792
#, no-wrap
msgid "--impersonate-linux-2.6"
msgstr "--impersonate-linux-2.6"

#. type: table
#: guix-git/doc/guix.texi:1795
msgid "On Linux-based systems, impersonate Linux 2.6.  This means that the kernel's @command{uname} system call will report 2.6 as the release number."
msgstr "Em sistemas baseados em Linux, personifique o Linux 2.6. Isso significa que a chamada de sistema @command{uname} do kernel relatará 2.6 como o número da versão."

#. type: table
#: guix-git/doc/guix.texi:1798
msgid "This might be helpful to build programs that (usually wrongfully) depend on the kernel version number."
msgstr "Isso pode ser útil para criar programas que (geralmente de forma errada) dependem do número da versão do kernel."

#. type: item
#: guix-git/doc/guix.texi:1799
#, no-wrap
msgid "--lose-logs"
msgstr "--lose-logs"

#. type: table
#: guix-git/doc/guix.texi:1802
msgid "Do not keep build logs.  By default they are kept under @file{@var{localstatedir}/guix/log}."
msgstr "Não mantenha logs de build. Por padrão, eles são mantidos em @file{@var{localstatedir}/guix/log}."

#. type: item
#: guix-git/doc/guix.texi:1803 guix-git/doc/guix.texi:4807
#: guix-git/doc/guix.texi:6420 guix-git/doc/guix.texi:6921
#: guix-git/doc/guix.texi:7488 guix-git/doc/guix.texi:13974
#: guix-git/doc/guix.texi:16093 guix-git/doc/guix.texi:16358
#: guix-git/doc/guix.texi:17052 guix-git/doc/guix.texi:46844
#, no-wrap
msgid "--system=@var{system}"
msgstr "--system=@var{sistema}"

#. type: table
#: guix-git/doc/guix.texi:1807
msgid "Assume @var{system} as the current system type.  By default it is the architecture/kernel pair found at configure time, such as @code{x86_64-linux}."
msgstr "Assuma @var{sistema} como o tipo de sistema atual. Por padrão, é o par arquitetura/kernel encontrado no momento da configuração, como @code{x86_64-linux}."

#. type: item
#: guix-git/doc/guix.texi:1808 guix-git/doc/guix.texi:12947
#, no-wrap
msgid "--listen=@var{endpoint}"
msgstr "--listen=@var{endpoint}"

#. type: table
#: guix-git/doc/guix.texi:1813
msgid "Listen for connections on @var{endpoint}.  @var{endpoint} is interpreted as the file name of a Unix-domain socket if it starts with @code{/} (slash sign).  Otherwise, @var{endpoint} is interpreted as a host name or host name and port to listen to.  Here are a few examples:"
msgstr "Ouça conexões em @var{endpoint}. @var{endpoint} é interpretado como o nome do arquivo de um soquete de domínio Unix se ele começar com @code{/} (sinal de barra). Caso contrário, @var{endpoint} é interpretado como um nome de host ou nome de host e porta para ouvir. Aqui estão alguns exemplos:"

#. type: item
#: guix-git/doc/guix.texi:1815
#, no-wrap
msgid "--listen=/gnu/var/daemon"
msgstr "--listen=/gnu/var/daemon"

#. type: table
#: guix-git/doc/guix.texi:1818
msgid "Listen for connections on the @file{/gnu/var/daemon} Unix-domain socket, creating it if needed."
msgstr "Ouça conexões no soquete de domínio Unix @file{/gnu/var/daemon}, criando-o se necessário."

#. type: item
#: guix-git/doc/guix.texi:1819
#, no-wrap
msgid "--listen=localhost"
msgstr "--listen=localhost"

#. type: cindex
#: guix-git/doc/guix.texi:1820 guix-git/doc/guix.texi:11540
#, no-wrap
msgid "daemon, remote access"
msgstr "daemon, acesso remoto"

#. type: cindex
#: guix-git/doc/guix.texi:1821 guix-git/doc/guix.texi:11541
#, no-wrap
msgid "remote access to the daemon"
msgstr "acesso remoto ao daemon"

#. type: cindex
#: guix-git/doc/guix.texi:1822 guix-git/doc/guix.texi:11542
#, no-wrap
msgid "daemon, cluster setup"
msgstr "daemon, configuração de cluster"

#. type: cindex
#: guix-git/doc/guix.texi:1823 guix-git/doc/guix.texi:11543
#, no-wrap
msgid "clusters, daemon setup"
msgstr "clusters, configuração do daemon"

#. type: table
#: guix-git/doc/guix.texi:1826
msgid "Listen for TCP connections on the network interface corresponding to @code{localhost}, on port 44146."
msgstr "Ouça as conexões TCP na interface de rede correspondente a @code{localhost}, na porta 44146."

#. type: item
#: guix-git/doc/guix.texi:1827
#, no-wrap
msgid "--listen=128.0.0.42:1234"
msgstr "--listen=128.0.0.42:1234"

#. type: table
#: guix-git/doc/guix.texi:1830
msgid "Listen for TCP connections on the network interface corresponding to @code{128.0.0.42}, on port 1234."
msgstr "Ouça as conexões TCP na interface de rede correspondente ao @code{128.0.0.42}, na porta 1234."

#. type: table
#: guix-git/doc/guix.texi:1837
msgid "This option can be repeated multiple times, in which case @command{guix-daemon} accepts connections on all the specified endpoints.  Users can tell client commands what endpoint to connect to by setting the @env{GUIX_DAEMON_SOCKET} environment variable (@pxref{The Store, @env{GUIX_DAEMON_SOCKET}})."
msgstr "Esta opção pode ser repetida várias vezes, nesse caso @command{guix-daemon} aceita conexões em todos os endpoints especificados. Os usuários podem informar aos comandos do cliente a qual endpoint se conectar definindo a variável de ambiente @env{GUIX_DAEMON_SOCKET} (@pxref{The Store, @env{GUIX_DAEMON_SOCKET}})."

#. type: quotation
#: guix-git/doc/guix.texi:1844
msgid "The daemon protocol is @emph{unauthenticated and unencrypted}.  Using @option{--listen=@var{host}} is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon.  In other cases where remote access to the daemon is needed, we recommend using Unix-domain sockets along with SSH."
msgstr "O protocolo daemon é @emph{unauthenticated and unencrypted}. Usar @option{--listen=@var{host}} é adequado em redes locais, como clusters, onde apenas nós confiáveis podem se conectar ao daemon de compilação. Em outros casos em que o acesso remoto ao daemon é necessário, recomendamos usar soquetes de domínio Unix junto com SSH."

#. type: table
#: guix-git/doc/guix.texi:1849
msgid "When @option{--listen} is omitted, @command{guix-daemon} listens for connections on the Unix-domain socket located at @file{@var{localstatedir}/guix/daemon-socket/socket}."
msgstr "Quando @option{--listen} é omitido, @command{guix-daemon} escuta conexões no soquete de domínio Unix localizado em @file{@var{localstatedir}/guix/daemon-socket/socket}."

#. type: Plain text
#: guix-git/doc/guix.texi:1859
msgid "When using Guix on top of GNU/Linux distribution other than Guix System---a so-called @dfn{foreign distro}---a few additional steps are needed to get everything in place.  Here are some of them."
msgstr "Ao usar Guix sobre uma distribuição GNU/Linux que não seja um Guix System --- uma chamada @dfn{distro alheia} --- algumas etapas adicionais são necessárias para colocar tudo no seu lugar. Aqui estão algumas delas."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:1863
msgid "locales-and-locpath"
msgstr "locales-and-locpath"

#. type: cindex
#: guix-git/doc/guix.texi:1863
#, no-wrap
msgid "locales, when not on Guix System"
msgstr "locales, quando não está no Guix System"

#. type: vindex
#: guix-git/doc/guix.texi:1864 guix-git/doc/guix.texi:19326
#, no-wrap
msgid "LOCPATH"
msgstr "LOCPATH"

#. type: vindex
#: guix-git/doc/guix.texi:1865
#, no-wrap
msgid "GUIX_LOCPATH"
msgstr "GUIX_LOCPATH"

#. type: Plain text
#: guix-git/doc/guix.texi:1870
msgid "Packages installed @i{via} Guix will not use the locale data of the host system.  Instead, you must first install one of the locale packages available with Guix and then define the @env{GUIX_LOCPATH} environment variable:"
msgstr "Pacotes instalados @i{via} Guix não usarão os dados de localidade do sistema host. Em vez disso, você deve primeiro instalar um dos pacotes de localidade disponíveis com Guix e então definir a variável de ambiente @env{GUIX_LOCPATH}:"

#. type: example
#: guix-git/doc/guix.texi:1874
#, no-wrap
msgid ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"
msgstr ""
"$ guix install glibc-locales\n"
"$ export GUIX_LOCPATH=$HOME/.guix-profile/lib/locale\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1886
msgid "Note that the @code{glibc-locales} package contains data for all the locales supported by the GNU@tie{}libc and weighs in at around 930@tie{}MiB@footnote{The size of the @code{glibc-locales} package is reduced down to about 213@tie{}MiB with store deduplication and further down to about 67@tie{}MiB when using a zstd-compressed Btrfs file system.}.  If you only need a few locales, you can define your custom locales package via the @code{make-glibc-utf8-locales} procedure from the @code{(gnu packages base)} module.  The following example defines a package containing the various Canadian UTF-8 locales known to the GNU@tie{}libc, that weighs around 14@tie{}MiB:"
msgstr "Observe que o pacote @code{glibc-locales} contém dados para todos os locais suportados pela GNU@tie{}libc e pesa cerca de 930@tie{}MiB@footnote{O tamanho do pacote @code{glibc-locales} é reduzido para cerca de 213@tie{}MiB com desduplicação de armazém e ainda mais para cerca de 67@tie{}MiB ao usar um sistema de arquivos Btrfs compactado em zstd.}. Se você precisar apenas de alguns locais, poderá definir seu pacote de locais personalizados por meio do procedimento @code{make-glibc-utf8-locales} do módulo @code{(gnu packages base)}. O exemplo a seguir define um pacote contendo os vários locais UTF-8 canadenses conhecidos pela GNU@tie{}libc, que pesa cerca de 14@tie{}MiB:"

#. type: lisp
#: guix-git/doc/guix.texi:1889
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgid ""
"(use-modules (gnu packages base))\n"
"\n"
msgstr ""
"(use-modules (gnu packages base))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:1895
#, no-wrap
msgid ""
"(define my-glibc-locales\n"
"  (make-glibc-utf8-locales\n"
"   glibc\n"
"   #:locales (list \"en_CA\" \"fr_CA\" \"ik_CA\" \"iu_CA\" \"shs_CA\")\n"
"   #:name \"glibc-canadian-utf8-locales\"))\n"
msgstr ""
"(define my-glibc-locales\n"
"  (make-glibc-utf8-locales\n"
"   glibc\n"
"   #:locales (list \"en_CA\" \"fr_CA\" \"ik_CA\" \"iu_CA\" \"shs_CA\")\n"
"   #:name \"glibc-canadian-utf8-locales\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:1900
msgid "The @env{GUIX_LOCPATH} variable plays a role similar to @env{LOCPATH} (@pxref{Locale Names, @env{LOCPATH},, libc, The GNU C Library Reference Manual}).  There are two important differences though:"
msgstr "A variável @env{GUIX_LOCPATH} desempenha um papel similar a @env{LOCPATH} (@pxref{Locale Names, @env{LOCPATH},, libc, The GNU C Library Reference Manual}). Há duas diferenças importantes, no entanto:"

#. type: enumerate
#: guix-git/doc/guix.texi:1907
msgid "@env{GUIX_LOCPATH} is honored only by the libc in Guix, and not by the libc provided by foreign distros.  Thus, using @env{GUIX_LOCPATH} allows you to make sure the programs of the foreign distro will not end up loading incompatible locale data."
msgstr "@env{GUIX_LOCPATH} é honrado apenas pela libc no Guix, e não pela libc fornecida por distros estrangeiras. Assim, usar @env{GUIX_LOCPATH} permite que você tenha certeza de que os programas da distro estrangeira não acabarão carregando dados de localidade incompatíveis."

#. type: enumerate
#: guix-git/doc/guix.texi:1914
msgid "libc suffixes each entry of @env{GUIX_LOCPATH} with @code{/X.Y}, where @code{X.Y} is the libc version---e.g., @code{2.22}.  This means that, should your Guix profile contain a mixture of programs linked against different libc version, each libc version will only try to load locale data in the right format."
msgstr "libc sufixa cada entrada de @env{GUIX_LOCPATH} com @code{/X.Y}, onde @code{X.Y} é a versão libc---por exemplo, @code{2.22}. Isso significa que, caso seu perfil Guix contenha uma mistura de programas vinculados a diferentes versões libc, cada versão libc tentará carregar apenas dados de localidade no formato correto."

#. type: Plain text
#: guix-git/doc/guix.texi:1918
msgid "This is important because the locale data format used by different libc versions may be incompatible."
msgstr "Isso é importante porque o formato de dados de localidade usado por diferentes versões da libc pode ser incompatível."

#. type: cindex
#: guix-git/doc/guix.texi:1921
#, no-wrap
msgid "name service switch, glibc"
msgstr "troca de serviço de nome, glibc"

#. type: cindex
#: guix-git/doc/guix.texi:1922
#, no-wrap
msgid "NSS (name service switch), glibc"
msgstr "NSS (troca de serviço de nomes), glibc"

#. type: cindex
#: guix-git/doc/guix.texi:1923 guix-git/doc/guix.texi:20015
#, fuzzy, no-wrap
#| msgid "Web Services"
msgid "@abbr{nscd, name service cache daemon}"
msgstr "Serviços Web"

#. type: Plain text
#: guix-git/doc/guix.texi:1930
msgid "When using Guix on a foreign distro, we @emph{strongly recommend} that the system run the GNU C library's @dfn{name service cache daemon}, @command{nscd}, which should be listening on the @file{/var/run/nscd/socket} socket.  Failing to do that, applications installed with Guix may fail to look up host names or user accounts, or may even crash.  The next paragraphs explain why."
msgstr "Ao usar o Guix em uma distro alheia, nós @emph{recomendamos fortemente} que o sistema use o @dfn{daemon de cache de serviço de nomes} da biblioteca C do GNU, @command{nscd}, que deve ouvir no soquete @file{/var/run/nscd/socket}. Caso não faça isso, os aplicativos instalados com Guix podem falhar em procurar nomes de máquina e contas de usuário, ou até mesmo travar. Os próximos parágrafos explicam o porquê."

#. type: file{#1}
#: guix-git/doc/guix.texi:1931
#, no-wrap
msgid "nsswitch.conf"
msgstr "nsswitch.conf"

#. type: Plain text
#: guix-git/doc/guix.texi:1936
msgid "The GNU C library implements a @dfn{name service switch} (NSS), which is an extensible mechanism for ``name lookups'' in general: host name resolution, user accounts, and more (@pxref{Name Service Switch,,, libc, The GNU C Library Reference Manual})."
msgstr "A biblioteca GNU C implementa um @dfn{name service switch} (NSS), que é um mecanismo extensível para ``pesquisas de nomes'' em geral: resolução de nomes de host, contas de usuários e muito mais (@pxref{Name Service Switch,,, libc, The GNU C Library Reference Manual})."

#. type: cindex
#: guix-git/doc/guix.texi:1937
#, no-wrap
msgid "Network information service (NIS)"
msgstr "Serviço de informação de rede (NIS)"

#. type: cindex
#: guix-git/doc/guix.texi:1938
#, no-wrap
msgid "NIS (Network information service)"
msgstr "NIS (Serviço de informação de rede)"

#. type: Plain text
#: guix-git/doc/guix.texi:1947
msgid "Being extensible, the NSS supports @dfn{plugins}, which provide new name lookup implementations: for example, the @code{nss-mdns} plugin allow resolution of @code{.local} host names, the @code{nis} plugin allows user account lookup using the Network information service (NIS), and so on.  These extra ``lookup services'' are configured system-wide in @file{/etc/nsswitch.conf}, and all the programs running on the system honor those settings (@pxref{NSS Configuration File,,, libc, The GNU C Reference Manual})."
msgstr "Sendo extensível, o NSS suporta @dfn{plugins}, que fornecem novas implementações de pesquisa de nomes: por exemplo, o plugin @code{nss-mdns} permite a resolução de nomes de host @code{.local}, o plugin @code{nis} permite a pesquisa de contas de usuários usando o Network information service (NIS), e assim por diante. Esses \"serviços de pesquisa'' extras são configurados em todo o sistema em @file{/etc/nsswitch.conf}, e todos os programas em execução no sistema honram essas configurações (@pxref{NSS Configuration File,,, libc, The GNU C Reference Manual})."

#. type: Plain text
#: guix-git/doc/guix.texi:1957
msgid "When they perform a name lookup---for instance by calling the @code{getaddrinfo} function in C---applications first try to connect to the nscd; on success, nscd performs name lookups on their behalf.  If the nscd is not running, then they perform the name lookup by themselves, by loading the name lookup services into their own address space and running it.  These name lookup services---the @file{libnss_*.so} files---are @code{dlopen}'d, but they may come from the host system's C library, rather than from the C library the application is linked against (the C library coming from Guix)."
msgstr "Quando eles realizam uma pesquisa de nome --- por exemplo chamando a função @code{getaddrinfo} em C --- os aplicativos primeiro tentam se conectar ao nscd; em caso de sucesso, o nscd realiza pesquisas de nome em seu nome. Se o nscd não estiver em execução, eles realizam a pesquisa de nome sozinhos, carregando os serviços de pesquisa de nome em seu próprio espaço de endereço e executando-o. Esses serviços de pesquisa de nome --- os arquivos @file{libnss_*.so} --- são @code{dlopen}'d, mas podem vir da biblioteca C do sistema host, em vez da biblioteca C à qual o aplicativo está vinculado (a biblioteca C vem do Guix)."

#. type: Plain text
#: guix-git/doc/guix.texi:1962
msgid "And this is where the problem is: if your application is linked against Guix's C library (say, glibc 2.24) and tries to load NSS plugins from another C library (say, @code{libnss_mdns.so} for glibc 2.22), it will likely crash or have its name lookups fail unexpectedly."
msgstr "E é aqui que está o problema: se seu aplicativo estiver vinculado à biblioteca C do Guix (por exemplo, glibc 2.24) e tentar carregar plugins NSS de outra biblioteca C (por exemplo, @code{libnss_mdns.so} para glibc 2.22), ele provavelmente travará ou terá suas pesquisas de nome falhando inesperadamente."

#. type: Plain text
#: guix-git/doc/guix.texi:1967
msgid "Running @command{nscd} on the system, among other advantages, eliminates this binary incompatibility problem because those @code{libnss_*.so} files are loaded in the @command{nscd} process, not in applications themselves."
msgstr "Executar @command{nscd} no sistema, entre outras vantagens, elimina esse problema de incompatibilidade binária porque esses arquivos @code{libnss_*.so} são carregados no processo @command{nscd}, não nos próprios aplicativos."

#. type: cindex
#: guix-git/doc/guix.texi:1968
#, no-wrap
msgid "nsncd, replacement for nscd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:1975
msgid "Note that @command{nscd} is no longer provided on some GNU/Linux distros, such as Arch Linux (as of Dec. 2024).  @command{nsncd} can be used as a drop-in-replacement.  See @uref{https://github.com/twosigma/nsncd, the nsncd repository} and @uref{https://flokli.de/posts/2022-11-18-nsncd/, this blog post} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:1976
#, no-wrap
msgid "X11 Fonts"
msgstr "Fontes X11"

#. type: Plain text
#: guix-git/doc/guix.texi:1986
msgid "The majority of graphical applications use Fontconfig to locate and load fonts and perform X11-client-side rendering.  The @code{fontconfig} package in Guix looks for fonts in @file{$HOME/.guix-profile} by default.  Thus, to allow graphical applications installed with Guix to display fonts, you have to install fonts with Guix as well.  Essential font packages include @code{font-ghostscript}, @code{font-dejavu}, and @code{font-gnu-freefont}."
msgstr "A maioria dos aplicativos gráficos usa o Fontconfig para localizar e carregar fontes e executar renderização do lado do cliente X11. O pacote @code{fontconfig} no Guix procura fontes em @file{$HOME/.guix-profile} por padrão. Assim, para permitir que aplicativos gráficos instalados com o Guix exibam fontes, você precisa instalar fontes com o Guix também. Pacotes de fontes essenciais incluem @code{font-ghostscript}, @code{font-dejavu} e @code{font-gnu-freefont}."

#. type: code{#1}
#: guix-git/doc/guix.texi:1987
#, no-wrap
msgid "fc-cache"
msgstr "fc-cache"

#. type: cindex
#: guix-git/doc/guix.texi:1988
#, no-wrap
msgid "font cache"
msgstr "cache de font"

#. type: Plain text
#: guix-git/doc/guix.texi:1992
msgid "Once you have installed or removed fonts, or when you notice an application that does not find fonts, you may need to install Fontconfig and to force an update of its font cache by running:"
msgstr "Depois de instalar ou remover fontes, ou quando notar que um aplicativo não encontra fontes, talvez seja necessário instalar o Fontconfig e forçar uma atualização do cache de fontes executando:"

#. type: example
#: guix-git/doc/guix.texi:1996
#, no-wrap
msgid ""
"guix install fontconfig\n"
"fc-cache -rv\n"
msgstr ""
"guix install fontconfig\n"
"fc-cache -rv\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2004
msgid "To display text written in Chinese languages, Japanese, or Korean in graphical applications, consider installing @code{font-adobe-source-han-sans} or @code{font-wqy-zenhei}.  The former has multiple outputs, one per language family (@pxref{Packages with Multiple Outputs}).  For instance, the following command installs fonts for Chinese languages:"
msgstr "Para exibir texto escrito em chinês, japonês ou coreano em aplicativos gráficos, considere instalar @code{font-adobe-source-han-sans} ou @code{font-wqy-zenhei}. O primeiro tem várias saídas, uma por família de idiomas (@pxref{Packages with Multiple Outputs}). Por exemplo, o comando a seguir instala fontes para idiomas chineses:"

#. type: example
#: guix-git/doc/guix.texi:2007
#, no-wrap
msgid "guix install font-adobe-source-han-sans:cn\n"
msgstr "guix install font-adobe-source-han-sans:cn\n"

#. type: code{#1}
#: guix-git/doc/guix.texi:2009
#, no-wrap
msgid "xterm"
msgstr "xterm"

#. type: Plain text
#: guix-git/doc/guix.texi:2013
msgid "Older programs such as @command{xterm} do not use Fontconfig and instead rely on server-side font rendering.  Such programs require to specify a full name of a font using XLFD (X Logical Font Description), like this:"
msgstr "Programas mais antigos como @command{xterm} não usam Fontconfig e, em vez disso, dependem da renderização de fontes do lado do servidor. Tais programas exigem a especificação de um nome completo de uma fonte usando XLFD (X Logical Font Description), como este:"

#. type: example
#: guix-git/doc/guix.texi:2016
#, no-wrap
msgid "-*-dejavu sans-medium-r-normal-*-*-100-*-*-*-*-*-1\n"
msgstr "-*-dejavu sans-medium-r-normal-*-*-100-*-*-*-*-*-1\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2020
msgid "To be able to use such full names for the TrueType fonts installed in your Guix profile, you need to extend the font path of the X server:"
msgstr "Para poder usar esses nomes completos para as fontes TrueType instaladas no seu perfil Guix, você precisa estender o caminho da fonte do servidor X:"

#. type: example
#: guix-git/doc/guix.texi:2025
#, no-wrap
msgid "xset +fp $(dirname $(readlink -f ~/.guix-profile/share/fonts/truetype/fonts.dir))\n"
msgstr "xset +fp $(dirname $(readlink -f ~/.guix-profile/share/fonts/truetype/fonts.dir))\n"

#. type: code{#1}
#: guix-git/doc/guix.texi:2027
#, no-wrap
msgid "xlsfonts"
msgstr "xlsfonts"

#. type: Plain text
#: guix-git/doc/guix.texi:2030
msgid "After that, you can run @code{xlsfonts} (from @code{xlsfonts} package)  to make sure your TrueType fonts are listed there."
msgstr "Depois disso, você pode executar @code{xlsfonts} (do pacote @code{xlsfonts}) para garantir que suas fontes TrueType estejam listadas lá."

#. type: code{#1}
#: guix-git/doc/guix.texi:2034 guix-git/doc/guix.texi:45554
#, no-wrap
msgid "nss-certs"
msgstr "nss-certs"

#. type: Plain text
#: guix-git/doc/guix.texi:2037
msgid "The @code{nss-certs} package provides X.509 certificates, which allow programs to authenticate Web servers accessed over HTTPS."
msgstr "O pacote @code{nss-certs} fornece certificados X.509, que permitem que programas autentiquem servidores Web acessados por HTTPS."

#. type: Plain text
#: guix-git/doc/guix.texi:2042
msgid "When using Guix on a foreign distro, you can install this package and define the relevant environment variables so that packages know where to look for certificates.  @xref{X.509 Certificates}, for detailed information."
msgstr "Ao usar uma Guix em uma distro alheia, você pode instalar esse pacote e definir as variáveis de ambiente relevantes de forma que os pacotes saibam onde procurar por certificados. @xref{X.509 Certificates}, para informações detalhadas."

#. type: code{#1}
#: guix-git/doc/guix.texi:2045
#, no-wrap
msgid "emacs"
msgstr "emacs"

#. type: Plain text
#: guix-git/doc/guix.texi:2051
msgid "When you install Emacs packages with Guix, the Elisp files are placed under the @file{share/emacs/site-lisp/} directory of the profile in which they are installed.  The Elisp libraries are made available to Emacs through the @env{EMACSLOADPATH} environment variable, which is set when installing Emacs itself."
msgstr "Quando você instala pacotes do Emacs com o Guix, os arquivos Elisp são colocados no diretório @file{share/emacs/site-lisp/} do perfil no qual eles são instalados. As bibliotecas Elisp são disponibilizadas para o Emacs por meio da variável de ambiente @env{EMACSLOADPATH}, que é definida ao instalar o próprio Emacs."

#. type: cindex
#: guix-git/doc/guix.texi:2052
#, no-wrap
msgid "guix-emacs-autoload-packages, refreshing Emacs packages"
msgstr "guix-emacs-autoload-packages, atualizando pacotes Emacs"

#. type: Plain text
#: guix-git/doc/guix.texi:2061
msgid "Additionally, autoload definitions are automatically evaluated at the initialization of Emacs, by the Guix-specific @code{guix-emacs-autoload-packages} procedure.  This procedure can be interactively invoked to have newly installed Emacs packages discovered, without having to restart Emacs.  If, for some reason, you want to avoid auto-loading the Emacs packages installed with Guix, you can do so by running Emacs with the @option{--no-site-file} option (@pxref{Init File,,, emacs, The GNU Emacs Manual})."
msgstr "Além disso, as definições de autoload são avaliadas automaticamente na inicialização do Emacs, pelo procedimento específico do Guix @code{guix-emacs-autoload-packages}. Este procedimento pode ser invocado interativamente para que pacotes Emacs recém-instalados sejam descobertos, sem precisar reiniciar o Emacs. Se, por algum motivo, você quiser evitar o carregamento automático dos pacotes Emacs instalados com o Guix, você pode fazer isso executando o Emacs com a opção @option{--no-site-file} (@pxref{Init File,,, emacs, The GNU Emacs Manual})."

#. type: quotation
#: guix-git/doc/guix.texi:2066
msgid "Most Emacs variants are now capable of doing native compilation.  The approach taken by Guix Emacs however differs greatly from the approach taken upstream."
msgstr "A maioria das variantes do Emacs agora são capazes de fazer compilação nativa. A abordagem adotada pelo Guix Emacs, no entanto, difere muito da abordagem adotada pelo upstream."

#. type: quotation
#: guix-git/doc/guix.texi:2073
msgid "Upstream Emacs compiles packages just-in-time and typically places shared object files in a special folder within your @code{user-emacs-directory}.  These shared objects within said folder are organized in a flat hierarchy, and their file names contain two hashes to verify the original file name and contents of the source code."
msgstr "O Upstream Emacs compila pacotes just-in-time e normalmente coloca arquivos de objetos compartilhados em uma pasta especial dentro do seu @code{user-emacs-directory}. Esses objetos compartilhados dentro da referida pasta são organizados em uma hierarquia plana, e seus nomes de arquivo contêm dois hashes para verificar o nome do arquivo original e o conteúdo do código-fonte."

#. type: quotation
#: guix-git/doc/guix.texi:2082
msgid "Guix Emacs on the other hand prefers to compile packages ahead-of-time.  Shared objects retain much of the original file name and no hashes are added to verify the original file name or the contents of the file.  Crucially, this allows Guix Emacs and packages built against it to be grafted (@pxref{Security Updates, grafts}), but at the same time, Guix Emacs lacks the hash-based verification of source code baked into upstream Emacs.  As this naming schema is trivial to exploit, we disable just-in-time compilation."
msgstr "O Guix Emacs, por outro lado, prefere compilar pacotes antes do tempo. Objetos compartilhados retêm muito do nome do arquivo original e nenhum hashe é adicionado para verificar o nome do arquivo original ou o conteúdo do arquivo. Crucialmente, isso permite que o Guix Emacs e os pacotes construídos contra ele sejam enxertados (@pxref{Security Updates, enxertos}), mas, ao mesmo tempo, o Guix Emacs não tem a verificação baseada em hash do código-fonte embutido no Emacs upstream. Como esse esquema de nomenclatura é trivial de explorar, desabilitamos a compilação just-in-time."

#. type: quotation
#: guix-git/doc/guix.texi:2087
msgid "Further note, that @code{emacs-minimal}---the default Emacs for building packages---has been configured without native compilation.  To natively compile your emacs packages ahead of time, use a transformation like @option{--with-input=emacs-minimal=emacs}."
msgstr "Observe ainda que @code{emacs-minimal}---o Emacs padrão para construir pacotes---foi configurado sem compilação nativa. Para compilar nativamente seus pacotes emacs antes do tempo, use uma transformação como @option{--with-input=emacs-minimal=emacs}."

#. type: cindex
#: guix-git/doc/guix.texi:2092
#, no-wrap
msgid "Upgrading Guix, on a foreign distro"
msgstr "Atualizando o Guix, em uma distribuição estrangeira"

#. type: Plain text
#: guix-git/doc/guix.texi:2095
msgid "To upgrade Guix, run:"
msgstr "Para atualizar o Guix, execute:"

#. type: example
#: guix-git/doc/guix.texi:2098 guix-git/doc/guix.texi:2948
#, no-wrap
msgid "guix pull\n"
msgstr "guix pull\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2101
msgid "@xref{Invoking guix pull}, for more information."
msgstr "@xref{Invoking guix pull}, para maiores informações."

#. type: cindex
#: guix-git/doc/guix.texi:2102
#, no-wrap
msgid "upgrading Guix for the root user, on a foreign distro"
msgstr "atualizando Guix para o usuário root, em uma distribuição estrangeira"

#. type: cindex
#: guix-git/doc/guix.texi:2103
#, no-wrap
msgid "upgrading the Guix daemon, on a foreign distro"
msgstr "atualizando o daemon Guix, em uma distribuição estrangeira"

#. type: cindex
#: guix-git/doc/guix.texi:2104
#, no-wrap
msgid "@command{guix pull} for the root user, on a foreign distro"
msgstr "@command{guix pull} para o usuário root, em uma distribuição estrangeira"

#. type: Plain text
#: guix-git/doc/guix.texi:2107
msgid "On a foreign distro, you can upgrade the build daemon by running:"
msgstr "Em uma distribuição estrangeira, você pode atualizar o daemon de compilação executando:"

#. type: example
#: guix-git/doc/guix.texi:2110
#, no-wrap
msgid "sudo -i guix pull\n"
msgstr "sudo -i guix pull\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2115
msgid "followed by (assuming your distro uses the systemd service management tool):"
msgstr "seguido por (supondo que sua distribuição use a ferramenta de gerenciamento de serviço systemd):"

#. type: example
#: guix-git/doc/guix.texi:2118
#, no-wrap
msgid "systemctl restart guix-daemon.service\n"
msgstr "systemctl restart guix-daemon.service\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2122
msgid "On Guix System, upgrading the daemon is achieved by reconfiguring the system (@pxref{Invoking guix system, @code{guix system reconfigure}})."
msgstr "No sistema Guix, a atualização do daemon é obtida reconfigurando o sistema (@pxref{Invoking guix system, @code{guix system reconfigure}})."

#. type: Plain text
#: guix-git/doc/guix.texi:2126
msgid "To migrate an existing installation to the @emph{unprivileged daemon} where @command{guix-daemon} does not run as root, @pxref{unprivileged-daemon-migration}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:2133
#, no-wrap
msgid "installing Guix System"
msgstr "instalando o Guix System"

#. type: cindex
#: guix-git/doc/guix.texi:2134
#, no-wrap
msgid "Guix System, installation"
msgstr "Guix System, instalação"

#. type: Plain text
#: guix-git/doc/guix.texi:2139
msgid "This section explains how to install Guix System on a machine.  Guix, as a package manager, can also be installed on top of a running GNU/Linux system, @pxref{Installation}."
msgstr "Esta seção explica como instalar o Guix System em uma máquina. Guix, como gerenciador de pacotes, também pode ser instalado sobre um sistema GNU/Linux em execução, @pxref{Installation}."

#. type: quotation
#: guix-git/doc/guix.texi:2148
msgid "You are reading this documentation with an Info reader.  For details on how to use it, hit the @key{RET} key (``return'' or ``enter'') on the link that follows: @pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}.  Hit @kbd{l} afterwards to come back here."
msgstr "Você está lendo esta documentação com um leitor de informações. Para obter detalhes sobre como usá-lo, pressione a tecla @key{RET} (\"return'' ou  \"enter'') no link a seguir: @pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}. Clique em @kbd{l} depois para voltar aqui."

#. type: quotation
#: guix-git/doc/guix.texi:2151
msgid "Alternatively, run @command{info info} in another tty to keep the manual available."
msgstr "Alternativamente, execute @command{info info} em outro tty para manter o manual disponível."

#. type: Plain text
#: guix-git/doc/guix.texi:2172
msgid "We consider Guix System to be ready for a wide range of ``desktop'' and server use cases.  The reliability guarantees it provides---transactional upgrades and rollbacks, reproducibility---make it a solid foundation."
msgstr "Consideramos que o Guix System está pronto para uma ampla gama de casos de uso de \"desktop'' e servidores. As garantias de confiabilidade que ele fornece – atualizações e reversões transacionais, reprodutibilidade – tornam-no uma base sólida."

#. type: Plain text
#: guix-git/doc/guix.texi:2174
msgid "More and more system services are provided (@pxref{Services})."
msgstr "Cada vez mais serviços de sistema são fornecidos (@pxref{Services})."

#. type: Plain text
#: guix-git/doc/guix.texi:2177
msgid "Nevertheless, before you proceed with the installation, be aware that some services you rely on may still be missing from version @value{VERSION}."
msgstr "No entanto, antes de prosseguir com a instalação, esteja ciente de que alguns serviços dos quais você depende ainda podem estar faltando na versão @value{VERSION}."

#. type: Plain text
#: guix-git/doc/guix.texi:2181
msgid "More than a disclaimer, this is an invitation to report issues (and success stories!), and to join us in improving it.  @xref{Contributing}, for more info."
msgstr "Mais do que um aviso de isenção de responsabilidade, este é um convite para relatar problemas (e histórias de sucesso!) e se juntar a nós para melhorá-los. @xref{Contributing}, para mais informações."

#. type: cindex
#: guix-git/doc/guix.texi:2186
#, no-wrap
msgid "hardware support on Guix System"
msgstr "suporte a hardware no Guix System"

#. type: Plain text
#: guix-git/doc/guix.texi:2195
msgid "GNU@tie{}Guix focuses on respecting the user's computing freedom.  It builds around the kernel Linux-libre, which means that only hardware for which free software drivers and firmware exist is supported.  Nowadays, a wide range of off-the-shelf hardware is supported on GNU/Linux-libre---from keyboards to graphics cards to scanners and Ethernet controllers.  Unfortunately, there are still areas where hardware vendors deny users control over their own computing, and such hardware is not supported on Guix System."
msgstr "GNU@tie{}Guix se concentra em respeitar a liberdade computacional do usuário. Ele é construído em torno do kernel Linux-libre, o que significa que apenas o hardware para o qual existem drivers e firmware de software livre é suportado. Hoje em dia, uma ampla gama de hardware disponível no mercado é suportada no GNU/Linux-libre – de teclados a placas gráficas, scanners e controladores Ethernet. Infelizmente, ainda existem áreas onde os fornecedores de hardware negam aos usuários o controle sobre sua própria computação, e tal hardware não é suportado no Guix System."

#. type: cindex
#: guix-git/doc/guix.texi:2196
#, no-wrap
msgid "WiFi, hardware support"
msgstr "Wi-Fi, suporte de hardware"

#. type: Plain text
#: guix-git/doc/guix.texi:2205
msgid "One of the main areas where free drivers or firmware are lacking is WiFi devices.  WiFi devices known to work include those using Atheros chips (AR9271 and AR7010), which corresponds to the @code{ath9k} Linux-libre driver, and those using Broadcom/AirForce chips (BCM43xx with Wireless-Core Revision 5), which corresponds to the @code{b43-open} Linux-libre driver.  Free firmware exists for both and is available out-of-the-box on Guix System, as part of @code{%base-firmware} (@pxref{operating-system Reference, @code{firmware}})."
msgstr "Uma das principais áreas onde faltam drivers ou firmware gratuitos são os dispositivos WiFi. Os dispositivos WiFi que funcionam incluem aqueles que usam chips Atheros (AR9271 e AR7010), que corresponde ao driver @code{ath9k} Linux-libre, e aqueles que usam chips Broadcom/AirForce (BCM43xx com Wireless-Core Revisão 5), que corresponde a o driver livre Linux @code{b43-open}. Existe firmware livre para ambos e está disponível imediatamente no Guix System, como parte do @code{%base-firmware} (@pxref{operating-system Reference, @code{firmware}})."

#. type: Plain text
#: guix-git/doc/guix.texi:2208
msgid "The installer warns you early on if it detects devices that are known @emph{not} to work due to the lack of free firmware or free drivers."
msgstr "O instalador avisa você antecipadamente se detectar dispositivos que @emph{não} funcionam devido à falta de firmware ou drivers gratuitos."

#. type: cindex
#: guix-git/doc/guix.texi:2209
#, no-wrap
msgid "RYF, Respects Your Freedom"
msgstr "RYF, respeita sua liberdade"

#. type: Plain text
#: guix-git/doc/guix.texi:2215
msgid "The @uref{https://www.fsf.org/, Free Software Foundation} runs @uref{https://www.fsf.org/ryf, @dfn{Respects Your Freedom}} (RYF), a certification program for hardware products that respect your freedom and your privacy and ensure that you have control over your device.  We encourage you to check the list of RYF-certified devices."
msgstr "A @uref{https://www.fsf.org/, Free Software Foundation} administra @uref{https://www.fsf.org/ryf, @dfn{Respects Your Freedom}} (RYF), um programa de certificação para produtos de hardware que respeitem sua liberdade e privacidade e garantam que você tenha controle sobre seu dispositivo. Recomendamos que você verifique a lista de dispositivos certificados RYF."

#. type: Plain text
#: guix-git/doc/guix.texi:2219
msgid "Another useful resource is the @uref{https://www.h-node.org/, H-Node} web site.  It contains a catalog of hardware devices with information about their support in GNU/Linux."
msgstr "Outro recurso útil é o site @uref{https://www.h-node.org/, H-Node}. Ele contém um catálogo de dispositivos de hardware com informações sobre seu suporte no GNU/Linux."

#. type: Plain text
#: guix-git/doc/guix.texi:2228
msgid "An ISO-9660 installation image that can be written to a USB stick or burnt to a DVD can be downloaded from @indicateurl{@value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso}, where you can replace @code{x86_64-linux} with one of:"
msgstr "Uma imagem de instalação ISO-9660 que pode ser gravada em um pendrive ou gravada em um DVD pode ser baixada em @indicateurl{@value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso}, onde você pode substituir @code{x86_64-linux} por um dos seguintes:"

#. type: table
#: guix-git/doc/guix.texi:2232
msgid "for a GNU/Linux system on Intel/AMD-compatible 64-bit CPUs;"
msgstr "para um sistema GNU/Linux em CPUs de 64 bits compatíveis com Intel/AMD;"

#. type: table
#: guix-git/doc/guix.texi:2235
msgid "for a 32-bit GNU/Linux system on Intel-compatible CPUs."
msgstr "para um sistema GNU/Linux de 32 bits em CPUs compatíveis com Intel."

#. type: Plain text
#: guix-git/doc/guix.texi:2240
msgid "Make sure to download the associated @file{.sig} file and to verify the authenticity of the image against it, along these lines:"
msgstr "Certifique-se de baixar o arquivo @file{.sig} associado e verificar a autenticidade da imagem em relação a ele, seguindo estas linhas:"

#. type: example
#: guix-git/doc/guix.texi:2244
#, no-wrap
msgid ""
"$ wget @value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
"$ gpg --verify guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
msgstr ""
"$ wget @value{BASE-URL}/guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"
"$ gpg --verify guix-system-install-@value{VERSION}.x86_64-linux.iso.sig\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2248
msgid "If that command fails because you do not have the required public key, then run this command to import it:"
msgstr "Se esse comando falhar porque você não possui a chave pública requerida, execute este comando para importá-lo:"

#. type: example
#: guix-git/doc/guix.texi:2252
#, no-wrap
msgid ""
"$ wget @value{OPENPGP-SIGNING-KEY-URL} \\\n"
"      -qO - | gpg --import -\n"
msgstr ""
"$ wget @value{OPENPGP-SIGNING-KEY-URL} \\\n"
"      -qO - | gpg --import -\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2256
msgid "and rerun the @code{gpg --verify} command."
msgstr "e execute novamente o comando @code{gpg --verify}."

#. type: Plain text
#: guix-git/doc/guix.texi:2259
msgid "Take note that a warning like ``This key is not certified with a trusted signature!'' is normal."
msgstr "Observe que um aviso como \"Esta chave não está certificada com uma assinatura confiável!'' é normal."

#. type: Plain text
#: guix-git/doc/guix.texi:2264
msgid "This image contains the tools necessary for an installation.  It is meant to be copied @emph{as is} to a large-enough USB stick or DVD."
msgstr "Esta imagem contém as ferramentas necessárias para uma instalação. Ele deve ser copiado @emph{como está} para um pendrive ou DVD grande o suficiente."

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2265
#, no-wrap
msgid "Copying to a USB Stick"
msgstr "Copiando para um pendrive"

#. type: Plain text
#: guix-git/doc/guix.texi:2270
msgid "Insert a USB stick of 1@tie{}GiB or more into your machine, and determine its device name.  Assuming that the USB stick is known as @file{/dev/sdX}, copy the image with:"
msgstr "Insira um pendrive de 1@tie{}GiB ou mais em sua máquina e determine o nome do dispositivo. Supondo que o pendrive seja conhecido como @file{/dev/sdX}, copie a imagem com:"

#. type: example
#: guix-git/doc/guix.texi:2274
#, no-wrap
msgid ""
"dd if=guix-system-install-@value{VERSION}.x86_64-linux.iso of=/dev/sdX status=progress\n"
"sync\n"
msgstr ""
"dd if=guix-system-install-@value{VERSION}.x86_64-linux.iso of=/dev/sdX status=progress\n"
"sync\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2277
msgid "Access to @file{/dev/sdX} usually requires root privileges."
msgstr "O acesso a @file{/dev/sdX} geralmente requer privilégios de root."

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2278
#, no-wrap
msgid "Burning on a DVD"
msgstr "Gravando em um DVD"

#. type: Plain text
#: guix-git/doc/guix.texi:2283
msgid "Insert a blank DVD into your machine, and determine its device name.  Assuming that the DVD drive is known as @file{/dev/srX}, copy the image with:"
msgstr "Insira um DVD virgem em sua máquina e determine o nome do dispositivo. Supondo que a unidade de DVD seja conhecida como @file{/dev/srX}, copie a imagem com:"

#. type: example
#: guix-git/doc/guix.texi:2286
#, no-wrap
msgid "growisofs -dvd-compat -Z /dev/srX=guix-system-install-@value{VERSION}.x86_64-linux.iso\n"
msgstr "growisofs -dvd-compat -Z /dev/srX=guix-system-install-@value{VERSION}.x86_64-linux.iso\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2289
msgid "Access to @file{/dev/srX} usually requires root privileges."
msgstr "O acesso a @file{/dev/srX} geralmente requer privilégios de root."

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:2290
#, no-wrap
msgid "Booting"
msgstr "Inicializando"

#. type: Plain text
#: guix-git/doc/guix.texi:2297
msgid "Once this is done, you should be able to reboot the system and boot from the USB stick or DVD@.  The latter usually requires you to get in the BIOS or UEFI boot menu, where you can choose to boot from the USB stick.  In order to boot from Libreboot, switch to the command mode by pressing the @kbd{c} key and type @command{search_grub usb}."
msgstr "Feito isso, você poderá reiniciar o sistema e inicializar a partir do pendrive ou DVD@. O último geralmente requer que você entre no menu de inicialização do BIOS ou UEFI, onde você pode optar por inicializar a partir do pendrive. Para inicializar a partir do Libreboot, mude para o modo de comando pressionando a tecla @kbd{c} e digite @command{search_grub usb}."

#. type: Plain text
#: guix-git/doc/guix.texi:2307
msgid "Sadly, on some machines, the installation medium cannot be properly booted and you only see a black screen after booting even after you waited for ten minutes.  This may indicate that your machine cannot run Guix System; perhaps you instead want to install Guix on a foreign distro (@pxref{Binary Installation}).  But don't give up just yet; a possible workaround is pressing the @kbd{e} key in the GRUB boot menu and appending @option{nomodeset} to the Linux bootline.  Sometimes the black screen issue can also be resolved by connecting a different display."
msgstr "Infelizmente, em algumas máquinas, o meio de instalação não pode ser inicializado corretamente e você só verá uma tela preta após a inicialização, mesmo depois de esperar dez minutos. Isto pode indicar que sua máquina não consegue executar o Sistema Guix; talvez você queira instalar o Guix em uma distribuição estrangeira (@pxref{Binary Installation}). Mas não desista ainda; uma possível solução alternativa é pressionar a tecla @kbd{e} no menu de inicialização do GRUB e anexar @option{nomodeset} à linha de inicialização do Linux. Às vezes, o problema da tela preta também pode ser resolvido conectando um monitor diferente."

#. type: Plain text
#: guix-git/doc/guix.texi:2310
msgid "@xref{Installing Guix in a VM}, if, instead, you would like to install Guix System in a virtual machine (VM)."
msgstr "@xref{Installing Guix in a VM}, se, em vez disso, você quiser instalar o Guix System em uma máquina virtual (VM)."

#. type: Plain text
#: guix-git/doc/guix.texi:2320
msgid "Once you have booted, you can use the guided graphical installer, which makes it easy to get started (@pxref{Guided Graphical Installation}).  Alternatively, if you are already familiar with GNU/Linux and if you want more control than what the graphical installer provides, you can choose the ``manual'' installation process (@pxref{Manual Installation})."
msgstr "Depois de inicializar, você pode usar o instalador gráfico guiado, o que facilita o início (@pxref{Guided Graphical Installation}). Alternativamente, se você já está familiarizado com GNU/Linux e deseja mais controle do que o instalador gráfico oferece, você pode escolher o processo de instalação \"manual'' (@pxref{Manual Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:2328
msgid "The graphical installer is available on TTY1.  You can obtain root shells on TTYs 3 to 6 by hitting @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, etc.  TTY2 shows this documentation and you can reach it with @kbd{ctrl-alt-f2}.  Documentation is browsable using the Info reader commands (@pxref{Top,,, info-stnd, Stand-alone GNU Info}).  The installation system runs the GPM mouse daemon, which allows you to select text with the left mouse button and to paste it with the middle button."
msgstr "O instalador gráfico está disponível em TTY1. Você pode obter shells root em TTYs 3 a 6 pressionando @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, etc. TTY2 mostra esta documentação e você pode acessá-la com @kbd{ctrl-alt -f2}. A documentação pode ser navegada usando os comandos do leitor de informações (@pxref{Top,,, info-stnd, Stand-alone GNU Info}). O sistema de instalação executa o daemon do mouse GPM, que permite selecionar texto com o botão esquerdo do mouse e colá-lo com o botão do meio."

#. type: quotation
#: guix-git/doc/guix.texi:2333
msgid "Installation requires access to the Internet so that any missing dependencies of your system configuration can be downloaded.  See the ``Networking'' section below."
msgstr "A instalação requer acesso à Internet para que quaisquer dependências ausentes na configuração do sistema possam ser baixadas. Consulte a seção \"Rede\" abaixo."

#. type: Plain text
#: guix-git/doc/guix.texi:2340
msgid "The graphical installer is a text-based user interface.  It will guide you, with dialog boxes, through the steps needed to install GNU@tie{}Guix System."
msgstr "O instalador gráfico é uma interface de usuário baseada em texto. Ele guiará você, com caixas de diálogo, pelas etapas necessárias para instalar o GNU@tie{}Guix System."

#. type: Plain text
#: guix-git/doc/guix.texi:2345
msgid "The first dialog boxes allow you to set up the system as you use it during the installation: you can choose the language, keyboard layout, and set up networking, which will be used during the installation.  The image below shows the networking dialog."
msgstr "As primeiras caixas de diálogo permitem que você configure o sistema conforme você o utiliza durante a instalação: você pode escolher o idioma, o layout do teclado e configurar a rede que será usada durante a instalação. A imagem abaixo mostra a caixa de diálogo de rede."

#. type: Plain text
#: guix-git/doc/guix.texi:2347
msgid "@image{images/installer-network,5in,, networking setup with the graphical installer}"
msgstr "@image{images/installer-network,5in,, configuração de rede com o instalador gráfico}"

#. type: Plain text
#: guix-git/doc/guix.texi:2352
msgid "Later steps allow you to partition your hard disk, as shown in the image below, to choose whether or not to use encrypted file systems, to enter the host name and root password, and to create an additional account, among other things."
msgstr "As etapas posteriores permitem particionar seu disco rígido, conforme mostrado na imagem abaixo, escolher se deseja ou não usar sistemas de arquivos criptografados, inserir o nome do host e a senha root e criar uma conta adicional, entre outras coisas."

#. type: Plain text
#: guix-git/doc/guix.texi:2354
msgid "@image{images/installer-partitions,5in,, partitioning with the graphical installer}"
msgstr "@image{images/installer-partitions,5in,, particionando com o instalador gráfico}"

#. type: Plain text
#: guix-git/doc/guix.texi:2357
msgid "Note that, at any time, the installer allows you to exit the current installation step and resume at a previous step, as show in the image below."
msgstr "Observe que, a qualquer momento, o instalador permite sair da etapa de instalação atual e retomar uma etapa anterior, conforme imagem abaixo."

#. type: Plain text
#: guix-git/doc/guix.texi:2359
msgid "@image{images/installer-resume,5in,, resuming the installation process}"
msgstr "@image{images/installer-resume,5in,, retomando o processo de instalação}"

#. type: Plain text
#: guix-git/doc/guix.texi:2364
msgid "Once you're done, the installer produces an operating system configuration and displays it (@pxref{Using the Configuration System}).  At that point you can hit ``OK'' and installation will proceed.  On success, you can reboot into the new system and enjoy.  @xref{After System Installation}, for what's next!"
msgstr "Quando terminar, o instalador produz uma configuração do sistema operacional e a exibe (@pxref{Using the Configuration System}). Nesse ponto você pode clicar em \"OK'' e a instalação continuará. Se tiver sucesso, você pode reiniciar no novo sistema e aproveitar. @xref{After System Installation}, para saber o que vem a seguir!"

#. type: Plain text
#: guix-git/doc/guix.texi:2374
msgid "This section describes how you would ``manually'' install GNU@tie{}Guix System on your machine.  This option requires familiarity with GNU/Linux, with the shell, and with common administration tools.  If you think this is not for you, consider using the guided graphical installer (@pxref{Guided Graphical Installation})."
msgstr "Esta seção descreve como você instalaria \"manualmente'' o GNU@tie{}Guix System em sua máquina. Esta opção requer familiaridade com GNU/Linux, com o shell e com ferramentas de administração comuns. Se você acha que isso não é para você, considere usar o instalador gráfico guiado (@pxref{Guided Graphical Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:2380
msgid "The installation system provides root shells on TTYs 3 to 6; press @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4}, and so on to reach them.  It includes many common tools needed to install the system, but is also a full-blown Guix System.  This means that you can install additional packages, should you need it, using @command{guix package} (@pxref{Invoking guix package})."
msgstr "O sistema de instalação fornece shells root nos TTYs 3 a 6; pressione @kbd{ctrl-alt-f3}, @kbd{ctrl-alt-f4} e assim por diante para alcançá-los. Inclui muitas ferramentas comuns necessárias para instalar o sistema, mas também é um sistema Guix completo. Isso significa que você pode instalar pacotes adicionais, caso precise, usando @command{guix package} (@pxref{Invoking guix package})."

#. type: subsection
#: guix-git/doc/guix.texi:2387
#, no-wrap
msgid "Keyboard Layout, Networking, and Partitioning"
msgstr "Layout de teclado, rede e particionamento"

#. type: Plain text
#: guix-git/doc/guix.texi:2392
msgid "Before you can install the system, you may want to adjust the keyboard layout, set up networking, and partition your target hard disk.  This section will guide you through this."
msgstr "Antes de instalar o sistema, você pode querer ajustar o layout do teclado, configurar a rede e particionar o disco rígido de destino. Esta seção irá guiá-lo através disso."

#. type: cindex
#: guix-git/doc/guix.texi:2395 guix-git/doc/guix.texi:19141
#, no-wrap
msgid "keyboard layout"
msgstr "disposição do teclado"

#. type: Plain text
#: guix-git/doc/guix.texi:2399
msgid "The installation image uses the US qwerty keyboard layout.  If you want to change it, you can use the @command{loadkeys} command.  For example, the following command selects the Dvorak keyboard layout:"
msgstr "A imagem de instalação usa o layout de teclado qwerty dos EUA. Se quiser alterá-lo, você pode usar o comando @command{loadkeys}. Por exemplo, o comando a seguir seleciona o layout do teclado Dvorak:"

#. type: example
#: guix-git/doc/guix.texi:2402
#, no-wrap
msgid "loadkeys dvorak\n"
msgstr "loadkeys dvorak\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2407
msgid "See the files under @file{/run/current-system/profile/share/keymaps} for a list of available keyboard layouts.  Run @command{man loadkeys} for more information."
msgstr "Consulte os arquivos em @file{/run/current-system/profile/share/keymaps} para obter uma lista de layouts de teclado disponíveis. Execute @command{man loadkeys} para obter mais informações."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:2409
msgid "manual-installation-networking"
msgstr "manual-installation-networking"

#. type: subsubsection
#: guix-git/doc/guix.texi:2409
#, no-wrap
msgid "Networking"
msgstr "Rede"

#. type: Plain text
#: guix-git/doc/guix.texi:2412
msgid "Run the following command to see what your network interfaces are called:"
msgstr "Execute o seguinte comando para ver como são chamadas suas interfaces de rede:"

#. type: example
#: guix-git/doc/guix.texi:2415
#, no-wrap
msgid "ifconfig -a\n"
msgstr "ifconfig -a\n"

#. type: table
#: guix-git/doc/guix.texi:2419 guix-git/doc/guix.texi:2441
msgid "@dots{} or, using the GNU/Linux-specific @command{ip} command:"
msgstr "@dots{} ou, usando o comando @command{ip} específico do GNU/Linux:"

#. type: example
#: guix-git/doc/guix.texi:2422
#, no-wrap
msgid "ip address\n"
msgstr "ip address\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2429
msgid "Wired interfaces have a name starting with @samp{e}; for example, the interface corresponding to the first on-board Ethernet controller is called @samp{eno1}.  Wireless interfaces have a name starting with @samp{w}, like @samp{w1p2s0}."
msgstr "As interfaces com fio têm um nome que começa com @samp{e}; por exemplo, a interface correspondente ao primeiro controlador Ethernet integrado é chamada @samp{eno1}. As interfaces sem fio têm um nome que começa com @samp{w}, como @samp{w1p2s0}."

#. type: item
#: guix-git/doc/guix.texi:2431
#, no-wrap
msgid "Wired connection"
msgstr "Conexão cabeada"

#. type: table
#: guix-git/doc/guix.texi:2434
msgid "To configure a wired network run the following command, substituting @var{interface} with the name of the wired interface you want to use."
msgstr "Para configurar uma rede com fio execute o seguinte comando, substituindo @var{interface} pelo nome da interface com fio que você deseja usar."

#. type: example
#: guix-git/doc/guix.texi:2437
#, no-wrap
msgid "ifconfig @var{interface} up\n"
msgstr "ifconfig @var{interface} up\n"

#. type: example
#: guix-git/doc/guix.texi:2444
#, fuzzy, no-wrap
msgid "ip link set @var{interface} up\n"
msgstr "ip link set @var{interface} up\n"

#. type: item
#: guix-git/doc/guix.texi:2446
#, no-wrap
msgid "Wireless connection"
msgstr "Conexão sem fio"

#. type: cindex
#: guix-git/doc/guix.texi:2447
#, no-wrap
msgid "wireless"
msgstr "sem fio"

#. type: cindex
#: guix-git/doc/guix.texi:2448
#, no-wrap
msgid "WiFi"
msgstr "WiFi"

#. type: table
#: guix-git/doc/guix.texi:2453
msgid "To configure wireless networking, you can create a configuration file for the @command{wpa_supplicant} configuration tool (its location is not important) using one of the available text editors such as @command{nano}:"
msgstr "Para configurar a rede sem fio, você pode criar um arquivo de configuração para a ferramenta de configuração @command{wpa_supplicant} (sua localização não é importante) usando um dos editores de texto disponíveis, como @command{nano}:"

#. type: example
#: guix-git/doc/guix.texi:2456
#, no-wrap
msgid "nano wpa_supplicant.conf\n"
msgstr "nano wpa_supplicant.conf\n"

#. type: table
#: guix-git/doc/guix.texi:2461
msgid "As an example, the following stanza can go to this file and will work for many wireless networks, provided you give the actual SSID and passphrase for the network you are connecting to:"
msgstr "Como exemplo, a sub-rotina a seguir pode ir para este arquivo e funcionará para muitas redes sem fio, desde que você forneça o SSID e a senha reais da rede à qual está se conectando:"

#. type: example
#: guix-git/doc/guix.texi:2468
#, no-wrap
msgid ""
"network=@{\n"
"  ssid=\"@var{my-ssid}\"\n"
"  key_mgmt=WPA-PSK\n"
"  psk=\"the network's secret passphrase\"\n"
"@}\n"
msgstr ""
"network=@{\n"
"  ssid=\"@var{my-ssid}\"\n"
"  key_mgmt=WPA-PSK\n"
"  psk=\"the network's secret passphrase\"\n"
"@}\n"

#. type: table
#: guix-git/doc/guix.texi:2473
msgid "Start the wireless service and run it in the background with the following command (substitute @var{interface} with the name of the network interface you want to use):"
msgstr "Inicie o serviço sem fio e execute-o em segundo plano com o seguinte comando (substitua @var{interface} pelo nome da interface de rede que deseja usar):"

#. type: example
#: guix-git/doc/guix.texi:2476
#, no-wrap
msgid "wpa_supplicant -c wpa_supplicant.conf -i @var{interface} -B\n"
msgstr "wpa_supplicant -c wpa_supplicant.conf -i @var{interface} -B\n"

#. type: table
#: guix-git/doc/guix.texi:2479
msgid "Run @command{man wpa_supplicant} for more information."
msgstr "Execute @command{man wpa_supplicant} para obter mais informações."

#. type: cindex
#: guix-git/doc/guix.texi:2481
#, no-wrap
msgid "DHCP"
msgstr "DHCP"

#. type: Plain text
#: guix-git/doc/guix.texi:2484
msgid "At this point, you need to acquire an IP address.  On a network where IP addresses are automatically assigned @i{via} DHCP, you can run:"
msgstr "Neste ponto, você precisa adquirir um endereço IP. Em uma rede onde os endereços IP são atribuídos automaticamente @i{via} DHCP, você pode executar:"

#. type: example
#: guix-git/doc/guix.texi:2487
#, no-wrap
msgid "dhclient -v @var{interface}\n"
msgstr "dhclient -v @var{interface}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2490
msgid "Try to ping a server to see if networking is up and running:"
msgstr "Tente executar ping em um servidor para ver se a rede está funcionando:"

#. type: example
#: guix-git/doc/guix.texi:2493
#, no-wrap
msgid "ping -c 3 gnu.org\n"
msgstr "ping -c 3 gnu.org\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2497
msgid "Setting up network access is almost always a requirement because the image does not contain all the software and tools that may be needed."
msgstr "Configurar o acesso à rede é quase sempre um requisito porque a imagem não contém todos os softwares e ferramentas que podem ser necessários."

#. type: cindex
#: guix-git/doc/guix.texi:2498
#, no-wrap
msgid "proxy, during system installation"
msgstr "proxy, durante a instalação do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:2501
msgid "If you need HTTP and HTTPS access to go through a proxy, run the following command:"
msgstr "Se você precisar de acesso HTTP e HTTPS para passar por um proxy, execute o seguinte comando:"

#. type: example
#: guix-git/doc/guix.texi:2504
#, no-wrap
msgid "herd set-http-proxy guix-daemon @var{URL}\n"
msgstr "herd set-http-proxy guix-daemon @var{URL}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2509
msgid "where @var{URL} is the proxy URL, for example @code{http://example.org:8118}."
msgstr "onde @var{URL} é a URL do proxy, por exemplo @code{http://example.org:8118}."

#. type: cindex
#: guix-git/doc/guix.texi:2510
#, no-wrap
msgid "installing over SSH"
msgstr "instalando via SSH"

#. type: Plain text
#: guix-git/doc/guix.texi:2513
msgid "If you want to, you can continue the installation remotely by starting an SSH server:"
msgstr "Se desejar, você pode continuar a instalação remotamente iniciando um servidor SSH:"

#. type: example
#: guix-git/doc/guix.texi:2516
#, no-wrap
msgid "herd start ssh-daemon\n"
msgstr "herd start ssh-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2520
msgid "Make sure to either set a password with @command{passwd}, or configure OpenSSH public key authentication before logging in."
msgstr "Certifique-se de definir uma senha com @command{passwd} ou configurar a autenticação de chave pública OpenSSH antes de efetuar login."

#. type: subsubsection
#: guix-git/doc/guix.texi:2521
#, no-wrap
msgid "Disk Partitioning"
msgstr "Particionamento de disco"

#. type: Plain text
#: guix-git/doc/guix.texi:2525
msgid "Unless this has already been done, the next step is to partition, and then format the target partition(s)."
msgstr "A menos que isso já tenha sido feito, o próximo passo é particionar e então formatar a(s) partição(ões) de destino."

#. type: Plain text
#: guix-git/doc/guix.texi:2530
msgid "The installation image includes several partitioning tools, including Parted (@pxref{Overview,,, parted, GNU Parted User Manual}), @command{fdisk}, and @command{cfdisk}.  Run it and set up your disk with the partition layout you want:"
msgstr "A imagem de instalação inclui várias ferramentas de particionamento, incluindo Parted (@pxref{Overview,,, parted, GNU Parted User Manual}), @command{fdisk} e @command{cfdisk}. Execute-a e configure seu disco com o layout de partição que você deseja:"

#. type: example
#: guix-git/doc/guix.texi:2533
#, no-wrap
msgid "cfdisk\n"
msgstr "cfdisk\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2539
msgid "If your disk uses the GUID Partition Table (GPT) format and you plan to install BIOS-based GRUB (which is the default), make sure a BIOS Boot Partition is available (@pxref{BIOS installation,,, grub, GNU GRUB manual})."
msgstr "Se o seu disco usa o formato GUID Partition Table (GPT) e você planeja instalar o GRUB baseado em BIOS (que é o padrão), certifique-se de que uma partição de inicialização do BIOS esteja disponível (@pxref{BIOS installation,,, grub, manual do GNU GRUB})."

#. type: cindex
#: guix-git/doc/guix.texi:2540
#, no-wrap
msgid "EFI, installation"
msgstr "EFI, instalação"

#. type: cindex
#: guix-git/doc/guix.texi:2541
#, no-wrap
msgid "UEFI, installation"
msgstr "UEFI, instalação"

#. type: cindex
#: guix-git/doc/guix.texi:2542
#, no-wrap
msgid "ESP, EFI system partition"
msgstr "ESP, partição do sistema EFI"

#. type: Plain text
#: guix-git/doc/guix.texi:2546
msgid "If you instead wish to use EFI-based GRUB, a FAT32 @dfn{EFI System Partition} (ESP) is required.  This partition can be mounted at @file{/boot/efi} for instance and must have the @code{esp} flag set.  E.g., for @command{parted}:"
msgstr "Se você preferir usar o GRUB baseado em EFI, uma partição de sistema EFI (ESP) FAT32 @dfn{EFI System Partition} é necessária. Essa partição pode ser montada em @file{/boot/efi}, por exemplo, e deve ter o sinalizador @code{esp} definido. Por exemplo, para @command{parted}:"

#. type: example
#: guix-git/doc/guix.texi:2549
#, no-wrap
msgid "parted /dev/sda set 1 esp on\n"
msgstr "parted /dev/sda set 1 esp on\n"

#. type: vindex
#: guix-git/doc/guix.texi:2552 guix-git/doc/guix.texi:45981
#, no-wrap
msgid "grub-bootloader"
msgstr "grub-bootloader"

#. type: vindex
#: guix-git/doc/guix.texi:2553 guix-git/doc/guix.texi:45985
#, no-wrap
msgid "grub-efi-bootloader"
msgstr "grub-efi-bootloader"

#. type: quotation
#: guix-git/doc/guix.texi:2560
msgid "Unsure whether to use EFI- or BIOS-based GRUB? If the directory @file{/sys/firmware/efi} exists in the installation image, then you should probably perform an EFI installation, using @code{grub-efi-bootloader}.  Otherwise you should use the BIOS-based GRUB, known as @code{grub-bootloader}.  @xref{Bootloader Configuration}, for more info on bootloaders."
msgstr "Não tem certeza se deve usar o GRUB baseado em EFI ou BIOS? Se o diretório @file{/sys/firmware/efi} existir na imagem de instalação, então você provavelmente deve executar uma instalação EFI, usando @code{grub-efi-bootloader}. Caso contrário, você deve usar o GRUB baseado em BIOS, conhecido como @code{grub-bootloader}. @xref{Bootloader Configuration}, para mais informações sobre bootloaders."

#. type: Plain text
#: guix-git/doc/guix.texi:2568
msgid "Once you are done partitioning the target hard disk drive, you have to create a file system on the relevant partition(s)@footnote{Currently Guix System only supports ext4, btrfs, JFS, F2FS, and XFS file systems.  In particular, code that reads file system UUIDs and labels only works for these file system types.}.  For the ESP, if you have one and assuming it is @file{/dev/sda1}, run:"
msgstr "Depois de terminar de particionar o disco rígido de destino, você precisa criar um sistema de arquivos na(s) partição(ões) relevante(s)@footnote{Atualmente, o Guix System suporta apenas sistemas de arquivos ext4, btrfs, JFS, F2FS e XFS. Em particular, o código que lê UUIDs e rótulos do sistema de arquivos funciona apenas para esses tipos de sistema de arquivos.}. Para o ESP, se você tiver um e presumindo que seja @file{/dev/sda1}, execute:"

#. type: example
#: guix-git/doc/guix.texi:2571
#, no-wrap
msgid "mkfs.fat -F32 /dev/sda1\n"
msgstr "mkfs.fat -F32 /dev/sda1\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2578
msgid "For the root file system, ext4 is the most widely used format.  Other file systems, such as Btrfs, support compression, which is reported to nicely complement file deduplication that the daemon performs independently of the file system (@pxref{Invoking guix-daemon, deduplication})."
msgstr "Para o sistema de arquivos raiz, ext4 é o formato mais amplamente usado. Outros sistemas de arquivos, como Btrfs, suportam compressão, que é relatada como um bom complemento para a desduplicação de arquivos que o daemon executa independentemente do sistema de arquivos (@pxref{Invoking guix-daemon, deduplication})."

#. type: Plain text
#: guix-git/doc/guix.texi:2585
msgid "Preferably, assign file systems a label so that you can easily and reliably refer to them in @code{file-system} declarations (@pxref{File Systems}).  This is typically done using the @code{-L} option of @command{mkfs.ext4} and related commands.  So, assuming the target root partition lives at @file{/dev/sda2}, a file system with the label @code{my-root} can be created with:"
msgstr "De preferência, atribua um rótulo aos sistemas de arquivos para que você possa se referir a eles de forma fácil e confiável nas declarações @code{file-system} (@pxref{File Systems}). Isso normalmente é feito usando a opção @code{-L} de @command{mkfs.ext4} e comandos relacionados. Então, assumindo que a partição raiz de destino esteja em @file{/dev/sda2}, um sistema de arquivos com o rótulo @code{my-root} pode ser criado com:"

#. type: example
#: guix-git/doc/guix.texi:2588
#, no-wrap
msgid "mkfs.ext4 -L my-root /dev/sda2\n"
msgstr "mkfs.ext4 -L my-root /dev/sda2\n"

#. type: cindex
#: guix-git/doc/guix.texi:2590 guix-git/doc/guix.texi:17824
#, no-wrap
msgid "encrypted disk"
msgstr "disco criptografado"

#. type: Plain text
#: guix-git/doc/guix.texi:2595
msgid "If you are instead planning to encrypt the root partition, you can use the Cryptsetup/LUKS utilities to do that (see @inlinefmtifelse{html, @uref{https://linux.die.net/man/8/cryptsetup, @code{man cryptsetup}}, @code{man cryptsetup}} for more information)."
msgstr "Se você estiver planejando criptografar a partição raiz, você pode usar os utilitários Cryptsetup/LUKS para fazer isso (veja @inlinefmtifelse{html, @uref{https://linux.die.net/man/8/cryptsetup, @code{man cryptsetup}}, @code{man cryptsetup}} para mais informações)."

#. type: Plain text
#: guix-git/doc/guix.texi:2599
msgid "Assuming you want to store the root partition on @file{/dev/sda2}, the command sequence to format it as a LUKS partition would be along these lines:"
msgstr "Supondo que você queira armazenar a partição raiz em @file{/dev/sda2}, a sequência de comandos para formatá-la como uma partição LUKS seria algo como isto:"

#. type: example
#: guix-git/doc/guix.texi:2604
#, no-wrap
msgid ""
"cryptsetup luksFormat /dev/sda2\n"
"cryptsetup open /dev/sda2 my-partition\n"
"mkfs.ext4 -L my-root /dev/mapper/my-partition\n"
msgstr ""
"cryptsetup luksFormat /dev/sda2\n"
"cryptsetup open /dev/sda2 my-partition\n"
"mkfs.ext4 -L my-root /dev/mapper/my-partition\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2609
msgid "Once that is done, mount the target file system under @file{/mnt} with a command like (again, assuming @code{my-root} is the label of the root file system):"
msgstr "Feito isso, monte o sistema de arquivos de destino em @file{/mnt} com um comando como (novamente, assumindo que @code{my-root} é o rótulo do sistema de arquivos raiz):"

#. type: example
#: guix-git/doc/guix.texi:2612
#, no-wrap
msgid "mount LABEL=my-root /mnt\n"
msgstr "mount LABEL=my-root /mnt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2618
msgid "Also mount any other file systems you would like to use on the target system relative to this path.  If you have opted for @file{/boot/efi} as an EFI mount point for example, mount it at @file{/mnt/boot/efi} now so it is found by @code{guix system init} afterwards."
msgstr "Monte também quaisquer outros sistemas de arquivos que você gostaria de usar no sistema de destino em relação a este caminho. Se você optou por @file{/boot/efi} como um ponto de montagem EFI, por exemplo, monte-o em @file{/mnt/boot/efi} agora para que ele seja encontrado por @code{guix system init} depois."

#. type: Plain text
#: guix-git/doc/guix.texi:2622
msgid "Finally, if you plan to use one or more swap partitions (@pxref{Swap Space}), make sure to initialize them with @command{mkswap}.  Assuming you have one swap partition on @file{/dev/sda3}, you would run:"
msgstr "Por fim, se você planeja usar uma ou mais partições swap (@pxref{Swap Space}), certifique-se de inicializá-las com @command{mkswap}. Supondo que você tenha uma partição swap em @file{/dev/sda3}, você executaria:"

#. type: example
#: guix-git/doc/guix.texi:2626
#, no-wrap
msgid ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"
msgstr ""
"mkswap /dev/sda3\n"
"swapon /dev/sda3\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2634
msgid "Alternatively, you may use a swap file.  For example, assuming that in the new system you want to use the file @file{/swapfile} as a swap file, you would run@footnote{This example will work for many types of file systems (e.g., ext4).  However, for copy-on-write file systems (e.g., btrfs), the required steps may be different.  For details, see the manual pages for @command{mkswap} and @command{swapon}.}:"
msgstr "Alternativamente, você pode usar um arquivo de swap. Por exemplo, supondo que no novo sistema você queira usar o arquivo @file{/swapfile} como um arquivo de swap, você executaria @footnote{Este exemplo funcionará para muitos tipos de sistemas de arquivos (por exemplo, ext4). No entanto, para sistemas de arquivos copy-on-write (por exemplo, btrfs), as etapas necessárias podem ser diferentes. Para detalhes, veja as páginas do manual para @command{mkswap} e @command{swapon}.}:"

#. type: example
#: guix-git/doc/guix.texi:2642
#, no-wrap
msgid ""
"# This is 10 GiB of swap space.  Adjust \"count\" to change the size.\n"
"dd if=/dev/zero of=/mnt/swapfile bs=1MiB count=10240\n"
"# For security, make the file readable and writable only by root.\n"
"chmod 600 /mnt/swapfile\n"
"mkswap /mnt/swapfile\n"
"swapon /mnt/swapfile\n"
msgstr ""
"# Este é 10 GiB de espaço de swap. Ajuste \"count\" para alterar o tamanho.\n"
"dd if=/dev/zero of=/mnt/swapfile bs=1MiB count=10240\n"
"# Por segurança, torne o arquivo legível e gravável somente pelo root.\n"
"chmod 600 /mnt/swapfile\n"
"mkswap /mnt/swapfile\n"
"swapon /mnt/swapfile\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2647
msgid "Note that if you have encrypted the root partition and created a swap file in its file system as described above, then the encryption also protects the swap file, just like any other file in that file system."
msgstr "Observe que se você criptografou a partição raiz e criou um arquivo de swap em seu sistema de arquivos, conforme descrito acima, a criptografia também protegerá o arquivo de swap, assim como qualquer outro arquivo naquele sistema de arquivos."

#. type: Plain text
#: guix-git/doc/guix.texi:2653
msgid "With the target partitions ready and the target root mounted on @file{/mnt}, we're ready to go.  First, run:"
msgstr "Com as partições de destino prontas e a raiz de destino montada em @file{/mnt}, estamos prontos para começar. Primeiro, execute:"

#. type: example
#: guix-git/doc/guix.texi:2656
#, no-wrap
msgid "herd start cow-store /mnt\n"
msgstr "herd start cow-store /mnt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2663
msgid "This makes @file{/gnu/store} copy-on-write, such that packages added to it during the installation phase are written to the target disk on @file{/mnt} rather than kept in memory.  This is necessary because the first phase of the @command{guix system init} command (see below) entails downloads or builds to @file{/gnu/store} which, initially, is an in-memory file system."
msgstr "Isso torna @file{/gnu/store} copy-on-write, de modo que os pacotes adicionados a ele durante a fase de instalação são gravados no disco de destino em @file{/mnt} em vez de mantidos na memória. Isso é necessário porque a primeira fase do comando @command{guix system init} (veja abaixo) envolve downloads ou compilações para @file{/gnu/store} que, inicialmente, é um sistema de arquivos na memória."

#. type: Plain text
#: guix-git/doc/guix.texi:2674
msgid "Next, you have to edit a file and provide the declaration of the operating system to be installed.  To that end, the installation system comes with three text editors.  We recommend GNU nano (@pxref{Top,,, nano, GNU nano Manual}), which supports syntax highlighting and parentheses matching; other editors include mg (an Emacs clone), and nvi (a clone of the original BSD @command{vi} editor).  We strongly recommend storing that file on the target root file system, say, as @file{/mnt/etc/config.scm}.  Failing to do that, you will have lost your configuration file once you have rebooted into the newly-installed system."
msgstr "Em seguida, você precisa editar um arquivo e fornecer a declaração do sistema operacional a ser instalado. Para isso, o sistema de instalação vem com três editores de texto. Recomendamos o GNU nano (@pxref{Top,,, nano, GNU nano Manual}), que suporta realce de sintaxe e correspondência de parênteses; outros editores incluem mg (um clone do Emacs) e nvi (um clone do editor original BSD @command{vi}). Recomendamos fortemente armazenar esse arquivo no sistema de arquivos raiz de destino, digamos, como @file{/mnt/etc/config.scm}. Se isso não for feito, você perderá seu arquivo de configuração depois de reinicializar o sistema recém-instalado."

#. type: Plain text
#: guix-git/doc/guix.texi:2681
msgid "@xref{Using the Configuration System}, for an overview of the configuration file.  The example configurations discussed in that section are available under @file{/etc/configuration} in the installation image.  Thus, to get started with a system configuration providing a graphical display server (a ``desktop'' system), you can run something along these lines:"
msgstr "@xref{Using the Configuration System}, para uma visão geral do arquivo de configuração. As configurações de exemplo discutidas nessa seção estão disponíveis em @file{/etc/configuration} na imagem de instalação. Assim, para começar com uma configuração de sistema fornecendo um servidor de exibição gráfica (um sistema ``desktop''), você pode executar algo como estas linhas:"

#. type: example
#: guix-git/doc/guix.texi:2686
#, no-wrap
msgid ""
"# mkdir /mnt/etc\n"
"# cp /etc/configuration/desktop.scm /mnt/etc/config.scm\n"
"# nano /mnt/etc/config.scm\n"
msgstr ""
"# mkdir /mnt/etc\n"
"# cp /etc/configuration/desktop.scm /mnt/etc/config.scm\n"
"# nano /mnt/etc/config.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2690
msgid "You should pay attention to what your configuration file contains, and in particular:"
msgstr "Você deve prestar atenção ao que seu arquivo de configuração contém e, em particular:"

#. type: itemize
#: guix-git/doc/guix.texi:2702
msgid "Make sure the @code{bootloader-configuration} form refers to the targets you want to install GRUB on.  It should mention @code{grub-bootloader} if you are installing GRUB in the legacy way, or @code{grub-efi-bootloader} for newer UEFI systems.  For legacy systems, the @code{targets} field contain the names of the devices, like @code{(list \"/dev/sda\")}; for UEFI systems it names the paths to mounted EFI partitions, like @code{(list \"/boot/efi\")}; do make sure the paths are currently mounted and a @code{file-system} entry is specified in your configuration."
msgstr "Certifique-se de que o formulário @code{bootloader-configuration} se refere aos alvos nos quais você deseja instalar o GRUB. Ele deve mencionar @code{grub-bootloader} se você estiver instalando o GRUB da maneira legada, ou @code{grub-efi-bootloader} para sistemas UEFI mais novos. Para sistemas legados, o campo @code{targets} contém os nomes dos dispositivos, como @code{(list \"/dev/sda\")}; para sistemas UEFI, ele nomeia os caminhos para partições EFI montadas, como @code{(list \"/boot/efi\")}; certifique-se de que os caminhos estejam montados no momento e que uma entrada @code{file-system} esteja especificada em sua configuração."

#. type: itemize
#: guix-git/doc/guix.texi:2708
msgid "Be sure that your file system labels match the value of their respective @code{device} fields in your @code{file-system} configuration, assuming your @code{file-system} configuration uses the @code{file-system-label} procedure in its @code{device} field."
msgstr "Certifique-se de que os rótulos do seu sistema de arquivos correspondam ao valor dos respectivos campos @code{device} na sua configuração @code{file-system}, supondo que sua configuração @code{file-system} use o procedimento @code{file-system-label} no seu campo @code{device}."

#. type: itemize
#: guix-git/doc/guix.texi:2712
msgid "If there are encrypted or RAID partitions, make sure to add a @code{mapped-devices} field to describe them (@pxref{Mapped Devices})."
msgstr "Se houver partições criptografadas ou RAID, certifique-se de adicionar um campo @code{mapped-devices} para descrevê-las (@pxref{Mapped Devices})."

#. type: Plain text
#: guix-git/doc/guix.texi:2717
msgid "Once you are done preparing the configuration file, the new system must be initialized (remember that the target root file system is mounted under @file{/mnt}):"
msgstr "Depois de terminar de preparar o arquivo de configuração, o novo sistema deve ser inicializado (lembre-se de que o sistema de arquivos raiz de destino é montado em @file{/mnt}):"

#. type: example
#: guix-git/doc/guix.texi:2720
#, no-wrap
msgid "guix system init /mnt/etc/config.scm /mnt\n"
msgstr "guix system init /mnt/etc/config.scm /mnt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2727
msgid "This copies all the necessary files and installs GRUB on @file{/dev/sdX}, unless you pass the @option{--no-bootloader} option.  For more information, @pxref{Invoking guix system}.  This command may trigger downloads or builds of missing packages, which can take some time."
msgstr "Isso copia todos os arquivos necessários e instala o GRUB em @file{/dev/sdX}, a menos que você passe a opção @option{--no-bootloader}. Para mais informações, @pxref{Invoking guix system}. Este comando pode disparar downloads ou compilações de pacotes ausentes, o que pode levar algum tempo."

#. type: Plain text
#: guix-git/doc/guix.texi:2735
msgid "Once that command has completed---and hopefully succeeded!---you can run @command{reboot} and boot into the new system.  The @code{root} password in the new system is initially empty; other users' passwords need to be initialized by running the @command{passwd} command as @code{root}, unless your configuration specifies otherwise (@pxref{user-account-password, user account passwords}).  @xref{After System Installation}, for what's next!"
msgstr "Após a conclusão desse comando -- e esperamos que com sucesso! -- você pode executar o comando @command{reboot} e inicializar no novo sistema. A senha @code{root} no novo sistema está inicialmente vazia; as senhas de outros usuários precisam ser inicializadas executando o comando @command{passwd} como @code{root}, a menos que sua configuração especifique o contrário (@pxref{user-account-password, senhas de contas de usuário}). @xref{After System Installation}, para o que vem a seguir!"

#. type: Plain text
#: guix-git/doc/guix.texi:2743
#, fuzzy
#| msgid "Success, you've now booted into Guix System! You can upgrade the system whenever you want by running:"
msgid "Success, you've now booted into Guix System! Login to the system using the non-@code{root} user that you created during installation.  You can upgrade the system whenever you want by running:"
msgstr "Sucesso, agora você inicializou no Guix System! Você pode atualizar o sistema sempre que quiser executando:"

#. type: example
#: guix-git/doc/guix.texi:2747 guix-git/doc/guix.texi:17611
#, fuzzy, no-wrap
msgid ""
"guix pull\n"
"sudo guix system reconfigure /etc/config.scm\n"
msgstr ""
"guix pull\n"
"sudo guix system reconfigure /etc/config.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2752
msgid "This builds a new system @dfn{generation} with the latest packages and services."
msgstr "Isso cria uma nova @dfn{geração} sistema com os pacotes e serviços mais recentes."

#. type: Plain text
#: guix-git/doc/guix.texi:2756
msgid "Now, @pxref{Getting Started with the System}, and join us on @code{#guix} on the Libera.Chat IRC network or on @email{guix-devel@@gnu.org} to share your experience!"
msgstr "Agora, @pxref{Getting Started with the System}, junte-se a nós no @code{#guix} na rede IRC Libera.Chat ou no @email{guix-devel@@gnu.org} para compartilhar sua experiência!"

#. type: section
#: guix-git/doc/guix.texi:2759
#, no-wrap
msgid "Installing Guix in a Virtual Machine"
msgstr "Instalando Guix em uma Máquina Virtual"

#. type: cindex
#: guix-git/doc/guix.texi:2761
#, no-wrap
msgid "virtual machine, Guix System installation"
msgstr "máquina virtual, instalação do Guix System"

#. type: cindex
#: guix-git/doc/guix.texi:2762
#, no-wrap
msgid "virtual private server (VPS)"
msgstr "servidor virtual privado (VPS)"

#. type: cindex
#: guix-git/doc/guix.texi:2763
#, no-wrap
msgid "VPS (virtual private server)"
msgstr "VPS (servidor virtual privado)"

#. type: Plain text
#: guix-git/doc/guix.texi:2767
msgid "If you'd like to install Guix System in a virtual machine (VM) or on a virtual private server (VPS) rather than on your beloved machine, this section is for you."
msgstr "Se você deseja instalar o Guix System em uma máquina virtual (VM) ou em um servidor virtual privado (VPS) em vez de na sua máquina favorita, esta seção é para você."

#. type: Plain text
#: guix-git/doc/guix.texi:2770
msgid "To boot a @uref{https://qemu.org/,QEMU} VM for installing Guix System in a disk image, follow these steps:"
msgstr "Para inicializar uma VM @uref{https://qemu.org/,QEMU} para instalar o Guix System em uma imagem de disco, siga estas etapas:"

#. type: enumerate
#: guix-git/doc/guix.texi:2775
msgid "First, retrieve and decompress the Guix system installation image as described previously (@pxref{USB Stick and DVD Installation})."
msgstr "Primeiro, recupere e descompacte a imagem de instalação do sistema Guix conforme descrito anteriormente (@pxref{USB Stick and DVD Installation})."

#. type: enumerate
#: guix-git/doc/guix.texi:2779
msgid "Create a disk image that will hold the installed system.  To make a qcow2-formatted disk image, use the @command{qemu-img} command:"
msgstr "Crie uma imagem de disco que irá conter o sistema instalado. Para criar uma imagem de disco formatada em qcow2, use o comando @command{qemu-img}:"

#. type: example
#: guix-git/doc/guix.texi:2782
#, no-wrap
msgid "qemu-img create -f qcow2 guix-system.img 50G\n"
msgstr "qemu-img create -f qcow2 guix-system.img 50G\n"

#. type: enumerate
#: guix-git/doc/guix.texi:2786
msgid "The resulting file will be much smaller than 50 GB (typically less than 1 MB), but it will grow as the virtualized storage device is filled up."
msgstr "O arquivo resultante será muito menor que 50 GB (normalmente menos de 1 MB), mas aumentará à medida que o dispositivo de armazenamento virtualizado for preenchido."

#. type: enumerate
#: guix-git/doc/guix.texi:2789
#, fuzzy
#| msgid "Building the Installation Image"
msgid "Boot the USB installation image in a VM:"
msgstr "Compilando a imagem de instalação"

#. type: example
#: guix-git/doc/guix.texi:2795
#, no-wrap
msgid ""
"qemu-system-x86_64 -m 1024 -smp 1 -enable-kvm \\\n"
"  -nic user,model=virtio-net-pci -boot menu=on,order=d \\\n"
"  -drive file=guix-system.img \\\n"
"  -drive media=cdrom,readonly=on,file=guix-system-install-@value{VERSION}.@var{system}.iso\n"
msgstr ""
"qemu-system-x86_64 -m 1024 -smp 1 -enable-kvm \\\n"
"  -nic user,model=virtio-net-pci -boot menu=on,order=d \\\n"
"  -drive file=guix-system.img \\\n"
"  -drive media=cdrom,readonly=on,file=guix-system-install-@value{VERSION}.@var{sistema}.iso\n"

#. type: enumerate
#: guix-git/doc/guix.texi:2799
msgid "@code{-enable-kvm} is optional, but significantly improves performance, @pxref{Running Guix in a VM}."
msgstr "@code{-enable-kvm} é opcional, mas melhora significativamente o desempenho, @pxref{Running Guix in a VM}."

#. type: enumerate
#: guix-git/doc/guix.texi:2803
msgid "You're now root in the VM, proceed with the installation process.  @xref{Preparing for Installation}, and follow the instructions."
msgstr "Agora você está como root na VM, prossiga com o processo de instalação. @xref{Preparing for Installation} e siga as instruções."

#. type: Plain text
#: guix-git/doc/guix.texi:2808
msgid "Once installation is complete, you can boot the system that's on your @file{guix-system.img} image.  @xref{Running Guix in a VM}, for how to do that."
msgstr "Quando a instalação estiver concluída, você pode inicializar o sistema que está na sua imagem @file{guix-system.img}. @xref{Running Guix in a VM}, para saber como fazer isso."

#. type: cindex
#: guix-git/doc/guix.texi:2812
#, no-wrap
msgid "installation image"
msgstr "imagem de instalação"

#. type: Plain text
#: guix-git/doc/guix.texi:2815
msgid "The installation image described above was built using the @command{guix system} command, specifically:"
msgstr "A imagem de instalação descrita acima foi criada usando o comando @command{guix system}, especificamente:"

#. type: example
#: guix-git/doc/guix.texi:2818
#, no-wrap
msgid "guix system image -t iso9660 gnu/system/install.scm\n"
msgstr "guix system image -t iso9660 gnu/system/install.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2823
msgid "Have a look at @file{gnu/system/install.scm} in the source tree, and see also @ref{Invoking guix system} for more information about the installation image."
msgstr "Dê uma olhada em @file{gnu/system/install.scm} na árvore de origem e veja também @ref{Invoking guix system} para mais informações sobre a imagem de instalação."

#. type: section
#: guix-git/doc/guix.texi:2824
#, no-wrap
msgid "Building the Installation Image for ARM Boards"
msgstr "Construindo a imagem de instalação para placas ARM"

#. type: Plain text
#: guix-git/doc/guix.texi:2828
msgid "Many ARM boards require a specific variant of the @uref{https://www.denx.de/wiki/U-Boot/, U-Boot} bootloader."
msgstr "Muitas placas ARM exigem uma variante específica do bootloader @uref{https://www.denx.de/wiki/U-Boot/, U-Boot}."

#. type: Plain text
#: guix-git/doc/guix.texi:2832
msgid "If you build a disk image and the bootloader is not available otherwise (on another boot drive etc), it's advisable to build an image that includes the bootloader, specifically:"
msgstr "Se você criar uma imagem de disco e o bootloader não estiver disponível de outra forma (em outra unidade de inicialização, etc.), é aconselhável criar uma imagem que inclua o bootloader, especificamente:"

#. type: example
#: guix-git/doc/guix.texi:2835
#, no-wrap
msgid "guix system image --system=armhf-linux -e '((@@ (gnu system install) os-with-u-boot) (@@ (gnu system install) installation-os) \"A20-OLinuXino-Lime2\")'\n"
msgstr "guix system image --system=armhf-linux -e '((@@ (gnu system install) os-with-u-boot) (@@ (gnu system install) installation-os) \"A20-OLinuXino-Lime2\")'\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2839
msgid "@code{A20-OLinuXino-Lime2} is the name of the board.  If you specify an invalid board, a list of possible boards will be printed."
msgstr "@code{A20-OLinuXino-Lime2} é o nome do quadro. Se você especificar um quadro inválido, uma lista de quadros possíveis será mostrada."

#. type: Plain text
#: guix-git/doc/guix.texi:2850
msgid "Presumably, you've reached this section because either you have installed Guix on top of another distribution (@pxref{Installation}), or you've installed the standalone Guix System (@pxref{System Installation}).  It's time for you to get started using Guix and this section aims to help you do that and give you a feel of what it's like."
msgstr "Presumivelmente, você chegou a esta seção porque instalou o Guix sobre outra distribuição (@pxref{Installation}) ou instalou o Guix System autônomo (@pxref{System Installation}). É hora de começar a usar o Guix e esta seção tem como objetivo ajudar você a fazer isso e dar uma ideia de como é."

#. type: Plain text
#: guix-git/doc/guix.texi:2854
msgid "Guix is about installing software, so probably the first thing you'll want to do is to actually look for software.  Let's say you're looking for a text editor, you can run:"
msgstr "Guix é sobre instalar software, então provavelmente a primeira coisa que você vai querer fazer é realmente procurar por software. Digamos que você esteja procurando por um editor de texto, você pode executar:"

#. type: example
#: guix-git/doc/guix.texi:2857
#, no-wrap
msgid "guix search text editor\n"
msgstr "guix search text editor\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2864
msgid "This command shows you a number of matching @dfn{packages}, each time showing the package's name, version, a description, and additional info.  Once you've found out the one you want to use, let's say Emacs (ah ha!), you can go ahead and install it (run this command as a regular user, @emph{no need for root privileges}!):"
msgstr "Este comando mostra a você um número de @dfn{pacotes} correspondentes, cada vez mostrando o nome do pacote, versão, uma descrição e informações adicionais. Depois de descobrir qual você quer usar, digamos Emacs (ah ha!), você pode prosseguir e instalá-lo (execute este comando como um usuário regular, @emph{não precisa de privilégios de root}!):"

#. type: example
#: guix-git/doc/guix.texi:2867
#, no-wrap
msgid "guix install emacs\n"
msgstr "guix install emacs\n"

#. type: cindex
#: guix-git/doc/guix.texi:2869 guix-git/doc/guix.texi:3173
#: guix-git/doc/guix.texi:3226
#, no-wrap
msgid "profile"
msgstr "perfil"

#. type: Plain text
#: guix-git/doc/guix.texi:2877
msgid "You've installed your first package, congrats! The package is now visible in your default @dfn{profile}, @file{$HOME/.guix-profile}---a profile is a directory containing installed packages.  In the process, you've probably noticed that Guix downloaded pre-built binaries; or, if you explicitly chose to @emph{not} use pre-built binaries, then probably Guix is still building software (@pxref{Substitutes}, for more info)."
msgstr "Você instalou seu primeiro pacote, parabéns! O pacote agora está visível no seu @dfn{perfil} padrão, @file{$HOME/.guix-profile}---um perfil é um diretório que contém pacotes instalados. No processo, você provavelmente notou que o Guix baixou binários pré-compilados; ou, se você escolheu explicitamente @emph{não} usar binários pré-compilados, então provavelmente o Guix ainda está compilando software (@pxref{Substitutes}, para mais informações)."

#. type: Plain text
#: guix-git/doc/guix.texi:2880
msgid "Unless you're using Guix System, the @command{guix install} command must have printed this hint:"
msgstr "A menos que você esteja usando o Guix System, o comando @command{guix install} deve ter mostrado esta dica:"

#. type: example
#: guix-git/doc/guix.texi:2883
#, no-wrap
msgid ""
"hint: Consider setting the necessary environment variables by running:\n"
"\n"
msgstr ""
"dica: Considere definir as variáveis de ambiente necessárias executando:\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:2886
#, no-wrap
msgid ""
"     GUIX_PROFILE=\"$HOME/.guix-profile\"\n"
"     . \"$GUIX_PROFILE/etc/profile\"\n"
"\n"
msgstr ""
"     GUIX_PROFILE=\"$HOME/.guix-profile\"\n"
"     . \"$GUIX_PROFILE/etc/profile\"\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:2888
#, no-wrap
msgid "Alternately, see `guix package --search-paths -p \"$HOME/.guix-profile\"'.\n"
msgstr "Alternativamente, consulte `guix package --search-paths -p \"$HOME/.guix-profile\"'.\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2902
msgid "Indeed, you must now tell your shell where @command{emacs} and other programs installed with Guix are to be found.  Pasting the two lines above will do just that: it will add @code{$HOME/.guix-profile/bin}---which is where the installed package is---to the @code{PATH} environment variable.  You can paste these two lines in your shell so they take effect right away, but more importantly you should add them to @file{~/.bash_profile} (or equivalent file if you do not use Bash) so that environment variables are set next time you spawn a shell.  You only need to do this once and other search paths environment variables will be taken care of similarly---e.g., if you eventually install @code{python} and Python libraries, @env{GUIX_PYTHONPATH} will be defined."
msgstr "De fato, agora você deve informar ao seu shell onde @command{emacs} e outros programas instalados com Guix podem ser encontrados. Colar as duas linhas acima fará exatamente isso: adicionará @code{$HOME/.guix-profile/bin}---que é onde o pacote instalado está---à variável de ambiente @code{PATH}. Você pode colar essas duas linhas no seu shell para que elas entrem em vigor imediatamente, mas o mais importante é adicioná-las a @file{~/.bash_profile} (ou arquivo equivalente se você não usar Bash) para que as variáveis de ambiente sejam definidas na próxima vez que você gerar um shell. Você só precisa fazer isso uma vez e outras variáveis de ambiente de caminhos de busca serão cuidadas de forma semelhante---por exemplo, se você eventualmente instalar @code{python} e bibliotecas Python, @env{GUIX_PYTHONPATH} será definido."

#. type: Plain text
#: guix-git/doc/guix.texi:2905
msgid "You can go on installing packages at your will.  To list installed packages, run:"
msgstr "Você pode continuar instalando pacotes à vontade. Para listar os pacotes instalados, execute:"

#. type: example
#: guix-git/doc/guix.texi:2908
#, no-wrap
msgid "guix package --list-installed\n"
msgstr "guix package --list-installed\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2913
msgid "To remove a package, you would unsurprisingly run @command{guix remove}.  A distinguishing feature is the ability to @dfn{roll back} any operation you made---installation, removal, upgrade---by simply typing:"
msgstr "Para remover um pacote, você executaria, sem surpresa, @command{guix remove}. Um recurso diferenciador é a capacidade de @dfn{reverter} qualquer operação que você fez---instalação, remoção, atualização---simplesmente digitando:"

#. type: example
#: guix-git/doc/guix.texi:2916
#, no-wrap
msgid "guix package --roll-back\n"
msgstr "guix package --roll-back\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2921
msgid "This is because each operation is in fact a @dfn{transaction} that creates a new @dfn{generation}.  These generations and the difference between them can be displayed by running:"
msgstr "Isso ocorre porque cada operação é, na verdade, uma @dfn{transação} que cria uma nova @dfn{geração}. Essas gerações e a diferença entre elas podem ser exibidas executando:"

#. type: example
#: guix-git/doc/guix.texi:2924
#, no-wrap
msgid "guix package --list-generations\n"
msgstr "guix package --list-generations\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2927
msgid "Now you know the basics of package management!"
msgstr "Agora você conhece os conceitos básicos de gerenciamento de pacotes!"

#. type: quotation
#: guix-git/doc/guix.texi:2928 guix-git/doc/guix.texi:2991
#: guix-git/doc/guix.texi:7941
#, no-wrap
msgid "Going further"
msgstr "Indo além"

#. type: quotation
#: guix-git/doc/guix.texi:2936
msgid "@xref{Package Management}, for more about package management.  You may like @dfn{declarative} package management with @command{guix package --manifest}, managing separate @dfn{profiles} with @option{--profile}, deleting old generations, collecting garbage, and other nifty features that will come in handy as you become more familiar with Guix.  If you are a developer, @pxref{Development} for additional tools.  And if you're curious, @pxref{Features}, to peek under the hood."
msgstr "@xref{Package Management}, para mais informações sobre gerenciamento de pacotes. Você pode gostar do gerenciamento de pacotes @dfn{declarativo} com @command{guix package --manifest}, gerenciar @dfn{perfis} separados com @option{--profile}, excluir gerações antigas, coletar lixo e outros recursos interessantes que serão úteis à medida que você se familiarizar com o Guix. Se você for um desenvolvedor, @pxref{Development} para ferramentas adicionais. E se estiver curioso, @pxref{Features}, para dar uma olhada nos bastidores."

#. type: quotation
#: guix-git/doc/guix.texi:2940
msgid "You can also manage the configuration of your entire @dfn{home environment}---your user ``dot files'', services, and packages---using Guix Home.  @xref{Home Configuration}, to learn more about it!"
msgstr "Você também pode gerenciar a configuração de todo o seu ambiente @dfn{pessoal} --- seus \"arquivos dot'' de usuário, serviços e pacotes --- usando o Guix Home. @xref{Home Configuration}, para saber mais sobre isso!"

#. type: Plain text
#: guix-git/doc/guix.texi:2945
msgid "Once you've installed a set of packages, you will want to periodically @emph{upgrade} them to the latest and greatest version.  To do that, you will first pull the latest revision of Guix and its package collection:"
msgstr "Depois de instalar um conjunto de pacotes, você vai querer @emph{atualizá-los} periodicamente para a versão mais recente e melhor. Para fazer isso, você primeiro vai puxar a revisão mais recente do Guix e sua coleção de pacotes:"

#. type: Plain text
#: guix-git/doc/guix.texi:2955
msgid "The end result is a new @command{guix} command, under @file{~/.config/guix/current/bin}.  Unless you're on Guix System, the first time you run @command{guix pull}, be sure to follow the hint that the command prints and, similar to what we saw above, paste these two lines in your terminal and @file{.bash_profile}:"
msgstr "O resultado final é um novo comando @command{guix}, em @file{~/.config/guix/current/bin}. A menos que você esteja no Guix System, na primeira vez que você executar @command{guix pull}, certifique-se de seguir a dica que o comando imprime e, similar ao que vimos acima, cole estas duas linhas no seu terminal e @file{.bash_profile}:"

#. type: example
#: guix-git/doc/guix.texi:2959
#, no-wrap
msgid ""
"GUIX_PROFILE=\"$HOME/.config/guix/current\"\n"
". \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""
"GUIX_PROFILE=\"$HOME/.config/guix/current\"\n"
". \"$GUIX_PROFILE/etc/profile\"\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2963
msgid "You must also instruct your shell to point to this new @command{guix}:"
msgstr "Você também deve instruir seu shell a apontar para este novo @command{guix}:"

#. type: example
#: guix-git/doc/guix.texi:2966
#, no-wrap
msgid "hash guix\n"
msgstr "hash guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2970
msgid "At this point, you're running a brand new Guix.  You can thus go ahead and actually upgrade all the packages you previously installed:"
msgstr "Neste ponto, você está executando um Guix novinho em folha. Você pode então prosseguir e realmente atualizar todos os pacotes que você instalou anteriormente:"

#. type: example
#: guix-git/doc/guix.texi:2973
#, no-wrap
msgid "guix upgrade\n"
msgstr "guix upgrade\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2979
msgid "As you run this command, you will see that binaries are downloaded (or perhaps some packages are built), and eventually you end up with the upgraded packages.  Should one of these upgraded packages not be to your liking, remember you can always roll back!"
msgstr "Ao executar este comando, você verá que os binários são baixados (ou talvez alguns pacotes são construídos) e, eventualmente, você acaba com os pacotes atualizados. Se um desses pacotes atualizados não for do seu agrado, lembre-se de que você sempre pode reverter!"

#. type: Plain text
#: guix-git/doc/guix.texi:2982
msgid "You can display the exact revision of Guix you're currently using by running:"
msgstr "Você pode exibir a revisão exata do Guix que está usando atualmente executando:"

#. type: example
#: guix-git/doc/guix.texi:2985
#, no-wrap
msgid "guix describe\n"
msgstr "guix describe\n"

#. type: Plain text
#: guix-git/doc/guix.texi:2990
msgid "The information it displays is @emph{all it takes to reproduce the exact same Guix}, be it at a different point in time or on a different machine."
msgstr "As informações exibidas são @emph{tudo o que é necessário para reproduzir exatamente o mesmo Guix}, seja em um momento diferente ou em uma máquina diferente."

#. type: quotation
#: guix-git/doc/guix.texi:2996
msgid "@xref{Invoking guix pull}, for more information.  @xref{Channels}, on how to specify additional @dfn{channels} to pull packages from, how to replicate Guix, and more.  You may also find @command{time-machine} handy (@pxref{Invoking guix time-machine})."
msgstr "@xref{Invoking guix pull}, para mais informações. @xref{Channels}, sobre como especificar @dfn{canais} adicionais para extrair pacotes, como replicar Guix e muito mais. Você também pode achar @command{time-machine} útil (@pxref{Invoking guix time-machine})."

#. type: Plain text
#: guix-git/doc/guix.texi:3001
msgid "If you installed Guix System, one of the first things you'll want to do is to upgrade your system.  Once you've run @command{guix pull} to get the latest Guix, you can upgrade the system like this:"
msgstr "Se você instalou o Guix System, uma das primeiras coisas que você vai querer fazer é atualizar seu sistema. Depois de executar @command{guix pull} para obter o Guix mais recente, você pode atualizar o sistema assim:"

#. type: example
#: guix-git/doc/guix.texi:3004 guix-git/doc/guix.texi:17524
#, no-wrap
msgid "sudo guix system reconfigure /etc/config.scm\n"
msgstr "sudo guix system reconfigure /etc/config.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3010
msgid "Upon completion, the system runs the latest versions of its software packages.  Just like for packages, you can always @emph{roll back} to a previous generation @emph{of the whole system}.  @xref{Getting Started with the System}, to learn how to manage your system."
msgstr "Após a conclusão, o sistema executa as versões mais recentes de seus pacotes de software. Assim como para pacotes, você sempre pode @emph{reverter} para uma geração anterior @emph{de todo o sistema}. @xref{Getting Started with the System}, para aprender como gerenciar seu sistema."

#. type: Plain text
#: guix-git/doc/guix.texi:3012
msgid "Now you know enough to get started!"
msgstr "Agora você sabe o suficiente para começar!"

#. type: quotation
#: guix-git/doc/guix.texi:3013
#, no-wrap
msgid "Resources"
msgstr "Recursos"

#. type: quotation
#: guix-git/doc/guix.texi:3016
msgid "The rest of this manual provides a reference for all things Guix.  Here are some additional resources you may find useful:"
msgstr "O restante deste manual fornece uma referência para todas as coisas do Guix. Aqui estão alguns recursos adicionais que você pode achar úteis:"

#. type: itemize
#: guix-git/doc/guix.texi:3021
msgid "@xref{Top,,, guix-cookbook, The GNU Guix Cookbook}, for a list of ``how-to'' style of recipes for a variety of applications."
msgstr "@xref{Top,,, guix-cookbook.pt_BR, O Livro de Receitas do GNU Guix}, para uma lista de receitas no estilo \"como fazer\" para uma variedade de aplicações."

#. type: itemize
#: guix-git/doc/guix.texi:3026
msgid "The @uref{https://guix.gnu.org/guix-refcard.pdf, GNU Guix Reference Card} lists in two pages most of the commands and options you'll ever need."
msgstr "O @uref{https://guix.gnu.org/guix-refcard.pdf, GNU Guix Reference Card} lista em duas páginas a maioria dos comandos e opções que você precisará."

#. type: itemize
#: guix-git/doc/guix.texi:3031
msgid "The web site contains @uref{https://guix.gnu.org/en/videos/, instructional videos} covering topics such as everyday use of Guix, how to get help, and how to become a contributor."
msgstr "O site contém @uref{https://guix.gnu.org/en/videos/, vídeos instrucionais} que abordam tópicos como o uso diário do Guix, como obter ajuda e como se tornar um colaborador."

#. type: itemize
#: guix-git/doc/guix.texi:3035
msgid "@xref{Documentation}, to learn how to access documentation on your computer."
msgstr "@xref{Documentation}, para aprender como acessar a documentação no seu computador."

#. type: quotation
#: guix-git/doc/guix.texi:3038
msgid "We hope you will enjoy Guix as much as the community enjoys building it!"
msgstr "Esperamos que você goste do Guix tanto quanto a comunidade gosta de criá-lo!"

#. type: Plain text
#: guix-git/doc/guix.texi:3049
msgid "The purpose of GNU Guix is to allow users to easily install, upgrade, and remove software packages, without having to know about their build procedures or dependencies.  Guix also goes beyond this obvious set of features."
msgstr "O propósito do GNU Guix é permitir que os usuários instalem, atualizem e removam facilmente pacotes de software, sem precisar saber sobre seus procedimentos de construção ou dependências. O Guix também vai além desse conjunto óbvio de recursos."

#. type: Plain text
#: guix-git/doc/guix.texi:3057
msgid "This chapter describes the main features of Guix, as well as the package management tools it provides.  Along with the command-line interface described below (@pxref{Invoking guix package, @code{guix package}}), you may also use the Emacs-Guix interface (@pxref{Top,,, emacs-guix, The Emacs-Guix Reference Manual}), after installing @code{emacs-guix} package (run @kbd{M-x guix-help} command to start with it):"
msgstr "Este capítulo descreve os principais recursos do Guix, bem como as ferramentas de gerenciamento de pacotes que ele fornece. Junto com a interface de linha de comando descrita abaixo (@pxref{Invoking guix package, @code{guix package}}), você também pode usar a interface Emacs-Guix (@pxref{Top,,, emacs-guix, The Emacs-Guix Reference Manual}), após instalar o pacote @code{emacs-guix} (execute o comando @kbd{M-x guix-help} para começar com ele):"

#. type: example
#: guix-git/doc/guix.texi:3060
#, no-wrap
msgid "guix install emacs-guix\n"
msgstr "guix install emacs-guix\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3082
msgid "Here we assume you've already made your first steps with Guix (@pxref{Getting Started}) and would like to get an overview about what's going on under the hood."
msgstr "Aqui presumimos que você já deu os primeiros passos com o Guix (@pxref{Getting Started}) e gostaria de ter uma visão geral do que está acontecendo nos bastidores."

#. type: Plain text
#: guix-git/doc/guix.texi:3086
msgid "When using Guix, each package ends up in the @dfn{package store}, in its own directory---something that resembles @file{/gnu/store/xxx-package-1.2}, where @code{xxx} is a base32 string."
msgstr "Ao usar o Guix, cada pacote acaba no @dfn{armazém de pacotes}, em seu próprio diretório — algo que lembra @file{/gnu/store/xxx-package-1.2}, onde @code{xxx} é uma string base32."

#. type: Plain text
#: guix-git/doc/guix.texi:3091
msgid "Instead of referring to these directories, users have their own @dfn{profile}, which points to the packages that they actually want to use.  These profiles are stored within each user's home directory, at @code{$HOME/.guix-profile}."
msgstr "Em vez de se referir a esses diretórios, os usuários têm seu próprio @dfn{perfil}, que aponta para os pacotes que eles realmente querem usar. Esses perfis são armazenados dentro do diretório pessoal de cada usuário, em @code{$HOME/.guix-profile}."

#. type: Plain text
#: guix-git/doc/guix.texi:3099
msgid "For example, @code{alice} installs GCC 4.7.2.  As a result, @file{/home/alice/.guix-profile/bin/gcc} points to @file{/gnu/store/@dots{}-gcc-4.7.2/bin/gcc}.  Now, on the same machine, @code{bob} had already installed GCC 4.8.0.  The profile of @code{bob} simply continues to point to @file{/gnu/store/@dots{}-gcc-4.8.0/bin/gcc}---i.e., both versions of GCC coexist on the same system without any interference."
msgstr "Por exemplo, @code{alice} instala o GCC 4.7.2. Como resultado, @file{/home/alice/.guix-profile/bin/gcc} aponta para @file{/gnu/store/@dots{}-gcc-4.7.2/bin/gcc}. Agora, na mesma máquina, @code{bob} já tinha instalado o GCC 4.8.0. O perfil de @code{bob} simplesmente continua a apontar para @file{/gnu/store/@dots{}-gcc-4.8.0/bin/gcc}---ou seja, ambas as versões do GCC coexistem no mesmo sistema sem nenhuma interferência."

#. type: Plain text
#: guix-git/doc/guix.texi:3103
msgid "The @command{guix package} command is the central tool to manage packages (@pxref{Invoking guix package}).  It operates on the per-user profiles, and can be used @emph{with normal user privileges}."
msgstr "O comando @command{guix package} é a ferramenta central para gerenciar pacotes (@pxref{Invoking guix package}). Ele opera nos perfis por usuário e pode ser usado @emph{com privilégios normais de usuário}."

#. type: cindex
#: guix-git/doc/guix.texi:3104 guix-git/doc/guix.texi:3188
#, no-wrap
msgid "transactions"
msgstr "transações"

#. type: Plain text
#: guix-git/doc/guix.texi:3111
msgid "The command provides the obvious install, remove, and upgrade operations.  Each invocation is actually a @emph{transaction}: either the specified operation succeeds, or nothing happens.  Thus, if the @command{guix package} process is terminated during the transaction, or if a power outage occurs during the transaction, then the user's profile remains in its previous state, and remains usable."
msgstr "O comando fornece as operações óbvias de instalação, remoção e atualização. Cada invocação é, na verdade, uma @emph{transação}: ou a operação especificada é bem-sucedida ou nada acontece. Portanto, se o processo @command{guix package} for encerrado durante a transação, ou se ocorrer uma queda de energia durante a transação, o perfil do usuário permanecerá em seu estado anterior e continuará utilizável."

#. type: Plain text
#: guix-git/doc/guix.texi:3119
msgid "In addition, any package transaction may be @emph{rolled back}.  So, if, for example, an upgrade installs a new version of a package that turns out to have a serious bug, users may roll back to the previous instance of their profile, which was known to work well.  Similarly, the global system configuration on Guix is subject to transactional upgrades and roll-back (@pxref{Getting Started with the System})."
msgstr "Além disso, qualquer transação de pacote pode ser @emph{revertida}. Então, se, por exemplo, uma atualização instalar uma nova versão de um pacote que acabe tendo um bug sério, os usuários podem reverter para a instância anterior de seu perfil, que era conhecida por funcionar bem. Da mesma forma, a configuração global do sistema no Guix está sujeita a atualizações transacionais e roll-back (@pxref{Getting Started with the System})."

#. type: Plain text
#: guix-git/doc/guix.texi:3126
msgid "All packages in the package store may be @emph{garbage-collected}.  Guix can determine which packages are still referenced by user profiles, and remove those that are provably no longer referenced (@pxref{Invoking guix gc}).  Users may also explicitly remove old generations of their profile so that the packages they refer to can be collected."
msgstr "Todos os pacotes no repositório de pacotes podem ser @emph{garbage-collected}. O Guix pode determinar quais pacotes ainda são referenciados por perfis de usuário e remover aqueles que comprovadamente não são mais referenciados (@pxref{Invoking guix gc}). Os usuários também podem remover explicitamente gerações antigas de seus perfis para que os pacotes aos quais eles se referem possam ser coletados."

#. type: Plain text
#: guix-git/doc/guix.texi:3139
msgid "Guix takes a @dfn{purely functional} approach to package management, as described in the introduction (@pxref{Introduction}).  Each @file{/gnu/store} package directory name contains a hash of all the inputs that were used to build that package---compiler, libraries, build scripts, etc.  This direct correspondence allows users to make sure a given package installation matches the current state of their distribution.  It also helps maximize @dfn{build reproducibility}: thanks to the isolated build environments that are used, a given build is likely to yield bit-identical files when performed on different machines (@pxref{Invoking guix-daemon, container})."
msgstr "Guix adota uma abordagem @dfn{puramente funcional} para gerenciamento de pacotes, conforme descrito na introdução (@pxref{Introduction}). Cada nome de diretório de pacote @file{/gnu/store} contém um hash de todas as entradas que foram usadas para construir aquele pacote---compilador, bibliotecas, scripts de construção, etc. Essa correspondência direta permite que os usuários tenham certeza de que uma determinada instalação de pacote corresponde ao estado atual de sua distribuição. Também ajuda a maximizar a @dfn{reprodutibilidade da construção}: graças aos ambientes de construção isolados que são usados, uma determinada construção provavelmente produzirá arquivos de bits idênticos quando executada em máquinas diferentes (@pxref{Invoking guix-daemon, container})."

#. type: Plain text
#: guix-git/doc/guix.texi:3150
msgid "This foundation allows Guix to support @dfn{transparent binary/source deployment}.  When a pre-built binary for a @file{/gnu/store} item is available from an external source---a @dfn{substitute}, Guix just downloads it and unpacks it; otherwise, it builds the package from source, locally (@pxref{Substitutes}).  Because build results are usually bit-for-bit reproducible, users do not have to trust servers that provide substitutes: they can force a local build and @emph{challenge} providers (@pxref{Invoking guix challenge})."
msgstr "Essa base permite que o Guix suporte @dfn{transparent binary/source deployment}. Quando um binário pré-construído para um item @file{/gnu/store} está disponível em uma fonte externa---um @dfn{substituto}, o Guix apenas o baixa e descompacta; caso contrário, ele constrói o pacote a partir da fonte, localmente (@pxref{Substitutes}). Como os resultados da construção são geralmente reproduzíveis bit a bit, os usuários não precisam confiar em servidores que fornecem substitutos: eles podem forçar uma construção local e @emph{desafiar} os provedores (@pxref{Invoking guix challenge})."

#. type: Plain text
#: guix-git/doc/guix.texi:3156
msgid "Control over the build environment is a feature that is also useful for developers.  The @command{guix shell} command allows developers of a package to quickly set up the right development environment for their package, without having to manually install the dependencies of the package into their profile (@pxref{Invoking guix shell})."
msgstr "O controle sobre o ambiente de construção é um recurso que também é útil para desenvolvedores. O comando @command{guix shell} permite que os desenvolvedores de um pacote configurem rapidamente o ambiente de desenvolvimento correto para seu pacote, sem ter que instalar manualmente as dependências do pacote em seu perfil (@pxref{Invoking guix shell})."

#. type: cindex
#: guix-git/doc/guix.texi:3157
#, no-wrap
msgid "replication, of software environments"
msgstr "replicação, de ambientes de software"

#. type: cindex
#: guix-git/doc/guix.texi:3158
#, no-wrap
msgid "provenance tracking, of software artifacts"
msgstr "rastreamento de proveniência, de artefatos de software"

#. type: Plain text
#: guix-git/doc/guix.texi:3165
msgid "All of Guix and its package definitions is version-controlled, and @command{guix pull} allows you to ``travel in time'' on the history of Guix itself (@pxref{Invoking guix pull}).  This makes it possible to replicate a Guix instance on a different machine or at a later point in time, which in turn allows you to @emph{replicate complete software environments}, while retaining precise @dfn{provenance tracking} of the software."
msgstr "Todo o Guix e suas definições de pacote são controlados por versão, e @command{guix pull} permite que você \"viaje no tempo'' no histórico do próprio Guix (@pxref{Invoking guix pull}). Isso torna possível replicar uma instância do Guix em uma máquina diferente ou em um ponto posterior no tempo, o que por sua vez permite que você @emph{replique ambientes de software completos}, enquanto retém o @dfn{rastreamento de procedência} preciso do software."

#. type: section
#: guix-git/doc/guix.texi:3167
#, no-wrap
msgid "Invoking @command{guix package}"
msgstr "Invocando @command{guix package}"

#. type: cindex
#: guix-git/doc/guix.texi:3169
#, no-wrap
msgid "installing packages"
msgstr "instalando pacotes"

#. type: cindex
#: guix-git/doc/guix.texi:3170
#, no-wrap
msgid "removing packages"
msgstr "removendo pacotes"

#. type: cindex
#: guix-git/doc/guix.texi:3171
#, no-wrap
msgid "package installation"
msgstr "instalação de pacote"

#. type: cindex
#: guix-git/doc/guix.texi:3172
#, no-wrap
msgid "package removal"
msgstr "remoção de pacote"

#. type: command{#1}
#: guix-git/doc/guix.texi:3174
#, no-wrap
msgid "guix package"
msgstr "guix package"

#. type: Plain text
#: guix-git/doc/guix.texi:3183
msgid "The @command{guix package} command is the tool that allows users to install, upgrade, and remove packages, as well as rolling back to previous configurations.  These operations work on a user @dfn{profile}---a directory of installed packages.  Each user has a default profile in @file{$HOME/.guix-profile}.  The command operates only on the user's own profile, and works with normal user privileges (@pxref{Features}).  Its syntax is:"
msgstr "O comando @command{guix package} é a ferramenta que permite aos usuários instalar, atualizar e remover pacotes, bem como reverter para configurações anteriores. Essas operações funcionam no @dfn{perfil} de um usuário---um diretório de pacotes instalados. Cada usuário tem um perfil padrão em @file{$HOME/.guix-profile}. O comando opera apenas no próprio perfil do usuário e funciona com privilégios de usuário normais (@pxref{Features}). Sua sintaxe é:"

#. type: example
#: guix-git/doc/guix.texi:3186
#, no-wrap
msgid "guix package @var{options}\n"
msgstr "guix package @var{opções}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3193
msgid "Primarily, @var{options} specifies the operations to be performed during the transaction.  Upon completion, a new profile is created, but previous @dfn{generations} of the profile remain available, should the user want to roll back."
msgstr "Principalmente, @var{opções} especifica as operações a serem executadas durante a transação. Após a conclusão, um novo perfil é criado, mas as @dfn{gerações} anteriores do perfil permanecem disponíveis, caso o usuário queira reverter."

#. type: Plain text
#: guix-git/doc/guix.texi:3196
msgid "For example, to remove @code{lua} and install @code{guile} and @code{guile-cairo} in a single transaction:"
msgstr "Por exemplo, para remover @code{lua} e instalar @code{guile} e @code{guile-cairo} em uma única transação:"

#. type: example
#: guix-git/doc/guix.texi:3199
#, no-wrap
msgid "guix package -r lua -i guile guile-cairo\n"
msgstr "guix package -r lua -i guile guile-cairo\n"

#. type: cindex
#: guix-git/doc/guix.texi:3201
#, no-wrap
msgid "aliases, for @command{guix package}"
msgstr "aliases, para @command{guix package}"

#. type: Plain text
#: guix-git/doc/guix.texi:3203
msgid "For your convenience, we also provide the following aliases:"
msgstr "Para sua conveniência, também fornecemos os seguintes aliases:"

#. type: itemize
#: guix-git/doc/guix.texi:3207
msgid "@command{guix search} is an alias for @command{guix package -s},"
msgstr "@command{guix search} é um alias para @command{guix package -s},"

#. type: itemize
#: guix-git/doc/guix.texi:3209
msgid "@command{guix install} is an alias for @command{guix package -i},"
msgstr "@command{guix install} é um alias para @command{guix package -i},"

#. type: itemize
#: guix-git/doc/guix.texi:3211
msgid "@command{guix remove} is an alias for @command{guix package -r},"
msgstr "@command{guix remove} é um alias para @command{guix package -r},"

#. type: itemize
#: guix-git/doc/guix.texi:3213
msgid "@command{guix upgrade} is an alias for @command{guix package -u},"
msgstr "@command{guix upgrade} é um alias para @command{guix package -u},"

#. type: itemize
#: guix-git/doc/guix.texi:3215
msgid "and @command{guix show} is an alias for @command{guix package --show=}."
msgstr "e @command{guix show} é um alias para @command{guix package --show=}."

#. type: Plain text
#: guix-git/doc/guix.texi:3220
msgid "These aliases are less expressive than @command{guix package} and provide fewer options, so in some cases you'll probably want to use @command{guix package} directly."
msgstr "Esses aliases são menos expressivos que @command{guix package} e oferecem menos opções, então em alguns casos você provavelmente desejará usar @command{guix package} diretamente."

#. type: Plain text
#: guix-git/doc/guix.texi:3225
msgid "@command{guix package} also supports a @dfn{declarative approach} whereby the user specifies the exact set of packages to be available and passes it @i{via} the @option{--manifest} option (@pxref{profile-manifest, @option{--manifest}})."
msgstr "@command{guix package} também suporta uma @dfn{abordagem declarativa} em que o usuário especifica o conjunto exato de pacotes que estarão disponíveis e passa a ele @i{via} a opção @option{--manifest} (@pxref{profile-manifest, @option{--manifest}})."

#. type: Plain text
#: guix-git/doc/guix.texi:3232
msgid "For each user, a symlink to the user's default profile is automatically created in @file{$HOME/.guix-profile}.  This symlink always points to the current generation of the user's default profile.  Thus, users can add @file{$HOME/.guix-profile/bin} to their @env{PATH} environment variable, and so on."
msgstr "Para cada usuário, uma ligação simbólica para o perfil padrão do usuário é criado automaticamente em @file{$HOME/.guix-profile}. Esta ligação simbólico sempre aponta para a geração atual do perfil padrão do usuário. Assim, os usuários podem adicionar @file{$HOME/.guix-profile/bin} à sua variável de ambiente @env{PATH} e assim por diante."

#. type: cindex
#: guix-git/doc/guix.texi:3232 guix-git/doc/guix.texi:3458
#, no-wrap
msgid "search paths"
msgstr "caminhos de pesquisa"

#. type: Plain text
#: guix-git/doc/guix.texi:3237
msgid "If you are not using Guix System, consider adding the following lines to your @file{~/.bash_profile} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}) so that newly-spawned shells get all the right environment variable definitions:"
msgstr "Se você não estiver usando o sistema Guix, considere adicionar as seguintes linhas ao seu @file{~/.bash_profile} (@pxref{Bash Startup Files,,, bash, Manual de referência do GNU Bash}) para que os shells recém-gerados obtenham todos as definições corretas de variáveis de ambiente:"

#. type: example
#: guix-git/doc/guix.texi:3241
#, no-wrap
msgid ""
"GUIX_PROFILE=\"$HOME/.guix-profile\" ; \\\n"
"source \"$GUIX_PROFILE/etc/profile\"\n"
msgstr ""
"GUIX_PROFILE=\"$HOME/.guix-profile\" ; \\\n"
"source \"$GUIX_PROFILE/etc/profile\"\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3252
msgid "In a multi-user setup, user profiles are stored in a place registered as a @dfn{garbage-collector root}, which @file{$HOME/.guix-profile} points to (@pxref{Invoking guix gc}).  That directory is normally @code{@var{localstatedir}/guix/profiles/per-user/@var{user}}, where @var{localstatedir} is the value passed to @code{configure} as @option{--localstatedir}, and @var{user} is the user name.  The @file{per-user} directory is created when @command{guix-daemon} is started, and the @var{user} sub-directory is created by @command{guix package}."
msgstr "Em uma configuração multiusuário, os perfis de usuário são armazenados em um local registrado como @dfn{raiz do coletor de lixo}, para o qual @file{$HOME/.guix-profile} aponta (@pxref{Invoking guix gc}). Esse diretório geralmente é @code{@var{localstatedir}/guix/profiles/per-user/@var{usuário}}, onde @var{localstatedir} é o valor passado para @code{configure} como @option{-- localstatedir} e @var{usuário} é o nome do usuário. O diretório @file{per-user} é criado quando @command{guix-daemon} é iniciado, e o subdiretório @var{usuário} é criado por @command{guix package}."

#. type: Plain text
#: guix-git/doc/guix.texi:3254
msgid "The @var{options} can be among the following:"
msgstr "As seguintes @var{opções} podem ser usadas:"

#. type: item
#: guix-git/doc/guix.texi:3257
#, no-wrap
msgid "--install=@var{package} @dots{}"
msgstr "--install=@var{pacote} @dots{}"

#. type: itemx
#: guix-git/doc/guix.texi:3258
#, no-wrap
msgid "-i @var{package} @dots{}"
msgstr "-i @var{pacote} @dots{}"

#. type: table
#: guix-git/doc/guix.texi:3260
msgid "Install the specified @var{package}s."
msgstr "Instale os @var{pacote}s especificados."

#. type: table
#: guix-git/doc/guix.texi:3265
msgid "Each @var{package} may specify a simple package name, such as @code{guile}, optionally followed by an at-sign and version number, such as @code{guile@@3.0.7} or simply @code{guile@@3.0}.  In the latter case, the newest version prefixed by @code{3.0} is selected."
msgstr "Cada @var{pacote} pode especificar um nome de pacote simples como @code{guile}, opcionalmente seguido por uma arroba e número de versão, como @code{guile@@3.0.7} ou simplesmente @code{guile@@3.0}. Neste último caso, a versão mais recente prefixada por @code{3.0} é selecionada."

#. type: table
#: guix-git/doc/guix.texi:3271
msgid "If no version number is specified, the newest available version will be selected.  In addition, such a @var{package} specification may contain a colon, followed by the name of one of the outputs of the package, as in @code{gcc:doc} or @code{binutils@@2.22:lib} (@pxref{Packages with Multiple Outputs})."
msgstr "Se nenhum número de versão for especificado, a versão mais recente disponível será selecionada. Além disso, tal especificação @var{pacote} pode conter dois pontos, seguido pelo nome de uma das saídas do pacote, como em @code{gcc:doc} ou @code{binutils@@2.22:lib} (@pxref{Packages with Multiple Outputs})."

#. type: table
#: guix-git/doc/guix.texi:3275
msgid "Packages with a corresponding name (and optionally version) are searched for among the GNU distribution modules (@pxref{Package Modules})."
msgstr "Pacotes com um nome correspondente (e opcionalmente versão) são procurados entre os módulos de distribuição GNU (@pxref{Package Modules})."

#. type: table
#: guix-git/doc/guix.texi:3279
msgid "Alternatively, a @var{package} can directly specify a store file name such as @file{/gnu/store/...-guile-3.0.7}, as produced by, e.g., @code{guix build}."
msgstr "Alternativamente, um @var{pacote} pode especificar diretamente um nome de arquivo de armazém como @file{/gnu/store/...-guile-3.0.7}, conforme produzido por, por exemplo, @code{guix build}."

#. type: cindex
#: guix-git/doc/guix.texi:3280
#, no-wrap
msgid "propagated inputs"
msgstr "entradas propagadas"

#. type: table
#: guix-git/doc/guix.texi:3286
msgid "Sometimes packages have @dfn{propagated inputs}: these are dependencies that automatically get installed along with the required package (@pxref{package-propagated-inputs, @code{propagated-inputs} in @code{package} objects}, for information about propagated inputs in package definitions)."
msgstr "Às vezes, os pacotes têm @dfn{propagated-inputs}: são dependências que são instaladas automaticamente junto com o pacote necessário (@pxref{package-propagated-inputs, @code{propagated-inputs} em @code{package} objetos}, para obter informações sobre entradas propagadas em definições de pacote)."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3293
msgid "package-cmd-propagated-inputs"
msgstr "package-cmd-propagated-inputs"

#. type: table
#: guix-git/doc/guix.texi:3293
msgid "An example is the GNU MPC library: its C header files refer to those of the GNU MPFR library, which in turn refer to those of the GMP library.  Thus, when installing MPC, the MPFR and GMP libraries also get installed in the profile; removing MPC also removes MPFR and GMP---unless they had also been explicitly installed by the user."
msgstr "Um exemplo é a biblioteca GNU MPC: seus arquivos de cabeçalho C referem-se aos da biblioteca GNU MPFR, que por sua vez se refere aos da biblioteca GMP. Assim, ao instalar o MPC, as bibliotecas MPFR e GMP também são instaladas no perfil; a remoção do MPC também remove o MPFR e o GMP --- a menos que eles também tenham sido explicitamente instalados pelo usuário."

#. type: table
#: guix-git/doc/guix.texi:3298
msgid "Besides, packages sometimes rely on the definition of environment variables for their search paths (see explanation of @option{--search-paths} below).  Any missing or possibly incorrect environment variable definitions are reported here."
msgstr "Além disso, os pacotes às vezes dependem da definição de variáveis de ambiente para seus caminhos de pesquisa (veja a explicação de @option{--search-paths} abaixo). Quaisquer definições de variáveis ambientais ausentes ou possivelmente incorretas são relatadas aqui."

#. type: item
#: guix-git/doc/guix.texi:3299
#, no-wrap
msgid "--install-from-expression=@var{exp}"
msgstr "--install-from-expression=@var{exp}"

#. type: itemx
#: guix-git/doc/guix.texi:3300
#, no-wrap
msgid "-e @var{exp}"
msgstr "-e @var{exp}"

#. type: table
#: guix-git/doc/guix.texi:3302
msgid "Install the package @var{exp} evaluates to."
msgstr "Instale o pacote avaliado por @var{exp}."

#. type: table
#: guix-git/doc/guix.texi:3307
msgid "@var{exp} must be a Scheme expression that evaluates to a @code{<package>} object.  This option is notably useful to disambiguate between same-named variants of a package, with expressions such as @code{(@@ (gnu packages commencement) guile-final)}."
msgstr "@var{exp} deve ser uma expressão de Scheme avaliada como um objeto @code{<package>}. Esta opção é particularmente útil para desambiguar variantes de um pacote com o mesmo nome, com expressões como @code{(@@(gnu packages commencement) guile-final)}."

#. type: table
#: guix-git/doc/guix.texi:3311
msgid "Note that this option installs the first output of the specified package, which may be insufficient when needing a specific output of a multiple-output package."
msgstr "Observe que esta opção instala a primeira saída do pacote especificado, o que pode ser insuficiente quando for necessária uma saída específica de um pacote de múltiplas saídas."

#. type: item
#: guix-git/doc/guix.texi:3312
#, no-wrap
msgid "--install-from-file=@var{file}"
msgstr "--install-from-file=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:3313 guix-git/doc/guix.texi:6309
#: guix-git/doc/guix.texi:13815
#, no-wrap
msgid "-f @var{file}"
msgstr "-f @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:3315
msgid "Install the package that the code within @var{file} evaluates to."
msgstr "Instale o pacote avaliado pelo código em @var{arquivo}."

#. type: table
#: guix-git/doc/guix.texi:3318 guix-git/doc/guix.texi:6315
#: guix-git/doc/guix.texi:6844
msgid "As an example, @var{file} might contain a definition like this (@pxref{Defining Packages}):"
msgstr "Por exemplo, @var{arquivo} pode conter uma definição como esta (@pxref{Defining Packages}):"

#. type: include
#: guix-git/doc/guix.texi:3320 guix-git/doc/guix.texi:13823
#, no-wrap
msgid "package-hello.scm"
msgstr "package-hello.scm"

#. type: table
#: guix-git/doc/guix.texi:3327
msgid "Developers may find it useful to include such a @file{guix.scm} file in the root of their project source tree that can be used to test development snapshots and create reproducible development environments (@pxref{Invoking guix shell})."
msgstr "Os desenvolvedores podem achar útil incluir um arquivo @file{guix.scm} na raiz da árvore de origem do projeto que pode ser usado para testar instantâneos de desenvolvimento e criar ambientes de desenvolvimento reproduzíveis (@pxref{Invoking guix shell})."

#. type: table
#: guix-git/doc/guix.texi:3332
msgid "The @var{file} may also contain a JSON representation of one or more package definitions.  Running @code{guix package -f} on @file{hello.json} with the following contents would result in installing the package @code{greeter} after building @code{myhello}:"
msgstr "O @var{arquivo} também pode conter uma representação JSON de uma ou mais definições de pacote. Executar @code{guix package -f} em @file{hello.json} com o seguinte conteúdo resultaria na instalação do pacote @code{greeter} após construir @code{myhello}:"

#. type: example
#: guix-git/doc/guix.texi:3335 guix-git/doc/guix.texi:13833
#, no-wrap
msgid "@verbatiminclude package-hello.json\n"
msgstr "@verbatiminclude package-hello.json\n"

#. type: item
#: guix-git/doc/guix.texi:3337
#, no-wrap
msgid "--remove=@var{package} @dots{}"
msgstr "--remove=@var{pacote} @dots{}"

#. type: itemx
#: guix-git/doc/guix.texi:3338
#, no-wrap
msgid "-r @var{package} @dots{}"
msgstr "-r @var{pacote} @dots{}"

#. type: table
#: guix-git/doc/guix.texi:3340
msgid "Remove the specified @var{package}s."
msgstr "Remova os @var{pacote}s especificados."

#. type: table
#: guix-git/doc/guix.texi:3345
msgid "As for @option{--install}, each @var{package} may specify a version number and/or output name in addition to the package name.  For instance, @samp{-r glibc:debug} would remove the @code{debug} output of @code{glibc}."
msgstr "Quanto a @option{--install}, cada @var{pacote} pode especificar um número de versão e/ou nome de saída além do nome do pacote. Por exemplo, @samp{-r glibc:debug} removeria a saída de @code{glibc}."

#. type: item
#: guix-git/doc/guix.texi:3346
#, no-wrap
msgid "--upgrade[=@var{regexp} @dots{}]"
msgstr "--upgrade[=@var{regexp} @dots{}]"

#. type: itemx
#: guix-git/doc/guix.texi:3347
#, no-wrap
msgid "-u [@var{regexp} @dots{}]"
msgstr "-u [@var{regexp} @dots{}]"

#. type: cindex
#: guix-git/doc/guix.texi:3348
#, no-wrap
msgid "upgrading packages"
msgstr "atualização de pacotes"

#. type: table
#: guix-git/doc/guix.texi:3352
msgid "Upgrade all the installed packages.  If one or more @var{regexp}s are specified, upgrade only installed packages whose name matches a @var{regexp}.  Also see the @option{--do-not-upgrade} option below."
msgstr "Atualize todos os pacotes instalados. Se um ou mais @var{regexp}s forem especificados, atualize apenas os pacotes instalados cujo nome corresponda a um @var{regexp}. Veja também a opção @option{--do-not-upgrade} abaixo."

#. type: table
#: guix-git/doc/guix.texi:3357
msgid "Note that this upgrades package to the latest version of packages found in the distribution currently installed.  To update your distribution, you should regularly run @command{guix pull} (@pxref{Invoking guix pull})."
msgstr "Note que isso atualiza o pacote para a versão mais recente dos pacotes encontrados na distribuição atualmente instalada. Para atualizar sua distribuição, você deve executar regularmente @command{guix pull} (@pxref{Invoking guix pull})."

#. type: cindex
#: guix-git/doc/guix.texi:3358
#, no-wrap
msgid "package transformations, upgrades"
msgstr "transformações de pacotes, atualizações"

#. type: table
#: guix-git/doc/guix.texi:3363
msgid "When upgrading, package transformations that were originally applied when creating the profile are automatically re-applied (@pxref{Package Transformation Options}).  For example, assume you first installed Emacs from the tip of its development branch with:"
msgstr "Ao atualizar, as transformações de pacote que foram aplicadas originalmente ao criar o perfil são automaticamente reaplicadas (@pxref{Package Transformation Options}). Por exemplo, suponha que você instalou o Emacs pela ponta do seu branch de desenvolvimento com:"

#. type: example
#: guix-git/doc/guix.texi:3366
#, no-wrap
msgid "guix install emacs-next --with-branch=emacs-next=master\n"
msgstr "guix install emacs-next --with-branch=emacs-next=master\n"

#. type: table
#: guix-git/doc/guix.texi:3371
msgid "Next time you run @command{guix upgrade}, Guix will again pull the tip of the Emacs development branch and build @code{emacs-next} from that checkout."
msgstr "Na próxima vez que você executar @command{guix upgrade}, o Guix puxará novamente a ponta do branch de desenvolvimento do Emacs e compilará @code{emacs-next} a partir desse checkout."

#. type: table
#: guix-git/doc/guix.texi:3376
msgid "Note that transformation options such as @option{--with-branch} and @option{--with-source} depend on external state; it is up to you to ensure that they work as expected.  You can also discard a transformations that apply to a package by running:"
msgstr "Observe que opções de transformação como @option{--with-branch} e @option{--with-source} dependem do estado externo; cabe a você garantir que elas funcionem conforme o esperado. Você também pode descartar transformações que se aplicam a um pacote executando:"

#. type: example
#: guix-git/doc/guix.texi:3379
#, no-wrap
msgid "guix install @var{package}\n"
msgstr "guix install @var{pacote}\n"

#. type: item
#: guix-git/doc/guix.texi:3381
#, no-wrap
msgid "--do-not-upgrade[=@var{regexp} @dots{}]"
msgstr "--do-not-upgrade[=@var{regexp} @dots{}]"

#. type: table
#: guix-git/doc/guix.texi:3386
msgid "When used together with the @option{--upgrade} option, do @emph{not} upgrade any packages whose name matches a @var{regexp}.  For example, to upgrade all packages in the current profile except those containing the substring ``emacs'':"
msgstr "Quando usado junto com a opção @option{--upgrade}, @emph{não} atualize nenhum pacote cujo nome corresponda a um @var{regexp}. Por exemplo, para atualizar todos os pacotes no perfil atual, exceto aqueles que contêm a substring \"emacs'':"

#. type: example
#: guix-git/doc/guix.texi:3389
#, no-wrap
msgid "$ guix package --upgrade . --do-not-upgrade emacs\n"
msgstr "$ guix package --upgrade . --do-not-upgrade emacs\n"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3391
#, no-wrap
msgid "profile-manifest"
msgstr "profile-manifest"

#. type: item
#: guix-git/doc/guix.texi:3391 guix-git/doc/guix.texi:6328
#: guix-git/doc/guix.texi:6849 guix-git/doc/guix.texi:7469
#: guix-git/doc/guix.texi:15298 guix-git/doc/guix.texi:17058
#, no-wrap
msgid "--manifest=@var{file}"
msgstr "--manifest=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:3392 guix-git/doc/guix.texi:6329
#: guix-git/doc/guix.texi:6850 guix-git/doc/guix.texi:7470
#: guix-git/doc/guix.texi:15299
#, no-wrap
msgid "-m @var{file}"
msgstr "-m @var{arquivo}"

#. type: cindex
#: guix-git/doc/guix.texi:3393
#, no-wrap
msgid "profile declaration"
msgstr "declaração de perfil"

#. type: cindex
#: guix-git/doc/guix.texi:3394
#, no-wrap
msgid "profile manifest"
msgstr "manifesto de perfil"

#. type: table
#: guix-git/doc/guix.texi:3398
msgid "Create a new generation of the profile from the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Crie uma nova geração do perfil a partir do objeto manifest retornado pelo código Scheme em @var{arquivo}. Esta opção pode ser repetida várias vezes, em cujo caso os manifestos são concatenados."

#. type: table
#: guix-git/doc/guix.texi:3404
msgid "This allows you to @emph{declare} the profile's contents rather than constructing it through a sequence of @option{--install} and similar commands.  The advantage is that @var{file} can be put under version control, copied to different machines to reproduce the same profile, and so on."
msgstr "Isso permite que você @emph{declarando} o conteúdo do perfil em vez de construí-lo por meio de uma sequência de @option{--install} e comandos similares. A vantagem é que @var{arquivo} pode ser colocado sob controle de versão, copiado para máquinas diferentes para reproduzir o mesmo perfil, e assim por diante."

#. type: table
#: guix-git/doc/guix.texi:3407
msgid "@var{file} must return a @dfn{manifest} object, which is roughly a list of packages:"
msgstr "@var{arquivo} deve retornar um objeto @dfn{manifest}, que é aproximadamente uma lista de pacotes:"

#. type: findex
#: guix-git/doc/guix.texi:3408
#, no-wrap
msgid "packages->manifest"
msgstr "packages->manifest"

#. type: lisp
#: guix-git/doc/guix.texi:3411
#, no-wrap
msgid ""
"(use-package-modules guile emacs)\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:3417
#, no-wrap
msgid ""
"(packages->manifest\n"
" (list emacs\n"
"       guile-2.0\n"
"       ;; Use a specific package output.\n"
"       (list guile-2.0 \"debug\")))\n"
msgstr ""
"(packages->manifest\n"
" (list emacs\n"
"       guile-2.0\n"
"       ;; Usa uma saída de pacote específica.\n"
"       (list guile-2.0 \"debug\")))\n"

#. type: table
#: guix-git/doc/guix.texi:3422
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  @xref{export-manifest, @option{--export-manifest}}, to learn how to obtain a manifest file from an existing profile."
msgstr "@xref{Writing Manifests}, para obter informações sobre como escrever um manifesto. @xref{export-manifest, @option{--export-manifest}}, para aprender como obter um arquivo de manifesto de um perfil existente."

#. type: item
#: guix-git/doc/guix.texi:3423 guix-git/doc/guix.texi:4724
#, no-wrap
msgid "--roll-back"
msgstr "--roll-back"

#. type: cindex
#: guix-git/doc/guix.texi:3424 guix-git/doc/guix.texi:4725
#: guix-git/doc/guix.texi:46573 guix-git/doc/guix.texi:52560
#, no-wrap
msgid "rolling back"
msgstr "revertendo"

#. type: cindex
#: guix-git/doc/guix.texi:3425 guix-git/doc/guix.texi:4726
#, no-wrap
msgid "undoing transactions"
msgstr "desfazendo transações"

#. type: cindex
#: guix-git/doc/guix.texi:3426 guix-git/doc/guix.texi:4727
#, no-wrap
msgid "transactions, undoing"
msgstr "transações, desfazendo"

#. type: table
#: guix-git/doc/guix.texi:3429
msgid "Roll back to the previous @dfn{generation} of the profile---i.e., undo the last transaction."
msgstr "Reverta para a @dfn{geração} anterior do perfil, ou seja, desfaça a última transação."

#. type: table
#: guix-git/doc/guix.texi:3432
msgid "When combined with options such as @option{--install}, roll back occurs before any other actions."
msgstr "Quando combinado com opções como @option{--install}, a reversão ocorre antes de qualquer outra ação."

#. type: table
#: guix-git/doc/guix.texi:3436
msgid "When rolling back from the first generation that actually contains installed packages, the profile is made to point to the @dfn{zeroth generation}, which contains no files apart from its own metadata."
msgstr "Ao reverter da primeira geração que realmente contém pacotes instalados, o perfil é feito para apontar para a @dfn{geração zero}, que não contém arquivos além de seus próprios metadados."

#. type: table
#: guix-git/doc/guix.texi:3440
msgid "After having rolled back, installing, removing, or upgrading packages overwrites previous future generations.  Thus, the history of the generations in a profile is always linear."
msgstr "Após ter revertido, instalar, remover ou atualizar pacotes sobrescreve gerações futuras anteriores. Assim, o histórico das gerações em um perfil é sempre linear."

#. type: item
#: guix-git/doc/guix.texi:3441 guix-git/doc/guix.texi:4731
#, no-wrap
msgid "--switch-generation=@var{pattern}"
msgstr "--switch-generation=@var{padrão}"

#. type: itemx
#: guix-git/doc/guix.texi:3442 guix-git/doc/guix.texi:4732
#, no-wrap
msgid "-S @var{pattern}"
msgstr "-S @var{padrão}"

#. type: cindex
#: guix-git/doc/guix.texi:3443 guix-git/doc/guix.texi:3676
#: guix-git/doc/guix.texi:4733 guix-git/doc/guix.texi:46531
#, no-wrap
msgid "generations"
msgstr "gerações"

#. type: table
#: guix-git/doc/guix.texi:3445 guix-git/doc/guix.texi:4735
msgid "Switch to a particular generation defined by @var{pattern}."
msgstr "Mude para uma geração específica definida por @var{padrão}."

#. type: table
#: guix-git/doc/guix.texi:3451 guix-git/doc/guix.texi:4741
msgid "@var{pattern} may be either a generation number or a number prefixed with ``+'' or ``-''.  The latter means: move forward/backward by a specified number of generations.  For example, if you want to return to the latest generation after @option{--roll-back}, use @option{--switch-generation=+1}."
msgstr "@var{padrão} pode ser um número de geração ou um número prefixado com \"+'' ou \"-''. O último significa: mover para frente/para trás por um número especificado de gerações. Por exemplo, se você quiser retornar para a última geração após @option{--roll-back}, use @option{--switch-generation=+1}."

#. type: table
#: guix-git/doc/guix.texi:3456
msgid "The difference between @option{--roll-back} and @option{--switch-generation=-1} is that @option{--switch-generation} will not make a zeroth generation, so if a specified generation does not exist, the current generation will not be changed."
msgstr "A diferença entre @option{--roll-back} e @option{--switch-generation=-1} é que @option{--switch-generation} não fará uma geração zero, então se uma geração especificada não existir, a geração atual não será alterada."

#. type: item
#: guix-git/doc/guix.texi:3457
#, no-wrap
msgid "--search-paths[=@var{kind}]"
msgstr "--search-paths[=@var{tipo}]"

#. type: table
#: guix-git/doc/guix.texi:3463
msgid "Report environment variable definitions, in Bash syntax, that may be needed in order to use the set of installed packages.  These environment variables are used to specify @dfn{search paths} for files used by some of the installed packages."
msgstr "Relata definições de variáveis de ambiente, na sintaxe Bash, que podem ser necessárias para usar o conjunto de pacotes instalados. Essas variáveis de ambiente são usadas para especificar @dfn{caminhos de busca} para arquivos usados por alguns dos pacotes instalados."

#. type: table
#: guix-git/doc/guix.texi:3472
msgid "For example, GCC needs the @env{CPATH} and @env{LIBRARY_PATH} environment variables to be defined so it can look for headers and libraries in the user's profile (@pxref{Environment Variables,,, gcc, Using the GNU Compiler Collection (GCC)}).  If GCC and, say, the C library are installed in the profile, then @option{--search-paths} will suggest setting these variables to @file{@var{profile}/include} and @file{@var{profile}/lib}, respectively (@pxref{Search Paths}, for info on search path specifications associated with packages.)"
msgstr "Por exemplo, o GCC precisa que as variáveis de ambiente @env{CPATH} e @env{LIBRARY_PATH} sejam definidas para que ele possa procurar cabeçalhos e bibliotecas no perfil do usuário (@pxref{Environment Variables,,, gcc, Usando o GNU Compiler Collection (GCC)}). Se o GCC e, digamos, a biblioteca C estiverem instalados no perfil, então @option{--search-paths} sugerirá definir essas variáveis como @file{@var{perfil}/include} e @file{@var{perfil}/lib}, respectivamente (@pxref{Search Paths}, para obter informações sobre especificações de caminho de pesquisa associadas a pacotes.)"

#. type: table
#: guix-git/doc/guix.texi:3475
msgid "The typical use case is to define these environment variables in the shell:"
msgstr "O caso de uso típico é definir essas variáveis de ambiente no shell:"

#. type: example
#: guix-git/doc/guix.texi:3478
#, no-wrap
msgid "$ eval $(guix package --search-paths)\n"
msgstr "$ eval $(guix package --search-paths)\n"

#. type: table
#: guix-git/doc/guix.texi:3484
msgid "@var{kind} may be one of @code{exact}, @code{prefix}, or @code{suffix}, meaning that the returned environment variable definitions will either be exact settings, or prefixes or suffixes of the current value of these variables.  When omitted, @var{kind} defaults to @code{exact}."
msgstr "@var{tipo} pode ser um dos seguintes: @code{exact}, @code{prefix} ou @code{suffix}, o que significa que as definições de variáveis de ambiente retornadas serão configurações exatas ou prefixos ou sufixos do valor atual dessas variáveis. Quando omitido, @var{tipo} assume como padrão @code{exact}."

#. type: table
#: guix-git/doc/guix.texi:3487
msgid "This option can also be used to compute the @emph{combined} search paths of several profiles.  Consider this example:"
msgstr "Esta opção também pode ser usada para calcular os caminhos de busca @emph{combinados} de vários perfis. Considere este exemplo:"

#. type: example
#: guix-git/doc/guix.texi:3492
#, no-wrap
msgid ""
"$ guix package -p foo -i guile\n"
"$ guix package -p bar -i guile-json\n"
"$ guix package -p foo -p bar --search-paths\n"
msgstr ""
"$ guix package -p foo -i guile\n"
"$ guix package -p bar -i guile-json\n"
"$ guix package -p foo -p bar --search-paths\n"

#. type: table
#: guix-git/doc/guix.texi:3497
msgid "The last command above reports about the @env{GUILE_LOAD_PATH} variable, even though, taken individually, neither @file{foo} nor @file{bar} would lead to that recommendation."
msgstr "O último comando acima relata sobre a variável @env{GUILE_LOAD_PATH}, embora, considerados individualmente, nem @file{foo} nem @file{bar} levariam a essa recomendação."

#. type: cindex
#: guix-git/doc/guix.texi:3499
#, fuzzy, no-wrap
msgid "profile, choosing"
msgstr "declaração de perfil"

#. type: item
#: guix-git/doc/guix.texi:3500 guix-git/doc/guix.texi:4761
#: guix-git/doc/guix.texi:5167 guix-git/doc/guix.texi:6388
#: guix-git/doc/guix.texi:6889
#, no-wrap
msgid "--profile=@var{profile}"
msgstr "--profile=@var{perfil}"

#. type: itemx
#: guix-git/doc/guix.texi:3501 guix-git/doc/guix.texi:4762
#: guix-git/doc/guix.texi:5168 guix-git/doc/guix.texi:6389
#: guix-git/doc/guix.texi:6890
#, no-wrap
msgid "-p @var{profile}"
msgstr "-p @var{perfil}"

#. type: table
#: guix-git/doc/guix.texi:3503
msgid "Use @var{profile} instead of the user's default profile."
msgstr "Use @var{perfil} em vez do perfil padrão do usuário."

#. type: table
#: guix-git/doc/guix.texi:3508
msgid "@var{profile} must be the name of a file that will be created upon completion.  Concretely, @var{profile} will be a mere symbolic link (``symlink'') pointing to the actual profile where packages are installed:"
msgstr "@var{perfil} deve ser o nome de um arquivo que será criado após a conclusão. Concretamente, @var{perfil} será uma mera ligação simbólica (\"symlink'') apontanda para o perfil real onde os pacotes estão instalados:"

#. type: example
#: guix-git/doc/guix.texi:3514
#, no-wrap
msgid ""
"$ guix install hello -p ~/code/my-profile\n"
"@dots{}\n"
"$ ~/code/my-profile/bin/hello\n"
"Hello, world!\n"
msgstr ""
"$ guix install hello -p ~/code/my-profile\n"
"@dots{}\n"
"$ ~/code/my-profile/bin/hello\n"
"Olá, mundo!\n"

#. type: table
#: guix-git/doc/guix.texi:3518
msgid "All it takes to get rid of the profile is to remove this symlink and its siblings that point to specific generations:"
msgstr "Tudo o que é preciso para se livrar do perfil é remover este link simbólico e seus irmãos que apontam para gerações específicas:"

#. type: example
#: guix-git/doc/guix.texi:3521
#, no-wrap
msgid "$ rm ~/code/my-profile ~/code/my-profile-*-link\n"
msgstr "$ rm ~/code/my-profile ~/code/my-profile-*-link\n"

#. type: item
#: guix-git/doc/guix.texi:3523
#, no-wrap
msgid "--list-profiles"
msgstr "--list-profiles"

#. type: table
#: guix-git/doc/guix.texi:3525
msgid "List all the user's profiles:"
msgstr "Liste todos os perfis dos usuários:"

#. type: example
#: guix-git/doc/guix.texi:3532
#, no-wrap
msgid ""
"$ guix package --list-profiles\n"
"/home/charlie/.guix-profile\n"
"/home/charlie/code/my-profile\n"
"/home/charlie/code/devel-profile\n"
"/home/charlie/tmp/test\n"
msgstr ""
"$ guix package --list-profiles\n"
"/home/charlie/.guix-profile\n"
"/home/charlie/code/my-profile\n"
"/home/charlie/code/devel-profile\n"
"/home/charlie/tmp/test\n"

#. type: table
#: guix-git/doc/guix.texi:3535
msgid "When running as root, list all the profiles of all the users."
msgstr "Ao executar como root, liste todos os perfis de todos os usuários."

#. type: cindex
#: guix-git/doc/guix.texi:3536
#, no-wrap
msgid "collisions, in a profile"
msgstr "colisões, em um perfil"

#. type: cindex
#: guix-git/doc/guix.texi:3537
#, no-wrap
msgid "colliding packages in profiles"
msgstr "pacotes colidindo em perfis"

#. type: cindex
#: guix-git/doc/guix.texi:3538
#, no-wrap
msgid "profile collisions"
msgstr "colisões de perfil"

#. type: item
#: guix-git/doc/guix.texi:3539
#, no-wrap
msgid "--allow-collisions"
msgstr "--allow-collisions"

#. type: table
#: guix-git/doc/guix.texi:3541
msgid "Allow colliding packages in the new profile.  Use at your own risk!"
msgstr "Permitir pacotes de colisão no novo perfil. Use por sua conta e risco!"

#. type: table
#: guix-git/doc/guix.texi:3545
msgid "By default, @command{guix package} reports as an error @dfn{collisions} in the profile.  Collisions happen when two or more different versions or variants of a given package end up in the profile."
msgstr "Por padrão, @command{guix package} relata como um erro @dfn{collisions} no perfil. Colisões acontecem quando duas ou mais versões ou variantes diferentes de um determinado pacote acabam no perfil."

#. type: item
#: guix-git/doc/guix.texi:3546 guix-git/doc/guix.texi:4812
#: guix-git/doc/guix.texi:7561
#, no-wrap
msgid "--bootstrap"
msgstr "--bootstrap"

#. type: table
#: guix-git/doc/guix.texi:3549
msgid "Use the bootstrap Guile to build the profile.  This option is only useful to distribution developers."
msgstr "Use o bootstrap Guile para construir o perfil. Esta opção é útil somente para desenvolvedores de distribuição."

#. type: Plain text
#: guix-git/doc/guix.texi:3555
msgid "In addition to these actions, @command{guix package} supports the following options to query the current state of a profile, or the availability of packages:"
msgstr "Além dessas ações, @command{guix package} suporta as seguintes opções para consultar o estado atual de um perfil ou a disponibilidade de pacotes:"

#. type: item
#: guix-git/doc/guix.texi:3558
#, no-wrap
msgid "--search=@var{regexp}"
msgstr "--search=@var{regexp}"

#. type: itemx
#: guix-git/doc/guix.texi:3559
#, no-wrap
msgid "-s @var{regexp}"
msgstr "-s @var{regexp}"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3561
msgid "guix-search"
msgstr "guix-search"

#. type: cindex
#: guix-git/doc/guix.texi:3561 guix-git/doc/guix.texi:4216
#, no-wrap
msgid "searching for packages"
msgstr "procurando por pacotes"

#. type: table
#: guix-git/doc/guix.texi:3567
msgid "List the available packages whose name, synopsis, or description matches @var{regexp} (in a case-insensitive fashion), sorted by relevance.  Print all the metadata of matching packages in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr "Liste os pacotes disponíveis cujo nome, sinopse ou descrição correspondem a @var{regexp} (sem distinção entre maiúsculas e minúsculas), classificados por relevância. Imprima todos os metadados dos pacotes correspondentes no formato @code{recutils} (@pxref{Top, bancos de dados GNU recutils,, recutils, manual GNU recutils})."

#. type: table
#: guix-git/doc/guix.texi:3570
msgid "This allows specific fields to be extracted using the @command{recsel} command, for instance:"
msgstr "Isso permite que campos específicos sejam extraídos usando o comando @command{recsel}, por exemplo:"

#. type: example
#: guix-git/doc/guix.texi:3576
#, no-wrap
msgid ""
"$ guix package -s malloc | recsel -p name,version,relevance\n"
"name: jemalloc\n"
"version: 4.5.0\n"
"relevance: 6\n"
"\n"
msgstr ""
"$ guix package -s malloc | recsel -p name,version,relevance\n"
"name: jemalloc\n"
"version: 4.5.0\n"
"relevance: 6\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:3580
#, no-wrap
msgid ""
"name: glibc\n"
"version: 2.25\n"
"relevance: 1\n"
"\n"
msgstr ""
"name: glibc\n"
"version: 2.25\n"
"relevance: 1\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:3584
#, no-wrap
msgid ""
"name: libgc\n"
"version: 7.6.0\n"
"relevance: 1\n"
msgstr ""
"name: libgc\n"
"version: 7.6.0\n"
"relevance: 1\n"

#. type: table
#: guix-git/doc/guix.texi:3588
msgid "Similarly, to show the name of all the packages available under the terms of the GNU@tie{}LGPL version 3:"
msgstr "Da mesma forma, para mostrar o nome de todos os pacotes disponíveis sob os termos da GNU@tie{}LGPL versão 3:"

#. type: example
#: guix-git/doc/guix.texi:3592
#, no-wrap
msgid ""
"$ guix package -s \"\" | recsel -p name -e 'license ~ \"LGPL 3\"'\n"
"name: elfutils\n"
"\n"
msgstr ""
"$ guix package -s \"\" | recsel -p name -e 'license ~ \"LGPL 3\"'\n"
"name: elfutils\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:3595
#, no-wrap
msgid ""
"name: gmp\n"
"@dots{}\n"
msgstr ""
"name: gmp\n"
"@dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:3601
msgid "It is also possible to refine search results using several @code{-s} flags to @command{guix package}, or several arguments to @command{guix search}.  For example, the following command returns a list of board games (this time using the @command{guix search} alias):"
msgstr "Também é possível refinar os resultados da pesquisa usando vários sinalizadores @code{-s} para @command{guix package}, ou vários argumentos para @command{guix search}. Por exemplo, o comando a seguir retorna uma lista de jogos de tabuleiro (desta vez usando o alias @command{guix search}):"

#. type: example
#: guix-git/doc/guix.texi:3606
#, no-wrap
msgid ""
"$ guix search '\\<board\\>' game | recsel -p name\n"
"name: gnubg\n"
"@dots{}\n"
msgstr ""
"$ guix search '\\<board\\>' game | recsel -p name\n"
"name: gnubg\n"
"@dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:3612
msgid "If we were to omit @code{-s game}, we would also get software packages that deal with printed circuit boards; removing the angle brackets around @code{board} would further add packages that have to do with keyboards."
msgstr "Se omitissemos @code{-s game}, também teríamos pacotes de software que lidam com placas de circuito impresso; remover os colchetes angulares em torno de @code{board} adicionaria ainda mais pacotes relacionados a teclados."

#. type: table
#: guix-git/doc/guix.texi:3616
msgid "And now for a more elaborate example.  The following command searches for cryptographic libraries, filters out Haskell, Perl, Python, and Ruby libraries, and prints the name and synopsis of the matching packages:"
msgstr "E agora um exemplo mais elaborado. O comando a seguir procura bibliotecas criptográficas, filtra as bibliotecas Haskell, Perl, Python e Ruby e imprime o nome e a sinopse dos pacotes correspondentes:"

#. type: example
#: guix-git/doc/guix.texi:3620
#, no-wrap
msgid ""
"$ guix search crypto library | \\\n"
"    recsel -e '! (name ~ \"^(ghc|perl|python|ruby)\")' -p name,synopsis\n"
msgstr ""
"$ guix search crypto library | \\\n"
"    recsel -e '! (name ~ \"^(ghc|perl|python|ruby)\")' -p name,synopsis\n"

#. type: table
#: guix-git/doc/guix.texi:3625
msgid "@xref{Selection Expressions,,, recutils, GNU recutils manual}, for more information on @dfn{selection expressions} for @code{recsel -e}."
msgstr "@xref{Selection Expressions,,, recutils, manual GNU recutils}, para obter mais informações sobre @dfn{expressões de seleção} para @code{recsel -e}."

#. type: item
#: guix-git/doc/guix.texi:3626
#, no-wrap
msgid "--show=@var{package}"
msgstr "--show=@var{pacote}"

#. type: table
#: guix-git/doc/guix.texi:3630
msgid "Show details about @var{package}, taken from the list of available packages, in @code{recutils} format (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr "Exibe detalhes sobre @var{pacote}, retirados da lista de pacotes disponíveis, no formato @code{recutils} (@pxref{Top,GNU Recutils Databases,, recutils, GNU Recutils Manual})."

#. type: example
#: guix-git/doc/guix.texi:3635
#, no-wrap
msgid ""
"$ guix package --show=guile | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"
"\n"
msgstr ""
"$ guix package --show=guile | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:3638
#, no-wrap
msgid ""
"name: guile\n"
"version: 3.0.2\n"
"\n"
msgstr ""
"name: guile\n"
"version: 3.0.2\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:3642
#, no-wrap
msgid ""
"name: guile\n"
"version: 2.2.7\n"
"@dots{}\n"
msgstr ""
"name: guile\n"
"version: 2.2.7\n"
"@dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:3646
msgid "You may also specify the full name of a package to only get details about a specific version of it (this time using the @command{guix show} alias):"
msgstr "Você também pode especificar o nome completo de um pacote para obter detalhes apenas sobre uma versão específica dele (desta vez usando o alias @command{guix show}):"

#. type: example
#: guix-git/doc/guix.texi:3650
#, no-wrap
msgid ""
"$ guix show guile@@3.0.5 | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"
msgstr ""
"$ guix show guile@@3.0.5 | recsel -p name,version\n"
"name: guile\n"
"version: 3.0.5\n"

#. type: item
#: guix-git/doc/guix.texi:3652
#, no-wrap
msgid "--list-installed[=@var{regexp}]"
msgstr "--list-installed[=@var{regexp}]"

#. type: itemx
#: guix-git/doc/guix.texi:3653
#, no-wrap
msgid "-I [@var{regexp}]"
msgstr "-I [@var{regexp}]"

#. type: table
#: guix-git/doc/guix.texi:3657
msgid "List the currently installed packages in the specified profile, with the most recently installed packages shown last.  When @var{regexp} is specified, list only installed packages whose name matches @var{regexp}."
msgstr "Lista os pacotes instalados mais recentemente no perfil especificado, com os pacotes instalados mais recentemente mostrados por último. Quando @var{regexp} for especificado, liste apenas os pacotes instalados cujo nome corresponda a @var{regexp}."

#. type: table
#: guix-git/doc/guix.texi:3663
msgid "For each installed package, print the following items, separated by tabs: the package name, its version string, the part of the package that is installed (for instance, @code{out} for the default output, @code{include} for its headers, etc.), and the path of this package in the store."
msgstr "Para cada pacote instalado, imprima os seguintes itens, separados por tabulações: o nome do pacote, sua string de versão e a parte do pacote que está instalada (por exemplo, @code{out} para a saída predefinida, @code{include} para os seus cabeçalhos, etc.) e o caminho deste pacote no armazém."

#. type: item
#: guix-git/doc/guix.texi:3664
#, no-wrap
msgid "--list-available[=@var{regexp}]"
msgstr "--list-available[=@var{regexp}]"

#. type: itemx
#: guix-git/doc/guix.texi:3665
#, no-wrap
msgid "-A [@var{regexp}]"
msgstr "-A [@var{regexp}]"

#. type: table
#: guix-git/doc/guix.texi:3669
msgid "List packages currently available in the distribution for this system (@pxref{GNU Distribution}).  When @var{regexp} is specified, list only available packages whose name matches @var{regexp}."
msgstr "Lista de pacotes atualmente disponíveis na distribuição para este sistema (@pxref{GNU Distribution}). Quando @var{regexp} for especificado, liste apenas os pacotes disponíveis cujo nome corresponda a @var{regexp}."

#. type: table
#: guix-git/doc/guix.texi:3673
msgid "For each package, print the following items separated by tabs: its name, its version string, the parts of the package (@pxref{Packages with Multiple Outputs}), and the source location of its definition."
msgstr "Para cada pacote, imprima os seguintes itens separados por tabulações: seu nome, sua string de versão, as partes do pacote (@pxref{Packages with Multiple Outputs}) e o local de origem de sua definição."

#. type: item
#: guix-git/doc/guix.texi:3674 guix-git/doc/guix.texi:4707
#, no-wrap
msgid "--list-generations[=@var{pattern}]"
msgstr "--list-generations[=@var{padrão}]"

#. type: itemx
#: guix-git/doc/guix.texi:3675 guix-git/doc/guix.texi:4708
#, no-wrap
msgid "-l [@var{pattern}]"
msgstr "-l [@var{padrão}]"

#. type: table
#: guix-git/doc/guix.texi:3681
msgid "Return a list of generations along with their creation dates; for each generation, show the installed packages, with the most recently installed packages shown last.  Note that the zeroth generation is never shown."
msgstr "Retorne uma lista de gerações junto com suas datas de criação; para cada geração, exiba os pacotes instalados, com os pacotes instalados mais recentemente mostrados por último. Observe que a geração zero nunca é mostrada."

#. type: table
#: guix-git/doc/guix.texi:3686
msgid "For each installed package, print the following items, separated by tabs: the name of a package, its version string, the part of the package that is installed (@pxref{Packages with Multiple Outputs}), and the location of this package in the store."
msgstr "Para cada pacote instalado, mostre os seguintes itens, separados por tabulações: o nome de um pacote, sua string de versão, a parte do pacote que está instalada (@pxref{Packages with Multiple Outputs}) e a localização deste pacote em o armazém."

#. type: table
#: guix-git/doc/guix.texi:3689
msgid "When @var{pattern} is used, the command returns only matching generations.  Valid patterns include:"
msgstr "Quando @var{padrão} é usado, o comando retorna apenas gerações correspondentes. Os padrões válidos incluem:"

#. type: item
#: guix-git/doc/guix.texi:3691
#, no-wrap
msgid "@emph{Integers and comma-separated integers}.  Both patterns denote"
msgstr "@emph{Inteiros e números inteiros separados por vírgula}. Ambos os padrões denotam"

#. type: itemize
#: guix-git/doc/guix.texi:3694
msgid "generation numbers.  For instance, @option{--list-generations=1} returns the first one."
msgstr "números de geração. Por exemplo, @option{--list-generations=1} retorna o primeiro."

#. type: itemize
#: guix-git/doc/guix.texi:3697
msgid "And @option{--list-generations=1,8,2} outputs three generations in the specified order.  Neither spaces nor trailing commas are allowed."
msgstr "E @option{--list-generations=1,8,2} gera três gerações na ordem especificada. Não são permitidos espaços nem vírgulas finais."

#. type: item
#: guix-git/doc/guix.texi:3698
#, no-wrap
msgid "@emph{Ranges}.  @option{--list-generations=2..9} prints the"
msgstr "@emph{Intervalos}. @option{--list-generations=2..9} mostra o"

#. type: itemize
#: guix-git/doc/guix.texi:3701
msgid "specified generations and everything in between.  Note that the start of a range must be smaller than its end."
msgstr "gerações especificadas e tudo mais. Observe que o início de um intervalo deve ser menor que o seu final."

#. type: itemize
#: guix-git/doc/guix.texi:3705
msgid "It is also possible to omit the endpoint.  For example, @option{--list-generations=2..}, returns all generations starting from the second one."
msgstr "Também é possível omitir o ponto final. Por exemplo, @option{--list-generations=2..} retorna todas as gerações começando pela segunda."

#. type: item
#: guix-git/doc/guix.texi:3706
#, no-wrap
msgid "@emph{Durations}.  You can also get the last @emph{N}@tie{}days, weeks,"
msgstr "@emph{Duração}. Você também pode visitar os últimos @emph{N}@tie{}dias, semanas,"

#. type: itemize
#: guix-git/doc/guix.texi:3710
msgid "or months by passing an integer along with the first letter of the duration.  For example, @option{--list-generations=20d} lists generations that are up to 20 days old."
msgstr "ou meses passando um número inteiro junto com a primeira letra da duração. Por exemplo, @option{--list-generations=20d} lista gerações com até 20 dias."

#. type: item
#: guix-git/doc/guix.texi:3712 guix-git/doc/guix.texi:4742
#, no-wrap
msgid "--delete-generations[=@var{pattern}]"
msgstr "--delete-generations[=@var{padrão}]"

#. type: itemx
#: guix-git/doc/guix.texi:3713 guix-git/doc/guix.texi:4743
#, no-wrap
msgid "-d [@var{pattern}]"
msgstr "-d [@var{padrão}]"

#. type: table
#: guix-git/doc/guix.texi:3716 guix-git/doc/guix.texi:4746
msgid "When @var{pattern} is omitted, delete all generations except the current one."
msgstr "Quando @var{padrão} for omitido, exclua todas as gerações, exceto a atual."

#. type: table
#: guix-git/doc/guix.texi:3722 guix-git/doc/guix.texi:4752
msgid "This command accepts the same patterns as @option{--list-generations}.  When @var{pattern} is specified, delete the matching generations.  When @var{pattern} specifies a duration, generations @emph{older} than the specified duration match.  For instance, @option{--delete-generations=1m} deletes generations that are more than one month old."
msgstr "Este comando aceita os mesmos padrões de @option{--list-Generations}. Quando @var{pattern} for especificado, exclua as gerações correspondentes. Quando @var{padrão} especifica uma duração, as gerações @emph{mais antigas} que a duração especificada correspondem. Por exemplo, @option{--delete-generations=1m} exclui gerações com mais de um mês."

#. type: table
#: guix-git/doc/guix.texi:3725
msgid "If the current generation matches, it is @emph{not} deleted.  Also, the zeroth generation is never deleted."
msgstr "Se a geração atual corresponder, ela será @emph{não} excluída. Além disso, a geração zero nunca é excluída."

#. type: table
#: guix-git/doc/guix.texi:3728 guix-git/doc/guix.texi:4757
msgid "Note that deleting generations prevents rolling back to them.  Consequently, this command must be used with care."
msgstr "Observe que a exclusão de gerações impede a reversão para elas. Conseqüentemente, este comando deve ser usado com cuidado."

#. type: cindex
#: guix-git/doc/guix.texi:3729 guix-git/doc/guix.texi:6341
#, no-wrap
msgid "manifest, exporting"
msgstr "manifesto, exportando"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:3731
msgid "export-manifest"
msgstr "export-manifest"

#. type: item
#: guix-git/doc/guix.texi:3731 guix-git/doc/guix.texi:6343
#, no-wrap
msgid "--export-manifest"
msgstr "--export-manifest"

#. type: table
#: guix-git/doc/guix.texi:3734
msgid "Write to standard output a manifest suitable for @option{--manifest} corresponding to the chosen profile(s)."
msgstr "Escreva na saída padrão um manifesto adequado para @option{--manifest} correspondente ao(s) perfil(s) selecionado(s)."

#. type: table
#: guix-git/doc/guix.texi:3738
msgid "This option is meant to help you migrate from the ``imperative'' operating mode---running @command{guix install}, @command{guix upgrade}, etc.---to the declarative mode that @option{--manifest} offers."
msgstr "Esta opção destina-se a ajudá-lo a migrar do modo operacional \"imperativo'' --- executando @command{guix install}, @command{guix upgrade}, etc.---para o modo declarativo que @option{--manifest} ofertas."

#. type: table
#: guix-git/doc/guix.texi:3743
msgid "Be aware that the resulting manifest @emph{approximates} what your profile actually contains; for instance, depending on how your profile was created, it can refer to packages or package versions that are not exactly what you specified."
msgstr "Observe que o manifesto resultante @emph{aproxima} o que seu perfil realmente contém; por exemplo, dependendo de como seu perfil foi criado, ele pode se referir a pacotes ou versões de pacotes que não são exatamente o que você especificou."

#. type: table
#: guix-git/doc/guix.texi:3748
msgid "Keep in mind that a manifest is purely symbolic: it only contains package names and possibly versions, and their meaning varies over time.  If you wish to ``pin'' channels to the revisions that were used to build the profile(s), see @option{--export-channels} below."
msgstr "Tenha em mente que um manifesto é puramente simbólico: ele contém apenas nomes de pacotes e possivelmente versões, e seu significado varia com o tempo. Se você quiser ``fixar'' canais nas revisões que foram usadas para construir o(s) perfil(es), veja @option{--export-channels} abaixo."

#. type: cindex
#: guix-git/doc/guix.texi:3749
#, no-wrap
msgid "pinning, channel revisions of a profile"
msgstr "fixação, revisões de canal de um perfil"

#. type: item
#: guix-git/doc/guix.texi:3750
#, no-wrap
msgid "--export-channels"
msgstr "--export-channels"

#. type: table
#: guix-git/doc/guix.texi:3754
msgid "Write to standard output the list of channels used by the chosen profile(s), in a format suitable for @command{guix pull --channels} or @command{guix time-machine --channels} (@pxref{Channels})."
msgstr "Escreva na saída padrão a lista de canais usados pelo(s) perfil(s) selecionado(s), em um formato adequado para @command{guix pull --channels} ou @command{guix time-machine --channels} (@pxref{Channels}) . ."

#. type: table
#: guix-git/doc/guix.texi:3758
msgid "Together with @option{--export-manifest}, this option provides information allowing you to replicate the current profile (@pxref{Replicating Guix})."
msgstr "Juntamente com @option{--export-manifest}, esta opção fornece informações que permitem replicar o perfil atual (@pxref{Replicating Guix})."

#. type: table
#: guix-git/doc/guix.texi:3766
msgid "However, note that the output of this command @emph{approximates} what was actually used to build this profile.  In particular, a single profile might have been built from several different revisions of the same channel.  In that case, @option{--export-manifest} chooses the last one and writes the list of other revisions in a comment.  If you really need to pick packages from different channel revisions, you can use inferiors in your manifest to do so (@pxref{Inferiors})."
msgstr "No entanto, observe que a saída deste comando @emph{aproxima} o que foi realmente usado para construir este perfil. Em particular, um único perfil pode ter sido construído a partir de diversas revisões diferentes do mesmo canal. Nesse caso, @option{--export-manifest} escolhe a última e escreve a lista de outras revisões em um comentário. Se você realmente precisa escolher pacotes de análises de canais diferentes, você pode usar inferiores em seu manifesto para fazer isso (@pxref{Inferiors})."

#. type: table
#: guix-git/doc/guix.texi:3771
msgid "Together with @option{--export-manifest}, this is a good starting point if you are willing to migrate from the ``imperative'' model to the fully declarative model consisting of a manifest file along with a channels file pinning the exact channel revision(s) you want."
msgstr "Juntamente com @option{--export-manifest}, este é um bom ponto de partida se você estiver disposto a migrar do modelo \"imperativo\" para o modelo totalmente declarativo que consiste em um arquivo de manifesto junto com um arquivo de canais fixando o canal exato revisão(ões) que você deseja."

#. type: Plain text
#: guix-git/doc/guix.texi:3778
msgid "Finally, since @command{guix package} may actually start build processes, it supports all the common build options (@pxref{Common Build Options}).  It also supports package transformation options, such as @option{--with-source}, and preserves them across upgrades (@pxref{Package Transformation Options})."
msgstr "Finalmente, como @command{guix package} pode realmente iniciar processos de construção, ele suporta todas as opções de construção comuns (@pxref{Common Build Options}). Ele também oferece suporte a opções de transformação de pacotes, como @option{--with-source}, e as preserva em atualizações (@pxref{Package Transformation Options})."

#. type: cindex
#: guix-git/doc/guix.texi:3783
#, no-wrap
msgid "pre-built binaries"
msgstr "binários pré-construídos"

#. type: Plain text
#: guix-git/doc/guix.texi:3789
msgid "Guix supports transparent source/binary deployment, which means that it can either build things locally, or download pre-built items from a server, or both.  We call these pre-built items @dfn{substitutes}---they are substitutes for local build results.  In many cases, downloading a substitute is much faster than building things locally."
msgstr "Guix suporta implantação transparente de origem/binário, o que significa que ele pode construir coisas localmente ou baixar itens pré-construídos de um servidor, ou ambos. Chamamos esses itens pré-construídos de @dfn{substitutos}---eles são substitutos para resultados de construção local. Em muitos casos, baixar um substituto é muito mais rápido do que construir coisas localmente."

#. type: Plain text
#: guix-git/doc/guix.texi:3794
msgid "Substitutes can be anything resulting from a derivation build (@pxref{Derivations}).  Of course, in the common case, they are pre-built package binaries, but source tarballs, for instance, which also result from derivation builds, can be available as substitutes."
msgstr "Substitutos podem ser qualquer coisa resultante de uma construção de derivação (@pxref{Derivations}). Claro, no caso comum, eles são binários de pacotes pré-construídos, mas tarballs de origem, por exemplo, que também resultam de construções de derivação, podem estar disponíveis como substitutos."

#. type: cindex
#: guix-git/doc/guix.texi:3808
#, no-wrap
msgid "build farm"
msgstr "construir fazenda"

#. type: Plain text
#: guix-git/doc/guix.texi:3819
msgid "@code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} are both front-ends to official build farms that build packages from Guix continuously for some architectures, and make them available as substitutes.  These are the default source of substitutes; which can be overridden by passing the @option{--substitute-urls} option either to @command{guix-daemon} (@pxref{daemon-substitute-urls,, @code{guix-daemon --substitute-urls}})  or to client tools such as @command{guix package} (@pxref{client-substitute-urls,, client @option{--substitute-urls} option})."
msgstr "@code{@value{SUBSTITUTE-SERVER-1}} e @code{@value{SUBSTITUTE-SERVER-2}} são ambos front-ends para farms de build oficiais que constroem pacotes do Guix continuamente para algumas arquiteturas e os disponibilizam como substitutos. Essas são a fonte padrão de substitutos; que podem ser substituídos passando a opção @option{--substitute-urls} para @command{guix-daemon} (@pxref{daemon-substitute-urls,, @code{guix-daemon --substitute-urls}}) ou para ferramentas de cliente como @command{guix package} (@pxref{client-substitute-urls,, client @option{--substitute-urls} option})."

#. type: Plain text
#: guix-git/doc/guix.texi:3825
msgid "Substitute URLs can be either HTTP or HTTPS.  HTTPS is recommended because communications are encrypted; conversely, using HTTP makes all communications visible to an eavesdropper, who could use the information gathered to determine, for instance, whether your system has unpatched security vulnerabilities."
msgstr "URLs substitutos podem ser HTTP ou HTTPS. HTTPS é recomendado porque as comunicações são criptografadas; por outro lado, usar HTTP torna todas as comunicações visíveis para um bisbilhoteiro, que pode usar as informações coletadas para determinar, por exemplo, se seu sistema tem vulnerabilidades de segurança não corrigidas."

#. type: Plain text
#: guix-git/doc/guix.texi:3834
msgid "Substitutes from the official build farms are enabled by default when using Guix System (@pxref{GNU Distribution}).  However, they are disabled by default when using Guix on a foreign distribution, unless you have explicitly enabled them via one of the recommended installation steps (@pxref{Installation}).  The following paragraphs describe how to enable or disable substitutes for the official build farm; the same procedure can also be used to enable substitutes for any other substitute server."
msgstr "Substitutos das build farms oficiais são habilitados por padrão ao usar o Guix System (@pxref{GNU Distribution}). No entanto, eles são desabilitados por padrão ao usar o Guix em uma distribuição estrangeira, a menos que você os tenha habilitado explicitamente por meio de uma das etapas de instalação recomendadas (@pxref{Installation}). Os parágrafos a seguir descrevem como habilitar ou desabilitar substitutos para a build farm oficial; o mesmo procedimento também pode ser usado para habilitar substitutos para qualquer outro servidor substituto."

#. type: cindex
#: guix-git/doc/guix.texi:3838
#, no-wrap
msgid "security"
msgstr "segurança"

#. type: cindex
#: guix-git/doc/guix.texi:3840
#, no-wrap
msgid "access control list (ACL), for substitutes"
msgstr "lista de controle de acesso (ACL), para substitutos"

#. type: cindex
#: guix-git/doc/guix.texi:3841
#, no-wrap
msgid "ACL (access control list), for substitutes"
msgstr "ACL (lista de controle de acesso), para substitutos"

#. type: Plain text
#: guix-git/doc/guix.texi:3847
msgid "To allow Guix to download substitutes from @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} or a mirror, you must add the relevant public key to the access control list (ACL) of archive imports, using the @command{guix archive} command (@pxref{Invoking guix archive}).  Doing so implies that you trust the substitute server to not be compromised and to serve genuine substitutes."
msgstr "Para permitir que o Guix baixe substitutos de @code{@value{SUBSTITUTE-SERVER-1}}, @code{@value{SUBSTITUTE-SERVER-2}} ou um espelho, você deve adicionar a chave pública relevante à lista de controle de acesso (ACL) de importações de arquivo, usando o comando @command{guix archive} (@pxref{Invoking guix archive}). Fazer isso implica que você confia que o servidor substituto não será comprometido e servirá substitutos genuínos."

#. type: quotation
#: guix-git/doc/guix.texi:3852
msgid "If you are using Guix System, you can skip this section: Guix System authorizes substitutes from @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} by default."
msgstr "Se você estiver usando o Guix System, pode pular esta seção: O Guix System autoriza substitutos de @code{@value{SUBSTITUTE-SERVER-1}} e @code{@value{SUBSTITUTE-SERVER-2}} por padrão."

#. type: Plain text
#: guix-git/doc/guix.texi:3860
msgid "The public keys for each of the project maintained substitute servers are installed along with Guix, in @code{@var{prefix}/share/guix/}, where @var{prefix} is the installation prefix of Guix.  If you installed Guix from source, make sure you checked the GPG signature of @file{guix-@value{VERSION}.tar.gz}, which contains this public key file.  Then, you can run something like this:"
msgstr "As chaves públicas para cada um dos servidores substitutos mantidos pelo projeto são instaladas junto com o Guix, em @code{@var{prefix}/share/guix/}, onde @var{prefix} é o prefixo de instalação do Guix. Se você instalou o Guix a partir da fonte, certifique-se de verificar a assinatura GPG de @file{guix-@value{VERSION}.tar.gz}, que contém este arquivo de chave pública. Então, você pode executar algo como isto:"

#. type: example
#: guix-git/doc/guix.texi:3864
#, fuzzy, no-wrap
#| msgid ""
#| "# guix archive --authorize < \\\n"
#| "     ~root/.config/guix/current/share/guix/@value{SUBSTITUTE-SERVER}.pub\n"
msgid ""
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"
msgstr ""
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-1}.pub\n"
"# guix archive --authorize < @var{prefix}/share/guix/@value{SUBSTITUTE-SERVER-2}.pub\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3868
msgid "Once this is in place, the output of a command like @code{guix build} should change from something like:"
msgstr "Uma vez que isso esteja pronto, a saída de um comando como @code{guix build} deve mudar de algo como:"

#. type: example
#: guix-git/doc/guix.texi:3877
#, no-wrap
msgid ""
"$ guix build emacs --dry-run\n"
"The following derivations would be built:\n"
"   /gnu/store/yr7bnx8xwcayd6j95r2clmkdl1qh688w-emacs-24.3.drv\n"
"   /gnu/store/x8qsh1hlhgjx6cwsjyvybnfv2i37z23w-dbus-1.6.4.tar.gz.drv\n"
"   /gnu/store/1ixwp12fl950d15h2cj11c73733jay0z-alsa-lib-1.0.27.1.tar.bz2.drv\n"
"   /gnu/store/nlma1pw0p603fpfiqy7kn4zm105r5dmw-util-linux-2.21.drv\n"
"@dots{}\n"
msgstr ""
"$ guix build emacs --dry-run\n"
"A seguinte derivações seriam compiladas:\n"
"   /gnu/store/yr7bnx8xwcayd6j95r2clmkdl1qh688w-emacs-24.3.drv\n"
"   /gnu/store/x8qsh1hlhgjx6cwsjyvybnfv2i37z23w-dbus-1.6.4.tar.gz.drv\n"
"   /gnu/store/1ixwp12fl950d15h2cj11c73733jay0z-alsa-lib-1.0.27.1.tar.bz2.drv\n"
"   /gnu/store/nlma1pw0p603fpfiqy7kn4zm105r5dmw-util-linux-2.21.drv\n"
"@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3881
msgid "to something like:"
msgstr "para algo como:"

#. type: example
#: guix-git/doc/guix.texi:3890
#, no-wrap
msgid ""
"$ guix build emacs --dry-run\n"
"112.3 MB would be downloaded:\n"
"   /gnu/store/pk3n22lbq6ydamyymqkkz7i69wiwjiwi-emacs-24.3\n"
"   /gnu/store/2ygn4ncnhrpr61rssa6z0d9x22si0va3-libjpeg-8d\n"
"   /gnu/store/71yz6lgx4dazma9dwn2mcjxaah9w77jq-cairo-1.12.16\n"
"   /gnu/store/7zdhgp0n1518lvfn8mb96sxqfmvqrl7v-libxrender-0.9.7\n"
"@dots{}\n"
msgstr ""
"$ guix build emacs --dry-run\n"
"112.3 MB seriam baixados:\n"
"   /gnu/store/pk3n22lbq6ydamyymqkkz7i69wiwjiwi-emacs-24.3\n"
"   /gnu/store/2ygn4ncnhrpr61rssa6z0d9x22si0va3-libjpeg-8d\n"
"   /gnu/store/71yz6lgx4dazma9dwn2mcjxaah9w77jq-cairo-1.12.16\n"
"   /gnu/store/7zdhgp0n1518lvfn8mb96sxqfmvqrl7v-libxrender-0.9.7\n"
"@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3897
msgid "The text changed from ``The following derivations would be built'' to ``112.3 MB would be downloaded''.  This indicates that substitutes from the configured substitute servers are usable and will be downloaded, when possible, for future builds."
msgstr "O texto mudou de \"As seguintes derivações seriam construídas'' para \"112,3 MB seriam baixados''. Isso indica que os substitutos dos servidores substitutos configurados são utilizáveis e serão baixados, quando possível, para construções futuras."

#. type: cindex
#: guix-git/doc/guix.texi:3898
#, no-wrap
msgid "substitutes, how to disable"
msgstr "substitutos, como desabilitar"

#. type: Plain text
#: guix-git/doc/guix.texi:3904
msgid "The substitute mechanism can be disabled globally by running @code{guix-daemon} with @option{--no-substitutes} (@pxref{Invoking guix-daemon}).  It can also be disabled temporarily by passing the @option{--no-substitutes} option to @command{guix package}, @command{guix build}, and other command-line tools."
msgstr "O mecanismo de substituição pode ser desabilitado globalmente executando @code{guix-daemon} com @option{--no-substitutes} (@pxref{Invoking guix-daemon}). Ele também pode ser desabilitado temporariamente passando a opção @option{--no-substitutes} para @command{guix package}, @command{guix build} e outras ferramentas de linha de comando."

#. type: cindex
#: guix-git/doc/guix.texi:3909
#, no-wrap
msgid "substitute servers, adding more"
msgstr "servidores substitutos, adicionando mais"

#. type: Plain text
#: guix-git/doc/guix.texi:3916
msgid "Guix can look up and fetch substitutes from several servers.  This is useful when you are using packages from additional channels for which the official server does not have substitutes but another server provides them.  Another situation where this is useful is when you would prefer to download from your organization's substitute server, resorting to the official server only as a fallback or dismissing it altogether."
msgstr "Guix pode procurar e buscar substitutos de vários servidores. Isso é útil quando você está usando pacotes de canais adicionais para os quais o servidor oficial não tem substitutos, mas outro servidor os fornece. Outra situação em que isso é útil é quando você prefere baixar do servidor substituto da sua organização, recorrendo ao servidor oficial apenas como um fallback ou descartando-o completamente."

#. type: Plain text
#: guix-git/doc/guix.texi:3921
msgid "You can give Guix a list of substitute server URLs and it will check them in the specified order.  You also need to explicitly authorize the public keys of substitute servers to instruct Guix to accept the substitutes they sign."
msgstr "Você pode dar ao Guix uma lista de URLs de servidores substitutos e ele irá verificá-los na ordem especificada. Você também precisa autorizar explicitamente as chaves públicas dos servidores substitutos para instruir o Guix a aceitar os substitutos que eles assinam."

#. type: Plain text
#: guix-git/doc/guix.texi:3928
msgid "On Guix System, this is achieved by modifying the configuration of the @code{guix} service.  Since the @code{guix} service is part of the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the URLs and substitute keys that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr "No Guix System, isso é obtido modificando a configuração do serviço @code{guix}. Como o serviço @code{guix} faz parte das listas padrão de serviços, @code{%base-services} e @code{%desktop-services}, você pode usar @code{modify-services} para alterar sua configuração e adicionar as URLs e chaves substitutas que você deseja (@pxref{Service Reference, @code{modify-services}})."

#. type: Plain text
#: guix-git/doc/guix.texi:3934
msgid "As an example, suppose you want to fetch substitutes from @code{guix.example.org} and to authorize the signing key of that server, in addition to the default @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}}.  The resulting operating system configuration will look something like:"
msgstr "Como exemplo, suponha que você queira buscar substitutos de @code{guix.example.org} e autorizar a chave de assinatura desse servidor, além do padrão @code{@value{SUBSTITUTE-SERVER-1}} e @code{@value{SUBSTITUTE-SERVER-2}}. A configuração do sistema operacional resultante será algo como:"

#. type: lisp
#: guix-git/doc/guix.texi:3951
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
"    ;; with the list of services you're actually using.\n"
"    (modify-services %desktop-services\n"
"      (guix-service-type config =>\n"
"                        (guix-configuration\n"
"                          (inherit config)\n"
"                          (substitute-urls\n"
"                            (append (list \"https://guix.example.org\")\n"
"                                    %default-substitute-urls))\n"
"                          (authorized-keys\n"
"                            (append (list (local-file \"./key.pub\"))\n"
"                                    %default-authorized-guix-keys)))))))\n"
msgstr ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"  ;; Suponha que estamos começando com '%desktop-services'. Substitua-o\n"
"  ;; pela lista de serviços que você está realmente usando.\n"
"  (modify-services %desktop-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        (substitute-urls\n"
"                         (append (list \"https://guix.example.org\")\n"
"                                 %default-substitute-urls))\n"
"                        (authorized-keys\n"
"                         (append (list (local-file \"./key.pub\"))\n"
"                                 %default-authorized-guix-keys)))))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3958
msgid "This assumes that the file @file{key.pub} contains the signing key of @code{guix.example.org}.  With this change in place in your operating system configuration file (say @file{/etc/config.scm}), you can reconfigure and restart the @code{guix-daemon} service or reboot so the changes take effect:"
msgstr "Isso pressupõe que o arquivo @file{key.pub} contém a chave de assinatura de @code{guix.example.org}. Com essa alteração em vigor no arquivo de configuração do seu sistema operacional (digamos @file{/etc/config.scm}), você pode reconfigurar e reiniciar o serviço @code{guix-daemon} ou reinicializar para que as alterações entrem em vigor:"

#. type: example
#: guix-git/doc/guix.texi:3962
#, no-wrap
msgid ""
"$ sudo guix system reconfigure /etc/config.scm\n"
"$ sudo herd restart guix-daemon\n"
msgstr ""
"$ sudo guix system reconfigure /etc/config.scm\n"
"$ sudo herd restart guix-daemon\n"

#. type: Plain text
#: guix-git/doc/guix.texi:3966
msgid "If you're running Guix on a ``foreign distro'', you would instead take the following steps to get substitutes from additional servers:"
msgstr "Se você estiver executando o Guix em uma \"distribuição estrangeira'', você deve seguir os seguintes passos para obter substitutos de servidores adicionais:"

#. type: enumerate
#: guix-git/doc/guix.texi:3975
msgid "Edit the service configuration file for @code{guix-daemon}; when using systemd, this is normally @file{/etc/systemd/system/guix-daemon.service}.  Add the @option{--substitute-urls} option on the @command{guix-daemon} command line and list the URLs of interest (@pxref{daemon-substitute-urls, @code{guix-daemon --substitute-urls}}):"
msgstr "Edite o arquivo de configuração de serviço para @code{guix-daemon}; ao usar systemd, normalmente é @file{/etc/systemd/system/guix-daemon.service}. Adicione a opção @option{--substitute-urls} na linha de comando @command{guix-daemon} e liste as URLs de interesse (@pxref{daemon-substitute-urls, @code{guix-daemon --substitute-urls}}):"

#. type: example
#: guix-git/doc/guix.texi:3978
#, no-wrap
msgid "@dots{} --substitute-urls='https://guix.example.org @value{SUBSTITUTE-URLS}'\n"
msgstr "@dots{} --substitute-urls='https://guix.example.org @value{SUBSTITUTE-URLS}'\n"

#. type: enumerate
#: guix-git/doc/guix.texi:3982
msgid "Restart the daemon.  For systemd, it goes like this:"
msgstr "Reinicie o daemon. Para systemd, é assim:"

#. type: example
#: guix-git/doc/guix.texi:3986
#, no-wrap
msgid ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon.service\n"
msgstr ""
"systemctl daemon-reload\n"
"systemctl restart guix-daemon.service\n"

#. type: enumerate
#: guix-git/doc/guix.texi:3990
msgid "Authorize the key of the new server (@pxref{Invoking guix archive}):"
msgstr "Autorize a chave do novo servidor (@pxref{Invoking guix archive}):"

#. type: example
#: guix-git/doc/guix.texi:3993
#, no-wrap
msgid "guix archive --authorize < key.pub\n"
msgstr "guix archive --authorize < key.pub\n"

#. type: enumerate
#: guix-git/doc/guix.texi:3997
msgid "Again this assumes @file{key.pub} contains the public key that @code{guix.example.org} uses to sign substitutes."
msgstr "Novamente, isso pressupõe que @file{key.pub} contém a chave pública que @code{guix.example.org} usa para assinar substitutos."

#. type: Plain text
#: guix-git/doc/guix.texi:4006
msgid "Now you're all set! Substitutes will be preferably taken from @code{https://guix.example.org}, using @code{@value{SUBSTITUTE-SERVER-1}} then @code{@value{SUBSTITUTE-SERVER-2}} as fallback options.  Of course you can list as many substitute servers as you like, with the caveat that substitute lookup can be slowed down if too many servers need to be contacted."
msgstr "Agora você está pronto! Os substitutos serão preferencialmente retirados de @code{https://guix.example.org}, usando @code{@value{SUBSTITUTE-SERVER-1}} e então @code{@value{SUBSTITUTE-SERVER-2}} como opções de fallback. Claro que você pode listar quantos servidores substitutos quiser, com a ressalva de que a pesquisa de substitutos pode ser desacelerada se muitos servidores precisarem ser contatados."

#. type: quotation
#: guix-git/doc/guix.texi:4007 guix-git/doc/guix.texi:17665
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "Troubleshooting"
msgstr "guix system vm"

#. type: quotation
#: guix-git/doc/guix.texi:4010
msgid "To diagnose problems, you can run @command{guix weather}.  For example, running:"
msgstr "Para diagnosticar problemas, você pode executar @command{guix weather}. Por exemplo, executando:"

#. type: example
#: guix-git/doc/guix.texi:4013
#, fuzzy, no-wrap
#| msgid "Invoking guix weather"
msgid "guix weather coreutils\n"
msgstr "Invocando guix weather"

#. type: quotation
#: guix-git/doc/guix.texi:4020
msgid "not only tells you which of the currently-configured servers has substitutes for the @code{coreutils} package, it also reports whether one of these servers is unauthorized.  @xref{Invoking guix weather}, for more information."
msgstr "não apenas informa qual dos servidores atualmente configurados tem substitutos para o pacote @code{coreutils}, mas também informa se um desses servidores não está autorizado. @xref{Invoking guix weather}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:4025
msgid "Note that there are also situations where one may want to add the URL of a substitute server @emph{without} authorizing its key.  @xref{Substitute Authentication}, to understand this fine point."
msgstr "Observe que também há situações em que é possível adicionar a URL de um servidor substituto @emph{sem} autorizar sua chave. @xref{Substitute Authentication}, para entender esse ponto."

#. type: cindex
#: guix-git/doc/guix.texi:4029
#, no-wrap
msgid "digital signatures"
msgstr "assinaturas digitais"

#. type: Plain text
#: guix-git/doc/guix.texi:4033
msgid "Guix detects and raises an error when attempting to use a substitute that has been tampered with.  Likewise, it ignores substitutes that are not signed, or that are not signed by one of the keys listed in the ACL."
msgstr "Guix detecta e gera um erro ao tentar usar um substituto que foi adulterado. Da mesma forma, ele ignora substitutos que não são assinados, ou que não são assinados por uma das chaves listadas na ACL."

#. type: Plain text
#: guix-git/doc/guix.texi:4039
msgid "There is one exception though: if an unauthorized server provides substitutes that are @emph{bit-for-bit identical} to those provided by an authorized server, then the unauthorized server becomes eligible for downloads.  For example, assume we have chosen two substitute servers with this option:"
msgstr "Há uma exceção, no entanto: se um servidor não autorizado fornecer substitutos que sejam @emph{bit-for-bit idênticos} aos fornecidos por um servidor autorizado, então o servidor não autorizado se torna elegível para downloads. Por exemplo, suponha que escolhemos dois servidores substitutos com esta opção:"

#. type: example
#: guix-git/doc/guix.texi:4042
#, no-wrap
msgid "--substitute-urls=\"https://a.example.org https://b.example.org\"\n"
msgstr "--substitute-urls=\"https://a.example.org https://b.example.org\"\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4053
msgid "If the ACL contains only the key for @samp{b.example.org}, and if @samp{a.example.org} happens to serve the @emph{exact same} substitutes, then Guix will download substitutes from @samp{a.example.org} because it comes first in the list and can be considered a mirror of @samp{b.example.org}.  In practice, independent build machines usually produce the same binaries, thanks to bit-reproducible builds (see below)."
msgstr "Se a ACL contiver apenas a chave para @samp{b.example.org}, e se @samp{a.example.org} servir os substitutos @emph{exatamente os mesmos}, então o Guix baixará os substitutos de @samp{a.example.org} porque ele vem primeiro na lista e pode ser considerado um espelho de @samp{b.example.org}. Na prática, máquinas de construção independentes geralmente produzem os mesmos binários, graças às construções reproduzíveis em bits (veja abaixo)."

#. type: Plain text
#: guix-git/doc/guix.texi:4060
msgid "When using HTTPS, the server's X.509 certificate is @emph{not} validated (in other words, the server is not authenticated), contrary to what HTTPS clients such as Web browsers usually do.  This is because Guix authenticates substitute information itself, as explained above, which is what we care about (whereas X.509 certificates are about authenticating bindings between domain names and public keys)."
msgstr "Ao usar HTTPS, o certificado X.509 do servidor é @emph{não} validado (em outras palavras, o servidor não é autenticado), ao contrário do que os clientes HTTPS, como navegadores da Web, geralmente fazem. Isso ocorre porque o Guix autentica as próprias informações substitutas, conforme explicado acima, que é o que nos importa (enquanto os certificados X.509 são sobre autenticação de ligações entre nomes de domínio e chaves públicas)."

#. type: Plain text
#: guix-git/doc/guix.texi:4072
msgid "Substitutes are downloaded over HTTP or HTTPS@.  The @env{http_proxy} and @env{https_proxy} environment variables can be set in the environment of @command{guix-daemon} and are honored for downloads of substitutes.  Note that the value of those environment variables in the environment where @command{guix build}, @command{guix package}, and other client commands are run has @emph{absolutely no effect}."
msgstr "Os substitutos são baixados por HTTP ou HTTPS@. As variáveis de ambiente @env{http_proxy} e @env{https_proxy} podem ser definidas no ambiente de @command{guix-daemon} e são honradas para downloads de substitutos. Observe que o valor dessas variáveis de ambiente no ambiente onde @command{guix build}, @command{guix package} e outros comandos de cliente são executados não tem @emph{absolutamente nenhum efeito}."

#. type: Plain text
#: guix-git/doc/guix.texi:4081
msgid "Even when a substitute for a derivation is available, sometimes the substitution attempt will fail.  This can happen for a variety of reasons: the substitute server might be offline, the substitute may recently have been deleted, the connection might have been interrupted, etc."
msgstr "Mesmo quando um substituto para uma derivação estiver disponível, às vezes a tentativa de substituição falhará. Isso pode acontecer por vários motivos: o servidor substituto pode estar offline, o servidor substituto pode ter sido excluído recentemente, a conexão pode ter sido interrompida, etc."

#. type: Plain text
#: guix-git/doc/guix.texi:4095
msgid "When substitutes are enabled and a substitute for a derivation is available, but the substitution attempt fails, Guix will attempt to build the derivation locally depending on whether or not @option{--fallback} was given (@pxref{fallback-option,, common build option @option{--fallback}}).  Specifically, if @option{--fallback} was omitted, then no local build will be performed, and the derivation is considered to have failed.  However, if @option{--fallback} was given, then Guix will attempt to build the derivation locally, and the success or failure of the derivation depends on the success or failure of the local build.  Note that when substitutes are disabled or no substitute is available for the derivation in question, a local build will @emph{always} be performed, regardless of whether or not @option{--fallback} was given."
msgstr "Quando os substitutos estão habilitados e um substituto para uma derivação está disponível, mas a tentativa de substituição falha, o Guix tentará construir a derivação localmente dependendo se @option{--fallback} foi fornecido ou não (@pxref{fallback-option,, opção de compilação comum @option{--fallback}}). Especificamente, se @option{--fallback} for omitido, nenhuma construção local será executada e a derivação será considerada como tendo falhado. No entanto, se @option{--fallback} for fornecido, o Guix tentará construir a derivação localmente, e o sucesso ou fracasso da derivação dependerá do sucesso ou fracasso da construção local. Observe que quando os substitutos estão desabilitados ou nenhum substituto está disponível para a derivação em questão, uma construção local @emph{sempre} será executada, independentemente de @option{--fallback} ter sido fornecido ou não."

#. type: Plain text
#: guix-git/doc/guix.texi:4100
msgid "To get an idea of how many substitutes are available right now, you can try running the @command{guix weather} command (@pxref{Invoking guix weather}).  This command provides statistics on the substitutes provided by a server."
msgstr "Para ter uma ideia de quantos substitutos estão disponíveis no momento, você pode tentar executar o comando @command{guix weather} (@pxref{Invoking guix weather}). Este comando fornece estatísticas sobre os substitutos fornecidos por um servidor."

#. type: cindex
#: guix-git/doc/guix.texi:4104
#, no-wrap
msgid "trust, of pre-built binaries"
msgstr "confiança, de binários pré-construídos"

#. type: Plain text
#: guix-git/doc/guix.texi:4114
msgid "Today, each individual's control over their own computing is at the mercy of institutions, corporations, and groups with enough power and determination to subvert the computing infrastructure and exploit its weaknesses.  While using substitutes can be convenient, we encourage users to also build on their own, or even run their own build farm, such that the project run substitute servers are less of an interesting target.  One way to help is by publishing the software you build using @command{guix publish} so that others have one more choice of server to download substitutes from (@pxref{Invoking guix publish})."
msgstr "Hoje, o controlo de cada indivíduo sobre a sua própria computação está à mercê de instituições, empresas e grupos com poder e determinação suficientes para subverter a infra-estrutura informática e explorar as suas fraquezas. Embora o uso de substitutos possa ser conveniente, encorajamos os usuários a também construírem por conta própria, ou até mesmo executarem seu próprio build farm, de modo que os servidores substitutos executados pelo projeto sejam um alvo menos interessante. Uma maneira de ajudar é publicando o software que você constrói usando @command{guix publish} para que outros tenham mais uma opção de servidor para baixar substitutos (@pxref{Invoking guix publish})."

#. type: Plain text
#: guix-git/doc/guix.texi:4133
#, fuzzy
#| msgid "Guix has the foundations to maximize build reproducibility (@pxref{Features}).  In most cases, independent builds of a given package or derivation should yield bit-identical results.  Thus, through a diverse set of independent package builds, we can strengthen the integrity of our systems.  The @command{guix challenge} command aims to help users assess substitute servers, and to assist developers in finding out about non-deterministic package builds (@pxref{Invoking guix challenge}).  Similarly, the @option{--check} option of @command{guix build} allows users to check whether previously-installed substitutes are genuine by rebuilding them locally (@pxref{build-check, @command{guix build --check}})."
msgid "Guix has the foundations to maximize build reproducibility (@pxref{Features}).  In most cases, independent builds of a given package or derivation should yield bit-identical results.  Thus, through a diverse set of independent package builds, we can strengthen the integrity of our systems.  The @command{guix challenge} command aims to help users assess substitute servers, and to assist developers in finding out about non-deterministic package builds (@pxref{Invoking guix challenge}).  Similarly, the @option{--check} option of @command{guix build} allows users to check whether previously-installed substitutes are genuine by rebuilding them locally (@pxref{build-check, @command{guix build --check}}).  To force a full rebuild of a package (ignoring security updates via grafts (@pxref{Security Updates}), if any grafts exist—which is not always the case), use @option{--check} together with @option{--no-grafts} (@pxref{Common Build Options, @option{--no-grafts}}).  Because grafts are built as their own derivation, if the package you want to rebuild is subject to being grafted, merely using @option{--check} will only rebuild the grafting derivation, and not actually recompile the package."
msgstr "Guix tem as bases para maximizar a reprodutibilidade da construção (@pxref{Features}). Na maioria dos casos, compilações independentes de um determinado pacote ou derivação devem produzir resultados idênticos em termos de bits. Assim, através de um conjunto diversificado de construções de pacotes independentes, podemos fortalecer a integridade dos nossos sistemas. O comando @command{guix challenge} visa ajudar os usuários a avaliar servidores substitutos e ajudar os desenvolvedores a descobrir sobre compilações de pacotes não determinísticos (@pxref{Invoking guix challenge}). Da mesma forma, a opção @option{--check} de @command{guix build} permite aos usuários verificar se os substitutos instalados anteriormente são genuínos, reconstruindo-os localmente (@pxref{build-check, @command{guix build --check}})."

#. type: Plain text
#: guix-git/doc/guix.texi:4137
msgid "In the future, we want Guix to have support to publish and retrieve binaries to/from other users, in a peer-to-peer fashion.  If you would like to discuss this project, join us on @email{guix-devel@@gnu.org}."
msgstr "No futuro, queremos que o Guix tenha suporte para publicação e recuperação de binários de/para outros usuários, de forma peer-to-peer. Se você gostaria de discutir este projeto, entre em contato conosco em @email{guix-devel@@gnu.org}."

#. type: cindex
#: guix-git/doc/guix.texi:4141
#, no-wrap
msgid "multiple-output packages"
msgstr "multiple-output packages"

#. type: cindex
#: guix-git/doc/guix.texi:4142
#, no-wrap
msgid "package outputs"
msgstr "saídas de pacote"

#. type: cindex
#: guix-git/doc/guix.texi:4143
#, no-wrap
msgid "outputs"
msgstr "saídas"

#. type: Plain text
#: guix-git/doc/guix.texi:4153
msgid "Often, packages defined in Guix have a single @dfn{output}---i.e., the source package leads to exactly one directory in the store.  When running @command{guix install glibc}, one installs the default output of the GNU libc package; the default output is called @code{out}, but its name can be omitted as shown in this command.  In this particular case, the default output of @code{glibc} contains all the C header files, shared libraries, static libraries, Info documentation, and other supporting files."
msgstr "Frequentemente, os pacotes definidos no Guix têm uma única @dfn{saída} --- ou seja, o pacote fonte leva a exatamente um diretório no armazém. Ao executar @command{guix install glibc}, instala-se a saída padrão do pacote GNU libc; A saída padrão é chamada @code{out}, mas seu nome pode ser omitido conforme mostrado neste comando. Neste caso específico, a saída padrão de @code{glibc} contém todos os arquivos de cabeçalho C, bibliotecas compartilhadas, bibliotecas estáticas, documentação de informações e outros arquivos de suporte."

#. type: Plain text
#: guix-git/doc/guix.texi:4161
msgid "Sometimes it is more appropriate to separate the various types of files produced from a single source package into separate outputs.  For instance, the GLib C library (used by GTK+ and related packages)  installs more than 20 MiB of reference documentation as HTML pages.  To save space for users who do not need it, the documentation goes to a separate output, called @code{doc}.  To install the main GLib output, which contains everything but the documentation, one would run:"
msgstr "Às vezes é mais apropriado separar os vários tipos de arquivos produzidos a partir de um único pacote fonte em saídas separadas. Por exemplo, a biblioteca GLib C (usada pelo GTK+ e pacotes relacionados) instala mais de 20 MiB de documentação de referência como páginas HTML. Para economizar espaço para usuários que não precisam, a documentação vai para uma saída separada, chamada @code{doc}. Para instalar a saída principal do GLib, que contém tudo menos a documentação, seria executado:"

#. type: example
#: guix-git/doc/guix.texi:4164
#, no-wrap
msgid "guix install glib\n"
msgstr "guix install glib\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4168
msgid "The command to install its documentation is:"
msgstr "O comando para instalar sua documentação é:"

#. type: example
#: guix-git/doc/guix.texi:4171
#, no-wrap
msgid "guix install glib:doc\n"
msgstr "guix install glib:doc\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4180
msgid "While the colon syntax works for command-line specification of package outputs, it will not work when using a package @emph{variable} in Scheme code.  For example, to add the documentation of @code{glib} to the globally installed packages of an @code{operating-system} (see @ref{operating-system Reference}), a list of two items, the first one being the package @emph{variable} and the second one the name of the output to select (a string), must be used instead:"
msgstr "Embora a sintaxe de dois pontos funcione para especificação de linha de comando de saídas de pacotes, ela não funcionará ao usar uma @emph{variável} de pacote no código do Scheme. Por exemplo, para adicionar a documentação do @code{glib} aos pacotes instalados globalmente de um @code{operating-system} (veja @ref{operating-system Reference}), uma lista de dois itens, sendo o primeiro a @emph{variável} de pacote e o segundo o nome da saída a ser selecionada (uma string), devem ser usados:"

#. type: lisp
#: guix-git/doc/guix.texi:4190
#, no-wrap
msgid ""
"(use-modules (gnu packages glib))\n"
";; glib-with-documentation is the Guile symbol for the glib package\n"
"(operating-system\n"
" ...\n"
" (packages\n"
"  (append\n"
"   (list (list glib-with-documentation \"doc\"))\n"
"         %base-packages)))\n"
msgstr ""
"(use-modules (gnu packages glib))\n"
";; glib-with-documentation é o símbolo de Guile para o pacote glib\n"
"(operating-system\n"
" ...\n"
" (packages\n"
"  (append\n"
"   (list (list glib-with-documentation \"doc\"))\n"
"         %base-packages)))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4201
msgid "Some packages install programs with different ``dependency footprints''.  For instance, the WordNet package installs both command-line tools and graphical user interfaces (GUIs).  The former depend solely on the C library, whereas the latter depend on Tcl/Tk and the underlying X libraries.  In this case, we leave the command-line tools in the default output, whereas the GUIs are in a separate output.  This allows users who do not need the GUIs to save space.  The @command{guix size} command can help find out about such situations (@pxref{Invoking guix size}).  @command{guix graph} can also be helpful (@pxref{Invoking guix graph})."
msgstr "Alguns pacotes instalam programas com diferentes \"pegadas de dependência''. Por exemplo, o pacote WordNet instala ferramentas de linha de comando e interfaces gráficas de usuário (GUIs). Os primeiros dependem exclusivamente da biblioteca C, enquanto os últimos dependem apenas do Tcl/Tk e das bibliotecas X subjacentes. Nesse caso, deixamos as ferramentas de linha de comando na saída padrão, enquanto as GUIs ficam em uma saída separada. Isso permite que usuários que não precisam de GUIs economizem espaço. O comando @command{guix size} pode ajudar a descobrir tais situações (@pxref{Invoking guix size}). @command{guix graph} também pode ser útil (@pxref{Invoking guix graph})."

#. type: Plain text
#: guix-git/doc/guix.texi:4209
msgid "There are several such multiple-output packages in the GNU distribution.  Other conventional output names include @code{lib} for libraries and possibly header files, @code{bin} for stand-alone programs, and @code{debug} for debugging information (@pxref{Installing Debugging Files}).  The outputs of a package are listed in the third column of the output of @command{guix package --list-available} (@pxref{Invoking guix package})."
msgstr "Existem vários desses pacotes de múltiplas saídas na distribuição GNU. Outros nomes de saída convencionais incluem @code{lib} para bibliotecas e possivelmente arquivos de cabeçalho, @code{bin} para programas independentes e @code{debug} para informações de depuração (@pxref{Installing Debugging Files}). A saída de um pacote está listada na terceira coluna da saída de @command{guix package --list-available} (@pxref{Invoking guix package})."

#. type: section
#: guix-git/doc/guix.texi:4212
#, no-wrap
msgid "Invoking @command{guix locate}"
msgstr "Invocando @command{guix locate}"

#. type: cindex
#: guix-git/doc/guix.texi:4214
#, fuzzy, no-wrap
#| msgid "Defining new packages."
msgid "file, searching in packages"
msgstr "Definindo novos pacotes."

#. type: cindex
#: guix-git/doc/guix.texi:4215 guix-git/doc/guix.texi:27721
#, fuzzy, no-wrap
#| msgid "search"
msgid "file search"
msgstr "pesquisa"

#. type: Plain text
#: guix-git/doc/guix.texi:4221
msgid "There's so much free software out there that sooner or later, you will need to search for packages.  The @command{guix search} command that we've seen before (@pxref{Invoking guix package}) lets you search by keywords:"
msgstr "Há tantos softwares gratuitos por aí que, mais cedo ou mais tarde, você precisará procurar por pacotes. O comando @command{guix search} que vimos antes (@pxref{Invoking guix package}) permite pesquisar por palavras-chave:"

#. type: example
#: guix-git/doc/guix.texi:4224
#, no-wrap
msgid "guix search video editor\n"
msgstr "guix search video editor\n"

#. type: cindex
#: guix-git/doc/guix.texi:4226
#, no-wrap
msgid "searching for packages, by file name"
msgstr "procurando por pacotes, por nome de arquivo"

#. type: Plain text
#: guix-git/doc/guix.texi:4230
msgid "Sometimes, you instead want to find which package provides a given file, and this is where @command{guix locate} comes in.  Here is how you can find which package provides the @command{ls} command:"
msgstr "Às vezes, você deseja descobrir qual pacote fornece um determinado arquivo, e é aí que entra @command{guix locate}. Veja como você pode encontrar o comando @command{ls}:"

#. type: example
#: guix-git/doc/guix.texi:4234
#, no-wrap
msgid ""
"$ guix locate ls\n"
"coreutils@@9.1       /gnu/store/@dots{}-coreutils-9.1/bin/ls\n"
msgstr ""
"$ guix locate ls\n"
"coreutils@@9.1       /gnu/store/@dots{}-coreutils-9.1/bin/ls\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4237
msgid "Of course the command works for any file, not just commands:"
msgstr "É claro que o comando funciona para qualquer arquivo, não apenas para comandos:"

#. type: example
#: guix-git/doc/guix.texi:4242
#, no-wrap
msgid ""
"$ guix locate unistr.h\n"
"icu4c@@71.1          /gnu/store/@dots{}/include/unicode/unistr.h\n"
"libunistring@@1.0    /gnu/store/@dots{}/include/unistr.h\n"
msgstr ""
"$ guix locate unistr.h\n"
"icu4c@@71.1          /gnu/store/@dots{}/include/unicode/unistr.h\n"
"libunistring@@1.0    /gnu/store/@dots{}/include/unistr.h\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4247
msgid "You may also specify @dfn{glob patterns} with wildcards.  For example, here is how you would search for packages providing @file{.service} files:"
msgstr "Você também pode especificar @dfn{padrões de globo} com curingas. Por exemplo, aqui está como você procuraria pacotes que fornecem arquivos @file{.service}:"

#. type: example
#: guix-git/doc/guix.texi:4252
#, fuzzy, no-wrap
msgid ""
"$ guix locate -g '*.service'\n"
"man-db@@2.11.1        @dots{}/lib/systemd/system/man-db.service\n"
"wpa-supplicant@@2.10  @dots{}/system-services/fi.w1.wpa_supplicant1.service\n"
msgstr ""
"$ guix locate -g '*.service'\n"
"man-db@@2.11.1        @dots{}/lib/systemd/system/man-db.service\n"
"wpa-supplicant@@2.10  @dots{}/system-services/fi.w1.wpa_supplicant1.service\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4259
msgid "The @command{guix locate} command relies on a database that maps file names to package names.  By default, it automatically creates that database if it does not exist yet by traversing packages available @emph{locally}, which can take a few minutes (depending on the size of your store and the speed of your storage device)."
msgstr "O comando @command{guix locate} depende de um banco de dados que mapeia nomes de arquivos para nomes de pacotes. Por padrão, ele cria automaticamente esse banco de dados, caso ele ainda não exista, percorrendo os pacotes disponíveis @emph{localmente}, o que pode levar alguns minutos (dependendo do tamanho do seu armazém e da velocidade do seu dispositivo de armazenamento)."

#. type: quotation
#: guix-git/doc/guix.texi:4265
msgid "For now, @command{guix locate} builds its database based on purely local knowledge---meaning that you will not find packages that never reached your store.  Eventually it will support downloading a pre-built database so you can potentially find more packages."
msgstr "Por enquanto, @command{guix locate} constrói seu banco de dados baseado em conhecimento puramente local – o que significa que você não encontrará pacotes que nunca chegaram ao sue armazém. Eventualmente, ele suportará o download de um banco de dados pré-construído para que você possa encontrar mais pacotes."

#. type: Plain text
#: guix-git/doc/guix.texi:4275
msgid "By default, @command{guix locate} first tries to look for a system-wide database, usually under @file{/var/cache/guix/locate}; if it does not exist or is too old, it falls back to the per-user database, by default under @file{~/.cache/guix/locate}.  On a multi-user system, administrators may want to periodically update the system-wide database so that all users can benefit from it, for instance by setting up @code{package-database-service-type} (@pxref{File Search Services, @code{package-database-service-type}})."
msgstr "Por padrão, @command{guix locate} primeiro tenta procurar um banco de dados de todo o sistema, geralmente em @file{/var/cache/guix/locate}; Se não existir ou for muito antigo, ele retornará ao banco de dados por usuário, por padrão em @file{~/.cache/guix/locate}. Em um sistema multiusuário, os administradores podem querer atualizar periodicamente o banco de dados de todo o sistema para que todos os usuários possam se beneficiar dele, por exemplo, configurando @code{package-database-service-type} (@pxref{File Search Services, @code{package-database-service-type}})."

#. type: Plain text
#: guix-git/doc/guix.texi:4277 guix-git/doc/guix.texi:4904
#: guix-git/doc/guix.texi:6107 guix-git/doc/guix.texi:6656
#: guix-git/doc/guix.texi:7617 guix-git/doc/guix.texi:12876
#: guix-git/doc/guix.texi:13178 guix-git/doc/guix.texi:14298
#: guix-git/doc/guix.texi:14394 guix-git/doc/guix.texi:15606
#: guix-git/doc/guix.texi:15914 guix-git/doc/guix.texi:16417
#: guix-git/doc/guix.texi:16795 guix-git/doc/guix.texi:16891
#: guix-git/doc/guix.texi:16930 guix-git/doc/guix.texi:17031
msgid "The general syntax is:"
msgstr "A sintaxe geral é:"

#. type: example
#: guix-git/doc/guix.texi:4280
#, no-wrap
msgid "guix locate [@var{options}@dots{}] @var{file}@dots{}\n"
msgstr "guix locate [@var{opções}@dots{}] @var{arquivo}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4286
msgid "... where @var{file} is the name of a file to search for (specifically, the ``base name'' of the file: files whose parent directories are called @var{file} are not matched)."
msgstr "... onde @var{arquivo} é o nome de um arquivo a ser pesquisado (especificamente, o \"nome base\" do arquivo: arquivos cujos diretórios pais são chamados @var{arquivo} não são correspondidos)."

#. type: Plain text
#: guix-git/doc/guix.texi:4288 guix-git/doc/guix.texi:12929
msgid "The available options are as follows:"
msgstr "As opções disponíveis são as seguintes:"

#. type: item
#: guix-git/doc/guix.texi:4290
#, no-wrap
msgid "--glob"
msgstr "--glob"

#. type: itemx
#: guix-git/doc/guix.texi:4291 guix-git/doc/guix.texi:14268
#, no-wrap
msgid "-g"
msgstr "-g"

#. type: table
#: guix-git/doc/guix.texi:4295
msgid "Interpret @var{file}@dots{} as @dfn{glob patterns}---patterns that may include wildcards, such as @samp{*.scm} to denote all files ending in @samp{.scm}."
msgstr "Interprete @var{arquivo}@dots{} como @dfn{padrões de globo}---padrões que podem incluir caracteres curinga, como @samp{*.scm} para denotar todos os arquivos que terminam em @samp{.scm}."

#. type: item
#: guix-git/doc/guix.texi:4296 guix-git/doc/guix.texi:7674
#, no-wrap
msgid "--stats"
msgstr "--stats"

#. type: table
#: guix-git/doc/guix.texi:4298
msgid "Display database statistics."
msgstr "Exibir estatísticas do banco de dados."

#. type: item
#: guix-git/doc/guix.texi:4299 guix-git/doc/guix.texi:15228
#, no-wrap
msgid "--update"
msgstr "--update"

#. type: itemx
#: guix-git/doc/guix.texi:4300 guix-git/doc/guix.texi:15229
#, no-wrap
msgid "-u"
msgstr "-u"

#. type: table
#: guix-git/doc/guix.texi:4302
msgid "Update the file database."
msgstr "Atualize o banco de dados dos arquivos."

#. type: table
#: guix-git/doc/guix.texi:4304
msgid "By default, the database is automatically updated when it is too old."
msgstr "Por padrão, o banco de dados é atualizado automaticamente quando é muito antigo."

#. type: item
#: guix-git/doc/guix.texi:4305
#, no-wrap
msgid "--clear"
msgstr "--clear"

#. type: table
#: guix-git/doc/guix.texi:4307
msgid "Clear the database and re-populate it."
msgstr "Limpe o banco de dados e preencha-o novamente."

#. type: table
#: guix-git/doc/guix.texi:4312
msgid "This option lets you start anew, ensuring old data is removed from the database, which also avoids having an endlessly growing database.  By default @command{guix locate} automatically does that periodically, though infrequently."
msgstr "Esta opção permite começar de novo, garantindo que os dados antigos sejam removidos do banco de dados, o que também evita ter um banco de dados em constante crescimento. Por padrão, @command{guix locate} faz isso automaticamente periodicamente, embora com pouca frequência."

#. type: item
#: guix-git/doc/guix.texi:4313
#, no-wrap
msgid "--database=@var{file}"
msgstr "--database=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:4315
msgid "Use @var{file} as the database, creating it if necessary."
msgstr "Use @var{arquivo} como banco de dados, criando-o se necessário."

#. type: table
#: guix-git/doc/guix.texi:4319
msgid "By default, @command{guix locate} picks the database under @file{~/.cache/guix} or @file{/var/cache/guix}, whichever is the most recent one."
msgstr "Por padrão, @command{guix locate} escolhe o banco de dados em @file{~/.cache/guix} ou @file{/var/cache/guix}, o que for mais recente."

#. type: item
#: guix-git/doc/guix.texi:4320
#, no-wrap
msgid "--method=@var{method}"
msgstr "--method=@var{método}"

#. type: itemx
#: guix-git/doc/guix.texi:4321
#, no-wrap
msgid "-m @var{method}"
msgstr "-m @var{método}"

#. type: table
#: guix-git/doc/guix.texi:4324
msgid "Use @var{method} to select the set of packages to index.  Possible values are:"
msgstr "Use @var{método} para selecionar o conjunto de pacotes a serem indexados. Os valores possíveis são:"

#. type: item
#: guix-git/doc/guix.texi:4326
#, no-wrap
msgid "manifests"
msgstr "manifests"

#. type: table
#: guix-git/doc/guix.texi:4332
msgid "This is the default method: it works by traversing profiles on the machine and recording packages it encounters---packages you or other users of the machine installed, directly or indirectly.  It is fast but it can miss other packages available in the store but not referred to by any profile."
msgstr "Este é o método padrão: ele funciona percorrendo perfis na máquina e gravando os pacotes que encontra – pacotes instalados por você ou por outros usuários da máquina, direta ou indiretamente. É rápido mas você pode perder outros pacotes disponíveis no armazém mas não referenciados por nenhum perfil."

#. type: table
#: guix-git/doc/guix.texi:4337
msgid "This is a slower but more exhaustive method: it checks among all the existing packages those that are available in the store and records them."
msgstr "Este é um método mais lento, porém mais exaustivo: verifica entre todos os pacotes existentes aqueles que estão disponíveis no armazém e os registra."

#. type: section
#: guix-git/doc/guix.texi:4342
#, no-wrap
msgid "Invoking @command{guix gc}"
msgstr "Invocando @command{guix gc}"

#. type: cindex
#: guix-git/doc/guix.texi:4344
#, no-wrap
msgid "garbage collector"
msgstr "coletor de lixo"

#. type: cindex
#: guix-git/doc/guix.texi:4345
#, no-wrap
msgid "disk space"
msgstr "espaço em disco"

#. type: command{#1}
#: guix-git/doc/guix.texi:4346
#, no-wrap
msgid "guix gc"
msgstr "guix gc"

#. type: Plain text
#: guix-git/doc/guix.texi:4352
msgid "Packages that are installed, but not used, may be @dfn{garbage-collected}.  The @command{guix gc} command allows users to explicitly run the garbage collector to reclaim space from the @file{/gnu/store} directory.  It is the @emph{only} way to remove files from @file{/gnu/store}---removing files or directories manually may break it beyond repair!"
msgstr "Pacotes instalados mas não usados podem ser @dfn{garbage-collected}. O comando @command{guix gc} permite que os usuários executem explicitamente o coletor de lixo para recuperar espaço do diretório @file{/gnu/store}. É a maneira @emph{única} de remover arquivos de @file{/gnu/store} --- remover arquivos ou diretórios manualmente pode quebrá-los sem possibilidade de reparo!"

#. type: Plain text
#: guix-git/doc/guix.texi:4363
msgid "The garbage collector has a set of known @dfn{roots}: any file under @file{/gnu/store} reachable from a root is considered @dfn{live} and cannot be deleted; any other file is considered @dfn{dead} and may be deleted.  The set of garbage collector roots (``GC roots'' for short)  includes default user profiles; by default, the symlinks under @file{/var/guix/gcroots} represent these GC roots.  New GC roots can be added with @command{guix build --root}, for example (@pxref{Invoking guix build}).  The @command{guix gc --list-roots} command lists them."
msgstr "O coletor de lixo possui um conjunto de @dfn{raizes} conhecidos: qualquer arquivo em @file{/gnu/store} acessível a partir de uma raiz é considerado @dfn{live} e não pode ser excluído; Qualquer outro arquivo é considerado @dfn{dead} e pode ser excluído. O conjunto de raízes do coletor de lixo (abreviadamente ``Raízes GC'') inclui perfis de usuário padrão; por padrão, as ligações simbólicas em @file{/var/guix/gcroots} representam essas raízes do GC. Novas raízes de GC podem ser adicionadas com @command{guix build --root}, por exemplo (@pxref{Invoking guix build}). O comando @command{guix gc --list-roots} os lista."

#. type: Plain text
#: guix-git/doc/guix.texi:4369
msgid "Prior to running @code{guix gc --collect-garbage} to make space, it is often useful to remove old generations from user profiles; that way, old package builds referenced by those generations can be reclaimed.  This is achieved by running @code{guix package --delete-generations} (@pxref{Invoking guix package})."
msgstr "Antes de executar @code{guix gc --collect-garbage} para liberar espaço, geralmente é útil remover gerações antigas dos perfis de usuário; dessa forma, compilações de pacotes antigos referenciadas por essas gerações podem ser recuperadas. Isso é conseguido executando @code{guix package --delete-generations} (@pxref{Invoking guix package})."

#. type: Plain text
#: guix-git/doc/guix.texi:4373
msgid "Our recommendation is to run a garbage collection periodically, or when you are short on disk space.  For instance, to guarantee that at least 5@tie{}GB are available on your disk, simply run:"
msgstr "Nossa recomendação é executar uma coleta de lixo periodicamente ou quando houver pouco espaço em disco. Por exemplo, para garantir que pelo menos 5@tie{}GB estejam disponíveis no disco, basta executar:"

#. type: example
#: guix-git/doc/guix.texi:4376
#, no-wrap
msgid "guix gc -F 5G\n"
msgstr "guix gc -F 5G\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4385
msgid "It is perfectly safe to run as a non-interactive periodic job (@pxref{Scheduled Job Execution}, for how to set up such a job).  Running @command{guix gc} with no arguments will collect as much garbage as it can, but that is often inconvenient: you may find yourself having to rebuild or re-download software that is ``dead'' from the GC viewpoint but that is necessary to build other pieces of software---e.g., the compiler tool chain."
msgstr "É perfeitamente seguro executar como um trabalho periódico não interativo (@pxref{Scheduled Job Execution}, para saber como configurar tal trabalho). Executar @command{guix gc} sem argumentos coletará o máximo de lixo possível, mas isso geralmente é inconveniente: você pode ter que reconstruir ou baixar novamente um software que está \"morto\" do ponto de vista do GC, mas que é necessário para construir outras peças de software - por exemplo, a cadeia de ferramentas do compilador."

#. type: Plain text
#: guix-git/doc/guix.texi:4391
msgid "The @command{guix gc} command has three modes of operation: it can be used to garbage-collect any dead files (the default), to delete specific files (the @option{--delete} option), to print garbage-collector information, or for more advanced queries.  The garbage collection options are as follows:"
msgstr "O comando @command{guix gc} tem três modos de operação: pode ser usado para coletar o lixo de quaisquer arquivos mortos (o padrão), para excluir arquivos específicos (a opção @option{--delete}), para imprimir lixo- informações do coletor ou para consultas mais avançadas. As opções de coleta de lixo são as seguintes:"

#. type: item
#: guix-git/doc/guix.texi:4393
#, no-wrap
msgid "--collect-garbage[=@var{min}]"
msgstr "--collect-garbage[=@var{min}]"

#. type: itemx
#: guix-git/doc/guix.texi:4394
#, no-wrap
msgid "-C [@var{min}]"
msgstr "-C [@var{min}]"

#. type: table
#: guix-git/doc/guix.texi:4398
msgid "Collect garbage---i.e., unreachable @file{/gnu/store} files and sub-directories.  This is the default operation when no option is specified."
msgstr "Colete lixo, ou seja, arquivos e subdiretórios @file{/gnu/store} inacessíveis. Esta é a operação padrão quando nenhuma opção é especificada."

#. type: table
#: guix-git/doc/guix.texi:4403
msgid "When @var{min} is given, stop once @var{min} bytes have been collected.  @var{min} may be a number of bytes, or it may include a unit as a suffix, such as @code{MiB} for mebibytes and @code{GB} for gigabytes (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr "Quando @var{min} for fornecido, pare quando @var{min} bytes forem coletados. @var{min} pode ser um número de bytes ou pode incluir uma unidade como sufixo, como @code{MiB} para mebibytes e @code{GB} para gigabytes (@pxref{Block size, especificações de tamanho,, coreutils, GNU Coreutils})."

#. type: table
#: guix-git/doc/guix.texi:4405
msgid "When @var{min} is omitted, collect all the garbage."
msgstr "Quando @var{min} for omitido, colete todo o lixo."

#. type: item
#: guix-git/doc/guix.texi:4406
#, no-wrap
msgid "--free-space=@var{free}"
msgstr "--free-space=@var{free}"

#. type: itemx
#: guix-git/doc/guix.texi:4407
#, no-wrap
msgid "-F @var{free}"
msgstr "-F @var{free}"

#. type: table
#: guix-git/doc/guix.texi:4411
msgid "Collect garbage until @var{free} space is available under @file{/gnu/store}, if possible; @var{free} denotes storage space, such as @code{500MiB}, as described above."
msgstr "Colete o lixo até que o espaço @var{free} esteja disponível em @file{/gnu/store}, se possível; @var{free} denota espaço de armazenamento, como @code{500MiB}, conforme descrito acima."

#. type: table
#: guix-git/doc/guix.texi:4414
msgid "When @var{free} or more is already available in @file{/gnu/store}, do nothing and exit immediately."
msgstr "Quando @var{free} ou mais já estiver disponível em @file{/gnu/store}, não faça nada e saia imediatamente."

#. type: item
#: guix-git/doc/guix.texi:4415
#, no-wrap
msgid "--delete-generations[=@var{duration}]"
msgstr "--delete-generations[=@var{duração}]"

#. type: itemx
#: guix-git/doc/guix.texi:4416
#, no-wrap
msgid "-d [@var{duration}]"
msgstr "-d [@var{duração}]"

#. type: table
#: guix-git/doc/guix.texi:4421
msgid "Before starting the garbage collection process, delete all the generations older than @var{duration}, for all the user profiles and home environment generations; when run as root, this applies to all the profiles @emph{of all the users}."
msgstr "Antes de iniciar o processo de coleta de lixo, exclua todas as gerações anteriores a @var{duração}, para todos os perfis de usuário e gerações do ambiente pessoal. Quando executado como root, isso se aplica a todos os perfis @emph{de todos os usuários}."

#. type: table
#: guix-git/doc/guix.texi:4425
msgid "For example, this command deletes all the generations of all your profiles that are older than 2 months (except generations that are current), and then proceeds to free space until at least 10 GiB are available:"
msgstr "Por exemplo, este comando exclui todas as gerações de todos os seus perfis com mais de 2 meses (exceto as gerações atuais) e depois libera espaço até que pelo menos 10 GiB estejam disponíveis:"

#. type: example
#: guix-git/doc/guix.texi:4428
#, no-wrap
msgid "guix gc -d 2m -F 10G\n"
msgstr "guix gc -d 2m -F 10G\n"

#. type: item
#: guix-git/doc/guix.texi:4430
#, no-wrap
msgid "--delete"
msgstr "--delete"

#. type: itemx
#: guix-git/doc/guix.texi:4431 guix-git/doc/guix.texi:6264
#: guix-git/doc/guix.texi:13857
#, no-wrap
msgid "-D"
msgstr "-D"

#. type: table
#: guix-git/doc/guix.texi:4435
msgid "Attempt to delete all the store files and directories specified as arguments.  This fails if some of the files are not in the store, or if they are still live."
msgstr "Tentativa de excluir todos os arquivos e diretórios de armazém especificados como argumentos. Isso falhará se alguns dos arquivos não estiverem no armazém ou se ainda estiverem ativos."

#. type: item
#: guix-git/doc/guix.texi:4436
#, no-wrap
msgid "--list-failures"
msgstr "--list-failures"

#. type: table
#: guix-git/doc/guix.texi:4438
msgid "List store items corresponding to cached build failures."
msgstr "Listar itens de armazém correspondentes a falhas de compilação em cache."

#. type: table
#: guix-git/doc/guix.texi:4442
msgid "This prints nothing unless the daemon was started with @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."
msgstr "Isso não imprime nada, a menos que o daemon tenha sido iniciado com @option{--cache-failures} (@pxref{Invoking guix-daemon, @option{--cache-failures}})."

#. type: item
#: guix-git/doc/guix.texi:4443
#, fuzzy, no-wrap
msgid "--list-roots"
msgstr "--list-roots"

#. type: table
#: guix-git/doc/guix.texi:4446
msgid "List the GC roots owned by the user; when run as root, list @emph{all} the GC roots."
msgstr "Listar as raízes do GC de propriedade do usuário; quando executado como root, listar @emph{todas} as raízes do GC."

#. type: item
#: guix-git/doc/guix.texi:4447
#, fuzzy, no-wrap
msgid "--list-busy"
msgstr "--list-busy"

#. type: table
#: guix-git/doc/guix.texi:4450
msgid "List store items in use by currently running processes.  These store items are effectively considered GC roots: they cannot be deleted."
msgstr "Listar itens de armazém em uso por processos em execução no momento. Esses itens de armazém são efetivamente considerados raízes GC: eles não podem ser excluídos."

#. type: item
#: guix-git/doc/guix.texi:4451
#, no-wrap
msgid "--clear-failures"
msgstr "--clear-failures"

#. type: table
#: guix-git/doc/guix.texi:4453
msgid "Remove the specified store items from the failed-build cache."
msgstr "Remova os itens de armazém especificados do cache de compilação com falha."

#. type: table
#: guix-git/doc/guix.texi:4456
msgid "Again, this option only makes sense when the daemon is started with @option{--cache-failures}.  Otherwise, it does nothing."
msgstr "Novamente, essa opção só faz sentido quando o daemon é iniciado com @option{--cache-failures}. Caso contrário, não faz nada."

#. type: item
#: guix-git/doc/guix.texi:4457
#, no-wrap
msgid "--list-dead"
msgstr "--list-dead"

#. type: table
#: guix-git/doc/guix.texi:4460
msgid "Show the list of dead files and directories still present in the store---i.e., files and directories no longer reachable from any root."
msgstr "Exibe a lista de arquivos e diretórios mortos ainda presentes no armazém, ou seja, arquivos e diretórios que não podem mais ser acessados de nenhuma raiz."

#. type: item
#: guix-git/doc/guix.texi:4461
#, no-wrap
msgid "--list-live"
msgstr "--list-live"

#. type: table
#: guix-git/doc/guix.texi:4463
msgid "Show the list of live store files and directories."
msgstr "Exibe a lista de arquivos e diretórios do armazém ativa."

#. type: Plain text
#: guix-git/doc/guix.texi:4467
msgid "In addition, the references among existing store files can be queried:"
msgstr "Além disso, as referências entre arquivos de armazém existentes podem ser consultadas:"

#. type: item
#: guix-git/doc/guix.texi:4470
#, no-wrap
msgid "--references"
msgstr "--references"

#. type: itemx
#: guix-git/doc/guix.texi:4471
#, fuzzy, no-wrap
msgid "--referrers"
msgstr "--referrers"

#. type: cindex
#: guix-git/doc/guix.texi:4472 guix-git/doc/guix.texi:16111
#, no-wrap
msgid "package dependencies"
msgstr "dependências de pacotes"

#. type: table
#: guix-git/doc/guix.texi:4475
msgid "List the references (respectively, the referrers) of store files given as arguments."
msgstr "Listar as referências (respectivamente, os referenciadores) dos arquivos de armazém fornecidos como argumentos."

#. type: item
#: guix-git/doc/guix.texi:4476
#, no-wrap
msgid "--requisites"
msgstr "--requisites"

#. type: itemx
#: guix-git/doc/guix.texi:4477 guix-git/doc/guix.texi:7310
#, fuzzy, no-wrap
msgid "-R"
msgstr "-R"

#. type: item
#: guix-git/doc/guix.texi:4478 guix-git/doc/guix.texi:15967
#: guix-git/doc/guix.texi:15995 guix-git/doc/guix.texi:16076
#, no-wrap
msgid "closure"
msgstr "closure"

#. type: table
#: guix-git/doc/guix.texi:4483
msgid "List the requisites of the store files passed as arguments.  Requisites include the store files themselves, their references, and the references of these, recursively.  In other words, the returned list is the @dfn{transitive closure} of the store files."
msgstr "Liste os requisitos dos arquivos de armazém passados como argumentos. Os requisitos incluem os próprios arquivos de armazém, suas referências e as referências destes, recursivamente. Em outras palavras, a lista retornada é o @dfn{fechamento transitivo} dos arquivos de armazém."

#. type: table
#: guix-git/doc/guix.texi:4487
msgid "@xref{Invoking guix size}, for a tool to profile the size of the closure of an element.  @xref{Invoking guix graph}, for a tool to visualize the graph of references."
msgstr "@xref{Invoking guix size}, para uma ferramenta para criar o perfil do tamanho do fechamento de um elemento. @xref{Invoking guix graph}, para uma ferramenta para visualizar o grafo de referências."

#. type: item
#: guix-git/doc/guix.texi:4488
#, fuzzy, no-wrap
msgid "--derivers"
msgstr "--derivers"

#. type: item
#: guix-git/doc/guix.texi:4489 guix-git/doc/guix.texi:7709
#: guix-git/doc/guix.texi:15795 guix-git/doc/guix.texi:16220
#, no-wrap
msgid "derivation"
msgstr "derivation"

#. type: table
#: guix-git/doc/guix.texi:4492
msgid "Return the derivation(s) leading to the given store items (@pxref{Derivations})."
msgstr "Retorna a(s) derivação(ões) que levam aos itens de armazém fornecidos (@pxref{Derivations})."

#. type: table
#: guix-git/doc/guix.texi:4494
msgid "For example, this command:"
msgstr "Por exemplo, este comando:"

#. type: example
#: guix-git/doc/guix.texi:4497
#, no-wrap
msgid "guix gc --derivers $(guix package -I ^emacs$ | cut -f4)\n"
msgstr "guix gc --derivers $(guix package -I ^emacs$ | cut -f4)\n"

#. type: table
#: guix-git/doc/guix.texi:4502
msgid "returns the @file{.drv} file(s) leading to the @code{emacs} package installed in your profile."
msgstr "retorna o(s) arquivo(s) @file{.drv} que levam ao pacote @code{emacs} instalado no seu perfil."

#. type: table
#: guix-git/doc/guix.texi:4506
msgid "Note that there may be zero matching @file{.drv} files, for instance because these files have been garbage-collected.  There can also be more than one matching @file{.drv} due to fixed-output derivations."
msgstr "Note que pode haver zero arquivos @file{.drv} correspondentes, por exemplo porque esses arquivos foram coletados como lixo. Também pode haver mais de um @file{.drv} correspondente devido a derivações de saída fixa."

#. type: Plain text
#: guix-git/doc/guix.texi:4510
msgid "Lastly, the following options allow you to check the integrity of the store and to control disk usage."
msgstr "Por fim, as seguintes opções permitem que você verifique a integridade do armazém e controle o uso do disco."

#. type: item
#: guix-git/doc/guix.texi:4513
#, no-wrap
msgid "--verify[=@var{options}]"
msgstr "--verify[=@var{opções}]"

#. type: cindex
#: guix-git/doc/guix.texi:4514
#, no-wrap
msgid "integrity, of the store"
msgstr "integridade do armazém"

#. type: cindex
#: guix-git/doc/guix.texi:4515
#, no-wrap
msgid "integrity checking"
msgstr "verificação de integridade"

#. type: table
#: guix-git/doc/guix.texi:4517
msgid "Verify the integrity of the store."
msgstr "Verifique a integridade do armazém."

#. type: table
#: guix-git/doc/guix.texi:4520
msgid "By default, make sure that all the store items marked as valid in the database of the daemon actually exist in @file{/gnu/store}."
msgstr "Por padrão, certifique-se de que todos os itens de armazém marcados como válidos no banco de dados do daemon realmente existam em @file{/gnu/store}."

#. type: table
#: guix-git/doc/guix.texi:4523
msgid "When provided, @var{options} must be a comma-separated list containing one or more of @code{contents} and @code{repair}."
msgstr "Quando fornecido, @var{opções} deve ser uma lista separada por vírgulas contendo um ou mais de @code{contents} e @code{repair}."

#. type: table
#: guix-git/doc/guix.texi:4529
msgid "When passing @option{--verify=contents}, the daemon computes the content hash of each store item and compares it against its hash in the database.  Hash mismatches are reported as data corruptions.  Because it traverses @emph{all the files in the store}, this command can take a long time, especially on systems with a slow disk drive."
msgstr "Ao passar @option{--verify=contents}, o daemon calcula o hash de conteúdo de cada item do armazém e o compara com seu hash no banco de dados. Incompatibilidades de hash são relatadas como corrupções de dados. Como ele percorre @emph{todos os arquivos no armazém}, esse comando pode levar muito tempo, especialmente em sistemas com uma unidade de disco lenta."

#. type: cindex
#: guix-git/doc/guix.texi:4530
#, no-wrap
msgid "repairing the store"
msgstr "consertando o armazém"

#. type: cindex
#: guix-git/doc/guix.texi:4531 guix-git/doc/guix.texi:14041
#, no-wrap
msgid "corruption, recovering from"
msgstr "corrupção, recuperando-se de"

#. type: table
#: guix-git/doc/guix.texi:4539
msgid "Using @option{--verify=repair} or @option{--verify=contents,repair} causes the daemon to try to repair corrupt store items by fetching substitutes for them (@pxref{Substitutes}).  Because repairing is not atomic, and thus potentially dangerous, it is available only to the system administrator.  A lightweight alternative, when you know exactly which items in the store are corrupt, is @command{guix build --repair} (@pxref{Invoking guix build})."
msgstr "Usar @option{--verify=repair} ou @option{--verify=contents,repair} faz com que o daemon tente reparar itens corrompidos do armazém buscando substitutos para eles (@pxref{Substitutes}). Como o reparo não é atômico e, portanto, potencialmente perigoso, ele está disponível apenas para o administrador do sistema. Uma alternativa leve, quando você sabe exatamente quais itens no armazém estão corrompidos, é @command{guix build --repair} (@pxref{Invoking guix build})."

#. type: item
#: guix-git/doc/guix.texi:4540
#, no-wrap
msgid "--optimize"
msgstr "--optimize"

#. type: table
#: guix-git/doc/guix.texi:4544
msgid "Optimize the store by hard-linking identical files---this is @dfn{deduplication}."
msgstr "Otimize o armazém vinculando fisicamente arquivos idênticos — isso é @dfn{deduplication}."

#. type: table
#: guix-git/doc/guix.texi:4550
msgid "The daemon performs deduplication after each successful build or archive import, unless it was started with @option{--disable-deduplication} (@pxref{Invoking guix-daemon, @option{--disable-deduplication}}).  Thus, this option is primarily useful when the daemon was running with @option{--disable-deduplication}."
msgstr "O daemon executa a desduplicação após cada importação bem-sucedida de build ou archive, a menos que tenha sido iniciado com @option{--disable-deduplication} (@pxref{Invoking guix-daemon, @option{--disable-deduplication}}). Portanto, essa opção é útil principalmente quando o daemon estava em execução com @option{--disable-deduplication}."

#. type: item
#: guix-git/doc/guix.texi:4551
#, no-wrap
msgid "--vacuum-database"
msgstr "--vacuum-database"

#. type: cindex
#: guix-git/doc/guix.texi:4552
#, no-wrap
msgid "vacuum the store database"
msgstr "aspirar o banco de dados do armazém"

#. type: table
#: guix-git/doc/guix.texi:4562
msgid "Guix uses an sqlite database to keep track of the items in the store (@pxref{The Store}).  Over time it is possible that the database may grow to a large size and become fragmented.  As a result, one may wish to clear the freed space and join the partially used pages in the database left behind from removed packages or after running the garbage collector.  Running @command{sudo guix gc --vacuum-database} will lock the database and @code{VACUUM} the store, defragmenting the database and purging freed pages, unlocking the database when it finishes."
msgstr "Guix usa um banco de dados sqlite para manter o controle dos itens no armazém (@pxref{The Store}). Com o tempo, é possível que o banco de dados cresça muito e se torne fragmentado. Como resultado, pode-se desejar limpar o espaço liberado e juntar as páginas parcialmente usadas no banco de dados deixadas para trás por pacotes removidos ou após executar o coletor de lixo. Executar @command{sudo guix gc --vacuum-database} bloqueará o banco de dados e @code{VACUUM} o store, desfragmentando o banco de dados e expurgando as páginas liberadas, desbloqueando o banco de dados quando terminar."

#. type: section
#: guix-git/doc/guix.texi:4566
#, no-wrap
msgid "Invoking @command{guix pull}"
msgstr "Invocando @command{guix pull}"

#. type: cindex
#: guix-git/doc/guix.texi:4568
#, no-wrap
msgid "upgrading Guix"
msgstr "atualizando Guix"

#. type: cindex
#: guix-git/doc/guix.texi:4569
#, no-wrap
msgid "updating Guix"
msgstr "atualizando Guix"

#. type: command{#1}
#: guix-git/doc/guix.texi:4570
#, no-wrap
msgid "guix pull"
msgstr "guix pull"

#. type: cindex
#: guix-git/doc/guix.texi:4571
#, no-wrap
msgid "pull"
msgstr "puxar"

#. type: cindex
#: guix-git/doc/guix.texi:4572
#, no-wrap
msgid "security, @command{guix pull}"
msgstr "segurança, @command{guix pull}"

#. type: cindex
#: guix-git/doc/guix.texi:4573
#, no-wrap
msgid "authenticity, of code obtained with @command{guix pull}"
msgstr "autenticidade, do código obtido com @command{guix pull}"

#. type: Plain text
#: guix-git/doc/guix.texi:4583
msgid "Packages are installed or upgraded to the latest version available in the distribution currently available on your local machine.  To update that distribution, along with the Guix tools, you must run @command{guix pull}: the command downloads the latest Guix source code and package descriptions, and deploys it.  Source code is downloaded from a @uref{https://git-scm.com/book/en/, Git} repository, by default the official GNU@tie{}Guix repository, though this can be customized.  @command{guix pull} ensures that the code it downloads is @emph{authentic} by verifying that commits are signed by Guix developers."
msgstr "Os pacotes são instalados ou atualizados para a versão mais recente disponível na distribuição atualmente disponível na sua máquina local. Para atualizar essa distribuição, junto com as ferramentas Guix, você deve executar @command{guix pull}: o comando baixa o código-fonte Guix mais recente e as descrições dos pacotes, e os implementa. O código-fonte é baixado de um repositório @uref{https://git-scm.com/book/pt-br/, Git}, por padrão o repositório oficial GNU@tie{}Guix, embora isso possa ser personalizado. @command{guix pull} garante que o código que ele baixa é @emph{autêntico}, verificando se os commits são assinados pelos desenvolvedores Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:4586
msgid "Specifically, @command{guix pull} downloads code from the @dfn{channels} (@pxref{Channels}) specified by one of the following, in this order:"
msgstr "Especificamente, @command{guix pull} baixa o código dos @dfn{canais} (@pxref{Canais}) especificados por um dos seguintes, nesta ordem:"

#. type: enumerate
#: guix-git/doc/guix.texi:4590
msgid "the @option{--channels} option;"
msgstr "a opção @option{--channels};"

#. type: enumerate
#: guix-git/doc/guix.texi:4593
msgid "the user's @file{~/.config/guix/channels.scm} file, unless @option{-q} is passed;"
msgstr "o arquivo @file{~/.config/guix/channels.scm} do usuário, a menos que @option{-q} seja passado;"

#. type: enumerate
#: guix-git/doc/guix.texi:4598
msgid "the system-wide @file{/etc/guix/channels.scm} file, unless @option{-q} is passed (on Guix System, this file can be declared in the operating system configuration, @pxref{guix-configuration-channels, @code{channels} field of @code{guix-configuration}});"
msgstr "o arquivo @file{/etc/guix/channels.scm} de todo o sistema, a menos que @option{-q} seja passado (no sistema Guix, este arquivo pode ser declarado na configuração do sistema operacional, @pxref{guix-configuration-channels, campo @code{channels} de @code{guix-configuration}});"

#. type: enumerate
#: guix-git/doc/guix.texi:4601
msgid "the built-in default channels specified in the @code{%default-channels} variable."
msgstr "os canais padrão integrados especificados na variável @code{%default-channels}."

#. type: Plain text
#: guix-git/doc/guix.texi:4608
msgid "On completion, @command{guix package} will use packages and package versions from this just-retrieved copy of Guix.  Not only that, but all the Guix commands and Scheme modules will also be taken from that latest version.  New @command{guix} sub-commands added by the update also become available."
msgstr "Após a conclusão, @command{guix package} usará pacotes e versões de pacotes desta cópia recém-recuperada do Guix. Não apenas isso, mas todos os comandos Guix e módulos Scheme também serão retirados dessa versão mais recente. Novos subcomandos @command{guix} adicionados pela atualização também se tornam disponíveis."

#. type: Plain text
#: guix-git/doc/guix.texi:4614
msgid "Any user can update their Guix copy using @command{guix pull}, and the effect is limited to the user who ran @command{guix pull}.  For instance, when user @code{root} runs @command{guix pull}, this has no effect on the version of Guix that user @code{alice} sees, and vice versa."
msgstr "Qualquer usuário pode atualizar sua cópia do Guix usando @command{guix pull}, e o efeito é limitado ao usuário que executou @command{guix pull}. Por exemplo, quando o usuário @code{root} executa @command{guix pull}, isso não tem efeito na versão do Guix que o usuário @code{alice} vê, e vice-versa."

#. type: Plain text
#: guix-git/doc/guix.texi:4617
msgid "The result of running @command{guix pull} is a @dfn{profile} available under @file{~/.config/guix/current} containing the latest Guix."
msgstr "O resultado da execução de @command{guix pull} é um @dfn{perfil} disponível em @file{~/.config/guix/current} contendo o Guix mais recente."

#. type: Plain text
#: guix-git/doc/guix.texi:4620
msgid "The @option{--list-generations} or @option{-l} option lists past generations produced by @command{guix pull}, along with details about their provenance:"
msgstr "A opção @option{--list-generations} ou @option{-l} lista gerações anteriores produzidas por @command{guix pull}, juntamente com detalhes sobre sua procedência:"

#. type: example
#: guix-git/doc/guix.texi:4628
#, no-wrap
msgid ""
"$ guix pull -l\n"
"Generation 1\tJun 10 2018 00:18:18\n"
"  guix 65956ad\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: 65956ad3526ba09e1f7a40722c96c6ef7c0936fe\n"
"\n"
msgstr ""
"$ guix pull -l\n"
"Geração 1\t10 jun 2018 00:18:18\n"
"  guix 65956ad\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    ramo: origin/master\n"
"    commit: 65956ad3526ba09e1f7a40722c96c6ef7c0936fe\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:4634
#, no-wrap
msgid ""
"Generation 2\tJun 11 2018 11:02:49\n"
"  guix e0cc7f6\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: e0cc7f669bec22c37481dd03a7941c7d11a64f1d\n"
"\n"
msgstr ""
"Geração 2\t11 jun 2018 11:02:49\n"
"  guix e0cc7f6\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    ramo: origin/master\n"
"    commit: e0cc7f669bec22c37481dd03a7941c7d11a64f1d\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:4640
#, no-wrap
msgid ""
"Generation 3\tJun 13 2018 23:31:07\t(current)\n"
"  guix 844cc1c\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: origin/master\n"
"    commit: 844cc1c8f394f03b404c5bb3aee086922373490c\n"
msgstr ""
"Geração 3\t13 jun 2018 23:31:07\t(atual)\n"
"  guix 844cc1c\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    ramo: origin/master\n"
"    commit: 844cc1c8f394f03b404c5bb3aee086922373490c\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4644
msgid "@xref{Invoking guix describe, @command{guix describe}}, for other ways to describe the current status of Guix."
msgstr "@xref{Invoking guix describe, @command{guix describe}}, para outras maneiras de descrever o status atual do Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:4649
msgid "This @code{~/.config/guix/current} profile works exactly like the profiles created by @command{guix package} (@pxref{Invoking guix package}).  That is, you can list generations, roll back to the previous generation---i.e., the previous Guix---and so on:"
msgstr "Este perfil @code{~/.config/guix/current} funciona exatamente como os perfis criados por @command{guix package} (@pxref{Invoking guix package}). Ou seja, você pode listar gerações, reverter para a geração anterior --- ou seja, o Guix anterior --- e assim por diante:"

#. type: example
#: guix-git/doc/guix.texi:4655
#, no-wrap
msgid ""
"$ guix pull --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix pull --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""
"$ guix pull --roll-back\n"
"trocado da geração 3 para 2\n"
"$ guix pull --delete-generations=1\n"
"excluindo /var/guix/profiles/per-user/charlie/current-guix-1-link\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4659
msgid "You can also use @command{guix package} (@pxref{Invoking guix package})  to manage the profile by naming it explicitly:"
msgstr "Você também pode usar @command{guix package} (@pxref{Invoking guix package}) para gerenciar o perfil nomeando-o explicitamente:"

#. type: example
#: guix-git/doc/guix.texi:4664
#, no-wrap
msgid ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"switched from generation 3 to 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"deleting /var/guix/profiles/per-user/charlie/current-guix-1-link\n"
msgstr ""
"$ guix package -p ~/.config/guix/current --roll-back\n"
"trocado da geração 3 para 2\n"
"$ guix package -p ~/.config/guix/current --delete-generations=1\n"
"excluindo /var/guix/profiles/per-user/charlie/current-guix-1-link\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4668
msgid "The @command{guix pull} command is usually invoked with no arguments, but it supports the following options:"
msgstr "O comando @command{guix pull} geralmente é invocado sem argumentos, mas suporta as seguintes opções:"

#. type: item
#: guix-git/doc/guix.texi:4670 guix-git/doc/guix.texi:4914
#, no-wrap
msgid "--url=@var{url}"
msgstr "--url=@var{url}"

#. type: itemx
#: guix-git/doc/guix.texi:4671 guix-git/doc/guix.texi:4915
#, no-wrap
msgid "--commit=@var{commit}"
msgstr "--commit=@var{commit}"

#. type: item
#: guix-git/doc/guix.texi:4672 guix-git/doc/guix.texi:4916
#: guix-git/doc/guix.texi:14277
#, no-wrap
msgid "--branch=@var{branch}"
msgstr "--branch=@var{ramo}"

#. type: table
#: guix-git/doc/guix.texi:4676
msgid "Download code for the @code{guix} channel from the specified @var{url}, at the given @var{commit} (a valid Git commit ID represented as a hexadecimal string or the name of a tag), or @var{branch}."
msgstr "Baixe o código para o canal @code{guix} do @var{url} especificado, no @var{commit} fornecido (um ID de commit Git válido representado como uma string hexadecimal ou o nome de uma tag) ou @var{ramo}."

#. type: cindex
#: guix-git/doc/guix.texi:4677 guix-git/doc/guix.texi:5368
#, no-wrap
msgid "@file{channels.scm}, configuration file"
msgstr "@file{channels.scm}, arquivo de configuração"

#. type: cindex
#: guix-git/doc/guix.texi:4678 guix-git/doc/guix.texi:5369
#, no-wrap
msgid "configuration file for channels"
msgstr "arquivo de configuração para canais"

#. type: table
#: guix-git/doc/guix.texi:4682
msgid "These options are provided for convenience, but you can also specify your configuration in the @file{~/.config/guix/channels.scm} file or using the @option{--channels} option (see below)."
msgstr "Essas opções são fornecidas para sua conveniência, mas você também pode especificar sua configuração no arquivo @file{~/.config/guix/channels.scm} ou usando a opção @option{--channels} (veja abaixo)."

#. type: item
#: guix-git/doc/guix.texi:4683 guix-git/doc/guix.texi:4921
#, no-wrap
msgid "--channels=@var{file}"
msgstr "--channels=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:4684 guix-git/doc/guix.texi:4922
#, no-wrap
msgid "-C @var{file}"
msgstr "-C @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:4690
msgid "Read the list of channels from @var{file} instead of @file{~/.config/guix/channels.scm} or @file{/etc/guix/channels.scm}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels}, for more information."
msgstr "Leia a lista de canais de @var{arquivo} em vez de @file{~/.config/guix/channels.scm} ou @file{/etc/guix/channels.scm}. @var{arquivo} deve conter código Scheme que avalia uma lista de objetos de canal. @xref{Channels}, para mais informações."

#. type: item
#: guix-git/doc/guix.texi:4691 guix-git/doc/guix.texi:4927
#, no-wrap
msgid "--no-channel-files"
msgstr "--no-channel-files"

#. type: itemx
#: guix-git/doc/guix.texi:4692 guix-git/doc/guix.texi:4928
#: guix-git/doc/guix.texi:12972 guix-git/doc/guix.texi:13809
#, no-wrap
msgid "-q"
msgstr "-q"

#. type: table
#: guix-git/doc/guix.texi:4695 guix-git/doc/guix.texi:4931
msgid "Inhibit loading of the user and system channel files, @file{~/.config/guix/channels.scm} and @file{/etc/guix/channels.scm}."
msgstr "Inibir o carregamento dos arquivos de canal do usuário e do sistema, @file{~/.config/guix/channels.scm} e @file{/etc/guix/channels.scm}."

#. type: cindex
#: guix-git/doc/guix.texi:4696
#, no-wrap
msgid "channel news"
msgstr "canal de notícias"

#. type: item
#: guix-git/doc/guix.texi:4697
#, no-wrap
msgid "--news"
msgstr "--news"

#. type: itemx
#: guix-git/doc/guix.texi:4698 guix-git/doc/guix.texi:6438
#: guix-git/doc/guix.texi:6939 guix-git/doc/guix.texi:46902
#: guix-git/doc/guix.texi:52437
#, no-wrap
msgid "-N"
msgstr "-N"

#. type: table
#: guix-git/doc/guix.texi:4703
msgid "Display news written by channel authors for their users for changes made since the previous generation (@pxref{Channels, Writing Channel News}).  When @option{--details} is passed, additionally display new and upgraded packages."
msgstr "Exibir notícias escritas por autores de canais para seus usuários para alterações feitas desde a geração anterior (@pxref{Channels, Escrevendo Notícias de Canal}). Quando @option{--details} é passado, exibir adicionalmente pacotes novos e atualizados."

#. type: table
#: guix-git/doc/guix.texi:4706
msgid "You can view that information for previous generations with @command{guix pull -l}."
msgstr "Você pode visualizar essas informações de gerações anteriores com @command{guix pull -l}."

#. type: table
#: guix-git/doc/guix.texi:4713
msgid "List all the generations of @file{~/.config/guix/current} or, if @var{pattern} is provided, the subset of generations that match @var{pattern}.  The syntax of @var{pattern} is the same as with @code{guix package --list-generations} (@pxref{Invoking guix package})."
msgstr "Liste todas as gerações de @file{~/.config/guix/current} ou, se @var{padrão} for fornecido, o subconjunto de gerações que correspondem a @var{padrão}. A sintaxe de @var{padrão} é a mesma de @code{guix package --list-generations} (@pxref{Invoking guix package})."

#. type: table
#: guix-git/doc/guix.texi:4718
msgid "By default, this prints information about the channels used in each revision as well as the corresponding news entries.  If you pass @option{--details}, it will also print the list of packages added and upgraded in each generation compared to the previous one."
msgstr "Por padrão, isso imprime informações sobre os canais usados em cada revisão, bem como as entradas de notícias correspondentes. Se você passar @option{--details}, ele também imprimirá a lista de pacotes adicionados e atualizados em cada geração em comparação com a anterior."

#. type: item
#: guix-git/doc/guix.texi:4719
#, no-wrap
msgid "--details"
msgstr "--details"

#. type: table
#: guix-git/doc/guix.texi:4723
msgid "Instruct @option{--list-generations} or @option{--news} to display more information about the differences between subsequent generations---see above."
msgstr "Instrua @option{--list-generations} ou @option{--news} para exibir mais informações sobre as diferenças entre gerações subsequentes — veja acima."

#. type: table
#: guix-git/doc/guix.texi:4730
msgid "Roll back to the previous @dfn{generation} of @file{~/.config/guix/current}---i.e., undo the last transaction."
msgstr "Reverta para a @dfn{geração} anterior de @file{~/.config/guix/current}---ou seja, desfaça a última transação."

#. type: table
#: guix-git/doc/guix.texi:4754
msgid "If the current generation matches, it is @emph{not} deleted."
msgstr "Se a geração atual corresponder, ela @emph{não} será excluída."

#. type: table
#: guix-git/doc/guix.texi:4760
msgid "@xref{Invoking guix describe}, for a way to display information about the current generation only."
msgstr "@xref{Invoking guix describe}, para uma maneira de exibir informações somente sobre a geração atual."

#. type: table
#: guix-git/doc/guix.texi:4764
msgid "Use @var{profile} instead of @file{~/.config/guix/current}."
msgstr "Use @var{perfil} em vez de @file{~/.config/guix/current}."

#. type: item
#: guix-git/doc/guix.texi:4765 guix-git/doc/guix.texi:13258
#: guix-git/doc/guix.texi:15626
#, no-wrap
msgid "--dry-run"
msgstr "--dry-run"

#. type: itemx
#: guix-git/doc/guix.texi:4766 guix-git/doc/guix.texi:13259
#: guix-git/doc/guix.texi:15627 guix-git/doc/guix.texi:15949
#, no-wrap
msgid "-n"
msgstr "-n"

#. type: table
#: guix-git/doc/guix.texi:4769
msgid "Show which channel commit(s) would be used and what would be built or substituted but do not actually do it."
msgstr "Mostre quais commits de canal seriam usados e o que seria construído ou substituído, mas não faça isso de fato."

#. type: item
#: guix-git/doc/guix.texi:4770 guix-git/doc/guix.texi:46921
#: guix-git/doc/guix.texi:52685
#, no-wrap
msgid "--allow-downgrades"
msgstr "--allow-downgrades"

#. type: table
#: guix-git/doc/guix.texi:4773
msgid "Allow pulling older or unrelated revisions of channels than those currently in use."
msgstr "Permitir extrair revisões de canais mais antigas ou não relacionadas às que estão em uso atualmente."

#. type: cindex
#: guix-git/doc/guix.texi:4774
#, no-wrap
msgid "downgrade attacks, protection against"
msgstr "ataques de downgrade, proteção contra"

#. type: table
#: guix-git/doc/guix.texi:4779
msgid "By default, @command{guix pull} protects against so-called ``downgrade attacks'' whereby the Git repository of a channel would be reset to an earlier or unrelated revision of itself, potentially leading you to install older, known-vulnerable versions of software packages."
msgstr "Por padrão, @command{guix pull} protege contra os chamados \"ataques de downgrade'', nos quais o repositório Git de um canal seria redefinido para uma revisão anterior ou não relacionada a si mesmo, potencialmente levando você a instalar versões mais antigas e conhecidas de pacotes de software."

#. type: quotation
#: guix-git/doc/guix.texi:4783 guix-git/doc/guix.texi:46935
msgid "Make sure you understand its security implications before using @option{--allow-downgrades}."
msgstr "Certifique-se de entender as implicações de segurança antes de usar @option{--allow-downgrades}."

#. type: item
#: guix-git/doc/guix.texi:4785
#, no-wrap
msgid "--disable-authentication"
msgstr "--disable-authentication"

#. type: table
#: guix-git/doc/guix.texi:4787
msgid "Allow pulling channel code without authenticating it."
msgstr "Permitir extrair código de canal sem autenticá-lo."

#. type: cindex
#: guix-git/doc/guix.texi:4788 guix-git/doc/guix.texi:5608
#, no-wrap
msgid "authentication, of channel code"
msgstr "autenticação, de código de canal"

#. type: table
#: guix-git/doc/guix.texi:4793
msgid "By default, @command{guix pull} authenticates code downloaded from channels by verifying that its commits are signed by authorized developers, and raises an error if this is not the case.  This option instructs it to not perform any such verification."
msgstr "Por padrão, @command{guix pull} autentica o código baixado de canais verificando se seus commits são assinados por desenvolvedores autorizados e gera um erro se esse não for o caso. Esta opção o instrui a não executar nenhuma verificação desse tipo."

#. type: quotation
#: guix-git/doc/guix.texi:4797
msgid "Make sure you understand its security implications before using @option{--disable-authentication}."
msgstr "Certifique-se de entender as implicações de segurança antes de usar @option{--disable-authentication}."

#. type: item
#: guix-git/doc/guix.texi:4799 guix-git/doc/guix.texi:14255
#, no-wrap
msgid "--no-check-certificate"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4801 guix-git/doc/guix.texi:14257
msgid "Do not validate the X.509 certificates of HTTPS servers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:4806
msgid "When using this option, you have @emph{absolutely no guarantee} that you are communicating with the authentic server responsible for the given URL.  Unless the channel is authenticated, this makes you vulnerable to ``man-in-the-middle'' attacks."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:4808 guix-git/doc/guix.texi:6421
#: guix-git/doc/guix.texi:6922 guix-git/doc/guix.texi:7489
#: guix-git/doc/guix.texi:13975 guix-git/doc/guix.texi:16094
#: guix-git/doc/guix.texi:16359 guix-git/doc/guix.texi:17053
#: guix-git/doc/guix.texi:46845
#, no-wrap
msgid "-s @var{system}"
msgstr "-s @var{sistema}"

#. type: table
#: guix-git/doc/guix.texi:4811 guix-git/doc/guix.texi:7492
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}---instead of the system type of the build host."
msgstr "Tente compilar para @var{sistema}---por exemplo, @code{i686-linux}---em vez do tipo de sistema do host de compilação."

#. type: table
#: guix-git/doc/guix.texi:4815
msgid "Use the bootstrap Guile to build the latest Guix.  This option is only useful to Guix developers."
msgstr "Use o bootstrap Guile para construir o Guix mais recente. Esta opção é útil somente para desenvolvedores Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:4821
msgid "The @dfn{channel} mechanism allows you to instruct @command{guix pull} which repository and branch to pull from, as well as @emph{additional} repositories containing package modules that should be deployed.  @xref{Channels}, for more information."
msgstr "O mecanismo dos @dfn{canais} permite que você instrua @command{guix pull} de qual repositório e branch extrair, bem como @emph{repositórios adicionais} contendo módulos de pacote que devem ser implantados. @xref{Channels}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:4824
msgid "In addition, @command{guix pull} supports all the common build options (@pxref{Common Build Options})."
msgstr "Além disso, @command{guix pull} suporta todas as opções de compilação comuns (@pxref{Common Build Options})."

#. type: section
#: guix-git/doc/guix.texi:4826
#, no-wrap
msgid "Invoking @command{guix time-machine}"
msgstr "Invocando @command{guix time-machine}"

#. type: command{#1}
#: guix-git/doc/guix.texi:4828
#, no-wrap
msgid "guix time-machine"
msgstr "guix time-machine"

#. type: cindex
#: guix-git/doc/guix.texi:4829 guix-git/doc/guix.texi:5488
#, no-wrap
msgid "pinning, channels"
msgstr "fixação, canais"

#. type: cindex
#: guix-git/doc/guix.texi:4830 guix-git/doc/guix.texi:5080
#: guix-git/doc/guix.texi:5489
#, no-wrap
msgid "replicating Guix"
msgstr "replicando Guix"

#. type: cindex
#: guix-git/doc/guix.texi:4831 guix-git/doc/guix.texi:5490
#, no-wrap
msgid "reproducibility, of Guix"
msgstr "reprodutibilidade, de Guix"

#. type: Plain text
#: guix-git/doc/guix.texi:4839
msgid "The @command{guix time-machine} command provides access to other revisions of Guix, for example to install older versions of packages, or to reproduce a computation in an identical environment.  The revision of Guix to be used is defined by a commit or by a channel description file created by @command{guix describe} (@pxref{Invoking guix describe})."
msgstr "O comando @command{guix time-machine} fornece acesso a outras revisões do Guix, por exemplo, para instalar versões mais antigas de pacotes ou para reproduzir uma computação em um ambiente idêntico. A revisão do Guix a ser usada é definida por um commit ou por um arquivo de descrição de canal criado por @command{guix describe} (@pxref{Invoking guix describe})."

#. type: Plain text
#: guix-git/doc/guix.texi:4843
msgid "Let's assume that you want to travel to those days of November 2020 when version 1.2.0 of Guix was released and, once you're there, run the @command{guile} of that time:"
msgstr "Vamos supor que você queira viajar para aqueles dias de novembro de 2020, quando a versão 1.2.0 do Guix foi lançada e, uma vez lá, executar o @command{guile} daquela época:"

#. type: example
#: guix-git/doc/guix.texi:4847
#, no-wrap
msgid ""
"guix time-machine --commit=v1.2.0 -- \\\n"
"  environment -C --ad-hoc guile -- guile\n"
msgstr ""
"guix time-machine --commit=v1.2.0 -- \\\n"
"  environment -C --ad-hoc guile -- guile\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4861
msgid "The command above fetches Guix@tie{}1.2.0 (and possibly other channels specified by your @file{channels.scm} configuration files---see below) and runs its @command{guix environment} command to spawn an environment in a container running @command{guile} (@command{guix environment} has since been subsumed by @command{guix shell}; @pxref{Invoking guix shell}).  It's like driving a DeLorean@footnote{If you don't know what a DeLorean is, consider traveling back to the 1980's. (@uref{https://www.imdb.com/title/tt0088763/, Back to the Future (1985)})}! The first @command{guix time-machine} invocation can be expensive: it may have to download or even build a large number of packages; the result is cached though and subsequent commands targeting the same commit are almost instantaneous."
msgstr "O comando acima busca Guix@tie{}1.2.0 (e possivelmente outros canais especificados pelos seus arquivos de configuração @file{channels.scm} --- veja abaixo) e executa seu comando @command{guix environment} para gerar um ambiente em um contêiner executando @command{guile} (@command{guix environment} foi desde então subsumido por @command{guix shell}; @pxref{Invoking guix shell}). É como dirigir um DeLorean@footnote{Se você não sabe o que é um DeLorean, considere viajar de volta para a década de 1980. (@uref{https://www.imdb.com/title/tt0088763/, De Volta para o Futuro (1985)})}! A primeira invocação de @command{guix time-machine} pode ser cara: pode ser necessário baixar ou até mesmo construir um grande número de pacotes; o resultado é armazenado em cache e os comandos subsequentes direcionados ao mesmo commit são quase instantâneos."

#. type: Plain text
#: guix-git/doc/guix.texi:4867
msgid "As for @command{guix pull}, in the absence of any options, @command{time-machine} fetches the latest commits of the channels specified in @file{~/.config/guix/channels.scm}, @file{/etc/guix/channels.scm}, or the default channels; the @option{-q} option lets you ignore these configuration files.  The command:"
msgstr "Quanto ao @command{guix pull}, na ausência de quaisquer opções, o @command{time-machine} busca os últimos commits dos canais especificados em @file{~/.config/guix/channels.scm}, @file{/etc/guix/channels.scm}, ou os canais padrão; a opção @option{-q} permite que você ignore esses arquivos de configuração. O comando:"

#. type: example
#: guix-git/doc/guix.texi:4870
#, no-wrap
msgid "guix time-machine -q -- build hello\n"
msgstr "guix time-machine -q -- build hello\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4876
msgid "will thus build the package @code{hello} as defined in the main branch of Guix, without any additional channel, which is in general a newer revision of Guix than you have installed.  Time travel works in both directions!"
msgstr "construirá então o pacote @code{hello} conforme definido no branch principal do Guix, sem nenhum canal adicional, que é em geral uma revisão mais nova do Guix do que a que você instalou. A viagem no tempo funciona em ambas as direções!"

#. type: quotation
#: guix-git/doc/guix.texi:4884
msgid "The history of Guix is immutable and @command{guix time-machine} provides the exact same software as they are in a specific Guix revision.  Naturally, no security fixes are provided for old versions of Guix or its channels.  A careless use of @command{guix time-machine} opens the door to security vulnerabilities.  @xref{Invoking guix pull, @option{--allow-downgrades}}."
msgstr "O histórico do Guix é imutável e @command{guix time-machine} fornece exatamente o mesmo software que eles estão em uma revisão específica do Guix. Naturalmente, nenhuma correção de segurança é fornecida para versões antigas do Guix ou seus canais. Um uso descuidado do @command{guix time-machine} abre a porta para vulnerabilidades de segurança. @xref{Invoking guix pull, @option{--allow-downgrades}}."

#. type: Plain text
#: guix-git/doc/guix.texi:4891
msgid "@command{guix time-machine} raises an error when attempting to travel to commits older than ``v0.16.0'' (commit @samp{4a0b87f0}), dated Dec.@: 2018.  This is one of the oldest commits supporting the channel mechanism that makes ``time travel'' possible."
msgstr "@command{guix time-machine} gera um erro ao tentar viajar para commits mais antigos que \"v0.16.0\" (commit @samp{4a0b87f0}), datados de Dez.@: 2018. Este é um dos commits mais antigos que oferecem suporte ao mecanismo de canal que torna a \"viagem no tempo\" possível."

#. type: quotation
#: guix-git/doc/guix.texi:4901
msgid "Although it should technically be possible to travel to such an old commit, the ease to do so will largely depend on the availability of binary substitutes.  When traveling to a distant past, some packages may not easily build from source anymore.  One such example are old versions of OpenSSL whose tests would fail after a certain date.  This particular problem can be worked around by running a @dfn{virtual build machine} with its clock set to the right time (@pxref{build-vm, Virtual Build Machines})."
msgstr "Embora seja tecnicamente possível viajar para um commit tão antigo, a facilidade para fazê-lo dependerá em grande parte da disponibilidade de substitutos binários. Ao viajar para um passado distante, alguns pacotes podem não ser mais facilmente construídos a partir da fonte. Um exemplo são as versões antigas do OpenSSL cujos testes falhavam após uma certa data. Esse problema em particular pode ser contornado executando uma @dfn{máquina de construção virtual} com seu relógio ajustado para a hora certa (@pxref{build-vm, Máquinas de Construção Virtual})."

#. type: example
#: guix-git/doc/guix.texi:4907
#, no-wrap
msgid "guix time-machine @var{options}@dots{} -- @var{command} @var {arg}@dots{}\n"
msgstr "guix time-machine @var{opções}@dots{} -- @var{comando} @var {arg}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4912
msgid "where @var{command} and @var{arg}@dots{} are passed unmodified to the @command{guix} command of the specified revision.  The @var{options} that define this revision are the same as for @command{guix pull} (@pxref{Invoking guix pull}):"
msgstr "onde @var{comando} e @var{arg}@dots{} são passados sem modificações para o comando @command{guix} da revisão especificada. As @var{opções} que definem esta revisão são as mesmas que para @command{guix pull} (@pxref{Invoking guix pull}):"

#. type: table
#: guix-git/doc/guix.texi:4920
msgid "Use the @code{guix} channel from the specified @var{url}, at the given @var{commit} (a valid Git commit ID represented as a hexadecimal string or the name of a tag), or @var{branch}."
msgstr "Use o canal @code{guix} do @var{url} especificado, no @var{commit} fornecido (um ID de commit Git válido representado como uma string hexadecimal ou o nome de uma tag) ou @var{ramo}."

#. type: table
#: guix-git/doc/guix.texi:4926
msgid "Read the list of channels from @var{file}.  @var{file} must contain Scheme code that evaluates to a list of channel objects.  @xref{Channels} for more information."
msgstr "Leia a lista de canais de @var{arquivo}. @var{arquivo} deve conter código Scheme que avalia uma lista de objetos de canal. @xref{Channels} para mais informações."

#. type: table
#: guix-git/doc/guix.texi:4935
msgid "Thus, @command{guix time-machine -q} is equivalent to the following Bash command, using the ``process substitution'' syntax (@pxref{Process Substitution,,, bash, The GNU Bash Reference Manual}):"
msgstr "Portanto, @command{guix time-machine -q} é equivalente ao seguinte comando Bash, usando a sintaxe \"substituição de processo\" (@pxref{Process Substitution,,, bash, Manual de referência do GNU Bash}):"

#. type: example
#: guix-git/doc/guix.texi:4938
#, no-wrap
msgid "guix time-machine -C <(echo %default-channels) @dots{}\n"
msgstr "guix time-machine -C <(echo %default-channels) @dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:4945
msgid "Note that @command{guix time-machine} can trigger builds of channels and their dependencies, and these are controlled by the standard build options (@pxref{Common Build Options})."
msgstr "Observe que @command{guix time-machine} pode acionar compilações de canais e suas dependências, e elas são controladas pelas opções de compilação padrão (@pxref{Common Build Options})."

#. type: Plain text
#: guix-git/doc/guix.texi:4950
msgid "If @command{guix time-machine} is executed without any command, it prints the file name of the profile that would be used to execute the command.  This is sometimes useful if you need to get store file name of the profile---e.g., when you want to @command{guix copy} it."
msgstr "Se @command{guix time-machine} for executado sem nenhum comando, ele imprime o nome do arquivo do perfil que seria usado para executar o comando. Isso às vezes é útil se você precisa obter o nome do arquivo de armazém do perfil --- por exemplo, quando você quer @command{guix copy} ele."

#. type: quotation
#: guix-git/doc/guix.texi:4958
msgid "The functionality described here is a ``technology preview'' as of version @value{VERSION}.  As such, the interface is subject to change."
msgstr "A funcionalidade descrita aqui é uma ``prévia de tecnologia'' da versão @value{VERSION}. Como tal, a interface está sujeita a alterações."

#. type: cindex
#: guix-git/doc/guix.texi:4960 guix-git/doc/guix.texi:12922
#, no-wrap
msgid "inferiors"
msgstr "inferiores"

#. type: cindex
#: guix-git/doc/guix.texi:4961
#, no-wrap
msgid "composition of Guix revisions"
msgstr "composição das revisões do Guix"

#. type: Plain text
#: guix-git/doc/guix.texi:4966
msgid "Sometimes you might need to mix packages from the revision of Guix you're currently running with packages available in a different revision of Guix.  Guix @dfn{inferiors} allow you to achieve that by composing different Guix revisions in arbitrary ways."
msgstr "Às vezes, você pode precisar misturar pacotes da revisão do Guix que você está executando atualmente com pacotes disponíveis em uma revisão diferente do Guix. Os @dfn{inferiores} do Guix permite que você consiga isso compondo diferentes revisões do Guix de maneiras arbitrárias."

#. type: cindex
#: guix-git/doc/guix.texi:4967 guix-git/doc/guix.texi:5030
#, no-wrap
msgid "inferior packages"
msgstr "pacotes inferiores"

#. type: Plain text
#: guix-git/doc/guix.texi:4973
msgid "Technically, an ``inferior'' is essentially a separate Guix process connected to your main Guix process through a REPL (@pxref{Invoking guix repl}).  The @code{(guix inferior)} module allows you to create inferiors and to communicate with them.  It also provides a high-level interface to browse and manipulate the packages that an inferior provides---@dfn{inferior packages}."
msgstr "Tecnicamente, um ``inferior'' é essencialmente um processo Guix separado conectado ao seu processo Guix principal por meio de um REPL (@pxref{Invoking guix repl}). O módulo @code{(guix inferior)} permite que você crie inferiores e se comunique com eles. Ele também fornece uma interface de alto nível para navegar e manipular os pacotes que um inferior fornece---@dfn{pacotes inferiores}."

#. type: Plain text
#: guix-git/doc/guix.texi:4983
msgid "When combined with channels (@pxref{Channels}), inferiors provide a simple way to interact with a separate revision of Guix.  For example, let's assume you want to install in your profile the current @code{guile} package, along with the @code{guile-json} as it existed in an older revision of Guix---perhaps because the newer @code{guile-json} has an incompatible API and you want to run your code against the old API@.  To do that, you could write a manifest for use by @code{guix package --manifest} (@pxref{Writing Manifests}); in that manifest, you would create an inferior for that old Guix revision you care about, and you would look up the @code{guile-json} package in the inferior:"
msgstr "Quando combinados com canais (@pxref{Channels}), os inferiores fornecem uma maneira simples de interagir com uma revisão separada do Guix. Por exemplo, vamos supor que você queira instalar em seu perfil o pacote @code{guile} atual, junto com o @code{guile-json} como ele existia em uma revisão mais antiga do Guix---talvez porque o mais novo @code{guile-json} tenha uma API incompatível e você queira executar seu código contra a API antiga. Para fazer isso, você pode escrever um manifesto para uso por @code{guix package --manifest} (@pxref{Writing Manifests}); nesse manifesto, você criaria um inferior para aquela revisão antiga do Guix que você se importa, e você procuraria o pacote @code{guile-json} no inferior:"

#. type: lisp
#: guix-git/doc/guix.texi:4987
#, no-wrap
msgid ""
"(use-modules (guix inferior) (guix channels)\n"
"             (srfi srfi-1))   ;for 'first'\n"
"\n"
msgstr ""
"(use-modules (guix inferior) (guix channels)\n"
"             (srfi srfi-1))   ;para 'first'\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:4996
#, no-wrap
msgid ""
"(define channels\n"
"  ;; This is the old revision from which we want to\n"
"  ;; extract guile-json.\n"
"  (list (channel\n"
"         (name 'guix)\n"
"         (url \"https://git.guix.gnu.org/guix.git\")\n"
"         (commit\n"
"          \"65956ad3526ba09e1f7a40722c96c6ef7c0936fe\"))))\n"
"\n"
msgstr ""
"(define canais\n"
"  ;; Esta é a revisão antiga da qual queremos\n"
"  ;; extrair guile-json.\n"
"  (list (channel\n"
"         (name 'guix)\n"
"         (url \"https://git.guix.gnu.org/guix.git\")\n"
"         (commit\n"
"          \"65956ad3526ba09e1f7a40722c96c6ef7c0936fe\"))))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5000
#, no-wrap
msgid ""
"(define inferior\n"
"  ;; An inferior representing the above revision.\n"
"  (inferior-for-channels channels))\n"
"\n"
msgstr ""
"(define inferior\n"
"  ;; Um inferior representando a revisão acima.\n"
"  (inferior-for-channels canais))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5006
#, no-wrap
msgid ""
";; Now create a manifest with the current \"guile\" package\n"
";; and the old \"guile-json\" package.\n"
"(packages->manifest\n"
" (list (first (lookup-inferior-packages inferior \"guile-json\"))\n"
"       (specification->package \"guile\")))\n"
msgstr ""
";; Agora crie um manifesto com o pacote \"guile\" atual\n"
";; e o antigo pacote \"guile-json\".\n"
"(packages->manifest\n"
" (list (first (lookup-inferior-packages inferior \"guile-json\"))\n"
"       (specification->package \"guile\")))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5011
msgid "On its first run, @command{guix package --manifest} might have to build the channel you specified before it can create the inferior; subsequent runs will be much faster because the Guix revision will be cached."
msgstr "Na primeira execução, @command{guix package --manifest} pode ter que construir o canal que você especificou antes de poder criar o inferior; execuções subsequentes serão muito mais rápidas porque a revisão do Guix será armazenada em cache."

#. type: Plain text
#: guix-git/doc/guix.texi:5014
msgid "The @code{(guix inferior)} module provides the following procedures to open an inferior:"
msgstr "O módulo @code{(guix inferior)} fornece os seguintes procedimentos para abrir um inferior:"

#. type: deffn
#: guix-git/doc/guix.texi:5015
#, no-wrap
msgid "{Procedure} inferior-for-channels channels [#:cache-directory] [#:ttl]"
msgstr "{Procedimento} inferior-for-channels canais [#:cache-directory] [#:ttl]"

#. type: deffn
#: guix-git/doc/guix.texi:5019
msgid "Return an inferior for @var{channels}, a list of channels.  Use the cache at @var{cache-directory}, where entries can be reclaimed after @var{ttl} seconds.  This procedure opens a new connection to the build daemon."
msgstr "Retorna um inferior para @var{canais}, uma lista de canais. Use o cache em @var{cache-directory}, onde as entradas podem ser recuperadas após @var{ttl} segundos. Este procedimento abre uma nova conexão com o daemon de construção."

#. type: deffn
#: guix-git/doc/guix.texi:5022
msgid "As a side effect, this procedure may build or substitute binaries for @var{channels}, which can take time."
msgstr "Como efeito colateral, esse procedimento pode criar ou substituir binários para @var{canais}, o que pode levar tempo."

#. type: deffn
#: guix-git/doc/guix.texi:5024
#, no-wrap
msgid "{Procedure} open-inferior directory [#:command \"bin/guix\"]"
msgstr "{Procedimento} open-inferior diretório [#:command \"bin/guix\"]"

#. type: deffn
#: guix-git/doc/guix.texi:5028
msgid "Open the inferior Guix in @var{directory}, running @code{@var{directory}/@var{command} repl} or equivalent.  Return @code{#f} if the inferior could not be launched."
msgstr "Abra o Guix inferior em @var{diretório}, executando o comando @code{@var{diretório}/@var{command} repl} ou equivalente. Retorne @code{#f} se o inferior não puder ser iniciado."

#. type: Plain text
#: guix-git/doc/guix.texi:5033
msgid "The procedures listed below allow you to obtain and manipulate inferior packages."
msgstr "Os procedimentos listados abaixo permitem que você obtenha e manipule pacotes inferiores."

#. type: deffn
#: guix-git/doc/guix.texi:5034
#, no-wrap
msgid "{Procedure} inferior-packages inferior"
msgstr "{Procedimento} inferior-packages inferior"

#. type: deffn
#: guix-git/doc/guix.texi:5036
msgid "Return the list of packages known to @var{inferior}."
msgstr "Retorna a lista de pacotes conhecidos por @var{inferior}."

#. type: deffn
#: guix-git/doc/guix.texi:5038
#, no-wrap
msgid "{Procedure} lookup-inferior-packages inferior name [version]"
msgstr "{Procedimento} lookup-inferior-packages inferior nome [versão]"

#. type: deffn
#: guix-git/doc/guix.texi:5042
msgid "Return the sorted list of inferior packages matching @var{name} in @var{inferior}, with highest version numbers first.  If @var{version} is true, return only packages with a version number prefixed by @var{version}."
msgstr "Retorna a lista ordenada de pacotes inferiores que correspondem a @var{nome} em @var{inferior}, com os números de versão mais altos primeiro. Se @var{versão} for true, retorna apenas pacotes com um número de versão prefixado por @var{versão}."

#. type: deffn
#: guix-git/doc/guix.texi:5044
#, no-wrap
msgid "{Procedure} inferior-package? obj"
msgstr "{Procedimento} inferior-package? obj"

#. type: deffn
#: guix-git/doc/guix.texi:5046
msgid "Return true if @var{obj} is an inferior package."
msgstr "Retorna verdadeiro se @var{obj} for um pacote inferior."

#. type: deffn
#: guix-git/doc/guix.texi:5048
#, no-wrap
msgid "{Procedure} inferior-package-name package"
msgstr "{Procedimento} inferior-package-name pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5049
#, no-wrap
msgid "{Procedure} inferior-package-version package"
msgstr "{Procedimento} inferior-package-version pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5050
#, no-wrap
msgid "{Procedure} inferior-package-synopsis package"
msgstr "{Procedimento} inferior-package-synopsis pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5051
#, no-wrap
msgid "{Procedure} inferior-package-description package"
msgstr "{Procedimento} inferior-package-description pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5052
#, no-wrap
msgid "{Procedure} inferior-package-home-page package"
msgstr "{Procedimento} inferior-package-home-page pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5053
#, no-wrap
msgid "{Procedure} inferior-package-location package"
msgstr "{Procedimento} inferior-package-location pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5054
#, no-wrap
msgid "{Procedure} inferior-package-inputs package"
msgstr "{Procedimento} inferior-package-inputs pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5055
#, no-wrap
msgid "{Procedure} inferior-package-native-inputs package"
msgstr "{Procedimento} inferior-package-native-inputs pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5056
#, no-wrap
msgid "{Procedure} inferior-package-propagated-inputs package"
msgstr "{Procedimento} inferior-package-propagated-inputs pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5057
#, no-wrap
msgid "{Procedure} inferior-package-transitive-propagated-inputs package"
msgstr "{Procedimento} inferior-package-transitive-propagated-inputs pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5058
#, no-wrap
msgid "{Procedure} inferior-package-native-search-paths package"
msgstr "{Procedimento} inferior-package-native-search-paths pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5059
#, no-wrap
msgid "{Procedure} inferior-package-transitive-native-search-paths package"
msgstr "{Procedimento} inferior-package-transitive-native-search-paths pacote"

#. type: deffnx
#: guix-git/doc/guix.texi:5060
#, no-wrap
msgid "{Procedure} inferior-package-search-paths package"
msgstr "{Procedimento} inferior-package-search-paths pacote"

#. type: deffn
#: guix-git/doc/guix.texi:5065
msgid "These procedures are the counterpart of package record accessors (@pxref{package Reference}).  Most of them work by querying the inferior @var{package} comes from, so the inferior must still be live when you call these procedures."
msgstr "Esses procedimentos são a contrapartida dos acessadores de registro de pacote (@pxref{package Reference}). A maioria deles funciona consultando o inferior de onde @var{pacote} vem, então o inferior ainda deve estar ativo quando você chamar esses procedimentos."

#. type: Plain text
#: guix-git/doc/guix.texi:5075
msgid "Inferior packages can be used transparently like any other package or file-like object in G-expressions (@pxref{G-Expressions}).  They are also transparently handled by the @code{packages->manifest} procedure, which is commonly used in manifests (@pxref{Invoking guix package, the @option{--manifest} option of @command{guix package}}).  Thus you can insert an inferior package pretty much anywhere you would insert a regular package: in manifests, in the @code{packages} field of your @code{operating-system} declaration, and so on."
msgstr "Pacotes inferiores podem ser usados transparentemente como qualquer outro pacote ou objeto tipo arquivo em expressões-G (@pxref{G-Expressions}). Eles também são manipulados transparentemente pelo procedimento @code{packages->manifest}, que é comumente usado em manifestos (@pxref{Invoking guix package, a opção @option{--manifest} de @command{guix package}}). Assim, você pode inserir um pacote inferior praticamente em qualquer lugar em que inseriria um pacote regular: em manifestos, no campo @code{packages} da sua declaração @code{operating-system} e assim por diante."

#. type: section
#: guix-git/doc/guix.texi:5077
#, no-wrap
msgid "Invoking @command{guix describe}"
msgstr "Invocando @command{guix describe}"

#. type: command{#1}
#: guix-git/doc/guix.texi:5081
#, no-wrap
msgid "guix describe"
msgstr "guix describe"

#. type: Plain text
#: guix-git/doc/guix.texi:5089
msgid "Often you may want to answer questions like: ``Which revision of Guix am I using?'' or ``Which channels am I using?'' This is useful information in many situations: if you want to @emph{replicate} an environment on a different machine or user account, if you want to report a bug or to determine what change in the channels you are using caused it, or if you want to record your system state for reproducibility purposes.  The @command{guix describe} command answers these questions."
msgstr "Frequentemente você pode querer responder perguntas como: ``Qual revisão do Guix estou usando?'' ou ``Quais canais estou usando?'' Essas são informações úteis em muitas situações: se você quiser @emph{replicar} um ambiente em uma máquina ou conta de usuário diferente, se quiser relatar um bug ou determinar qual alteração nos canais que você está usando o causou, ou se quiser registrar o estado do seu sistema para fins de reprodutibilidade. O comando @command{guix describe} responde a essas perguntas."

#. type: Plain text
#: guix-git/doc/guix.texi:5093
msgid "When run from a @command{guix pull}ed @command{guix}, @command{guix describe} displays the channel(s) that it was built from, including their repository URL and commit IDs (@pxref{Channels}):"
msgstr "Quando executado a partir de um @command{guix} obtido com @command{guix pull}, @command{guix describe} exibe o(s) canal(ais) dos quais foi criado, incluindo a URL do repositório e os IDs de confirmação (@pxref{Channels}):"

#. type: example
#: guix-git/doc/guix.texi:5101
#, no-wrap
msgid ""
"$ guix describe\n"
"Generation 10\tSep 03 2018 17:32:44\t(current)\n"
"  guix e0fa68c\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: master\n"
"    commit: e0fa68c7718fffd33d81af415279d6ddb518f727\n"
msgstr ""
"$ guix describe\n"
"Geração 10\t03 set 2018 17:32:44\t(atual)\n"
"  guix e0fa68c\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    ramo: master\n"
"    commit: e0fa68c7718fffd33d81af415279d6ddb518f727\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5110
msgid "If you're familiar with the Git version control system, this is similar in spirit to @command{git describe}; the output is also similar to that of @command{guix pull --list-generations}, but limited to the current generation (@pxref{Invoking guix pull, the @option{--list-generations} option}).  Because the Git commit ID shown above unambiguously refers to a snapshot of Guix, this information is all it takes to describe the revision of Guix you're using, and also to replicate it."
msgstr "Se você estiver familiarizado com o sistema de controle de versão do Git, isso é similar em espírito a @command{git describe}; a saída também é similar à de @command{guix pull --list-generations}, mas limitada à geração atual (@pxref{Invoking guix pull, a opção @option{--list-generations}}). Como o ID de commit do Git mostrado acima se refere inequivocamente a um snapshot do Guix, essa informação é tudo o que é preciso para descrever a revisão do Guix que você está usando e também para replicá-la."

#. type: Plain text
#: guix-git/doc/guix.texi:5113
msgid "To make it easier to replicate Guix, @command{guix describe} can also be asked to return a list of channels instead of the human-readable description above:"
msgstr "Para facilitar a replicação do Guix, @command{guix describe} também pode ser solicitado a retornar uma lista de canais em vez da descrição legível acima:"

#. type: example
#: guix-git/doc/guix.texi:5126
#, no-wrap
msgid ""
"$ guix describe -f channels\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://git.guix.gnu.org/guix.git\")\n"
"        (commit\n"
"          \"e0fa68c7718fffd33d81af415279d6ddb518f727\")\n"
"        (introduction\n"
"          (make-channel-introduction\n"
"            \"9edb3f66fd807b096b48283debdcddccfea34bad\"\n"
"            (openpgp-fingerprint\n"
"              \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\")))))\n"
msgstr ""
"$ guix describe -f channels\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://git.guix.gnu.org/guix.git\")\n"
"        (commit\n"
"          \"e0fa68c7718fffd33d81af415279d6ddb518f727\")\n"
"        (introduction\n"
"          (make-channel-introduction\n"
"            \"9edb3f66fd807b096b48283debdcddccfea34bad\"\n"
"            (openpgp-fingerprint\n"
"              \"BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\")))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5135
msgid "You can save this to a file and feed it to @command{guix pull -C} on some other machine or at a later point in time, which will instantiate @emph{this exact Guix revision} (@pxref{Invoking guix pull, the @option{-C} option}).  From there on, since you're able to deploy the same revision of Guix, you can just as well @emph{replicate a complete software environment}.  We humbly think that this is @emph{awesome}, and we hope you'll like it too!"
msgstr "Você pode salvar isso em um arquivo e alimentá-lo com @command{guix pull -C} em alguma outra máquina ou em um momento posterior, o que instanciará @emph{esta revisão exata do Guix} (@pxref{Invoking guix pull, a opção @option{-C}}). A partir daí, já que você consegue implementar a mesma revisão do Guix, você pode muito bem @emph{replicar um ambiente de software completo}. Humildemente achamos isso @emph{incrível}, e esperamos que você goste também!"

#. type: Plain text
#: guix-git/doc/guix.texi:5138
msgid "The details of the options supported by @command{guix describe} are as follows:"
msgstr "Os detalhes das opções suportadas por @command{guix describe} são os seguintes:"

#. type: item
#: guix-git/doc/guix.texi:5140 guix-git/doc/guix.texi:7151
#: guix-git/doc/guix.texi:17180
#, no-wrap
msgid "--format=@var{format}"
msgstr "--format=@var{formato}"

#. type: itemx
#: guix-git/doc/guix.texi:5141 guix-git/doc/guix.texi:7152
#: guix-git/doc/guix.texi:17181
#, no-wrap
msgid "-f @var{format}"
msgstr "-f @var{formato}"

#. type: table
#: guix-git/doc/guix.texi:5143 guix-git/doc/guix.texi:17183
msgid "Produce output in the specified @var{format}, one of:"
msgstr "Produza saída no @var{formato} especificado, um dos seguintes:"

#. type: item
#: guix-git/doc/guix.texi:5145
#, no-wrap
msgid "human"
msgstr "human"

#. type: table
#: guix-git/doc/guix.texi:5147
msgid "produce human-readable output;"
msgstr "produzir resultados legíveis por humanos;"

#. type: cindex
#: guix-git/doc/guix.texi:5147 guix-git/doc/guix.texi:5367
#, no-wrap
msgid "channels"
msgstr "channels"

#. type: table
#: guix-git/doc/guix.texi:5151
msgid "produce a list of channel specifications that can be passed to @command{guix pull -C} or installed as @file{~/.config/guix/channels.scm} (@pxref{Invoking guix pull});"
msgstr "produz uma lista de especificações de canal que podem ser passadas para @command{guix pull -C} ou instaladas como @file{~/.config/guix/channels.scm} (@pxref{Invoking guix pull});"

#. type: item
#: guix-git/doc/guix.texi:5151
#, no-wrap
msgid "channels-sans-intro"
msgstr "channels-sans-intro"

#. type: table
#: guix-git/doc/guix.texi:5157
msgid "like @code{channels}, but omit the @code{introduction} field; use it to produce a channel specification suitable for Guix version 1.1.0 or earlier---the @code{introduction} field has to do with channel authentication (@pxref{Channels, Channel Authentication}) and is not supported by these older versions;"
msgstr "como @code{channels}, mas omita o campo @code{introduction}; use-o para produzir uma especificação de canal adequada para a versão 1.1.0 do Guix ou anterior --- o campo @code{introduction} tem a ver com autenticação de canal (@pxref{Channels, Autenticação de canal}) e não é suportado por essas versões mais antigas;"

#. type: item
#: guix-git/doc/guix.texi:5157 guix-git/doc/guix.texi:14651
#, no-wrap
msgid "json"
msgstr "json"

#. type: cindex
#: guix-git/doc/guix.texi:5158
#, no-wrap
msgid "JSON"
msgstr "JSON"

#. type: table
#: guix-git/doc/guix.texi:5160
msgid "produce a list of channel specifications in JSON format;"
msgstr "produzir uma lista de especificações de canal no formato JSON;"

#. type: item
#: guix-git/doc/guix.texi:5160 guix-git/doc/guix.texi:17185
#, no-wrap
msgid "recutils"
msgstr "recutils"

#. type: table
#: guix-git/doc/guix.texi:5162
msgid "produce a list of channel specifications in Recutils format."
msgstr "produzir uma lista de especificações de canais no formato Recutils."

#. type: item
#: guix-git/doc/guix.texi:5164
#, no-wrap
msgid "--list-formats"
msgstr "--list-formats"

#. type: table
#: guix-git/doc/guix.texi:5166
msgid "Display available formats for @option{--format} option."
msgstr "Exibir formatos disponíveis para a opção @option{--format}."

#. type: table
#: guix-git/doc/guix.texi:5170
msgid "Display information about @var{profile}."
msgstr "Exibir informações sobre @var{perfil}."

#. type: section
#: guix-git/doc/guix.texi:5173
#, no-wrap
msgid "Invoking @command{guix archive}"
msgstr "Invocando @command{guix archive}"

#. type: command{#1}
#: guix-git/doc/guix.texi:5175
#, no-wrap
msgid "guix archive"
msgstr "guix archive"

#. type: cindex
#: guix-git/doc/guix.texi:5176
#, no-wrap
msgid "archive"
msgstr "arquivamento"

#. type: cindex
#: guix-git/doc/guix.texi:5177
#, no-wrap
msgid "exporting files from the store"
msgstr "exportando arquivos do armazém"

#. type: cindex
#: guix-git/doc/guix.texi:5178
#, no-wrap
msgid "importing files to the store"
msgstr "importando arquivos para o armazém"

#. type: Plain text
#: guix-git/doc/guix.texi:5184
msgid "The @command{guix archive} command allows users to @dfn{export} files from the store into a single archive, and to later @dfn{import} them on a machine that runs Guix.  In particular, it allows store files to be transferred from one machine to the store on another machine."
msgstr "O comando @command{guix archive} permite que os usuários @dfn{exportem} arquivos do armazém para um único arquivamento e depois @dfn{importem} eles em uma máquina que execute o Guix. Em particular, ele permite que os arquivos do armazém sejam transferidos de uma máquina para o store em outra máquina."

#. type: quotation
#: guix-git/doc/guix.texi:5188
msgid "If you're looking for a way to produce archives in a format suitable for tools other than Guix, @pxref{Invoking guix pack}."
msgstr "Se você estiver procurando uma maneira de produzir arquivamentos em um formato adequado para outras ferramentas além do Guix, @pxref{Invoking guix pack}."

#. type: cindex
#: guix-git/doc/guix.texi:5190
#, no-wrap
msgid "exporting store items"
msgstr "exportando itens do armazém"

#. type: Plain text
#: guix-git/doc/guix.texi:5192
msgid "To export store files as an archive to standard output, run:"
msgstr "Para exportar arquivos de armazém como um arquivamento para saída padrão, execute:"

#. type: example
#: guix-git/doc/guix.texi:5195
#, no-wrap
msgid "guix archive --export @var{options} @var{specifications}...\n"
msgstr "guix archive --export @var{opções} @var{especificações}...\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5202
msgid "@var{specifications} may be either store file names or package specifications, as for @command{guix package} (@pxref{Invoking guix package}).  For instance, the following command creates an archive containing the @code{gui} output of the @code{git} package and the main output of @code{emacs}:"
msgstr "@var{especificações} pode ser nomes de arquivos de armazém ou especificações de pacotes, como para @command{guix package} (@pxref{Invoking guix package}). Por exemplo, o comando a seguir cria um arquivo contendo a saída @code{gui} do pacote @code{git} e a saída principal de @code{emacs}:"

#. type: example
#: guix-git/doc/guix.texi:5205
#, no-wrap
msgid "guix archive --export git:gui /gnu/store/...-emacs-24.3 > great.nar\n"
msgstr "guix archive --export git:gui /gnu/store/...-emacs-24.3 > great.nar\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5210
msgid "If the specified packages are not built yet, @command{guix archive} automatically builds them.  The build process may be controlled with the common build options (@pxref{Common Build Options})."
msgstr "Se os pacotes especificados ainda não foram construídos, @command{guix archive} os constrói automaticamente. O processo de construção pode ser controlado com as opções comuns de construção (@pxref{Common Build Options})."

#. type: Plain text
#: guix-git/doc/guix.texi:5213
msgid "To transfer the @code{emacs} package to a machine connected over SSH, one would run:"
msgstr "Para transferir o pacote @code{emacs} para uma máquina conectada via SSH, execute:"

#. type: example
#: guix-git/doc/guix.texi:5216
#, no-wrap
msgid "guix archive --export -r emacs | ssh the-machine guix archive --import\n"
msgstr "guix archive --export -r emacs | ssh a-máquina guix archive --import\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5221
msgid "Similarly, a complete user profile may be transferred from one machine to another like this:"
msgstr "Da mesma forma, um perfil de usuário completo pode ser transferido de uma máquina para outra assim:"

#. type: example
#: guix-git/doc/guix.texi:5225
#, no-wrap
msgid ""
"guix archive --export -r $(readlink -f ~/.guix-profile) | \\\n"
"  ssh the-machine guix archive --import\n"
msgstr ""
"guix archive --export -r $(readlink -f ~/.guix-profile) | \\\n"
"  ssh a-máquina guix archive --import\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5235
msgid "However, note that, in both examples, all of @code{emacs} and the profile as well as all of their dependencies are transferred (due to @option{-r}), regardless of what is already available in the store on the target machine.  The @option{--missing} option can help figure out which items are missing from the target store.  The @command{guix copy} command simplifies and optimizes this whole process, so this is probably what you should use in this case (@pxref{Invoking guix copy})."
msgstr "No entanto, observe que, em ambos os exemplos, todos os @code{emacs} e o perfil, bem como todas as suas dependências são transferidos (devido a @option{-r}), independentemente do que já esteja disponível no armazém na máquina de destino. A opção @option{--missing} pode ajudar a descobrir quais itens estão faltando no armazém de destino. O comando @command{guix copy} simplifica e otimiza todo esse processo, então é provavelmente isso que você deve usar neste caso (@pxref{Invoking guix copy})."

#. type: cindex
#: guix-git/doc/guix.texi:5236
#, no-wrap
msgid "nar, archive format"
msgstr "nar, formato de arquivamento"

#. type: cindex
#: guix-git/doc/guix.texi:5237
#, no-wrap
msgid "normalized archive (nar)"
msgstr "arquivamento normalizado (nar)"

#. type: cindex
#: guix-git/doc/guix.texi:5238
#, no-wrap
msgid "nar bundle, archive format"
msgstr "embalagem nar, formato de arquivamento"

#. type: Plain text
#: guix-git/doc/guix.texi:5243
msgid "Each store item is written in the @dfn{normalized archive} or @dfn{nar} format (described below), and the output of @command{guix archive --export} (and input of @command{guix archive --import}) is a @dfn{nar bundle}."
msgstr "Cada item do armazém é escrito no formato @dfn{arquivamento normalizado} ou @dfn{nar} (descrito abaixo), e a saída de @command{guix archive --export} (e entrada de @command{guix archive --import}) é uma @dfn{embalagem nar}."

#. type: Plain text
#: guix-git/doc/guix.texi:5253
msgid "The nar format is comparable in spirit to `tar', but with differences that make it more appropriate for our purposes.  First, rather than recording all Unix metadata for each file, the nar format only mentions the file type (regular, directory, or symbolic link); Unix permissions and owner/group are dismissed.  Second, the order in which directory entries are stored always follows the order of file names according to the C locale collation order.  This makes archive production fully deterministic."
msgstr "O formato nar é comparável em espírito ao `tar', mas com diferenças que o tornam mais apropriado para nossos propósitos. Primeiro, em vez de registrar todos os metadados Unix para cada arquivo, o formato nar menciona apenas o tipo de arquivo (regular, diretório ou ligação simbólica); permissões Unix e proprietário/grupo são descartados. Segundo, a ordem em que as entradas de diretório são armazenadas sempre segue a ordem dos nomes de arquivo de acordo com a ordem de agrupamento de localidade C. Isso torna a produção de arquivo totalmente determinística."

#. type: Plain text
#: guix-git/doc/guix.texi:5257
msgid "That nar bundle format is essentially the concatenation of zero or more nars along with metadata for each store item it contains: its file name, references, corresponding derivation, and a digital signature."
msgstr "O formato da embalagem nar é essencialmente a concatenação de zero ou mais nars junto com metadados para cada item de armazém que ele contém: seu nome de arquivo, referências, derivação correspondente e uma assinatura digital."

#. type: Plain text
#: guix-git/doc/guix.texi:5263
msgid "When exporting, the daemon digitally signs the contents of the archive, and that digital signature is appended.  When importing, the daemon verifies the signature and rejects the import in case of an invalid signature or if the signing key is not authorized."
msgstr "Ao exportar, o daemon assina digitalmente o conteúdo do arquivamento, e essa assinatura digital é anexada. Ao importar, o daemon verifica a assinatura e rejeita a importação em caso de uma assinatura inválida ou se a chave de assinatura não for autorizada."

#. type: Plain text
#: guix-git/doc/guix.texi:5265
msgid "The main options are:"
msgstr "As principais opções são:"

#. type: item
#: guix-git/doc/guix.texi:5267
#, no-wrap
msgid "--export"
msgstr "--export"

#. type: table
#: guix-git/doc/guix.texi:5270
msgid "Export the specified store files or packages (see below).  Write the resulting archive to the standard output."
msgstr "Exporte os arquivos de armazém ou pacotes especificados (veja abaixo). Grave o arquivo resultante na saída padrão."

#. type: table
#: guix-git/doc/guix.texi:5273
msgid "Dependencies are @emph{not} included in the output, unless @option{--recursive} is passed."
msgstr "Dependências @emph{não} são incluídas na saída, a menos que @option{--recursive} seja passado."

#. type: itemx
#: guix-git/doc/guix.texi:5274 guix-git/doc/guix.texi:14284
#: guix-git/doc/guix.texi:14331 guix-git/doc/guix.texi:14467
#: guix-git/doc/guix.texi:14498 guix-git/doc/guix.texi:14530
#: guix-git/doc/guix.texi:14557 guix-git/doc/guix.texi:14645
#: guix-git/doc/guix.texi:14726 guix-git/doc/guix.texi:14767
#: guix-git/doc/guix.texi:14818 guix-git/doc/guix.texi:14843
#: guix-git/doc/guix.texi:14879 guix-git/doc/guix.texi:14912
#: guix-git/doc/guix.texi:14928 guix-git/doc/guix.texi:14948
#: guix-git/doc/guix.texi:14996 guix-git/doc/guix.texi:15032
#: guix-git/doc/guix.texi:15059
#, no-wrap
msgid "-r"
msgstr "-r"

#. type: item
#: guix-git/doc/guix.texi:5275 guix-git/doc/guix.texi:14283
#: guix-git/doc/guix.texi:14330 guix-git/doc/guix.texi:14466
#: guix-git/doc/guix.texi:14497 guix-git/doc/guix.texi:14529
#: guix-git/doc/guix.texi:14556 guix-git/doc/guix.texi:14644
#: guix-git/doc/guix.texi:14725 guix-git/doc/guix.texi:14766
#: guix-git/doc/guix.texi:14817 guix-git/doc/guix.texi:14842
#: guix-git/doc/guix.texi:14878 guix-git/doc/guix.texi:14911
#: guix-git/doc/guix.texi:14927 guix-git/doc/guix.texi:14947
#: guix-git/doc/guix.texi:14995 guix-git/doc/guix.texi:15031
#: guix-git/doc/guix.texi:15058 guix-git/doc/guix.texi:15107
#, no-wrap
msgid "--recursive"
msgstr "--recursive"

#. type: table
#: guix-git/doc/guix.texi:5280
msgid "When combined with @option{--export}, this instructs @command{guix archive} to include dependencies of the given items in the archive.  Thus, the resulting archive is self-contained: it contains the closure of the exported store items."
msgstr "Quando combinado com @option{--export}, isso instrui @command{guix archive} a incluir dependências dos itens fornecidos no arquivo. Assim, o arquivo resultante é autocontido: ele contém o fechamento dos itens exportados do armazém."

#. type: item
#: guix-git/doc/guix.texi:5281
#, no-wrap
msgid "--import"
msgstr "--import"

#. type: table
#: guix-git/doc/guix.texi:5286
msgid "Read an archive from the standard input, and import the files listed therein into the store.  Abort if the archive has an invalid digital signature, or if it is signed by a public key not among the authorized keys (see @option{--authorize} below)."
msgstr "Leia um arquivo da entrada padrão e importe os arquivos listados nele para o armazém. Aborte se o arquivo tiver uma assinatura digital inválida ou se for assinado por uma chave pública que não esteja entre as chaves autorizadas (veja @option{--authorize} abaixo)."

#. type: item
#: guix-git/doc/guix.texi:5287
#, no-wrap
msgid "--missing"
msgstr "--missing"

#. type: table
#: guix-git/doc/guix.texi:5291
msgid "Read a list of store file names from the standard input, one per line, and write on the standard output the subset of these files missing from the store."
msgstr "Leia uma lista de nomes de arquivos do armazém da entrada padrão, um por linha, e escreva na saída padrão o subconjunto desses arquivos que faltam no armazém."

#. type: item
#: guix-git/doc/guix.texi:5292
#, no-wrap
msgid "--generate-key[=@var{parameters}]"
msgstr "--generate-key[=@var{parâmetros}]"

#. type: cindex
#: guix-git/doc/guix.texi:5293
#, no-wrap
msgid "signing, archives"
msgstr "assinatura, arquivos"

#. type: table
#: guix-git/doc/guix.texi:5300
msgid "Generate a new key pair for the daemon.  This is a prerequisite before archives can be exported with @option{--export}.  This operation is usually instantaneous but it can take time if the system's entropy pool needs to be refilled.  On Guix System, @code{guix-service-type} takes care of generating this key pair the first boot."
msgstr "Gere um novo par de chaves para o daemon. Este é um pré-requisito antes que os arquivos possam ser exportados com @option{--export}. Esta operação é geralmente instantânea, mas pode levar algum tempo se o pool de entropia do sistema precisar ser recarregado. No Guix System, @code{guix-service-type} cuida da geração deste par de chaves na primeira inicialização."

#. type: table
#: guix-git/doc/guix.texi:5310
msgid "The generated key pair is typically stored under @file{/etc/guix}, in @file{signing-key.pub} (public key) and @file{signing-key.sec} (private key, which must be kept secret).  When @var{parameters} is omitted, an ECDSA key using the Ed25519 curve is generated, or, for Libgcrypt versions before 1.6.0, it is a 4096-bit RSA key.  Alternatively, @var{parameters} can specify @code{genkey} parameters suitable for Libgcrypt (@pxref{General public-key related Functions, @code{gcry_pk_genkey},, gcrypt, The Libgcrypt Reference Manual})."
msgstr "O par de chaves gerado é normalmente armazenado em @file{/etc/guix}, em @file{signing-key.pub} (chave pública) e @file{signing-key.sec} (chave privada, que deve ser mantida em segredo). Quando @var{parâmetros} é omitido, uma chave ECDSA usando a curva Ed25519 é gerada ou, para versões do Libgcrypt anteriores a 1.6.0, é uma chave RSA de 4096 bits. Como alternativa, @var{parâmetros} pode especificar parâmetros @code{genkey} adequados para Libgcrypt (@pxref{General public-key related Functions, @code{gcry_pk_genkey},, gcrypt, Manual de referência do Libgcrypt})."

#. type: item
#: guix-git/doc/guix.texi:5311
#, no-wrap
msgid "--authorize"
msgstr "--authorize"

#. type: cindex
#: guix-git/doc/guix.texi:5312
#, no-wrap
msgid "authorizing, archives"
msgstr "autorizando, arquivamentos"

#. type: table
#: guix-git/doc/guix.texi:5316
msgid "Authorize imports signed by the public key passed on standard input.  The public key must be in ``s-expression advanced format''---i.e., the same format as the @file{signing-key.pub} file."
msgstr "Autorize importações assinadas pela chave pública passada na entrada padrão. A chave pública deve estar em ``s-expression advanced format''---i.e., o mesmo formato do arquivo @file{signing-key.pub}."

#. type: table
#: guix-git/doc/guix.texi:5323
msgid "The list of authorized keys is kept in the human-editable file @file{/etc/guix/acl}.  The file contains @url{https://people.csail.mit.edu/rivest/Sexp.txt, ``advanced-format s-expressions''} and is structured as an access-control list in the @url{https://theworld.com/~cme/spki.txt, Simple Public-Key Infrastructure (SPKI)}."
msgstr "A lista de chaves autorizadas é mantida no arquivo editável por humanos @file{/etc/guix/acl}. O arquivo contém @url{https://people.csail.mit.edu/rivest/Sexp.txt, ``advanced-format s-expressions''} e é estruturado como uma lista de controle de acesso no @url{https://theworld.com/~cme/spki.txt, Simple Public-Key Infrastructure (SPKI)}."

#. type: item
#: guix-git/doc/guix.texi:5324
#, no-wrap
msgid "--extract=@var{directory}"
msgstr "--extract=@var{diretório}"

#. type: itemx
#: guix-git/doc/guix.texi:5325
#, no-wrap
msgid "-x @var{directory}"
msgstr "-x @var{diretório}"

#. type: table
#: guix-git/doc/guix.texi:5329
msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and extract it to @var{directory}.  This is a low-level operation needed in only very narrow use cases; see below."
msgstr "Leia um arquivo de item único conforme servido por servidores substitutos (@pxref{Substitutes}) e extraia-o para @var{diretório}. Esta é uma operação de baixo nível necessária apenas em casos de uso muito restritos; veja abaixo."

#. type: table
#: guix-git/doc/guix.texi:5332
msgid "For example, the following command extracts the substitute for Emacs served by @code{@value{SUBSTITUTE-SERVER-1}} to @file{/tmp/emacs}:"
msgstr "Por exemplo, o comando a seguir extrai o substituto para o Emacs servido por @code{@value{SUBSTITUTE-SERVER-1}} para @file{/tmp/emacs}:"

#. type: example
#: guix-git/doc/guix.texi:5337
#, no-wrap
msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/gzip/@dots{}-emacs-24.5 \\\n"
"  | gunzip | guix archive -x /tmp/emacs\n"
msgstr ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/gzip/@dots{}-emacs-24.5 \\\n"
"  | gunzip | guix archive -x /tmp/emacs\n"

#. type: table
#: guix-git/doc/guix.texi:5344
msgid "Single-item archives are different from multiple-item archives produced by @command{guix archive --export}; they contain a single store item, and they do @emph{not} embed a signature.  Thus this operation does @emph{no} signature verification and its output should be considered unsafe."
msgstr "Arquivamentos de item único são diferentes de arquivamentos de itens múltiplos produzidos por @command{guix archive --export}; eles contêm um único item de armazém e não @emph{incorporam} uma assinatura. Portanto, essa operação não faz @emph{nenhuma} verificação de assinatura e sua saída deve ser considerada insegura."

#. type: table
#: guix-git/doc/guix.texi:5348
msgid "The primary purpose of this operation is to facilitate inspection of archive contents coming from possibly untrusted substitute servers (@pxref{Invoking guix challenge})."
msgstr "O objetivo principal desta operação é facilitar a inspeção de conteúdos de arquivamento provenientes de servidores substitutos possivelmente não confiáveis (@pxref{Invoking guix challenge})."

#. type: item
#: guix-git/doc/guix.texi:5349
#, no-wrap
msgid "--list"
msgstr "--list"

#. type: itemx
#: guix-git/doc/guix.texi:5350 guix-git/doc/guix.texi:14713
#: guix-git/doc/guix.texi:14760
#, no-wrap
msgid "-t"
msgstr "-t"

#. type: table
#: guix-git/doc/guix.texi:5354
msgid "Read a single-item archive as served by substitute servers (@pxref{Substitutes}) and print the list of files it contains, as in this example:"
msgstr "Leia um arquivamento de item único servido por servidores substitutos (@pxref{Substitutes}) e exiba a lista de arquivos que ele contém, como neste exemplo:"

#. type: example
#: guix-git/doc/guix.texi:5359
#, no-wrap
msgid ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-emacs-26.3 \\\n"
"  | lzip -d | guix archive -t\n"
msgstr ""
"$ wget -O - \\\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-emacs-26.3 \\\n"
"  | lzip -d | guix archive -t\n"

#. type: cindex
#: guix-git/doc/guix.texi:5370
#, no-wrap
msgid "@command{guix pull}, configuration file"
msgstr "@command{guix pull}, arquivo de configuração"

#. type: cindex
#: guix-git/doc/guix.texi:5371
#, no-wrap
msgid "configuration of @command{guix pull}"
msgstr "configuração de @command{guix pull}"

#. type: Plain text
#: guix-git/doc/guix.texi:5382
msgid "Guix and its package collection are updated by running @command{guix pull}.  By default @command{guix pull} downloads and deploys Guix itself from the official GNU@tie{}Guix repository.  This can be customized by providing a file specifying the set of @dfn{channels} to pull from (@pxref{Invoking guix pull}).  A channel specifies the URL and branch of a Git repository to be deployed, and @command{guix pull} can be instructed to pull from one or more channels.  In other words, channels can be used to @emph{customize} and to @emph{extend} Guix, as we will see below.  Guix is able to take into account security concerns and deal with authenticated updates."
msgstr "Guix e sua coleção de pacotes são atualizados executando @command{guix pull}. Por padrão, @command{guix pull} baixa e implementa o próprio Guix do repositório oficial GNU@tie{}Guix. Isso pode ser personalizado fornecendo um arquivo especificando o conjunto de @dfn{canais} para extrair de (@pxref{Invoking guix pull}). Um canal especifica a URL e a ramificação de um repositório Git a ser implantado, e @command{guix pull} pode ser instruído a extrair de um ou mais canais. Em outras palavras, os canais podem ser usados para @emph{personalizar} e @emph{estender} o Guix, como veremos abaixo. O Guix é capaz de levar em conta preocupações de segurança e lidar com atualizações autenticadas."

#. type: cindex
#: guix-git/doc/guix.texi:5401
#, no-wrap
msgid "extending the package collection (channels)"
msgstr "estendendo a coleção de pacotes (canais)"

#. type: cindex
#: guix-git/doc/guix.texi:5402
#, no-wrap
msgid "variant packages (channels)"
msgstr "pacotes variantes (canais)"

#. type: Plain text
#: guix-git/doc/guix.texi:5406
msgid "You can specify @emph{additional channels} to pull from.  To use a channel, write @code{~/.config/guix/channels.scm} to instruct @command{guix pull} to pull from it @emph{in addition} to the default Guix channel(s):"
msgstr "Você pode especificar @emph{canais adicionais} para puxar. Para usar um canal, escreva @code{~/.config/guix/channels.scm} para instruir @command{guix pull} para puxar dele @emph{além} do(s) canal(ais) Guix padrão:"

#. type: vindex
#: guix-git/doc/guix.texi:5407
#, no-wrap
msgid "%default-channels"
msgstr "%default-channels"

#. type: lisp
#: guix-git/doc/guix.texi:5414
#, no-wrap
msgid ""
";; Add variant packages to those Guix provides.\n"
"(cons (channel\n"
"        (name 'variant-packages)\n"
"        (url \"https://example.org/variant-packages.git\"))\n"
"      %default-channels)\n"
msgstr ""
";; Adicione pacotes variantes aos fornecidos pelo Guix.\n"
"(cons (channel\n"
"        (name 'variant-packages)\n"
"        (url \"https://example.org/variant-packages.git\"))\n"
"      %default-channels)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5424
msgid "Note that the snippet above is (as always!)@: Scheme code; we use @code{cons} to add a channel the list of channels that the variable @code{%default-channels} is bound to (@pxref{Pairs, @code{cons} and lists,, guile, GNU Guile Reference Manual}).  With this file in place, @command{guix pull} builds not only Guix but also the package modules from your own repository.  The result in @file{~/.config/guix/current} is the union of Guix with your own package modules:"
msgstr "Note que o snippet acima é (como sempre!)@: código do Scheme; usamos @code{cons} para adicionar um canal à lista de canais aos quais a variável @code{%default-channels} está vinculada (@pxref{Pairs, @code{cons} and lists,, guile, GNU Guile Reference Manual}). Com esse arquivo no lugar, @command{guix pull} compila não apenas o Guix, mas também os módulos do pacote do seu próprio repositório. O resultado em @file{~/.config/guix/current} é a união do Guix com seus próprios módulos do pacote:"

#. type: example
#: guix-git/doc/guix.texi:5436
#, no-wrap
msgid ""
"$ guix describe\n"
"Generation 19\tAug 27 2018 16:20:48\n"
"  guix d894ab8\n"
"    repository URL: https://git.guix.gnu.org/guix.git\n"
"    branch: master\n"
"    commit: d894ab8e9bfabcefa6c49d9ba2e834dd5a73a300\n"
"  variant-packages dd3df5e\n"
"    repository URL: https://example.org/variant-packages.git\n"
"    branch: master\n"
"    commit: dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\n"
msgstr ""
"$ guix describe\n"
"Geração 19\t27 ago 2018 16:20:48\n"
"  guix d894ab8\n"
"    URL do repositório: https://git.guix.gnu.org/guix.git\n"
"    ramo: master\n"
"    commit: d894ab8e9bfabcefa6c49d9ba2e834dd5a73a300\n"
"  variant-packages dd3df5e\n"
"    URL do repositório: https://example.org/variant-packages.git\n"
"    ramo: master\n"
"    commit: dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5443
msgid "The output of @command{guix describe} above shows that we're now running Generation@tie{}19 and that it includes both Guix and packages from the @code{variant-packages} channel (@pxref{Invoking guix describe})."
msgstr "A saída do @command{guix describe} acima mostra que agora estamos executando o geração@tie{}19 e que ele inclui o Guix e os pacotes do canal @code{variant-packages} (@pxref{Invoking guix describe})."

#. type: Plain text
#: guix-git/doc/guix.texi:5452
msgid "The channel called @code{guix} specifies where Guix itself---its command-line tools as well as its package collection---should be downloaded.  For instance, suppose you want to update from another copy of the Guix repository at @code{example.org}, and specifically the @code{super-hacks} branch, you can write in @code{~/.config/guix/channels.scm} this specification:"
msgstr "O canal chamado @code{guix} especifica onde o próprio Guix---suas ferramentas de linha de comando, bem como sua coleção de pacotes---deve ser baixado. Por exemplo, suponha que você queira atualizar de outra cópia do repositório Guix em @code{example.org}, e especificamente o branch @code{super-hacks}, você pode escrever em @code{~/.config/guix/channels.scm} esta especificação:"

#. type: lisp
#: guix-git/doc/guix.texi:5459
#, no-wrap
msgid ""
";; Tell 'guix pull' to use another repo.\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://example.org/another-guix.git\")\n"
"        (branch \"super-hacks\")))\n"
msgstr ""
";; Diga ao 'guix pull' para usar outro repositório.\n"
"(list (channel\n"
"        (name 'guix)\n"
"        (url \"https://example.org/another-guix.git\")\n"
"        (branch \"super-hacks\")))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5465
msgid "From there on, @command{guix pull} will fetch code from the @code{super-hacks} branch of the repository at @code{example.org}.  The authentication concern is addressed below (@pxref{Channel Authentication})."
msgstr "A partir daí, @command{guix pull} buscará o código do branch @code{super-hacks} do repositório em @code{example.org}. A preocupação com a autenticação é abordada abaixo (@pxref{Channel Authentication})."

#. type: Plain text
#: guix-git/doc/guix.texi:5475
msgid "Note that you can specify a local directory on the @code{url} field above if the channel that you intend to use resides on a local file system.  However, in this case @command{guix} checks said directory for ownership before any further processing.  This means that if the user is not the directory owner, but wants to use it as their default, they will then need to set it as a safe directory in their global git configuration file.  Otherwise, @command{guix} will refuse to even read it.  Supposing your system-wide local directory is at @code{/src/guix.git}, you would then create a git configuration file at @code{~/.gitconfig} with the following contents:"
msgstr "Note que você pode especificar um diretório local no campo @code{url} acima se o canal que você pretende usar residir em um sistema de arquivos local. No entanto, neste caso, @command{guix} verifica o diretório em busca de propriedade antes de qualquer processamento posterior. Isso significa que se o usuário não for o proprietário do diretório, mas quiser usá-lo como padrão, ele precisará defini-lo como um diretório seguro em seu arquivo de configuração global do git. Caso contrário, @command{guix} se recusará até mesmo a lê-lo. Supondo que seu diretório local de todo o sistema esteja em @code{/src/guix.git}, você criaria um arquivo de configuração do git em @code{~/.gitconfig} com o seguinte conteúdo:"

#. type: example
#: guix-git/doc/guix.texi:5479
#, no-wrap
msgid ""
"[safe]\n"
"        directory = /src/guix.git\n"
msgstr ""
"[safe]\n"
"        directory = /src/guix.git\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5484
msgid "This also applies to the root user unless when called with @command{sudo} by the directory owner."
msgstr "Isso também se aplica ao usuário root, a menos que seja chamado com @command{sudo} pelo proprietário do diretório."

#. type: Plain text
#: guix-git/doc/guix.texi:5496
msgid "The @command{guix describe} command shows precisely which commits were used to build the instance of Guix we're using (@pxref{Invoking guix describe}).  We can replicate this instance on another machine or at a different point in time by providing a channel specification ``pinned'' to these commits that looks like this:"
msgstr "O comando @command{guix describe} mostra precisamente quais commits foram usados para construir a instância do Guix que estamos usando (@pxref{Invoking guix describe}). Podemos replicar essa instância em outra máquina ou em um ponto diferente no tempo fornecendo uma especificação de canal ``fixada'' a esses commits que se parece com isso:"

#. type: lisp
#: guix-git/doc/guix.texi:5507
#, no-wrap
msgid ""
";; Deploy specific commits of my channels of interest.\n"
"(list (channel\n"
"       (name 'guix)\n"
"       (url \"https://git.guix.gnu.org/guix.git\")\n"
"       (commit \"6298c3ffd9654d3231a6f25390b056483e8f407c\"))\n"
"      (channel\n"
"       (name 'variant-packages)\n"
"       (url \"https://example.org/variant-packages.git\")\n"
"       (commit \"dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\")))\n"
msgstr ""
";; Implantar commits específicos dos meus canais de interesse.\n"
"(list (channel\n"
"       (name 'guix)\n"
"       (url \"https://git.guix.gnu.org/guix.git\")\n"
"       (commit \"6298c3ffd9654d3231a6f25390b056483e8f407c\"))\n"
"      (channel\n"
"       (name 'variant-packages)\n"
"       (url \"https://example.org/variant-packages.git\")\n"
"       (commit \"dd3df5e2c8818760a8fc0bd699e55d3b69fef2bb\")))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5512
msgid "To obtain this pinned channel specification, the easiest way is to run @command{guix describe} and to save its output in the @code{channels} format in a file, like so:"
msgstr "Para obter essa especificação de canal fixado, a maneira mais fácil é executar @command{guix describe} e salvar sua saída no formato @code{channels} em um arquivo, assim:"

#. type: example
#: guix-git/doc/guix.texi:5515
#, no-wrap
msgid "guix describe -f channels > channels.scm\n"
msgstr "guix describe -f channels > channels.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5521
msgid "The resulting @file{channels.scm} file can be passed to the @option{-C} option of @command{guix pull} (@pxref{Invoking guix pull}) or @command{guix time-machine} (@pxref{Invoking guix time-machine}), as in this example:"
msgstr "O arquivo @file{channels.scm} resultante pode ser passado para a opção @option{-C} de @command{guix pull} (@pxref{Invoking guix pull}) ou @command{guix time-machine} (@pxref{Invoking guix time-machine}), como neste exemplo:"

#. type: example
#: guix-git/doc/guix.texi:5524
#, no-wrap
msgid "guix time-machine -C channels.scm -- shell python -- python3\n"
msgstr "guix time-machine -C channels.scm -- shell python -- python3\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5530
msgid "Given the @file{channels.scm} file, the command above will always fetch the @emph{exact same Guix instance}, then use that instance to run the exact same Python (@pxref{Invoking guix shell}).  On any machine, at any time, it ends up running the exact same binaries, bit for bit."
msgstr "Dado o arquivo @file{channels.scm}, o comando acima sempre buscará a @emph{exatamente a mesma instância Guix}, então usará essa instância para executar exatamente o mesmo Python (@pxref{Invoking guix shell}). Em qualquer máquina, a qualquer momento, ele acaba executando exatamente os mesmos binários, bit por bit."

#. type: cindex
#: guix-git/doc/guix.texi:5531
#, no-wrap
msgid "lock files"
msgstr "arquivo de bloqueio"

#. type: Plain text
#: guix-git/doc/guix.texi:5539
msgid "Pinned channels address a problem similar to ``lock files'' as implemented by some deployment tools---they let you pin and reproduce a set of packages.  In the case of Guix though, you are effectively pinning the entire package set as defined at the given channel commits; in fact, you are pinning all of Guix, including its core modules and command-line tools.  You're also getting strong guarantees that you are, indeed, obtaining the exact same software."
msgstr "Os canais fixados abordam um problema semelhante a ``arquivos de bloqueio'' conforme implementado por algumas ferramentas de implantação --- eles permitem que você fixe e reproduza um conjunto de pacotes. No caso do Guix, no entanto, você está efetivamente fixando o conjunto de pacotes inteiro conforme definido nos commits de canal fornecidos; na verdade, você está fixando todo o Guix, incluindo seus módulos principais e ferramentas de linha de comando. Você também está obtendo fortes garantias de que está, de fato, obtendo exatamente o mesmo software."

#. type: Plain text
#: guix-git/doc/guix.texi:5544
msgid "This gives you super powers, allowing you to track the provenance of binary artifacts with very fine grain, and to reproduce software environments at will---some sort of ``meta reproducibility'' capabilities, if you will.  @xref{Inferiors}, for another way to take advantage of these super powers."
msgstr "Isso lhe dá superpoderes, permitindo que você rastreie a procedência de artefatos binários com granularidade muito fina e reproduza ambientes de software à vontade --- algum tipo de capacidade de ``meta reprodutibilidade'', se preferir. @xref{Inferiors}, para outra maneira de aproveitar esses superpoderes."

#. type: cindex
#: guix-git/doc/guix.texi:5548
#, fuzzy, no-wrap
#| msgid "System Installation"
msgid "system-wide Guix, customization"
msgstr "Instalação do sistema"

#. type: cindex
#: guix-git/doc/guix.texi:5549
#, no-wrap
msgid "channels, for the default Guix"
msgstr "canais, para o Guix padrão"

#. type: Plain text
#: guix-git/doc/guix.texi:5555
msgid "If you're running Guix System or building system images with it, maybe you will want to customize the system-wide @command{guix} it provides---specifically, @file{/run/current-system/profile/bin/guix}.  For example, you might want to provide additional channels or to pin its revision."
msgstr "Se você estiver executando o Guix System ou construindo imagens de sistema com ele, talvez você queira personalizar o @command{guix} de todo o sistema que ele fornece---especificamente, @file{/run/current-system/profile/bin/guix}. Por exemplo, você pode querer fornecer canais adicionais ou fixar sua revisão."

#. type: Plain text
#: guix-git/doc/guix.texi:5559
msgid "This can be done using the @code{guix-for-channels} procedure, which returns a package for the given channels, and using it as part of your operating system configuration, as in this example:"
msgstr "Isso pode ser feito usando o procedimento @code{guix-for-channels}, que retorna um pacote para os canais fornecidos e o usa como parte da configuração do seu sistema operacional, como neste exemplo:"

#. type: lisp
#: guix-git/doc/guix.texi:5563
#, no-wrap
msgid ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"
msgstr ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5573
#, no-wrap
msgid ""
"(define my-channels\n"
"  ;; Channels that should be available to\n"
"  ;; /run/current-system/profile/bin/guix.\n"
"  (append\n"
"   (list (channel\n"
"          (name 'guix-science)\n"
"          (url \"https://codeberg.org/guix-science/guix-science\")\n"
"          (branch \"master\")))\n"
"   %default-channels))\n"
"\n"
msgstr ""
"(define my-channels\n"
"  ;; Canais que devem estar disponíveis para\n"
"  ;; /run/current-system/profile/bin/guix.\n"
"  (append\n"
"   (list (channel\n"
"          (name 'guix-science)\n"
"          (url \"https://codeberg.org/guix-science/guix-science\")\n"
"          (branch \"master\")))\n"
"   %default-channels))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5584
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Change the package used by 'guix-service-type'.\n"
"    (modify-services %base-services\n"
"      (guix-service-type\n"
"       config => (guix-configuration\n"
"                  (inherit config)\n"
"                  (channels my-channels)\n"
"                  (guix (guix-for-channels my-channels)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5592
msgid "The resulting operating system will have both the @code{guix} and the @code{guix-science} channels visible by default.  The @code{channels} field of @code{guix-configuration} above further ensures that @file{/etc/guix/channels.scm}, which is used by @command{guix pull}, specifies the same set of channels (@pxref{guix-configuration-channels, @code{channels} field of @code{guix-configuration}})."
msgstr "O sistema operacional resultante terá os canais @code{guix} e @code{guix-science} visíveis por padrão. O campo @code{channels} de @code{guix-configuration} acima garante ainda mais que @file{/etc/guix/channels.scm}, que é usado por @command{guix pull}, especifica o mesmo conjunto de canais (@pxref{guix-configuration-channels, campo @code{channels} de @code{guix-configuration}})."

#. type: Plain text
#: guix-git/doc/guix.texi:5595
msgid "The @code{(gnu packages package-management)} module exports the @code{guix-for-channels} procedure, described below."
msgstr "O módulo @code{(gnu packages package-management)} exporta o procedimento @code{guix-for-channels}, descrito abaixo."

#. type: deffn
#: guix-git/doc/guix.texi:5596
#, no-wrap
msgid "{Procedure} guix-for-channels @var{channels}"
msgstr "{Procedimento} guix-for-channels @var{canais}"

#. type: deffn
#: guix-git/doc/guix.texi:5598
msgid "Return a package corresponding to @var{channels}."
msgstr "Retorna um pacote correspondente a @var{canais}."

#. type: deffn
#: guix-git/doc/guix.texi:5602
msgid "The result is a ``regular'' package, which can be used in @code{guix-configuration} as shown above or in any other place that expects a package."
msgstr "O resultado é um pacote ``regular'', que pode ser usado em @code{guix-configuration} como mostrado acima ou em qualquer outro lugar que espere um pacote."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:5608
msgid "channel-authentication"
msgstr "channel-authentication"

#. type: Plain text
#: guix-git/doc/guix.texi:5614
msgid "The @command{guix pull} and @command{guix time-machine} commands @dfn{authenticate} the code retrieved from channels: they make sure each commit that is fetched is signed by an authorized developer.  The goal is to protect from unauthorized modifications to the channel that would lead users to run malicious code."
msgstr "Os comandos @command{guix pull} e @command{guix time-machine} @dfn{autenticam} o código recuperado dos canais: eles garantem que cada commit que é buscado seja assinado por um desenvolvedor autorizado. O objetivo é proteger contra modificações não autorizadas no canal que levariam os usuários a executar código malicioso."

#. type: Plain text
#: guix-git/doc/guix.texi:5619
msgid "As a user, you must provide a @dfn{channel introduction} in your channels file so that Guix knows how to authenticate its first commit.  A channel specification, including its introduction, looks something along these lines:"
msgstr "Como usuário, você deve fornecer uma @dfn{introdução de canal} no seu arquivo de canais para que o Guix saiba como autenticar seu primeiro commit. Uma especificação de canal, incluindo sua introdução, parece algo como estas linhas:"

#. type: lisp
#: guix-git/doc/guix.texi:5629
#, no-wrap
msgid ""
"(channel\n"
"  (name 'some-channel)\n"
"  (url \"https://example.org/some-channel.git\")\n"
"  (introduction\n"
"   (make-channel-introduction\n"
"    \"6f0d8cc0d88abb59c324b2990bfee2876016bb86\"\n"
"    (openpgp-fingerprint\n"
"     \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
msgstr ""
"(channel\n"
"  (name 'algum-canal)\n"
"  (url \"https://example.org/algum-canal.git\")\n"
"  (introduction\n"
"   (make-channel-introduction\n"
"    \"6f0d8cc0d88abb59c324b2990bfee2876016bb86\"\n"
"    (openpgp-fingerprint\n"
"     \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5635
msgid "The specification above shows the name and URL of the channel.  The call to @code{make-channel-introduction} above specifies that authentication of this channel starts at commit @code{6f0d8cc@dots{}}, which is signed by the OpenPGP key with fingerprint @code{CABB A931@dots{}}."
msgstr "A especificação acima mostra o nome e a URL do canal. A chamada para @code{make-channel-introduction} acima especifica que a autenticação deste canal começa no commit @code{6f0d8cc@dots{}}, que é assinado pela chave OpenPGP com impressão digital @code{CABB A931@dots{}}."

#. type: Plain text
#: guix-git/doc/guix.texi:5641
msgid "For the main channel, called @code{guix}, you automatically get that information from your Guix installation.  For other channels, include the channel introduction provided by the channel authors in your @file{channels.scm} file.  Make sure you retrieve the channel introduction from a trusted source since that is the root of your trust."
msgstr "Para o canal principal, chamado @code{guix}, você obtém automaticamente essas informações da sua instalação Guix. Para outros canais, inclua a introdução do canal fornecida pelos autores do canal no seu arquivo @file{channels.scm}. Certifique-se de recuperar a introdução do canal de uma fonte confiável, pois essa é a raiz da sua confiança."

#. type: Plain text
#: guix-git/doc/guix.texi:5643
msgid "If you're curious about the authentication mechanics, read on!"
msgstr "Se você está curioso sobre a mecânica de autenticação, continue lendo!"

#. type: Plain text
#: guix-git/doc/guix.texi:5654
msgid "When running @command{guix pull}, Guix will first compile the definitions of every available package.  This is an expensive operation for which substitutes (@pxref{Substitutes}) may be available.  The following snippet in @file{channels.scm} will ensure that @command{guix pull} uses the latest commit with available substitutes for the package definitions: this is done by querying the continuous integration server at @url{https://ci.guix.gnu.org}."
msgstr "Ao executar @command{guix pull}, o Guix primeiro compilará as definições de cada pacote disponível. Esta é uma operação cara para a qual substitutos (@pxref{Substitutes}) podem estar disponíveis. O seguinte snippet em @file{channels.scm} garantirá que o @command{guix pull} use o commit mais recente com substitutos disponíveis para as definições de pacote: isso é feito consultando o servidor de integração contínua em @url{https://ci.guix.gnu.org}."

#. type: lisp
#: guix-git/doc/guix.texi:5657
#, no-wrap
msgid ""
"(use-modules (guix ci))\n"
"\n"
msgstr ""
"(use-modules (guix ci))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5661
#, no-wrap
msgid ""
"(list (channel-with-substitutes-available\n"
"       %default-guix-channel\n"
"       \"https://ci.guix.gnu.org\"))\n"
msgstr ""
"(list (channel-with-substitutes-available\n"
"       %default-guix-channel\n"
"       \"https://ci.guix.gnu.org\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5668
msgid "Note that this does not mean that all the packages that you will install after running @command{guix pull} will have available substitutes.  It only ensures that @command{guix pull} will not try to compile package definitions.  This is particularly useful when using machines with limited resources."
msgstr "Note que isso não significa que todos os pacotes que você instalará após executar @command{guix pull} terão substitutos disponíveis. Isso apenas garante que @command{guix pull} não tentará compilar definições de pacotes. Isso é particularmente útil ao usar máquinas com recursos limitados."

#. type: cindex
#: guix-git/doc/guix.texi:5672
#, no-wrap
msgid "personal packages (channels)"
msgstr "pacotes pessoais (canais)"

#. type: cindex
#: guix-git/doc/guix.texi:5673
#, no-wrap
msgid "channels, for personal packages"
msgstr "canais, para pacotes pessoais"

#. type: Plain text
#: guix-git/doc/guix.texi:5679
msgid "Let's say you have a bunch of custom package variants or personal packages that you think would make little sense to contribute to the Guix project, but would like to have these packages transparently available to you at the command line.  By creating a @dfn{channel}, you can use and publish such a package collection.  This involves the following steps:"
msgstr "Digamos que você tenha um monte de variantes de pacotes personalizados ou pacotes pessoais que você acha que faria pouco sentido contribuir para o projeto Guix, mas gostaria de ter esses pacotes disponíveis de forma transparente para você na linha de comando. Ao criar um @dfn{canal}, você pode usar e publicar tal coleção de pacotes. Isso envolve as seguintes etapas:"

#. type: enumerate
#: guix-git/doc/guix.texi:5684
msgid "A channel lives in a Git repository so the first step, when creating a channel, is to create its repository:"
msgstr "Um canal fica em um repositório Git, então o primeiro passo, ao criar um canal, é criar seu repositório:"

#. type: example
#: guix-git/doc/guix.texi:5689
#, no-wrap
msgid ""
"mkdir my-channel\n"
"cd my-channel\n"
"git init\n"
msgstr ""
"mkdir meu-canal\n"
"cd meu-canal\n"
"git init\n"

#. type: enumerate
#: guix-git/doc/guix.texi:5697
msgid "The next step is to create files containing package modules (@pxref{Package Modules}), each of which will contain one or more package definitions (@pxref{Defining Packages}).  A channel can provide things other than packages, such as build systems or services; we're using packages as it's the most common use case."
msgstr "O próximo passo é criar arquivos contendo módulos de pacote (@pxref{Package Modules}), cada um dos quais conterá uma ou mais definições de pacote (@pxref{Defining Packages}). Um canal pode fornecer coisas além de pacotes, como sistemas de compilação ou serviços; estamos usando pacotes, pois é o caso de uso mais comum."

#. type: enumerate
#: guix-git/doc/guix.texi:5702
msgid "For example, Alice might want to provide a module called @code{(alice packages greetings)} that will provide her favorite ``hello world'' implementations.  To do that Alice will create a directory corresponding to that module name."
msgstr "Por exemplo, Alice pode querer fornecer um módulo chamado @code{(alice packages greetings)} que fornecerá suas implementações favoritas de ``hello world''. Para fazer isso, Alice criará um diretório correspondente ao nome desse módulo."

#. type: example
#: guix-git/doc/guix.texi:5707
#, no-wrap
msgid ""
"mkdir -p alice/packages\n"
"$EDITOR alice/packages/greetings.scm\n"
"git add alice/packages/greetings.scm\n"
msgstr ""
"mkdir -p alice/packages\n"
"$EDITOR alice/packages/greetings.scm\n"
"git add alice/packages/greetings.scm\n"

#. type: enumerate
#: guix-git/doc/guix.texi:5713
msgid "You can name your package modules however you like; the main constraint to keep in mind is to avoid name clashes with other package collections, which is why our hypothetical Alice wisely chose the @code{(alice packages @dots{})} name space."
msgstr "Você pode nomear seus módulos de pacote como quiser; a principal restrição a ter em mente é evitar conflitos de nomes com outras coleções de pacotes, e é por isso que nossa hipotética Alice sabiamente escolheu o namespace @code{(alice packages @dots{})}."

#. type: enumerate
#: guix-git/doc/guix.texi:5717
msgid "Note that you can also place modules in a sub-directory of the repository; @pxref{Package Modules in a Sub-directory}, for more info on that."
msgstr "Observe que você também pode colocar módulos em um subdiretório do repositório; @pxref{Package Modules in a Sub-directory}, para mais informações sobre isso."

#. type: enumerate
#: guix-git/doc/guix.texi:5724
msgid "With this first module in place, the next step is to test the packages it provides.  This can be done with @command{guix build}, which needs to be told to look for modules in the Git checkout.  For example, assuming @code{(alice packages greetings)} provides a package called @code{hi-from-alice}, Alice will run this command from the Git checkout:"
msgstr "Com este primeiro módulo em funcionamento, o próximo passo é testar os pacotes que ele fornece. Isso pode ser feito com @command{guix build}, que precisa ser informado para procurar módulos no checkout do Git. Por exemplo, supondo que @code{(alice packages greetings)} forneça um pacote chamado @code{hi-from-alice}, Alice executará este comando do checkout do Git:"

#. type: example
#: guix-git/doc/guix.texi:5727
#, no-wrap
msgid "guix build -L. hi-from-alice\n"
msgstr "guix build -L. hi-from-alice\n"

#. type: enumerate
#: guix-git/doc/guix.texi:5732
msgid "... where @code{-L.} adds the current directory to Guile's load path (@pxref{Load Paths,,, guile, GNU Guile Reference Manual})."
msgstr "... onde @code{-L.} adiciona o diretório atual ao caminho de carregamento do Guile (@pxref{Load Paths,,, guile, Manual de referência do GNU Guile})."

#. type: enumerate
#: guix-git/doc/guix.texi:5736
msgid "It might take Alice a few iterations to obtain satisfying package definitions.  Eventually Alice will commit this file:"
msgstr "Pode levar algumas iterações para Alice obter definições de pacote satisfatórias. Eventualmente, Alice fará commit deste arquivo:"

#. type: example
#: guix-git/doc/guix.texi:5739
#, no-wrap
msgid "git commit\n"
msgstr "git commit\n"

#. type: enumerate
#: guix-git/doc/guix.texi:5745
msgid "As a channel author, consider bundling authentication material with your channel so that users can authenticate it.  @xref{Channel Authentication}, and @ref{Specifying Channel Authorizations}, for info on how to do it."
msgstr "Como autor de um canal, considere agrupar material de autenticação com seu canal para que os usuários possam autenticá-lo. @xref{Channel Authentication} e @ref{Specifying Channel Authorizations} para obter informações sobre como fazer isso."

#. type: enumerate
#: guix-git/doc/guix.texi:5750
msgid "To use Alice's channel, anyone can now add it to their channel file (@pxref{Specifying Additional Channels}) and run @command{guix pull} (@pxref{Invoking guix pull}):"
msgstr "Para usar o canal de Alice, qualquer pessoa pode adicioná-lo ao seu arquivo de canal (@pxref{Specifying Additional Channels}) e executar @command{guix pull} (@pxref{Invoking guix pull}):"

#. type: example
#: guix-git/doc/guix.texi:5754
#, no-wrap
msgid ""
"$EDITOR ~/.config/guix/channels.scm\n"
"guix pull\n"
msgstr ""
"$EDITOR ~/.config/guix/channels.scm\n"
"guix pull\n"

#. type: enumerate
#: guix-git/doc/guix.texi:5760
msgid "Guix will now behave as if the root directory of that channel's Git repository had been permanently added to the Guile load path.  In this example, @code{(alice packages greetings)} will automatically be found by the @command{guix} command."
msgstr "Guix agora se comportará como se o diretório raiz do repositório Git daquele canal tivesse sido adicionado permanentemente ao caminho de carregamento do Guile. Neste exemplo, @code{(alice packages greetings)} será encontrado automaticamente pelo comando @command{guix}."

#. type: Plain text
#: guix-git/doc/guix.texi:5763
msgid "Voilà!"
msgstr "Voilà!"

#. type: quotation
#: guix-git/doc/guix.texi:5770
msgid "Before you publish your channel, we would like to share a few words of caution:"
msgstr "Antes de publicar seu canal, gostaríamos de compartilhar algumas palavras de cautela:"

#. type: itemize
#: guix-git/doc/guix.texi:5778
msgid "Before publishing a channel, please consider contributing your package definitions to Guix proper (@pxref{Contributing}).  Guix as a project is open to free software of all sorts, and packages in Guix proper are readily available to all Guix users and benefit from the project's quality assurance process."
msgstr "Antes de publicar um canal, considere contribuir com suas definições de pacote para o Guix propriamente dito (@pxref{Contributing}). O Guix como um projeto é aberto a software livre de todos os tipos, e os pacotes no Guix propriamente dito estão prontamente disponíveis para todos os usuários do Guix e se beneficiam do processo de garantia de qualidade do projeto."

#. type: itemize
#: guix-git/doc/guix.texi:5785
msgid "Package modules and package definitions are Scheme code that uses various programming interfaces (APIs).  We, Guix developers, never change APIs gratuitously, but we do @emph{not} commit to freezing APIs either.  When you maintain package definitions outside Guix, we consider that @emph{the compatibility burden is on you}."
msgstr "Módulos de pacote e definições de pacote são códigos Scheme que usam várias interfaces de programação (APIs). Nós, desenvolvedores Guix, nunca mudamos APIs gratuitamente, mas também @emph{não} nos comprometemos a congelar APIs. Quando você mantém definições de pacote fora do Guix, consideramos que @emph{o fardo da compatibilidade é seu}."

#. type: itemize
#: guix-git/doc/guix.texi:5789
msgid "Corollary: if you're using an external channel and that channel breaks, please @emph{report the issue to the channel authors}, not to the Guix project."
msgstr "Corolário: se você estiver usando um canal externo e esse canal quebrar, @emph{reporte o problema aos autores do canal}, não ao projeto Guix."

#. type: quotation
#: guix-git/doc/guix.texi:5796
msgid "You've been warned! Having said this, we believe external channels are a practical way to exert your freedom to augment Guix' package collection and to share your improvements, which are basic tenets of @uref{https://www.gnu.org/philosophy/free-sw.html, free software}.  Please email us at @email{guix-devel@@gnu.org} if you'd like to discuss this."
msgstr "Você foi avisado! Dito isso, acreditamos que canais externos são uma maneira prática de exercer sua liberdade para aumentar a coleção de pacotes do Guix e compartilhar suas melhorias, que são princípios básicos do @uref{https://www.gnu.org/philosophy/free-sw.html, software livre}. Por favor, envie um e-mail para @email{guix-devel@@gnu.org} se você quiser discutir isso."

#. type: cindex
#: guix-git/doc/guix.texi:5803
#, no-wrap
msgid "subdirectory, channels"
msgstr "subdiretório, canais"

#. type: Plain text
#: guix-git/doc/guix.texi:5807
msgid "As a channel author, you may want to keep your channel modules in a sub-directory.  If your modules are in the sub-directory @file{guix}, you must add a meta-data file @file{.guix-channel} that contains:"
msgstr "Como autor de canal, você pode querer manter seus módulos de canal em um subdiretório. Se seus módulos estiverem no subdiretório @file{guix}, você deve adicionar um arquivo de metadados @file{.guix-channel} que contenha:"

#. type: lisp
#: guix-git/doc/guix.texi:5812
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (directory \"guix\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5819
msgid "The modules must be @b{underneath} the specified directory, as the @code{directory} changes Guile's @code{load-path}.  For example, if @file{.guix-channel} has @code{(directory \"base\")}, then a module defined as @code{(define-module (gnu packages fun))} must be located at @code{base/gnu/packages/fun.scm}."
msgstr "Os módulos devem estar @b{abaixo} do diretório especificado, pois o diretório @code{directory} altera o @code{load-path} do Guile. Por exemplo, se @file{.guix-channel} tiver @code{(directory \"base\")}, então um módulo definido como @code{(define-module (gnu packages fun))} deve estar localizado em @code{base/gnu/packages/fun.scm}."

#. type: Plain text
#: guix-git/doc/guix.texi:5825
msgid "Doing this allows for only parts of a repository to be used as a channel, as Guix expects valid Guile modules when pulling.  For instance, @command{guix deploy} machine configuration files are not valid Guile modules, and treating them as such would make @command{guix pull} fail."
msgstr "Fazer isso permite que apenas partes de um repositório sejam usadas como um canal, pois o Guix espera módulos Guile válidos ao puxar. Por exemplo, os arquivos de configuração de máquina @command{guix deploy} não são módulos Guile válidos, e tratá-los como tal faria com que @command{guix pull} falhasse."

#. type: cindex
#: guix-git/doc/guix.texi:5829
#, no-wrap
msgid "dependencies, channels"
msgstr "dependências, canais"

#. type: cindex
#: guix-git/doc/guix.texi:5830
#, no-wrap
msgid "meta-data, channels"
msgstr "metadados, canais"

#. type: Plain text
#: guix-git/doc/guix.texi:5835
msgid "Channel authors may decide to augment a package collection provided by other channels.  They can declare their channel to be dependent on other channels in a meta-data file @file{.guix-channel}, which is to be placed in the root of the channel repository."
msgstr "Os autores de canais podem decidir aumentar uma coleção de pacotes fornecida por outros canais. Eles podem declarar que seu canal é dependente de outros canais em um arquivo de metadados @file{.guix-channel}, que deve ser colocado na raiz do repositório do canal."

#. type: Plain text
#: guix-git/doc/guix.texi:5837
msgid "The meta-data file should contain a simple S-expression like this:"
msgstr "O arquivo de metadados deve conter uma expressão S simples como esta:"

#. type: lisp
#: guix-git/doc/guix.texi:5845
#, no-wrap
msgid ""
"(channel\n"
" (version 0)\n"
" (dependencies\n"
"  (channel\n"
"   (name some-collection)\n"
"   (url \"https://example.org/first-collection.git\")\n"
"\n"
msgstr ""
"(channel\n"
" (version 0)\n"
" (dependencies\n"
"  (channel\n"
"   (name algum-coleção)\n"
"   (url \"https://example.org/first-collection.git\")\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5857
#, no-wrap
msgid ""
"   ;; The 'introduction' bit below is optional: you would\n"
"   ;; provide it for dependencies that can be authenticated.\n"
"   (introduction\n"
"    (channel-introduction\n"
"      (version 0)\n"
"      (commit \"a8883b58dc82e167c96506cf05095f37c2c2c6cd\")\n"
"      (signer \"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"))))\n"
"  (channel\n"
"   (name some-other-collection)\n"
"   (url \"https://example.org/second-collection.git\")\n"
"   (branch \"testing\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5863
msgid "In the above example this channel is declared to depend on two other channels, which will both be fetched automatically.  The modules provided by the channel will be compiled in an environment where the modules of all these declared channels are available."
msgstr "No exemplo acima, este canal é declarado para depender de dois outros canais, que serão buscados automaticamente. Os módulos fornecidos pelo canal serão compilados em um ambiente onde os módulos de todos esses canais declarados estão disponíveis."

#. type: Plain text
#: guix-git/doc/guix.texi:5867
msgid "For the sake of reliability and maintainability, you should avoid dependencies on channels that you don't control, and you should aim to keep the number of dependencies to a minimum."
msgstr "Por uma questão de confiabilidade e manutenibilidade, você deve evitar dependências em canais que você não controla e deve tentar manter o número de dependências no mínimo."

#. type: cindex
#: guix-git/doc/guix.texi:5871
#, no-wrap
msgid "channel authorizations"
msgstr "autorizações de canal"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:5885
msgid "channel-authorizations"
msgstr "channel-authorizations"

#. type: Plain text
#: guix-git/doc/guix.texi:5885
msgid "As we saw above, Guix ensures the source code it pulls from channels comes from authorized developers.  As a channel author, you need to specify the list of authorized developers in the @file{.guix-authorizations} file in the channel's Git repository.  The authentication rule is simple: each commit must be signed by a key listed in the @file{.guix-authorizations} file of its parent commit(s)@footnote{Git commits form a @dfn{directed acyclic graph} (DAG).  Each commit can have zero or more parents; ``regular'' commits have one parent and merge commits have two parent commits.  Read @uref{https://eagain.net/articles/git-for-computer-scientists/, @i{Git for Computer Scientists}} for a great overview.} The @file{.guix-authorizations} file looks like this:"
msgstr "Como vimos acima, o Guix garante que o código-fonte que ele extrai dos canais vem de desenvolvedores autorizados. Como autor de um canal, você precisa especificar a lista de desenvolvedores autorizados no arquivo @file{.guix-authorizations} no repositório Git do canal. A regra de autenticação é simples: cada commit deve ser assinado por uma chave listada no arquivo @file{.guix-authorizations} de seu(s) commit(s) pai(s)@footnote{Os commits do Git formam um @dfn{gráfico acíclico direcionado} (DAG). Cada commit pode ter zero ou mais pais; os commits ``regulares'' têm um pai e os commits de mesclagem têm dois commits pais. Leia @uref{https://eagain.net/articles/git-for-computer-scientists/, @i{Git para cientistas da computação}} para uma ótima visão geral.} O arquivo @file{.guix-authorizations} se parece com isso:"

#. type: lisp
#: guix-git/doc/guix.texi:5888
#, no-wrap
msgid ""
";; Example '.guix-authorizations' file.\n"
"\n"
msgstr ""
";; Exemplo de arquivo '.guix-authorizations'.\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:5891
#, no-wrap
msgid ""
"(authorizations\n"
" (version 0)               ;current file format version\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:5898
#, no-wrap
msgid ""
" ((\"AD17 A21E F8AE D8F1 CC02  DBD9 F8AE D8F1 765C 61E3\"\n"
"   (name \"alice\"))\n"
"  (\"2A39 3FFF 68F4 EF7A 3D29  12AF 68F4 EF7A 22FB B2D5\"\n"
"   (name \"bob\"))\n"
"  (\"CABB A931 C0FF EEC6 900D  0CFB 090B 1199 3D9A EBB5\"\n"
"   (name \"charlie\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5902
msgid "Each fingerprint is followed by optional key/value pairs, as in the example above.  Currently these key/value pairs are ignored."
msgstr "Cada impressão digital é seguida por pares chave/valor opcionais, como no exemplo acima. Atualmente, esses pares chave/valor são ignorados."

#. type: Plain text
#: guix-git/doc/guix.texi:5907
msgid "This authentication rule creates a chicken-and-egg issue: how do we authenticate the first commit? Related to that: how do we deal with channels whose repository history contains unsigned commits and lack @file{.guix-authorizations}? And how do we fork existing channels?"
msgstr "Esta regra de autenticação cria um problema do tipo \"ovo e galinha\": como autenticamos o primeiro commit? Relacionado a isso: como lidamos com canais cujo histórico de repositório contém commits não assinados e não tem @file{.guix-authorizations}? E como bifurcamos canais existentes?"

#. type: cindex
#: guix-git/doc/guix.texi:5908
#, no-wrap
msgid "channel introduction"
msgstr "introdução do canal"

#. type: Plain text
#: guix-git/doc/guix.texi:5917
msgid "Channel introductions answer these questions by describing the first commit of a channel that should be authenticated.  The first time a channel is fetched with @command{guix pull} or @command{guix time-machine}, the command looks up the introductory commit and verifies that it is signed by the specified OpenPGP key.  From then on, it authenticates commits according to the rule above.  Authentication fails if the target commit is neither a descendant nor an ancestor of the introductory commit."
msgstr "As introduções de canal respondem a essas perguntas descrevendo o primeiro commit de um canal que deve ser autenticado. Na primeira vez que um canal é buscado com @command{guix pull} ou @command{guix time-machine}, o comando procura o commit introdutório e verifica se ele está assinado pela chave OpenPGP especificada. A partir daí, ele autentica os commits de acordo com a regra acima. A autenticação falha se o commit de destino não for descendente nem ancestral do commit introdutório."

#. type: Plain text
#: guix-git/doc/guix.texi:5924
msgid "Additionally, your channel must provide all the OpenPGP keys that were ever mentioned in @file{.guix-authorizations}, stored as @file{.key} files, which can be either binary or ``ASCII-armored''.  By default, those @file{.key} files are searched for in the branch named @code{keyring} but you can specify a different branch name in @code{.guix-channel} like so:"
msgstr "Além disso, seu canal deve fornecer todas as chaves OpenPGP que já foram mencionadas em @file{.guix-authorizations}, armazenadas como arquivos @file{.key}, que podem ser binários ou ``ASCII-armored''. Por padrão, esses arquivos @file{.key} são pesquisados no branch chamado @code{keyring}, mas você pode especificar um nome de branch diferente em @code{.guix-channel} assim:"

#. type: lisp
#: guix-git/doc/guix.texi:5929
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (keyring-reference \"my-keyring-branch\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5933
msgid "To summarize, as the author of a channel, there are three things you have to do to allow users to authenticate your code:"
msgstr "Para resumir, como autor de um canal, há três coisas que você precisa fazer para permitir que os usuários autentiquem seu código:"

#. type: enumerate
#: guix-git/doc/guix.texi:5939
msgid "Export the OpenPGP keys of past and present committers with @command{gpg --export} and store them in @file{.key} files, by default in a branch named @code{keyring} (we recommend making it an @dfn{orphan branch})."
msgstr "Exporte as chaves OpenPGP de contribuidores anteriores e atuais com @command{gpg --export} e armazene-as em arquivos @file{.key}, por padrão em uma ramificação chamada @code{keyring} (recomendamos torná-la uma @dfn{ramificação órfã})."

#. type: enumerate
#: guix-git/doc/guix.texi:5944
msgid "Introduce an initial @file{.guix-authorizations} in the channel's repository.  Do that in a signed commit (@pxref{Commit Access}, for information on how to sign Git commits)."
msgstr "Introduza um @file{.guix-authorizations} inicial no repositório do canal. Faça isso em um commit assinado (@pxref{Commit Access}, para obter informações sobre como assinar commits do Git)."

#. type: enumerate
#: guix-git/doc/guix.texi:5950
msgid "Advertise the channel introduction, for instance on your channel's web page.  The channel introduction, as we saw above, is the commit/key pair---i.e., the commit that introduced @file{.guix-authorizations}, and the fingerprint of the OpenPGP used to sign it."
msgstr "Anuncie a introdução do canal, por exemplo, na página web do seu canal. A introdução do canal, como vimos acima, é o par commit/chave---i.e., o commit que introduziu @file{.guix-authorizations}, e a impressão digital do OpenPGP usada para assiná-lo."

#. type: Plain text
#: guix-git/doc/guix.texi:5955
msgid "Before pushing to your public Git repository, you can run @command{guix git authenticate} to verify that you did sign all the commits you are about to push with an authorized key:"
msgstr "Antes de enviar para seu repositório Git público, você pode executar @command{guix git authenticate} para verificar se você assinou todos os commits que está prestes a enviar com uma chave autorizada:"

#. type: example
#: guix-git/doc/guix.texi:5958
#, no-wrap
msgid "guix git authenticate @var{commit} @var{signer}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:5963
msgid "where @var{commit} and @var{signer} are your channel introduction.  @xref{Invoking guix git authenticate}, for details."
msgstr "onde @var{commit} e @var{signer} são a introdução do seu canal. @xref{Invoking guix git authenticate}, para detalhes."

#. type: Plain text
#: guix-git/doc/guix.texi:5970
msgid "Publishing a signed channel requires discipline: any mistake, such as an unsigned commit or a commit signed by an unauthorized key, will prevent users from pulling from your channel---well, that's the whole point of authentication! Pay attention to merges in particular: merge commits are considered authentic if and only if they are signed by a key present in the @file{.guix-authorizations} file of @emph{both} branches."
msgstr "Publicar um canal assinado requer disciplina: qualquer erro, como um commit não assinado ou um commit assinado por uma chave não autorizada, impedirá que usuários puxem do seu canal --- bem, esse é o ponto principal da autenticação! Preste atenção às mesclagens em particular: commits de mesclagem são considerados autênticos se e somente se forem assinados por uma chave presente no arquivo @file{.guix-authorizations} de @emph{ambos} os ramos."

#. type: cindex
#: guix-git/doc/guix.texi:5974
#, no-wrap
msgid "primary URL, channels"
msgstr "URL principal, canais"

#. type: Plain text
#: guix-git/doc/guix.texi:5977
msgid "Channel authors can indicate the primary URL of their channel's Git repository in the @file{.guix-channel} file, like so:"
msgstr "Os autores do canal podem indicar a URL principal do repositório Git do canal no arquivo @file{.guix-channel}, assim:"

#. type: lisp
#: guix-git/doc/guix.texi:5982
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (url \"https://example.org/guix.git\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (url \"https://example.org/guix.git\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:5989
msgid "This allows @command{guix pull} to determine whether it is pulling code from a mirror of the channel; when that is the case, it warns the user that the mirror might be stale and displays the primary URL@.  That way, users cannot be tricked into fetching code from a stale mirror that does not receive security updates."
msgstr "Isso permite que @command{guix pull} determine se está puxando código de um espelho do canal; quando esse for o caso, ele avisa o usuário que o espelho pode estar obsoleto e exibe a URL primária. Dessa forma, os usuários não podem ser enganados para buscar código de um espelho obsoleto que não recebe atualizações de segurança."

#. type: Plain text
#: guix-git/doc/guix.texi:5993
msgid "This feature only makes sense for authenticated repositories, such as the official @code{guix} channel, for which @command{guix pull} ensures the code it fetches is authentic."
msgstr "Esse recurso só faz sentido para repositórios autenticados, como o canal oficial @code{guix}, para o qual @command{guix pull} garante que o código que ele recupera é autêntico."

#. type: cindex
#: guix-git/doc/guix.texi:5997
#, no-wrap
msgid "news, for channels"
msgstr "notícias, para canais"

#. type: Plain text
#: guix-git/doc/guix.texi:6001
msgid "Channel authors may occasionally want to communicate to their users information about important changes in the channel.  You'd send them all an email, but that's not convenient."
msgstr "Os autores do canal podem ocasionalmente querer comunicar aos seus usuários informações sobre mudanças importantes no canal. Você enviaria um e-mail para todos eles, mas isso não é conveniente."

#. type: Plain text
#: guix-git/doc/guix.texi:6006
msgid "Instead, channels can provide a @dfn{news file}; when the channel users run @command{guix pull}, that news file is automatically read and @command{guix pull --news} can display the announcements that correspond to the new commits that have been pulled, if any."
msgstr "Em vez disso, os canais podem fornecer um @dfn{arquivo de notícias}; quando os usuários do canal executam @command{guix pull}, esse arquivo de notícias é lido automaticamente e @command{guix pull --news} pode exibir os anúncios que correspondem aos novos commits que foram extraídos, se houver."

#. type: Plain text
#: guix-git/doc/guix.texi:6009
msgid "To do that, channel authors must first declare the name of the news file in their @file{.guix-channel} file:"
msgstr "Para fazer isso, os autores do canal devem primeiro declarar o nome do arquivo de notícias em seu arquivo @file{.guix-channel}:"

#. type: lisp
#: guix-git/doc/guix.texi:6014
#, no-wrap
msgid ""
"(channel\n"
"  (version 0)\n"
"  (news-file \"etc/news.txt\"))\n"
msgstr ""
"(channel\n"
"  (version 0)\n"
"  (news-file \"etc/news.txt\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6018
msgid "The news file itself, @file{etc/news.txt} in this example, must look something like this:"
msgstr "O arquivo de notícias em si, @file{etc/news.txt} neste exemplo, deve ser parecido com isto:"

#. type: lisp
#: guix-git/doc/guix.texi:6031
#, no-wrap
msgid ""
"(channel-news\n"
"  (version 0)\n"
"  (entry (tag \"the-bug-fix\")\n"
"         (title (en \"Fixed terrible bug\")\n"
"                (fr \"Oh la la\"))\n"
"         (body (en \"@@emph@{Good news@}!  It's fixed!\")\n"
"               (eo \"Certe ĝi pli bone funkcias nun!\")))\n"
"  (entry (commit \"bdcabe815cd28144a2d2b4bc3c5057b051fa9906\")\n"
"         (title (en \"Added a great package\")\n"
"                (ca \"Què vol dir guix?\"))\n"
"         (body (en \"Don't miss the @@code@{hello@} package!\"))))\n"
msgstr ""
"(channel-news\n"
"  (version 0)\n"
"  (entry (tag \"the-bug-fix\")\n"
"         (title (en \"Fixed terrible bug\")\n"
"                (fr \"Oh la la\"))\n"
"         (body (en \"@@emph@{Good news@}!  It's fixed!\")\n"
"               (eo \"Certe ĝi pli bone funkcias nun!\")))\n"
"  (entry (commit \"bdcabe815cd28144a2d2b4bc3c5057b051fa9906\")\n"
"         (title (en \"Added a great package\")\n"
"                (ca \"Què vol dir guix?\"))\n"
"         (body (en \"Don't miss the @@code@{hello@} package!\"))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6038
msgid "While the news file is using the Scheme syntax, avoid naming it with a @file{.scm} extension or else it will get picked up when building the channel and yield an error since it is not a valid module.  Alternatively, you can move the channel module to a subdirectory and store the news file in another directory."
msgstr "Enquanto o arquivo de notícias estiver usando a sintaxe Scheme, evite nomeá-lo com uma extensão @file{.scm} ou então ele será pego ao construir o canal e gerará um erro, pois não é um módulo válido. Como alternativa, você pode mover o módulo do canal para um subdiretório e armazenar o arquivo de notícias em outro diretório."

#. type: Plain text
#: guix-git/doc/guix.texi:6043
msgid "The file consists of a list of @dfn{news entries}.  Each entry is associated with a commit or tag: it describes changes made in this commit, possibly in preceding commits as well.  Users see entries only the first time they obtain the commit the entry refers to."
msgstr "O arquivo consiste em uma lista de @dfn{entradas de notícias}. Cada entrada é associada a um commit ou tag: ela descreve as alterações feitas neste commit, possivelmente em commits anteriores também. Os usuários veem as entradas somente na primeira vez que obtêm o commit ao qual a entrada se refere."

#. type: Plain text
#: guix-git/doc/guix.texi:6049
msgid "The @code{title} field should be a one-line summary while @code{body} can be arbitrarily long, and both can contain Texinfo markup (@pxref{Overview,,, texinfo, GNU Texinfo}).  Both the title and body are a list of language tag/message tuples, which allows @command{guix pull} to display news in the language that corresponds to the user's locale."
msgstr "O campo @code{title} deve ser um resumo de uma linha, enquanto @code{body} pode ser arbitrariamente longo, e ambos podem conter marcação Texinfo (@pxref{Overview,,, texinfo, GNU Texinfo}). Tanto o título quanto o corpo são uma lista de tuplas de tag/mensagem de idioma, o que permite que @command{guix pull} exiba notícias no idioma que corresponde à localidade do usuário."

#. type: Plain text
#: guix-git/doc/guix.texi:6055
msgid "If you want to translate news using a gettext-based workflow, you can extract translatable strings with @command{xgettext} (@pxref{xgettext Invocation,,, gettext, GNU Gettext Utilities}).  For example, assuming you write news entries in English first, the command below creates a PO file containing the strings to translate:"
msgstr "Se você quiser traduzir notícias usando um fluxo de trabalho baseado em gettext, você pode extrair strings traduzíveis com @command{xgettext} (@pxref{xgettext Invocation,,, gettext, GNU Gettext Utilities}). Por exemplo, supondo que você escreva entradas de notícias em inglês primeiro, o comando abaixo cria um arquivo PO contendo as strings a serem traduzidas:"

#. type: example
#: guix-git/doc/guix.texi:6058
#, no-wrap
msgid "xgettext -o news.po -l scheme -ken etc/news.txt\n"
msgstr "xgettext -o news.po -l scheme -ken etc/news.txt\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6062
msgid "To sum up, yes, you could use your channel as a blog.  But beware, this is @emph{not quite} what your users might expect."
msgstr "Para resumir, sim, você pode usar seu canal como um blog. Mas cuidado, isso é @emph{não é bem} o que seus usuários podem esperar."

#. type: cindex
#: guix-git/doc/guix.texi:6067
#, no-wrap
msgid "software development"
msgstr "desenvolvimento de software"

#. type: Plain text
#: guix-git/doc/guix.texi:6071
msgid "If you are a software developer, Guix provides tools that you should find helpful---independently of the language you're developing in.  This is what this chapter is about."
msgstr "Se você é um desenvolvedor de software, o Guix fornece ferramentas que você achará úteis, independentemente da linguagem em que estiver desenvolvendo. É sobre isso que este capítulo trata."

#. type: Plain text
#: guix-git/doc/guix.texi:6077
msgid "The @command{guix shell} command provides a convenient way to set up one-off software environments, be it for development purposes or to run a command without installing it in your profile.  The @command{guix pack} command allows you to create @dfn{application bundles} that can be easily distributed to users who do not run Guix."
msgstr "O comando @command{guix shell} fornece uma maneira conveniente de configurar ambientes de software únicos, seja para fins de desenvolvimento ou para executar um comando sem instalá-lo em seu perfil. O comando @command{guix pack} permite que você crie @dfn{embalagens de aplicativos} que podem ser facilmente distribuídas para usuários que não executam o Guix."

#. type: section
#: guix-git/doc/guix.texi:6087
#, no-wrap
msgid "Invoking @command{guix shell}"
msgstr "Invocando @command{guix shell}"

#. type: cindex
#: guix-git/doc/guix.texi:6089
#, no-wrap
msgid "reproducible build environments"
msgstr "ambientes de construção reproduzíveis"

#. type: cindex
#: guix-git/doc/guix.texi:6090
#, no-wrap
msgid "development environments"
msgstr "ambientes de desenvolvimento"

#. type: command{#1}
#: guix-git/doc/guix.texi:6091 guix-git/doc/guix.texi:6639
#, no-wrap
msgid "guix environment"
msgstr "guix environment"

#. type: command{#1}
#: guix-git/doc/guix.texi:6092
#, no-wrap
msgid "guix shell"
msgstr "guix shell"

#. type: cindex
#: guix-git/doc/guix.texi:6093
#, no-wrap
msgid "environment, package build environment"
msgstr "ambiente, ambiente de construção de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:6098
msgid "The purpose of @command{guix shell} is to make it easy to create one-off software environments, without changing one's profile.  It is typically used to create development environments; it is also a convenient way to run applications without ``polluting'' your profile."
msgstr "O propósito do @command{guix shell} é facilitar a criação de ambientes de software únicos, sem alterar o perfil. Ele é normalmente usado para criar ambientes de desenvolvimento; também é uma maneira conveniente de executar aplicativos sem ``poluir'' seu perfil."

#. type: quotation
#: guix-git/doc/guix.texi:6104
msgid "The @command{guix shell} command was recently introduced to supersede @command{guix environment} (@pxref{Invoking guix environment}).  If you are familiar with @command{guix environment}, you will notice that it is similar but also---we hope!---more convenient."
msgstr "O comando @command{guix shell} foi introduzido recentemente para substituir @command{guix environment} (@pxref{Invoking guix environment}). Se você estiver familiarizado com @command{guix environment}, notará que ele é semelhante, mas também---esperamos!---mais conveniente."

#. type: example
#: guix-git/doc/guix.texi:6110
#, no-wrap
msgid "guix shell [@var{options}] [@var{package}@dots{}]\n"
msgstr "guix shell [@var{opções}] [@var{pacote}@dots{}]\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6115
msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments."
msgstr "Às vezes, uma sessão de shell interativa não é desejada. Um comando arbitrário pode ser invocado colocando o token @code{--} para separar o comando do resto dos argumentos."

#. type: Plain text
#: guix-git/doc/guix.texi:6119
msgid "The following example creates an environment containing Python and NumPy, building or downloading any missing package, and runs the @command{python3} command in that environment:"
msgstr "O exemplo a seguir cria um ambiente contendo Python e NumPy, compilando ou baixando qualquer pacote ausente e executa o comando @command{python3} nesse ambiente:"

#. type: example
#: guix-git/doc/guix.texi:6122
#, no-wrap
msgid "guix shell python python-numpy -- python3\n"
msgstr "guix shell python python-numpy -- python3\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6131
msgid "Note that it is necessary to include the main @code{python} package in this command even if it is already installed into your environment.  This is so that the shell environment knows to set @env{PYTHONPATH} and other related variables.  The shell environment cannot check the previously installed environment, because then it would be non-deterministic.  This is true for most libraries: their corresponding language package should be included in the shell invocation."
msgstr "Note que é necessário incluir o pacote principal @code{python} neste comando, mesmo que ele já esteja instalado em seu ambiente. Isso é para que o ambiente shell saiba definir @env{PYTHONPATH} e outras variáveis relacionadas. O ambiente shell não pode verificar o ambiente instalado anteriormente, porque então seria não determinístico. Isso é verdade para a maioria das bibliotecas: seu pacote de linguagem correspondente deve ser incluído na invocação do shell."

#. type: cindex
#: guix-git/doc/guix.texi:6133
#, no-wrap
msgid "shebang, for @command{guix shell}"
msgstr "shebang, para @command{guix shell}"

#. type: quotation
#: guix-git/doc/guix.texi:6137
msgid "@command{guix shell} can be also be used as a script interpreter, also known as @dfn{shebang}.  Here is an example self-contained Python script making use of this feature:"
msgstr "@command{guix shell} também pode ser usado como um interpretador de script, também conhecido como @dfn{shebang}. Aqui está um exemplo de script Python autocontido fazendo uso desse recurso:"

#. type: example
#: guix-git/doc/guix.texi:6142
#, no-wrap
msgid ""
"#!/usr/bin/env -S guix shell python python-numpy -- python3\n"
"import numpy\n"
"print(\"This is numpy\", numpy.version.version)\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:6146
msgid "You may pass any @command{guix shell} option, but there's one caveat: the Linux kernel has a limit of 127 bytes on shebang length."
msgstr "Você pode passar qualquer opção @command{guix shell}, mas há uma ressalva: o kernel Linux tem um limite de 127 bytes no comprimento do shebang."

#. type: Plain text
#: guix-git/doc/guix.texi:6151
msgid "Development environments can be created as in the example below, which spawns an interactive shell containing all the dependencies and environment variables needed to work on Inkscape:"
msgstr "Ambientes de desenvolvimento podem ser criados como no exemplo abaixo, que gera um shell interativo contendo todas as dependências e variáveis de ambiente necessárias para trabalhar no Inkscape:"

#. type: example
#: guix-git/doc/guix.texi:6154
#, no-wrap
msgid "guix shell --development inkscape\n"
msgstr "guix shell --development inkscape\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6160
msgid "Exiting the shell places the user back in the original environment before @command{guix shell} was invoked.  The next garbage collection (@pxref{Invoking guix gc}) may clean up packages that were installed in the environment and that are no longer used outside of it."
msgstr "Sair do shell coloca o usuário de volta no ambiente original antes de @command{guix shell} ser invocado. A próxima coleta de lixo (@pxref{Invoking guix gc}) pode limpar pacotes que foram instalados no ambiente e que não são mais usados fora dele."

#. type: Plain text
#: guix-git/doc/guix.texi:6164
msgid "As an added convenience, @command{guix shell} will try to do what you mean when it is invoked interactively without any other arguments as in:"
msgstr "Como uma conveniência adicional, @command{guix shell} tentará fazer o que você quer dizer quando for invocado interativamente sem nenhum outro argumento, como em:"

#. type: example
#: guix-git/doc/guix.texi:6167
#, no-wrap
msgid "guix shell\n"
msgstr "guix shell\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6179
msgid "If it finds a @file{manifest.scm} in the current working directory or any of its parents, it uses this manifest as though it was given via @code{--manifest}.  Likewise, if it finds a @file{guix.scm} in the same directories, it uses it to build a development profile as though both @code{--development} and @code{--file} were present.  In either case, the file will only be loaded if the directory it resides in is listed in @file{~/.config/guix/shell-authorized-directories}.  This provides an easy way to define, share, and enter development environments."
msgstr "Se encontrar um @file{manifest.scm} no diretório de trabalho atual ou em qualquer um dos seus pais, ele usa esse manifesto como se tivesse sido fornecido via @code{--manifest}. Da mesma forma, se encontrar um @file{guix.scm} nos mesmos diretórios, ele o usa para construir um perfil de desenvolvimento como se @code{--development} e @code{--file} estivessem presentes. Em ambos os casos, o arquivo só será carregado se o diretório em que ele reside estiver listado em @file{~/.config/guix/shell-authorized-directories}. Isso fornece uma maneira fácil de definir, compartilhar e entrar em ambientes de desenvolvimento."

#. type: Plain text
#: guix-git/doc/guix.texi:6190
msgid "By default, the shell session or command runs in an @emph{augmented} environment, where the new packages are added to search path environment variables such as @code{PATH}.  You can, instead, choose to create an @emph{isolated} environment containing nothing but the packages you asked for.  Passing the @option{--pure} option clears environment variable definitions found in the parent environment@footnote{Be sure to use the @option{--check} option the first time you use @command{guix shell} interactively to make sure the shell does not undo the effect of @option{--pure}.}; passing @option{--container} goes one step further by spawning a @dfn{container} isolated from the rest of the system:"
msgstr "Por padrão, a sessão ou comando do shell é executado em um ambiente @emph{aumentado}, onde os novos pacotes são adicionados às variáveis de ambiente do caminho de pesquisa, como @code{PATH}. Em vez disso, você pode escolher criar um ambiente @emph{isolado} contendo apenas os pacotes solicitados. Passar a opção @option{--pure} limpa as definições de variáveis de ambiente encontradas no ambiente pai@footnote{Certifique-se de usar a opção @option{--check} na primeira vez que usar @command{guix shell} interativamente para garantir que o shell não desfaça o efeito de @option{--pure}.}; passar @option{--container} vai um passo além ao gerar um @dfn{contêiner} isolado do resto do sistema:"

#. type: example
#: guix-git/doc/guix.texi:6193
#, no-wrap
msgid "guix shell --container emacs gcc-toolchain\n"
msgstr "guix shell --container emacs gcc-toolchain\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6201
msgid "The command above spawns an interactive shell in a container where nothing but @code{emacs}, @code{gcc-toolchain}, and their dependencies is available.  The container lacks network access and shares no files other than the current working directory with the surrounding environment.  This is useful to prevent access to system-wide resources such as @file{/usr/bin} on foreign distros."
msgstr "O comando acima gera um shell interativo em um contêiner onde nada além de @code{emacs}, @code{gcc-toolchain} e suas dependências estão disponíveis. O contêiner não tem acesso à rede e não compartilha nenhum arquivo além do diretório de trabalho atual com o ambiente ao redor. Isso é útil para evitar acesso a recursos de todo o sistema, como @file{/usr/bin} em distros estrangeiras."

#. type: Plain text
#: guix-git/doc/guix.texi:6206
msgid "This @option{--container} option can also prove useful if you wish to run a security-sensitive application, such as a web browser, in an isolated environment.  For example, the command below launches Ungoogled-Chromium in an isolated environment, which:"
msgstr "Esta opção @option{--container} também pode ser útil se você deseja executar um aplicativo sensível à segurança, como um navegador da web, em um ambiente isolado. Por exemplo, o comando abaixo inicia o Ungoogled-Chromium em um ambiente isolado, que:"

#. type: item
#: guix-git/doc/guix.texi:6207
#, no-wrap
msgid "shares network access with the host"
msgstr "compartilha o acesso à rede com o host"

#. type: item
#: guix-git/doc/guix.texi:6208
#, no-wrap
msgid "inherits host's environment variables @code{DISPLAY} and @code{XAUTHORITY}"
msgstr "herda as variáveis de ambiente do host @code{DISPLAY} e @code{XAUTHORITY}"

#. type: item
#: guix-git/doc/guix.texi:6209
#, no-wrap
msgid "has access to host's authentication records from the @code{XAUTHORITY}"
msgstr "tem acesso aos registros de autenticação do host do @code{XAUTHORITY}"

#. type: code{#1}
#: guix-git/doc/guix.texi:6211 guix-git/doc/guix.texi:11533
#: guix-git/doc/guix.texi:34347
#, no-wrap
msgid "file"
msgstr "file"

#. type: item
#: guix-git/doc/guix.texi:6211
#, no-wrap
msgid "has no information about host's current directory"
msgstr "não tem informações sobre o diretório atual do host"

#. type: example
#: guix-git/doc/guix.texi:6218
#, no-wrap
msgid ""
"guix shell --container --network --no-cwd ungoogled-chromium \\\n"
"  --preserve='^XAUTHORITY$' --expose=\"$@{XAUTHORITY@}\" \\\n"
"  --preserve='^DISPLAY$' -- chromium\n"
msgstr ""
"guix shell --container --network --no-cwd ungoogled-chromium \\\n"
"  --preserve='^XAUTHORITY$' --expose=\"$@{XAUTHORITY@}\" \\\n"
"  --preserve='^DISPLAY$' -- chromium\n"

#. type: vindex
#: guix-git/doc/guix.texi:6220 guix-git/doc/guix.texi:6690
#, no-wrap
msgid "GUIX_ENVIRONMENT"
msgstr "GUIX_ENVIRONMENT"

#. type: Plain text
#: guix-git/doc/guix.texi:6226
msgid "@command{guix shell} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr "@command{guix shell} define a variável @env{GUIX_ENVIRONMENT} no shell que ele gera; seu valor é o nome do arquivo do perfil deste ambiente. Isso permite que os usuários, digamos, definam um prompt específico para ambientes de desenvolvimento em seu @file{.bashrc} (@pxref{Bash Startup Files,,, bash, Manual de referência do GNU Bash}):"

#. type: example
#: guix-git/doc/guix.texi:6232 guix-git/doc/guix.texi:6702
#, no-wrap
msgid ""
"if [ -n \"$GUIX_ENVIRONMENT\" ]\n"
"then\n"
"    export PS1=\"\\u@@\\h \\w [dev]\\$ \"\n"
"fi\n"
msgstr ""
"if [ -n \"$GUIX_ENVIRONMENT\" ]\n"
"then\n"
"    export PS1=\"\\u@@\\h \\w [dev]\\$ \"\n"
"fi\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6236 guix-git/doc/guix.texi:6706
msgid "...@: or to browse the profile:"
msgstr "...@: ou para navegar pelo perfil:"

#. type: example
#: guix-git/doc/guix.texi:6239 guix-git/doc/guix.texi:6709
#, no-wrap
msgid "$ ls \"$GUIX_ENVIRONMENT/bin\"\n"
msgstr "$ ls \"$GUIX_ENVIRONMENT/bin\"\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6242 guix-git/doc/guix.texi:6785
msgid "The available options are summarized below."
msgstr "As opções disponíveis estão resumidas abaixo."

#. type: item
#: guix-git/doc/guix.texi:6244 guix-git/doc/guix.texi:6787
#: guix-git/doc/guix.texi:14023
#, no-wrap
msgid "--check"
msgstr "--check"

#. type: table
#: guix-git/doc/guix.texi:6249
msgid "Set up the environment and check whether the shell would clobber environment variables.  It's a good idea to use this option the first time you run @command{guix shell} for an interactive session to make sure your setup is correct."
msgstr "Configure o ambiente e verifique se o shell sobrecarregaria as variáveis de ambiente. É uma boa ideia usar esta opção na primeira vez que você executar @command{guix shell} para uma sessão interativa para garantir que sua configuração esteja correta."

#. type: table
#: guix-git/doc/guix.texi:6253
msgid "For example, if the shell modifies the @env{PATH} environment variable, report it since you would get a different environment than what you asked for."
msgstr "Por exemplo, se o shell modificar a variável de ambiente @env{PATH}, informe isso, pois você obterá um ambiente diferente do que solicitou."

#. type: table
#: guix-git/doc/guix.texi:6261
msgid "Such problems usually indicate that the shell startup files are unexpectedly modifying those environment variables.  For example, if you are using Bash, make sure that environment variables are set or modified in @file{~/.bash_profile} and @emph{not} in @file{~/.bashrc}---the former is sourced only by log-in shells.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, for details on Bash start-up files."
msgstr "Tais problemas geralmente indicam que os arquivos de inicialização do shell estão modificando inesperadamente essas variáveis de ambiente. Por exemplo, se você estiver usando Bash, certifique-se de que as variáveis de ambiente estejam definidas ou modificadas em @file{~/.bash_profile} e @emph{não} em @file{~/.bashrc}---o primeiro é originado apenas por shells de login. @xref{Bash Startup Files,,, bash, Manual de referência do GNU Bash}, para detalhes sobre os arquivos de inicialização do Bash."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6263
msgid "shell-development-option"
msgstr "shell-development-option"

#. type: item
#: guix-git/doc/guix.texi:6263 guix-git/doc/guix.texi:13856
#, no-wrap
msgid "--development"
msgstr "--development"

#. type: table
#: guix-git/doc/guix.texi:6270
msgid "Cause @command{guix shell} to include in the environment the dependencies of the following package rather than the package itself.  This can be combined with other packages.  For instance, the command below starts an interactive shell containing the build-time dependencies of GNU@tie{}Guile, plus Autoconf, Automake, and Libtool:"
msgstr "Faça com que @command{guix shell} inclua no ambiente as dependências do pacote a seguir em vez do pacote em si. Isso pode ser combinado com outros pacotes. Por exemplo, o comando abaixo inicia um shell interativo contendo as dependências de tempo de compilação do GNU@tie{}Guile, além do Autoconf, Automake e Libtool:"

#. type: example
#: guix-git/doc/guix.texi:6273
#, no-wrap
msgid "guix shell -D guile autoconf automake libtool\n"
msgstr "guix shell -D guile autoconf automake libtool\n"

#. type: item
#: guix-git/doc/guix.texi:6275 guix-git/doc/guix.texi:6808
#: guix-git/doc/guix.texi:7451 guix-git/doc/guix.texi:13840
#: guix-git/doc/guix.texi:15215 guix-git/doc/guix.texi:15722
#: guix-git/doc/guix.texi:15938 guix-git/doc/guix.texi:16348
#: guix-git/doc/guix.texi:17067 guix-git/doc/guix.texi:46836
#: guix-git/doc/guix.texi:52679
#, no-wrap
msgid "--expression=@var{expr}"
msgstr "--expression=@var{expr}"

#. type: itemx
#: guix-git/doc/guix.texi:6276 guix-git/doc/guix.texi:6809
#: guix-git/doc/guix.texi:7452 guix-git/doc/guix.texi:13841
#: guix-git/doc/guix.texi:15216 guix-git/doc/guix.texi:15723
#: guix-git/doc/guix.texi:15939 guix-git/doc/guix.texi:16349
#: guix-git/doc/guix.texi:17068 guix-git/doc/guix.texi:46837
#: guix-git/doc/guix.texi:52680
#, no-wrap
msgid "-e @var{expr}"
msgstr "-e @var{expr}"

#. type: table
#: guix-git/doc/guix.texi:6279 guix-git/doc/guix.texi:6812
msgid "Create an environment for the package or list of packages that @var{expr} evaluates to."
msgstr "Crie um ambiente para o pacote ou lista de pacotes que @var{expr} avalia."

#. type: table
#: guix-git/doc/guix.texi:6281 guix-git/doc/guix.texi:6814
#: guix-git/doc/guix.texi:15727
msgid "For example, running:"
msgstr "Por exemplo, executando:"

#. type: example
#: guix-git/doc/guix.texi:6284
#, no-wrap
msgid "guix shell -D -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr "guix shell -D -e '(@@ (gnu packages maths) petsc-openmpi)'\n"

#. type: table
#: guix-git/doc/guix.texi:6288 guix-git/doc/guix.texi:6821
msgid "starts a shell with the environment for this specific variant of the PETSc package."
msgstr "inicia um shell com o ambiente para esta variante específica do pacote PETSc."

#. type: table
#: guix-git/doc/guix.texi:6290 guix-git/doc/guix.texi:6823
msgid "Running:"
msgstr "Rodando:"

#. type: example
#: guix-git/doc/guix.texi:6293
#, no-wrap
msgid "guix shell -e '(@@ (gnu) %base-packages)'\n"
msgstr "guix shell -e '(@@ (gnu) %base-packages)'\n"

#. type: table
#: guix-git/doc/guix.texi:6296 guix-git/doc/guix.texi:6829
msgid "starts a shell with all the base system packages available."
msgstr "inicia um shell com todos os pacotes do sistema base disponíveis."

#. type: table
#: guix-git/doc/guix.texi:6299 guix-git/doc/guix.texi:6832
msgid "The above commands only use the default output of the given packages.  To select other outputs, two element tuples can be specified:"
msgstr "Os comandos acima usam apenas a saída padrão dos pacotes fornecidos. Para selecionar outras saídas, duas tuplas de elementos podem ser especificadas:"

#. type: example
#: guix-git/doc/guix.texi:6302
#, no-wrap
msgid "guix shell -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr "guix shell -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"

#. type: table
#: guix-git/doc/guix.texi:6307
msgid "@xref{package-development-manifest, @code{package->development-manifest}}, for information on how to write a manifest for the development environment of a package."
msgstr "@xref{package-development-manifest, @code{package->development-manifest}}, para obter informações sobre como escrever um manifesto para o ambiente de desenvolvimento de um pacote."

#. type: item
#: guix-git/doc/guix.texi:6308 guix-git/doc/guix.texi:7459
#: guix-git/doc/guix.texi:13814
#, no-wrap
msgid "--file=@var{file}"
msgstr "--file=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:6312
msgid "Create an environment containing the package or list of packages that the code within @var{file} evaluates to."
msgstr "Crie um ambiente contendo o pacote ou lista de pacotes que o código dentro de @var{arquivo} avalia."

#. type: lisp
#: guix-git/doc/guix.texi:6318 guix-git/doc/guix.texi:6847
#, no-wrap
msgid "@verbatiminclude environment-gdb.scm\n"
msgstr "@verbatiminclude environment-gdb.scm\n"

#. type: table
#: guix-git/doc/guix.texi:6322
msgid "With the file above, you can enter a development environment for GDB by running:"
msgstr "Com o arquivo acima, você pode entrar em um ambiente de desenvolvimento para o GDB executando:"

#. type: example
#: guix-git/doc/guix.texi:6325
#, no-wrap
msgid "guix shell -D -f gdb-devel.scm\n"
msgstr "guix shell -D -f gdb-devel.scm\n"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6328
msgid "shell-manifest"
msgstr "shell-manifest"

#. type: table
#: guix-git/doc/guix.texi:6333 guix-git/doc/guix.texi:6854
msgid "Create an environment for the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Crie um ambiente para os pacotes contidos no objeto manifest retornado pelo código Scheme em @var{arquivo}. Esta opção pode ser repetida várias vezes, nesse caso os manifestos são concatenados."

#. type: table
#: guix-git/doc/guix.texi:6337 guix-git/doc/guix.texi:6858
msgid "This is similar to the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files."
msgstr "Isso é semelhante à opção de mesmo nome em @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) e usa os mesmos arquivos de manifesto."

#. type: table
#: guix-git/doc/guix.texi:6340
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  See @option{--export-manifest} below on how to obtain a first manifest."
msgstr "@xref{Writing Manifests}, para informações sobre como escrever um manifesto. Veja @option{--export-manifest} abaixo sobre como obter um primeiro manifesto."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:6343
msgid "shell-export-manifest"
msgstr "shell-export-manifest"

#. type: table
#: guix-git/doc/guix.texi:6346
msgid "Write to standard output a manifest suitable for @option{--manifest} corresponding to given command-line options."
msgstr "Grave na saída padrão um manifesto adequado para @option{--manifest} correspondente às opções de linha de comando fornecidas."

#. type: table
#: guix-git/doc/guix.texi:6350
msgid "This is a way to ``convert'' command-line arguments into a manifest.  For example, imagine you are tired of typing long lines and would like to get a manifest equivalent to this command line:"
msgstr "Esta é uma maneira de ``converter'' argumentos de linha de comando em um manifesto. Por exemplo, imagine que você está cansado de digitar linhas longas e gostaria de obter um manifesto equivalente a esta linha de comando:"

#. type: example
#: guix-git/doc/guix.texi:6353
#, no-wrap
msgid "guix shell -D guile git emacs emacs-geiser emacs-geiser-guile\n"
msgstr "guix shell -D guile git emacs emacs-geiser emacs-geiser-guile\n"

#. type: table
#: guix-git/doc/guix.texi:6356
msgid "Just add @option{--export-manifest} to the command line above:"
msgstr "Basta adicionar @option{--export-manifest} à linha de comando acima:"

#. type: example
#: guix-git/doc/guix.texi:6360
#, no-wrap
msgid ""
"guix shell --export-manifest \\\n"
"  -D guile git emacs emacs-geiser emacs-geiser-guile\n"
msgstr ""
"guix shell --export-manifest \\\n"
"  -D guile git emacs emacs-geiser emacs-geiser-guile\n"

#. type: table
#: guix-git/doc/guix.texi:6364
#, fuzzy
#| msgid "Installing goes along these lines:"
msgid "... and you get a manifest along these lines:"
msgstr "A instalação segue as seguintes linhas:"

#. type: lisp
#: guix-git/doc/guix.texi:6374
#, no-wrap
msgid ""
"(concatenate-manifests\n"
"  (list (specifications->manifest\n"
"          (list \"git\"\n"
"                \"emacs\"\n"
"                \"emacs-geiser\"\n"
"                \"emacs-geiser-guile\"))\n"
"        (package->development-manifest\n"
"          (specification->package \"guile\"))))\n"
msgstr ""
"(concatenate-manifests\n"
"  (list (specifications->manifest\n"
"          (list \"git\"\n"
"                \"emacs\"\n"
"                \"emacs-geiser\"\n"
"                \"emacs-geiser-guile\"))\n"
"        (package->development-manifest\n"
"          (specification->package \"guile\"))))\n"

#. type: table
#: guix-git/doc/guix.texi:6379
msgid "You can store it into a file, say @file{manifest.scm}, and from there pass it to @command{guix shell} or indeed pretty much any @command{guix} command:"
msgstr "Você pode armazená-lo em um arquivo, digamos @file{manifest.scm}, e de lá passá-lo para @command{guix shell} ou praticamente qualquer comando @command{guix}:"

#. type: example
#: guix-git/doc/guix.texi:6382 guix-git/doc/guix.texi:8961
#, no-wrap
msgid "guix shell -m manifest.scm\n"
msgstr "guix shell -m manifest.scm\n"

#. type: table
#: guix-git/doc/guix.texi:6387
msgid "Voilà, you've converted a long command line into a manifest! That conversion process honors package transformation options (@pxref{Package Transformation Options}) so it should be lossless."
msgstr "Voilà, você converteu uma longa linha de comando em um manifesto! Esse processo de conversão honra opções de transformação de pacote (@pxref{Package Transformation Options}), então deve ser sem perdas."

#. type: table
#: guix-git/doc/guix.texi:6393 guix-git/doc/guix.texi:6894
msgid "Create an environment containing the packages installed in @var{profile}.  Use @command{guix package} (@pxref{Invoking guix package}) to create and manage profiles."
msgstr "Crie um ambiente contendo os pacotes instalados em @var{perfil}. Use @command{guix package} (@pxref{Invoking guix package}) para criar e gerenciar perfis."

#. type: item
#: guix-git/doc/guix.texi:6394 guix-git/doc/guix.texi:6895
#, no-wrap
msgid "--pure"
msgstr "--pure"

#. type: table
#: guix-git/doc/guix.texi:6398 guix-git/doc/guix.texi:6899
msgid "Unset existing environment variables when building the new environment, except those specified with @option{--preserve} (see below).  This has the effect of creating an environment in which search paths only contain package inputs."
msgstr "Desconfigura variáveis de ambiente existentes ao construir o novo ambiente, exceto aquelas especificadas com @option{--preserve} (veja abaixo). Isso tem o efeito de criar um ambiente no qual os caminhos de pesquisa contêm apenas entradas de pacote."

#. type: item
#: guix-git/doc/guix.texi:6399 guix-git/doc/guix.texi:6900
#, no-wrap
msgid "--preserve=@var{regexp}"
msgstr "--preserve=@var{regexp}"

#. type: itemx
#: guix-git/doc/guix.texi:6400 guix-git/doc/guix.texi:6901
#, no-wrap
msgid "-E @var{regexp}"
msgstr "-E @var{regexp}"

#. type: table
#: guix-git/doc/guix.texi:6405 guix-git/doc/guix.texi:6906
msgid "When used alongside @option{--pure}, preserve the environment variables matching @var{regexp}---in other words, put them on a ``white list'' of environment variables that must be preserved.  This option can be repeated several times."
msgstr "Quando usado junto com @option{--pure}, preserva as variáveis de ambiente que correspondem a @var{regexp}---em outras palavras, coloca-as em uma ``lista branca'' de variáveis de ambiente que devem ser preservadas. Esta opção pode ser repetida várias vezes."

#. type: example
#: guix-git/doc/guix.texi:6409
#, no-wrap
msgid ""
"guix shell --pure --preserve=^SLURM openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""
"guix shell --pure --preserve=^SLURM openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:6415 guix-git/doc/guix.texi:6916
msgid "This example runs @command{mpirun} in a context where the only environment variables defined are @env{PATH}, environment variables whose name starts with @samp{SLURM}, as well as the usual ``precious'' variables (@env{HOME}, @env{USER}, etc.)."
msgstr "Este exemplo executa @command{mpirun} em um contexto onde as únicas variáveis de ambiente definidas são @env{PATH}, variáveis de ambiente cujo nome começa com @samp{SLURM}, bem como as variáveis ``preciosas'' usuais (@env{HOME}, @env{USER}, etc.)."

#. type: item
#: guix-git/doc/guix.texi:6416 guix-git/doc/guix.texi:6917
#, no-wrap
msgid "--search-paths"
msgstr "--search-paths"

#. type: table
#: guix-git/doc/guix.texi:6419 guix-git/doc/guix.texi:6920
msgid "Display the environment variable definitions that make up the environment."
msgstr "Exiba as definições de variáveis de ambiente que compõem o ambiente."

#. type: table
#: guix-git/doc/guix.texi:6423 guix-git/doc/guix.texi:6924
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}."
msgstr "Tente construir para @var{sistema}---por exemplo, @code{i686-linux}."

#. type: item
#: guix-git/doc/guix.texi:6424 guix-git/doc/guix.texi:6925
#, no-wrap
msgid "--container"
msgstr "--container"

#. type: itemx
#: guix-git/doc/guix.texi:6425 guix-git/doc/guix.texi:6926
#, no-wrap
msgid "-C"
msgstr "-C"

#. type: item
#: guix-git/doc/guix.texi:6426 guix-git/doc/guix.texi:6751
#: guix-git/doc/guix.texi:6927 guix-git/doc/guix.texi:16916
#: guix-git/doc/guix.texi:46800 guix-git/doc/guix.texi:52418
#, no-wrap
msgid "container"
msgstr "container"

#. type: table
#: guix-git/doc/guix.texi:6432 guix-git/doc/guix.texi:6933
msgid "Run @var{command} within an isolated container.  The current working directory outside the container is mapped inside the container.  Additionally, unless overridden with @option{--user}, a dummy home directory is created that matches the current user's home directory, and @file{/etc/passwd} is configured accordingly."
msgstr "Execute @var{comando} dentro de um contêiner isolado. O diretório de trabalho atual fora do contêiner é mapeado dentro do contêiner. Além disso, a menos que substituído por @option{--user}, um diretório pessoal (home) fictício é criado que corresponde ao diretório pessoal do usuário atual, e @file{/etc/passwd} é configurado adequadamente."

#. type: table
#: guix-git/doc/guix.texi:6436 guix-git/doc/guix.texi:6937
msgid "The spawned process runs as the current user outside the container.  Inside the container, it has the same UID and GID as the current user, unless @option{--user} is passed (see below)."
msgstr "O processo gerado é executado como o usuário atual fora do contêiner. Dentro do contêiner, ele tem o mesmo UID e GID que o usuário atual, a menos que @option{--user} seja passado (veja abaixo)."

#. type: item
#: guix-git/doc/guix.texi:6437 guix-git/doc/guix.texi:6938
#: guix-git/doc/guix.texi:46901 guix-git/doc/guix.texi:52436
#, no-wrap
msgid "--network"
msgstr "--network"

#. type: table
#: guix-git/doc/guix.texi:6442 guix-git/doc/guix.texi:6943
msgid "For containers, share the network namespace with the host system.  Containers created without this flag only have access to the loopback device."
msgstr "Para contêineres, compartilhe o namespace de rede com o sistema host. Os contêineres criados sem esse sinalizador têm acesso somente ao dispositivo de loopback."

#. type: item
#: guix-git/doc/guix.texi:6443 guix-git/doc/guix.texi:6944
#, no-wrap
msgid "--link-profile"
msgstr "--link-profile"

#. type: itemx
#: guix-git/doc/guix.texi:6444 guix-git/doc/guix.texi:6945
#, no-wrap
msgid "-P"
msgstr "-P"

#. type: table
#: guix-git/doc/guix.texi:6452
msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix shell} was invoked in the user's home directory."
msgstr "Para contêineres, vincule o perfil do ambiente a @file{~/.guix-profile} dentro do contêiner e defina @code{GUIX_ENVIRONMENT} para isso. Isso é equivalente a tornar @file{~/.guix-profile} uma ligação simbólica para o perfil real dentro do contêiner. A vinculação falhará e abortará o ambiente se o diretório já existir, o que certamente será o caso se @command{guix shell} foi invocado no diretório pessoal do usuário."

#. type: table
#: guix-git/doc/guix.texi:6458 guix-git/doc/guix.texi:6959
msgid "Certain packages are configured to look in @file{~/.guix-profile} for configuration files and data;@footnote{For example, the @code{fontconfig} package inspects @file{~/.guix-profile/share/fonts} for additional fonts.} @option{--link-profile} allows these programs to behave as expected within the environment."
msgstr "Certos pacotes são configurados para procurar em @file{~/.guix-profile} por arquivos de configuração e dados;@footnote{Por exemplo, o pacote @code{fontconfig} inspeciona @file{~/.guix-profile/share/fonts} por fontes adicionais.} @option{--link-profile} permite que esses programas se comportem conforme o esperado no ambiente."

#. type: item
#: guix-git/doc/guix.texi:6459 guix-git/doc/guix.texi:6960
#: guix-git/doc/guix.texi:16486
#, no-wrap
msgid "--user=@var{user}"
msgstr "--user=@var{usuário}"

#. type: itemx
#: guix-git/doc/guix.texi:6460 guix-git/doc/guix.texi:6961
#: guix-git/doc/guix.texi:16487
#, no-wrap
msgid "-u @var{user}"
msgstr "-u @var{usuário}"

#. type: table
#: guix-git/doc/guix.texi:6467 guix-git/doc/guix.texi:6968
msgid "For containers, use the username @var{user} in place of the current user.  The generated @file{/etc/passwd} entry within the container will contain the name @var{user}, the home directory will be @file{/home/@var{user}}, and no user GECOS data will be copied.  Furthermore, the UID and GID inside the container are 1000.  @var{user} need not exist on the system."
msgstr "Para contêineres, use o nome de usuário @var{usuário} no lugar do usuário atual. A entrada @file{/etc/passwd} gerada dentro do contêiner conterá o nome @var{usuário}, o diretório pessoal será @file{/home/@var{usuário}} e nenhum dado GECOS do usuário será copiado. Além disso, o UID e o GID dentro do contêiner são 1000. @var{usuário} não precisa existir no sistema."

#. type: table
#: guix-git/doc/guix.texi:6472 guix-git/doc/guix.texi:6973
msgid "Additionally, any shared or exposed path (see @option{--share} and @option{--expose} respectively) whose target is within the current user's home directory will be remapped relative to @file{/home/USER}; this includes the automatic mapping of the current working directory."
msgstr "Além disso, qualquer caminho compartilhado ou exposto (veja @option{--share} e @option{--expose} respectivamente) cujo destino esteja dentro do pessoal do usuário atual será remapeado em relação a @file{/home/USUÁRIO}; isso inclui o mapeamento automático do diretório de trabalho atual."

#. type: example
#: guix-git/doc/guix.texi:6479
#, no-wrap
msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix shell --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:6484 guix-git/doc/guix.texi:6985
msgid "While this will limit the leaking of user identity through home paths and each of the user fields, this is only one useful component of a broader privacy/anonymity solution---not one in and of itself."
msgstr "Embora isso limite o vazamento da identidade do usuário por meio de caminhos iniciais e de cada um dos campos do usuário, esse é apenas um componente útil de uma solução mais ampla de privacidade/anonimato — não uma solução em si."

#. type: item
#: guix-git/doc/guix.texi:6485 guix-git/doc/guix.texi:6986
#, no-wrap
msgid "--no-cwd"
msgstr "--no-cwd"

#. type: table
#: guix-git/doc/guix.texi:6492 guix-git/doc/guix.texi:6993
msgid "For containers, the default behavior is to share the current working directory with the isolated container and immediately change to that directory within the container.  If this is undesirable, @option{--no-cwd} will cause the current working directory to @emph{not} be automatically shared and will change to the user's home directory within the container instead.  See also @option{--user}."
msgstr "Para contêineres, o comportamento padrão é compartilhar o diretório de trabalho atual com o contêiner isolado e mudar imediatamente para esse diretório dentro do contêiner. Se isso for indesejável, @option{--no-cwd} fará com que o diretório de trabalho atual @emph{não} seja compartilhado automaticamente e mudará para o diretório pessoal do usuário dentro do contêiner. Veja também @option{--user}."

#. type: item
#: guix-git/doc/guix.texi:6493
#, fuzzy, no-wrap
#| msgid "--disable-chroot"
msgid "--writable-root"
msgstr "--disable-chroot"

#. type: table
#: guix-git/doc/guix.texi:6496
msgid "When using @option{--container}, this option makes the root file system writable (it is read-only by default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:6497 guix-git/doc/guix.texi:6994
#: guix-git/doc/guix.texi:52440
#, no-wrap
msgid "--expose=@var{source}[=@var{target}]"
msgstr "--expose=@var{fonte}[=@var{alvo}]"

#. type: itemx
#: guix-git/doc/guix.texi:6498 guix-git/doc/guix.texi:6995
#: guix-git/doc/guix.texi:52441
#, no-wrap
msgid "--share=@var{source}[=@var{target}]"
msgstr "--share=@var{fonte}[=@var{alvo}]"

#. type: table
#: guix-git/doc/guix.texi:6504 guix-git/doc/guix.texi:7001
msgid "For containers, @option{--expose} (resp. @option{--share}) exposes the file system @var{source} from the host system as the read-only (resp. writable) file system @var{target} within the container.  If @var{target} is not specified, @var{source} is used as the target mount point in the container."
msgstr "Para contêineres, @option{--expose} (resp. @option{--share}) expõe o sistema de arquivos @var{fonte} do sistema host como o sistema de arquivos somente leitura (resp. gravável) @var{alvo} dentro do contêiner. Se @var{alvo} não for especificado, @var{fonte} será usado como o ponto de montagem de destino no contêiner."

#. type: table
#: guix-git/doc/guix.texi:6508 guix-git/doc/guix.texi:7005
msgid "The example below spawns a Guile REPL in a container in which the user's home directory is accessible read-only via the @file{/exchange} directory:"
msgstr "O exemplo abaixo gera um Guile REPL em um contêiner no qual o diretório pessoal do usuário é acessível somente para leitura por meio do diretório @file{/exchange}:"

#. type: example
#: guix-git/doc/guix.texi:6511
#, no-wrap
msgid "guix shell --container --expose=$HOME=/exchange guile -- guile\n"
msgstr "guix shell --container --expose=$HOME=/exchange guile -- guile\n"

#. type: cindex
#: guix-git/doc/guix.texi:6513
#, no-wrap
msgid "symbolic links, guix shell"
msgstr "ligações simbólicas, guix shell"

#. type: item
#: guix-git/doc/guix.texi:6514 guix-git/doc/guix.texi:7506
#, no-wrap
msgid "--symlink=@var{spec}"
msgstr "--symlink=@var{spec}"

#. type: itemx
#: guix-git/doc/guix.texi:6515 guix-git/doc/guix.texi:7507
#, no-wrap
msgid "-S @var{spec}"
msgstr "-S @var{spec}"

#. type: table
#: guix-git/doc/guix.texi:6518
msgid "For containers, create the symbolic links specified by @var{spec}, as documented in @ref{pack-symlink-option}."
msgstr "Para contêineres, crie as ligações simbólicas especificadas por @var{spec}, conforme documentado em @ref{pack-symlink-option}."

#. type: cindex
#: guix-git/doc/guix.texi:6519
#, no-wrap
msgid "file system hierarchy standard (FHS)"
msgstr "padrão de hierarquia do sistema de arquivos (FHS)"

#. type: cindex
#: guix-git/doc/guix.texi:6520
#, no-wrap
msgid "FHS (file system hierarchy standard)"
msgstr "FHS (padrão de hierarquia do sistema de arquivos)"

#. type: item
#: guix-git/doc/guix.texi:6521 guix-git/doc/guix.texi:7010
#, no-wrap
msgid "--emulate-fhs"
msgstr "--emulate-fhs"

#. type: item
#: guix-git/doc/guix.texi:6522 guix-git/doc/guix.texi:7011
#, no-wrap
msgid "-F"
msgstr "-F"

#. type: table
#: guix-git/doc/guix.texi:6528
msgid "When used with @option{--container}, emulate a @uref{https://refspecs.linuxfoundation.org/fhs.shtml, Filesystem Hierarchy Standard (FHS)} configuration within the container, providing @file{/bin}, @file{/lib}, and other directories and files specified by the FHS."
msgstr "Quando usado com @option{--container}, emule uma configuração do @uref{https://refspecs.linuxfoundation.org/fhs.shtml, padrão de hierarquia do sistema de arquivos (Filesystem Hierarchy Standard, FHS)} dentro do contêiner, fornecendo @file{/bin}, @file{/lib} e outros diretórios e arquivos especificados pelo FHS."

#. type: table
#: guix-git/doc/guix.texi:6539
msgid "As Guix deviates from the FHS specification, this option sets up the container to more closely mimic that of other GNU/Linux distributions.  This is useful for reproducing other development environments, testing, and using programs which expect the FHS specification to be followed.  With this option, the container will include a version of glibc that will read @file{/etc/ld.so.cache} within the container for the shared library cache (contrary to glibc in regular Guix usage) and set up the expected FHS directories: @file{/bin}, @file{/etc}, @file{/lib}, and @file{/usr} from the container's profile."
msgstr "Como Guix desvia da especificação FHS, esta opção configura o contêiner para imitar mais de perto o de outras distribuições GNU/Linux. Isto é útil para reproduzir outros ambientes de desenvolvimento, testar e usar programas que esperam que a especificação FHS seja seguida. Com esta opção, o contêiner incluirá uma versão do glibc que lerá @file{/etc/ld.so.cache} dentro do contêiner para o cache da biblioteca compartilhada (ao contrário do glibc no uso regular do Guix) e configurará os diretórios FHS esperados: @file{/bin}, @file{/etc}, @file{/lib} e @file{/usr} do perfil do contêiner."

#. type: cindex
#: guix-git/doc/guix.texi:6540
#, no-wrap
msgid "nested containers, for @command{guix shell}"
msgstr "contêineres aninhados, para @command{guix shell}"

#. type: cindex
#: guix-git/doc/guix.texi:6541
#, no-wrap
msgid "container nesting, for @command{guix shell}"
msgstr "aninhamento de contêineres, para @command{guix shell}"

#. type: item
#: guix-git/doc/guix.texi:6542
#, no-wrap
msgid "--nesting"
msgstr "--nesting"

#. type: itemx
#: guix-git/doc/guix.texi:6543
#, no-wrap
msgid "-W"
msgstr "-W"

#. type: table
#: guix-git/doc/guix.texi:6549
msgid "When used with @option{--container}, provide Guix @emph{inside} the container and arrange so that it can interact with the build daemon that runs outside the container.  This is useful if you want, within your isolated container, to create other containers, as in this sample session:"
msgstr "Quando usado com @option{--container}, forneça Guix @emph{dentro} do contêiner e organize para que ele possa interagir com o daemon de construção que roda fora do contêiner. Isso é útil se você quiser, dentro do seu contêiner isolado, criar outros contêineres, como nesta sessão de exemplo:"

#. type: example
#: guix-git/doc/guix.texi:6555
#, no-wrap
msgid ""
"$ guix shell -CW coreutils\n"
"[env]$ guix shell -C guile -- guile -c '(display \"hello!\\n\")'\n"
"hello!\n"
"[env]$ exit\n"
msgstr ""
"$ guix shell -CW coreutils\n"
"[env]$ guix shell -C guile -- guile -c '(display \"olá!\\n\")'\n"
"olá!\n"
"[env]$ exit\n"

#. type: table
#: guix-git/doc/guix.texi:6560
msgid "The session above starts a container with @code{coreutils} programs available in @env{PATH}.  From there, we spawn @command{guix shell} to create a @emph{nested} container that provides nothing but Guile."
msgstr "A sessão acima inicia um contêiner com programas @code{coreutils} disponíveis em @env{PATH}. A partir daí, geramos @command{guix shell} para criar um contêiner @emph{aninhado} que fornece nada além de Guile."

#. type: table
#: guix-git/doc/guix.texi:6563
msgid "Another example is evaluating a @file{guix.scm} file that is untrusted, as shown here:"
msgstr "Outro exemplo é avaliar um arquivo @file{guix.scm} que não é confiável, conforme mostrado aqui:"

#. type: example
#: guix-git/doc/guix.texi:6566
#, no-wrap
msgid "guix shell -CW -- guix build -f guix.scm\n"
msgstr "guix shell -CW -- guix build -f guix.scm\n"

#. type: table
#: guix-git/doc/guix.texi:6570
msgid "The @command{guix build} command as executed above can only access the current directory."
msgstr "O comando @command{guix build} executado acima só pode acessar o diretório atual."

#. type: table
#: guix-git/doc/guix.texi:6572
msgid "Under the hood, the @option{-W} option does several things:"
msgstr "Nos bastidores, a opção @option{-W} faz várias coisas:"

#. type: itemize
#: guix-git/doc/guix.texi:6577
msgid "map the daemon's socket (by default @file{/var/guix/daemon-socket/socket}) inside the container;"
msgstr "mapeia o socket do daemon (por padrão, @file{/var/guix/daemon-socket/socket}) dentro do contêiner;"

#. type: itemize
#: guix-git/doc/guix.texi:6581
msgid "map the whole store (by default @file{/gnu/store}) inside the container such that store items made available by nested @command{guix} invocations are visible;"
msgstr "mapeia todo o armazém (por padrão @file{/gnu/store}) dentro do contêiner de forma que os itens do armazém disponibilizados por invocações aninhadas @command{guix} sejam visíveis;"

#. type: itemize
#: guix-git/doc/guix.texi:6585
msgid "add the currently-used @command{guix} command to the profile in the container, such that @command{guix describe} returns the same state inside and outside the container;"
msgstr "adiciona o comando @command{guix} usado atualmente ao perfil no contêiner, de modo que @command{guix describe} retorne o mesmo estado dentro e fora do contêiner;"

#. type: itemize
#: guix-git/doc/guix.texi:6589
msgid "share the cache (by default @file{~/.cache/guix}) with the host, to speed up operations such as @command{guix time-machine} and @command{guix shell}."
msgstr "compartilha o cache (por padrão @file{~/.cache/guix}) com o host, para acelerar operações como @command{guix time-machine} e @command{guix shell}."

#. type: item
#: guix-git/doc/guix.texi:6591
#, no-wrap
msgid "--rebuild-cache"
msgstr "--rebuild-cache"

#. type: cindex
#: guix-git/doc/guix.texi:6592
#, no-wrap
msgid "caching, of profiles"
msgstr "cache, de perfis"

#. type: cindex
#: guix-git/doc/guix.texi:6593
#, no-wrap
msgid "caching, in @command{guix shell}"
msgstr "caching, em @command{guix shell}"

#. type: table
#: guix-git/doc/guix.texi:6599
msgid "In most cases, @command{guix shell} caches the environment so that subsequent uses are instantaneous.  Least-recently used cache entries are periodically removed.  The cache is also invalidated, when using @option{--file} or @option{--manifest}, anytime the corresponding file is modified."
msgstr "Na maioria dos casos, @command{guix shell} armazena em cache o ambiente para que os usos subsequentes sejam instantâneos. As entradas de cache menos usadas recentemente são removidas periodicamente. O cache também é invalidado, ao usar @option{--file} ou @option{--manifest}, sempre que o arquivo correspondente for modificado."

#. type: table
#: guix-git/doc/guix.texi:6605
msgid "The @option{--rebuild-cache} forces the cached environment to be refreshed.  This is useful when using @option{--file} or @option{--manifest} and the @command{guix.scm} or @command{manifest.scm} file has external dependencies, or if its behavior depends, say, on environment variables."
msgstr "O @option{--rebuild-cache} força o ambiente em cache a ser atualizado. Isso é útil ao usar @option{--file} ou @option{--manifest} e o arquivo @command{guix.scm} ou @command{manifest.scm} tem dependências externas, ou se seu comportamento depende, digamos, de variáveis de ambiente."

#. type: item
#: guix-git/doc/guix.texi:6606 guix-git/doc/guix.texi:6792
#: guix-git/doc/guix.texi:7535 guix-git/doc/guix.texi:14052
#: guix-git/doc/guix.texi:46906
#, no-wrap
msgid "--root=@var{file}"
msgstr "--root=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:6607 guix-git/doc/guix.texi:6793
#: guix-git/doc/guix.texi:7536 guix-git/doc/guix.texi:14053
#: guix-git/doc/guix.texi:46907
#, no-wrap
msgid "-r @var{file}"
msgstr "-r @var{arquivo}"

#. type: cindex
#: guix-git/doc/guix.texi:6608 guix-git/doc/guix.texi:6794
#, no-wrap
msgid "persistent environment"
msgstr "ambiente persistente"

#. type: cindex
#: guix-git/doc/guix.texi:6609 guix-git/doc/guix.texi:6795
#, no-wrap
msgid "garbage collector root, for environments"
msgstr "coletor de lixo raiz, para ambientes"

#. type: table
#: guix-git/doc/guix.texi:6612 guix-git/doc/guix.texi:6798
msgid "Make @var{file} a symlink to the profile for this environment, and register it as a garbage collector root."
msgstr "Crie @var{arquivo} como uma ligação simbólica para o perfil deste ambiente e registre-a como raiz do coletor de lixo."

#. type: table
#: guix-git/doc/guix.texi:6615 guix-git/doc/guix.texi:6801
msgid "This is useful if you want to protect your environment from garbage collection, to make it ``persistent''."
msgstr "Isso é útil se você deseja proteger seu ambiente da coleta de lixo, para torná-lo ``persistente''."

#. type: table
#: guix-git/doc/guix.texi:6621
msgid "When this option is omitted, @command{guix shell} caches profiles so that subsequent uses of the same environment are instantaneous---this is comparable to using @option{--root} except that @command{guix shell} takes care of periodically removing the least-recently used garbage collector roots."
msgstr "Quando esta opção é omitida, @command{guix shell} armazena em cache os perfis para que os usos subsequentes do mesmo ambiente sejam instantâneos — isso é comparável ao uso de @option{--root}, exceto que @command{guix shell} cuida da remoção periódica das raízes do coletor de lixo menos usadas recentemente."

#. type: table
#: guix-git/doc/guix.texi:6628
msgid "In some cases, @command{guix shell} does not cache profiles---e.g., if transformation options such as @option{--with-latest} are used.  In those cases, the environment is protected from garbage collection only for the duration of the @command{guix shell} session.  This means that next time you recreate the same environment, you could have to rebuild or re-download packages."
msgstr "Em alguns casos, @command{guix shell} não armazena perfis em cache---por exemplo, se opções de transformação como @option{--with-latest} forem usadas. Nesses casos, o ambiente é protegido da coleta de lixo somente durante a sessão @command{guix shell}. Isso significa que na próxima vez que você recriar o mesmo ambiente, poderá ter que reconstruir ou baixar novamente os pacotes."

#. type: table
#: guix-git/doc/guix.texi:6630
msgid "@xref{Invoking guix gc}, for more on GC roots."
msgstr "@xref{Invoking guix pack}, para mais sobre as raízes do coletor de lixo."

#. type: Plain text
#: guix-git/doc/guix.texi:6635
msgid "@command{guix shell} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr "@command{guix shell} também suporta todas as opções de compilação comuns que @command{guix build} suporta (@pxref{Common Build Options}), bem como opções de transformação de pacotes (@pxref{Package Transformation Options})."

#. type: section
#: guix-git/doc/guix.texi:6637
#, no-wrap
msgid "Invoking @command{guix environment}"
msgstr "Invocando @command{guix environment}"

#. type: Plain text
#: guix-git/doc/guix.texi:6643
msgid "The purpose of @command{guix environment} is to assist in creating development environments."
msgstr "O objetivo do @command{guix environment} é auxiliar na criação de ambientes de desenvolvimento."

#. type: quotation
#: guix-git/doc/guix.texi:6644
#, no-wrap
msgid "Deprecation warning"
msgstr "Aviso de descontinuação"

#. type: quotation
#: guix-git/doc/guix.texi:6648
msgid "The @command{guix environment} command is deprecated in favor of @command{guix shell}, which performs similar functions but is more convenient to use.  @xref{Invoking guix shell}."
msgstr "O comando @command{guix environment} foi descontinuado em favor do @command{guix shell}, que executa funções semelhantes, mas é mais conveniente de usar. @xref{Invoking guix shell}."

#. type: quotation
#: guix-git/doc/guix.texi:6653
msgid "Being deprecated, @command{guix environment} is slated for eventual removal, but the Guix project is committed to keeping it until May 1st, 2023.  Please get in touch with us at @email{guix-devel@@gnu.org} if you would like to discuss it."
msgstr "Sendo obsoleto, o @command{guix environment} está programado para remoção futura, mas o projeto Guix está comprometido em mantê-lo até 1º de maio de 2023. Entre em contato conosco pelo e-mail @email{guix-devel@@gnu.org} se quiser discutir o assunto."

#. type: example
#: guix-git/doc/guix.texi:6659
#, no-wrap
msgid "guix environment @var{options} @var{package}@dots{}\n"
msgstr "guix environment @var{opções} @var{pacote}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6663
msgid "The following example spawns a new shell set up for the development of GNU@tie{}Guile:"
msgstr "O exemplo a seguir gera uma nova configuração de shell para o desenvolvimento do GNU@tie{}Guile:"

#. type: example
#: guix-git/doc/guix.texi:6666
#, no-wrap
msgid "guix environment guile\n"
msgstr "guix environment guile\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6683
msgid "If the needed dependencies are not built yet, @command{guix environment} automatically builds them.  The environment of the new shell is an augmented version of the environment that @command{guix environment} was run in.  It contains the necessary search paths for building the given package added to the existing environment variables.  To create a ``pure'' environment, in which the original environment variables have been unset, use the @option{--pure} option@footnote{Users sometimes wrongfully augment environment variables such as @env{PATH} in their @file{~/.bashrc} file.  As a consequence, when @command{guix environment} launches it, Bash may read @file{~/.bashrc}, thereby introducing ``impurities'' in these environment variables.  It is an error to define such environment variables in @file{.bashrc}; instead, they should be defined in @file{.bash_profile}, which is sourced only by log-in shells.  @xref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}, for details on Bash start-up files.}."
msgstr "Se as dependências necessárias ainda não foram construídas, @command{guix environment} as constrói automaticamente. O ambiente do novo shell é uma versão aumentada do ambiente em que @command{guix environment} foi executado. Ele contém os caminhos de pesquisa necessários para construir o pacote fornecido adicionado às variáveis de ambiente existentes. Para criar um ambiente ``puro'', no qual as variáveis de ambiente originais foram desconfiguradas, use a opção @option{--pure}@footnote{Às vezes, os usuários aumentam incorretamente as variáveis de ambiente, como @env{PATH} em seu arquivo @file{~/.bashrc}. Como consequência, quando @command{guix environment} o inicia, o Bash pode ler @file{~/.bashrc}, introduzindo assim ``impurezas'' nessas variáveis de ambiente. É um erro definir essas variáveis de ambiente em @file{.bashrc}; em vez disso, elas devem ser definidas em @file{.bash_profile}, que é originado apenas por shells de login. @xref{Bash Startup Files,,, bash, Manual de referência do GNU Bash}, para detalhes sobre os arquivos de inicialização do Bash.}."

#. type: Plain text
#: guix-git/doc/guix.texi:6689
msgid "Exiting from a Guix environment is the same as exiting from the shell, and will place the user back in the old environment before @command{guix environment} was invoked.  The next garbage collection (@pxref{Invoking guix gc}) will clean up packages that were installed from within the environment and are no longer used outside of it."
msgstr "Sair de um ambiente Guix é o mesmo que sair do shell, e colocará o usuário de volta no ambiente antigo antes de @command{guix environment} ser invocado. A próxima coleta de lixo (@pxref{Invoking guix gc}) limpará os pacotes que foram instalados de dentro do ambiente e não são mais usados fora dele."

#. type: Plain text
#: guix-git/doc/guix.texi:6696
msgid "@command{guix environment} defines the @env{GUIX_ENVIRONMENT} variable in the shell it spawns; its value is the file name of the profile of this environment.  This allows users to, say, define a specific prompt for development environments in their @file{.bashrc} (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}):"
msgstr "@command{guix environment} define a variável @env{GUIX_ENVIRONMENT} no shell que ele gera; seu valor é o nome do arquivo do perfil deste ambiente. Isso permite que os usuários, digamos, definam um prompt específico para ambientes de desenvolvimento em seu @file{.bashrc} (@pxref{Bash Startup Files,,, bash, Manual de referência do GNU Bash}):"

#. type: Plain text
#: guix-git/doc/guix.texi:6715
msgid "Additionally, more than one package may be specified, in which case the union of the inputs for the given packages are used.  For example, the command below spawns a shell where all of the dependencies of both Guile and Emacs are available:"
msgstr "Além disso, mais de um pacote pode ser especificado, em cujo caso a união das entradas para os pacotes fornecidos é usada. Por exemplo, o comando abaixo gera um shell onde todas as dependências do Guile e do Emacs estão disponíveis:"

#. type: example
#: guix-git/doc/guix.texi:6718
#, no-wrap
msgid "guix environment guile emacs\n"
msgstr "guix environment guile emacs\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6723
msgid "Sometimes an interactive shell session is not desired.  An arbitrary command may be invoked by placing the @code{--} token to separate the command from the rest of the arguments:"
msgstr "Às vezes, uma sessão de shell interativa não é desejada. Um comando arbitrário pode ser invocado colocando o token @code{--} para separar o comando do resto dos argumentos:"

#. type: example
#: guix-git/doc/guix.texi:6726
#, no-wrap
msgid "guix environment guile -- make -j4\n"
msgstr "guix environment guile -- make -j4\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6732
msgid "In other situations, it is more convenient to specify the list of packages needed in the environment.  For example, the following command runs @command{python} from an environment containing Python@tie{}3 and NumPy:"
msgstr "Em outras situações, é mais conveniente especificar a lista de pacotes necessários no ambiente. Por exemplo, o comando a seguir executa @command{python} de um ambiente contendo Python@tie{}3 e NumPy:"

#. type: example
#: guix-git/doc/guix.texi:6735
#, no-wrap
msgid "guix environment --ad-hoc python-numpy python -- python3\n"
msgstr "guix environment --ad-hoc python-numpy python -- python3\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6746
msgid "Furthermore, one might want the dependencies of a package and also some additional packages that are not build-time or runtime dependencies, but are useful when developing nonetheless.  Because of this, the @option{--ad-hoc} flag is positional.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment.  Packages appearing after are interpreted as packages that will be added to the environment directly.  For example, the following command creates a Guix development environment that additionally includes Git and strace:"
msgstr "Além disso, pode-se querer as dependências de um pacote e também alguns pacotes adicionais que não são dependências de tempo de construção ou tempo de execução, mas são úteis ao desenvolver, no entanto. Por causa disso, o sinalizador @option{--ad-hoc} é posicional. Pacotes que aparecem antes de @option{--ad-hoc} são interpretados como pacotes cujas dependências serão adicionadas ao ambiente. Pacotes que aparecem depois são interpretados como pacotes que serão adicionados ao ambiente diretamente. Por exemplo, o comando a seguir cria um ambiente de desenvolvimento Guix que inclui adicionalmente Git e strace:"

#. type: example
#: guix-git/doc/guix.texi:6749
#, no-wrap
msgid "guix environment --pure guix --ad-hoc git strace\n"
msgstr "guix environment --pure guix --ad-hoc git strace\n"

#. type: Plain text
#: guix-git/doc/guix.texi:6759
msgid "Sometimes it is desirable to isolate the environment as much as possible, for maximal purity and reproducibility.  In particular, when using Guix on a host distro that is not Guix System, it is desirable to prevent access to @file{/usr/bin} and other system-wide resources from the development environment.  For example, the following command spawns a Guile REPL in a ``container'' where only the store and the current working directory are mounted:"
msgstr "Às vezes, é desejável isolar o ambiente o máximo possível, para máxima pureza e reprodutibilidade. Em particular, ao usar Guix em uma distribuição host que não seja Guix System, é desejável impedir o acesso a @file{/usr/bin} e outros recursos de todo o sistema do ambiente de desenvolvimento. Por exemplo, o comando a seguir gera um Guile REPL em um ``contêiner'' onde apenas o armazém e o diretório de trabalho atual são montados:"

#. type: example
#: guix-git/doc/guix.texi:6762
#, no-wrap
msgid "guix environment --ad-hoc --container guile -- guile\n"
msgstr "guix environment --ad-hoc --container guile -- guile\n"

#. type: quotation
#: guix-git/doc/guix.texi:6766
msgid "The @option{--container} option requires Linux-libre 3.19 or newer."
msgstr "A opção @option{--container} requer Linux-libre 3.19 ou mais recente."

#. type: cindex
#: guix-git/doc/guix.texi:6768
#, no-wrap
msgid "certificates"
msgstr "certificados"

#. type: Plain text
#: guix-git/doc/guix.texi:6775
msgid "Another typical use case for containers is to run security-sensitive applications such as a web browser.  To run Eolie, we must expose and share some files and directories; we include @code{nss-certs} and expose @file{/etc/ssl/certs/} for HTTPS authentication; finally we preserve the @env{DISPLAY} environment variable since containerized graphical applications won't display without it."
msgstr "Outro caso de uso típico para contêineres é executar aplicativos sensíveis à segurança, como um navegador da web. Para executar o Eolie, precisamos expor e compartilhar alguns arquivos e diretórios; incluímos @code{nss-certs} e expomos @file{/etc/ssl/certs/} para autenticação HTTPS; finalmente, preservamos a variável de ambiente @env{DISPLAY}, pois os aplicativos gráficos em contêiner não serão exibidos sem ela."

#. type: example
#: guix-git/doc/guix.texi:6782
#, no-wrap
msgid ""
"guix environment --preserve='^DISPLAY$' --container --network \\\n"
"  --expose=/etc/machine-id \\\n"
"  --expose=/etc/ssl/certs/ \\\n"
"  --share=$HOME/.local/share/eolie/=$HOME/.local/share/eolie/ \\\n"
"  --ad-hoc eolie nss-certs dbus --  eolie\n"
msgstr ""
"guix environment --preserve='^DISPLAY$' --container --network \\\n"
"  --expose=/etc/machine-id \\\n"
"  --expose=/etc/ssl/certs/ \\\n"
"  --share=$HOME/.local/share/eolie/=$HOME/.local/share/eolie/ \\\n"
"  --ad-hoc eolie nss-certs dbus --  eolie\n"

#. type: table
#: guix-git/doc/guix.texi:6791
msgid "Set up the environment and check whether the shell would clobber environment variables.  @xref{Invoking guix shell, @option{--check}}, for more info."
msgstr "Configure o ambiente e verifique se o shell sobrecarregaria as variáveis de ambiente. @xref{Invoking guix shell, @option{--check}}, para mais informações."

#. type: table
#: guix-git/doc/guix.texi:6807
msgid "When this option is omitted, the environment is protected from garbage collection only for the duration of the @command{guix environment} session.  This means that next time you recreate the same environment, you could have to rebuild or re-download packages.  @xref{Invoking guix gc}, for more on GC roots."
msgstr "Quando esta opção pe omitida, o ambiente é protegido da coleta de lixo apenas pela duração da sessão do @command{guix environment}.  Isso significa que na próxima vez que você recriar o mesmo ambiente, você tpoderia ter que reconstruir ou refazer o download dos pacotes.  @xref{Invoking guix gc}, para mais sobre GC roots."

#. type: example
#: guix-git/doc/guix.texi:6817
#, no-wrap
msgid "guix environment -e '(@@ (gnu packages maths) petsc-openmpi)'\n"
msgstr "guix environment -e '(@@ (gnu packages maths) petsc-openmpi)'\n"

#. type: example
#: guix-git/doc/guix.texi:6826
#, no-wrap
msgid "guix environment --ad-hoc -e '(@@ (gnu) %base-packages)'\n"
msgstr "guix environment --ad-hoc -e '(@@ (gnu) %base-packages)'\n"

#. type: example
#: guix-git/doc/guix.texi:6835
#, no-wrap
msgid "guix environment --ad-hoc -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"
msgstr "guix environment --ad-hoc -e '(list (@@ (gnu packages bash) bash) \"include\")'\n"

#. type: item
#: guix-git/doc/guix.texi:6837
#, no-wrap
msgid "--load=@var{file}"
msgstr "--load=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:6838
#, no-wrap
msgid "-l @var{file}"
msgstr "-l @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:6841
msgid "Create an environment for the package or list of packages that the code within @var{file} evaluates to."
msgstr "Crie um ambiente para o pacote ou lista de pacotes que o código dentro de @var{arquivo} avalia."

#. type: table
#: guix-git/doc/guix.texi:6862
msgid "@xref{shell-export-manifest, @command{guix shell --export-manifest}}, for information on how to ``convert'' command-line options into a manifest."
msgstr "@xref{shell-export-manifest, @command{guix shell --export-manifest}}, para obter informações sobre como ``converter'' opções de linha de comando em um manifesto."

#. type: item
#: guix-git/doc/guix.texi:6863
#, no-wrap
msgid "--ad-hoc"
msgstr "--ad-hoc"

#. type: table
#: guix-git/doc/guix.texi:6868
msgid "Include all specified packages in the resulting environment, as if an @i{ad hoc} package were defined with them as inputs.  This option is useful for quickly creating an environment without having to write a package expression to contain the desired inputs."
msgstr "Inclui todos os pacotes especificados no ambiente resultante, como se um pacote @i{ad hoc} fosse definido com eles como entradas. Esta opção é útil para criar rapidamente um ambiente sem ter que escrever uma expressão de pacote para conter as entradas desejadas."

#. type: table
#: guix-git/doc/guix.texi:6870
msgid "For instance, the command:"
msgstr "Por exemplo, o comando:"

#. type: example
#: guix-git/doc/guix.texi:6873
#, no-wrap
msgid "guix environment --ad-hoc guile guile-sdl -- guile\n"
msgstr "guix environment --ad-hoc guile guile-sdl -- guile\n"

#. type: table
#: guix-git/doc/guix.texi:6877
msgid "runs @command{guile} in an environment where Guile and Guile-SDL are available."
msgstr "executa @command{guile} em um ambiente onde Guile e Guile-SDL estão disponíveis."

#. type: table
#: guix-git/doc/guix.texi:6882
msgid "Note that this example implicitly asks for the default output of @code{guile} and @code{guile-sdl}, but it is possible to ask for a specific output---e.g., @code{glib:bin} asks for the @code{bin} output of @code{glib} (@pxref{Packages with Multiple Outputs})."
msgstr "Observe que este exemplo solicita implicitamente a saída padrão de @code{guile} e @code{guile-sdl}, mas é possível solicitar uma saída específica — por exemplo, @code{glib:bin} solicita a saída @code{bin} de @code{glib} (@pxref{Packages with Multiple Outputs})."

#. type: table
#: guix-git/doc/guix.texi:6888
msgid "This option may be composed with the default behavior of @command{guix environment}.  Packages appearing before @option{--ad-hoc} are interpreted as packages whose dependencies will be added to the environment, the default behavior.  Packages appearing after are interpreted as packages that will be added to the environment directly."
msgstr "Esta opção pode ser composta com o comportamento padrão de @command{guix environment}. Pacotes que aparecem antes de @option{--ad-hoc} são interpretados como pacotes cujas dependências serão adicionadas ao ambiente, o comportamento padrão. Pacotes que aparecem depois são interpretados como pacotes que serão adicionados ao ambiente diretamente."

#. type: example
#: guix-git/doc/guix.texi:6910
#, no-wrap
msgid ""
"guix environment --pure --preserve=^SLURM --ad-hoc openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"
msgstr ""
"guix environment --pure --preserve=^SLURM --ad-hoc openmpi @dots{} \\\n"
"  -- mpirun @dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:6953
msgid "For containers, link the environment profile to @file{~/.guix-profile} within the container and set @code{GUIX_ENVIRONMENT} to that.  This is equivalent to making @file{~/.guix-profile} a symlink to the actual profile within the container.  Linking will fail and abort the environment if the directory already exists, which will certainly be the case if @command{guix environment} was invoked in the user's home directory."
msgstr "Para contêineres, vincule o perfil do ambiente a @file{~/.guix-profile} dentro do contêiner e defina @code{GUIX_ENVIRONMENT} para isso. Isso é equivalente a tornar @file{~/.guix-profile} uma ligação simbólica para o perfil real dentro do contêiner. A vinculação falhará e abortará o ambiente se o diretório já existir, o que certamente será o caso se @command{guix environment} foi invocado no diretório pessoal do usuário."

#. type: example
#: guix-git/doc/guix.texi:6980
#, no-wrap
msgid ""
"# will expose paths as /home/foo/wd, /home/foo/test, and /home/foo/target\n"
"cd $HOME/wd\n"
"guix environment --container --user=foo \\\n"
"     --expose=$HOME/test \\\n"
"     --expose=/tmp/target=$HOME/target\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:7008
#, no-wrap
msgid "guix environment --container --expose=$HOME=/exchange --ad-hoc guile -- guile\n"
msgstr "guix environment --container --expose=$HOME=/exchange --ad-hoc guile -- guile\n"

#. type: table
#: guix-git/doc/guix.texi:7025
msgid "For containers, emulate a Filesystem Hierarchy Standard (FHS)  configuration within the container, see @uref{https://refspecs.linuxfoundation.org/fhs.shtml, the official specification}.  As Guix deviates from the FHS specification, this option sets up the container to more closely mimic that of other GNU/Linux distributions.  This is useful for reproducing other development environments, testing, and using programs which expect the FHS specification to be followed.  With this option, the container will include a version of @code{glibc} which will read @code{/etc/ld.so.cache} within the container for the shared library cache (contrary to @code{glibc} in regular Guix usage) and set up the expected FHS directories: @code{/bin}, @code{/etc}, @code{/lib}, and @code{/usr} from the container's profile."
msgstr "Para contêineres, emule uma configuração Filesystem Hierarchy Standard (FHS) dentro do contêiner, veja @uref{https://refspecs.linuxfoundation.org/fhs.shtml, a especificação oficial}. Como o Guix se desvia da especificação FHS, esta opção configura o contêiner para imitar mais de perto o de outras distribuições GNU/Linux. Isto é útil para reproduzir outros ambientes de desenvolvimento, testar e usar programas que esperam que a especificação FHS seja seguida. Com esta opção, o contêiner incluirá uma versão de @code{glibc} que lerá @code{/etc/ld.so.cache} dentro do contêiner para o cache da biblioteca compartilhada (ao contrário de @code{glibc} no uso regular do Guix) e configurará os diretórios FHS esperados: @code{/bin}, @code{/etc}, @code{/lib} e @code{/usr} do perfil do contêiner."

#. type: Plain text
#: guix-git/doc/guix.texi:7032
msgid "@command{guix environment} also supports all of the common build options that @command{guix build} supports (@pxref{Common Build Options}) as well as package transformation options (@pxref{Package Transformation Options})."
msgstr "@command{guix environment} também oferece suporte a todas as opções de compilação comuns que @command{guix build} oferece suporte (@pxref{Common Build Options}), bem como opções de transformação de pacotes (@pxref{Package Transformation Options})."

#. type: section
#: guix-git/doc/guix.texi:7034
#, no-wrap
msgid "Invoking @command{guix pack}"
msgstr "Invocando @command{guix pack}"

#. type: command{#1}
#: guix-git/doc/guix.texi:7036
#, no-wrap
msgid "guix pack"
msgstr "guix pack"

#. type: Plain text
#: guix-git/doc/guix.texi:7042
msgid "Occasionally you want to pass software to people who are not (yet!)  lucky enough to be using Guix.  You'd tell them to run @command{guix package -i @var{something}}, but that's not possible in this case.  This is where @command{guix pack} comes in."
msgstr "Ocasionalmente você quer passar software para pessoas que não têm (ainda!) a sorte de usar Guix. Você diria para elas executarem @command{guix package -i @var{algo}}, mas isso não é possível neste caso. É aqui que @command{guix pack} entra."

#. type: quotation
#: guix-git/doc/guix.texi:7047
msgid "If you are looking for ways to exchange binaries among machines that already run Guix, @pxref{Invoking guix copy}, @ref{Invoking guix publish}, and @ref{Invoking guix archive}."
msgstr "Se você estiver procurando maneiras de trocar binários entre máquinas que já executam Guix, @pxref{Invoking guix copy}, @ref{Invoking guix publish} e @ref{Invoking guix archive}."

#. type: cindex
#: guix-git/doc/guix.texi:7049
#, no-wrap
msgid "pack"
msgstr "pack"

#. type: cindex
#: guix-git/doc/guix.texi:7050
#, no-wrap
msgid "bundle"
msgstr "embalagem"

#. type: cindex
#: guix-git/doc/guix.texi:7051
#, no-wrap
msgid "application bundle"
msgstr "embalagem de aplicativos"

#. type: cindex
#: guix-git/doc/guix.texi:7052
#, no-wrap
msgid "software bundle"
msgstr "embalagem de software"

#. type: Plain text
#: guix-git/doc/guix.texi:7061
msgid "The @command{guix pack} command creates a shrink-wrapped @dfn{pack} or @dfn{software bundle}: it creates a tarball or some other archive containing the binaries of the software you're interested in, and all its dependencies.  The resulting archive can be used on any machine that does not have Guix, and people can run the exact same binaries as those you have with Guix.  The pack itself is created in a bit-reproducible fashion, so anyone can verify that it really contains the build results that you pretend to be shipping."
msgstr "O comando @command{guix pack} cria uma @dfn{embalagem de software} encapsulado: ele cria um tarball ou algum outro arquivo contendo os binários do software em que você está interessado e todas as suas dependências. O arquivo resultante pode ser usado em qualquer máquina que não tenha Guix, e as pessoas podem executar exatamente os mesmos binários que você tem com Guix. A embalagem em si é criada de forma reproduzível em bits, para que qualquer um possa verificar se ela realmente contém os resultados da compilação que você pretende enviar."

#. type: Plain text
#: guix-git/doc/guix.texi:7064
msgid "For example, to create a bundle containing Guile, Emacs, Geiser, and all their dependencies, you can run:"
msgstr "Por exemplo, para criar uma embalagem contenda Guile, Emacs, Geiser e todas as suas dependências, você pode executar:"

#. type: example
#: guix-git/doc/guix.texi:7069
#, no-wrap
msgid ""
"$ guix pack guile emacs emacs-geiser\n"
"@dots{}\n"
"/gnu/store/@dots{}-pack.tar.gz\n"
msgstr ""
"$ guix pack guile emacs emacs-geiser\n"
"@dots{}\n"
"/gnu/store/@dots{}-pack.tar.gz\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7077
msgid "The result here is a tarball containing a @file{/gnu/store} directory with all the relevant packages.  The resulting tarball contains a @dfn{profile} with the three packages of interest; the profile is the same as would be created by @command{guix package -i}.  It is this mechanism that is used to create Guix's own standalone binary tarball (@pxref{Binary Installation})."
msgstr "O resultado aqui é um tarball contendo um diretório @file{/gnu/store} com todos os pacotes relevantes. O tarball resultante contém um @dfn{perfil} com os três pacotes de interesse; o perfil é o mesmo que seria criado por @command{guix package -i}. É esse mecanismo que é usado para criar o próprio tarball binário autônomo do Guix (@pxref{Binary Installation})."

#. type: Plain text
#: guix-git/doc/guix.texi:7082
msgid "Users of this pack would have to run @file{/gnu/store/@dots{}-profile/bin/guile} to run Guile, which you may find inconvenient.  To work around it, you can create, say, a @file{/opt/gnu/bin} symlink to the profile:"
msgstr "Usuários desta embalagem teriam que executar @file{/gnu/store/@dots{}-profile/bin/guile} para executar o Guile, o que você pode achar inconveniente. Para contornar isso, você pode criar, digamos, uma ligação simbólica @file{/opt/gnu/bin} para o perfil:"

#. type: example
#: guix-git/doc/guix.texi:7085
#, no-wrap
msgid "guix pack -S /opt/gnu/bin=bin guile emacs emacs-geiser\n"
msgstr "guix pack -S /opt/gnu/bin=bin guile emacs emacs-geiser\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7089
msgid "That way, users can happily type @file{/opt/gnu/bin/guile} and enjoy."
msgstr "Dessa forma, os usuários podem digitar @file{/opt/gnu/bin/guile} e aproveitar."

#. type: cindex
#: guix-git/doc/guix.texi:7090
#, no-wrap
msgid "relocatable binaries, with @command{guix pack}"
msgstr "binários relocáveis, com @command{guix pack}"

#. type: Plain text
#: guix-git/doc/guix.texi:7098
msgid "What if the recipient of your pack does not have root privileges on their machine, and thus cannot unpack it in the root file system? In that case, you will want to use the @option{--relocatable} option (see below).  This option produces @dfn{relocatable binaries}, meaning they can be placed anywhere in the file system hierarchy: in the example above, users can unpack your tarball in their home directory and directly run @file{./opt/gnu/bin/guile}."
msgstr "E se o destinatário do sua embalagem não tiver privilégios de root na máquina dele e, portanto, não puder descompactá-lo no sistema de arquivos raiz? Nesse caso, você vai querer usar a opção @option{--relocatable} (veja abaixo). Essa opção produz @dfn{binários relocáveis}, o que significa que eles podem ser colocados em qualquer lugar na hierarquia do sistema de arquivos: no exemplo acima, os usuários podem descompactar seu tarball no diretório pessoal deles e executar diretamente @file{./opt/gnu/bin/guile}."

#. type: cindex
#: guix-git/doc/guix.texi:7099
#, no-wrap
msgid "Docker, build an image with guix pack"
msgstr "Docker, construa uma imagem com guix pack"

#. type: Plain text
#: guix-git/doc/guix.texi:7102
msgid "Alternatively, you can produce a pack in the Docker image format using the following command:"
msgstr "Como alternativa, você pode produzir uma embalagem no formato de imagem do Docker usando o seguinte comando:"

#. type: example
#: guix-git/doc/guix.texi:7105
#, no-wrap
msgid "guix pack -f docker -S /bin=bin guile guile-readline\n"
msgstr "guix pack -f docker -S /bin=bin guile guile-readline\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7110
msgid "The result is a tarball that can be passed to the @command{docker load} command, followed by @code{docker run}:"
msgstr "O resultado é um tarball que pode ser passado para o comando @command{docker load}, seguido por @code{docker run}:"

#. type: example
#: guix-git/doc/guix.texi:7114
#, no-wrap
msgid ""
"docker load < @var{file}\n"
"docker run -ti guile-guile-readline /bin/guile\n"
msgstr ""
"docker load < @var{arquivo}\n"
"docker run -ti guile-guile-readline /bin/guile\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7121
msgid "where @var{file} is the image returned by @command{guix pack}, and @code{guile-guile-readline} is its ``image tag''.  See the @uref{https://docs.docker.com/engine/reference/commandline/load/, Docker documentation} for more information."
msgstr "onde @var{arquivo} é a imagem retornada por @command{guix pack}, e @code{guile-guile-readline} é sua ``image tag''. Veja @uref{https://docs.docker.com/engine/reference/commandline/load/, documentação do Docker} para mais informações."

#. type: cindex
#: guix-git/doc/guix.texi:7122
#, no-wrap
msgid "Singularity, build an image with guix pack"
msgstr "Singularity, construa uma imagem com guix pack"

#. type: cindex
#: guix-git/doc/guix.texi:7123
#, no-wrap
msgid "SquashFS, build an image with guix pack"
msgstr "SquashFS, construa uma imagem com guix pack"

#. type: Plain text
#: guix-git/doc/guix.texi:7126
msgid "Yet another option is to produce a SquashFS image with the following command:"
msgstr "Outra opção é produzir uma imagem SquashFS com o seguinte comando:"

#. type: example
#: guix-git/doc/guix.texi:7129
#, no-wrap
msgid "guix pack -f squashfs bash guile emacs emacs-geiser\n"
msgstr "guix pack -f squashfs bash guile emacs emacs-geiser\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7137
msgid "The result is a SquashFS file system image that can either be mounted or directly be used as a file system container image with the @uref{https://www.sylabs.io/docs/, Singularity container execution environment}, using commands like @command{singularity shell} or @command{singularity exec}."
msgstr "O resultado é uma imagem do sistema de arquivos SquashFS que pode ser montada ou usada diretamente como uma imagem de contêiner do sistema de arquivos com o @uref{https://www.sylabs.io/docs/, ambiente de execução do contêiner Singularity}, usando comandos como @command{singularity shell} ou @command{singularity exec}."

#. type: cindex
#: guix-git/doc/guix.texi:7138 guix-git/doc/guix.texi:7265
#, fuzzy, no-wrap
#| msgid "relocatable binaries, with @command{guix pack}"
msgid "AppImage, create an AppImage file with @command{guix pack}"
msgstr "binários relocáveis, com @command{guix pack}"

#. type: Plain text
#: guix-git/doc/guix.texi:7142
msgid "Another format internally based on SquashFS is @uref{https://appimage.org/, AppImage}. An AppImage file can be created and executed without any special privileges:"
msgstr "Outro formato internamente baseado em SquashFS é o @uref{https://appimage.org/, AppImage}. Um arquivo de AppImage pode ser criado e executado sem qualquer provilégio especial:"

#. type: example
#: guix-git/doc/guix.texi:7146
#, fuzzy, no-wrap
#| msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgid ""
"file=$(guix pack -f appimage --entry-point=bin/guile guile)\n"
"$file --help\n"
msgstr "guix pack -f docker --entry-point=bin/guile guile\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7149
msgid "Several command-line options allow you to customize your pack:"
msgstr "Várias opções de linha de comando permitem que você personalize sua embalagem:"

#. type: table
#: guix-git/doc/guix.texi:7154
msgid "Produce a pack in the given @var{format}."
msgstr "Produza uma embalagem no @var{formato} fornecido."

#. type: table
#: guix-git/doc/guix.texi:7156
msgid "The available formats are:"
msgstr "Os formatos disponíveis são:"

#. type: item
#: guix-git/doc/guix.texi:7158
#, no-wrap
msgid "tarball"
msgstr "tarball"

#. type: table
#: guix-git/doc/guix.texi:7161
msgid "This is the default format.  It produces a tarball containing all the specified binaries and symlinks."
msgstr "Este é o formato padrão. Ele produz um tarball contendo todos os binários e ligações simbólicas especificados."

#. type: item
#: guix-git/doc/guix.texi:7162
#, no-wrap
msgid "docker"
msgstr "docker"

#. type: table
#: guix-git/doc/guix.texi:7171
msgid "This produces a tarball that follows the @uref{https://github.com/docker/docker/blob/master/image/spec/v1.2.md, Docker Image Specification}.  By default, the ``repository name'' as it appears in the output of the @command{docker images} command is computed from package names passed on the command line or in the manifest file.  Alternatively, the ``repository name'' can also be configured via the @option{--image-tag} option.  Refer to @option{--help-docker-format} for more information on such advanced options."
msgstr "Isso produz um tarball que segue o @uref{https://github.com/docker/docker/blob/master/image/spec/v1.2.md, Docker Image Specification}. Por padrão, o ``nome do repositório'' como aparece na saída do comando @command{docker images} é computado a partir de nomes de pacotes passados na linha de comando ou no arquivo manifesto. Como alternativa, o ``nome do repositório'' também pode ser configurado por meio da opção @option{--image-tag}. Consulte @option{--help-docker-format} para obter mais informações sobre essas opções avançadas."

#. type: item
#: guix-git/doc/guix.texi:7172
#, no-wrap
msgid "squashfs"
msgstr "squashfs"

#. type: table
#: guix-git/doc/guix.texi:7176
msgid "This produces a SquashFS image containing all the specified binaries and symlinks, as well as empty mount points for virtual file systems like procfs."
msgstr "Isso produz uma imagem SquashFS contendo todos os binários e ligações simbólicas especificados, bem como pontos de montagem vazios para sistemas de arquivos virtuais como procfs."

#. type: quotation
#: guix-git/doc/guix.texi:7182
msgid "Singularity @emph{requires} you to provide @file{/bin/sh} in the image.  For that reason, @command{guix pack -f squashfs} always implies @code{-S /bin=bin}.  Thus, your @command{guix pack} invocation must always start with something like:"
msgstr "Singularity @emph{requer} que você forneça @file{/bin/sh} na imagem. Por esse motivo, @command{guix pack -f squashfs} sempre implica @code{-S /bin=bin}. Portanto, sua invocação @command{guix pack} deve sempre começar com algo como:"

#. type: example
#: guix-git/doc/guix.texi:7185
#, no-wrap
msgid "guix pack -f squashfs bash @dots{}\n"
msgstr "guix pack -f squashfs bash @dots{}\n"

#. type: quotation
#: guix-git/doc/guix.texi:7190
msgid "If you forget the @code{bash} (or similar) package, @command{singularity run} and @command{singularity exec} will fail with an unhelpful ``no such file or directory'' message."
msgstr "Se você esquecer o pacote @code{bash} (ou similar), @command{singularity run} e @command{singularity exec} falharão com uma mensagem inútil ``nenhum arquivo ou diretório''."

#. type: item
#: guix-git/doc/guix.texi:7192
#, no-wrap
msgid "deb"
msgstr "deb"

#. type: cindex
#: guix-git/doc/guix.texi:7193
#, no-wrap
msgid "Debian, build a .deb package with guix pack"
msgstr "Debian, construa um pacote .deb com guix pack"

#. type: table
#: guix-git/doc/guix.texi:7201
msgid "This produces a Debian archive (a package with the @samp{.deb} file extension) containing all the specified binaries and symbolic links, that can be installed on top of any dpkg-based GNU(/Linux) distribution.  Advanced options can be revealed via the @option{--help-deb-format} option.  They allow embedding control files for more fine-grained control, such as activating specific triggers or providing a maintainer configure script to run arbitrary setup code upon installation."
msgstr "Isso produz um arquivo Debian (um pacote com a extensão de arquivo @samp{.deb}) contendo todos os binários e ligações simbólicas especificados, que podem ser instalados em cima de qualquer distribuição GNU(/Linux) baseada em dpkg. Opções avançadas podem ser reveladas por meio da opção @option{--help-deb-format}. Elas permitem incorporar arquivos de controle para um controle mais refinado, como ativar gatilhos específicos ou fornecer um script de configuração do mantenedor para executar código de configuração arbitrário na instalação."

#. type: example
#: guix-git/doc/guix.texi:7204
#, no-wrap
msgid "guix pack -f deb -C xz -S /usr/bin/hello=bin/hello hello\n"
msgstr "guix pack -f deb -C xz -S /usr/bin/hello=bin/hello hello\n"

#. type: quotation
#: guix-git/doc/guix.texi:7212
msgid "Because archives produced with @command{guix pack} contain a collection of store items and because each @command{dpkg} package must not have conflicting files, in practice that means you likely won't be able to install more than one such archive on a given system.  You can nonetheless pack as many Guix packages as you want in one such archive."
msgstr "Como os arquivos produzidos com @command{guix pack} contêm uma coleção de itens de armazém e como cada pacote @command{dpkg} não deve ter arquivos conflitantes, na prática isso significa que você provavelmente não conseguirá instalar mais de um desses arquivos em um dado sistema. Você pode, no entanto, empacotar quantos pacotes Guix quiser em um desses arquivos."

#. type: quotation
#: guix-git/doc/guix.texi:7220
msgid "@command{dpkg} will assume ownership of any files contained in the pack that it does @emph{not} know about.  It is unwise to install Guix-produced @samp{.deb} files on a system where @file{/gnu/store} is shared by other software, such as a Guix installation or other, non-deb packs."
msgstr "@command{dpkg} assumirá a propriedade de quaisquer arquivos contidos no pacote que ele @emph{não} saiba. Não é sensato instalar arquivos @samp{.deb} produzidos pelo Guix em um sistema onde @file{/gnu/store} é compartilhado por outro software, como uma instalação do Guix ou outras embalagens não deb."

#. type: item
#: guix-git/doc/guix.texi:7222
#, no-wrap
msgid "rpm"
msgstr "rpm"

#. type: cindex
#: guix-git/doc/guix.texi:7223
#, no-wrap
msgid "RPM, build an RPM archive with guix pack"
msgstr "RPM, construa um arquivo RPM com guix pack"

#. type: table
#: guix-git/doc/guix.texi:7229
msgid "This produces an RPM archive (a package with the @samp{.rpm} file extension) containing all the specified binaries and symbolic links, that can be installed on top of any RPM-based GNU/Linux distribution.  The RPM format embeds checksums for every file it contains, which the @command{rpm} command uses to validate the integrity of the archive."
msgstr "Isso produz um arquivo RPM (um pacote com a extensão de arquivo @samp{.rpm}) contendo todos os binários e ligações simbólicas especificados, que podem ser instalados em cima de qualquer distribuição GNU/Linux baseada em RPM. O formato RPM incorpora somas de verificação para cada arquivo que ele contém, que o comando @command{rpm} usa para validar a integridade do arquivo."

#. type: table
#: guix-git/doc/guix.texi:7234
msgid "Advanced RPM-related options are revealed via the @option{--help-rpm-format} option.  These options allow embedding maintainer scripts that can run before or after the installation of the RPM archive, for example."
msgstr "Opções avançadas relacionadas a RPM são reveladas por meio da opção @option{--help-rpm-format}. Essas opções permitem incorporar scripts de mantenedor que podem ser executados antes ou depois da instalação do arquivo RPM, por exemplo."

#. type: table
#: guix-git/doc/guix.texi:7238
msgid "The RPM format supports relocatable packages via the @option{--prefix} option of the @command{rpm} command, which can be handy to install an RPM package to a specific prefix."
msgstr "O formato RPM suporta pacotes relocáveis por meio da opção @option{--prefix} do comando @command{rpm}, o que pode ser útil para instalar um pacote RPM em um prefixo específico."

#. type: example
#: guix-git/doc/guix.texi:7241
#, no-wrap
msgid "guix pack -f rpm -R -C xz -S /usr/bin/hello=bin/hello hello\n"
msgstr "guix pack -f rpm -R -C xz -S /usr/bin/hello=bin/hello hello\n"

#. type: example
#: guix-git/doc/guix.texi:7245
#, no-wrap
msgid "sudo rpm --install --prefix=/opt /gnu/store/...-hello.rpm\n"
msgstr "sudo rpm --install --prefix=/opt /gnu/store/...-hello.rpm\n"

#. type: quotation
#: guix-git/doc/guix.texi:7252
msgid "Contrary to Debian packages, conflicting but @emph{identical} files in RPM packages can be installed simultaneously, which means multiple @command{guix pack}-produced RPM packages can usually be installed side by side without any problem."
msgstr "Ao contrário dos pacotes Debian, arquivos conflitantes, mas @emph{idênticos} em pacotes RPM podem ser instalados simultaneamente, o que significa que vários pacotes RPM produzidos pelo @command{guix pack} geralmente podem ser instalados lado a lado sem nenhum problema."

#. type: quotation
#: guix-git/doc/guix.texi:7262
msgid "@command{rpm} assumes ownership of any files contained in the pack, which means it will remove @file{/gnu/store} upon uninstalling a Guix-generated RPM package, unless the RPM package was installed with the @option{--prefix} option of the @command{rpm} command.  It is unwise to install Guix-produced @samp{.rpm} packages on a system where @file{/gnu/store} is shared by other software, such as a Guix installation or other, non-rpm packs."
msgstr "@command{rpm} assume a propriedade de quaisquer arquivos contidos no pacote, o que significa que ele removerá @file{/gnu/store} ao desinstalar um pacote RPM gerado pelo Guix, a menos que o pacote RPM tenha sido instalado com a opção @option{--prefix} do comando @command{rpm}. Não é sensato instalar pacotes @samp{.rpm} produzidos pelo Guix em um sistema onde @file{/gnu/store} é compartilhado por outro software, como uma instalação do Guix ou outras embalagens não rpm."

#. type: item
#: guix-git/doc/guix.texi:7264
#, fuzzy, no-wrap
#| msgid "image"
msgid "appimage"
msgstr "image"

#. type: table
#: guix-git/doc/guix.texi:7272
msgid "This produces an @uref{https://appimage.org/, AppImage file} with the @samp{.AppImage} extension.  AppImage is a SquashFS volume prefixed with a runtime that mounts the SquashFS file system and executes the binary provided with @option{--entry-point}.  This results in a self-contained archive that bundles the software and all its requirements into a single file.  When the file is made executable it runs the packaged software."
msgstr "Isto produz um @uref{https://appimage.org/, arquivo AppImage} com a extensão @samp{.AppImage}.  Um AppImage é um volume SquashFS prefixado com uma execução que monta o sistema de arquivo SquashFS e executa o binário criado com o @option{--entry-point}.  Isso resulta num arquivo auto-contido que agrupa o software e todos os requisitos num único arquivo.  Quando o mesmo é executado, ele roda o software empacotado."

#. type: example
#: guix-git/doc/guix.texi:7275
#, fuzzy, no-wrap
#| msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgid "guix pack -f appimage --entry-point=bin/vlc vlc\n"
msgstr "guix pack -f docker --entry-point=bin/guile guile\n"

#. type: table
#: guix-git/doc/guix.texi:7281
msgid "The runtime used by AppImages invokes the @command{fusermount3} command to mount the image quickly.  If that command is unavailable, the AppImage fails to run, but it can still be started by passing the @option{--appimage-extract-and-run} flag."
msgstr "A execução usada pelos AppImages invoca o comando @command{fusermount3} para montar a imagem rapidamente.  Se o comando está indiponível, o AppImage falha em executar, mas ele ainda pode ser iniciado com a opção @option{--appimage-extract-and-run}."

#. type: quotation
#: guix-git/doc/guix.texi:7287
msgid "When building an AppImage, always @emph{pass} the @option{--relocatable} option (or @option{-R}, or @option{-RR}) to make sure the image can be used on systems where Guix is not installed.  A warning is printed when this option is not used."
msgstr "Ao construir um AppImage, sempre @emph{passe} a opção @option{--relocatable} (ou @option{-R}, ou a @option{-RR}) para ter certeza que a imagem pode ser usada em sistemas onde o Guix não está instalado.  Um aviso é impresso quando esta opção não é usada."

#. type: example
#: guix-git/doc/guix.texi:7291
#, fuzzy, no-wrap
#| msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgid "guix pack -f appimage --entry-point=bin/hello --relocatable hello\n"
msgstr "guix pack -f docker --entry-point=bin/guile guile\n"

#. type: quotation
#: guix-git/doc/guix.texi:7298
msgid "The resulting AppImage does not conform to the complete standard as it currently does not contain a @file{.DirIcon} file.  This does not impact functionality of the AppImage itself, but possibly that of software used to manage AppImages."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:7304
msgid "As the generated AppImage packages the complete dependency graph, it will be larger than comparable AppImage files found online, which depend on host system libraries."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7308
#, no-wrap
msgid "relocatable binaries"
msgstr "binários realocáveis"

#. type: item
#: guix-git/doc/guix.texi:7309
#, no-wrap
msgid "--relocatable"
msgstr "--relocatable"

#. type: table
#: guix-git/doc/guix.texi:7313
msgid "Produce @dfn{relocatable binaries}---i.e., binaries that can be placed anywhere in the file system hierarchy and run from there."
msgstr "Produza @dfn{binários relocáveis}---ou seja, binários que podem ser colocados em qualquer lugar na hierarquia do sistema de arquivos e executados a partir daí."

#. type: table
#: guix-git/doc/guix.texi:7321
msgid "When this option is passed once, the resulting binaries require support for @dfn{user namespaces} in the kernel Linux; when passed @emph{twice}@footnote{Here's a trick to memorize it: @code{-RR}, which adds PRoot support, can be thought of as the abbreviation of ``Really Relocatable''.  Neat, isn't it?}, relocatable binaries fall to back to other techniques if user namespaces are unavailable, and essentially work anywhere---see below for the implications."
msgstr "Quando essa opção é passada uma vez, os binários resultantes requerem suporte para @dfn{user namespaces} no kernel Linux; quando passada @emph{duas vezes}@footnote{Aqui vai um truque para memorizá-la: @code{-RR}, que adiciona suporte a PRoot, pode ser pensado como a abreviação de ``Really Relocatable''. Legal, não é?}, binários relocáveis recorrem a outras técnicas se os namespaces de usuário não estiverem disponíveis, e essencialmente funcionam em qualquer lugar---veja abaixo as implicações."

#. type: table
#: guix-git/doc/guix.texi:7323
msgid "For example, if you create a pack containing Bash with:"
msgstr "Por exemplo, se você criar uma embalagem contendo Bash com:"

#. type: example
#: guix-git/doc/guix.texi:7326
#, no-wrap
msgid "guix pack -RR -S /mybin=bin bash\n"
msgstr "guix pack -RR -S /mybin=bin bash\n"

#. type: table
#: guix-git/doc/guix.texi:7331
msgid "...@: you can copy that pack to a machine that lacks Guix, and from your home directory as a normal user, run:"
msgstr "...@: você pode copiar essa embalagem para uma máquina que não tenha Guix e, a partir do seu diretório pessoal, como um usuário normal, executar:"

#. type: example
#: guix-git/doc/guix.texi:7335
#, no-wrap
msgid ""
"tar xf pack.tar.gz\n"
"./mybin/sh\n"
msgstr ""
"tar xf pack.tar.gz\n"
"./mybin/sh\n"

#. type: table
#: guix-git/doc/guix.texi:7343
msgid "In that shell, if you type @code{ls /gnu/store}, you'll notice that @file{/gnu/store} shows up and contains all the dependencies of @code{bash}, even though the machine actually lacks @file{/gnu/store} altogether! That is probably the simplest way to deploy Guix-built software on a non-Guix machine."
msgstr "Nesse shell, se você digitar @code{ls /gnu/store}, você notará que @file{/gnu/store} aparece e contém todas as dependências de @code{bash}, mesmo que a máquina realmente não tenha @file{/gnu/store} completamente! Essa é provavelmente a maneira mais simples de implementar software construído pelo Guix em uma máquina não Guix."

#. type: quotation
#: guix-git/doc/guix.texi:7349
msgid "By default, relocatable binaries rely on the @dfn{user namespace} feature of the kernel Linux, which allows unprivileged users to mount or change root.  Old versions of Linux did not support it, and some GNU/Linux distributions turn it off."
msgstr "Por padrão, binários relocáveis dependem do recurso @dfn{user namespace} do kernel Linux, que permite que usuários sem privilégios montem ou alterem a raiz (chroot). Versões antigas do Linux não o suportavam, e algumas distribuições GNU/Linux o desativam."

#. type: quotation
#: guix-git/doc/guix.texi:7355
msgid "To produce relocatable binaries that work even in the absence of user namespaces, pass @option{--relocatable} or @option{-R} @emph{twice}.  In that case, binaries will try user namespace support and fall back to another @dfn{execution engine} if user namespaces are not supported.  The following execution engines are supported:"
msgstr "Para produzir binários relocáveis que funcionam mesmo na ausência de namespaces de usuário, passe @option{--relocatable} ou @option{-R} @emph{duas vezes}. Nesse caso, os binários tentarão o suporte a namespaces de usuário e retornarão a outro @dfn{mecanismo de execução} se os namespaces de usuário não forem suportados. Os seguintes mecanismos de execução são suportados:"

#. type: item
#: guix-git/doc/guix.texi:7357 guix-git/doc/guix.texi:22088
#, no-wrap
msgid "default"
msgstr "default"

#. type: table
#: guix-git/doc/guix.texi:7360
msgid "Try user namespaces and fall back to PRoot if user namespaces are not supported (see below)."
msgstr "Experimente usar namespaces de usuário e retorne ao PRoot se eles não forem suportados (veja abaixo)."

#. type: item
#: guix-git/doc/guix.texi:7361
#, no-wrap
msgid "performance"
msgstr "performance"

#. type: table
#: guix-git/doc/guix.texi:7364
msgid "Try user namespaces and fall back to Fakechroot if user namespaces are not supported (see below)."
msgstr "Experimente usar namespaces de usuário e retorne ao Fakechroot se eles não forem suportados (veja abaixo)."

#. type: item
#: guix-git/doc/guix.texi:7365
#, no-wrap
msgid "userns"
msgstr "userns"

#. type: table
#: guix-git/doc/guix.texi:7368
msgid "Run the program through user namespaces and abort if they are not supported."
msgstr "Execute o programa por meio de namespaces de usuário e aborte se eles não forem suportados."

#. type: item
#: guix-git/doc/guix.texi:7369
#, no-wrap
msgid "proot"
msgstr "proot"

#. type: table
#: guix-git/doc/guix.texi:7376
msgid "Run through PRoot.  The @uref{https://proot-me.github.io/, PRoot} program provides the necessary support for file system virtualization.  It achieves that by using the @code{ptrace} system call on the running program.  This approach has the advantage to work without requiring special kernel support, but it incurs run-time overhead every time a system call is made."
msgstr "Execute através do PRoot. O programa @uref{https://proot-me.github.io/, PRoot} fornece o suporte necessário para virtualização do sistema de arquivos. Ele consegue isso usando a chamada de sistema @code{ptrace} no programa em execução. Essa abordagem tem a vantagem de funcionar sem exigir suporte especial do kernel, mas incorre em sobrecarga de tempo de execução toda vez que uma chamada de sistema é feita."

#. type: item
#: guix-git/doc/guix.texi:7377
#, no-wrap
msgid "fakechroot"
msgstr "fakechroot"

#. type: table
#: guix-git/doc/guix.texi:7385
msgid "Run through Fakechroot.  @uref{https://github.com/dex4er/fakechroot/, Fakechroot} virtualizes file system accesses by intercepting calls to C library functions such as @code{open}, @code{stat}, @code{exec}, and so on.  Unlike PRoot, it incurs very little overhead.  However, it does not always work: for example, some file system accesses made from within the C library are not intercepted, and file system accesses made @i{via} direct syscalls are not intercepted either, leading to erratic behavior."
msgstr "Execute através do Fakechroot. @uref{https://github.com/dex4er/fakechroot/, Fakechroot} virtualiza acessos ao sistema de arquivos interceptando chamadas para funções da biblioteca C, como @code{open}, @code{stat}, @code{exec} e assim por diante. Ao contrário do PRoot, ele incorre em muito pouca sobrecarga. No entanto, nem sempre funciona: por exemplo, alguns acessos ao sistema de arquivos feitos de dentro da biblioteca C não são interceptados, e acessos ao sistema de arquivos feitos @i{via} syscalls diretas também não são interceptados, levando a um comportamento errático."

#. type: vindex
#: guix-git/doc/guix.texi:7387
#, no-wrap
msgid "GUIX_EXECUTION_ENGINE"
msgstr "GUIX_EXECUTION_ENGINE"

#. type: quotation
#: guix-git/doc/guix.texi:7391
msgid "When running a wrapped program, you can explicitly request one of the execution engines listed above by setting the @env{GUIX_EXECUTION_ENGINE} environment variable accordingly."
msgstr "Ao executar um programa encapsulado, você pode solicitar explicitamente um dos mecanismos de execução listados acima, definindo a variável de ambiente @env{GUIX_EXECUTION_ENGINE} adequadamente."

#. type: cindex
#: guix-git/doc/guix.texi:7393
#, no-wrap
msgid "entry point, for Docker and Singularity images"
msgstr "ponto de entrada para imagens Docker e Singularity"

#. type: item
#: guix-git/doc/guix.texi:7394
#, no-wrap
msgid "--entry-point=@var{command}"
msgstr "--entry-point=@var{comando}"

#. type: table
#: guix-git/doc/guix.texi:7399
msgid "Use @var{command} as the @dfn{entry point} of the resulting pack, if the pack format supports it---currently @code{docker}, @code{appimage}, and @code{squashfs} (Singularity) support it.  @var{command} must be relative to the profile contained in the pack."
msgstr "Use @var{comando} como o @dfn{ponto de entrada} da embalagem resultante, se o formato da embalagem for compatível — atualmente, @code{docker}, @code{appimage} e @code{squashfs} (Singularity) o são. @var{comando} deve ser relativo ao perfil contido na embalagem."

#. type: table
#: guix-git/doc/guix.texi:7403
msgid "The entry point specifies the command that tools like @code{docker run} or @code{singularity run} automatically start by default.  For example, you can do:"
msgstr "O ponto de entrada especifica o comando que ferramentas como @code{docker run} ou @code{singularity run} iniciam automaticamente por padrão. Por exemplo, você pode fazer:"

#. type: example
#: guix-git/doc/guix.texi:7406
#, no-wrap
msgid "guix pack -f docker --entry-point=bin/guile guile\n"
msgstr "guix pack -f docker --entry-point=bin/guile guile\n"

#. type: table
#: guix-git/doc/guix.texi:7410
msgid "The resulting pack can easily be loaded and @code{docker run} with no extra arguments will spawn @code{bin/guile}:"
msgstr "A embalagem resultante pode ser facilmente carregado e @code{docker run} sem argumentos extras irá gerar @code{bin/guile}:"

#. type: example
#: guix-git/doc/guix.texi:7414
#, no-wrap
msgid ""
"docker load -i pack.tar.gz\n"
"docker run @var{image-id}\n"
msgstr ""
"docker load -i pack.tar.gz\n"
"docker run @var{image-id}\n"

#. type: cindex
#: guix-git/doc/guix.texi:7416
#, no-wrap
msgid "entry point arguments, for docker images"
msgstr "argumentos de ponto de entrada, para imagens docker"

#. type: item
#: guix-git/doc/guix.texi:7417
#, no-wrap
msgid "--entry-point-argument=@var{command}"
msgstr "--entry-point-argument=@var{comando}"

#. type: itemx
#: guix-git/doc/guix.texi:7418
#, no-wrap
msgid "-A @var{command}"
msgstr "-A @var{comando}"

#. type: table
#: guix-git/doc/guix.texi:7422
msgid "Use @var{command} as an argument to @dfn{entry point} of the resulting pack.  This option is only valid in conjunction with @code{--entry-point} and can appear multiple times on the command line."
msgstr "Use @var{comando} como um argumento para @dfn{o ponto de entrada} da embalagem resultante. Esta opção é válida somente em conjunto com @code{--entry-point} e pode aparecer várias vezes na linha de comando."

#. type: example
#: guix-git/doc/guix.texi:7425
#, no-wrap
msgid "guix pack -f docker --entry-point=bin/guile --entry-point-argument=\"--help\" guile\n"
msgstr "guix pack -f docker --entry-point=bin/guile --entry-point-argument=\"--help\" guile\n"

#. type: cindex
#: guix-git/doc/guix.texi:7427
#, no-wrap
msgid "maximum layers argument, for docker images"
msgstr "argumento de camadas máximas, para imagens docker"

#. type: item
#: guix-git/doc/guix.texi:7428
#, no-wrap
msgid "--max-layers=@code{n}"
msgstr "--max-layers=@code{n}"

#. type: table
#: guix-git/doc/guix.texi:7431
msgid "Specifies the maximum number of Docker image layers allowed when building an image."
msgstr "Especifica o número máximo de camadas de imagem do Docker permitidas ao criar uma imagem."

#. type: example
#: guix-git/doc/guix.texi:7434
#, no-wrap
msgid "guix pack -f docker --max-layers=100 guile\n"
msgstr "guix pack -f docker --max-layers=100 guile\n"

#. type: table
#: guix-git/doc/guix.texi:7440
msgid "This option allows you to limit the number of layers in a Docker image.  Docker images are comprised of multiple layers, and each layer adds to the overall size and complexity of the image.  By setting a maximum number of layers, you can control the following effects:"
msgstr "Esta opção permite que você limite o número de camadas em uma imagem Docker. As imagens Docker são compostas de várias camadas, e cada camada adiciona ao tamanho geral e à complexidade da imagem. Ao definir um número máximo de camadas, você pode controlar os seguintes efeitos:"

#. type: item
#: guix-git/doc/guix.texi:7442
#, no-wrap
msgid "Disk Usage:"
msgstr "Uso do disco:"

#. type: itemize
#: guix-git/doc/guix.texi:7445
msgid "Increasing the number of layers can help optimize the disk space required to store multiple images built with a similar package graph."
msgstr "Aumentar o número de camadas pode ajudar a otimizar o espaço em disco necessário para armazenar várias imagens criadas com um grafo de pacote semelhante."

#. type: item
#: guix-git/doc/guix.texi:7446
#, no-wrap
msgid "Pulling:"
msgstr "Puxar:"

#. type: itemize
#: guix-git/doc/guix.texi:7449
msgid "When transferring images between different nodes or systems, having more layers can reduce the time required to pull the image."
msgstr "Ao transferir imagens entre diferentes nós ou sistemas, ter mais camadas pode reduzir o tempo necessário para puxar a imagem."

#. type: table
#: guix-git/doc/guix.texi:7454 guix-git/doc/guix.texi:15218
#: guix-git/doc/guix.texi:15941 guix-git/doc/guix.texi:16351
#: guix-git/doc/guix.texi:17070
msgid "Consider the package @var{expr} evaluates to."
msgstr "Considere o pacote que @var{expr} avalia."

#. type: table
#: guix-git/doc/guix.texi:7458
msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--expression} in @command{guix build}})."
msgstr "Isso tem o mesmo propósito que a opção de mesmo nome em @command{guix build} (@pxref{Additional Build Options, @option{--expression} em @command{guix build}})."

#. type: table
#: guix-git/doc/guix.texi:7462
#, fuzzy
#| msgid "Install the package that the code within @var{file} evaluates to."
msgid "Build a pack containing the package or other object the code within @var{file} evaluates to."
msgstr "Instale o pacote avaliado pelo código em @var{arquivo}."

#. type: table
#: guix-git/doc/guix.texi:7467
#, fuzzy
#| msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--expression} in @command{guix build}})."
msgid "This has the same purpose as the same-named option in @command{guix build} (@pxref{Additional Build Options, @option{--file} in @command{guix build}}), but it has no shorthand, because @option{-f} already means @option{--format}."
msgstr "Isso tem o mesmo propósito que a opção de mesmo nome em @command{guix build} (@pxref{Additional Build Options, @option{--expression} em @command{guix build}})."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:7469
msgid "pack-manifest"
msgstr "pack-manifest"

#. type: table
#: guix-git/doc/guix.texi:7474
msgid "Use the packages contained in the manifest object returned by the Scheme code in @var{file}.  This option can be repeated several times, in which case the manifests are concatenated."
msgstr "Use os pacotes contidos no objeto manifesto retornado pelo código Scheme em @var{arquivo}. Esta opção pode ser repetida várias vezes, nesse caso os manifestos são concatenados."

#. type: table
#: guix-git/doc/guix.texi:7482
msgid "This has a similar purpose as the same-named option in @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) and uses the same manifest files.  It allows you to define a collection of packages once and use it both for creating profiles and for creating archives for use on machines that do not have Guix installed.  Note that you can specify @emph{either} a manifest file @emph{or} a list of packages, but not both."
msgstr "Isto tem um propósito similar à opção de mesmo nome em @command{guix package} (@pxref{profile-manifest, @option{--manifest}}) e usa os mesmos arquivos de manifesto. Ele permite que você defina uma coleção de pacotes uma vez e use-a tanto para criar perfis quanto para criar arquivos para uso em máquinas que não tenham o Guix instalado. Note que você pode especificar @emph{ou} um arquivo de manifesto @emph{ou} uma lista de pacotes, mas não ambos."

#. type: table
#: guix-git/doc/guix.texi:7487
msgid "@xref{Writing Manifests}, for information on how to write a manifest.  @xref{shell-export-manifest, @command{guix shell --export-manifest}}, for information on how to ``convert'' command-line options into a manifest."
msgstr "@xref{Writing Manifests}, para obter informações sobre como escrever um manifesto. @xref{shell-export-manifest, @command{guix shell --export-manifest}}, para obter informações sobre como ``converter'' opções de linha de comando em um manifesto."

#. type: item
#: guix-git/doc/guix.texi:7493 guix-git/doc/guix.texi:14008
#: guix-git/doc/guix.texi:46849
#, no-wrap
msgid "--target=@var{triplet}"
msgstr "--target=@var{tripleto}"

#. type: cindex
#: guix-git/doc/guix.texi:7494 guix-git/doc/guix.texi:7986
#: guix-git/doc/guix.texi:14009
#, no-wrap
msgid "cross-compilation"
msgstr "compilação cruzada"

#. type: table
#: guix-git/doc/guix.texi:7498 guix-git/doc/guix.texi:46853
msgid "Cross-build for @var{triplet}, which must be a valid GNU triplet, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying target triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr "Construção cruzada para @var{tripleto}, que deve ser um tripleto GNU válido, como @code{\"aarch64-linux-gnu\"} (@pxref{Specifying target triplets, tripletos de configuração GNU, autoconf, Autoconf})."

#. type: item
#: guix-git/doc/guix.texi:7499
#, no-wrap
msgid "--compression=@var{tool}"
msgstr "--compression=@var{ferramenta}"

#. type: itemx
#: guix-git/doc/guix.texi:7500
#, no-wrap
msgid "-C @var{tool}"
msgstr "-C @var{ferramenta}"

#. type: table
#: guix-git/doc/guix.texi:7504
msgid "Compress the resulting tarball using @var{tool}---one of @code{gzip}, @code{zstd}, @code{bzip2}, @code{xz}, @code{lzip}, or @code{none} for no compression."
msgstr "Compacte o tarball resultante usando @var{ferramenta}---um dos seguintes: @code{gzip}, @code{zstd}, @code{bzip2}, @code{xz}, @code{lzip} ou @code{none} para nenhuma compactação."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:7506
msgid "pack-symlink-option"
msgstr "pack-symlink-option"

#. type: table
#: guix-git/doc/guix.texi:7510
msgid "Add the symlinks specified by @var{spec} to the pack.  This option can appear several times."
msgstr "Adicione os symlinks especificados por @var{spec} à embalagem. Esta opção pode aparecer várias vezes."

#. type: table
#: guix-git/doc/guix.texi:7514
msgid "@var{spec} has the form @code{@var{source}=@var{target}}, where @var{source} is the symlink that will be created and @var{target} is the symlink target."
msgstr "@var{spec} tem o formato @code{@var{fonte}=@var{alvo}}, onde @var{fonte} é a ligação simbólica que será criado e @var{alvo} é o destino da ligação simbólica."

#. type: table
#: guix-git/doc/guix.texi:7517
msgid "For instance, @code{-S /opt/gnu/bin=bin} creates a @file{/opt/gnu/bin} symlink pointing to the @file{bin} sub-directory of the profile."
msgstr "Por exemplo, @code{-S /opt/gnu/bin=bin} cria uma ligação simbólica @file{/opt/gnu/bin} apontanda para o subdiretório @file{bin} do perfil."

#. type: item
#: guix-git/doc/guix.texi:7518 guix-git/doc/guix.texi:46860
#, no-wrap
msgid "--save-provenance"
msgstr "--save-provenance"

#. type: table
#: guix-git/doc/guix.texi:7522
msgid "Save provenance information for the packages passed on the command line.  Provenance information includes the URL and commit of the channels in use (@pxref{Channels})."
msgstr "Salvar informações de procedência para os pacotes passados na linha de comando. As informações de procedência incluem a URL e o commit dos canais em uso (@pxref{Channels})."

#. type: table
#: guix-git/doc/guix.texi:7528
msgid "Provenance information is saved in the @file{/gnu/store/@dots{}-profile/manifest} file in the pack, along with the usual package metadata---the name and version of each package, their propagated inputs, and so on.  It is useful information to the recipient of the pack, who then knows how the pack was (supposedly) obtained."
msgstr "As informações de procedência são salvas no arquivo @file{/gnu/store/@dots{}-profile/manifest} na embalagem, junto com os metadados usuais do pacote --- o nome e a versão de cada pacote, suas entradas propagadas e assim por diante. São informações úteis para o destinatário da embalagem, que então sabe como a embalagem foi (supostamente) obtida."

#. type: table
#: guix-git/doc/guix.texi:7534
msgid "This option is not enabled by default because, like timestamps, provenance information contributes nothing to the build process.  In other words, there is an infinity of channel URLs and commit IDs that can lead to the same pack.  Recording such ``silent'' metadata in the output thus potentially breaks the source-to-binary bitwise reproducibility property."
msgstr "Esta opção não é habilitada por padrão porque, assim como os timestamps, as informações de proveniência não contribuem em nada para o processo de construção. Em outras palavras, há uma infinidade de URLs de canais e IDs de commit que podem levar à mesma embalagem. Gravar esses metadados ``silenciosos'' na saída, portanto, potencialmente quebra a propriedade de reprodutibilidade bit a bit de origem para binário."

#. type: cindex
#: guix-git/doc/guix.texi:7537
#, no-wrap
msgid "garbage collector root, for packs"
msgstr "raiz do coletor de lixo, para embalagens"

#. type: table
#: guix-git/doc/guix.texi:7540
msgid "Make @var{file} a symlink to the resulting pack, and register it as a garbage collector root."
msgstr "Crie @var{arquivo} como uma ligação simbólica para a embalagem resultante e registre-a como uma raiz do coletor de lixo."

#. type: item
#: guix-git/doc/guix.texi:7541
#, no-wrap
msgid "--localstatedir"
msgstr "--localstatedir"

#. type: itemx
#: guix-git/doc/guix.texi:7542
#, no-wrap
msgid "--profile-name=@var{name}"
msgstr "--profile-name=@var{nome}"

#. type: table
#: guix-git/doc/guix.texi:7547
msgid "Include the ``local state directory'', @file{/var/guix}, in the resulting pack, and notably the @file{/var/guix/profiles/per-user/root/@var{name}} profile---by default @var{name} is @code{guix-profile}, which corresponds to @file{~root/.guix-profile}."
msgstr "Inclua o ``diretório de estado local'', @file{/var/guix}, na embalagem resultante, e principalmente o perfil @file{/var/guix/profiles/per-user/root/@var{nome}} --- por padrão, @var{nome} é @code{guix-profile}, que corresponde a @file{~root/.guix-profile}."

#. type: table
#: guix-git/doc/guix.texi:7553
msgid "@file{/var/guix} contains the store database (@pxref{The Store}) as well as garbage-collector roots (@pxref{Invoking guix gc}).  Providing it in the pack means that the store is ``complete'' and manageable by Guix; not providing it in the pack means that the store is ``dead'': items cannot be added to it or removed from it after extraction of the pack."
msgstr "@file{/var/guix} contém o banco de dados do armazém (@pxref{The Store}), bem como as raízes do coletor de lixo (@pxref{Invoking guix gc}). Fornecê-lo na embalagem significa que o armazém está ``completo'' e gerenciável pelo Guix; não fornecê-lo na embalagem significa que o armazém está ``morto'': itens não podem ser adicionados a ele ou removidos dele após a extração da embalagem."

#. type: table
#: guix-git/doc/guix.texi:7556
msgid "One use case for this is the Guix self-contained binary tarball (@pxref{Binary Installation})."
msgstr "Um caso de uso para isso é o tarball binário independente do Guix (@pxref{Binary Installation})."

#. type: item
#: guix-git/doc/guix.texi:7557 guix-git/doc/guix.texi:46854
#, no-wrap
msgid "--derivation"
msgstr "--derivation"

#. type: itemx
#: guix-git/doc/guix.texi:7558 guix-git/doc/guix.texi:14048
#: guix-git/doc/guix.texi:46855
#, no-wrap
msgid "-d"
msgstr "-d"

#. type: table
#: guix-git/doc/guix.texi:7560
msgid "Print the name of the derivation that builds the pack."
msgstr "Exiba o nome da derivação que constrói a embalagem."

#. type: table
#: guix-git/doc/guix.texi:7564
msgid "Use the bootstrap binaries to build the pack.  This option is only useful to Guix developers."
msgstr "Use os binários bootstrap para construir a embalagem. Esta opção é útil somente para desenvolvedores do Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:7569
msgid "In addition, @command{guix pack} supports all the common build options (@pxref{Common Build Options}) and all the package transformation options (@pxref{Package Transformation Options})."
msgstr "Além disso, @command{guix pack} suporta todas as opções de compilação comuns (@pxref{Common Build Options}) e todas as opções de transformação de pacote (@pxref{Package Transformation Options})."

#. type: cindex
#: guix-git/doc/guix.texi:7574
#, no-wrap
msgid "GCC"
msgstr "GCC"

#. type: cindex
#: guix-git/doc/guix.texi:7575
#, no-wrap
msgid "ld-wrapper"
msgstr "ld-wrapper"

#. type: cindex
#: guix-git/doc/guix.texi:7576
#, no-wrap
msgid "linker wrapper"
msgstr "envoltório do vinculador"

#. type: cindex
#: guix-git/doc/guix.texi:7577
#, no-wrap
msgid "toolchain, for C development"
msgstr "cadeia de ferramentas, para desenvolvimento em C"

#. type: cindex
#: guix-git/doc/guix.texi:7578
#, no-wrap
msgid "toolchain, for Fortran development"
msgstr "cadeia de ferramentas, para desenvolvimento Fortran"

#. type: Plain text
#: guix-git/doc/guix.texi:7585
msgid "If you need a complete toolchain for compiling and linking C or C++ source code, use the @code{gcc-toolchain} package.  This package provides a complete GCC toolchain for C/C++ development, including GCC itself, the GNU C Library (headers and binaries, plus debugging symbols in the @code{debug} output), Binutils, and a linker wrapper."
msgstr "Se você precisa de uma cadeia de ferramentas completa para compilar e vincular código-fonte C ou C++, use o pacote @code{gcc-toolchain}. Este pacote fornece uma cadeia de ferramentas GCC completa para desenvolvimento C/C++, incluindo o próprio GCC, a GNU C Library (cabeçalhos e binários, além de símbolos de depuração na saída @code{debug}), Binutils e um wrapper de vinculador."

#. type: Plain text
#: guix-git/doc/guix.texi:7591
msgid "The wrapper's purpose is to inspect the @code{-L} and @code{-l} switches passed to the linker, add corresponding @code{-rpath} arguments, and invoke the actual linker with this new set of arguments.  You can instruct the wrapper to refuse to link against libraries not in the store by setting the @env{GUIX_LD_WRAPPER_ALLOW_IMPURITIES} environment variable to @code{no}."
msgstr "O propósito do wrapper é inspecionar os switches @code{-L} e @code{-l} passados para o vinculador, adicionar argumentos @code{-rpath} correspondentes e invocar o vinculador real com esse novo conjunto de argumentos. Você pode instruir o wrapper a se recusar a vincular bibliotecas que não estejam no store definindo a variável de ambiente @env{GUIX_LD_WRAPPER_ALLOW_IMPURITIES} como @code{no}."

#. type: Plain text
#: guix-git/doc/guix.texi:7595
msgid "The package @code{gfortran-toolchain} provides a complete GCC toolchain for Fortran development.  For other languages, please use @samp{guix search gcc toolchain} (@pxref{guix-search,, Invoking guix package})."
msgstr "O pacote @code{gfortran-toolchain} fornece uma cadeia de ferramentas GCC completa para desenvolvimento Fortran. Para outras linguagens, use @samp{guix search gcc toolchain} (@pxref{guix-search,, Invoking guix package})."

#. type: section
#: guix-git/doc/guix.texi:7598
#, no-wrap
msgid "Invoking @command{guix git authenticate}"
msgstr "Invocando @command{guix git authenticate}"

#. type: command{#1}
#: guix-git/doc/guix.texi:7600
#, no-wrap
msgid "guix git authenticate"
msgstr "guix git authenticate"

#. type: cindex
#: guix-git/doc/guix.texi:7601
#, fuzzy, no-wrap
#| msgid "authentication, of a Guix checkout"
msgid "authentication, of Git checkouts"
msgstr "autenticação, de um checkout Guix"

#. type: cindex
#: guix-git/doc/guix.texi:7602
#, fuzzy, no-wrap
#| msgid "Substitute Authentication"
msgid "Git checkout authentication"
msgstr "Autenticação de substituto"

#. type: Plain text
#: guix-git/doc/guix.texi:7610
msgid "The @command{guix git authenticate} command authenticates a Git checkout following the same rule as for channels (@pxref{channel-authentication, channel authentication}).  That is, starting from a given commit, it ensures that all subsequent commits are signed by an OpenPGP key whose fingerprint appears in the @file{.guix-authorizations} file of its parent commit(s)."
msgstr "O comando @command{guix git authenticate} autentica um checkout do Git seguindo a mesma regra dos canais (@pxref{channel-authentication, autenticação dos canais}). Ou seja, a partir de um commit determinado, ele garante que todos os commits subsequentes sejam assinados por uma chave OpenPGP cuja impressão digital apareça no arquivo @file{.guix-authorizations} de seus commits pais."

#. type: Plain text
#: guix-git/doc/guix.texi:7615
msgid "You will find this command useful if you maintain a channel.  But in fact, this authentication mechanism is useful in a broader context, so you might want to use it for Git repositories that have nothing to do with Guix."
msgstr "Você achará esse comando útil se mantiver um canal. Mas, na verdade, esse mecanismo de autenticação é útil em um contexto mais amplo, então você pode querer usá-lo para repositórios Git que não tenham nada a ver com Guix."

#. type: example
#: guix-git/doc/guix.texi:7620
#, no-wrap
msgid "guix git authenticate @var{commit} @var{signer} [@var{options}@dots{}]\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:7622
#, no-wrap
msgid "introduction, for Git authentication"
msgstr "introdução, para autenticação Git"

#. type: Plain text
#: guix-git/doc/guix.texi:7632
#, fuzzy
msgid "By default, this command authenticates the Git checkout in the current directory; it outputs nothing and exits with exit code zero on success and non-zero on failure.  @var{commit} above denotes the first commit where authentication takes place, and @var{signer} is the OpenPGP fingerprint of public key used to sign @var{commit}.  Together, they form a @dfn{channel introduction} (@pxref{channel-authentication, channel introduction}).  On your first successful run, the introduction is recorded in the @file{.git/config} file of your checkout, allowing you to omit them from subsequent invocations:"
msgstr "Por padrão, este comando autentica o checkout do Git no diretório atual; ele não produz nada e sai com código de saída zero em caso de sucesso e diferente de zero em caso de falha. @var{commit} acima denota o primeiro commit onde a autenticação ocorre, e @var{signer} é a impressão digital OpenPGP da chave pública usada para assinar @var{commit}. Juntos, eles formam um @dfn{channel introduction} (@pxref{channel-authentication, channel introduction}). Na sua primeira execução bem-sucedida, a introdução é registrada no arquivo @file{.git/config} do seu checkout, permitindo que você os omita de invocações subsequentes:"

#. type: example
#: guix-git/doc/guix.texi:7635
#, no-wrap
msgid "guix git authenticate [@var{options}@dots{}]\n"
msgstr "guix git authenticate [@var{opções}@dots{}]\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7641
msgid "Should you have branches that require different introductions, you can specify them directly in @file{.git/config}.  For example, if the branch called @code{personal-fork} has a different introduction than other branches, you can extend @file{.git/config} along these lines:"
msgstr "Caso você tenha ramos que exijam introduções diferentes, você pode especificá-las diretamente em @file{.git/config}. Por exemplo, se o ramo chamado @code{personal-fork} tiver uma introdução diferente de outros ramos, você pode estender @file{.git/config} ao longo destas linhas:"

#. type: smallexample
#: guix-git/doc/guix.texi:7647
#, no-wrap
msgid ""
"[guix \"authentication-personal-fork\"]\n"
"\tintroduction-commit = cabba936fd807b096b48283debdcddccfea3900d\n"
"\tintroduction-signer = C0FF EECA BBA9 E6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\n"
"\tkeyring = keyring\n"
msgstr ""
"[guix \"authentication-personal-fork\"]\n"
"\tintroduction-commit = cabba936fd807b096b48283debdcddccfea3900d\n"
"\tintroduction-signer = C0FF EECA BBA9 E6A8 0D1D  E643 A2A0 6DF2 A33A 54FA\n"
"\tkeyring = keyring\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7653
msgid "The first run also attempts to install pre-push and post-merge hooks, such that @command{guix git authenticate} is invoked as soon as you run @command{git push}, @command{git pull}, and related commands; it does not overwrite preexisting hooks though."
msgstr "A primeira execução também tenta instalar ganchos pré-push e pós-mesclagem, de modo que @command{guix git authenticate} seja invocado assim que você executar @command{git push}, @command{git pull} e comandos relacionados; no entanto, ele não substitui ganchos preexistentes."

#. type: Plain text
#: guix-git/doc/guix.texi:7656
msgid "The command-line options described below allow you to fine-tune the process."
msgstr "As opções de linha de comando descritas abaixo permitem que você ajuste o processo."

#. type: item
#: guix-git/doc/guix.texi:7658
#, no-wrap
msgid "--repository=@var{directory}"
msgstr "--repository=@var{diretório}"

#. type: itemx
#: guix-git/doc/guix.texi:7659
#, no-wrap
msgid "-r @var{directory}"
msgstr "-r @var{diretório}"

#. type: table
#: guix-git/doc/guix.texi:7662
msgid "Open the Git repository in @var{directory} instead of the current directory."
msgstr "Abra o repositório Git em @var{diretório} em vez do diretório atual."

#. type: item
#: guix-git/doc/guix.texi:7663
#, no-wrap
msgid "--keyring=@var{reference}"
msgstr "--keyring=@var{referência}"

#. type: itemx
#: guix-git/doc/guix.texi:7664
#, no-wrap
msgid "-k @var{reference}"
msgstr "-k @var{referência}"

#. type: table
#: guix-git/doc/guix.texi:7670
msgid "Load OpenPGP keyring from @var{reference}, the reference of a branch such as @code{origin/keyring} or @code{my-keyring}.  The branch must contain OpenPGP public keys in @file{.key} files, either in binary form or ``ASCII-armored''.  By default the keyring is loaded from the branch named @code{keyring}."
msgstr "Carregue o chaveiro OpenPGP de @var{referência}, a referência de uma ramificação como @code{origin/keyring} ou @code{my-keyring}. A ramificação deve conter chaves públicas OpenPGP em arquivos @file{.key}, em formato binário ou ``ASCII-armored''. Por padrão, o chaveiro é carregado da ramificação chamada @code{keyring}."

#. type: item
#: guix-git/doc/guix.texi:7671
#, no-wrap
msgid "--end=@var{commit}"
msgstr "--end=@var{commit}"

#. type: table
#: guix-git/doc/guix.texi:7673
msgid "Authenticate revisions up to @var{commit}."
msgstr "Autentique revisões até @var{commit}."

#. type: table
#: guix-git/doc/guix.texi:7676
msgid "Display commit signing statistics upon completion."
msgstr "Exibir estatísticas de assinatura de confirmação após a conclusão."

#. type: item
#: guix-git/doc/guix.texi:7677
#, no-wrap
msgid "--cache-key=@var{key}"
msgstr "--cache-key=@var{chave}"

#. type: table
#: guix-git/doc/guix.texi:7681
msgid "Previously-authenticated commits are cached in a file under @file{~/.cache/guix/authentication}.  This option forces the cache to be stored in file @var{key} in that directory."
msgstr "Os commits autenticados anteriormente são armazenados em cache em um arquivo em @file{~/.cache/guix/authentication}. Esta opção força o cache a ser armazenado no arquivo @var{chave} naquele diretório."

#. type: item
#: guix-git/doc/guix.texi:7682
#, no-wrap
msgid "--historical-authorizations=@var{file}"
msgstr "--historical-authorizations=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:7689
msgid "By default, any commit whose parent commit(s) lack the @file{.guix-authorizations} file is considered inauthentic.  In contrast, this option considers the authorizations in @var{file} for any commit that lacks @file{.guix-authorizations}.  The format of @var{file} is the same as that of @file{.guix-authorizations} (@pxref{channel-authorizations, @file{.guix-authorizations} format})."
msgstr "Por padrão, qualquer commit cujo(s) commit(s) pai(s) não tenha(m) o arquivo @file{.guix-authorizations} é considerado não autêntico. Em contraste, esta opção considera as autorizações em @var{arquivo} para qualquer commit que não tenha @file{.guix-authorizations}. O formato de @var{arquivo} é o mesmo que o de @file{.guix-authorizations} (@pxref{channel-authorizations, formato @file{.guix-authorizations}})."

#. type: Plain text
#: guix-git/doc/guix.texi:7702
msgid "GNU Guix provides several Scheme programming interfaces (APIs) to define, build, and query packages.  The first interface allows users to write high-level package definitions.  These definitions refer to familiar packaging concepts, such as the name and version of a package, its build system, and its dependencies.  These definitions can then be turned into concrete build actions."
msgstr "O GNU Guix fornece várias interfaces de programação Scheme (APIs) para definir, construir e consultar pacotes. A primeira interface permite que os usuários escrevam definições de pacotes de alto nível. Essas definições se referem a conceitos de empacotamento familiares, como o nome e a versão de um pacote, seu sistema de construção e suas dependências. Essas definições podem então ser transformadas em ações de construção concretas."

#. type: Plain text
#: guix-git/doc/guix.texi:7708
msgid "Build actions are performed by the Guix daemon, on behalf of users.  In a standard setup, the daemon has write access to the store---the @file{/gnu/store} directory---whereas users do not.  The recommended setup also has the daemon perform builds in chroots, under specific build users, to minimize interference with the rest of the system."
msgstr "As ações de build são executadas pelo daemon Guix, em nome dos usuários. Em uma configuração padrão, o daemon tem acesso de gravação ao armazém---o diretório @file{/gnu/store}---enquanto os usuários não têm. A configuração recomendada também faz com que o daemon execute builds em chroots, sob usuários de compilação específicos, para minimizar a interferência com o resto do sistema."

#. type: Plain text
#: guix-git/doc/guix.texi:7717
msgid "Lower-level APIs are available to interact with the daemon and the store.  To instruct the daemon to perform a build action, users actually provide it with a @dfn{derivation}.  A derivation is a low-level representation of the build actions to be taken, and the environment in which they should occur---derivations are to package definitions what assembly is to C programs.  The term ``derivation'' comes from the fact that build results @emph{derive} from them."
msgstr "APIs de nível inferior estão disponíveis para interagir com o daemon e o armazém. Para instruir o daemon a executar uma ação de compilação, os usuários na verdade fornecem a ele uma @dfn{derivação}. Uma derivação é uma representação de baixo nível das ações de compilação a serem tomadas e do ambiente no qual elas devem ocorrer --- derivações são para definições de pacotes o que assembly é para programas C. O termo ``derivação'' vem do fato de que os resultados de compilação @emph{derivam} deles."

#. type: Plain text
#: guix-git/doc/guix.texi:7721
msgid "This chapter describes all these APIs in turn, starting from high-level package definitions.  @xref{Source Tree Structure}, for a more general overview of the source code."
msgstr "Este capítulo descreve todas essas APIs, começando pelas definições de pacotes de alto nível. @xref{Source Tree Structure}, para uma visão geral mais geral do código-fonte."

#. type: Plain text
#: guix-git/doc/guix.texi:7753
msgid "From a programming viewpoint, the package definitions of the GNU distribution are provided by Guile modules in the @code{(gnu packages @dots{})} name space@footnote{Note that packages under the @code{(gnu packages @dots{})} module name space are not necessarily ``GNU packages''.  This module naming scheme follows the usual Guile module naming convention: @code{gnu} means that these modules are distributed as part of the GNU system, and @code{packages} identifies modules that define packages.} (@pxref{Modules, Guile modules,, guile, GNU Guile Reference Manual}).  For instance, the @code{(gnu packages emacs)} module exports a variable named @code{emacs}, which is bound to a @code{<package>} object (@pxref{Defining Packages})."
msgstr "Do ponto de vista da programação, as definições de pacotes da distribuição GNU são fornecidas pelos módulos Guile no namespace @code{(gnu packages @dots{})}@footnote{Observe que os pacotes sob o namespace do módulo @code{(gnu packages @dots{})} não são necessariamente ``pacotes GNU''. Este esquema de nomenclatura de módulos segue a convenção usual de nomenclatura de módulos Guile: @code{gnu} significa que esses módulos são distribuídos como parte do sistema GNU, e @code{packages} identifica módulos que definem pacotes.} (@pxref{Modules, módulos Guile,, guile, Manual de Referência do GNU Guile}). Por exemplo, o módulo @code{(gnu packages emacs)} exporta uma variável chamada @code{emacs}, que é vinculada a um objeto @code{<package>} (@pxref{Defining Packages})."

#. type: Plain text
#: guix-git/doc/guix.texi:7760
msgid "The @code{(gnu packages @dots{})} module name space is automatically scanned for packages by the command-line tools.  For instance, when running @code{guix install emacs}, all the @code{(gnu packages @dots{})} modules are scanned until one that exports a package object whose name is @code{emacs} is found.  This package search facility is implemented in the @code{(gnu packages)} module."
msgstr "O namespace do módulo @code{(gnu packages @dots{})} é automaticamente escaneado em busca de pacotes pelas ferramentas de linha de comando. Por exemplo, ao executar @code{guix install emacs}, todos os módulos @code{(gnu packages @dots{})} são escaneados até que um que exporte um objeto de pacote cujo nome é @code{emacs} seja encontrado. Esse recurso de busca de pacotes é implementado no módulo @code{(gnu packages)}."

#. type: cindex
#: guix-git/doc/guix.texi:7762
#, no-wrap
msgid "package module search path"
msgstr "caminho de pesquisa dos módulos de pacote"

#. type: Plain text
#: guix-git/doc/guix.texi:7771
msgid "Users can store package definitions in modules with different names---e.g., @code{(my-packages emacs)}@footnote{Note that the file name and module name must match.  For instance, the @code{(my-packages emacs)} module must be stored in a @file{my-packages/emacs.scm} file relative to the load path specified with @option{--load-path} or @env{GUIX_PACKAGE_PATH}.  @xref{Modules and the File System,,, guile, GNU Guile Reference Manual}, for details.}.  There are two ways to make these package definitions visible to the user interfaces:"
msgstr "Os usuários podem armazenar definições de pacotes em módulos com nomes diferentes --- por exemplo, @code{(my-packages emacs)}@footnote{Observe que o nome do arquivo e o nome do módulo devem corresponder. Por exemplo, o módulo @code{(my-packages emacs)} deve ser armazenado em um arquivo @file{my-packages/emacs.scm} relativo ao caminho de carregamento especificado com @option{--load-path} ou @env{GUIX_PACKAGE_PATH}. @xref{Modules and the File System,,, guile, Manual de Referência do GNU Guile}, para detalhes.}. Há duas maneiras de tornar essas definições de pacotes visíveis para as interfaces do usuário:"

#. type: enumerate
#: guix-git/doc/guix.texi:7778
msgid "By adding the directory containing your package modules to the search path with the @code{-L} flag of @command{guix package} and other commands (@pxref{Common Build Options}), or by setting the @env{GUIX_PACKAGE_PATH} environment variable described below."
msgstr "Ao adicionar o diretório que contém os módulos do seu pacote ao caminho de pesquisa com o sinalizador @code{-L} do @command{guix package} e outros comandos (@pxref{Common Build Options}), ou definindo a variável de ambiente @env{GUIX_PACKAGE_PATH} descrita abaixo."

#. type: enumerate
#: guix-git/doc/guix.texi:7784
msgid "By defining a @dfn{channel} and configuring @command{guix pull} so that it pulls from it.  A channel is essentially a Git repository containing package modules.  @xref{Channels}, for more information on how to define and use channels."
msgstr "Ao definir um @dfn{canal} e configurando @command{guix pull} para que ele puxe dele. Um canal é essencialmente um repositório Git contendo módulos de pacote. @xref{Channels}, para mais informações sobre como definir e usar canais."

#. type: Plain text
#: guix-git/doc/guix.texi:7787
msgid "@env{GUIX_PACKAGE_PATH} works similarly to other search path variables:"
msgstr "@env{GUIX_PACKAGE_PATH} funciona de forma semelhante a outras variáveis de caminho de pesquisa:"

#. type: defvr
#: guix-git/doc/guix.texi:7788
#, no-wrap
msgid "{Environment Variable} GUIX_PACKAGE_PATH"
msgstr "{Variável de ambiente} GUIX_PACKAGE_PATH"

#. type: defvr
#: guix-git/doc/guix.texi:7792
msgid "This is a colon-separated list of directories to search for additional package modules.  Directories listed in this variable take precedence over the own modules of the distribution."
msgstr "Esta é uma lista de diretórios separados por dois pontos para procurar módulos de pacotes adicionais. Os diretórios listados nesta variável têm precedência sobre os próprios módulos da distribuição."

#. type: Plain text
#: guix-git/doc/guix.texi:7800
msgid "The distribution is fully @dfn{bootstrapped} and @dfn{self-contained}: each package is built based solely on other packages in the distribution.  The root of this dependency graph is a small set of @dfn{bootstrap binaries}, provided by the @code{(gnu packages bootstrap)} module.  For more information on bootstrapping, @pxref{Bootstrapping}."
msgstr "A distribuição é totalmente @dfn{bootstrapped} e @dfn{auto-contida}: cada pacote é construído com base somente em outros pacotes na distribuição. A raiz deste grafo de dependência é um pequeno conjunto dos @dfn{binários bootstrap}, fornecido pelo módulo @code{(gnu packages bootstrap)}. Para mais informações sobre bootstrapping, @pxref{Bootstrapping}."

#. type: Plain text
#: guix-git/doc/guix.texi:7808
msgid "The high-level interface to package definitions is implemented in the @code{(guix packages)} and @code{(guix build-system)} modules.  As an example, the package definition, or @dfn{recipe}, for the GNU Hello package looks like this:"
msgstr "A interface de alto nível para definições de pacotes é implementada nos módulos @code{(guix packages)} e @code{(guix build-system)}. Como exemplo, a definição de pacote, ou @dfn{receita}, para o pacote GNU Hello se parece com isto:"

#. type: lisp
#: guix-git/doc/guix.texi:7816
#, no-wrap
msgid ""
"(define-module (gnu packages hello)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix download)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (gnu packages gawk))\n"
"\n"
msgstr ""
"(define-module (gnu packages hello)\n"
"  #:use-module (guix packages)\n"
"  #:use-module (guix download)\n"
"  #:use-module (guix build-system gnu)\n"
"  #:use-module (guix licenses)\n"
"  #:use-module (gnu packages gawk))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:7835
#, no-wrap
msgid ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (arguments '(#:configure-flags '(\"--enable-silent-rules\")))\n"
"    (inputs (list gawk))\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description \"Guess what GNU Hello prints!\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"
msgstr ""
"(define-public hello\n"
"  (package\n"
"    (name \"hello\")\n"
"    (version \"2.10\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"))))\n"
"    (build-system gnu-build-system)\n"
"    (arguments '(#:configure-flags '(\"--enable-silent-rules\")))\n"
"    (inputs (list gawk))\n"
"    (synopsis \"Hello, GNU world: An example GNU package\")\n"
"    (description \"Guess what GNU Hello prints!\")\n"
"    (home-page \"https://www.gnu.org/software/hello/\")\n"
"    (license gpl3+)))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:7845
msgid "Without being a Scheme expert, the reader may have guessed the meaning of the various fields here.  This expression binds the variable @code{hello} to a @code{<package>} object, which is essentially a record (@pxref{SRFI-9, Scheme records,, guile, GNU Guile Reference Manual}).  This package object can be inspected using procedures found in the @code{(guix packages)} module; for instance, @code{(package-name hello)} returns---surprise!---@code{\"hello\"}."
msgstr "Sem ser um especialista em Scheme, o leitor pode ter adivinhado o significado dos vários campos aqui. Esta expressão vincula a variável @code{hello} a um objeto @code{<package>}, que é essencialmente um registro (@pxref{SRFI-9, Scheme records,, guile, Manual de Referência do GNU Guile}). Este objeto de pacote pode ser inspecionado usando procedimentos encontrados no módulo @code{(guix packages)}; por exemplo, @code{(package-name hello)} retorna---surpresa!---@code{\"hello\"}."

#. type: Plain text
#: guix-git/doc/guix.texi:7849
msgid "With luck, you may be able to import part or all of the definition of the package you are interested in from another repository, using the @code{guix import} command (@pxref{Invoking guix import})."
msgstr "Com sorte, você poderá importar parte ou toda a definição do pacote de seu interesse de outro repositório, usando o comando @code{guix import} (@pxref{Invoking guix import})."

#. type: Plain text
#: guix-git/doc/guix.texi:7855
msgid "In the example above, @code{hello} is defined in a module of its own, @code{(gnu packages hello)}.  Technically, this is not strictly necessary, but it is convenient to do so: all the packages defined in modules under @code{(gnu packages @dots{})} are automatically known to the command-line tools (@pxref{Package Modules})."
msgstr "No exemplo acima, @code{hello} é definido em um módulo próprio, @code{(gnu packages hello)}. Tecnicamente, isso não é estritamente necessário, mas é conveniente fazê-lo: todos os pacotes definidos em módulos sob @code{(gnu packages @dots{})} são automaticamente conhecidos pelas ferramentas de linha de comando (@pxref{Package Modules})."

#. type: Plain text
#: guix-git/doc/guix.texi:7857
msgid "There are a few points worth noting in the above package definition:"
msgstr "Há alguns pontos que vale a pena observar na definição do pacote acima:"

#. type: itemize
#: guix-git/doc/guix.texi:7864
msgid "The @code{source} field of the package is an @code{<origin>} object (@pxref{origin Reference}, for the complete reference).  Here, the @code{url-fetch} method from @code{(guix download)} is used, meaning that the source is a file to be downloaded over FTP or HTTP."
msgstr "O campo @code{source} do pacote é um objeto @code{<origin>} (@pxref{origin Reference}, para a referência completa). Aqui, o método @code{url-fetch} de @code{(guix download)} é usado, o que significa que a fonte é um arquivo a ser baixado por FTP ou HTTP."

#. type: itemize
#: guix-git/doc/guix.texi:7867
msgid "The @code{mirror://gnu} prefix instructs @code{url-fetch} to use one of the GNU mirrors defined in @code{(guix download)}."
msgstr "O prefixo @code{mirror://gnu} instrui @code{url-fetch} a usar um dos espelhos GNU definidos em @code{(guix download)}."

#. type: itemize
#: guix-git/doc/guix.texi:7874
msgid "The @code{sha256} field specifies the expected SHA256 hash of the file being downloaded.  It is mandatory, and allows Guix to check the integrity of the file.  The @code{(base32 @dots{})} form introduces the base32 representation of the hash.  You can obtain this information with @code{guix download} (@pxref{Invoking guix download}) and @code{guix hash} (@pxref{Invoking guix hash})."
msgstr "O campo @code{sha256} especifica o hash SHA256 esperado do arquivo que está sendo baixado. É obrigatório e permite que o Guix verifique a integridade do arquivo. O formulário @code{(base32 @dots{})} introduz a representação base32 do hash. Você pode obter essas informações com @code{guix download} (@pxref{Invoking guix download}) e @code{guix hash} (@pxref{Invoking guix hash})."

#. type: cindex
#: guix-git/doc/guix.texi:7875
#, no-wrap
msgid "patches"
msgstr "remendos"

#. type: itemize
#: guix-git/doc/guix.texi:7879
msgid "When needed, the @code{origin} form can also have a @code{patches} field listing patches to be applied, and a @code{snippet} field giving a Scheme expression to modify the source code."
msgstr "Quando necessário, o formulário @code{origin} também pode ter um campo @code{patches} listando os remendos a serem aplicados e um campo @code{snippet} fornecendo uma expressão Scheme para modificar o código-fonte."

#. type: cindex
#: guix-git/doc/guix.texi:7881
#, no-wrap
msgid "GNU Build System"
msgstr "Sistema de construção GNU"

#. type: itemize
#: guix-git/doc/guix.texi:7887
msgid "The @code{build-system} field specifies the procedure to build the package (@pxref{Build Systems}).  Here, @code{gnu-build-system} represents the familiar GNU Build System, where packages may be configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence."
msgstr "O campo @code{build-system} especifica o procedimento para construir o pacote (@pxref{Build Systems}). Aqui, @code{gnu-build-system} representa o familiar GNU Build System, onde os pacotes podem ser configurados, construídos e instalados com a sequência de comando usual @code{./configure && make && make check && make install}."

#. type: itemize
#: guix-git/doc/guix.texi:7891
msgid "When you start packaging non-trivial software, you may need tools to manipulate those build phases, manipulate files, and so on.  @xref{Build Utilities}, for more on this."
msgstr "Ao começar a empacotar software não trivial, você pode precisar de ferramentas para manipular essas fases de compilação, manipular arquivos e assim por diante. @xref{Build Utilities}, para mais informações sobre isso."

#. type: itemize
#: guix-git/doc/guix.texi:7897
msgid "The @code{arguments} field specifies options for the build system (@pxref{Build Systems}).  Here it is interpreted by @code{gnu-build-system} as a request run @file{configure} with the @option{--enable-silent-rules} flag."
msgstr "O campo @code{arguments} especifica opções para o sistema de compilação (@pxref{Build Systems}). Aqui, ele é interpretado por @code{gnu-build-system} como uma solicitação executada @file{configure} com o sinalizador @option{--enable-silent-rules}."

#. type: findex
#: guix-git/doc/guix.texi:7898 guix-git/doc/guix.texi:7901
#, no-wrap
msgid "quote"
msgstr "quote"

#. type: cindex
#: guix-git/doc/guix.texi:7899
#, no-wrap
msgid "quoting"
msgstr "literais, inibição de avaliação"

#. type: findex
#: guix-git/doc/guix.texi:7900
#, no-wrap
msgid "'"
msgstr "'"

#. type: cindex
#: guix-git/doc/guix.texi:7902
#, no-wrap
msgid "backquote (quasiquote)"
msgstr "crase (quasiquote)"

#. type: findex
#: guix-git/doc/guix.texi:7903
#, no-wrap
msgid "`"
msgstr "`"

#. type: findex
#: guix-git/doc/guix.texi:7904
#, no-wrap
msgid "quasiquote"
msgstr "quasiquote"

#. type: cindex
#: guix-git/doc/guix.texi:7905
#, no-wrap
msgid "comma (unquote)"
msgstr "vírgula (unquote)"

#. type: findex
#: guix-git/doc/guix.texi:7906
#, no-wrap
msgid ","
msgstr ","

#. type: findex
#: guix-git/doc/guix.texi:7907
#, no-wrap
msgid "unquote"
msgstr "unquote"

#. type: itemize
#: guix-git/doc/guix.texi:7917
msgid "What about these quote (@code{'}) characters? They are Scheme syntax to introduce a literal list; @code{'} is synonymous with @code{quote}.  Sometimes you'll also see @code{`} (a backquote, synonymous with @code{quasiquote}) and @code{,} (a comma, synonymous with @code{unquote}).  @xref{Expression Syntax, quoting,, guile, GNU Guile Reference Manual}, for details.  Here the value of the @code{arguments} field is a list of arguments passed to the build system down the road, as with @code{apply} (@pxref{Fly Evaluation, @code{apply},, guile, GNU Guile Reference Manual})."
msgstr "E quanto a esses caracteres de citação (@code{'})? Eles são sintaxe Scheme para introduzir uma lista literal; @code{'} é sinônimo de @code{quote}. Às vezes, você também verá @code{`} (uma crase, sinônimo de @code{quasiquote}) e @code{,} (uma vírgula, sinônimo de @code{unquote}). @xref{Expression Syntax, quoting,, guile, Manual de referência do GNU Guile}, para detalhes. Aqui, o valor do campo @code{arguments} é uma lista de argumentos passados para o sistema de construção mais adiante, como com @code{apply} (@pxref{Fly Evaluation, @code{apply},, guile, Manual de referência do GNU Guile})."

#. type: itemize
#: guix-git/doc/guix.texi:7923
msgid "The hash-colon (@code{#:}) sequence defines a Scheme @dfn{keyword} (@pxref{Keywords,,, guile, GNU Guile Reference Manual}), and @code{#:configure-flags} is a keyword used to pass a keyword argument to the build system (@pxref{Coding With Keywords,,, guile, GNU Guile Reference Manual})."
msgstr "A sequência hash-dois-pontos (@code{#:}) define um @dfn{palavra-chave} em Scheme (@pxref{Keywords,,, guile, Manual de referência do GNU Guile}) e @code{#:configure-flags} é uma palavra-chave usada para passar um argumento de palavra-chave para o sistema de compilação (@pxref{Coding With Keywords,,, guile, Manual de referência do GNU Guile})."

#. type: itemize
#: guix-git/doc/guix.texi:7929
msgid "The @code{inputs} field specifies inputs to the build process---i.e., build-time or run-time dependencies of the package.  Here, we add an input, a reference to the @code{gawk} variable; @code{gawk} is itself bound to a @code{<package>} object."
msgstr "O campo @code{inputs} especifica entradas para o processo de construção---i.e., dependências de tempo de construção ou tempo de execução do pacote. Aqui, adicionamos uma entrada, uma referência à variável @code{gawk}; @code{gawk} é ele próprio vinculado a um objeto @code{<package>}."

#. type: itemize
#: guix-git/doc/guix.texi:7933
msgid "Note that GCC, Coreutils, Bash, and other essential tools do not need to be specified as inputs here.  Instead, @code{gnu-build-system} takes care of ensuring that they are present (@pxref{Build Systems})."
msgstr "Note que GCC, Coreutils, Bash e outras ferramentas essenciais não precisam ser especificadas como entradas aqui. Em vez disso, @code{gnu-build-system} cuida de garantir que elas estejam presentes (@pxref{Build Systems})."

#. type: itemize
#: guix-git/doc/guix.texi:7937
msgid "However, any other dependencies need to be specified in the @code{inputs} field.  Any dependency not specified here will simply be unavailable to the build process, possibly leading to a build failure."
msgstr "No entanto, quaisquer outras dependências precisam ser especificadas no campo @code{inputs}. Qualquer dependência não especificada aqui simplesmente ficará indisponível para o processo de build, possivelmente levando a uma falha de build."

#. type: Plain text
#: guix-git/doc/guix.texi:7940
msgid "@xref{package Reference}, for a full description of possible fields."
msgstr "@xref{package Reference}, para uma descrição completa dos campos possíveis."

#. type: cindex
#: guix-git/doc/guix.texi:7942
#, no-wrap
msgid "Scheme programming language, getting started"
msgstr "Linguagem de programação Scheme, primeiros passos"

#. type: quotation
#: guix-git/doc/guix.texi:7947
msgid "Intimidated by the Scheme language or curious about it? The Cookbook has a short section to get started that recaps some of the things shown above and explains the fundamentals.  @xref{A Scheme Crash Course,,, guix-cookbook, GNU Guix Cookbook}, for more information."
msgstr "Intimidado pela linguagem Scheme ou curioso sobre ela? O Livro de receitas tem uma seção curta para começar que recapitula algumas das coisas mostradas acima e explica os fundamentos. @xref{Um curso intensivo de Scheme,,, guix-cookbook.pt_BR, Livro de receitas do GNU Guix}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:7959
msgid "Once a package definition is in place, the package may actually be built using the @code{guix build} command-line tool (@pxref{Invoking guix build}), troubleshooting any build failures you encounter (@pxref{Debugging Build Failures}).  You can easily jump back to the package definition using the @command{guix edit} command (@pxref{Invoking guix edit}).  @xref{Packaging Guidelines}, for more information on how to test package definitions, and @ref{Invoking guix lint}, for information on how to check a definition for style conformance."
msgstr "Uma vez que uma definição de pacote esteja pronta, o pacote pode ser realmente construído usando a ferramenta de linha de comando @code{guix build} (@pxref{Invoking guix build}), solucionando problemas de quaisquer falhas de construção que você encontrar (@pxref{Debugging Build Failures}). Você pode facilmente voltar para a definição do pacote usando o comando @command{guix edit} (@pxref{Invoking guix edit}). @xref{Packaging Guidelines}, para mais informações sobre como testar definições de pacote, e @ref{Invoking guix lint}, para informações sobre como verificar uma definição para conformidade de estilo."

#. type: vindex
#: guix-git/doc/guix.texi:7959
#, no-wrap
msgid "GUIX_PACKAGE_PATH"
msgstr "GUIX_PACKAGE_PATH"

#. type: Plain text
#: guix-git/doc/guix.texi:7963
msgid "Lastly, @pxref{Channels}, for information on how to extend the distribution by adding your own package definitions in a ``channel''."
msgstr "Por fim, @pxref{Channels}, para obter informações sobre como estender a distribuição adicionando suas próprias definições de pacote em um ``canal''."

#. type: Plain text
#: guix-git/doc/guix.texi:7967
msgid "Finally, updating the package definition to a new upstream version can be partly automated by the @command{guix refresh} command (@pxref{Invoking guix refresh})."
msgstr "Por fim, a atualização da definição do pacote para uma nova versão upstream pode ser parcialmente automatizada pelo comando @command{guix refresh} (@pxref{Invoking guix refresh})."

#. type: Plain text
#: guix-git/doc/guix.texi:7973
msgid "Behind the scenes, a derivation corresponding to the @code{<package>} object is first computed by the @code{package-derivation} procedure.  That derivation is stored in a @file{.drv} file under @file{/gnu/store}.  The build actions it prescribes may then be realized by using the @code{build-derivations} procedure (@pxref{The Store})."
msgstr "Nos bastidores, uma derivação correspondente ao objeto @code{<package>} é primeiro computada pelo procedimento @code{package-derivation}. Essa derivação é armazenada em um arquivo @file{.drv} em @file{/gnu/store}. As ações de construção que ele prescreve podem então ser realizadas usando o procedimento @code{build-derivations} (@pxref{The Store})."

#. type: deffn
#: guix-git/doc/guix.texi:7974
#, no-wrap
msgid "{Procedure} package-derivation store package [system]"
msgstr "{Procedimento} package-derivation armazém pacote [sistema]"

#. type: deffn
#: guix-git/doc/guix.texi:7977
msgid "Return the @code{<derivation>} object of @var{package} for @var{system} (@pxref{Derivations})."
msgstr "Retorne o objeto @code{<derivation>} de @var{pacote} para @var{sistema} (@pxref{Derivations})."

#. type: deffn
#: guix-git/doc/guix.texi:7983
msgid "@var{package} must be a valid @code{<package>} object, and @var{system} must be a string denoting the target system type---e.g., @code{\"x86_64-linux\"} for an x86_64 Linux-based GNU system.  @var{store} must be a connection to the daemon, which operates on the store (@pxref{The Store})."
msgstr "@var{pacote} deve ser um objeto @code{<package>} válido e @var{sistema} deve ser uma string que indique o tipo de sistema de destino — por exemplo, @code{\"x86_64-linux\"} para um sistema GNU baseado em Linux x86_64. @var{armazém} deve ser uma conexão com o daemon, que opera no armazém (@pxref{The Store})."

#. type: Plain text
#: guix-git/doc/guix.texi:7989
msgid "Similarly, it is possible to compute a derivation that cross-builds a package for some other system:"
msgstr "Da mesma forma, é possível calcular uma derivação que crie um pacote para algum outro sistema:"

#. type: deffn
#: guix-git/doc/guix.texi:7990
#, no-wrap
msgid "{Procedure} package-cross-derivation store package target [system]"
msgstr "{Procedimento} package-cross-derivation armazém pacote alvo [sistema]"

#. type: deffn
#: guix-git/doc/guix.texi:7993
msgid "Return the @code{<derivation>} object of @var{package} cross-built from @var{system} to @var{target}."
msgstr "Retorne o objeto @code{<derivation>} de @var{pacote} criado de @var{sistema} para @var{alvo}."

#. type: deffn
#: guix-git/doc/guix.texi:7997
msgid "@var{target} must be a valid GNU triplet denoting the target hardware and operating system, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets,,, autoconf, Autoconf})."
msgstr "@var{alvo} deve ser um tripleto GNU válido que indique o hardware e o sistema operacional de destino, como @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets,,, autoconf, Autoconf})."

#. type: Plain text
#: guix-git/doc/guix.texi:8001
msgid "Once you have package definitions, you can easily define @emph{variants} of those packages.  @xref{Defining Package Variants}, for more on that."
msgstr "Depois de ter as definições dos pacotes, você pode definir facilmente @emph{variantes} desses pacotes. @xref{Defining Package Variants}, para mais informações sobre isso."

#. type: subsection
#: guix-git/doc/guix.texi:8009
#, no-wrap
msgid "@code{package} Reference"
msgstr "Referência do @code{package}"

#. type: Plain text
#: guix-git/doc/guix.texi:8013
msgid "This section summarizes all the options available in @code{package} declarations (@pxref{Defining Packages})."
msgstr "Esta seção resume todas as opções disponíveis nas declarações @code{package} (@pxref{Defining Packages})."

#. type: deftp
#: guix-git/doc/guix.texi:8014
#, no-wrap
msgid "{Data Type} package"
msgstr "{Tipo de dados} package"

#. type: deftp
#: guix-git/doc/guix.texi:8016
msgid "This is the data type representing a package recipe."
msgstr "Este é o tipo de dado que representa uma receita de pacote."

#. type: table
#: guix-git/doc/guix.texi:8020
msgid "The name of the package, as a string."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8021 guix-git/doc/guix.texi:9088
#, no-wrap
msgid "version"
msgstr "version"

#. type: table
#: guix-git/doc/guix.texi:8024
msgid "The version of the package, as a string.  @xref{Version Numbers}, for guidelines."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:8025 guix-git/doc/guix.texi:15778
#: guix-git/doc/guix.texi:18616 guix-git/doc/guix.texi:19346
#, no-wrap
msgid "source"
msgstr "source"

#. type: table
#: guix-git/doc/guix.texi:8032
msgid "An object telling how the source code for the package should be acquired.  Most of the time, this is an @code{origin} object, which denotes a file fetched from the Internet (@pxref{origin Reference}).  It can also be any other ``file-like'' object such as a @code{local-file}, which denotes a file from the local file system (@pxref{G-Expressions, @code{local-file}})."
msgstr "Um objeto que diz como o código-fonte do pacote deve ser adquirido. Na maioria das vezes, este é um objeto @code{origin}, que denota um arquivo obtido da Internet (@pxref{origin Reference}). Também pode ser qualquer outro objeto ``tipo arquivo'', como um @code{local-file}, que denota um arquivo do sistema de arquivos local (@pxref{G-Expressions, @code{local-file}})."

#. type: code{#1}
#: guix-git/doc/guix.texi:8033
#, no-wrap
msgid "build-system"
msgstr "build-system"

#. type: table
#: guix-git/doc/guix.texi:8036
msgid "The build system that should be used to build the package (@pxref{Build Systems})."
msgstr "O sistema de compilação que deve ser usado para compilar o pacote (@pxref{Build Systems})."

#. type: item
#: guix-git/doc/guix.texi:8037 guix-git/doc/guix.texi:23071
#, no-wrap
msgid "@code{arguments} (default: @code{'()})"
msgstr "@code{arguments} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:8041
msgid "The arguments that should be passed to the build system (@pxref{Build Systems}).  This is a list, typically containing sequential keyword-value pairs, as in this example:"
msgstr "Os argumentos que devem ser passados para o sistema de compilação (@pxref{Build Systems}). Esta é uma lista, normalmente contendo pares sequenciais de palavra-chave-valor, como neste exemplo:"

#. type: lisp
#: guix-git/doc/guix.texi:8050
#, no-wrap
msgid ""
"(package\n"
"  (name \"example\")\n"
"  ;; several fields omitted\n"
"  (arguments\n"
"    (list #:tests? #f                     ;skip tests\n"
"          #:make-flags #~'(\"VERBOSE=1\")   ;pass flags to 'make'\n"
"          #:configure-flags #~'(\"--enable-frobbing\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:8057
msgid "The exact set of supported keywords depends on the build system (@pxref{Build Systems}), but you will find that almost all of them honor @code{#:configure-flags}, @code{#:make-flags}, @code{#:tests?}, and @code{#:phases}.  The @code{#:phases} keyword in particular lets you modify the set of build phases for your package (@pxref{Build Phases})."
msgstr "O conjunto exato de palavras-chave suportadas depende do sistema de compilação (@pxref{Build Systems}), mas você verá que quase todas elas honram @code{#:configure-flags}, @code{#:make-flags}, @code{#:tests?} e @code{#:phases}. A palavra-chave @code{#:phases} em particular permite que você modifique o conjunto de fases de compilação para seu pacote (@pxref{Build Phases})."

#. type: table
#: guix-git/doc/guix.texi:8061
msgid "The REPL has dedicated commands to interactively inspect values of some of these arguments, as a convenient debugging aid (@pxref{Using Guix Interactively})."
msgstr "O REPL tem comandos dedicados para inspecionar interativamente os valores de alguns desses argumentos, como um auxílio de depuração conveniente (@pxref{Using Guix Interactively})."

#. type: quotation
#: guix-git/doc/guix.texi:8062 guix-git/doc/guix.texi:8099
#, no-wrap
msgid "Compatibility Note"
msgstr "Nota de compatibilidade"

#. type: quotation
#: guix-git/doc/guix.texi:8066
msgid "Until version 1.3.0, the @code{arguments} field would typically use @code{quote} (@code{'}) or @code{quasiquote} (@code{`}) and no G-expressions, like so:"
msgstr "Até a versão 1.3.0, o campo @code{arguments} normalmente usaria @code{quote} (@code{'}) ou @code{quasiquote} (@code{`}) e nenhuma expressão G, assim:"

#. type: lisp
#: guix-git/doc/guix.texi:8073
#, no-wrap
msgid ""
"(package\n"
"  ;; several fields omitted\n"
"  (arguments   ;old-style quoted arguments\n"
"   '(#:tests? #f\n"
"     #:configure-flags '(\"--enable-frobbing\"))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:8078
msgid "To convert from that style to the one shown above, you can run @code{guix style -S arguments @var{package}} (@pxref{Invoking guix style})."
msgstr "Para converter esse estilo para o mostrado acima, você pode executar @code{guix style -S arguments @var{pacote}} (@pxref{Invoking guix style})."

#. type: item
#: guix-git/doc/guix.texi:8080 guix-git/doc/guix.texi:51922
#, no-wrap
msgid "@code{inputs} (default: @code{'()})"
msgstr "@code{inputs} (padrão: @code{'()})"

#. type: itemx
#: guix-git/doc/guix.texi:8081
#, no-wrap
msgid "@code{native-inputs} (default: @code{'()})"
msgstr "@code{native-inputs} (padrão: @code{'()})"

#. type: itemx
#: guix-git/doc/guix.texi:8082
#, no-wrap
msgid "@code{propagated-inputs} (default: @code{'()})"
msgstr "@code{propagated-inputs} (padrão: @code{'()})"

#. type: cindex
#: guix-git/doc/guix.texi:8083
#, no-wrap
msgid "inputs, of packages"
msgstr "entradas, de pacotes"

#. type: table
#: guix-git/doc/guix.texi:8090
msgid "These fields list dependencies of the package.  Each element of these lists is either a package, origin, or other ``file-like object'' (@pxref{G-Expressions}); to specify the output of that file-like object that should be used, pass a two-element list where the second element is the output (@pxref{Packages with Multiple Outputs}, for more on package outputs).  For example, the list below specifies three inputs:"
msgstr "Esses campos listam dependências do pacote. Cada elemento dessas listas é um pacote, origem ou outro ``objeto tipo arquivo'' (@pxref{G-Expressions}); para especificar a saída desse objeto tipo arquivo que deve ser usado, passe uma lista de dois elementos onde o segundo elemento é a saída (@pxref{Packages with Multiple Outputs}, para mais informações sobre saídas de pacotes). Por exemplo, a lista abaixo especifica três entradas:"

#. type: lisp
#: guix-git/doc/guix.texi:8094
#, no-wrap
msgid ""
"(list libffi libunistring\n"
"      `(,glib \"bin\"))      ;the \"bin\" output of GLib\n"
msgstr ""
"(list libffi libunistring\n"
"      `(,glib \"bin\"))      ;a saída \"bin\" de GLib\n"

#. type: table
#: guix-git/doc/guix.texi:8098
msgid "In the example above, the @code{\"out\"} output of @code{libffi} and @code{libunistring} is used."
msgstr "No exemplo acima, a saída @code{\"out\"} de @code{libffi} e @code{libunistring} é usada."

#. type: quotation
#: guix-git/doc/guix.texi:8106
msgid "Until version 1.3.0, input lists were a list of tuples, where each tuple has a label for the input (a string) as its first element, a package, origin, or derivation as its second element, and optionally the name of the output thereof that should be used, which defaults to @code{\"out\"}.  For example, the list below is equivalent to the one above, but using the @dfn{old input style}:"
msgstr "Até a versão 1.3.0, as listas de entrada eram uma lista de tuplas, onde cada tupla tem um rótulo para a entrada (uma string) como seu primeiro elemento, um pacote, origem ou derivação como seu segundo elemento e, opcionalmente, o nome da saída que deve ser usada, cujo padrão é @code{\"out\"}. Por exemplo, a lista abaixo é equivalente à acima, mas usando o @dfn{antigo estilo de entrada}:"

#. type: lisp
#: guix-git/doc/guix.texi:8112
#, no-wrap
msgid ""
";; Old input style (deprecated).\n"
"`((\"libffi\" ,libffi)\n"
"  (\"libunistring\" ,libunistring)\n"
"  (\"glib:bin\" ,glib \"bin\"))  ;the \"bin\" output of GLib\n"
msgstr ""
";; Estilo de entrada antigo (obsoleto).\n"
"`((\"libffi\" ,libffi)\n"
"  (\"libunistring\" ,libunistring)\n"
"  (\"glib:bin\" ,glib \"bin\"))  ;a saída \"bin\" do GLib\n"

#. type: quotation
#: guix-git/doc/guix.texi:8118
msgid "This style is now deprecated; it is still supported but support will be removed in a future version.  It should not be used for new package definitions.  @xref{Invoking guix style}, on how to migrate to the new style."
msgstr "Este estilo agora está obsoleto; ele ainda é suportado, mas o suporte será removido em uma versão futura. Ele não deve ser usado para novas definições de pacote. @xref{Invoking guix style}, sobre como migrar para o novo estilo."

#. type: cindex
#: guix-git/doc/guix.texi:8120
#, no-wrap
msgid "cross compilation, package dependencies"
msgstr "compilação cruzada, dependências de pacotes"

#. type: table
#: guix-git/doc/guix.texi:8126
msgid "The distinction between @code{native-inputs} and @code{inputs} is necessary when considering cross-compilation.  When cross-compiling, dependencies listed in @code{inputs} are built for the @emph{target} architecture; conversely, dependencies listed in @code{native-inputs} are built for the architecture of the @emph{build} machine."
msgstr "A distinção entre @code{native-inputs} e @code{inputs} é necessária ao considerar a compilação cruzada. Ao compilar cruzadamente, as dependências listadas em @code{inputs} são construídas para a arquitetura @emph{target} (alvo); inversamente, as dependências listadas em @code{native-inputs} são construídas para a arquitetura da máquina @emph{build}."

#. type: table
#: guix-git/doc/guix.texi:8131
msgid "@code{native-inputs} is typically used to list tools needed at build time, but not at run time, such as Autoconf, Automake, pkg-config, Gettext, or Bison.  @command{guix lint} can report likely mistakes in this area (@pxref{Invoking guix lint})."
msgstr "@code{native-inputs} é normalmente usado para listar ferramentas necessárias no momento da compilação, mas não no momento da execução, como Autoconf, Automake, pkg-config, Gettext ou Bison. @command{guix lint} pode relatar prováveis erros nesta área (@pxref{Invoking guix lint})."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:8139
msgid "package-propagated-inputs"
msgstr "package-propagated-inputs"

#. type: table
#: guix-git/doc/guix.texi:8139
msgid "Lastly, @code{propagated-inputs} is similar to @code{inputs}, but the specified packages will be automatically installed to profiles (@pxref{Features, the role of profiles in Guix}) alongside the package they belong to (@pxref{package-cmd-propagated-inputs, @command{guix package}}, for information on how @command{guix package} deals with propagated inputs)."
msgstr "Por fim, @code{propagated-inputs} é semelhante a @code{inputs}, mas os pacotes especificados serão instalados automaticamente nos perfis (@pxref{Features, a função dos perfis no Guix}) junto com o pacote ao qual pertencem (@pxref{package-cmd-propagated-inputs, @command{guix package}}, para obter informações sobre como @command{guix package} lida com entradas propagadas)."

#. type: table
#: guix-git/doc/guix.texi:8143
msgid "For example this is necessary when packaging a C/C++ library that needs headers of another library to compile, or when a pkg-config file refers to another one @i{via} its @code{Requires} field."
msgstr "Por exemplo, isso é necessário ao empacotar uma biblioteca C/C++ que precisa de cabeçalhos de outra biblioteca para compilar, ou quando um arquivo pkg-config faz referência a outro por meio de seu campo @code{Requires}."

#. type: table
#: guix-git/doc/guix.texi:8150
msgid "Another example where @code{propagated-inputs} is useful is for languages that lack a facility to record the run-time search path akin to the @code{RUNPATH} of ELF files; this includes Guile, Python, Perl, and more.  When packaging libraries written in those languages, ensure they can find library code they depend on at run time by listing run-time dependencies in @code{propagated-inputs} rather than @code{inputs}."
msgstr "Outro exemplo em que @code{propagated-inputs} é útil é para linguagens que não têm um recurso para registrar o caminho de pesquisa em tempo de execução semelhante ao @code{RUNPATH} de arquivos ELF; isso inclui Guile, Python, Perl e mais. Ao empacotar bibliotecas escritas nessas linguagens, garanta que elas possam encontrar o código da biblioteca do qual dependem em tempo de execução listando as dependências em tempo de execução em @code{propagated-inputs} em vez de @code{inputs}."

#. type: item
#: guix-git/doc/guix.texi:8151
#, no-wrap
msgid "@code{outputs} (default: @code{'(\"out\")})"
msgstr "@code{outputs} (padrão: @code{'(\"out\")})"

#. type: table
#: guix-git/doc/guix.texi:8154
msgid "The list of output names of the package.  @xref{Packages with Multiple Outputs}, for typical uses of additional outputs."
msgstr "A lista de nomes de saída do pacote. @xref{Packages with Multiple Outputs}, para usos típicos de saídas adicionais."

#. type: item
#: guix-git/doc/guix.texi:8155
#, no-wrap
msgid "@code{native-search-paths} (default: @code{'()})"
msgstr "@code{native-search-paths} (padrão: @code{'()})"

#. type: item
#: guix-git/doc/guix.texi:8156 guix-git/doc/guix.texi:9107
#, no-wrap
msgid "@code{search-paths} (default: @code{'()})"
msgstr "@code{search-paths} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:8160
msgid "A list of @code{search-path-specification} objects describing search-path environment variables honored by the package.  @xref{Search Paths}, for more on search path specifications."
msgstr "Uma lista de objetos @code{search-path-specification} descrevendo variáveis de ambiente do caminho de pesquisa respeitadas pelo pacote. @xref{Search Paths}, para mais informações sobre especificações do caminho de pesquisa."

#. type: table
#: guix-git/doc/guix.texi:8166
msgid "As for inputs, the distinction between @code{native-search-paths} and @code{search-paths} only matters when cross-compiling.  In a cross-compilation context, @code{native-search-paths} applies exclusively to native inputs whereas @code{search-paths} applies only to host inputs."
msgstr "Quanto às entradas, a distinção entre @code{native-search-paths} e @code{search-paths} só importa quando há compilação cruzada. Em um contexto de compilação cruzada, @code{native-search-paths} se aplica exclusivamente a entradas nativas, enquanto @code{search-paths} se aplica somente a entradas de host."

#. type: table
#: guix-git/doc/guix.texi:8173
msgid "Packages such as cross-compilers care about target inputs---for instance, our (modified) GCC cross-compiler has @env{CROSS_C_INCLUDE_PATH} in @code{search-paths}, which allows it to pick @file{.h} files for the target system and @emph{not} those of native inputs.  For the majority of packages though, only @code{native-search-paths} makes sense."
msgstr "Pacotes como compiladores cruzados se importam com entradas de destino --- por exemplo, nosso compilador cruzado GCC (modificado) tem @env{CROSS_C_INCLUDE_PATH} em @code{search-paths}, o que permite que ele escolha arquivos @file{.h} para o sistema de destino e @emph{não} aqueles de entradas nativas. Para a maioria dos pacotes, porém, apenas @code{native-search-paths} faz sentido."

#. type: item
#: guix-git/doc/guix.texi:8174
#, no-wrap
msgid "@code{replacement} (default: @code{#f})"
msgstr "@code{replacement} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8178
msgid "This must be either @code{#f} or a package object that will be used as a @dfn{replacement} for this package.  @xref{Security Updates, grafts}, for details."
msgstr "Deve ser @code{#f} ou um objeto de pacote que será usado como um @dfn{substituição} para este pacote. @xref{Security Updates, enxertos}, para detalhes."

#. type: item
#: guix-git/doc/guix.texi:8179 guix-git/doc/guix.texi:15770
#, no-wrap
msgid "synopsis"
msgstr "synopsis"

#. type: table
#: guix-git/doc/guix.texi:8181
msgid "A one-line description of the package."
msgstr "Uma descrição de uma linha do pacote."

#. type: code{#1}
#: guix-git/doc/guix.texi:8182 guix-git/doc/guix.texi:15771
#: guix-git/doc/guix.texi:47770 guix-git/doc/guix.texi:47930
#, no-wrap
msgid "description"
msgstr "description"

#. type: table
#: guix-git/doc/guix.texi:8185
msgid "A more elaborate description of the package, as a string in Texinfo syntax."
msgstr "Uma descrição mais elaborada do pacote, como uma string na sintaxe Texinfo."

#. type: code{#1}
#: guix-git/doc/guix.texi:8186
#, no-wrap
msgid "license"
msgstr "license"

#. type: cindex
#: guix-git/doc/guix.texi:8187
#, no-wrap
msgid "license, of packages"
msgstr "licença, de pacotes"

#. type: table
#: guix-git/doc/guix.texi:8190
msgid "The license of the package; a value from @code{(guix licenses)}, or a list of such values."
msgstr "A licença do pacote; um valor de @code{(guix licenses)}, ou uma lista de tais valores."

#. type: itemx
#: guix-git/doc/guix.texi:8191 guix-git/doc/guix.texi:15779
#, no-wrap
msgid "home-page"
msgstr "home-page"

#. type: table
#: guix-git/doc/guix.texi:8193
msgid "The URL to the home-page of the package, as a string."
msgstr "A URL para a página inicial do pacote, como uma string."

#. type: item
#: guix-git/doc/guix.texi:8194
#, no-wrap
msgid "@code{supported-systems} (default: @code{%supported-systems})"
msgstr "@code{supported-systems} (padrão: @code{%supported-systems})"

#. type: table
#: guix-git/doc/guix.texi:8197
msgid "The list of systems supported by the package, as strings of the form @code{architecture-kernel}, for example @code{\"x86_64-linux\"}."
msgstr "A lista de sistemas suportados pelo pacote, como strings do formato @code{arquitetura-kernel}, por exemplo @code{\"x86_64-linux\"}."

#. type: item
#: guix-git/doc/guix.texi:8198
#, no-wrap
msgid "@code{location} (default: source location of the @code{package} form)"
msgstr "@code{location} (padrão: localização de origem do formulário @code{package})"

#. type: table
#: guix-git/doc/guix.texi:8202
msgid "The source location of the package.  It is useful to override this when inheriting from another package, in which case this field is not automatically corrected."
msgstr "O local de origem do pacote. É útil sobrescrever isso ao herdar de outro pacote, em cujo caso esse campo não é corrigido automaticamente."

#. type: defmac
#: guix-git/doc/guix.texi:8205
#, no-wrap
msgid "this-package"
msgstr "this-package"

#. type: defmac
#: guix-git/doc/guix.texi:8208
msgid "When used in the @emph{lexical scope} of a package field definition, this identifier resolves to the package being defined."
msgstr "Quando usado no @emph{escopo lexical} de uma definição de campo de pacote, esse identificador é resolvido para o pacote que está sendo definido."

#. type: defmac
#: guix-git/doc/guix.texi:8211
msgid "The example below shows how to add a package as a native input of itself when cross-compiling:"
msgstr "O exemplo abaixo mostra como adicionar um pacote como uma entrada nativa de si mesmo durante a compilação cruzada:"

#. type: lisp
#: guix-git/doc/guix.texi:8216
#, no-wrap
msgid ""
"(package\n"
"  (name \"guile\")\n"
"  ;; ...\n"
"\n"
msgstr ""
"(package\n"
"  (name \"guile\")\n"
"  ;; ...\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8222
#, no-wrap
msgid ""
"  ;; When cross-compiled, Guile, for example, depends on\n"
"  ;; a native version of itself.  Add it here.\n"
"  (native-inputs (if (%current-target-system)\n"
"                     (list this-package)\n"
"                     '())))\n"
msgstr ""
"  ;; Quando compilado de forma cruzada, Guile, por exemplo, depende de\n"
"  ;; uma versão nativa de si mesmo. Adicione aqui.\n"
"  (native-inputs (if (%current-target-system)\n"
"                     (list this-package)\n"
"                     '())))\n"

#. type: defmac
#: guix-git/doc/guix.texi:8225
msgid "It is an error to refer to @code{this-package} outside a package definition."
msgstr "É um erro fazer referência a @code{this-package} fora de uma definição de pacote."

#. type: Plain text
#: guix-git/doc/guix.texi:8229
msgid "The following helper procedures are provided to help deal with package inputs."
msgstr "Os seguintes procedimentos auxiliares são fornecidos para ajudar a lidar com entradas de pacotes."

#. type: deffn
#: guix-git/doc/guix.texi:8230
#, no-wrap
msgid "{Procedure} lookup-package-input package name"
msgstr "{Procedimento} lookup-package-input pacote nome"

#. type: deffnx
#: guix-git/doc/guix.texi:8231
#, no-wrap
msgid "{Procedure} lookup-package-native-input package name"
msgstr "{Procedimento} lookup-package-native-input pacote nome"

#. type: deffnx
#: guix-git/doc/guix.texi:8232
#, no-wrap
msgid "{Procedure} lookup-package-propagated-input package name"
msgstr "{Procedimento} lookup-package-propagated-input pacote nome"

#. type: deffnx
#: guix-git/doc/guix.texi:8233
#, no-wrap
msgid "{Procedure} lookup-package-direct-input package name"
msgstr "{Procedimento} lookup-package-direct-input pacote nome"

#. type: deffn
#: guix-git/doc/guix.texi:8236
msgid "Look up @var{name} among @var{package}'s inputs (or native, propagated, or direct inputs).  Return it if found, @code{#f} otherwise."
msgstr "Procure @var{nome} entre as entradas de @var{pacote} (ou entradas nativas, propagadas ou diretas). Retorne-o se encontrado, @code{#f} caso contrário."

#. type: deffn
#: guix-git/doc/guix.texi:8239
#, fuzzy
#| msgid "@var{name} is the name of a package depended on.  Here's how you might use it:"
msgid "@var{name} is the name of a package or the file name of an origin depended on.  Here's how you might use it:"
msgstr "@var{nome} é o nome de um pacote dependente. Aqui está como você pode usá-lo:"

#. type: lisp
#: guix-git/doc/guix.texi:8242
#, no-wrap
msgid ""
"(use-modules (guix packages) (gnu packages base))\n"
"\n"
msgstr ""
"(use-modules (guix packages) (gnu packages base))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8245
#, no-wrap
msgid ""
"(lookup-package-direct-input coreutils \"gmp\")\n"
"@result{} #<package gmp@@6.2.1 @dots{}>\n"
msgstr ""
"(lookup-package-direct-input coreutils \"gmp\")\n"
"@result{} #<package gmp@@6.2.1 @dots{}>\n"

#. type: deffn
#: guix-git/doc/guix.texi:8249
msgid "In this example we obtain the @code{gmp} package that is among the direct inputs of @code{coreutils}."
msgstr "Neste exemplo, obtemos o pacote @code{gmp} que está entre as entradas diretas de @code{coreutils}."

#. type: deffn
#: guix-git/doc/guix.texi:8253
msgid "When looking up an origin, use the name that appears in the origin's @code{file-name} field or its default file name---e.g., @code{\"foo-1.2.tar.gz\"}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:8255
#, fuzzy, no-wrap
#| msgid "inputs, for Python packages"
msgid "development inputs, of a package"
msgstr "entradas, para pacotes Python"

#. type: cindex
#: guix-git/doc/guix.texi:8256
#, fuzzy, no-wrap
#| msgid "inputs, for Python packages"
msgid "implicit inputs, of a package"
msgstr "entradas, para pacotes Python"

#. type: Plain text
#: guix-git/doc/guix.texi:8261
msgid "Sometimes you will want to obtain the list of inputs needed to @emph{develop} a package---all the inputs that are visible when the package is compiled.  This is what the @code{package-development-inputs} procedure returns."
msgstr "Às vezes, você vai querer obter a lista de entradas necessárias para @emph{desenvolver} um pacote---todas as entradas que são visíveis quando o pacote é compilado. É isso que o procedimento @code{package-development-inputs} retorna."

#. type: deffn
#: guix-git/doc/guix.texi:8262
#, no-wrap
msgid "{Procedure} package-development-inputs package [system] [#:target #f]"
msgstr "{Procedimento} package-development-inputs pacote [sistema] [#:target #f]"

#. type: deffn
#: guix-git/doc/guix.texi:8268
msgid "Return the list of inputs required by @var{package} for development purposes on @var{system}.  When @var{target} is true, return the inputs needed to cross-compile @var{package} from @var{system} to @var{target}, where @var{target} is a triplet such as @code{\"aarch64-linux-gnu\"}."
msgstr "Retorna a lista de entradas necessárias para @var{pacote} para fins de desenvolvimento em @var{sistema}. Quando @var{target} é verdadeiro, retorna as entradas necessárias para compilar cruzadamente @var{pacote} de @var{sistema} para o alvo @var{target}, onde @var{target} é um tripleto como @code{\"aarch64-linux-gnu\"}."

#. type: deffn
#: guix-git/doc/guix.texi:8272
msgid "Note that the result includes both explicit inputs and implicit inputs---inputs automatically added by the build system (@pxref{Build Systems}).  Let us take the @code{hello} package to illustrate that:"
msgstr "Note que o resultado inclui entradas explícitas e entradas implícitas---entradas adicionadas automaticamente pelo sistema de construção (@pxref{Build Systems}). Vamos pegar o pacote @code{hello} para ilustrar isso:"

#. type: lisp
#: guix-git/doc/guix.texi:8275
#, no-wrap
msgid ""
"(use-modules (gnu packages base) (guix packages))\n"
"\n"
msgstr ""
"(use-modules (gnu packages base) (guix packages))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8278
#, no-wrap
msgid ""
"hello\n"
"@result{} #<package hello@@2.10 gnu/packages/base.scm:79 7f585d4f6790>\n"
"\n"
msgstr ""
"hello\n"
"@result{} #<package hello@@2.10 gnu/packages/base.scm:79 7f585d4f6790>\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8281
#, no-wrap
msgid ""
"(package-direct-inputs hello)\n"
"@result{} ()\n"
"\n"
msgstr ""
"(package-direct-inputs hello)\n"
"@result{} ()\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8284
#, no-wrap
msgid ""
"(package-development-inputs hello)\n"
"@result{} ((\"source\" @dots{}) (\"tar\" #<package tar@@1.32 @dots{}>) @dots{})\n"
msgstr ""
"(package-development-inputs hello)\n"
"@result{} ((\"source\" @dots{}) (\"tar\" #<package tar@@1.32 @dots{}>) @dots{})\n"

#. type: deffn
#: guix-git/doc/guix.texi:8293
msgid "In this example, @code{package-direct-inputs} returns the empty list, because @code{hello} has zero explicit dependencies.  Conversely, @code{package-development-inputs} includes inputs implicitly added by @code{gnu-build-system} that are required to build @code{hello}: tar, gzip, GCC, libc, Bash, and more.  To visualize it, @command{guix graph hello} would show you explicit inputs, whereas @command{guix graph -t bag hello} would include implicit inputs (@pxref{Invoking guix graph})."
msgstr "Neste exemplo, @code{package-direct-inputs} retorna a lista vazia, porque @code{hello} tem zero dependências explícitas. Por outro lado, @code{package-development-inputs} inclui entradas adicionadas implicitamente por @code{gnu-build-system} que são necessárias para construir @code{hello}: tar, gzip, GCC, libc, Bash e mais. Para visualizá-lo, @command{guix graph hello} mostraria entradas explícitas, enquanto @command{guix graph -t bag hello} incluiria entradas implícitas (@pxref{Invoking guix graph})."

#. type: Plain text
#: guix-git/doc/guix.texi:8299
msgid "Because packages are regular Scheme objects that capture a complete dependency graph and associated build procedures, it is often useful to write procedures that take a package and return a modified version thereof according to some parameters.  Below are a few examples."
msgstr "Como os pacotes são objetos Scheme regulares que capturam um grafo de dependência completo e procedimentos de construção associados, geralmente é útil escrever procedimentos que pegam um pacote e retornam uma versão modificada dele de acordo com alguns parâmetros. Abaixo estão alguns exemplos."

#. type: cindex
#: guix-git/doc/guix.texi:8300
#, no-wrap
msgid "tool chain, choosing a package's tool chain"
msgstr "cadeia de ferramentas, escolhendo a cadeia de ferramentas de um pacote"

#. type: deffn
#: guix-git/doc/guix.texi:8301
#, no-wrap
msgid "{Procedure} package-with-c-toolchain package toolchain"
msgstr "{Procedimento} package-with-c-toolchain pacote cadeia"

#. type: deffn
#: guix-git/doc/guix.texi:8306
msgid "Return a variant of @var{package} that uses @var{toolchain} instead of the default GNU C/C++ toolchain.  @var{toolchain} must be a list of inputs (label/package tuples) providing equivalent functionality, such as the @code{gcc-toolchain} package."
msgstr "Retorna uma variante de @var{pacote} que usa @var{cadeia} de ferramentas em vez da cadeia de ferramentas padrão GNU C/C++. @var{cadeia} deve ser uma lista de entradas (tuplas de rótulo/pacote) que fornecem funcionalidade equivalente, como o pacote @code{gcc-toolchain}."

#. type: deffn
#: guix-git/doc/guix.texi:8310
msgid "The example below returns a variant of the @code{hello} package built with GCC@tie{}10.x and the rest of the GNU tool chain (Binutils and the GNU C Library) instead of the default tool chain:"
msgstr "O exemplo abaixo retorna uma variante do pacote @code{hello} criado com GCC@tie{}10.x e o restante da cadeia de ferramentas GNU (Binutils e a Biblioteca C GNU) em vez da cadeia de ferramentas padrão:"

#. type: lisp
#: guix-git/doc/guix.texi:8314
#, no-wrap
msgid ""
"(let ((toolchain (specification->package \"gcc-toolchain@@10\")))\n"
"  (package-with-c-toolchain hello `((\"toolchain\" ,toolchain))))\n"
msgstr ""
"(let ((toolchain (specification->package \"gcc-toolchain@@10\")))\n"
"  (package-with-c-toolchain hello `((\"toolchain\" ,toolchain))))\n"

#. type: deffn
#: guix-git/doc/guix.texi:8322
msgid "The build tool chain is part of the @dfn{implicit inputs} of packages---it's usually not listed as part of the various ``inputs'' fields and is instead pulled in by the build system.  Consequently, this procedure works by changing the build system of @var{package} so that it pulls in @var{toolchain} instead of the defaults.  @xref{Build Systems}, for more on build systems."
msgstr "A cadeia de ferramentas de construção é parte das @dfn{entradas implícitas} dos pacotes---geralmente não é listada como parte dos vários campos ``entradas'' e, em vez disso, é puxada pelo sistema de construção. Consequentemente, esse procedimento funciona alterando o sistema de construção de @var{pacote} para que ele puxe @var{cadeia} de ferramentas em vez dos padrões. @xref{Build Systems}, para mais informações sobre sistemas de construção."

#. type: subsection
#: guix-git/doc/guix.texi:8325
#, no-wrap
msgid "@code{origin} Reference"
msgstr "Referência do @code{origin}"

#. type: Plain text
#: guix-git/doc/guix.texi:8333
msgid "This section documents @dfn{origins}.  An @code{origin} declaration specifies data that must be ``produced''---downloaded, usually---and whose content hash is known in advance.  Origins are primarily used to represent the source code of packages (@pxref{Defining Packages}).  For that reason, the @code{origin} form allows you to declare patches to apply to the original source code as well as code snippets to modify it."
msgstr "Esta seção documenta @dfn{origens}. Uma declaração @code{origin} especifica dados que devem ser ``produzidos''---baixados, normalmente---e cujo hash de conteúdo é conhecido com antecedência. Origens são usados principalmente para representar o código-fonte de pacotes (@pxref{Defining Packages}). Por esse motivo, o formulário @code{origin} permite que você declare remendos para aplicar ao código-fonte original, bem como trechos de código para modificá-lo."

#. type: deftp
#: guix-git/doc/guix.texi:8334
#, no-wrap
msgid "{Data Type} origin"
msgstr "{Tipo de dados} origin"

#. type: deftp
#: guix-git/doc/guix.texi:8336
msgid "This is the data type representing a source code origin."
msgstr "Este é o tipo de dado que representa a origem do código-fonte."

#. type: code{#1}
#: guix-git/doc/guix.texi:8338 guix-git/doc/guix.texi:34787
#, no-wrap
msgid "uri"
msgstr "uri"

#. type: table
#: guix-git/doc/guix.texi:8343
msgid "An object containing the URI of the source.  The object type depends on the @code{method} (see below).  For example, when using the @var{url-fetch} method of @code{(guix download)}, the valid @code{uri} values are: a URL represented as a string, or a list thereof."
msgstr "Um objeto contendo o URI da fonte. O tipo de objeto depende do @code{method} (veja abaixo). Por exemplo, ao usar o método @var{url-fetch} de @code{(guix download)}, os valores válidos de @code{uri} são: uma URL representada como uma string, ou uma lista delas."

#. type: cindex
#: guix-git/doc/guix.texi:8344
#, no-wrap
msgid "fixed-output derivations, for download"
msgstr "derivações de saída fixa, para download"

#. type: code{#1}
#: guix-git/doc/guix.texi:8345
#, no-wrap
msgid "method"
msgstr "method"

#. type: table
#: guix-git/doc/guix.texi:8352
msgid "A monadic procedure that handles the given URI@.  The procedure must accept at least three arguments: the value of the @code{uri} field and the hash algorithm and hash value specified by the @code{hash} field.  It must return a store item or a derivation in the store monad (@pxref{The Store Monad}); most methods return a fixed-output derivation (@pxref{Derivations})."
msgstr "Um procedimento monádico que manipula o URI fornecido. O procedimento deve aceitar pelo menos três argumentos: o valor do campo @code{uri} e o algoritmo de hash e o valor de hash especificados pelo campo @code{hash}. Ele deve retornar um item do armazém ou uma derivação na mônada do armazém (@pxref{The Store Monad}); a maioria dos métodos retorna uma derivação de saída fixa (@pxref{Derivations})."

#. type: table
#: guix-git/doc/guix.texi:8356
msgid "Commonly used methods include @code{url-fetch}, which fetches data from a URL, and @code{git-fetch}, which fetches data from a Git repository (see below)."
msgstr "Os métodos comumente usados incluem @code{url-fetch}, que busca dados de uma URL, e @code{git-fetch}, que busca dados de um repositório Git (veja abaixo)."

#. type: code{#1}
#: guix-git/doc/guix.texi:8357
#, no-wrap
msgid "sha256"
msgstr "sha256"

#. type: table
#: guix-git/doc/guix.texi:8361
msgid "A bytevector containing the SHA-256 hash of the source.  This is equivalent to providing a @code{content-hash} SHA256 object in the @code{hash} field described below."
msgstr "Um bytevector contendo o hash SHA-256 da fonte. Isso é equivalente a fornecer um objeto SHA256 @code{content-hash} no campo @code{hash} descrito abaixo."

#. type: code{#1}
#: guix-git/doc/guix.texi:8362
#, no-wrap
msgid "hash"
msgstr "hash"

#. type: table
#: guix-git/doc/guix.texi:8365
msgid "The @code{content-hash} object of the source---see below for how to use @code{content-hash}."
msgstr "O objeto @code{content-hash} da fonte — veja abaixo como usar @code{content-hash}."

#. type: table
#: guix-git/doc/guix.texi:8369
msgid "You can obtain this information using @code{guix download} (@pxref{Invoking guix download}) or @code{guix hash} (@pxref{Invoking guix hash})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:8370
#, no-wrap
msgid "@code{file-name} (default: @code{#f})"
msgstr "@code{file-name} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8376
msgid "The file name under which the source code should be saved.  When this is @code{#f}, a sensible default value will be used in most cases.  In case the source is fetched from a URL, the file name from the URL will be used.  For version control checkouts, it is recommended to provide the file name explicitly because the default is not very descriptive."
msgstr "O nome do arquivo sob o qual o código-fonte deve ser salvo. Quando for @code{#f}, um valor padrão sensato será usado na maioria dos casos. Caso a fonte seja obtida de uma URL, o nome do arquivo da URL será usado. Para checkouts de controle de versão, é recomendado fornecer o nome do arquivo explicitamente porque o padrão não é muito descritivo."

#. type: item
#: guix-git/doc/guix.texi:8377
#, no-wrap
msgid "@code{patches} (default: @code{'()})"
msgstr "@code{patches} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:8380
msgid "A list of file names, origins, or file-like objects (@pxref{G-Expressions, file-like objects}) pointing to patches to be applied to the source."
msgstr "Uma lista de nomes de arquivos, origens ou objetos tipo arquivo (@pxref{G-Expressions, objetos tipo arquivo}) apontando para remendos a serem aplicados à origem."

#. type: table
#: guix-git/doc/guix.texi:8384
msgid "This list of patches must be unconditional.  In particular, it cannot depend on the value of @code{%current-system} or @code{%current-target-system}."
msgstr "Esta lista de remendos deve ser incondicional. Em particular, não pode depender do valor de @code{%current-system} ou @code{%current-target-system}."

#. type: item
#: guix-git/doc/guix.texi:8385
#, no-wrap
msgid "@code{snippet} (default: @code{#f})"
msgstr "@code{snippet} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8389
msgid "A G-expression (@pxref{G-Expressions}) or S-expression that will be run in the source directory.  This is a convenient way to modify the source, sometimes more convenient than a patch."
msgstr "Uma expressão G (@pxref{G-Expressions}) ou expressão S que será executada no diretório de origem. Esta é uma maneira conveniente de modificar a origem, às vezes mais conveniente do que um patch."

#. type: item
#: guix-git/doc/guix.texi:8390
#, no-wrap
msgid "@code{patch-flags} (default: @code{'(\"-p1\")})"
msgstr "@code{patch-flags} (padrão: @code{'(\"-p1\")})"

#. type: table
#: guix-git/doc/guix.texi:8393
msgid "A list of command-line flags that should be passed to the @code{patch} command."
msgstr "Uma lista de sinalizadores de linha de comando que devem ser passados para o comando @code{patch}."

#. type: item
#: guix-git/doc/guix.texi:8394
#, no-wrap
msgid "@code{patch-inputs} (default: @code{#f})"
msgstr "@code{patch-inputs} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8398
msgid "Input packages or derivations to the patching process.  When this is @code{#f}, the usual set of inputs necessary for patching are provided, such as GNU@tie{}Patch."
msgstr "Pacotes de entrada ou derivações para o processo de patching. Quando este é @code{#f}, o conjunto usual de entradas necessárias para patching é fornecido, como GNU@tie{}Patch."

#. type: item
#: guix-git/doc/guix.texi:8399 guix-git/doc/guix.texi:34611
#, no-wrap
msgid "@code{modules} (default: @code{'()})"
msgstr "@code{modules} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:8402
msgid "A list of Guile modules that should be loaded during the patching process and while running the code in the @code{snippet} field."
msgstr "Uma lista de módulos Guile que devem ser carregados durante o processo de aplicação de remendos e durante a execução do código no campo @code{snippet}."

#. type: item
#: guix-git/doc/guix.texi:8403
#, no-wrap
msgid "@code{patch-guile} (default: @code{#f})"
msgstr "@code{patch-guile} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8406
msgid "The Guile package that should be used in the patching process.  When this is @code{#f}, a sensible default is used."
msgstr "O pacote Guile que deve ser usado no processo de patching. Quando este é @code{#f}, um padrão sensato é usado."

#. type: deftp
#: guix-git/doc/guix.texi:8409
#, no-wrap
msgid "{Data Type} content-hash @var{value} [@var{algorithm}]"
msgstr "{Tipo de dados} content-hash @var{valor} [@var{algoritmo}]"

#. type: deftp
#: guix-git/doc/guix.texi:8413
msgid "Construct a content hash object for the given @var{algorithm}, and with @var{value} as its hash value.  When @var{algorithm} is omitted, assume it is @code{sha256}."
msgstr "Construa um objeto hash de conteúdo para o @var{algoritmo} fornecido, e com @var{valor} como seu valor hash. Quando @var{algoritmo} é omitido, presuma que é @code{sha256}."

#. type: deftp
#: guix-git/doc/guix.texi:8416
msgid "@var{value} can be a literal string, in which case it is base32-decoded, or it can be a bytevector."
msgstr "@var{valor} pode ser uma string literal, nesse caso ela é decodificada em base32, ou pode ser um bytevector."

#. type: deftp
#: guix-git/doc/guix.texi:8418
msgid "The following forms are all equivalent:"
msgstr "Os seguintes formulários são todos equivalentes:"

#. type: lisp
#: guix-git/doc/guix.texi:8427
#, no-wrap
msgid ""
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\")\n"
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"\n"
"              sha256)\n"
"(content-hash (base32\n"
"               \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"))\n"
"(content-hash (base64 \"kkb+RPaP7uyMZmu4eXPVkM4BN8yhRd8BTHLslb6f/Rc=\")\n"
"              sha256)\n"
msgstr ""
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\")\n"
"(content-hash \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"\n"
"              sha256)\n"
"(content-hash (base32\n"
"               \"05zxkyz9bv3j9h0xyid1rhvh3klhsmrpkf3bcs6frvlgyr2gwilj\"))\n"
"(content-hash (base64 \"kkb+RPaP7uyMZmu4eXPVkM4BN8yhRd8BTHLslb6f/Rc=\")\n"
"              sha256)\n"

#. type: deftp
#: guix-git/doc/guix.texi:8432
msgid "Technically, @code{content-hash} is currently implemented as a macro.  It performs sanity checks at macro-expansion time, when possible, such as ensuring that @var{value} has the right size for @var{algorithm}."
msgstr "Tecnicamente, @code{content-hash} é atualmente implementado como uma macro. Ele realiza verificações de sanidade no momento da expansão da macro, quando possível, como garantir que @var{valor} tenha o tamanho certo para @var{algoritmo}."

#. type: Plain text
#: guix-git/doc/guix.texi:8438
msgid "As we have seen above, how exactly the data an origin refers to is retrieved is determined by its @code{method} field.  The @code{(guix download)} module provides the most common method, @code{url-fetch}, described below."
msgstr "Como vimos acima, como exatamente os dados aos quais uma origem se refere são recuperados é determinado pelo seu campo @code{method}. O módulo @code{(guix download)} fornece o método mais comum, @code{url-fetch}, descrito abaixo."

#. type: deffn
#: guix-git/doc/guix.texi:8439
#, no-wrap
msgid "{Procedure} url-fetch url hash-algo hash [name] [#:executable? #f]"
msgstr "{Procedimento} url-fetch url hash-algo hash [nome] [#:executable?? #f]"

#. type: deffn
#: guix-git/doc/guix.texi:8446
msgid "Return a fixed-output derivation that fetches data from @var{url} (a string, or a list of strings denoting alternate URLs), which is expected to have hash @var{hash} of type @var{hash-algo} (a symbol).  By default, the file name is the base name of URL; optionally, @var{name} can specify a different file name.  When @var{executable?} is true, make the downloaded file executable."
msgstr "Retorna uma derivação de saída fixa que busca dados de @var{url} (uma string, ou uma lista de strings denotando URLs alternativas), que deve ter hash @var{hash} do tipo @var{hash-algo} (um símbolo). Por padrão, o nome do arquivo é o nome base de URL; opcionalmente, @var{nome} pode especificar um nome de arquivo diferente. Quando @var{executable?} é verdadeiro, torna o arquivo baixado executável."

#. type: deffn
#: guix-git/doc/guix.texi:8449
msgid "When one of the URL starts with @code{mirror://}, then its host part is interpreted as the name of a mirror scheme, taken from @file{%mirror-file}."
msgstr "Quando uma das URLs começa com @code{mirror://}, sua parte host é interpretada como o nome de um esquema de espelho, obtido de @file{%mirror-file}."

#. type: deffn
#: guix-git/doc/guix.texi:8452
msgid "Alternatively, when URL starts with @code{file://}, return the corresponding file name in the store."
msgstr "Como alternativa, quando a URL começa com @code{file://}, retorne o nome do arquivo correspondente no armazém."

#. type: Plain text
#: guix-git/doc/guix.texi:8458
msgid "Likewise, the @code{(guix git-download)} module defines the @code{git-fetch} origin method, which fetches data from a Git version control repository, and the @code{git-reference} data type to describe the repository and revision to fetch."
msgstr "Da mesma forma, o módulo @code{(guix git-download)} define o método de origem @code{git-fetch}, que busca dados de um repositório de controle de versão Git, e o tipo de dados @code{git-reference} para descrever o repositório e a revisão a serem buscados."

#. type: deffn
#: guix-git/doc/guix.texi:8459
#, no-wrap
msgid "{Procedure} git-fetch ref hash-algo hash [name]"
msgstr "{Procedimento} git-fetch ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8464
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<git-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Retorna uma derivação de saída fixa que busca @var{ref}, um objeto @code{<git-reference>}. Espera-se que a saída tenha hash recursivo @var{hash} do tipo @var{hash-algo} (um símbolo). Use @var{nome} como o nome do arquivo, ou um nome genérico se @code{#f}."

#. type: deffn
#: guix-git/doc/guix.texi:8466
#, no-wrap
msgid "{Procedure} git-fetch/lfs ref hash-algo hash [name]"
msgstr "{Procedimento} git-fetch/lfs ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8471
msgid "This is a variant of the @code{git-fetch} procedure that supports the Git @acronym{LFS, Large File Storage} extension.  This may be useful to pull some binary test data to run the test suite of a package, for example."
msgstr "Esta é uma variante do procedimento @code{git-fetch} que suporta a extensão Git @acronym{LFS, Large File Storage}. Isso pode ser útil para extrair alguns dados de teste binários para executar o conjunto de testes de um pacote, por exemplo."

#. type: deftp
#: guix-git/doc/guix.texi:8473
#, no-wrap
msgid "{Data Type} git-reference"
msgstr "{Tipo de dados} git-reference"

#. type: deftp
#: guix-git/doc/guix.texi:8476
msgid "This data type represents a Git reference for @code{git-fetch} to retrieve."
msgstr "Este tipo de dado representa uma referência Git para @code{git-fetch} a recuperar."

#. type: item
#: guix-git/doc/guix.texi:8478 guix-git/doc/guix.texi:8526
#: guix-git/doc/guix.texi:8550 guix-git/doc/guix.texi:8585
#: guix-git/doc/guix.texi:32013 guix-git/doc/guix.texi:37939
#, no-wrap
msgid "url"
msgstr "url"

#. type: table
#: guix-git/doc/guix.texi:8480
msgid "The URL of the Git repository to clone."
msgstr "A URL do repositório Git a ser clonado."

#. type: code{#1}
#: guix-git/doc/guix.texi:8481
#, no-wrap
msgid "commit"
msgstr "commit"

#. type: table
#: guix-git/doc/guix.texi:8486
msgid "This string denotes either the commit to fetch (a hexadecimal string), or the tag to fetch.  You can also use a ``short'' commit ID or a @command{git describe} style identifier such as @code{v1.0.1-10-g58d7909c97}."
msgstr "Esta string denota o commit a ser buscado (uma string hexadecimal) ou a tag a ser buscada. Você também pode usar um ID de commit ``curto'' ou um identificador de estilo @command{git describe} como @code{v1.0.1-10-g58d7909c97}."

#. type: item
#: guix-git/doc/guix.texi:8487 guix-git/doc/guix.texi:8556
#, no-wrap
msgid "@code{recursive?} (default: @code{#f})"
msgstr "@code{recursive?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8489
msgid "This Boolean indicates whether to recursively fetch Git sub-modules."
msgstr "Este booleano indica se os submódulos do Git devem ser buscados recursivamente."

#. type: deftp
#: guix-git/doc/guix.texi:8493
msgid "The example below denotes the @code{v2.10} tag of the GNU@tie{}Hello repository:"
msgstr "O exemplo abaixo denota a tag @code{v2.10} do repositório GNU@tie{}Hello:"

#. type: lisp
#: guix-git/doc/guix.texi:8498
#, no-wrap
msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"v2.10\"))\n"
msgstr ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"v2.10\"))\n"

#. type: deftp
#: guix-git/doc/guix.texi:8502
msgid "This is equivalent to the reference below, which explicitly names the commit:"
msgstr "Isso é equivalente à referência abaixo, que nomeia explicitamente o commit:"

#. type: lisp
#: guix-git/doc/guix.texi:8507
#, no-wrap
msgid ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"dc7dc56a00e48fe6f231a58f6537139fe2908fb9\"))\n"
msgstr ""
"(git-reference\n"
"  (url \"https://git.savannah.gnu.org/git/hello.git\")\n"
"  (commit \"dc7dc56a00e48fe6f231a58f6537139fe2908fb9\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8513
msgid "For Mercurial repositories, the module @code{(guix hg-download)} defines the @code{hg-fetch} origin method and @code{hg-reference} data type for support of the Mercurial version control system."
msgstr "Para repositórios Mercurial, o módulo @code{(guix hg-download)} define o método de origem @code{hg-fetch} e o tipo de dados @code{hg-reference} para suporte ao sistema de controle de versão Mercurial."

#. type: deffn
#: guix-git/doc/guix.texi:8514
#, no-wrap
msgid "{Procedure} hg-fetch ref hash-algo hash [name]"
msgstr "{Procedimento} hg-fetch ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8519
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<hg-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Retorna uma derivação de saída fixa que busca @var{ref}, um objeto @code{<hg-reference>}. Espera-se que a saída tenha hash recursivo @var{hash} do tipo @var{hash-algo} (um símbolo). Use @var{nome} como o nome do arquivo, ou um nome genérico se @code{#f}."

#. type: deftp
#: guix-git/doc/guix.texi:8521
#, no-wrap
msgid "{Data Type} hg-reference"
msgstr "{Tipo de dados} hg-reference"

#. type: deftp
#: guix-git/doc/guix.texi:8524
msgid "This data type represents a Mercurial reference for @code{hg-fetch} to retrieve."
msgstr "Este tipo de dado representa uma referência Mercurial para @code{hg-fetch} a recuperar."

#. type: table
#: guix-git/doc/guix.texi:8528
msgid "The URL of the Mercurial repository to clone."
msgstr "A URL do repositório Mercurial a ser clonado."

#. type: code{#1}
#: guix-git/doc/guix.texi:8529
#, no-wrap
msgid "changeset"
msgstr "changeset"

#. type: table
#: guix-git/doc/guix.texi:8531
msgid "This string denotes the changeset to fetch."
msgstr "Esta sequência de caracteres indica a revisão a ser buscado."

#. type: Plain text
#: guix-git/doc/guix.texi:8537
msgid "For Subversion repositories, the module @code{(guix svn-download)} defines the @code{svn-fetch} origin method and @code{svn-reference} data type for support of the Subversion version control system."
msgstr "Para repositórios Subversion, o módulo @code{(guix svn-download)} define o método de origem @code{svn-fetch} e o tipo de dados @code{svn-reference} para suporte ao sistema de controle de versão Subversion."

#. type: deffn
#: guix-git/doc/guix.texi:8538
#, no-wrap
msgid "{Procedure} svn-fetch ref hash-algo hash [name]"
msgstr "{Procedimento} svn-fetch ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8543
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<svn-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Retorna uma derivação de saída fixa que busca @var{ref}, um objeto @code{<svn-reference>}. Espera-se que a saída tenha hash recursivo @var{hash} do tipo @var{hash-algo} (um símbolo). Use @var{nome} como o nome do arquivo, ou um nome genérico se @code{#f}."

#. type: deftp
#: guix-git/doc/guix.texi:8545
#, no-wrap
msgid "{Data Type} svn-reference"
msgstr "{Tipo de dados} svn-reference"

#. type: deftp
#: guix-git/doc/guix.texi:8548
msgid "This data type represents a Subversion reference for @code{svn-fetch} to retrieve."
msgstr "Este tipo de dado representa uma referência Subversion para @code{svn-fetch} a recuperar."

#. type: table
#: guix-git/doc/guix.texi:8552
msgid "The URL of the Subversion repository to clone."
msgstr "A URL do repositório Subversion a ser clonado."

#. type: code{#1}
#: guix-git/doc/guix.texi:8553 guix-git/doc/guix.texi:8588
#: guix-git/doc/guix.texi:8615
#, no-wrap
msgid "revision"
msgstr "revision"

#. type: table
#: guix-git/doc/guix.texi:8555
msgid "This string denotes the revision to fetch specified as a number."
msgstr "Esta sequência de caracteres denota a revisão a ser buscada especificada como um número."

#. type: table
#: guix-git/doc/guix.texi:8559
msgid "This Boolean indicates whether to recursively fetch Subversion ``externals''."
msgstr "Este booleano indica se deve-se buscar recursivamente ``externals'' do Subversion."

#. type: item
#: guix-git/doc/guix.texi:8560
#, no-wrap
msgid "@code{user-name} (default: @code{#f})"
msgstr "@code{user-name} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8563
msgid "The name of an account that has read-access to the repository, if the repository isn't public."
msgstr "O nome de uma conta que tem acesso de leitura ao repositório, se o repositório não for público."

#. type: item
#: guix-git/doc/guix.texi:8564 guix-git/doc/guix.texi:19051
#: guix-git/doc/guix.texi:19106
#, no-wrap
msgid "@code{password} (default: @code{#f})"
msgstr "@code{password} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:8566
msgid "Password to access the Subversion repository, if required."
msgstr "Senha para acessar o repositório Subversion, se necessário."

#. type: Plain text
#: guix-git/doc/guix.texi:8572
msgid "For Bazaar repositories, the module @code{(guix bzr-download)} defines the @code{bzr-fetch} origin method and @code{bzr-reference} data type for support of the Bazaar version control system."
msgstr "Para repositórios Bazaar, o módulo @code{(guix bzr-download)} define o método de origem @code{bzr-fetch} e o tipo de dados @code{bzr-reference} para suporte ao sistema de controle de versão Bazaar."

#. type: deffn
#: guix-git/doc/guix.texi:8573
#, no-wrap
msgid "{Procedure} bzr-fetch ref hash-algo hash [name]"
msgstr "{Procedimento} bzr-fetch ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8578
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<bzr-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Retorna uma derivação de saída fixa que busca @var{ref}, um objeto @code{<bzr-reference>}. Espera-se que a saída tenha hash recursivo @var{hash} do tipo @var{hash-algo} (um símbolo). Use @var{nome} como o nome do arquivo, ou um nome genérico se @code{#f}."

#. type: deftp
#: guix-git/doc/guix.texi:8580
#, no-wrap
msgid "{Data Type} bzr-reference"
msgstr "{Tipo de dados} bzr-reference"

#. type: deftp
#: guix-git/doc/guix.texi:8583
msgid "This data type represents a Bazaar reference for @code{bzr-fetch} to retrieve."
msgstr "Este tipo de dado representa uma referência Bazaar para @code{bzr-fetch} a recuperar."

#. type: table
#: guix-git/doc/guix.texi:8587
msgid "The URL of the Bazaar repository to clone."
msgstr "A URL do repositório Bazaar a ser clonado."

#. type: table
#: guix-git/doc/guix.texi:8590
msgid "This string denotes revision to fetch specified as a number."
msgstr "Esta sequência de caracteres denota a revisão a ser buscada especificada como um número."

#. type: Plain text
#: guix-git/doc/guix.texi:8596
msgid "For CVS repositories, the module @code{(guix cvs-download)} defines the @code{cvs-fetch} origin method and @code{cvs-reference} data type for support of the Concurrent Versions System (CVS)."
msgstr "Para repositórios CVS, o módulo @code{(guix cvs-download)} define o método de origem @code{cvs-fetch} e o tipo de dados @code{cvs-reference} para suporte ao Concurrent Versions System (CVS)."

#. type: deffn
#: guix-git/doc/guix.texi:8597
#, no-wrap
msgid "{Procedure} cvs-fetch ref hash-algo hash [name]"
msgstr "{Procedimento} cvs-fetch ref hash-algo hash [nome]"

#. type: deffn
#: guix-git/doc/guix.texi:8602
msgid "Return a fixed-output derivation that fetches @var{ref}, a @code{<cvs-reference>} object.  The output is expected to have recursive hash @var{hash} of type @var{hash-algo} (a symbol).  Use @var{name} as the file name, or a generic name if @code{#f}."
msgstr "Retorna uma derivação de saída fixa que busca @var{ref}, um objeto @code{<cvs-reference>}. Espera-se que a saída tenha hash recursivo @var{hash} do tipo @var{hash-algo} (um símbolo). Use @var{nome} como o nome do arquivo, ou um nome genérico se @code{#f}."

#. type: deftp
#: guix-git/doc/guix.texi:8604
#, no-wrap
msgid "{Data Type} cvs-reference"
msgstr "{Tipo de dados} cvs-reference"

#. type: deftp
#: guix-git/doc/guix.texi:8607
msgid "This data type represents a CVS reference for @code{cvs-fetch} to retrieve."
msgstr "Este tipo de dado representa uma referência CVS para @code{cvs-fetch} a recuperar."

#. type: code{#1}
#: guix-git/doc/guix.texi:8609
#, no-wrap
msgid "root-directory"
msgstr "root-directory"

#. type: table
#: guix-git/doc/guix.texi:8611
msgid "The CVS root directory."
msgstr "O diretório raiz do CVS."

#. type: item
#: guix-git/doc/guix.texi:8612 guix-git/doc/guix.texi:16233
#, no-wrap
msgid "module"
msgstr "module"

#. type: table
#: guix-git/doc/guix.texi:8614
msgid "Module to fetch."
msgstr "Módulo a ser buscado."

#. type: table
#: guix-git/doc/guix.texi:8617
msgid "Revision to fetch."
msgstr "Revisão para buscar."

#. type: deftp
#: guix-git/doc/guix.texi:8620
msgid "The example below denotes a version of gnu-standards to fetch:"
msgstr "O exemplo abaixo denota uma versão do gnu-standards para buscar:"

#. type: lisp
#: guix-git/doc/guix.texi:8626
#, no-wrap
msgid ""
"(cvs-reference\n"
"  (root-directory \":pserver:anonymous@@cvs.savannah.gnu.org:/sources/gnustandards\")\n"
"  (module \"gnustandards\")\n"
"  (revision \"2020-11-25\"))\n"
msgstr ""
"(cvs-reference\n"
"  (root-directory \":pserver:anonymous@@cvs.savannah.gnu.org:/sources/gnustandards\")\n"
"  (module \"gnustandards\")\n"
"  (revision \"2020-11-25\"))\n"

#. type: cindex
#: guix-git/doc/guix.texi:8633
#, no-wrap
msgid "customizing packages"
msgstr "personalizando pacotes"

#. type: cindex
#: guix-git/doc/guix.texi:8634
#, no-wrap
msgid "variants, of packages"
msgstr "variantes, de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:8644
msgid "One of the nice things with Guix is that, given a package definition, you can easily @emph{derive} variants of that package---for a different upstream version, with different dependencies, different compilation options, and so on.  Some of these custom packages can be defined straight from the command line (@pxref{Package Transformation Options}).  This section describes how to define package variants in code.  This can be useful in ``manifests'' (@pxref{Writing Manifests})  and in your own package collection (@pxref{Creating a Channel}), among others!"
msgstr "Uma das coisas boas com o Guix é que, dada uma definição de pacote, você pode facilmente @emph{derivar} variantes desse pacote---para uma versão upstream diferente, com dependências diferentes, opções de compilação diferentes e assim por diante. Alguns desses pacotes personalizados podem ser definidos diretamente da linha de comando (@pxref{Package Transformation Options}). Esta seção descreve como definir variantes de pacotes no código. Isso pode ser útil em ``manifestos'' (@pxref{Writing Manifests}) e em sua própria coleção de pacotes (@pxref{Creating a Channel}), entre outros!"

#. type: cindex
#: guix-git/doc/guix.texi:8645
#, no-wrap
msgid "inherit, for package definitions"
msgstr "herdar, para definições de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:8652
msgid "As discussed earlier, packages are first-class objects in the Scheme language.  The @code{(guix packages)} module provides the @code{package} construct to define new package objects (@pxref{package Reference}).  The easiest way to define a package variant is using the @code{inherit} keyword together with @code{package}.  This allows you to inherit from a package definition while overriding the fields you want."
msgstr "Conforme discutido anteriormente, os pacotes são objetos de primeira classe na linguagem Scheme. O módulo @code{(guix packages)} fornece a construção @code{package} para definir novos objetos de pacote (@pxref{package Reference}). A maneira mais fácil de definir uma variante de pacote é usando a palavra-chave @code{inherit} junto com @code{package}. Isso permite que você herde de uma definição de pacote enquanto substitui os campos que deseja."

#. type: Plain text
#: guix-git/doc/guix.texi:8657
msgid "For example, given the @code{hello} variable, which contains a definition for the current version of GNU@tie{}Hello, here's how you would define a variant for version 2.2 (released in 2006, it's vintage!):"
msgstr "Por exemplo, dada a variável @code{hello}, que contém uma definição para a versão atual do GNU@tie{}Hello, veja como você definiria uma variante para a versão 2.2 (lançada em 2006, é vintage!):"

#. type: lisp
#: guix-git/doc/guix.texi:8660
#, no-wrap
msgid ""
"(use-modules (gnu packages base))    ;for 'hello'\n"
"\n"
msgstr ""
"(use-modules (gnu packages base))    ;para 'hello'\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8672
#, no-wrap
msgid ""
"(define hello-2.2\n"
"  (package\n"
"    (inherit hello)\n"
"    (version \"2.2\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0lappv4slgb5spyqbh6yl5r013zv72yqg2pcl30mginf3wdqd8k9\"))))))\n"
msgstr ""
"(define hello-2.2\n"
"  (package\n"
"    (inherit hello)\n"
"    (version \"2.2\")\n"
"    (source (origin\n"
"              (method url-fetch)\n"
"              (uri (string-append \"mirror://gnu/hello/hello-\" version\n"
"                                  \".tar.gz\"))\n"
"              (sha256\n"
"               (base32\n"
"                \"0lappv4slgb5spyqbh6yl5r013zv72yqg2pcl30mginf3wdqd8k9\"))))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8682
msgid "The example above corresponds to what the @option{--with-version} or @option{--with-source} package transformations option do.  Essentially @code{hello-2.2} preserves all the fields of @code{hello}, except @code{version} and @code{source}, which it overrides.  Note that the original @code{hello} variable is still there, in the @code{(gnu packages base)} module, unchanged.  When you define a custom package like this, you are really @emph{adding} a new package definition; the original one remains available."
msgstr "O exemplo acima corresponde ao que as opções de transformação de pacote @option{--with-version} ou @option{--with-source} fazem. Essencialmente, @code{hello-2.2} preserva todos os campos de @code{hello}, exceto @code{version} e @code{source}, que ele substitui. Observe que a variável @code{hello} original ainda está lá, no módulo @code{(gnu packages base)}, inalterada. Quando você define um pacote personalizado como este, você está realmente @emph{adicionando} uma nova definição de pacote; a original permanece disponível."

#. type: Plain text
#: guix-git/doc/guix.texi:8688
msgid "You can just as well define variants with a different set of dependencies than the original package.  For example, the default @code{gdb} package depends on @code{guile}, but since that is an optional dependency, you can define a variant that removes that dependency like so:"
msgstr "Você pode também definir variantes com um conjunto diferente de dependências do que o pacote original. Por exemplo, o pacote padrão @code{gdb} depende de @code{guile}, mas como essa é uma dependência opcional, você pode definir uma variante que remova essa dependência assim:"

#. type: lisp
#: guix-git/doc/guix.texi:8691
#, no-wrap
msgid ""
"(use-modules (gnu packages gdb))   ;for 'gdb'\n"
"\n"
msgstr ""
"(use-modules (gnu packages gdb))   ;para 'gdb'\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8697
#, no-wrap
msgid ""
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
msgstr ""
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8703
msgid "The @code{modify-inputs} form above removes the @code{\"guile\"} package from the @code{inputs} field of @code{gdb}.  The @code{modify-inputs} macro is a helper that can prove useful anytime you want to remove, add, or replace package inputs."
msgstr "O formulário @code{modify-inputs} acima remove o pacote @code{\"guile\"} do campo @code{inputs} de @code{gdb}. A macro @code{modify-inputs} é um auxiliar que pode ser útil sempre que você quiser remover, adicionar ou substituir entradas de pacote."

#. type: defmac
#: guix-git/doc/guix.texi:8704
#, no-wrap
msgid "modify-inputs inputs clauses"
msgstr "modify-inputs entradas cláusulas"

#. type: defmac
#: guix-git/doc/guix.texi:8708
msgid "Modify the given package inputs, as returned by @code{package-inputs} & co., according to the given clauses.  Each clause must have one of the following forms:"
msgstr "Modifique as entradas do pacote fornecido, conforme retornado por @code{package-inputs} & co., de acordo com as cláusulas fornecidas. Cada cláusula deve ter uma das seguintes formas:"

#. type: item
#: guix-git/doc/guix.texi:8710
#, no-wrap
msgid "(delete @var{name}@dots{})"
msgstr "(delete @var{nome}@dots{})"

#. type: table
#: guix-git/doc/guix.texi:8712
msgid "Delete from the inputs packages with the given @var{name}s (strings)."
msgstr "Exclua dos pacotes de entrada os @var{nome}s (strings) fornecidos."

#. type: item
#: guix-git/doc/guix.texi:8713
#, no-wrap
msgid "(prepend @var{package}@dots{})"
msgstr "(prepend @var{pacote}@dots{})"

#. type: table
#: guix-git/doc/guix.texi:8715
msgid "Add @var{package}s to the front of the input list."
msgstr "Adicione @var{pacote}s à frente da lista de entrada."

#. type: item
#: guix-git/doc/guix.texi:8716
#, no-wrap
msgid "(append @var{package}@dots{})"
msgstr "(append @var{pacote}@dots{})"

#. type: table
#: guix-git/doc/guix.texi:8718
msgid "Add @var{package}s to the end of the input list."
msgstr "Adicione @var{pacote}s ao final da lista de entrada."

#. type: item
#: guix-git/doc/guix.texi:8719
#, no-wrap
msgid "(replace @var{name} @var{replacement})"
msgstr "(replace @var{nome} @var{substituição})"

#. type: table
#: guix-git/doc/guix.texi:8721
msgid "Replace the package called @var{name} with @var{replacement}."
msgstr "Substitua o pacote chamado @var{nome} por @var{substituição}."

#. type: defmac
#: guix-git/doc/guix.texi:8725
msgid "The example below removes the GMP and ACL inputs of Coreutils and adds libcap to the front of the input list:"
msgstr "O exemplo abaixo remove as entradas GMP e ACL do Coreutils e adiciona libcap à frente da lista de entradas:"

#. type: lisp
#: guix-git/doc/guix.texi:8730
#, no-wrap
msgid ""
"(modify-inputs (package-inputs coreutils)\n"
"  (delete \"gmp\" \"acl\")\n"
"  (prepend libcap))\n"
msgstr ""
"(modify-inputs (package-inputs coreutils)\n"
"  (delete \"gmp\" \"acl\")\n"
"  (prepend libcap))\n"

#. type: defmac
#: guix-git/doc/guix.texi:8734
msgid "The example below replaces the @code{guile} package from the inputs of @code{guile-redis} with @code{guile-2.2}:"
msgstr "O exemplo abaixo substitui o pacote @code{guile} das entradas de @code{guile-redis} por @code{guile-2.2}:"

#. type: lisp
#: guix-git/doc/guix.texi:8738
#, no-wrap
msgid ""
"(modify-inputs (package-inputs guile-redis)\n"
"  (replace \"guile\" guile-2.2))\n"
msgstr ""
"(modify-inputs (package-inputs guile-redis)\n"
"  (replace \"guile\" guile-2.2))\n"

#. type: defmac
#: guix-git/doc/guix.texi:8742
msgid "The last type of clause is @code{append}, to add inputs at the back of the list."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8751
msgid "In some cases, you may find it useful to write functions (``procedures'', in Scheme parlance) that return a package based on some parameters.  For example, consider the @code{luasocket} library for the Lua programming language.  We want to create @code{luasocket} packages for major versions of Lua.  One way to do that is to define a procedure that takes a Lua package and returns a @code{luasocket} package that depends on it:"
msgstr "Em alguns casos, você pode achar útil escrever funções (``procedimentos'', no jargão do Scheme) que retornam um pacote com base em alguns parâmetros. Por exemplo, considere a biblioteca @code{luasocket} para a linguagem de programação Lua. Queremos criar pacotes @code{luasocket} para as principais versões do Lua. Uma maneira de fazer isso é definir um procedimento que pega um pacote Lua e retorna um pacote @code{luasocket} que depende dele:"

#. type: lisp
#: guix-git/doc/guix.texi:8761
#, no-wrap
msgid ""
"(define (make-lua-socket name lua)\n"
"  ;; Return a luasocket package built with LUA.\n"
"  (package\n"
"    (name name)\n"
"    (version \"3.0\")\n"
"    ;; several fields omitted\n"
"    (inputs (list lua))\n"
"    (synopsis \"Socket library for Lua\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8764
#, no-wrap
msgid ""
"(define-public lua5.1-socket\n"
"  (make-lua-socket \"lua5.1-socket\" lua-5.1))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8767
#, no-wrap
msgid ""
"(define-public lua5.2-socket\n"
"  (make-lua-socket \"lua5.2-socket\" lua-5.2))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8775
msgid "Here we have defined packages @code{lua5.1-socket} and @code{lua5.2-socket} by calling @code{make-lua-socket} with different arguments.  @xref{Procedures,,, guile, GNU Guile Reference Manual}, for more info on procedures.  Having top-level public definitions for these two packages means that they can be referred to from the command line (@pxref{Package Modules})."
msgstr "Aqui definimos os pacotes @code{lua5.1-socket} e @code{lua5.2-socket} chamando @code{make-lua-socket} com argumentos diferentes. @xref{Procedures,,, guile, GNU Guile Reference Manual}, para mais informações sobre procedimentos. Ter definições públicas de nível superior para esses dois pacotes significa que eles podem ser referenciados a partir da linha de comando (@pxref{Package Modules})."

#. type: cindex
#: guix-git/doc/guix.texi:8776
#, no-wrap
msgid "package transformations"
msgstr "transformações de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:8781
msgid "These are pretty simple package variants.  As a convenience, the @code{(guix transformations)} module provides a high-level interface that directly maps to the more sophisticated package transformation options (@pxref{Package Transformation Options}):"
msgstr "Essas são variantes de pacote bem simples. Como uma conveniência, o módulo @code{(guix transformations)} fornece uma interface de alto nível que mapeia diretamente para as opções de transformação de pacote mais sofisticadas (@pxref{Package Transformation Options}):"

#. type: deffn
#: guix-git/doc/guix.texi:8782
#, no-wrap
msgid "{Procedure} options->transformation opts"
msgstr "{Procedimento} options->transformation opções"

#. type: deffn
#: guix-git/doc/guix.texi:8786
msgid "Return a procedure that, when passed an object to build (package, derivation, etc.), applies the transformations specified by @var{opts} and returns the resulting objects.  @var{opts} must be a list of symbol/string pairs such as:"
msgstr "Retorna um procedimento que, quando passado um objeto para construção (pacote, derivação, etc.), aplica as transformações especificadas por @var{opções} e retorna os objetos resultantes. @var{opções} deve ser uma lista de pares símbolo/string como:"

#. type: lisp
#: guix-git/doc/guix.texi:8790
#, no-wrap
msgid ""
"((with-branch . \"guile-gcrypt=master\")\n"
" (without-tests . \"libgcrypt\"))\n"
msgstr ""
"((with-branch . \"guile-gcrypt=master\")\n"
" (without-tests . \"libgcrypt\"))\n"

#. type: deffn
#: guix-git/doc/guix.texi:8794
msgid "Each symbol names a transformation and the corresponding string is an argument to that transformation."
msgstr "Cada símbolo nomeia uma transformação e a string correspondente é um argumento para essa transformação."

#. type: Plain text
#: guix-git/doc/guix.texi:8797
msgid "For instance, a manifest equivalent to this command:"
msgstr "Por exemplo, um manifesto equivalente a este comando:"

#. type: example
#: guix-git/doc/guix.texi:8802
#, no-wrap
msgid ""
"guix build guix \\\n"
"  --with-branch=guile-gcrypt=master \\\n"
"  --with-debug-info=zlib\n"
msgstr ""
"guix build guix \\\n"
"  --with-branch=guile-gcrypt=master \\\n"
"  --with-debug-info=zlib\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8806
msgid "... would look like this:"
msgstr "... ficaria assim:"

#. type: lisp
#: guix-git/doc/guix.texi:8809
#, no-wrap
msgid ""
"(use-modules (guix transformations))\n"
"\n"
msgstr ""
"(use-modules (guix transformations))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:8815
#, no-wrap
msgid ""
"(define transform\n"
"  ;; The package transformation procedure.\n"
"  (options->transformation\n"
"   '((with-branch . \"guile-gcrypt=master\")\n"
"     (with-debug-info . \"zlib\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8818
#, no-wrap
msgid ""
"(packages->manifest\n"
" (list (transform (specification->package \"guix\"))))\n"
msgstr ""
"(packages->manifest\n"
" (list (transform (specification->package \"guix\"))))\n"

#. type: cindex
#: guix-git/doc/guix.texi:8820
#, no-wrap
msgid "input rewriting"
msgstr "reescrita de entrada"

#. type: cindex
#: guix-git/doc/guix.texi:8821
#, no-wrap
msgid "dependency graph rewriting"
msgstr "reescrita de grafo de dependência"

#. type: Plain text
#: guix-git/doc/guix.texi:8828
msgid "The @code{options->transformation} procedure is convenient, but it's perhaps also not as flexible as you may like.  How is it implemented? The astute reader probably noticed that most package transformation options go beyond the superficial changes shown in the first examples of this section: they involve @dfn{input rewriting}, whereby the dependency graph of a package is rewritten by replacing specific inputs by others."
msgstr "O procedimento @code{options->transformation} é conveniente, mas talvez também não seja tão flexível quanto você gostaria. Como ele é implementado? O leitor astuto provavelmente notou que a maioria das opções de transformação de pacotes vai além das mudanças superficiais mostradas nos primeiros exemplos desta seção: elas envolvem @dfn{reescrita de entrada}, por meio da qual o grafo de dependência de um pacote é reescrito pela substituição de entradas específicas por outras."

#. type: Plain text
#: guix-git/doc/guix.texi:8832
msgid "Dependency graph rewriting, for the purposes of swapping packages in the graph, is what the @code{package-input-rewriting} procedure in @code{(guix packages)} implements."
msgstr "A reescrita do grafo de dependência, para fins de troca de pacotes no grafo, é o que o procedimento @code{package-input-rewriting} em @code{(guix packages)} implementa."

#. type: deffn
#: guix-git/doc/guix.texi:8833
#, no-wrap
msgid "{Procedure} package-input-rewriting replacements [rewrite-name] @"
msgstr "{Procedimento} package-input-rewriting substituições [nome-da-reescrita] @"

#. type: deffn
#: guix-git/doc/guix.texi:8840
msgid "[#:deep? #t] [#:recursive? #f] Return a procedure that, when passed a package, replaces its direct and indirect dependencies, including implicit inputs when @var{deep?} is true, according to @var{replacements}.  @var{replacements} is a list of package pairs; the first element of each pair is the package to replace, and the second one is the replacement."
msgstr ""
"[#:deep? #t] [#:recursive? #f]\n"
"Retorna um procedimento que, quando recebe um pacote, substitui suas dependências diretas e indiretas, incluindo entradas implícitas quando @var{deep?} é verdadeiro, de acordo com @var{substituições}. @var{substituições} é uma lista de pares de pacotes; o primeiro elemento de cada par é o pacote a ser substituído, e o segundo é a substituição."

#. type: deffn
#: guix-git/doc/guix.texi:8843
msgid "When @var{recursive?} is true, apply replacements to the right-hand sides of @var{replacements} as well, recursively."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:8846
msgid "Optionally, @var{rewrite-name} is a one-argument procedure that takes the name of a package and returns its new name after rewrite."
msgstr "Opcionalmente, @var{nome-da-reescrita} é um procedimento de um argumento que recebe o nome de um pacote e retorna seu novo nome após a reescrita."

#. type: table
#: guix-git/doc/guix.texi:8850 guix-git/doc/guix.texi:13582
msgid "Consider this example:"
msgstr "Considere este exemplo:"

#. type: lisp
#: guix-git/doc/guix.texi:8856
#, no-wrap
msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; This is a procedure to replace OPENSSL by LIBRESSL,\n"
"  ;; recursively.\n"
"  (package-input-rewriting `((,openssl . ,libressl))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:8859
#, no-wrap
msgid ""
"(define git-with-libressl\n"
"  (libressl-instead-of-openssl git))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8867
msgid "Here we first define a rewriting procedure that replaces @var{openssl} with @var{libressl}.  Then we use it to define a @dfn{variant} of the @var{git} package that uses @var{libressl} instead of @var{openssl}.  This is exactly what the @option{--with-input} command-line option does (@pxref{Package Transformation Options, @option{--with-input}})."
msgstr "Aqui, primeiro definimos um procedimento de reescrita que substitui @var{openssl} por @var{libressl}. Então, o usamos para definir uma @dfn{variante} do pacote @var{git} que usa @var{libressl} em vez de @var{openssl}. É exatamente isso que a opção de linha de comando @option{--with-input} faz (@pxref{Package Transformation Options, @option{--with-input}})."

#. type: Plain text
#: guix-git/doc/guix.texi:8870
msgid "The following variant of @code{package-input-rewriting} can match packages to be replaced by name rather than by identity."
msgstr "A seguinte variante de @code{package-input-rewriting} pode corresponder a pacotes a serem substituídos por nome em vez de identidade."

#. type: deffn
#: guix-git/doc/guix.texi:8871
#, no-wrap
msgid "{Procedure} package-input-rewriting/spec @var{replacements} @"
msgstr "{Procedimento} package-input-rewriting/spec @var{substituições} @"

#. type: deffn
#: guix-git/doc/guix.texi:8876
msgid "[#:deep? #t] [#:replace-hidden? #t] Return a procedure that, given a package, applies the given @var{replacements} to all the package graph, including implicit inputs unless @var{deep?} is false."
msgstr ""
"[#:deep? #t] [#:replace-hidden? #t]\n"
"Retorna um procedimento que, dado um pacote, aplica as @var{substituições} fornecidas a todo o grafo do pacote, incluindo entradas implícitas, a menos que @var{deep?} seja falso."

#. type: deffn
#: guix-git/doc/guix.texi:8882
#, fuzzy
#| msgid "@var{replacements} is a list of spec/procedures pair; each spec is a package specification such as @code{\"gcc\"} or @code{\"guile@@2\"}, and each procedure takes a matching package and returns a replacement for that package.  Matching packages that have the @code{hidden?} property set are not replaced."
msgid "@var{replacements} is a list of spec/procedures pair; each spec is a package specification such as @code{\"gcc\"} or @code{\"guile@@2\"}, and each procedure takes a matching package and returns a replacement for that package.  Matching packages that have the @code{hidden?} property set are not replaced unless @var{replace-hidden?} is set to true."
msgstr "@var{substituições} é uma lista de pares spec/procedimento; cada spec é uma especificação de pacote, como @code{\"gcc\"} ou @code{\"guile@@2\"}, e cada procedimento pega um pacote correspondente e retorna uma substituição para esse pacote. Pacotes correspondentes que têm a propriedade @code{hidden?} definida não são substituídos."

#. type: Plain text
#: guix-git/doc/guix.texi:8885
msgid "The example above could be rewritten this way:"
msgstr "O exemplo acima poderia ser reescrito desta forma:"

#. type: lisp
#: guix-git/doc/guix.texi:8890
#, no-wrap
msgid ""
"(define libressl-instead-of-openssl\n"
"  ;; Replace all the packages called \"openssl\" with LibreSSL.\n"
"  (package-input-rewriting/spec `((\"openssl\" . ,(const libressl)))))\n"
msgstr ""
"(define libressl-instead-of-openssl\n"
"  ;; Substitua todos os pacotes chamados \"openssl\" por LibreSSL.\n"
"  (package-input-rewriting/spec `((\"openssl\" . ,(const libressl)))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8895
msgid "The key difference here is that, this time, packages are matched by spec and not by identity.  In other words, any package in the graph that is called @code{openssl} will be replaced."
msgstr "A principal diferença aqui é que, dessa vez, os pacotes são correspondidos por spec e não por identidade. Em outras palavras, qualquer pacote no grafo que seja chamado @code{openssl} será substituído."

#. type: Plain text
#: guix-git/doc/guix.texi:8899
msgid "A more generic procedure to rewrite a package dependency graph is @code{package-mapping}: it supports arbitrary changes to nodes in the graph."
msgstr "Um procedimento mais genérico para reescrever um grafo de dependência de pacote é @code{package-mapping}: ele suporta alterações arbitrárias em nós no grafo."

#. type: deffn
#: guix-git/doc/guix.texi:8900
#, no-wrap
msgid "{Procedure} package-mapping proc [cut?] [#:deep? #f]"
msgstr "{Procedimento} package-mapping proc [cortar?] [#:deep? #f]"

#. type: deffn
#: guix-git/doc/guix.texi:8905
msgid "Return a procedure that, given a package, applies @var{proc} to all the packages depended on and returns the resulting package.  The procedure stops recursion when @var{cut?} returns true for a given package.  When @var{deep?} is true, @var{proc} is applied to implicit inputs as well."
msgstr "Retorna um procedimento que, dado um pacote, aplica @var{proc} a todos os pacotes dependentes e retorna o pacote resultante. O procedimento para a recursão quando @var{cortar?} retorna true para um determinado pacote. Quando @var{deep?} é true, @var{proc} é aplicado a entradas implícitas também."

#. type: quotation
#: guix-git/doc/guix.texi:8907
#, no-wrap
msgid "Tips"
msgstr "Dicas"

#. type: quotation
#: guix-git/doc/guix.texi:8911
msgid "Understanding what a variant really looks like can be difficult as one starts combining the tools shown above.  There are several ways to inspect a package before attempting to build it that can prove handy:"
msgstr "Entender como uma variante realmente se parece pode ser difícil quando se começa a combinar as ferramentas mostradas acima. Há várias maneiras de inspecionar um pacote antes de tentar construí-lo que podem ser úteis:"

#. type: itemize
#: guix-git/doc/guix.texi:8917
msgid "You can inspect the package interactively at the REPL, for instance to view its inputs, the code of its build phases, or its configure flags (@pxref{Using Guix Interactively})."
msgstr "Você pode inspecionar o pacote interativamente no REPL, por exemplo, para visualizar suas entradas, o código de suas fases de construção ou seus sinalizadores de configuração (@pxref{Using Guix Interactively})."

#. type: itemize
#: guix-git/doc/guix.texi:8921
msgid "When rewriting dependencies, @command{guix graph} can often help visualize the changes that are made (@pxref{Invoking guix graph})."
msgstr "Ao reescrever dependências, @command{guix graph} geralmente pode ajudar a visualizar as alterações feitas (@pxref{Invoking guix graph})."

#. type: cindex
#: guix-git/doc/guix.texi:8927
#, no-wrap
msgid "manifest"
msgstr "manifesto"

#. type: cindex
#: guix-git/doc/guix.texi:8928
#, no-wrap
msgid "bill of materials (manifests)"
msgstr "lista de materiais (manifestos)"

#. type: Plain text
#: guix-git/doc/guix.texi:8939
msgid "@command{guix} commands let you specify package lists on the command line.  This is convenient, but as the command line becomes longer and less trivial, it quickly becomes more convenient to have that package list in what we call a @dfn{manifest}.  A manifest is some sort of a ``bill of materials'' that defines a package set.  You would typically come up with a code snippet that builds the manifest, store it in a file, say @file{manifest.scm}, and then pass that file to the @option{-m} (or @option{--manifest}) option that many @command{guix} commands support.  For example, here's what a manifest for a simple package set might look like:"
msgstr "Os comandos @command{guix} permitem que você especifique listas de pacotes na linha de comando. Isso é conveniente, mas conforme a linha de comando se torna mais longa e menos trivial, rapidamente se torna mais conveniente ter essa lista de pacotes no que chamamos de @dfn{manifesto}. Um manifesto é algum tipo de ``lista de materiais'' que define um conjunto de pacotes. Você normalmente criaria um trecho de código que constrói o manifesto, o armazenaria em um arquivo, digamos @file{manifest.scm}, e então passaria esse arquivo para a opção @option{-m} (ou @option{--manifest}) que muitos comandos @command{guix} suportam. Por exemplo, aqui está como um manifesto para um conjunto de pacotes simples pode se parecer:"

#. type: lisp
#: guix-git/doc/guix.texi:8943
#, no-wrap
msgid ""
";; Manifest for three packages.\n"
"(specifications->manifest '(\"gcc-toolchain\" \"make\" \"git\"))\n"
msgstr ""
";; Manifesto para três pacotes.\n"
"(specifications->manifest '(\"gcc-toolchain\" \"make\" \"git\"))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8949
msgid "Once you have that manifest, you can pass it, for example, to @command{guix package} to install just those three packages to your profile (@pxref{profile-manifest, @option{-m} option of @command{guix package}}):"
msgstr "Depois de ter esse manifesto, você pode passá-lo, por exemplo, para @command{guix package} para instalar apenas esses três pacotes no seu perfil (@pxref{profile-manifest, @option{-m} opção de @command{guix package}}):"

#. type: example
#: guix-git/doc/guix.texi:8952
#, no-wrap
msgid "guix package -m manifest.scm\n"
msgstr "guix package -m manifest.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8958
msgid "... or you can pass it to @command{guix shell} (@pxref{shell-manifest, @command{-m} option of @command{guix shell}}) to spawn an ephemeral environment:"
msgstr "... ou você pode passá-lo para @command{guix shell} (@pxref{shell-manifest, @command{-m} opção de @command{guix shell}}) para gerar um ambiente efêmero:"

#. type: Plain text
#: guix-git/doc/guix.texi:8968
msgid "... or you can pass it to @command{guix pack} in pretty much the same way (@pxref{pack-manifest, @option{-m} option of @command{guix pack}}).  You can store the manifest under version control, share it with others so they can easily get set up, etc."
msgstr "... ou você pode passá-lo para @command{guix pack} praticamente da mesma forma (@pxref{pack-manifest, @option{-m} opção de @command{guix pack}}). Você pode armazenar o manifesto sob controle de versão, compartilhá-lo com outros para que eles possam facilmente configurar, etc."

#. type: Plain text
#: guix-git/doc/guix.texi:8974
msgid "But how do you write your first manifest? To get started, maybe you'll want to write a manifest that mirrors what you already have in a profile.  Rather than start from a blank page, @command{guix package} can generate a manifest for you (@pxref{export-manifest, @command{guix package --export-manifest}}):"
msgstr "Mas como você escreve seu primeiro manifesto? Para começar, talvez você queira escrever um manifesto que espelhe o que você já tem em um perfil. Em vez de começar do zero, @command{guix package} pode gerar um manifesto para você (@pxref{export-manifest, @command{guix package --export-manifest}}):"

#. type: example
#: guix-git/doc/guix.texi:8979
#, no-wrap
msgid ""
"# Write to 'manifest.scm' a manifest corresponding to the\n"
"# default profile, ~/.guix-profile.\n"
"guix package --export-manifest > manifest.scm\n"
msgstr ""
"# Escreva em 'manifest.scm' um manifesto correspondente ao\n"
"# perfil padrão, ~/.guix-profile.\n"
"guix package --export-manifest > manifest.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:8984
msgid "Or maybe you'll want to ``translate'' command-line arguments into a manifest.  In that case, @command{guix shell} can help (@pxref{shell-export-manifest, @command{guix shell --export-manifest}}):"
msgstr "Ou talvez você queira ``traduzir'' argumentos de linha de comando em um manifesto. Nesse caso, @command{guix shell} pode ajudar (@pxref{shell-export-manifest, @command{guix shell --export-manifest}}):"

#. type: example
#: guix-git/doc/guix.texi:8988
#, no-wrap
msgid ""
"# Write a manifest for the packages specified on the command line.\n"
"guix shell --export-manifest gcc-toolchain make git > manifest.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:8994
msgid "In both cases, the @option{--export-manifest} option tries hard to generate a faithful manifest; in particular, it takes package transformation options into account (@pxref{Package Transformation Options})."
msgstr "Em ambos os casos, a opção @option{--export-manifest} tenta arduamente gerar um manifesto fiel; em particular, ela leva em consideração as opções de transformação de pacotes (@pxref{Package Transformation Options})."

#. type: quotation
#: guix-git/doc/guix.texi:9000
msgid "Manifests are @emph{symbolic}: they refer to packages of the channels @emph{currently in use} (@pxref{Channels}).  In the example above, @code{gcc-toolchain} might refer to version 14 today, but it might refer to version 16 two years from now."
msgstr "Manifestos são @emph{simbólicos}: eles se referem a pacotes dos canais @emph{atualmente em uso} (@pxref{Channels}). No exemplo acima, @code{gcc-toolchain} pode se referir à versão 14 hoje, mas pode se referir à versão 16 daqui a dois anos."

#. type: quotation
#: guix-git/doc/guix.texi:9005
msgid "If you want to ``pin'' your software environment to specific package versions and variants, you need an additional piece of information: the list of channel revisions in use, as returned by @command{guix describe}.  @xref{Replicating Guix}, for more information."
msgstr "Se você quiser ``fixar'' seu ambiente de software em versões e variantes de pacotes específicos, precisará de uma informação adicional: a lista de revisões de canal em uso, conforme retornado por @command{guix describe}. @xref{Replicating Guix}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:9010
msgid "Once you've obtained your first manifest, perhaps you'll want to customize it.  Since your manifest is code, you now have access to all the Guix programming interfaces!"
msgstr "Depois de obter seu primeiro manifesto, talvez você queira personalizá-lo. Como seu manifesto é código, agora você tem acesso a todas as interfaces de programação Guix!"

#. type: Plain text
#: guix-git/doc/guix.texi:9016
msgid "Let's assume you want a manifest to deploy a custom variant of GDB, the GNU Debugger, that does not depend on Guile, together with another package.  Building on the example seen in the previous section (@pxref{Defining Package Variants}), you can write a manifest along these lines:"
msgstr "Vamos supor que você queira um manifesto para implantar uma variante personalizada do GDB, o GNU Debugger, que não depende do Guile, junto com outro pacote. Com base no exemplo visto na seção anterior (@pxref{Defining Package Variants}), você pode escrever um manifesto seguindo estas linhas:"

#. type: lisp
#: guix-git/doc/guix.texi:9021
#, no-wrap
msgid ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;for 'gdb'\n"
"             (gnu packages version-control))  ;for 'git'\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;para 'gdb'\n"
"             (gnu packages version-control))  ;para 'git'\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:9028
#, no-wrap
msgid ""
";; Define a variant of GDB without a dependency on Guile.\n"
"(define gdb-sans-guile\n"
"  (package\n"
"    (inherit gdb)\n"
"    (inputs (modify-inputs (package-inputs gdb)\n"
"              (delete \"guile\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9031
#, no-wrap
msgid ""
";; Return a manifest containing that one package plus Git.\n"
"(packages->manifest (list gdb-sans-guile git))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9042
msgid "Note that in this example, the manifest directly refers to the @code{gdb} and @code{git} variables, which are bound to a @code{package} object (@pxref{package Reference}), instead of calling @code{specifications->manifest} to look up packages by name as we did before.  The @code{use-modules} form at the top lets us access the core package interface (@pxref{Defining Packages}) and the modules that define @code{gdb} and @code{git} (@pxref{Package Modules}).  Seamlessly, we're weaving all this together---the possibilities are endless, unleash your creativity!"
msgstr "Observe que neste exemplo, o manifesto se refere diretamente às variáveis @code{gdb} e @code{git}, que são vinculadas a um objeto @code{package} (@pxref{package Reference}), em vez de chamar @code{specifications->manifest} para procurar pacotes por nome, como fizemos antes. O formulário @code{use-modules} no topo nos permite acessar a interface do pacote principal (@pxref{Defining Packages}) e os módulos que definem @code{gdb} e @code{git} (@pxref{Package Modules}). Sem problemas, estamos entrelaçando tudo isso — as possibilidades são infinitas, libere sua criatividade!"

#. type: Plain text
#: guix-git/doc/guix.texi:9046
msgid "The data type for manifests as well as supporting procedures are defined in the @code{(guix profiles)} module, which is automatically available to code passed to @option{-m}.  The reference follows."
msgstr "O tipo de dados para manifestos, bem como procedimentos de suporte, são definidos no módulo @code{(guix profiles)}, que está automaticamente disponível para o código passado para @option{-m}. A referência segue."

#. type: deftp
#: guix-git/doc/guix.texi:9047
#, no-wrap
msgid "{Data Type} manifest"
msgstr "{Tipo de dados} manifest"

#. type: deftp
#: guix-git/doc/guix.texi:9049
#, fuzzy
msgid "Data type representing a manifest."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:9051
msgid "It currently has one field:"
msgstr "Atualmente possui um campo:"

#. type: item
#: guix-git/doc/guix.texi:9053
#, no-wrap
msgid "entries"
msgstr "entries"

#. type: table
#: guix-git/doc/guix.texi:9055
msgid "This must be a list of @code{manifest-entry} records---see below."
msgstr "Esta deve ser uma lista de registros @code{manifest-entry} --- veja abaixo."

#. type: deftp
#: guix-git/doc/guix.texi:9058
#, no-wrap
msgid "{Data Type} manifest-entry"
msgstr "{Tipo de dados} manifest-entry"

#. type: deftp
#: guix-git/doc/guix.texi:9064
msgid "Data type representing a manifest entry.  A manifest entry contains essential metadata: a name and version string, the object (usually a package) for that entry, the desired output (@pxref{Packages with Multiple Outputs}), and a number of optional pieces of information detailed below."
msgstr "Tipo de dado que representa uma entrada de manifesto. Uma entrada de manifesto contém metadados essenciais: uma string de nome e versão, o objeto (geralmente um pacote) para essa entrada, a saída desejada (@pxref{Packages with Multiple Outputs}) e uma série de informações opcionais detalhadas abaixo."

#. type: deftp
#: guix-git/doc/guix.texi:9069
msgid "Most of the time, you won't build a manifest entry directly; instead, you will pass a package to @code{package->manifest-entry}, described below.  In some unusual cases though, you might want to create manifest entries for things that are @emph{not} packages, as in this example:"
msgstr "Na maioria das vezes, você não construirá uma entrada de manifesto diretamente; em vez disso, você passará um pacote para @code{package->manifest-entry}, descrito abaixo. Em alguns casos incomuns, no entanto, você pode querer criar entradas de manifesto para coisas que são @emph{não} pacotes, como neste exemplo:"

#. type: lisp
#: guix-git/doc/guix.texi:9082
#, no-wrap
msgid ""
";; Manually build a single manifest entry for a non-package object.\n"
"(let ((hello (program-file \"hello\" #~(display \"Hi!\"))))\n"
"  (manifest-entry\n"
"    (name \"foo\")\n"
"    (version \"42\")\n"
"    (item\n"
"     (computed-file \"hello-directory\"\n"
"                     #~(let ((bin (string-append #$output \"/bin\")))\n"
"                         (mkdir #$output) (mkdir bin)\n"
"                          (symlink #$hello\n"
"                                   (string-append bin \"/hello\")))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:9085
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "The available fields are the following:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: table
#: guix-git/doc/guix.texi:9090
msgid "Name and version string for this entry."
msgstr "Nome e sequência de versão para esta entrada."

#. type: code{#1}
#: guix-git/doc/guix.texi:9091
#, no-wrap
msgid "item"
msgstr "item"

#. type: table
#: guix-git/doc/guix.texi:9094
msgid "A package or other file-like object (@pxref{G-Expressions, file-like objects})."
msgstr "Um pacote ou outro objeto tipo arquivo (@pxref{G-Expressions, objetos tipo arquivo})."

#. type: item
#: guix-git/doc/guix.texi:9095
#, no-wrap
msgid "@code{output} (default: @code{\"out\"})"
msgstr "@code{output} (padrão: @code{\"out\"})"

#. type: table
#: guix-git/doc/guix.texi:9098
msgid "Output of @code{item} to use, in case @code{item} has multiple outputs (@pxref{Packages with Multiple Outputs})."
msgstr "Saída de @code{item} a ser usada, caso @code{item} tenha múltiplas saídas (@pxref{Packages with Multiple Outputs})."

#. type: item
#: guix-git/doc/guix.texi:9099 guix-git/doc/guix.texi:18340
#: guix-git/doc/guix.texi:18828
#, no-wrap
msgid "@code{dependencies} (default: @code{'()})"
msgstr "@code{dependencies} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:9102
msgid "List of manifest entries this entry depends on.  When building a profile, dependencies are added to the profile."
msgstr "Lista de entradas de manifesto das quais esta entrada depende. Ao construir um perfil, dependências são adicionadas ao perfil."

#. type: table
#: guix-git/doc/guix.texi:9106
msgid "Typically, the propagated inputs of a package (@pxref{package Reference, @code{propagated-inputs}}) end up having a corresponding manifest entry in among the dependencies of the package's own manifest entry."
msgstr "Normalmente, as entradas propagadas de um pacote (@pxref{package Reference, @code{propagated-inputs}}) acabam tendo uma entrada de manifesto correspondente entre as dependências da própria entrada de manifesto do pacote."

#. type: table
#: guix-git/doc/guix.texi:9110
msgid "The list of search path specifications honored by this entry (@pxref{Search Paths})."
msgstr "A lista de especificações de caminhos de pesquisa respeitadas por esta entrada (@pxref{Search Paths})."

#. type: item
#: guix-git/doc/guix.texi:9111
#, no-wrap
msgid "@code{properties} (default: @code{'()})"
msgstr "@code{properties} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:9114
msgid "List of symbol/value pairs.  When building a profile, those properties get serialized."
msgstr "Lista de pares de símbolo/valor. Ao construir um perfil, essas propriedades são serializadas."

#. type: table
#: guix-git/doc/guix.texi:9118
msgid "This can be used to piggyback additional metadata---e.g., the transformations applied to a package (@pxref{Package Transformation Options})."
msgstr "Isso pode ser usado para adicionar metadados adicionais, por exemplo, as transformações aplicadas a um pacote (@pxref{Package Transformation Options})."

#. type: item
#: guix-git/doc/guix.texi:9119
#, no-wrap
msgid "@code{parent} (default: @code{(delay #f)})"
msgstr "@code{parent} (padrão: @code{(delay #f)})"

#. type: table
#: guix-git/doc/guix.texi:9121
msgid "A promise pointing to the ``parent'' manifest entry."
msgstr "Uma promessa apontando para a entrada do manifesto ``pai''."

#. type: table
#: guix-git/doc/guix.texi:9124
msgid "This is used as a hint to provide context when reporting an error related to a manifest entry coming from a @code{dependencies} field."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9127
#, no-wrap
msgid "{Procedure} concatenate-manifests lst"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9130
msgid "Concatenate the manifests listed in @var{lst} and return the resulting manifest."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9134
#, no-wrap
msgid "{Procedure} package->manifest-entry package [output] [#:properties]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9142
msgid "Return a manifest entry for the @var{output} of package @var{package}, where @var{output} defaults to @code{\"out\"}, and with the given @var{properties}.  By default @var{properties} is the empty list or, if one or more package transformations were applied to @var{package}, it is an association list representing those transformations, suitable as an argument to @code{options->transformation} (@pxref{Defining Package Variants, @code{options->transformation}})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9145
msgid "The code snippet below builds a manifest with an entry for the default output and the @code{send-email} output of the @code{git} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9148 guix-git/doc/guix.texi:9165
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgid ""
"(use-modules (gnu packages version-control))\n"
"\n"
msgstr ""
"(use-modules (gnu packages version-control))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:9151
#, no-wrap
msgid ""
"(manifest (list (package->manifest-entry git)\n"
"                (package->manifest-entry git \"send-email\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9154
#, fuzzy, no-wrap
#| msgid "packages->manifest"
msgid "{Procedure} packages->manifest packages"
msgstr "packages->manifest"

#. type: deffn
#: guix-git/doc/guix.texi:9159
msgid "Return a list of manifest entries, one for each item listed in @var{packages}.  Elements of @var{packages} can be either package objects or package/string tuples denoting a specific output of a package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9162
msgid "Using this procedure, the manifest above may be rewritten more concisely:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9167
#, no-wrap
msgid "(packages->manifest (list git `(,git \"send-email\")))\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:9171
#, fuzzy
#| msgid "packages->manifest"
msgid "package-development-manifest"
msgstr "packages->manifest"

#. type: deffn
#: guix-git/doc/guix.texi:9171
#, fuzzy, no-wrap
#| msgid "packages->manifest"
msgid "{Procedure} package->development-manifest package [system] [#:target]"
msgstr "packages->manifest"

#. type: deffn
#: guix-git/doc/guix.texi:9176
msgid "Return a manifest for the @dfn{development inputs} of @var{package} for @var{system}, optionally when cross-compiling to @var{target}.  Development inputs include both explicit and implicit inputs of @var{package}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9184
msgid "Like the @option{-D} option of @command{guix shell} (@pxref{shell-development-option, @command{guix shell -D}}), the resulting manifest describes the environment in which one can develop @var{package}.  For example, suppose you're willing to set up a development environment for Inkscape, with the addition of Git for version control; you can describe that ``bill of materials'' with the following manifest:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9188
#, no-wrap
msgid ""
"(use-modules (gnu packages inkscape)          ;for 'inkscape'\n"
"             (gnu packages version-control))  ;for 'git'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9192
#, no-wrap
msgid ""
"(concatenate-manifests\n"
" (list (package->development-manifest inkscape)\n"
"       (packages->manifest (list git))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9199
msgid "In this example, the development manifest that @code{package->development-manifest} returns includes the compiler (GCC), the many supporting libraries (Boost, GLib, GTK, etc.), and a couple of additional development tools---these are the dependencies @command{guix show inkscape} lists."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9206
msgid "Last, the @code{(gnu packages)} module provides higher-level facilities to build manifests.  In particular, it lets you look up packages by name---see below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9207
#, fuzzy, no-wrap
#| msgid ""
#| "(specifications->manifest\n"
#| " '(\"emacs\" \"guile@@2.2\" \"guile@@2.2:debug\"))\n"
msgid "{Procedure} specifications->manifest specs"
msgstr "{Procedure} specifications->manifest specs"

#. type: deffn
#: guix-git/doc/guix.texi:9212
msgid "Given @var{specs}, a list of specifications such as @code{\"emacs@@25.2\"} or @code{\"guile:debug\"}, return a manifest.  Specs have the format that command-line tools such as @command{guix install} and @command{guix package} understand (@pxref{Invoking guix package})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:9215
msgid "As an example, it lets you rewrite the Git manifest that we saw earlier like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9218
#, fuzzy, no-wrap
#| msgid ""
#| "(specifications->manifest\n"
#| " '(\"emacs\" \"guile@@2.2\" \"guile@@2.2:debug\"))\n"
msgid "(specifications->manifest '(\"git\" \"git:send-email\"))\n"
msgstr "(specifications->manifest '(\"git\" \"git:send-email\"))\n"

#. type: deffn
#: guix-git/doc/guix.texi:9224
msgid "Notice that we do not need to worry about @code{use-modules}, importing the right set of modules, and referring to the right variables.  Instead, we directly refer to packages in the same way as on the command line, which can often be more convenient."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9232
#, no-wrap
msgid "build system"
msgstr "sistema de compilação"

#. type: Plain text
#: guix-git/doc/guix.texi:9237
msgid "Each package definition specifies a @dfn{build system} and arguments for that build system (@pxref{Defining Packages}).  This @code{build-system} field represents the build procedure of the package, as well as implicit dependencies of that build procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9241
msgid "Build systems are @code{<build-system>} objects.  The interface to create and manipulate them is provided by the @code{(guix build-system)} module, and actual build systems are exported by specific modules."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9242
#, no-wrap
msgid "bag (low-level package representation)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9252
msgid "Under the hood, build systems first compile package objects to @dfn{bags}.  A @dfn{bag} is like a package, but with less ornamentation---in other words, a bag is a lower-level representation of a package, which includes all the inputs of that package, including some that were implicitly added by the build system.  This intermediate representation is then compiled to a derivation (@pxref{Derivations}).  The @code{package-with-c-toolchain} is an example of a way to change the implicit inputs that a package's build system pulls in (@pxref{package Reference, @code{package-with-c-toolchain}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9260
msgid "Build systems accept an optional list of @dfn{arguments}.  In package definitions, these are passed @i{via} the @code{arguments} field (@pxref{Defining Packages}).  They are typically keyword arguments (@pxref{Optional Arguments, keyword arguments in Guile,, guile, GNU Guile Reference Manual}).  The value of these arguments is usually evaluated in the @dfn{build stratum}---i.e., by a Guile process launched by the daemon (@pxref{Derivations})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:9264
msgid "The main build system is @code{gnu-build-system}, which implements the standard build procedure for GNU and many other packages.  It is provided by the @code{(guix build-system gnu)} module."
msgstr "O principal sistema de compilação é o @code{gnu-build-system}, que implementa o processo padrão de compilação para o GNU e muitos outros pacotes.  É providenciado pelo módulo @code{(guix build-system gnu)}."

#. type: defvar
#: guix-git/doc/guix.texi:9265
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "gnu-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:9269
msgid "@code{gnu-build-system} represents the GNU Build System, and variants thereof (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9270 guix-git/doc/guix.texi:10500
#: guix-git/doc/guix.texi:11129
#, no-wrap
msgid "build phases"
msgstr "fases de construção"

#. type: defvar
#: guix-git/doc/guix.texi:9277
msgid "In a nutshell, packages using it are configured, built, and installed with the usual @code{./configure && make && make check && make install} command sequence.  In practice, a few additional steps are often needed.  All these steps are split up in separate @dfn{phases}.  @xref{Build Phases}, for more info on build phases and ways to customize them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9284
msgid "In addition, this build system ensures that the ``standard'' environment for GNU packages is available.  This includes tools such as GCC, libc, Coreutils, Bash, Make, Diffutils, grep, and sed (see the @code{(guix build-system gnu)} module for a complete list).  We call these the @dfn{implicit inputs} of a package, because package definitions do not have to mention them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9288
msgid "This build system supports a number of keyword arguments, which can be passed @i{via} the @code{arguments} field of a package.  Here are some of the main parameters:"
msgstr "Esta sistema de compilação suporta um número de palavras-chave como argumentos, os quais podems er passados @i{via} o campo @code{arguments} de um pacote.  Veja alguns dos principais parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:9290
#, no-wrap
msgid "#:phases"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9293
msgid "This argument specifies build-side code that evaluates to an alist of build phases.  @xref{Build Phases}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9294
#, no-wrap
msgid "#:configure-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9297
msgid "This is a list of flags (strings) passed to the @command{configure} script.  @xref{Defining Packages}, for an example."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9298
#, no-wrap
msgid "#:make-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9302
msgid "This list of strings contains flags passed as arguments to @command{make} invocations in the @code{build}, @code{check}, and @code{install} phases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9303
#, no-wrap
msgid "#:out-of-source?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9306
msgid "This Boolean, @code{#f} by default, indicates whether to run builds in a build directory separate from the source tree."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9311
msgid "When it is true, the @code{configure} phase creates a separate build directory, changes to that directory, and runs the @code{configure} script from there.  This is useful for packages that require it, such as @code{glibc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9312
#, no-wrap
msgid "#:tests?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9315
msgid "This Boolean, @code{#t} by default, indicates whether the @code{check} phase should run the package's test suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9316
#, no-wrap
msgid "#:test-target"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9319
msgid "This string, @code{\"check\"} by default, gives the name of the makefile target used by the @code{check} phase."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9320
#, no-wrap
msgid "#:parallel-build?"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:9321
#, no-wrap
msgid "#:parallel-tests?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9328
msgid "These Boolean values specify whether to build, respectively run the test suite, in parallel, with the @code{-j} flag of @command{make}.  When they are true, @code{make} is passed @code{-j@var{n}}, where @var{n} is the number specified as the @option{--cores} option of @command{guix-daemon} or that of the @command{guix} client command (@pxref{Common Build Options, @option{--cores}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9329 guix-git/doc/guix.texi:10640
#, no-wrap
msgid "RUNPATH, validation"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9330
#, no-wrap
msgid "#:validate-runpath?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9336
msgid "This Boolean, @code{#t} by default, determines whether to ``validate'' the @code{RUNPATH} of ELF binaries (@code{.so} shared libraries as well as executables) previously installed by the @code{install} phase.  @xref{phase-validate-runpath, the @code{validate-runpath} phase}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9337
#, no-wrap
msgid "#:substitutable?"
msgstr "#:substituível?"

#. type: table
#: guix-git/doc/guix.texi:9341
msgid "This Boolean, @code{#t} by default, tells whether the package outputs should be substitutable---i.e., whether users should be able to obtain substitutes for them instead of building locally (@pxref{Substitutes})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9342
#, no-wrap
msgid "#:allowed-references"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:9343
#, no-wrap
msgid "#:disallowed-references"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9348
msgid "When true, these arguments must be a list of dependencies that must not appear among the references of the build results.  If, upon build completion, some of these references are retained, the build process fails."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9353
msgid "This is useful to ensure that a package does not erroneously keep a reference to some of it build-time inputs, in cases where doing so would, for example, unnecessarily increase its size (@pxref{Invoking guix size})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9356
msgid "Most other build systems support these keyword arguments."
msgstr "Vários outros sistemas de compilação suportam tais argumentos em palavras-chave."

#. type: Plain text
#: guix-git/doc/guix.texi:9363
msgid "Other @code{<build-system>} objects are defined to support other conventions and tools used by free software packages.  They inherit most of @code{gnu-build-system}, and differ mainly in the set of inputs implicitly added to the build process, and in the list of phases executed.  Some of these build systems are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9364
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "agda-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:9367
msgid "This variable is exported by @code{(guix build-system agda)}.  It implements a build procedure for Agda libraries."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9370
msgid "It adds @code{agda} to the set of inputs.  A different Agda can be specified with the @code{#:agda} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9376
msgid "The @code{#:plan} key is a list of cons cells @code{(@var{regexp} . @var{parameters})}, where @var{regexp} is a regexp that should match the @code{.agda} files to build, and @var{parameters} is an optional list of parameters that will be passed to @code{agda} when type-checking it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9382
msgid "When the library uses Haskell to generate a file containing all imports, the convenience @code{#:gnu-and-haskell?} can be set to @code{#t} to add @code{ghc} and the standard inputs of @code{gnu-build-system} to the input list.  You will still need to manually add a phase or tweak the @code{'build} phase, as in the definition of @code{agda-stdlib}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9385
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "ant-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:9389
msgid "This variable is exported by @code{(guix build-system ant)}.  It implements the build procedure for Java packages that can be built with @url{https://ant.apache.org/, Ant build tool}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9394
msgid "It adds both @code{ant} and the @dfn{Java Development Kit} (JDK) as provided by the @code{icedtea} package to the set of inputs.  Different packages can be specified with the @code{#:ant} and @code{#:jdk} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9400
msgid "When the original package does not provide a suitable Ant build file, the parameter @code{#:jar-name} can be used to generate a minimal Ant build file @file{build.xml} with tasks to build the specified jar archive.  In this case the parameter @code{#:source-dir} can be used to specify the source sub-directory, defaulting to ``src''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9408
msgid "The @code{#:main-class} parameter can be used with the minimal ant buildfile to specify the main class of the resulting jar.  This makes the jar file executable.  The @code{#:test-include} parameter can be used to specify the list of junit tests to run.  It defaults to @code{(list \"**/*Test.java\")}.  The @code{#:test-exclude} can be used to disable some tests.  It defaults to @code{(list \"**/Abstract*.java\")}, because abstract classes cannot be run as tests."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9412
msgid "The parameter @code{#:build-target} can be used to specify the Ant task that should be run during the @code{build} phase.  By default the ``jar'' task will be run."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9415
#, no-wrap
msgid "android-ndk-build-system"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9416
#, no-wrap
msgid "Android distribution"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9417
#, no-wrap
msgid "Android NDK build system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9421
msgid "This variable is exported by @code{(guix build-system android-ndk)}.  It implements a build procedure for Android NDK (native development kit)  packages using a Guix-specific build process."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9425
msgid "The build system assumes that packages install their public interface (header) files to the subdirectory @file{include} of the @code{out} output and their libraries to the subdirectory @file{lib} the @code{out} output."
msgstr "O sistema de compilação presume que os pacotes instalam seu prório arquivo (header) de interface pública no subdiretório @file{include} da saída @code{out} bem como suas próprias bibliotecas no subdirectório @file{lib} da saída @code{out}."

#. type: defvar
#: guix-git/doc/guix.texi:9428
msgid "It's also assumed that the union of all the dependencies of a package has no conflicting files."
msgstr "Também é presumido que a união de todas as dependências de um pacote não possuem arquivos conflitantes."

#. type: defvar
#: guix-git/doc/guix.texi:9431
msgid "For the time being, cross-compilation is not supported - so right now the libraries and header files are assumed to be host tools."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9434
#, no-wrap
msgid "asdf-build-system/source"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9435
#, no-wrap
msgid "asdf-build-system/sbcl"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9436
#, no-wrap
msgid "asdf-build-system/ecl"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:9437
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "asdf-build-system/clasp"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:9443
msgid "These variables, exported by @code{(guix build-system asdf)}, implement build procedures for Common Lisp packages using @url{https://common-lisp.net/project/asdf/, ``ASDF''}.  ASDF is a system definition facility for Common Lisp programs and libraries."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9450
msgid "The @code{asdf-build-system/source} system installs the packages in source form, and can be loaded using any common lisp implementation, via ASDF@.  The others, such as @code{asdf-build-system/sbcl}, install binary systems in the format which a particular implementation understands.  These build systems can also be used to produce executable programs, or lisp images which contain a set of packages pre-loaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9454
msgid "The build system uses naming conventions.  For binary packages, the package name should be prefixed with the lisp implementation, such as @code{sbcl-} for @code{asdf-build-system/sbcl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9458
msgid "Additionally, the corresponding source package should be labeled using the same convention as Python packages (@pxref{Python Modules}), using the @code{cl-} prefix."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9466
msgid "In order to create executable programs and images, the build-side procedures @code{build-program} and @code{build-image} can be used.  They should be called in a build phase after the @code{create-asdf-configuration} phase, so that the system which was just built can be used within the resulting image.  @code{build-program} requires a list of Common Lisp expressions to be passed as the @code{#:entry-program} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9475
msgid "By default, all the @file{.asd} files present in the sources are read to find system definitions.  The @code{#:asd-files} parameter can be used to specify the list of @file{.asd} files to read.  Furthermore, if the package defines a system for its tests in a separate file, it will be loaded before the tests are run if it is specified by the @code{#:test-asd-file} parameter.  If it is not set, the files @code{<system>-tests.asd}, @code{<system>-test.asd}, @code{tests.asd}, and @code{test.asd} will be tried if they exist."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9480
msgid "If for some reason the package must be named in a different way than the naming conventions suggest, or if several systems must be compiled, the @code{#:asd-systems} parameter can be used to specify the list of system names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9483
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "cargo-build-system"
msgstr "guix system vm"

#. type: cindex
#: guix-git/doc/guix.texi:9484
#, no-wrap
msgid "Rust programming language"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9485
#, no-wrap
msgid "Cargo (Rust build system)"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9489
msgid "This variable is exported by @code{(guix build-system cargo)}.  It supports builds of packages using Cargo, the build tool of the @uref{https://www.rust-lang.org, Rust programming language}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9492
msgid "It adds @code{rustc} and @code{cargo} to the set of inputs.  A different Rust package can be specified with the @code{#:rust} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9502
msgid "Regular cargo dependencies should be added to the package definition similarly to other packages; those needed only at build time to native-inputs, others to inputs.  If you need to add source-only crates then you should add them to via the @code{#:cargo-inputs} parameter as a list of name and spec pairs, where the spec can be a package or a source definition.  Note that the spec must evaluate to a path to a gzipped tarball which includes a @code{Cargo.toml} file at its root, or it will be ignored.  Similarly, cargo dev-dependencies should be added to the package definition via the @code{#:cargo-development-inputs} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9512
msgid "In its @code{configure} phase, this build system will make any source inputs specified in the @code{#:cargo-inputs} and @code{#:cargo-development-inputs} parameters available to cargo.  It will also remove an included @code{Cargo.lock} file to be recreated by @code{cargo} during the @code{build} phase.  The @code{package} phase will run @code{cargo package} to create a source crate for future use.  The @code{install} phase installs the binaries defined by the crate.  Unless @code{install-source? #f} is defined it will also install a source crate repository of itself and unpacked sources, to ease in future hacking on rust packages."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9514
#, fuzzy, no-wrap
msgid "chicken-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9519
msgid "This variable is exported by @code{(guix build-system chicken)}.  It builds @uref{https://call-cc.org/, CHICKEN Scheme} modules, also called ``eggs'' or ``extensions''.  CHICKEN generates C source code, which then gets compiled by a C compiler, in this case GCC."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9522
msgid "This build system adds @code{chicken} to the package inputs, as well as the packages of @code{gnu-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9526
msgid "The build system can't (yet) deduce the egg's name automatically, so just like with @code{go-build-system} and its @code{#:import-path}, you should define @code{#:egg-name} in the package's @code{arguments} field."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9528
msgid "For example, if you are packaging the @code{srfi-1} egg:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9531
#, no-wrap
msgid "(arguments '(#:egg-name \"srfi-1\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9536
msgid "Egg dependencies must be defined in @code{propagated-inputs}, not @code{inputs} because CHICKEN doesn't embed absolute references in compiled eggs.  Test dependencies should go to @code{native-inputs}, as usual."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9538
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "copy-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:9542
msgid "This variable is exported by @code{(guix build-system copy)}.  It supports builds of simple packages that don't require much compiling, mostly just moving files around."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9547
msgid "It adds much of the @code{gnu-build-system} packages to the set of inputs.  Because of this, the @code{copy-build-system} does not require all the boilerplate code often needed for the @code{trivial-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9552
msgid "To further simplify the file installation process, an @code{#:install-plan} argument is exposed to let the packager specify which files go where.  The install plan is a list of @code{(@var{source} @var{target} [@var{filters}])}.  @var{filters} are optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9554
#, no-wrap
msgid "When @var{source} matches a file or directory without trailing slash, install it to @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9556
#, no-wrap
msgid "If @var{target} has a trailing slash, install @var{source} basename beneath @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9557
#, no-wrap
msgid "Otherwise install @var{source} as @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9560
#, no-wrap
msgid "When @var{source} is a directory with a trailing slash, or when @var{filters} are used,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9563
msgid "the trailing slash of @var{target} is implied with the same meaning as above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9564
#, no-wrap
msgid "Without @var{filters}, install the full @var{source} @emph{content} to @var{target}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9565
#, no-wrap
msgid "With @var{filters} among @code{#:include}, @code{#:include-regexp}, @code{#:exclude},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9568
msgid "@code{#:exclude-regexp}, only select files are installed depending on the filters.  Each filters is specified by a list of strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9569
#, no-wrap
msgid "With @code{#:include}, install all the files which the path suffix matches"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9571
msgid "at least one of the elements in the given list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9571
#, no-wrap
msgid "With @code{#:include-regexp}, install all the files which the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9574
msgid "subpaths match at least one of the regular expressions in the given list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9574
#, no-wrap
msgid "The @code{#:exclude} and @code{#:exclude-regexp} filters"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9579
msgid "are the complement of their inclusion counterpart.  Without @code{#:include} flags, install all files but those matching the exclusion filters.  If both inclusions and exclusions are specified, the exclusions are done on top of the inclusions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9580
#, no-wrap
msgid "When a package has multiple outputs, the @code{#:output} argument"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9583
msgid "can be used to specify which output label the files should be installed to."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9586
msgid "In all cases, the paths relative to @var{source} are preserved within @var{target}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9589
msgid "Examples:"
msgstr "Exemplos:"

#. type: item
#: guix-git/doc/guix.texi:9591
#, no-wrap
msgid "@code{(\"foo/bar\" \"share/my-app/\")}: Install @file{bar} to @file{share/my-app/bar}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9592
#, no-wrap
msgid "@code{(\"foo/bar\" \"share/my-app/baz\")}: Install @file{bar} to @file{share/my-app/baz}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9593
#, no-wrap
msgid "@code{(\"foo/\" \"share/my-app\")}: Install the content of @file{foo} inside @file{share/my-app},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9595
msgid "e.g., install @file{foo/sub/file} to @file{share/my-app/sub/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9595
#, no-wrap
msgid "@code{(\"foo/\" \"share/my-app\" #:include (\"sub/file\"))}: Install only @file{foo/sub/file} to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9597
msgid "@file{share/my-app/sub/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9597
#, no-wrap
msgid "@code{(\"foo/sub\" \"share/my-app\" #:include (\"file\"))}: Install @file{foo/sub/file} to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9599
msgid "@file{share/my-app/file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9599
#, no-wrap
msgid "@code{(\"foo/doc\" \"share/my-app/doc\" #:output \"doc\")}: Install"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9602
msgid "@file{\"foo/doc\"} to @file{\"share/my-app/doc\"} within the @code{\"doc\"} output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9605
#, fuzzy, no-wrap
msgid "vim-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9610
msgid "This variable is exported by @code{(guix build-system vim)}.  It is an extension of the @code{copy-build-system}, installing Vim and Neovim plugins into locations where these two text editors know to find their plugins, using their packpaths."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9615
msgid "Packages which are prefixed with @code{vim-} will be installed in Vim's packpath, while those prefixed with @code{neovim-} will be installed in Neovim's packpath.  If there is a @code{doc} directory with the plugin then helptags will be generated automatically."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9617
msgid "There are a couple of keywords added with the @code{vim-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9618
#, no-wrap
msgid "With @code{plugin-name} it is possible to set the name of the plugin."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9622
msgid "While by default this is set to the name and version of the package, it is often more helpful to set this to name which the upstream author calls their plugin.  This is the name used for @command{:packadd} from inside Vim."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9622
#, no-wrap
msgid "With @code{install-plan} it is possible to augment the built-in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9627
msgid "install-plan of the @code{vim-build-system}.  This is particularly helpful if you have files which should be installed in other locations.  For more information about using the @code{install-plan}, see the @code{copy-build-system} (@pxref{Build Systems, @code{copy-build-system}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9627
#, no-wrap
msgid "With @code{#:vim} it is possible to add this package to Vim's packpath,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9630
msgid "in addition to if it is added automatically because of the @code{vim-} prefix in the package's name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9630
#, no-wrap
msgid "With @code{#:neovim} it is possible to add this package to Neovim's"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9633
msgid "packpath, in addition to if it is added automatically because of the @code{neovim-} prefix in the package's name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9633
#, no-wrap
msgid "With @code{#:mode} it is possible to adjust the path which the plugin is"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9638
msgid "installed into.  By default the plugin is installed into @code{start} and other options are available, including @code{opt}.  Adding a plugin into @code{opt} will mean you will need to run, for example, @command{:packadd foo} to load the @code{foo} plugin from inside of Vim."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9641
#, no-wrap
msgid "Clojure (programming language)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:9642
#, no-wrap
msgid "simple Clojure build system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9643
#, fuzzy, no-wrap
msgid "clojure-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9648
msgid "This variable is exported by @code{(guix build-system clojure)}.  It implements a simple build procedure for @uref{https://clojure.org/, Clojure} packages using plain old @code{compile} in Clojure.  Cross-compilation is not supported yet."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9652
msgid "It adds @code{clojure}, @code{icedtea} and @code{zip} to the set of inputs.  Different packages can be specified with the @code{#:clojure}, @code{#:jdk} and @code{#:zip} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9658
msgid "A list of source directories, test directories and jar names can be specified with the @code{#:source-dirs}, @code{#:test-dirs} and @code{#:jar-names} parameters, respectively.  Compile directory and main class can be specified with the @code{#:compile-dir} and @code{#:main-class} parameters, respectively.  Other parameters are documented below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9661
msgid "This build system is an extension of @code{ant-build-system}, but with the following phases changed:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9664 guix-git/doc/guix.texi:10263
#: guix-git/doc/guix.texi:10461 guix-git/doc/guix.texi:10510
#: guix-git/doc/guix.texi:10618 guix-git/doc/guix.texi:46609
#: guix-git/doc/guix.texi:52587
#, no-wrap
msgid "build"
msgstr "build"

#. type: table
#: guix-git/doc/guix.texi:9673
msgid "This phase calls @code{compile} in Clojure to compile source files and runs @command{jar} to create jars from both source files and compiled files according to the include list and exclude list specified in @code{#:aot-include} and @code{#:aot-exclude}, respectively.  The exclude list has priority over the include list.  These lists consist of symbols representing Clojure libraries or the special keyword @code{#:all} representing all Clojure libraries found under the source directories.  The parameter @code{#:omit-source?} decides if source should be included into the jars."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9674 guix-git/doc/guix.texi:10267
#: guix-git/doc/guix.texi:10465 guix-git/doc/guix.texi:10623
#, no-wrap
msgid "check"
msgstr "marcar"

#. type: table
#: guix-git/doc/guix.texi:9681
msgid "This phase runs tests according to the include list and exclude list specified in @code{#:test-include} and @code{#:test-exclude}, respectively.  Their meanings are analogous to that of @code{#:aot-include} and @code{#:aot-exclude}, except that the special keyword @code{#:all} now stands for all Clojure libraries found under the test directories.  The parameter @code{#:tests?} decides if tests should be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9682 guix-git/doc/guix.texi:10273
#: guix-git/doc/guix.texi:10471 guix-git/doc/guix.texi:10514
#: guix-git/doc/guix.texi:10629
#, no-wrap
msgid "install"
msgstr "install"

#. type: table
#: guix-git/doc/guix.texi:9684
msgid "This phase installs all jars built previously."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9687
msgid "Apart from the above, this build system also contains an additional phase:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9690
#, no-wrap
msgid "install-doc"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9695
msgid "This phase installs all top-level files with base name matching @code{%doc-regex}.  A different regex can be specified with the @code{#:doc-regex} parameter.  All files (recursively) inside the documentation directories specified in @code{#:doc-dirs} are installed as well."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9698
#, fuzzy, no-wrap
msgid "cmake-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9702
msgid "This variable is exported by @code{(guix build-system cmake)}.  It implements the build procedure for packages using the @url{https://www.cmake.org, CMake build tool}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9706
msgid "It automatically adds the @code{cmake} package to the set of inputs.  Which package is used can be specified with the @code{#:cmake} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9713
msgid "The @code{#:configure-flags} parameter is taken as a list of flags passed to the @command{cmake} command.  The @code{#:build-type} parameter specifies in abstract terms the flags passed to the compiler; it defaults to @code{\"RelWithDebInfo\"} (short for ``release mode with debugging information''), which roughly means that code is compiled with @code{-O2 -g}, as is the case for Autoconf-based packages by default."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9715
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "composer-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:9719
msgid "This variable is exported by @code{(guix build-system composer)}.  It implements the build procedure for packages using @url{https://getcomposer.org/, Composer}, the PHP package manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9722
msgid "It automatically adds the @code{php} package to the set of inputs.  Which package is used can be specified with the @code{#:php} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9727
msgid "The @code{#:test-target} parameter is used to control which script is run for the tests.  By default, the @code{test} script is run if it exists.  If the script does not exist, the build system will run @code{phpunit} from the source directory, assuming there is a @file{phpunit.xml} file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9729
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "dune-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:9736
msgid "This variable is exported by @code{(guix build-system dune)}.  It supports builds of packages using @uref{https://dune.build/, Dune}, a build tool for the OCaml programming language.  It is implemented as an extension of the @code{ocaml-build-system} which is described below.  As such, the @code{#:ocaml} and @code{#:findlib} parameters can be passed to this build system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9740
msgid "It automatically adds the @code{dune} package to the set of inputs.  Which package is used can be specified with the @code{#:dune} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9744
msgid "There is no @code{configure} phase because dune packages typically don't need to be configured.  The @code{#:build-flags} parameter is taken as a list of flags passed to the @code{dune} command during the build."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9748
msgid "The @code{#:jbuild?} parameter can be passed to use the @code{jbuild} command instead of the more recent @code{dune} command while building a package.  Its default value is @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9753
msgid "The @code{#:package} parameter can be passed to specify a package name, which is useful when a package contains multiple packages and you want to build only one of them.  This is equivalent to passing the @code{-p} argument to @code{dune}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9756
#, fuzzy, no-wrap
msgid "elm-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9760
msgid "This variable is exported by @code{(guix build-system elm)}.  It implements a build procedure for @url{https://elm-lang.org, Elm} packages similar to @samp{elm install}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9768
msgid "The build system adds an Elm compiler package to the set of inputs.  The default compiler package (currently @code{elm-sans-reactor}) can be overridden using the @code{#:elm} argument.  Additionally, Elm packages needed by the build system itself are added as implicit inputs if they are not already present: to suppress this behavior, use the @code{#:implicit-elm-package-inputs?} argument, which is primarily useful for bootstrapping."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9772
msgid "The @code{\"dependencies\"} and @code{\"test-dependencies\"} in an Elm package's @file{elm.json} file correspond to @code{propagated-inputs} and @code{inputs}, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9776
msgid "Elm requires a particular structure for package names: @pxref{Elm Packages} for more details, including utilities provided by @code{(guix build-system elm)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9778
msgid "There are currently a few noteworthy limitations to @code{elm-build-system}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9789
msgid "The build system is focused on @dfn{packages} in the Elm sense of the word: Elm @dfn{projects} which declare @code{@{ \"type\": \"package\" @}} in their @file{elm.json} files.  Using @code{elm-build-system} to build Elm @dfn{applications} (which declare @code{@{ \"type\": \"application\" @}}) is possible, but requires ad-hoc modifications to the build phases.  For examples, see the definitions of the @code{elm-todomvc} example application and the @code{elm} package itself (because the front-end for the @samp{elm reactor} command is an Elm application)."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9801
msgid "Elm supports multiple versions of a package coexisting simultaneously under @env{ELM_HOME}, but this does not yet work well with @code{elm-build-system}.  This limitation primarily affects Elm applications, because they specify exact versions for their dependencies, whereas Elm packages specify supported version ranges.  As a workaround, the example applications mentioned above use the @code{patch-application-dependencies} procedure provided by @code{(guix build elm-build-system)} to rewrite their @file{elm.json} files to refer to the package versions actually present in the build environment.  Alternatively, Guix package transformations (@pxref{Defining Package Variants}) could be used to rewrite an application's entire dependency graph."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:9807
msgid "We are not yet able to run tests for Elm projects because neither @url{https://github.com/mpizenberg/elm-test-rs, @command{elm-test-rs}} nor the Node.js-based @url{https://github.com/rtfeldman/node-test-runner, @command{elm-test}} runner has been packaged for Guix yet."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9810
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "go-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:9815
msgid "This variable is exported by @code{(guix build-system go)}.  It implements a build procedure for Go packages using the standard @url{https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies, Go build mechanisms}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9826
msgid "The user is expected to provide a value for the key @code{#:import-path} and, in some cases, @code{#:unpack-path}.  The @url{https://golang.org/doc/code.html#ImportPaths, import path} corresponds to the file system path expected by the package's build scripts and any referring packages, and provides a unique way to refer to a Go package.  It is typically based on a combination of the package source code's remote URI and file system hierarchy structure.  In some cases, you will need to unpack the package's source code to a different directory structure than the one indicated by the import path, and @code{#:unpack-path} should be used in such cases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9831
msgid "Packages that provide Go libraries should install their source code into the built output.  The key @code{#:install-source?}, which defaults to @code{#t}, controls whether or not the source code is installed.  It can be set to @code{#f} for packages that only provide executable files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9838
msgid "Packages can be cross-built, and if a specific architecture or operating system is desired then the keywords @code{#:goarch} and @code{#:goos} can be used to force the package to be built for that architecture and operating system.  The combinations known to Go can be found @url{https://golang.org/doc/install/source#environment, in their documentation}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9841
msgid "The key @code{#:go} can be used to specify the Go compiler package with which to build the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9847
msgid "The phase @code{check} provides a wrapper for @code{go test} which builds a test binary (or multiple binaries), vets the code and then runs the test binary.  Build, test and test binary flags can be provided as @code{#:test-flags} parameter, default is @code{'()}.  See @code{go help test} and @code{go help testflag} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9852
msgid "The key @code{#:embed-files}, default is @code{'()}, provides a list of future embedded files or regexps matching files.  They will be copied to build directory after @code{unpack} phase.  See @url{https://pkg.go.dev/embed} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9855
#, no-wrap
msgid "glib-or-gtk-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9858
msgid "This variable is exported by @code{(guix build-system glib-or-gtk)}.  It is intended for use with packages making use of GLib or GTK+."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9861
msgid "This build system adds the following two phases to the ones defined by @code{gnu-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9863 guix-git/doc/guix.texi:10487
#, no-wrap
msgid "glib-or-gtk-wrap"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9870
msgid "The phase @code{glib-or-gtk-wrap} ensures that programs in @file{bin/} are able to find GLib ``schemas'' and @uref{https://developer.gnome.org/gtk3/stable/gtk-running.html, GTK+ modules}.  This is achieved by wrapping the programs in launch scripts that appropriately set the @env{XDG_DATA_DIRS} and @env{GTK_PATH} environment variables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9877
msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:glib-or-gtk-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any GLib or GTK+ binaries, and where wrapping would gratuitously add a dependency of that output on GLib and GTK+."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:9878 guix-git/doc/guix.texi:10491
#, no-wrap
msgid "glib-or-gtk-compile-schemas"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:9886
msgid "The phase @code{glib-or-gtk-compile-schemas} makes sure that all @uref{https://developer.gnome.org/gio/stable/glib-compile-schemas.html, GSettings schemas} of GLib are compiled.  Compilation is performed by the @command{glib-compile-schemas} program.  It is provided by the package @code{glib:bin} which is automatically imported by the build system.  The @code{glib} package providing @command{glib-compile-schemas} can be specified with the @code{#:glib} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9889
msgid "Both phases are executed after the @code{install} phase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9891
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "guile-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:9898
msgid "This build system is for Guile packages that consist exclusively of Scheme code and that are so lean that they don't even have a makefile, let alone a @file{configure} script.  It compiles Scheme code using @command{guild compile} (@pxref{Compilation,,, guile, GNU Guile Reference Manual}) and installs the @file{.scm} and @file{.go} files in the right place.  It also installs documentation."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9901
msgid "This build system supports cross-compilation by using the @option{--target} option of @samp{guild compile}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9904
msgid "Packages built with @code{guile-build-system} must provide a Guile package in their @code{native-inputs} field."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9906
#, no-wrap
msgid "julia-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9913
msgid "This variable is exported by @code{(guix build-system julia)}.  It implements the build procedure used by @uref{https://julialang.org/, julia} packages, which essentially is similar to running @samp{julia -e 'using Pkg; Pkg.add(package)'} in an environment where @env{JULIA_LOAD_PATH} contains the paths to all Julia package inputs.  Tests are run by calling @code{/test/runtests.jl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9918
msgid "The Julia package name and uuid is read from the file @file{Project.toml}.  These values can be overridden by passing the argument @code{#:julia-package-name} (which must be correctly capitalized) or @code{#:julia-package-uuid}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9922
msgid "Julia packages usually manage their binary dependencies via @code{JLLWrappers.jl}, a Julia package that creates a module (named after the wrapped library followed by @code{_jll.jl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9927
msgid "To add the binary path @code{_jll.jl} packages, you need to patch the files under @file{src/wrappers/}, replacing the call to the macro @code{JLLWrappers.@@generate_wrapper_header}, adding as a second argument containing the store path the binary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9931
msgid "As an example, in the MbedTLS Julia package, we add a build phase (@pxref{Build Phases}) to insert the absolute file name of the wrapped MbedTLS package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:9943
#, no-wrap
msgid ""
"(add-after 'unpack 'override-binary-path\n"
"  (lambda* (#:key inputs #:allow-other-keys)\n"
"    (for-each (lambda (wrapper)\n"
"                (substitute* wrapper\n"
"                  ((\"generate_wrapper_header.*\")\n"
"                   (string-append\n"
"                    \"generate_wrapper_header(\\\"MbedTLS\\\", \\\"\"\n"
"                    (assoc-ref inputs \"mbedtls\") \"\\\")\\n\"))))\n"
"              ;; There's a Julia file for each platform, override them all.\n"
"              (find-files \"src/wrappers/\" \"\\\\.jl$\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9949
msgid "Some older packages that aren't using @file{Project.toml} yet, will require this file to be created, too.  It is internally done if the arguments @code{#:julia-package-name} and @code{#:julia-package-uuid} are provided."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9951
#, fuzzy, no-wrap
msgid "maven-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9958
msgid "This variable is exported by @code{(guix build-system maven)}.  It implements a build procedure for @uref{https://maven.apache.org, Maven} packages.  Maven is a dependency and lifecycle management tool for Java.  A user of Maven specifies dependencies and plugins in a @file{pom.xml} file that Maven reads.  When Maven does not have one of the dependencies or plugins in its repository, it will download them and use them to build the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9968
msgid "The maven build system ensures that maven will not try to download any dependency by running in offline mode.  Maven will fail if a dependency is missing.  Before running Maven, the @file{pom.xml} (and subprojects) are modified to specify the version of dependencies and plugins that match the versions available in the guix build environment.  Dependencies and plugins must be installed in the fake maven repository at @file{lib/m2}, and are symlinked into a proper repository before maven is run.  Maven is instructed to use that repository for the build and installs built artifacts there.  Changed files are copied to the @file{lib/m2} directory of the package output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9971
msgid "You can specify a @file{pom.xml} file with the @code{#:pom-file} argument, or let the build system use the default @file{pom.xml} file in the sources."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9977
msgid "In case you need to specify a dependency's version manually, you can use the @code{#:local-packages} argument.  It takes an association list where the key is the groupId of the package and its value is an association list where the key is the artifactId of the package and its value is the version you want to override in the @file{pom.xml}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9983
msgid "Some packages use dependencies or plugins that are not useful at runtime nor at build time in Guix.  You can alter the @file{pom.xml} file to remove them using the @code{#:exclude} argument.  Its value is an association list where the key is the groupId of the plugin or dependency you want to remove, and the value is a list of artifactId you want to remove."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9986
msgid "You can override the default @code{jdk} and @code{maven} packages with the corresponding argument, @code{#:jdk} and @code{#:maven}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9991
msgid "The @code{#:maven-plugins} argument is a list of maven plugins used during the build, with the same format as the @code{inputs} fields of the package declaration.  Its default value is @code{(default-maven-plugins)} which is also exported."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:9993
#, fuzzy, no-wrap
msgid "minetest-mod-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:9999
msgid "This variable is exported by @code{(guix build-system minetest)}.  It implements a build procedure for @uref{https://www.minetest.net, Minetest} mods, which consists of copying Lua code, images and other resources to the location Minetest searches for mods.  The build system also minimises PNG images and verifies that Minetest can load the mod without errors."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10001
#, no-wrap
msgid "minify-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10004
msgid "This variable is exported by @code{(guix build-system minify)}.  It implements a minification procedure for simple JavaScript packages."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10010
msgid "It adds @code{uglify-js} to the set of inputs and uses it to compress all JavaScript files in the @file{src} directory.  A different minifier package can be specified with the @code{#:uglify-js} parameter, but it is expected that the package writes the minified code to the standard output."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10014
msgid "When the input JavaScript files are not all located in the @file{src} directory, the parameter @code{#:javascript-files} can be used to specify a list of file names to feed to the minifier."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10016
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "mozilla-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:10023
msgid "This variable is exported by @code{(guix build-system mozilla)}.  It sets the @code{--target} and @code{--host} configuration flags to what software developed by Mozilla expects -- due to historical reasons, Mozilla software expects @code{--host} to be the system that is cross-compiled from and @code{--target} to be the system that is cross-compiled to, contrary to the standard Autotools conventions."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10025
#, fuzzy, no-wrap
msgid "ocaml-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10031
msgid "This variable is exported by @code{(guix build-system ocaml)}.  It implements a build procedure for @uref{https://ocaml.org, OCaml} packages, which consists of choosing the correct set of commands to run for each package.  OCaml packages can expect many different commands to be run.  This build system will try some of them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10041
msgid "When the package has a @file{setup.ml} file present at the top-level, it will run @code{ocaml setup.ml -configure}, @code{ocaml setup.ml -build} and @code{ocaml setup.ml -install}.  The build system will assume that this file was generated by @uref{http://oasis.forge.ocamlcore.org/, OASIS} and will take care of setting the prefix and enabling tests if they are not disabled.  You can pass configure and build flags with the @code{#:configure-flags} and @code{#:build-flags}.  The @code{#:test-flags} key can be passed to change the set of flags used to enable tests.  The @code{#:use-make?} key can be used to bypass this system in the build and install phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10046
msgid "When the package has a @file{configure} file, it is assumed that it is a hand-made configure script that requires a different argument format than in the @code{gnu-build-system}.  You can add more flags with the @code{#:configure-flags} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10050
msgid "When the package has a @file{Makefile} file (or @code{#:use-make?} is @code{#t}), it will be used and more flags can be passed to the build and install phases with the @code{#:make-flags} key."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10058
msgid "Finally, some packages do not have these files and use a somewhat standard location for its build system.  In that case, the build system will run @code{ocaml pkg/pkg.ml} or @code{ocaml pkg/build.ml} and take care of providing the path to the required findlib module.  Additional flags can be passed via the @code{#:build-flags} key.  Install is taken care of by @command{opam-installer}.  In this case, the @code{opam} package must be added to the @code{native-inputs} field of the package definition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10066
msgid "Note that most OCaml packages assume they will be installed in the same directory as OCaml, which is not what we want in guix.  In particular, they will install @file{.so} files in their module's directory, which is usually fine because it is in the OCaml compiler directory.  In guix though, these libraries cannot be found and we use @env{CAML_LD_LIBRARY_PATH}.  This variable points to @file{lib/ocaml/site-lib/stubslibs} and this is where @file{.so} libraries should be installed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10068
#, no-wrap
msgid "python-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10073
msgid "This variable is exported by @code{(guix build-system python)}.  It implements the more or less standard build procedure used by Python packages, which consists in running @code{python setup.py build} and then @code{python setup.py install --prefix=/gnu/store/@dots{}}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10078
msgid "For packages that install stand-alone Python programs under @code{bin/}, it takes care of wrapping these programs so that their @env{GUIX_PYTHONPATH} environment variable points to all the Python libraries they depend on."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10084
msgid "Which Python package is used to perform the build can be specified with the @code{#:python} parameter.  This is a useful way to force a package to be built for a specific version of the Python interpreter, which might be necessary if the package is only compatible with a single interpreter version."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10089
msgid "By default guix calls @code{setup.py} under control of @code{setuptools}, much like @command{pip} does.  Some packages are not compatible with setuptools (and pip), thus you can disable this by setting the @code{#:use-setuptools?} parameter to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10095
msgid "If a @code{\"python\"} output is available, the package is installed into it instead of the default @code{\"out\"} output. This is useful for packages that include a Python package as only a part of the software, and thus want to combine the phases of @code{python-build-system} with another build system.  Python bindings are a common usecase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10097
#, fuzzy, no-wrap
msgid "pyproject-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10102
msgid "This is a variable exported by @code{guix build-system pyproject}.  It is based on @var{python-build-system}, and adds support for @file{pyproject.toml} and @url{https://peps.python.org/pep-0517/, PEP 517}.  It also supports a variety of build backends and test frameworks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10104
msgid "The API is slightly different from @var{python-build-system}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10107
msgid "@code{#:use-setuptools?} and @code{#:test-target} is removed."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10115
msgid "@code{#:configure-flags} is changed. Instead of a list this option must be a JSON object, whose interpretation depends on the build backend. For instance the example from @url{https://peps.python.org/pep-0517/#config-settings,PEP 517} should be written as @code{'(@@ (\"CC\" \"gcc\") (\"--global-option\" (\"--some-global-option\")) (\"--build-option\" (\"--build-option1\" \"--build-option2\")))}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10119
msgid "@code{#:backend-path} is added.  It defaults to @code{#false}, but when set to a list it will be appended to Python’s search path and overrides the definition in @file{pyproject.toml}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10122
msgid "@code{#:build-backend} is added.  It defaults to @code{#false} and will try to guess the appropriate backend based on @file{pyproject.toml}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10125
msgid "@code{#:test-backend} is added.  It defaults to @code{#false} and will guess an appropriate test backend based on what is available in package inputs."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:10129
msgid "@code{#:test-flags} is added.  The default is @code{'()}.  These flags are passed as arguments to the test command.  Note that flags for verbose output is always enabled on supported backends."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10135
msgid "It is considered ``experimental'' in that the implementation details are not set in stone yet, however users are encouraged to try it for new Python projects (even those using @file{setup.py}).  The API is subject to change, but any breaking changes in the Guix channel will be dealt with."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10138
msgid "Eventually this build system will be deprecated and merged back into @var{python-build-system}, probably some time in 2024."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10140
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "perl-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:10152
msgid "This variable is exported by @code{(guix build-system perl)}.  It implements the standard build procedure for Perl packages, which either consists in running @code{perl Build.PL --prefix=/gnu/store/@dots{}}, followed by @code{Build} and @code{Build install}; or in running @code{perl Makefile.PL PREFIX=/gnu/store/@dots{}}, followed by @code{make} and @code{make install}, depending on which of @code{Build.PL} or @code{Makefile.PL} is present in the package distribution.  Preference is given to the former if both @code{Build.PL} and @code{Makefile.PL} exist in the package distribution.  This preference can be reversed by specifying @code{#t} for the @code{#:make-maker?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10156
msgid "The initial @code{perl Makefile.PL} or @code{perl Build.PL} invocation passes flags specified by the @code{#:make-maker-flags} or @code{#:module-build-flags} parameter, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10158
msgid "Which Perl package is used can be specified with @code{#:perl}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10160
#, no-wrap
msgid "renpy-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10164
msgid "This variable is exported by @code{(guix build-system renpy)}.  It implements the more or less standard build procedure used by Ren'py games, which consists of loading @code{#:game} once, thereby creating bytecode for it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10167
msgid "It further creates a wrapper script in @code{bin/} and a desktop entry in @code{share/applications}, both of which can be used to launch the game."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10171
msgid "Which Ren'py package is used can be specified with @code{#:renpy}.  Games can also be installed in outputs other than ``out'' by using @code{#:output}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10173
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "qt-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:10176
msgid "This variable is exported by @code{(guix build-system qt)}.  It is intended for use with applications using Qt or KDE."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10179
msgid "This build system adds the following two phases to the ones defined by @code{cmake-build-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10181
#, no-wrap
msgid "check-setup"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10188
msgid "The phase @code{check-setup} prepares the environment for running the checks as commonly used by Qt test programs.  For now this only sets some environment variables: @code{QT_QPA_PLATFORM=offscreen}, @code{DBUS_FATAL_WARNINGS=0} and @code{CTEST_OUTPUT_ON_FAILURE=1}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10191
msgid "This phase is added before the @code{check} phase.  It's a separate phase to ease adjusting if necessary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10192
#, no-wrap
msgid "qt-wrap"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10198
msgid "The phase @code{qt-wrap} searches for Qt5 plugin paths, QML paths and some XDG in the inputs and output.  In case some path is found, all programs in the output's @file{bin/}, @file{sbin/}, @file{libexec/} and @file{lib/libexec/} directories are wrapped in scripts defining the necessary environment variables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10204
msgid "It is possible to exclude specific package outputs from that wrapping process by listing their names in the @code{#:qt-wrap-excluded-outputs} parameter.  This is useful when an output is known not to contain any Qt binaries, and where wrapping would gratuitously add a dependency of that output on Qt, KDE, or such."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10206
msgid "This phase is added after the @code{install} phase."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10209
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "r-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:10217
msgid "This variable is exported by @code{(guix build-system r)}.  It implements the build procedure used by @uref{https://r-project.org, R} packages, which essentially is little more than running @samp{R CMD INSTALL --library=/gnu/store/@dots{}} in an environment where @env{R_LIBS_SITE} contains the paths to all R package inputs.  Tests are run after installation using the R function @code{tools::testInstalledPackage}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10219
#, no-wrap
msgid "rakudo-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10227
msgid "This variable is exported by @code{(guix build-system rakudo)}.  It implements the build procedure used by @uref{https://rakudo.org/, Rakudo} for @uref{https://perl6.org/, Perl6} packages.  It installs the package to @code{/gnu/store/@dots{}/NAME-VERSION/share/perl6} and installs the binaries, library files and the resources, as well as wrap the files under the @code{bin/} directory.  Tests can be skipped by passing @code{#f} to the @code{tests?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10235
msgid "Which rakudo package is used can be specified with @code{rakudo}.  Which perl6-tap-harness package used for the tests can be specified with @code{#:prove6} or removed by passing @code{#f} to the @code{with-prove6?} parameter.  Which perl6-zef package used for tests and installing can be specified with @code{#:zef} or removed by passing @code{#f} to the @code{with-zef?} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10237
#, fuzzy, no-wrap
msgid "rebar-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10241
msgid "This variable is exported by @code{(guix build-system rebar)}.  It implements a build procedure around @uref{https://rebar3.org,rebar3}, a build system for programs written in the Erlang language."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10245
msgid "It adds both @code{rebar3} and the @code{erlang} to the set of inputs.  Different packages can be specified with the @code{#:rebar} and @code{#:erlang} parameters, respectively."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10248
msgid "This build system is based on @code{gnu-build-system}, but with the following phases changed:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10251 guix-git/doc/guix.texi:10603
#, no-wrap
msgid "unpack"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10257
msgid "This phase, after unpacking the source like the @code{gnu-build-system} does, checks for a file @code{contents.tar.gz} at the top-level of the source.  If this file exists, it will be unpacked, too.  This eases handling of package hosted at @uref{https://hex.pm/}, the Erlang and Elixir package repository."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10258
#, no-wrap
msgid "bootstrap"
msgstr "bootstrap"

#. type: item
#: guix-git/doc/guix.texi:10259 guix-git/doc/guix.texi:10455
#: guix-git/doc/guix.texi:10506 guix-git/doc/guix.texi:10613
#, no-wrap
msgid "configure"
msgstr "configure"

#. type: table
#: guix-git/doc/guix.texi:10262
msgid "There are no @code{bootstrap} and @code{configure} phase because erlang packages typically don’t need to be configured."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10266
msgid "This phase runs @code{rebar3 compile} with the flags listed in @code{#:rebar-flags}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10272
msgid "Unless @code{#:tests? #f} is passed, this phase runs @code{rebar3 eunit}, or some other target specified with @code{#:test-target}, with the flags listed in @code{#:rebar-flags},"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10276
msgid "This installs the files created in the @i{default} profile, or some other profile specified with @code{#:install-profile}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10280
#, no-wrap
msgid "texlive-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10285
msgid "This variable is exported by @code{(guix build-system texlive)}.  It is used to build TeX packages in batch mode with a specified engine.  The build system sets the @env{TEXINPUTS} variable to find all TeX source files in the inputs."
msgstr "Esta variável é exportada pelo @code{(guix build-system texlive)}.  É usado para compilar os pacotes TeX no modo de lote com um moter especificado.  O sistema de compilação configura a variável @env{TEXINPUTS} para encontrar todos os arquivos de fonte TeX na entrada."

#. type: defvar
#: guix-git/doc/guix.texi:10292
msgid "By default it tries to run @code{luatex} on all @file{.ins} files, and if it fails to find any, on all @file{.dtx} files.  A different engine and format can be specified with, respectively, the @code{#:tex-engine} and @code{#:tex-format} arguments.  Different build targets can be specified with the @code{#:build-targets} argument, which expects a list of file names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10299
msgid "It also generates font metrics (i.e., @file{.tfm} files) out of Metafont files whenever possible.  Likewise, it can also create TeX formats (i.e., @file{.fmt} files) listed in the @code{#:create-formats} argument, and generate a symbolic link from @file{bin/} directory to any script located in @file{texmf-dist/scripts/}, provided its file name is listed in @code{#:link-scripts} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10303
msgid "The build system adds @code{texlive-bin} from @code{(gnu packages tex)} to the native inputs.  It can be overridden with the @code{#:texlive-bin} argument."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10310
msgid "The package @code{texlive-latex-bin}, from the same module, contains most of the tools for building TeX Live packages; for convenience, it is also added by default to the native inputs.  However, this can be troublesome when building a dependency of @code{texlive-latex-bin} itself.  In this particular situation, the @code{#:texlive-latex-bin?} argument should be set to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10312
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "ruby-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:10316
msgid "This variable is exported by @code{(guix build-system ruby)}.  It implements the RubyGems build procedure used by Ruby packages, which involves running @code{gem build} followed by @code{gem install}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10324
msgid "The @code{source} field of a package that uses this build system typically references a gem archive, since this is the format that Ruby developers use when releasing their software.  The build system unpacks the gem archive, potentially patches the source, runs the test suite, repackages the gem, and installs it.  Additionally, directories and tarballs may be referenced to allow building unreleased gems from Git or a traditional source release tarball."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10328
msgid "Which Ruby package is used can be specified with the @code{#:ruby} parameter.  A list of additional flags to be passed to the @command{gem} command can be specified with the @code{#:gem-flags} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10330
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "waf-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:10336
msgid "This variable is exported by @code{(guix build-system waf)}.  It implements a build procedure around the @code{waf} script.  The common phases---@code{configure}, @code{build}, and @code{install}---are implemented by passing their names as arguments to the @code{waf} script."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10340
msgid "The @code{waf} script is executed by the Python interpreter.  Which Python package is used to run the script can be specified with the @code{#:python} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10342
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "zig-build-system"
msgstr "guix system vm"

#. type: defvar
#: guix-git/doc/guix.texi:10346
msgid "This variable is exported by @code{(guix build-system zig)}.  It implements the build procedures for the @uref{https://ziglang.org/, Zig} build system (@command{zig build} command)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10349
msgid "Selecting this build system adds @code{zig} to the package inputs, in addition to the packages of @code{gnu-build-system}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10353
msgid "This build system by default installs package source to output.  This behavior can be disabled by setting @code{#:install-source?} parameter to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10358
msgid "For packages that don't install anything and don't come with a test suite (likely library packages to be used by other Zig packages), you can set @code{#:skip-build?} parameter to @code{#t}, which skips @code{build} and @code{check} phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10362
msgid "The @code{configure} phase sets up environment for @command{zig build}.  You need to add custom phases after it if you want to invoke @command{zig}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10368
msgid "The @code{#:zig-build-flags} parameter is a list of flags that are passed to @command{zig build} in @code{build} phase.  The @code{#:zig-test-flags} parameter is a list of flags that are passed to @command{zig build test} in @code{check} phase.  The default compiler package can be overridden with the @code{#:zig} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10374
msgid "The optional @code{#:zig-release-type} parameter declares the type of release.  Possible values are: @code{\"safe\"}, @code{\"fast\"}, or @code{\"small\"}.  The default value is @code{#f}, which causes the release flag to be omitted from the @code{zig} command and results in a @code{\"debug\"} build."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10376
#, no-wrap
msgid "scons-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10382
msgid "This variable is exported by @code{(guix build-system scons)}.  It implements the build procedure used by the SCons software construction tool.  This build system runs @code{scons} to build the package, @code{scons test} to run tests, and then @code{scons install} to install the package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10389
msgid "Additional flags to be passed to @code{scons} can be specified with the @code{#:scons-flags} parameter.  The default build and install targets can be overridden with @code{#:build-targets} and @code{#:install-targets} respectively.  The version of Python used to run SCons can be specified by selecting the appropriate SCons package with the @code{#:scons} parameter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10391
#, fuzzy, no-wrap
msgid "haskell-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10405
msgid "This variable is exported by @code{(guix build-system haskell)}.  It implements the Cabal build procedure used by Haskell packages, which involves running @code{runhaskell Setup.hs configure --prefix=/gnu/store/@dots{}} and @code{runhaskell Setup.hs build}.  Instead of installing the package by running @code{runhaskell Setup.hs install}, to avoid trying to register libraries in the read-only compiler store directory, the build system uses @code{runhaskell Setup.hs copy}, followed by @code{runhaskell Setup.hs register}.  In addition, the build system generates the package documentation by running @code{runhaskell Setup.hs haddock}, unless @code{#:haddock? #f} is passed.  Optional Haddock parameters can be passed with the help of the @code{#:haddock-flags} parameter.  If the file @code{Setup.hs} is not found, the build system looks for @code{Setup.lhs} instead."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10408
msgid "Which Haskell compiler is used can be specified with the @code{#:haskell} parameter which defaults to @code{ghc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10410
#, fuzzy, no-wrap
#| msgid "Build Systems"
msgid "dub-build-system"
msgstr "Sistemas de compilação"

#. type: defvar
#: guix-git/doc/guix.texi:10415
msgid "This variable is exported by @code{(guix build-system dub)}.  It implements the Dub build procedure used by D packages, which involves running @code{dub build} and @code{dub run}.  Installation is done by copying the files manually."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10418
msgid "Which D compiler is used can be specified with the @code{#:ldc} parameter which defaults to @code{ldc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10421
#, no-wrap
msgid "emacs-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10425
msgid "This variable is exported by @code{(guix build-system emacs)}.  It implements an installation procedure similar to the packaging system of Emacs itself (@pxref{Packages,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10431
msgid "It first creates the @code{@code{package}-autoloads.el} file, then it byte compiles all Emacs Lisp files.  Differently from the Emacs packaging system, the Info documentation files are moved to the standard documentation directory and the @file{dir} file is deleted.  The Elisp package files are installed directly under @file{share/emacs/site-lisp}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10433
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "font-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:10439
msgid "This variable is exported by @code{(guix build-system font)}.  It implements an installation procedure for font packages where upstream provides pre-compiled TrueType, OpenType, etc.@: font files that merely need to be copied into place.  It copies font files to standard locations in the output directory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10441
#, no-wrap
msgid "meson-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10445
msgid "This variable is exported by @code{(guix build-system meson)}.  It implements the build procedure for packages that use @url{https://mesonbuild.com, Meson} as their build system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10449
msgid "It adds both Meson and @uref{https://ninja-build.org/, Ninja} to the set of inputs, and they can be changed with the parameters @code{#:meson} and @code{#:ninja} if needed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10452
msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed to some specific for Meson:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10460
msgid "The phase runs @code{meson} with the flags specified in @code{#:configure-flags}.  The flag @option{--buildtype} is always set to @code{debugoptimized} unless something else is specified in @code{#:build-type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10464
msgid "The phase runs @code{ninja} to build the package in parallel by default, but this can be changed with @code{#:parallel-build?}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10470
msgid "The phase runs @samp{meson test} with a base set of options that cannot be overridden.  This base set of options can be extended via the @code{#:test-options} argument, for example to select or skip a specific test suite."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10473
msgid "The phase runs @code{ninja install} and can not be changed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10476
msgid "Apart from that, the build system also adds the following phases:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10479
#, no-wrap
msgid "fix-runpath"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10486
msgid "This phase ensures that all binaries can find the libraries they need.  It searches for required libraries in subdirectories of the package being built, and adds those to @code{RUNPATH} where needed.  It also removes references to libraries left over from the build phase by @code{meson}, such as test dependencies, that aren't actually required for the program to run."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10490 guix-git/doc/guix.texi:10494
msgid "This phase is the phase provided by @code{glib-or-gtk-build-system}, and it is not enabled by default.  It can be enabled with @code{#:glib-or-gtk?}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10497
#, no-wrap
msgid "linux-module-build-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10499
msgid "@code{linux-module-build-system} allows building Linux kernel modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10503
msgid "This build system is an extension of @code{gnu-build-system}, but with the following phases changed:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10509
msgid "This phase configures the environment so that the Linux kernel's Makefile can be used to build the external kernel module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10513
msgid "This phase uses the Linux kernel's Makefile in order to build the external kernel module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10517
msgid "This phase uses the Linux kernel's Makefile in order to install the external kernel module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10522
msgid "It is possible and useful to specify the Linux kernel to use for building the module (in the @code{arguments} form of a package using the @code{linux-module-build-system}, use the key @code{#:linux} to specify it)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10524
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "node-build-system"
msgstr "sistema operacional"

#. type: defvar
#: guix-git/doc/guix.texi:10529
msgid "This variable is exported by @code{(guix build-system node)}.  It implements the build procedure used by @uref{https://nodejs.org, Node.js}, which implements an approximation of the @code{npm install} command, followed by an @code{npm test} command."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10533
msgid "Which Node.js package is used to interpret the @code{npm} commands can be specified with the @code{#:node} parameter which defaults to @code{node}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10535
#, fuzzy, no-wrap
msgid "tree-sitter-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10543
msgid "This variable is exported by @code{(guix build-system tree-sitter)}.  It implements procedures to compile grammars for the @url{https://tree-sitter.github.io/tree-sitter/, Tree-sitter} parsing library.  It essentially runs @code{tree-sitter generate} to translate @code{grammar.js} grammars to JSON and then to C.  Which it then compiles to native code."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10547
msgid "Tree-sitter packages may support multiple grammars, so this build system supports a @code{#:grammar-directories} keyword to specify a list of locations where a @code{grammar.js} file may be found."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10551
msgid "Grammars sometimes depend on each other, such as C++ depending on C and TypeScript depending on JavaScript.  You may use inputs to declare such dependencies."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10558
msgid "Lastly, for packages that do not need anything as sophisticated, a ``trivial'' build system is provided.  It is trivial in the sense that it provides basically no support: it does not pull any implicit inputs, and does not have a notion of build phases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10559
#, fuzzy, no-wrap
msgid "trivial-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10561
msgid "This variable is exported by @code{(guix build-system trivial)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10566
msgid "This build system requires a @code{#:builder} argument.  This argument must be a Scheme expression that builds the package output(s)---as with @code{build-expression->derivation} (@pxref{Derivations, @code{build-expression->derivation}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10568
#, fuzzy, no-wrap
msgid "channel-build-system"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:10570
msgid "This variable is exported by @code{(guix build-system channel)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10576
msgid "This build system is meant primarily for internal use.  A package using this build system must have a channel specification as its @code{source} field (@pxref{Channels}); alternatively, its source can be a directory name, in which case an additional @code{#:commit} argument must be supplied to specify the commit being built (a hexadecimal string)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10579
msgid "Optionally, a @code{#:channels} argument specifying additional channels can be provided."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:10582
msgid "The resulting package is a Guix instance of the given channel(s), similar to how @command{guix time-machine} would build it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10587
#, no-wrap
msgid "build phases, for packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10593
msgid "Almost all package build systems implement a notion @dfn{build phases}: a sequence of actions that the build system executes, when you build the package, leading to the installed byproducts in the store.  A notable exception is the ``bare-bones'' @code{trivial-build-system} (@pxref{Build Systems})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10597
msgid "As discussed in the previous section, those build systems provide a standard list of phases.  For @code{gnu-build-system}, the main build phases are the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10599
#, fuzzy, no-wrap
#| msgid "--search-paths"
msgid "set-paths"
msgstr "--search-paths"

#. type: table
#: guix-git/doc/guix.texi:10602
msgid "Define search path environment variables for all the input packages, including @env{PATH} (@pxref{Search Paths})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10607
msgid "Unpack the source tarball, and change the current directory to the extracted source tree.  If the source is actually a directory, copy it to the build tree, and enter that directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10608
#, no-wrap
msgid "patch-source-shebangs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10612
msgid "Patch shebangs encountered in source files so they refer to the right store file names.  For instance, this changes @code{#!/bin/sh} to @code{#!/gnu/store/@dots{}-bash-4.3/bin/sh}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10617
msgid "Run the @file{configure} script with a number of default options, such as @option{--prefix=/gnu/store/@dots{}}, as well as the options specified by the @code{#:configure-flags} argument."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10622
msgid "Run @code{make} with the list of flags specified with @code{#:make-flags}.  If the @code{#:parallel-build?} argument is true (the default), build with @code{make -j}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10628
msgid "Run @code{make check}, or some other target specified with @code{#:test-target}, unless @code{#:tests? #f} is passed.  If the @code{#:parallel-tests?} argument is true (the default), run @code{make check -j}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10631
msgid "Run @code{make install} with the flags listed in @code{#:make-flags}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10632
#, no-wrap
msgid "patch-shebangs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10634
msgid "Patch shebangs on the installed executable files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10635
#, no-wrap
msgid "strip"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10639
msgid "Strip debugging symbols from ELF files (unless @code{#:strip-binaries?} is false), copying them to the @code{debug} output when available (@pxref{Installing Debugging Files})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:10642
msgid "phase-validate-runpath"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:10642
#, no-wrap
msgid "validate-runpath"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10645
msgid "Validate the @code{RUNPATH} of ELF binaries, unless @code{#:validate-runpath?} is false (@pxref{Build Systems})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:10653
msgid "This validation step consists in making sure that all the shared libraries needed by an ELF binary, which are listed as @code{DT_NEEDED} entries in its @code{PT_DYNAMIC} segment, appear in the @code{DT_RUNPATH} entry of that binary.  In other words, it ensures that running or using those binaries will not result in a ``file not found'' error at run time.  @xref{Options, @option{-rpath},, ld, The GNU Linker}, for more information on @code{RUNPATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10663
msgid "Other build systems have similar phases, with some variations.  For example, @code{cmake-build-system} has same-named phases but its @code{configure} phases runs @code{cmake} instead of @code{./configure}.  Others, such as @code{python-build-system}, have a wholly different list of standard phases.  All this code runs on the @dfn{build side}: it is evaluated when you actually build the package, in a dedicated build process spawned by the build daemon (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10670
msgid "Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol for the name of the phase and the associated value is a procedure that accepts an arbitrary number of arguments.  By convention, those procedures receive information about the build in the form of @dfn{keyword parameters}, which they can use or ignore."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:10671
#, no-wrap
msgid "%standard-phases"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10677
msgid "For example, here is how @code{(guix build gnu-build-system)} defines @code{%standard-phases}, the variable holding its alist of build phases@footnote{We present a simplified view of those build phases, but do take a look at @code{(guix build gnu-build-system)} to see all the details!}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10680
#, no-wrap
msgid ""
";; The build phases of 'gnu-build-system'.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10684
#, no-wrap
msgid ""
"(define* (unpack #:key source #:allow-other-keys)\n"
"  ;; Extract the source tarball.\n"
"  (invoke \"tar\" \"xvf\" source))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10690
#, no-wrap
msgid ""
"(define* (configure #:key outputs #:allow-other-keys)\n"
"  ;; Run the 'configure' script.  Install to output \"out\".\n"
"  (let ((out (assoc-ref outputs \"out\")))\n"
"    (invoke \"./configure\"\n"
"            (string-append \"--prefix=\" out))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10694
#, no-wrap
msgid ""
"(define* (build #:allow-other-keys)\n"
"  ;; Compile.\n"
"  (invoke \"make\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10701
#, no-wrap
msgid ""
"(define* (check #:key (test-target \"check\") (tests? #true)\n"
"                #:allow-other-keys)\n"
"  ;; Run the test suite.\n"
"  (if tests?\n"
"      (invoke \"make\" test-target)\n"
"      (display \"test suite not run\\n\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10705
#, no-wrap
msgid ""
"(define* (install #:allow-other-keys)\n"
"  ;; Install files to the prefix 'configure' specified.\n"
"  (invoke \"make\" \"install\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10714
#, no-wrap
msgid ""
"(define %standard-phases\n"
"  ;; The list of standard phases (quite a few are omitted\n"
"  ;; for brevity).  Each element is a symbol/procedure pair.\n"
"  (list (cons 'unpack unpack)\n"
"        (cons 'configure configure)\n"
"        (cons 'build build)\n"
"        (cons 'check check)\n"
"        (cons 'install install)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10724
msgid "This shows how @code{%standard-phases} is defined as a list of symbol/procedure pairs (@pxref{Pairs,,, guile, GNU Guile Reference Manual}).  The first pair associates the @code{unpack} procedure with the @code{unpack} symbol---a name; the second pair defines the @code{configure} phase similarly, and so on.  When building a package that uses @code{gnu-build-system} with its default list of phases, those phases are executed sequentially.  You can see the name of each phase started and completed in the build log of packages that you build."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10730
msgid "Let's now look at the procedures themselves.  Each one is defined with @code{define*}: @code{#:key} lists keyword parameters the procedure accepts, possibly with a default value, and @code{#:allow-other-keys} specifies that other keyword parameters are ignored (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10746
msgid "The @code{unpack} procedure honors the @code{source} parameter, which the build system uses to pass the file name of the source tarball (or version control checkout), and it ignores other parameters.  The @code{configure} phase only cares about the @code{outputs} parameter, an alist mapping package output names to their store file name (@pxref{Packages with Multiple Outputs}).  It extracts the file name of for @code{out}, the default output, and passes it to @command{./configure} as the installation prefix, meaning that @command{make install} will eventually copy all the files in that directory (@pxref{Configuration, configuration and makefile conventions,, standards, GNU Coding Standards}).  @code{build} and @code{install} ignore all their arguments.  @code{check} honors the @code{test-target} argument, which specifies the name of the Makefile target to run tests; it prints a message and skips tests when @code{tests?} is false."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10747
#, no-wrap
msgid "build phases, customizing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10756
msgid "The list of phases used for a particular package can be changed with the @code{#:phases} parameter of the build system.  Changing the set of build phases boils down to building a new alist of phases based on the @code{%standard-phases} alist described above.  This can be done with standard alist procedures such as @code{alist-delete} (@pxref{SRFI-1 Association Lists,,, guile, GNU Guile Reference Manual}); however, it is more convenient to do so with @code{modify-phases} (@pxref{Build Utilities, @code{modify-phases}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10761
msgid "Here is an example of a package definition that removes the @code{configure} phase of @code{%standard-phases} and inserts a new phase before the @code{build} phase, called @code{set-prefix-in-makefile}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10785
#, no-wrap
msgid ""
"(define-public example\n"
"  (package\n"
"    (name \"example\")\n"
"    ;; other fields omitted\n"
"    (build-system gnu-build-system)\n"
"    (arguments\n"
"     (list\n"
"      #:phases\n"
"      #~(modify-phases %standard-phases\n"
"          (delete 'configure)\n"
"          (add-before 'build 'set-prefix-in-makefile\n"
"            (lambda* (#:key inputs #:allow-other-keys)\n"
"              ;; Modify the makefile so that its\n"
"              ;; 'PREFIX' variable points to #$output and\n"
"              ;; 'XMLLINT' points to the correct path.\n"
"              (substitute* \"Makefile\"\n"
"                ((\"PREFIX =.*\")\n"
"                 (string-append \"PREFIX = \" #$output \"\\n\"))\n"
"                ((\"XMLLINT =.*\")\n"
"                 (string-append \"XMLLINT = \"\n"
"                                (search-input-file inputs \"/bin/xmllint\")\n"
"                                \"\\n\"))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10794
msgid "The new phase that is inserted is written as an anonymous procedure, introduced with @code{lambda*}; it looks for the @file{xmllint} executable under a @file{/bin} directory among the package's inputs (@pxref{package Reference}).  It also honors the @code{outputs} parameter we have seen before.  @xref{Build Utilities}, for more about the helpers used by this phase, and for more examples of @code{modify-phases}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:10798
msgid "You can inspect the code associated with a package's @code{#:phases} argument interactively, at the REPL (@pxref{Using Guix Interactively})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10800 guix-git/doc/guix.texi:12166
#, no-wrap
msgid "code staging"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10801 guix-git/doc/guix.texi:12167
#, no-wrap
msgid "staging, of code"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10808
msgid "Keep in mind that build phases are code evaluated at the time the package is actually built.  This explains why the whole @code{modify-phases} expression above is quoted (it comes after the @code{#~} or hash-tilde): it is @dfn{staged} for later execution.  @xref{G-Expressions}, for an explanation of code staging and the @dfn{code strata} involved."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10818
msgid "As soon as you start writing non-trivial package definitions (@pxref{Defining Packages}) or other build actions (@pxref{G-Expressions}), you will likely start looking for helpers for ``shell-like'' actions---creating directories, copying and deleting files recursively, manipulating build phases, and so on.  The @code{(guix build utils)} module provides such utility procedures."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10822
msgid "Most build systems load @code{(guix build utils)} (@pxref{Build Systems}).  Thus, when writing custom build phases for your package definitions, you can usually assume those procedures are in scope."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10827
msgid "When writing G-expressions, you can import @code{(guix build utils)} on the ``build side'' using @code{with-imported-modules} and then put it in scope with the @code{use-modules} form (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10834
#, no-wrap
msgid ""
"(with-imported-modules '((guix build utils))  ;import it\n"
"  (computed-file \"empty-tree\"\n"
"                 #~(begin\n"
"                     ;; Put it in scope.\n"
"                     (use-modules (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10837
#, no-wrap
msgid ""
"                     ;; Happily use its 'mkdir-p' procedure.\n"
"                     (mkdir-p (string-append #$output \"/a/b/c\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10841
msgid "The remainder of this section is the reference for most of the utility procedures provided by @code{(guix build utils)}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10844
#, no-wrap
msgid "Dealing with Store File Names"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10847
msgid "This section documents procedures that deal with store file names."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10848
#, fuzzy, no-wrap
#| msgid "state directory"
msgid "{Procedure} %store-directory"
msgstr "diretório de estado"

#. type: deffn
#: guix-git/doc/guix.texi:10850
msgid "Return the directory name of the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10852
#, fuzzy, no-wrap
#| msgid "name"
msgid "{Procedure} store-file-name? file"
msgstr "name"

#. type: deffn
#: guix-git/doc/guix.texi:10854
msgid "Return true if @var{file} is in the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10856
#, fuzzy, no-wrap
#| msgid "name"
msgid "{Procedure} strip-store-file-name file"
msgstr "name"

#. type: deffn
#: guix-git/doc/guix.texi:10859
msgid "Strip the @file{/gnu/store} and hash from @var{file}, a store file name.  The result is typically a @code{\"@var{package}-@var{version}\"} string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10861
#, fuzzy, no-wrap
#| msgid "package version"
msgid "{Procedure} package-name->name+version name"
msgstr "versão de pacote"

#. type: deffn
#: guix-git/doc/guix.texi:10866
msgid "Given @var{name}, a package name like @code{\"foo-0.9.1b\"}, return two values: @code{\"foo\"} and @code{\"0.9.1b\"}.  When the version part is unavailable, @var{name} and @code{#f} are returned.  The first hyphen followed by a digit is considered to introduce the version part."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10868
#, no-wrap
msgid "File Types"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10871
msgid "The procedures below deal with files and file types."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10872
#, fuzzy, no-wrap
#| msgid "state directory"
msgid "{Procedure} directory-exists? dir"
msgstr "diretório de estado"

#. type: deffn
#: guix-git/doc/guix.texi:10874
msgid "Return @code{#t} if @var{dir} exists and is a directory."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10876
#, no-wrap
msgid "{Procedure} executable-file? file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10878
msgid "Return @code{#t} if @var{file} exists and is executable."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10880
#, fuzzy, no-wrap
#| msgid "Invoking guix size"
msgid "{Procedure} symbolic-link? file"
msgstr "Invocando guix size"

#. type: deffn
#: guix-git/doc/guix.texi:10882
msgid "Return @code{#t} if @var{file} is a symbolic link (aka. a ``symlink'')."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10884
#, no-wrap
msgid "{Procedure} elf-file? file"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:10885
#, fuzzy, no-wrap
#| msgid "name"
msgid "{Procedure} ar-file? file"
msgstr "name"

#. type: deffnx
#: guix-git/doc/guix.texi:10886
#, no-wrap
msgid "{Procedure} gzip-file? file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10889
msgid "Return @code{#t} if @var{file} is, respectively, an ELF file, an @code{ar} archive (such as a @file{.a} static library), or a gzip file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10891
#, no-wrap
msgid "{Procedure} reset-gzip-timestamp file [#:keep-mtime? #t]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10895
msgid "If @var{file} is a gzip file, reset its embedded timestamp (as with @command{gzip --no-name}) and return true.  Otherwise return @code{#f}.  When @var{keep-mtime?} is true, preserve @var{file}'s modification time."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10897
#, no-wrap
msgid "File Manipulation"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10904
msgid "The following procedures and macros help create, modify, and delete files.  They provide functionality comparable to common shell utilities such as @command{mkdir -p}, @command{cp -r}, @command{rm -r}, and @command{sed}.  They complement Guile's extensive, but low-level, file system interface (@pxref{POSIX,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10905
#, no-wrap
msgid "with-directory-excursion directory body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10907
msgid "Run @var{body} with @var{directory} as the process's current directory."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10914
msgid "Essentially, this macro changes the current directory to @var{directory} before evaluating @var{body}, using @code{chdir} (@pxref{Processes,,, guile, GNU Guile Reference Manual}).  It changes back to the initial directory when the dynamic extent of @var{body} is left, be it @i{via} normal procedure return or @i{via} a non-local exit such as an exception."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10916
#, no-wrap
msgid "{Procedure} mkdir-p dir"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10918
msgid "Create directory @var{dir} and all its ancestors."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10920
#, fuzzy, no-wrap
#| msgid "a writable @file{/tmp} directory."
msgid "{Procedure} install-file file directory"
msgstr "um diretório @file{/tmp} com permissão de escrita."

#. type: deffn
#: guix-git/doc/guix.texi:10923
msgid "Create @var{directory} if it does not exist and copy @var{file} in there under the same name."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10925
#, no-wrap
msgid "{Procedure} make-file-writable file"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10927
msgid "Make @var{file} writable for its owner."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10929
#, no-wrap
msgid "{Procedure} copy-recursively source destination @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10944
msgid "[#:log (current-output-port)] [#:follow-symlinks? #f] @ [#:copy-file copy-file] [#:keep-mtime? #f] [#:keep-permissions? #t] @ [#:select? (const #t)] Copy @var{source} directory to @var{destination}.  Follow symlinks if @var{follow-symlinks?} is true; otherwise, just preserve them.  Call @var{copy-file} to copy regular files.  Call @var{select?}, taking two arguments, @var{file} and @var{stat}, for each entry in @var{source}, where @var{file} is the entry's absolute file name and @var{stat} is the result of @code{lstat} (or @code{stat} if @var{follow-symlinks?} is true); exclude entries for which @var{select?} does not return true.  When @var{keep-mtime?} is true, keep the modification time of the files in @var{source} on those of @var{destination}.  When @var{keep-permissions?} is true, preserve file permissions.  Write verbose output to the @var{log} port."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10946
#, no-wrap
msgid "{Procedure} delete-file-recursively dir [#:follow-mounts? #f]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10950
msgid "Delete @var{dir} recursively, like @command{rm -rf}, without following symlinks.  Don't follow mount points either, unless @var{follow-mounts?} is true.  Report but ignore errors."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10952
#, fuzzy, no-wrap
#| msgid "substituter"
msgid "substitute* file @"
msgstr "substituidor"

#. type: defmac
#: guix-git/doc/guix.texi:10957
msgid "((regexp match-var@dots{}) body@dots{}) @dots{} Substitute @var{regexp} in @var{file} by the string returned by @var{body}.  @var{body} is evaluated with each @var{match-var} bound to the corresponding positional regexp sub-expression.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:10964
#, no-wrap
msgid ""
"(substitute* file\n"
"  ((\"hello\")\n"
"   \"good morning\\n\")\n"
"  ((\"foo([a-z]+)bar(.*)$\" all letters end)\n"
"   (string-append \"baz\" letters end)))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10970
msgid "Here, anytime a line of @var{file} contains @code{hello}, it is replaced by @code{good morning}.  Anytime a line of @var{file} matches the second regexp, @code{all} is bound to the complete match, @code{letters} is bound to the first sub-expression, and @code{end} is bound to the last one."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10973
msgid "When one of the @var{match-var} is @code{_}, no variable is bound to the corresponding match substring."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10976
msgid "Alternatively, @var{file} may be a list of file names, in which case they are all subject to the substitutions."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:10981
msgid "Be careful about using @code{$} to match the end of a line; by itself it won't match the terminating newline of a line.  For example, to match a whole line ending with a backslash, one needs a regex like @code{\"(.*)\\\\\\\\\\n$\"}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:10983
#, no-wrap
msgid "File Search"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:10985
#, no-wrap
msgid "file, searching"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:10987
msgid "This section documents procedures to search and filter files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10988
#, no-wrap
msgid "{Procedure} file-name-predicate regexp"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10991
msgid "Return a predicate that returns true when passed a file name whose base name matches @var{regexp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:10993
#, no-wrap
msgid "{Procedure} find-files dir [pred] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11004
msgid "[#:stat lstat] [#:directories? #f] [#:fail-on-error? #f] Return the lexicographically sorted list of files under @var{dir} for which @var{pred} returns true.  @var{pred} is passed two arguments: the absolute file name, and its stat buffer; the default predicate always returns true.  @var{pred} can also be a regular expression, in which case it is equivalent to @code{(file-name-predicate @var{pred})}.  @var{stat} is used to obtain file information; using @code{lstat} means that symlinks are not followed.  If @var{directories?} is true, then directories will also be included.  If @var{fail-on-error?} is true, raise an exception upon error."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11008
msgid "Here are a few examples where we assume that the current directory is the root of the Guix source tree:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11013
#, no-wrap
msgid ""
";; List all the regular files in the current directory.\n"
"(find-files \".\")\n"
"@result{} (\"./.dir-locals.el\" \"./.gitignore\" @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11017
#, no-wrap
msgid ""
";; List all the .scm files under gnu/services.\n"
"(find-files \"gnu/services\" \"\\\\.scm$\")\n"
"@result{} (\"gnu/services/admin.scm\" \"gnu/services/audio.scm\" @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11021
#, no-wrap
msgid ""
";; List ar files in the current directory.\n"
"(find-files \".\" (lambda (file stat) (ar-file? file)))\n"
"@result{} (\"./libformat.a\" \"./libstore.a\" @dots{})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11023
#, fuzzy, no-wrap
#| msgid "Setuid Programs"
msgid "{Procedure} which program"
msgstr "Programas setuid"

#. type: deffn
#: guix-git/doc/guix.texi:11026
msgid "Return the complete file name for @var{program} as found in @code{$PATH}, or @code{#f} if @var{program} could not be found."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11028
#, no-wrap
msgid "{Procedure} search-input-file inputs name"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11029
#, no-wrap
msgid "{Procedure} search-input-directory inputs name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11034
msgid "Return the complete file name for @var{name} as found in @var{inputs}; @code{search-input-file} searches for a regular file and @code{search-input-directory} searches for a directory.  If @var{name} could not be found, an exception is raised."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11038
msgid "Here, @var{inputs} must be an association list like @code{inputs} and @code{native-inputs} as available to build phases (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11042
msgid "Here is a (simplified) example of how @code{search-input-file} is used in a build phase of the @code{wireguard-tools} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11051
#, no-wrap
msgid ""
"(add-after 'install 'wrap-wg-quick\n"
"  (lambda* (#:key inputs outputs #:allow-other-keys)\n"
"    (let ((coreutils (string-append (assoc-ref inputs \"coreutils\")\n"
"                                    \"/bin\")))\n"
"      (wrap-program (search-input-file outputs \"bin/wg-quick\")\n"
"        #:sh (search-input-file inputs \"bin/bash\")\n"
"        `(\"PATH\" \":\" prefix ,(list coreutils))))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:11053
#, fuzzy, no-wrap
#| msgid "Log Rotation"
msgid "Program Invocation"
msgstr "Rotação de log"

#. type: cindex
#: guix-git/doc/guix.texi:11055
#, no-wrap
msgid "program invocation, from Scheme"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11056
#, no-wrap
msgid "invoking programs, from Scheme"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11060
msgid "You'll find handy procedures to spawn processes in this module, essentially convenient wrappers around Guile's @code{system*} (@pxref{Processes, @code{system*},, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11061
#, no-wrap
msgid "{Procedure} invoke program args@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11065
msgid "Invoke @var{program} with the given @var{args}.  Raise an @code{&invoke-error} exception if the exit code is non-zero; otherwise return @code{#t}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11069
msgid "The advantage compared to @code{system*} is that you do not need to check the return value.  This reduces boilerplate in shell-script-like snippets for instance in package build phases."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11071
#, no-wrap
msgid "{Procedure} invoke-error? c"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11073
msgid "Return true if @var{c} is an @code{&invoke-error} condition."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11075
#, no-wrap
msgid "{Procedure} invoke-error-program c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11076
#, no-wrap
msgid "{Procedure} invoke-error-arguments c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11077
#, no-wrap
msgid "{Procedure} invoke-error-exit-status c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11078
#, no-wrap
msgid "{Procedure} invoke-error-term-signal c"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:11079
#, no-wrap
msgid "{Procedure} invoke-error-stop-signal c"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11081
msgid "Access specific fields of @var{c}, an @code{&invoke-error} condition."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11083
#, no-wrap
msgid "{Procedure} report-invoke-error c [port]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11086
msgid "Report to @var{port} (by default the current error port) about @var{c}, an @code{&invoke-error} condition, in a human-friendly way."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11088
msgid "Typical usage would look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11092
#, no-wrap
msgid ""
"(use-modules (srfi srfi-34) ;for 'guard'\n"
"             (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11096
#, no-wrap
msgid ""
"(guard (c ((invoke-error? c)\n"
"           (report-invoke-error c)))\n"
"  (invoke \"date\" \"--imaginary-option\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11098
#, no-wrap
msgid "@print{} command \"date\" \"--imaginary-option\" failed with status 1\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11101
#, no-wrap
msgid "{Procedure} invoke/quiet program args@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11107
msgid "Invoke @var{program} with @var{args} and capture @var{program}'s standard output and standard error.  If @var{program} succeeds, print nothing and return the unspecified value; otherwise, raise a @code{&message} error condition that includes the status code and the output of @var{program}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11109
msgid "Here's an example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11114
#, no-wrap
msgid ""
"(use-modules (srfi srfi-34) ;for 'guard'\n"
"             (srfi srfi-35) ;for 'message-condition?'\n"
"             (guix build utils))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11119
#, no-wrap
msgid ""
"(guard (c ((message-condition? c)\n"
"           (display (condition-message c))))\n"
"  (invoke/quiet \"date\")  ;all is fine\n"
"  (invoke/quiet \"date\" \"--imaginary-option\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11121
#, no-wrap
msgid ""
"@print{} 'date --imaginary-option' exited with status 1; output follows:\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11124
#, no-wrap
msgid ""
"    date: unrecognized option '--imaginary-option'\n"
"    Try 'date --help' for more information.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11136
msgid "The @code{(guix build utils)} also contains tools to manipulate build phases as used by build systems (@pxref{Build Systems}).  Build phases are represented as association lists or ``alists'' (@pxref{Association Lists,,, guile, GNU Guile Reference Manual}) where each key is a symbol naming the phase and the associated value is a procedure (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11140
msgid "Guile core and the @code{(srfi srfi-1)} module both provide tools to manipulate alists.  The @code{(guix build utils)} module complements those with tools written with build phases in mind."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11141
#, no-wrap
msgid "build phases, modifying"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11142
#, no-wrap
msgid "modify-phases phases clause@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11145
msgid "Modify @var{phases} sequentially as per each @var{clause}, which may have one of the following forms:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11151
#, no-wrap
msgid ""
"(delete @var{old-phase-name})\n"
"(replace @var{old-phase-name} @var{new-phase})\n"
"(add-before @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
"(add-after @var{old-phase-name} @var{new-phase-name} @var{new-phase})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11155
msgid "Where every @var{phase-name} above is an expression evaluating to a symbol, and @var{new-phase} an expression evaluating to a procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11166
msgid "The example below is taken from the definition of the @code{grep} package.  It adds a phase to run after the @code{install} phase, called @code{fix-egrep-and-fgrep}.  That phase is a procedure (@code{lambda*} is for anonymous procedures) that takes a @code{#:outputs} keyword argument and ignores extra keyword arguments (@pxref{Optional Arguments,,, guile, GNU Guile Reference Manual}, for more on @code{lambda*} and optional and keyword arguments.)  The phase uses @code{substitute*} to modify the installed @file{egrep} and @file{fgrep} scripts so that they refer to @code{grep} by its absolute file name:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11179
#, no-wrap
msgid ""
"(modify-phases %standard-phases\n"
"  (add-after 'install 'fix-egrep-and-fgrep\n"
"    ;; Patch 'egrep' and 'fgrep' to execute 'grep' via its\n"
"    ;; absolute file name instead of searching for it in $PATH.\n"
"    (lambda* (#:key outputs #:allow-other-keys)\n"
"      (let* ((out (assoc-ref outputs \"out\"))\n"
"             (bin (string-append out \"/bin\")))\n"
"        (substitute* (list (string-append bin \"/egrep\")\n"
"                           (string-append bin \"/fgrep\"))\n"
"          ((\"^exec grep\")\n"
"           (string-append \"exec \" bin \"/grep\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11186
msgid "In the example below, phases are modified in two ways: the standard @code{configure} phase is deleted, presumably because the package does not have a @file{configure} script or anything similar, and the default @code{install} phase is replaced by one that manually copies the executable files to be installed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11198
#, no-wrap
msgid ""
"(modify-phases %standard-phases\n"
"  (delete 'configure)      ;no 'configure' script\n"
"  (replace 'install\n"
"    (lambda* (#:key outputs #:allow-other-keys)\n"
"      ;; The package's Makefile doesn't provide an \"install\"\n"
"      ;; rule so do it by ourselves.\n"
"      (let ((bin (string-append (assoc-ref outputs \"out\")\n"
"                                \"/bin\")))\n"
"        (install-file \"footswitch\" bin)\n"
"        (install-file \"scythe\" bin)))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:11202
#, no-wrap
msgid "Wrappers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11204
#, no-wrap
msgid "program wrappers"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11205
#, no-wrap
msgid "wrapping programs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11211
msgid "It is not unusual for a command to require certain environment variables to be set for proper functioning, typically search paths (@pxref{Search Paths}).  Failing to do that, the command might fail to find files or other commands it relies on, or it might pick the ``wrong'' ones---depending on the environment in which it runs.  Examples include:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11215
msgid "a shell script that assumes all the commands it uses are in @env{PATH};"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11219
msgid "a Guile program that assumes all its modules are in @env{GUILE_LOAD_PATH} and @env{GUILE_LOAD_COMPILED_PATH};"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11223
msgid "a Qt application that expects to find certain plugins in @env{QT_PLUGIN_PATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11231
msgid "For a package writer, the goal is to make sure commands always work the same rather than depend on some external settings.  One way to achieve that is to @dfn{wrap} commands in a thin script that sets those environment variables, thereby ensuring that those run-time dependencies are always found.  The wrapper would be used to set @env{PATH}, @env{GUILE_LOAD_PATH}, or @env{QT_PLUGIN_PATH} in the examples above."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11234
msgid "To ease that task, the @code{(guix build utils)} module provides a couple of helpers to wrap commands."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11235
#, no-wrap
msgid "{Procedure} wrap-program program [#:sh sh] [#:rest variables]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11237
msgid "Make a wrapper for @var{program}.  @var{variables} should look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11240
#, no-wrap
msgid "'(@var{variable} @var{delimiter} @var{position} @var{list-of-directories})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11244
msgid "where @var{delimiter} is optional.  @code{:} will be used if @var{delimiter} is not given."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11246
msgid "For example, this call:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11252
#, no-wrap
msgid ""
"(wrap-program \"foo\"\n"
"              '(\"PATH\" \":\" = (\"/gnu/.../bar/bin\"))\n"
"              '(\"CERT_PATH\" suffix (\"/gnu/.../baz/certs\"\n"
"                                    \"/qux/certs\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11256
msgid "will copy @file{foo} to @file{.foo-real} and create the file @file{foo} with the following contents:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11262
#, no-wrap
msgid ""
"#!location/of/bin/bash\n"
"export PATH=\"/gnu/.../bar/bin\"\n"
"export CERT_PATH=\"$CERT_PATH$@{CERT_PATH:+:@}/gnu/.../baz/certs:/qux/certs\"\n"
"exec -a $0 location/of/.foo-real \"$@@\"\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11267
msgid "If @var{program} has previously been wrapped by @code{wrap-program}, the wrapper is extended with definitions for @var{variables}.  If it is not, @var{sh} will be used as the interpreter."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11269
#, no-wrap
msgid "{Procedure} wrap-script program [#:guile guile] [#:rest variables]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11276
msgid "Wrap the script @var{program} such that @var{variables} are set first.  The format of @var{variables} is the same as in the @code{wrap-program} procedure.  This procedure differs from @code{wrap-program} in that it does not create a separate shell script.  Instead, @var{program} is modified directly by prepending a Guile script, which is interpreted as a comment in the script's language."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11279
msgid "Special encoding comments as supported by Python are recreated on the second line."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11282
msgid "Note that this procedure can only be used once per file as Guile scripts are not supported."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11287
#, fuzzy, no-wrap
#| msgid "--search-paths"
msgid "search path"
msgstr "--search-paths"

#. type: Plain text
#: guix-git/doc/guix.texi:11294
msgid "Many programs and libraries look for input data in a @dfn{search path}, a list of directories: shells like Bash look for executables in the command search path, a C compiler looks for @file{.h} files in its header search path, the Python interpreter looks for @file{.py} files in its search path, the spell checker has a search path for dictionaries, and so on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11302
msgid "Search paths can usually be defined or overridden @i{via} environment variables (@pxref{Environment Variables,,, libc, The GNU C Library Reference Manual}).  For example, the search paths mentioned above can be changed by defining the @env{PATH}, @env{C_INCLUDE_PATH}, @env{PYTHONPATH} (or @env{GUIX_PYTHONPATH}), and @env{DICPATH} environment variables---you know, all these something-PATH variables that you need to get right or things ``won't be found''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11312
msgid "You may have noticed from the command line that Guix ``knows'' which search path environment variables should be defined, and how.  When you install packages in your default profile, the file @file{~/.guix-profile/etc/profile} is created, which you can ``source'' from the shell to set those variables.  Likewise, if you ask @command{guix shell} to create an environment containing Python and NumPy, a Python library, and if you pass it the @option{--search-paths} option, it will tell you about @env{PATH} and @env{GUIX_PYTHONPATH} (@pxref{Invoking guix shell}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11317
#, no-wrap
msgid ""
"$ guix shell python python-numpy --pure --search-paths\n"
"export PATH=\"/gnu/store/@dots{}-profile/bin\"\n"
"export GUIX_PYTHONPATH=\"/gnu/store/@dots{}-profile/lib/python3.9/site-packages\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11321
msgid "When you omit @option{--search-paths}, it defines these environment variables right away, such that Python can readily find NumPy:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11330
#, no-wrap
msgid ""
"$ guix shell python python-numpy -- python3\n"
"Python 3.9.6 (default, Jan  1 1970, 00:00:01)\n"
"[GCC 10.3.0] on linux\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n"
">>> import numpy\n"
">>> numpy.version.version\n"
"'1.20.3'\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11335
msgid "For this to work, the definition of the @code{python} package @emph{declares} the search path it cares about and its associated environment variable, @env{GUIX_PYTHONPATH}.  It looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11345
#, no-wrap
msgid ""
"(package\n"
"  (name \"python\")\n"
"  (version \"3.9.9\")\n"
"  ;; some fields omitted...\n"
"  (native-search-paths\n"
"   (list (search-path-specification\n"
"          (variable \"GUIX_PYTHONPATH\")\n"
"          (files (list \"lib/python/3.9/site-packages\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11360
msgid "What this @code{native-search-paths} field says is that, when the @code{python} package is used, the @env{GUIX_PYTHONPATH} environment variable must be defined to include all the @file{lib/python/3.9/site-packages} sub-directories encountered in its environment.  (The @code{native-} bit means that, if we are in a cross-compilation environment, only native inputs may be added to the search path; @pxref{package Reference, @code{search-paths}}.)  In the NumPy example above, the profile where @code{python} appears contains exactly one such sub-directory, and @env{GUIX_PYTHONPATH} is set to that.  When there are several @file{lib/python/3.9/site-packages}---this is the case in package build environments---they are all added to @env{GUIX_PYTHONPATH}, separated by colons (@code{:})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11367
msgid "Notice that @env{GUIX_PYTHONPATH} is specified as part of the definition of the @code{python} package, and @emph{not} as part of that of @code{python-numpy}.  This is because this environment variable ``belongs'' to Python, not NumPy: Python actually reads the value of that variable and honors it."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11371
msgid "Corollary: if you create a profile that does not contain @code{python}, @code{GUIX_PYTHONPATH} will @emph{not} be defined, even if it contains packages that provide @file{.py} files:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11375
#, no-wrap
msgid ""
"$ guix shell python-numpy --search-paths --pure\n"
"export PATH=\"/gnu/store/@dots{}-profile/bin\"\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11379
msgid "This makes a lot of sense if we look at this profile in isolation: no software in this profile would read @env{GUIX_PYTHONPATH}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11389
msgid "Of course, there are many variations on that theme: some packages honor more than one search path, some use separators other than colon, some accumulate several directories in their search path, and so on.  A more complex example is the search path of libxml2: the value of the @env{XML_CATALOG_FILES} environment variable is space-separated, it must contain a list of @file{catalog.xml} files (not directories), which are to be found in @file{xml} sub-directories---nothing less.  The search path specification looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11398
#, no-wrap
msgid ""
"(search-path-specification\n"
" (variable \"XML_CATALOG_FILES\")\n"
" (separator \" \")\n"
" (files '(\"xml\"))\n"
" (file-pattern \"^catalog\\\\.xml$\")\n"
" (file-type 'regular))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11401
msgid "Worry not, search path specifications are usually not this tricky."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11405
msgid "The @code{(guix search-paths)} module defines the data type of search path specifications and a number of helper procedures.  Below is the reference of search path specifications."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:11406
#, no-wrap
msgid "{Data Type} search-path-specification"
msgstr "{Tipo de dados} search-path-specification"

#. type: deftp
#: guix-git/doc/guix.texi:11408
msgid "The data type for search path specifications."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:11410
#, no-wrap
msgid "variable"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11412
msgid "The name of the environment variable for this search path (a string)."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:11413 guix-git/doc/guix.texi:21531
#, no-wrap
msgid "files"
msgstr "files"

#. type: table
#: guix-git/doc/guix.texi:11416
msgid "The list of sub-directories (strings) that should be added to the search path."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11417
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{\"667\"})"
msgid "@code{separator} (default: @code{\":\"})"
msgstr "@code{porta} (default: @code{\"667\"})"

#. type: table
#: guix-git/doc/guix.texi:11419
msgid "The string used to separate search path components."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11427
msgid "As a special case, a @code{separator} value of @code{#f} specifies a ``single-component search path''---in other words, a search path that cannot contain more than one element.  This is useful in some cases, such as the @code{SSL_CERT_DIR} variable (honored by OpenSSL, cURL, and a few other packages) or the @code{ASPELL_DICT_DIR} variable (honored by the GNU Aspell spell checker), both of which must point to a single directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11428
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{file-type} (default: @code{'directory})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:11432
msgid "The type of file being matched---@code{'directory} or @code{'regular}, though it can be any symbol returned by @code{stat:type} (@pxref{File System, @code{stat},, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11435
msgid "In the @env{XML_CATALOG_FILES} example above, we would match regular files; in the Python example, we would match directories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11436
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{file-pattern} (default: @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:11440
msgid "This must be either @code{#f} or a regular expression specifying files to be matched @emph{within} the sub-directories specified by the @code{files} field."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11443
msgid "Again, the @env{XML_CATALOG_FILES} example shows a situation where this is needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11449
msgid "Some search paths are not tied by a single package but to many packages.  To reduce duplications, some of them are pre-defined in @code{(guix search-paths)}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11450
#, no-wrap
msgid "$SGML_CATALOG_FILES"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:11451
#, no-wrap
msgid "$XML_CATALOG_FILES"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11457
msgid "These two search paths indicate where the @url{https://www.oasis-open.org/specs/a401.htm,TR9401 catalog}@footnote{ Alternatively known as SGML catalog.} or @url{https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html, XML catalog} files can be found."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11459
#, no-wrap
msgid "$SSL_CERT_DIR"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:11460
#, no-wrap
msgid "$SSL_CERT_FILE"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11463
msgid "These two search paths indicate where X.509 certificates can be found (@pxref{X.509 Certificates})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11466
msgid "These pre-defined search paths can be used as in the following example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11472
#, no-wrap
msgid ""
"(package\n"
"  (name \"curl\")\n"
"  ;; some fields omitted ...\n"
"  (native-search-paths (list $SSL_CERT_DIR $SSL_CERT_FILE)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11477
msgid "How do you turn search path specifications on one hand and a bunch of directories on the other hand in a set of environment variable definitions? That's the job of @code{evaluate-search-paths}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11478
#, no-wrap
msgid "{Procedure} evaluate-search-paths search-paths directories [getenv]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11483
msgid "Evaluate @var{search-paths}, a list of search-path specifications, for @var{directories}, a list of directory names, and return a list of specification/value pairs.  Use @var{getenv} to determine the current settings and report only settings not already effective."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11487
msgid "The @code{(guix profiles)} provides a higher-level helper procedure, @code{load-profile}, that sets the environment variables of a profile."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11492
#, no-wrap
msgid "store items"
msgstr "itens do armazém"

#. type: cindex
#: guix-git/doc/guix.texi:11493
#, no-wrap
msgid "store paths"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11504
msgid "Conceptually, the @dfn{store} is the place where derivations that have been built successfully are stored---by default, @file{/gnu/store}.  Sub-directories in the store are referred to as @dfn{store items} or sometimes @dfn{store paths}.  The store has an associated database that contains information such as the store paths referred to by each store path, and the list of @emph{valid} store items---results of successful builds.  This database resides in @file{@var{localstatedir}/guix/db}, where @var{localstatedir} is the state directory specified @i{via} @option{--localstatedir} at configure time, usually @file{/var}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11509
msgid "The store is @emph{always} accessed by the daemon on behalf of its clients (@pxref{Invoking guix-daemon}).  To manipulate the store, clients connect to the daemon over a Unix-domain socket, send requests to it, and read the result---these are remote procedure calls, or RPCs."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11514
msgid "Users must @emph{never} modify files under @file{/gnu/store} directly.  This would lead to inconsistencies and break the immutability assumptions of Guix's functional model (@pxref{Introduction})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11518
msgid "@xref{Invoking guix gc, @command{guix gc --verify}}, for information on how to check the integrity of the store and attempt recovery from accidental modifications."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11525
msgid "The @code{(guix store)} module provides procedures to connect to the daemon, and to perform RPCs.  These are described below.  By default, @code{open-connection}, and thus all the @command{guix} commands, connect to the local daemon or to the URI specified by the @env{GUIX_DAEMON_SOCKET} environment variable."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11526
#, no-wrap
msgid "{Environment Variable} GUIX_DAEMON_SOCKET"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11531
msgid "When set, the value of this variable should be a file name or a URI designating the daemon endpoint.  When it is a file name, it denotes a Unix-domain socket to connect to.  In addition to file names, the supported URI schemes are:"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:11534
#, no-wrap
msgid "unix"
msgstr "unix"

#. type: table
#: guix-git/doc/guix.texi:11538
msgid "These are for Unix-domain sockets.  @code{file:///var/guix/daemon-socket/socket} is equivalent to @file{/var/guix/daemon-socket/socket}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11547
msgid "These URIs denote connections over TCP/IP, without encryption nor authentication of the remote host.  The URI must specify the host name and optionally a port number (by default port 44146 is used):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11550
#, no-wrap
msgid "guix://master.guix.example.org:1234\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11555
msgid "This setup is suitable on local networks, such as clusters, where only trusted nodes may connect to the build daemon at @code{master.guix.example.org}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11559
msgid "The @option{--listen} option of @command{guix-daemon} can be used to instruct it to listen for TCP connections (@pxref{Invoking guix-daemon, @option{--listen}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11560
#, no-wrap
msgid "ssh"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11561
#, no-wrap
msgid "SSH access to build daemons"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11567
msgid "These URIs allow you to connect to a remote daemon over SSH@.  This feature requires Guile-SSH (@pxref{Requirements}) and a working @command{guile} binary in @env{PATH} on the destination machine.  It supports public key and GSSAPI authentication.  A typical URL might look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11570
#, no-wrap
msgid "ssh://charlie@@guix.example.org:22\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:11574
msgid "As for @command{guix copy}, the usual OpenSSH client configuration files are honored (@pxref{Invoking guix copy})."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:11577
msgid "Additional URI schemes may be supported in the future."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:11584
msgid "The ability to connect to remote build daemons is considered experimental as of @value{VERSION}.  Please get in touch with us to share any problems or suggestions you may have (@pxref{Contributing})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11587
#, no-wrap
msgid "{Procedure} open-connection [uri] [#:reserve-space? #t]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11592
msgid "Connect to the daemon over the Unix-domain socket at @var{uri} (a string).  When @var{reserve-space?} is true, instruct it to reserve a little bit of extra space on the file system so that the garbage collector can still operate should the disk become full.  Return a server object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11595
msgid "@var{file} defaults to @code{%default-socket-path}, which is the normal location given the options that were passed to @command{configure}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11597
#, no-wrap
msgid "{Procedure} close-connection server"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11599
msgid "Close the connection to @var{server}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11601
#, no-wrap
msgid "current-build-output-port"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:11604
msgid "This variable is bound to a SRFI-39 parameter, which refers to the port where build and error logs sent by the daemon should be written."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11608
msgid "Procedures that make RPCs all take a server object as their first argument."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11609
#, no-wrap
msgid "invalid store items"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11610
#, no-wrap
msgid "{Procedure} valid-path? server path"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11615
msgid "Return @code{#t} when @var{path} designates a valid store item and @code{#f} otherwise (an invalid item may exist on disk but still be invalid, for instance because it is the result of an aborted or failed build)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11618
msgid "A @code{&store-protocol-error} condition is raised if @var{path} is not prefixed by the store directory (@file{/gnu/store})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11620
#, no-wrap
msgid "{Procedure} add-text-to-store server name text [references]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11624
msgid "Add @var{text} under file @var{name} in the store, and return its store path.  @var{references} is the list of store paths referred to by the resulting store path."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11626
#, no-wrap
msgid "{Procedure} build-derivations store derivations [mode]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11630
msgid "Build @var{derivations}, a list of @code{<derivation>} objects, @file{.drv} file names, or derivation/output pairs, using the specified @var{mode}---@code{(build-mode normal)} by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11636
msgid "Note that the @code{(guix monads)} module provides a monad as well as monadic versions of the above procedures, with the goal of making it more convenient to work with code that accesses the store (@pxref{The Store Monad})."
msgstr ""

#. type: i{#1}
#: guix-git/doc/guix.texi:11639
msgid "This section is currently incomplete."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11643
#, no-wrap
msgid "derivations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11647
msgid "Low-level build actions and the environment in which they are performed are represented by @dfn{derivations}.  A derivation contains the following pieces of information:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11652
msgid "The outputs of the derivation---derivations produce at least one file or directory in the store, but may produce more."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11654
#, no-wrap
msgid "build-time dependencies"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11655
#, no-wrap
msgid "dependencies, build-time"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11659
msgid "The inputs of the derivation---i.e., its build-time dependencies---which may be other derivations or plain files in the store (patches, build scripts, etc.)."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11662
msgid "The system type targeted by the derivation---e.g., @code{x86_64-linux}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11666
msgid "The file name of a build script in the store, along with the arguments to be passed."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:11669
msgid "A list of environment variables to be defined."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11672
#, no-wrap
msgid "derivation path"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11680
msgid "Derivations allow clients of the daemon to communicate build actions to the store.  They exist in two forms: as an in-memory representation, both on the client- and daemon-side, and as files in the store whose name end in @file{.drv}---these files are referred to as @dfn{derivation paths}.  Derivations paths can be passed to the @code{build-derivations} procedure to perform the build actions they prescribe (@pxref{The Store})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11681
#, no-wrap
msgid "fixed-output derivations"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11688
msgid "Operations such as file downloads and version-control checkouts for which the expected content hash is known in advance are modeled as @dfn{fixed-output derivations}.  Unlike regular derivations, the outputs of a fixed-output derivation are independent of its inputs---e.g., a source code download produces the same result regardless of the download method and tools being used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:11689 guix-git/doc/guix.texi:16247
#, no-wrap
msgid "references"
msgstr "references"

#. type: cindex
#: guix-git/doc/guix.texi:11690
#, no-wrap
msgid "run-time dependencies"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11691
#, no-wrap
msgid "dependencies, run-time"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11698
msgid "The outputs of derivations---i.e., the build results---have a set of @dfn{references}, as reported by the @code{references} RPC or the @command{guix gc --references} command (@pxref{Invoking guix gc}).  References are the set of run-time dependencies of the build results.  References are a subset of the inputs of the derivation; this subset is automatically computed by the build daemon by scanning all the files in the outputs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11703
msgid "The @code{(guix derivations)} module provides a representation of derivations as Scheme objects, along with procedures to create and otherwise manipulate derivations.  The lowest-level primitive to create a derivation is the @code{derivation} procedure:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11704
#, no-wrap
msgid "{Procedure} derivation store name builder args @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11713
msgid "[#:outputs '(\"out\")] [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:inputs '()] [#:env-vars '()] @ [#:system (%current-system)] [#:references-graphs #f] @ [#:allowed-references #f] [#:disallowed-references #f] @ [#:leaked-env-vars #f] [#:local-build? #f] @ [#:substitutable? #t] [#:properties '()] Build a derivation with the given arguments, and return the resulting @code{<derivation>} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11720
msgid "When @var{hash} and @var{hash-algo} are given, a @dfn{fixed-output derivation} is created---i.e., one whose result is known in advance, such as a file download.  If, in addition, @var{recursive?} is true, then that fixed output may be an executable file or a directory and @var{hash} must be the hash of an archive containing this output."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11725
msgid "When @var{references-graphs} is true, it must be a list of file name/store path pairs.  In that case, the reference graph of each store path is exported in the build environment in the corresponding file, in a simple text format."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11730
msgid "When @var{allowed-references} is true, it must be a list of store items or outputs that the derivation's output may refer to.  Likewise, @var{disallowed-references}, if true, must be a list of things the outputs may @emph{not} refer to."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11737
msgid "When @var{leaked-env-vars} is true, it must be a list of strings denoting environment variables that are allowed to ``leak'' from the daemon's environment to the build environment.  This is only applicable to fixed-output derivations---i.e., when @var{hash} is true.  The main use is to allow variables such as @code{http_proxy} to be passed to derivations that download files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11742
msgid "When @var{local-build?} is true, declare that the derivation is not a good candidate for offloading and should rather be built locally (@pxref{Daemon Offload Setup}).  This is the case for small derivations where the costs of data transfers would outweigh the benefits."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11747
msgid "When @var{substitutable?} is false, declare that substitutes of the derivation's output should not be used (@pxref{Substitutes}).  This is useful, for instance, when building packages that capture details of the host CPU instruction set."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11750
msgid "@var{properties} must be an association list describing ``properties'' of the derivation.  It is kept as-is, uninterpreted, in the derivation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11756
msgid "Here's an example with a shell script as its builder, assuming @var{store} is an open connection to the daemon, and @var{bash} points to a Bash executable in the store:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11761
#, no-wrap
msgid ""
"(use-modules (guix utils)\n"
"             (guix store)\n"
"             (guix derivations))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11770
#, no-wrap
msgid ""
"(let ((builder   ; add the Bash script to the store\n"
"        (add-text-to-store store \"my-builder.sh\"\n"
"                           \"echo hello world > $out\\n\" '())))\n"
"  (derivation store \"foo\"\n"
"              bash `(\"-e\" ,builder)\n"
"              #:inputs `((,bash) (,builder))\n"
"              #:env-vars '((\"HOME\" . \"/homeless\"))))\n"
"@result{} #<derivation /gnu/store/@dots{}-foo.drv => /gnu/store/@dots{}-foo>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11777
msgid "As can be guessed, this primitive is cumbersome to use directly.  A better approach is to write build scripts in Scheme, of course! The best course of action for that is to write the build code as a ``G-expression'', and to pass it to @code{gexp->derivation}.  For more information, @pxref{G-Expressions}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11782
msgid "Once upon a time, @code{gexp->derivation} did not exist and constructing derivations with build code written in Scheme was achieved with @code{build-expression->derivation}, documented below.  This procedure is now deprecated in favor of the much nicer @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11783
#, no-wrap
msgid "{Procedure} build-expression->derivation store name exp @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11798
msgid "[#:system (%current-system)] [#:inputs '()] @ [#:outputs '(\"out\")] [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:env-vars '()] [#:modules '()] @ [#:references-graphs #f] [#:allowed-references #f] @ [#:disallowed-references #f] @ [#:local-build? #f] [#:substitutable? #t] [#:guile-for-build #f] Return a derivation that executes Scheme expression @var{exp} as a builder for derivation @var{name}.  @var{inputs} must be a list of @code{(name drv-path sub-drv)} tuples; when @var{sub-drv} is omitted, @code{\"out\"} is assumed.  @var{modules} is a list of names of Guile modules from the current search path to be copied in the store, compiled, and made available in the load path during the execution of @var{exp}---e.g., @code{((guix build utils) (guix build gnu-build-system))}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11806
msgid "@var{exp} is evaluated in an environment where @code{%outputs} is bound to a list of output/path pairs, and where @code{%build-inputs} is bound to a list of string/output-path pairs made from @var{inputs}.  Optionally, @var{env-vars} is a list of string pairs specifying the name and value of environment variables visible to the builder.  The builder terminates by passing the result of @var{exp} to @code{exit}; thus, when @var{exp} returns @code{#f}, the build is considered to have failed."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11810
msgid "@var{exp} is built using @var{guile-for-build} (a derivation).  When @var{guile-for-build} is omitted or is @code{#f}, the value of the @code{%guile-for-build} fluid is used instead."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:11815
msgid "See the @code{derivation} procedure for the meaning of @var{references-graphs}, @var{allowed-references}, @var{disallowed-references}, @var{local-build?}, and @var{substitutable?}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11820
msgid "Here's an example of a single-output derivation that creates a directory containing one file:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11828
#, no-wrap
msgid ""
"(let ((builder '(let ((out (assoc-ref %outputs \"out\")))\n"
"                  (mkdir out)    ; create /gnu/store/@dots{}-goo\n"
"                  (call-with-output-file (string-append out \"/test\")\n"
"                    (lambda (p)\n"
"                      (display '(hello guix) p))))))\n"
"  (build-expression->derivation store \"goo\" builder))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11830
#, no-wrap
msgid "@result{} #<derivation /gnu/store/@dots{}-goo.drv => @dots{}>\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11836
#, no-wrap
msgid "monad"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11842
msgid "The procedures that operate on the store described in the previous sections all take an open connection to the build daemon as their first argument.  Although the underlying model is functional, they either have side effects or depend on the current state of the store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11848
msgid "The former is inconvenient: the connection to the build daemon has to be carried around in all those functions, making it impossible to compose functions that do not take that parameter with functions that do.  The latter can be problematic: since store operations have side effects and/or depend on external state, they have to be properly sequenced."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11849
#, no-wrap
msgid "monadic values"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:11850
#, no-wrap
msgid "monadic functions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11860
msgid "This is where the @code{(guix monads)} module comes in.  This module provides a framework for working with @dfn{monads}, and a particularly useful monad for our uses, the @dfn{store monad}.  Monads are a construct that allows two things: associating ``context'' with values (in our case, the context is the store), and building sequences of computations (here computations include accesses to the store).  Values in a monad---values that carry this additional context---are called @dfn{monadic values}; procedures that return such values are called @dfn{monadic procedures}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11862
msgid "Consider this ``normal'' procedure:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11871
#, no-wrap
msgid ""
"(define (sh-symlink store)\n"
"  ;; Return a derivation that symlinks the 'bash' executable.\n"
"  (let* ((drv (package-derivation store bash))\n"
"         (out (derivation->output-path drv))\n"
"         (sh  (string-append out \"/bin/bash\")))\n"
"    (build-expression->derivation store \"sh\"\n"
"                                  `(symlink ,sh %output))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11875
msgid "Using @code{(guix monads)} and @code{(guix gexp)}, it may be rewritten as a monadic function:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11883
#, no-wrap
msgid ""
"(define (sh-symlink)\n"
"  ;; Same, but return a monadic value.\n"
"  (mlet %store-monad ((drv (package->derivation bash)))\n"
"    (gexp->derivation \"sh\"\n"
"                      #~(symlink (string-append #$drv \"/bin/bash\")\n"
"                                 #$output))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11890
msgid "There are several things to note in the second version: the @code{store} parameter is now implicit and is ``threaded'' in the calls to the @code{package->derivation} and @code{gexp->derivation} monadic procedures, and the monadic value returned by @code{package->derivation} is @dfn{bound} using @code{mlet} instead of plain @code{let}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11894
msgid "As it turns out, the call to @code{package->derivation} can even be omitted since it will take place implicitly, as we will see later (@pxref{G-Expressions}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11900
#, no-wrap
msgid ""
"(define (sh-symlink)\n"
"  (gexp->derivation \"sh\"\n"
"                    #~(symlink (string-append #$bash \"/bin/bash\")\n"
"                               #$output)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11909
msgid "Calling the monadic @code{sh-symlink} has no effect.  As someone once said, ``you exit a monad like you exit a building on fire: by running''.  So, to exit the monad and get the desired effect, one must use @code{run-with-store}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11913
#, no-wrap
msgid ""
"(run-with-store (open-connection) (sh-symlink))\n"
"@result{} /gnu/store/...-sh-symlink\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11920
msgid "Note that the @code{(guix monad-repl)} module extends the Guile REPL with new ``commands'' to make it easier to deal with monadic procedures: @code{run-in-store}, and @code{enter-store-monad} (@pxref{Using Guix Interactively}).  The former is used to ``run'' a single monadic value through the store:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11924
#, no-wrap
msgid ""
"scheme@@(guile-user)> ,run-in-store (package->derivation hello)\n"
"$1 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11928
msgid "The latter enters a recursive REPL, where all the return values are automatically run through the store:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:11937
#, no-wrap
msgid ""
"scheme@@(guile-user)> ,enter-store-monad\n"
"store-monad@@(guile-user) [1]> (package->derivation hello)\n"
"$2 = #<derivation /gnu/store/@dots{}-hello-2.9.drv => @dots{}>\n"
"store-monad@@(guile-user) [1]> (text-file \"foo\" \"Hello!\")\n"
"$3 = \"/gnu/store/@dots{}-foo\"\n"
"store-monad@@(guile-user) [1]> ,q\n"
"scheme@@(guile-user)>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11942
msgid "Note that non-monadic values cannot be returned in the @code{store-monad} REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11945
msgid "Other meta-commands are available at the REPL, such as @code{,build} to build a file-like object (@pxref{Using Guix Interactively})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:11948
msgid "The main syntactic forms to deal with monads in general are provided by the @code{(guix monads)} module and are described below."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11949
#, no-wrap
msgid "with-monad monad body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11952
msgid "Evaluate any @code{>>=} or @code{return} forms in @var{body} as being in @var{monad}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11954
#, no-wrap
msgid "return val"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11956
msgid "Return a monadic value that encapsulates @var{val}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11958
#, no-wrap
msgid ">>= mval mproc @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11965
msgid "@dfn{Bind} monadic value @var{mval}, passing its ``contents'' to monadic procedures @var{mproc}@dots{}@footnote{This operation is commonly referred to as ``bind'', but that name denotes an unrelated procedure in Guile.  Thus we use this somewhat cryptic symbol inherited from the Haskell language.}.  There can be one @var{mproc} or several of them, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11973
#, no-wrap
msgid ""
"(run-with-state\n"
"    (with-monad %state-monad\n"
"      (>>= (return 1)\n"
"           (lambda (x) (return (+ 1 x)))\n"
"           (lambda (x) (return (* 2 x)))))\n"
"  'some-state)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:11976
#, no-wrap
msgid ""
"@result{} 4\n"
"@result{} some-state\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11979
#, no-wrap
msgid "mlet monad ((var mval) @dots{}) body @dots{}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:11980
#, no-wrap
msgid "mlet* monad ((var mval) @dots{}) body @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11991
msgid "Bind the variables @var{var} to the monadic values @var{mval} in @var{body}, which is a sequence of expressions.  As with the bind operator, this can be thought of as ``unpacking'' the raw, non-monadic value ``contained'' in @var{mval} and making @var{var} refer to that raw, non-monadic value within the scope of the @var{body}.  The form (@var{var} -> @var{val}) binds @var{var} to the ``normal'' value @var{val}, as per @code{let}.  The binding operations occur in sequence from left to right.  The last expression of @var{body} must be a monadic expression, and its result will become the result of the @code{mlet} or @code{mlet*} when run in the @var{monad}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11994
msgid "@code{mlet*} is to @code{mlet} what @code{let*} is to @code{let} (@pxref{Local Bindings,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:11996
#, no-wrap
msgid "mbegin monad mexp @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12000
msgid "Bind @var{mexp} and the following monadic expressions in sequence, returning the result of the last expression.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12004
msgid "This is akin to @code{mlet}, except that the return values of the monadic expressions are ignored.  In that sense, it is analogous to @code{begin}, but applied to monadic expressions."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12006
#, no-wrap
msgid "mwhen condition mexp0 mexp* @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12011
msgid "When @var{condition} is true, evaluate the sequence of monadic expressions @var{mexp0}..@var{mexp*} as in an @code{mbegin}.  When @var{condition} is false, return @code{*unspecified*} in the current monad.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12013
#, no-wrap
msgid "munless condition mexp0 mexp* @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12018
msgid "When @var{condition} is false, evaluate the sequence of monadic expressions @var{mexp0}..@var{mexp*} as in an @code{mbegin}.  When @var{condition} is true, return @code{*unspecified*} in the current monad.  Every expression in the sequence must be a monadic expression."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12020
#, no-wrap
msgid "state monad"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12024
msgid "The @code{(guix monads)} module provides the @dfn{state monad}, which allows an additional value---the state---to be @emph{threaded} through monadic procedure calls."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12025
#, no-wrap
msgid "%state-monad"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12028
msgid "The state monad.  Procedures in the state monad can access and change the state that is threaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12032
msgid "Consider the example below.  The @code{square} procedure returns a value in the state monad.  It returns the square of its argument, but also increments the current state value:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12039
#, no-wrap
msgid ""
"(define (square x)\n"
"  (mlet %state-monad ((count (current-state)))\n"
"    (mbegin %state-monad\n"
"      (set-current-state (+ 1 count))\n"
"      (return (* x x)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12043
#, no-wrap
msgid ""
"(run-with-state (sequence %state-monad (map square (iota 3))) 0)\n"
"@result{} (0 1 4)\n"
"@result{} 3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12047
msgid "When ``run'' through @code{%state-monad}, we obtain that additional state value, which is the number of @code{square} calls."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12049
#, no-wrap
msgid "{Monadic Procedure} current-state"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12051
msgid "Return the current state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12053
#, no-wrap
msgid "{Monadic Procedure} set-current-state @var{value}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12056
msgid "Set the current state to @var{value} and return the previous state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12058
#, no-wrap
msgid "{Monadic Procedure} state-push @var{value}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12061
msgid "Push @var{value} to the current state, which is assumed to be a list, and return the previous state as a monadic value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12063
#, no-wrap
msgid "{Monadic Procedure} state-pop"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12066
msgid "Pop a value from the current state and return it as a monadic value.  The state is assumed to be a list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12068
#, no-wrap
msgid "{Procedure} run-with-state mval [state]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12071
msgid "Run monadic value @var{mval} starting with @var{state} as the initial state.  Return two values: the resulting value, and the resulting state."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12075
msgid "The main interface to the store monad, provided by the @code{(guix store)} module, is as follows."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12076
#, no-wrap
msgid "%store-monad"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12078
msgid "The store monad---an alias for @code{%state-monad}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:12082
msgid "Values in the store monad encapsulate accesses to the store.  When its effect is needed, a value of the store monad must be ``evaluated'' by passing it to the @code{run-with-store} procedure (see below)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12084
#, no-wrap
msgid "{Procedure} run-with-store store mval @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12088
msgid "[#:guile-for-build] [#:system (%current-system)] Run @var{mval}, a monadic value in the store monad, in @var{store}, an open store connection."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12090
#, no-wrap
msgid "{Monadic Procedure} text-file @var{name} @var{text} [@var{references}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12094
msgid "Return as a monadic value the absolute file name in the store of the file containing @var{text}, a string.  @var{references} is a list of store items that the resulting text file refers to; it defaults to the empty list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12096
#, no-wrap
msgid "{Monadic Procedure} binary-file @var{name} @var{data} [@var{references}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12100
msgid "Return as a monadic value the absolute file name in the store of the file containing @var{data}, a bytevector.  @var{references} is a list of store items that the resulting binary file refers to; it defaults to the empty list."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12102
#, no-wrap
msgid "{Monadic Procedure} interned-file @var{file} [@var{name}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12107
msgid "[#:recursive? #t] [#:select? (const #t)] Return the name of @var{file} once interned in the store.  Use @var{name} as its store name, or the basename of @var{file} if @var{name} is omitted."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12111 guix-git/doc/guix.texi:12537
msgid "When @var{recursive?} is true, the contents of @var{file} are added recursively; if @var{file} designates a flat file and @var{recursive?} is true, its contents are added, and its permission bits are kept."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12116 guix-git/doc/guix.texi:12542
msgid "When @var{recursive?} is true, call @code{(@var{select?} @var{file} @var{stat})} for each directory entry, where @var{file} is the entry's absolute file name and @var{stat} is the result of @code{lstat}; exclude entries for which @var{select?} does not return true."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12118
msgid "The example below adds a file to the store, under two different names:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12124
#, no-wrap
msgid ""
"(run-with-store (open-connection)\n"
"  (mlet %store-monad ((a (interned-file \"README\"))\n"
"                      (b (interned-file \"README\" \"LEGU-MIN\")))\n"
"    (return (list a b))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12126
#, no-wrap
msgid "@result{} (\"/gnu/store/rwm@dots{}-README\" \"/gnu/store/44i@dots{}-LEGU-MIN\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12132
msgid "The @code{(guix packages)} module exports the following package-related monadic procedures:"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12133
#, no-wrap
msgid "{Monadic Procedure} package-file @var{package} [@var{file}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12141
msgid "[#:system (%current-system)] [#:target #f] @ [#:output \"out\"] Return as a monadic value in the absolute file name of @var{file} within the @var{output} directory of @var{package}.  When @var{file} is omitted, return the name of the @var{output} directory of @var{package}.  When @var{target} is true, use it as a cross-compilation target triplet."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12145
msgid "Note that this procedure does @emph{not} build @var{package}.  Thus, the result might or might not designate an existing file.  We recommend not using this procedure unless you know what you are doing."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12147
#, no-wrap
msgid "{Monadic Procedure} package->derivation @var{package} [@var{system}]"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:12148
#, no-wrap
msgid "{Monadic Procedure} package->cross-derivation @var{package} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12152
msgid "@var{target} [@var{system}] Monadic version of @code{package-derivation} and @code{package-cross-derivation} (@pxref{Defining Packages})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12158
#, no-wrap
msgid "G-expression"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12159
#, no-wrap
msgid "build code quoting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12165
msgid "So we have ``derivations'', which represent a sequence of build actions to be performed to produce an item in the store (@pxref{Derivations}).  These build actions are performed when asking the daemon to actually build the derivations; they are run by the daemon in a container (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12168
#, no-wrap
msgid "strata of code"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12180
msgid "It should come as no surprise that we like to write these build actions in Scheme.  When we do that, we end up with two @dfn{strata} of Scheme code@footnote{The term @dfn{stratum} in this context was coined by Manuel Serrano et al.@: in the context of their work on Hop.  Oleg Kiselyov, who has written insightful @url{http://okmij.org/ftp/meta-programming/#meta-scheme, essays and code on this topic}, refers to this kind of code generation as @dfn{staging}.}: the ``host code''---code that defines packages, talks to the daemon, etc.---and the ``build code''---code that actually performs build actions, such as making directories, invoking @command{make}, and so on (@pxref{Build Phases})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12187
msgid "To describe a derivation and its build actions, one typically needs to embed build code inside host code.  It boils down to manipulating build code as data, and the homoiconicity of Scheme---code has a direct representation as data---comes in handy for that.  But we need more than the normal @code{quasiquote} mechanism in Scheme to construct build expressions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12196
msgid "The @code{(guix gexp)} module implements @dfn{G-expressions}, a form of S-expressions adapted to build expressions.  G-expressions, or @dfn{gexps}, consist essentially of three syntactic forms: @code{gexp}, @code{ungexp}, and @code{ungexp-splicing} (or simply: @code{#~}, @code{#$}, and @code{#$@@}), which are comparable to @code{quasiquote}, @code{unquote}, and @code{unquote-splicing}, respectively (@pxref{Expression Syntax, @code{quasiquote},, guile, GNU Guile Reference Manual}).  However, there are major differences:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12201
msgid "Gexps are meant to be written to a file and run or manipulated by other processes."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12206
msgid "When a high-level object such as a package or derivation is unquoted inside a gexp, the result is as if its output file name had been introduced."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:12211
msgid "Gexps carry information about the packages or derivations they refer to, and these dependencies are automatically added as inputs to the build processes that use them."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12213 guix-git/doc/guix.texi:12836
#, no-wrap
msgid "lowering, of high-level objects in gexps"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12223
msgid "This mechanism is not limited to package and derivation objects: @dfn{compilers} able to ``lower'' other high-level objects to derivations or files in the store can be defined, such that these objects can also be inserted into gexps.  For example, a useful type of high-level objects that can be inserted in a gexp is ``file-like objects'', which make it easy to add files to the store and to refer to them in derivations and such (see @code{local-file} and @code{plain-file} below)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12225
msgid "To illustrate the idea, here is an example of a gexp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12233
#, no-wrap
msgid ""
"(define build-exp\n"
"  #~(begin\n"
"      (mkdir #$output)\n"
"      (chdir #$output)\n"
"      (symlink (string-append #$coreutils \"/bin/ls\")\n"
"               \"list-files\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12238
msgid "This gexp can be passed to @code{gexp->derivation}; we obtain a derivation that builds a directory containing exactly one symlink to @file{/gnu/store/@dots{}-coreutils-8.22/bin/ls}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12241
#, no-wrap
msgid "(gexp->derivation \"the-thing\" build-exp)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12249
msgid "As one would expect, the @code{\"/gnu/store/@dots{}-coreutils-8.22\"} string is substituted to the reference to the @var{coreutils} package in the actual build code, and @var{coreutils} is automatically made an input to the derivation.  Likewise, @code{#$output} (equivalent to @code{(ungexp output)}) is replaced by a string containing the directory name of the output of the derivation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12250
#, no-wrap
msgid "cross compilation"
msgstr "compilação cruzada"

#. type: Plain text
#: guix-git/doc/guix.texi:12256
msgid "In a cross-compilation context, it is useful to distinguish between references to the @emph{native} build of a package---that can run on the host---versus references to cross builds of a package.  To that end, the @code{#+} plays the same role as @code{#$}, but is a reference to a native package build:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12267
#, no-wrap
msgid ""
"(gexp->derivation \"vi\"\n"
"   #~(begin\n"
"       (mkdir #$output)\n"
"       (mkdir (string-append #$output \"/bin\"))\n"
"       (system* (string-append #+coreutils \"/bin/ln\")\n"
"                \"-s\"\n"
"                (string-append #$emacs \"/bin/emacs\")\n"
"                (string-append #$output \"/bin/vi\")))\n"
"   #:target \"aarch64-linux-gnu\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12273
msgid "In the example above, the native build of @var{coreutils} is used, so that @command{ln} can actually run on the host; but then the cross-compiled build of @var{emacs} is referenced."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12274
#, no-wrap
msgid "imported modules, for gexps"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12275
#, no-wrap
msgid "with-imported-modules"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12280
msgid "Another gexp feature is @dfn{imported modules}: sometimes you want to be able to use certain Guile modules from the ``host environment'' in the gexp, so those modules should be imported in the ``build environment''.  The @code{with-imported-modules} form allows you to express that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12291
#, no-wrap
msgid ""
"(let ((build (with-imported-modules '((guix build utils))\n"
"               #~(begin\n"
"                   (use-modules (guix build utils))\n"
"                   (mkdir-p (string-append #$output \"/bin\"))))))\n"
"  (gexp->derivation \"empty-dir\"\n"
"                    #~(begin\n"
"                        #$build\n"
"                        (display \"success!\\n\")\n"
"                        #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12297
msgid "In this example, the @code{(guix build utils)} module is automatically pulled into the isolated build environment of our gexp, such that @code{(use-modules (guix build utils))} works as expected."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12298
#, no-wrap
msgid "module closure"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12299
#, no-wrap
msgid "source-module-closure"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12306
msgid "Usually you want the @emph{closure} of the module to be imported---i.e., the module itself and all the modules it depends on---rather than just the module; failing to do that, attempts to use the module will fail because of missing dependent modules.  The @code{source-module-closure} procedure computes the closure of a module by looking at its source file headers, which comes in handy in this case:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12309
#, no-wrap
msgid ""
"(use-modules (guix modules))   ;for 'source-module-closure'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12318
#, no-wrap
msgid ""
"(with-imported-modules (source-module-closure\n"
"                         '((guix build utils)\n"
"                           (gnu build image)))\n"
"  (gexp->derivation \"something-with-vms\"\n"
"                    #~(begin\n"
"                        (use-modules (guix build utils)\n"
"                                     (gnu build image))\n"
"                        @dots{})))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12320
#, no-wrap
msgid "extensions, for gexps"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12321
#, no-wrap
msgid "with-extensions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12326
msgid "In the same vein, sometimes you want to import not just pure-Scheme modules, but also ``extensions'' such as Guile bindings to C libraries or other ``full-blown'' packages.  Say you need the @code{guile-json} package available on the build side, here's how you would do it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12329
#, no-wrap
msgid ""
"(use-modules (gnu packages guile))  ;for 'guile-json'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12335
#, no-wrap
msgid ""
"(with-extensions (list guile-json)\n"
"  (gexp->derivation \"something-with-json\"\n"
"                    #~(begin\n"
"                        (use-modules (json))\n"
"                        @dots{})))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12338
msgid "The syntactic form to construct gexps is summarized below."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12339
#, no-wrap
msgid "#~@var{exp}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:12340
#, fuzzy, no-wrap
#| msgid "-p @var{port}"
msgid "(gexp @var{exp})"
msgstr "-p @var{porta}"

#. type: defmac
#: guix-git/doc/guix.texi:12343
msgid "Return a G-expression containing @var{exp}.  @var{exp} may contain one or more of the following forms:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12345
#, no-wrap
msgid "#$@var{obj}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12346
#, no-wrap
msgid "(ungexp @var{obj})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12351
msgid "Introduce a reference to @var{obj}.  @var{obj} may have one of the supported types, for example a package or a derivation, in which case the @code{ungexp} form is replaced by its output file name---e.g., @code{\"/gnu/store/@dots{}-coreutils-8.22}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12354
msgid "If @var{obj} is a list, it is traversed and references to supported objects are substituted similarly."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12357
msgid "If @var{obj} is another gexp, its contents are inserted and its dependencies are added to those of the containing gexp."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12359
msgid "If @var{obj} is another kind of object, it is inserted as is."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12360
#, no-wrap
msgid "#$@var{obj}:@var{output}"
msgstr "#$@var{obj}:@var{saída}"

#. type: itemx
#: guix-git/doc/guix.texi:12361
#, no-wrap
msgid "(ungexp @var{obj} @var{output})"
msgstr "(ungexp @var{obj} @var{saída})"

#. type: table
#: guix-git/doc/guix.texi:12365
msgid "This is like the form above, but referring explicitly to the @var{output} of @var{obj}---this is useful when @var{obj} produces multiple outputs (@pxref{Packages with Multiple Outputs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12370
msgid "Sometimes a gexp unconditionally refers to the @code{\"out\"} output, but the user of that gexp would still like to insert a reference to another output.  The @code{gexp-input} procedure aims to address that.  @xref{gexp-input}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12371
#, no-wrap
msgid "#+@var{obj}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12372
#, no-wrap
msgid "#+@var{obj}:output"
msgstr "#+@var{obj}:output"

#. type: itemx
#: guix-git/doc/guix.texi:12373
#, no-wrap
msgid "(ungexp-native @var{obj})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12374
#, no-wrap
msgid "(ungexp-native @var{obj} @var{output})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12377
msgid "Same as @code{ungexp}, but produces a reference to the @emph{native} build of @var{obj} when used in a cross compilation context."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12378
#, no-wrap
msgid "#$output[:@var{output}]"
msgstr "#$output[:@var{saída}]"

#. type: itemx
#: guix-git/doc/guix.texi:12379
#, no-wrap
msgid "(ungexp output [@var{output}])"
msgstr "(ungexp output [@var{saída}])"

#. type: table
#: guix-git/doc/guix.texi:12382
msgid "Insert a reference to derivation output @var{output}, or to the main output when @var{output} is omitted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12384
msgid "This only makes sense for gexps passed to @code{gexp->derivation}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12385
#, no-wrap
msgid "#$@@@var{lst}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12386
#, no-wrap
msgid "(ungexp-splicing @var{lst})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12389
msgid "Like the above, but splices the contents of @var{lst} inside the containing list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12390
#, no-wrap
msgid "#+@@@var{lst}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12391
#, no-wrap
msgid "(ungexp-native-splicing @var{lst})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12394
msgid "Like the above, but refers to native builds of the objects listed in @var{lst}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12399
msgid "G-expressions created by @code{gexp} or @code{#~} are run-time objects of the @code{gexp?} type (see below)."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12401
#, no-wrap
msgid "with-imported-modules modules body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12404
msgid "Mark the gexps defined in @var{body}@dots{} as requiring @var{modules} in their execution environment."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12408
msgid "Each item in @var{modules} can be the name of a module, such as @code{(guix build utils)}, or it can be a module name, followed by an arrow, followed by a file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12414
#, no-wrap
msgid ""
"`((guix build utils)\n"
"  (guix gcrypt)\n"
"  ((guix config) => ,(scheme-file \"config.scm\"\n"
"                                  #~(define-module @dots{}))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12419
msgid "In the example above, the first two modules are taken from the search path, and the last one is created from the given file-like object."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12423
msgid "This form has @emph{lexical} scope: it has an effect on the gexps directly defined in @var{body}@dots{}, but not on those defined, say, in procedures called from @var{body}@dots{}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12425
#, no-wrap
msgid "with-extensions extensions body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12430
msgid "Mark the gexps defined in @var{body}@dots{} as requiring @var{extensions} in their build and execution environment.  @var{extensions} is typically a list of package objects such as those defined in the @code{(gnu packages guile)} module."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12435
msgid "Concretely, the packages listed in @var{extensions} are added to the load path while compiling imported modules in @var{body}@dots{}; they are also added to the load path of the gexp returned by @var{body}@dots{}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12437
#, no-wrap
msgid "{Procedure} gexp? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12439
msgid "Return @code{#t} if @var{obj} is a G-expression."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12445
msgid "G-expressions are meant to be written to disk, either as code building some derivation, or as plain files in the store.  The monadic procedures below allow you to do that (@pxref{The Store Monad}, for more information about monads)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12446
#, no-wrap
msgid "{Monadic Procedure} gexp->derivation @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12464
msgid "[#:system (%current-system)] [#:target #f] [#:graft? #t] @ [#:hash #f] [#:hash-algo #f] @ [#:recursive? #f] [#:env-vars '()] [#:modules '()] @ [#:module-path @code{%load-path}] @ [#:effective-version \"2.2\"] @ [#:references-graphs #f] [#:allowed-references #f] @ [#:disallowed-references #f] @ [#:leaked-env-vars #f] @ [#:script-name (string-append @var{name} \"-builder\")] @ [#:deprecation-warnings #f] @ [#:local-build? #f] [#:substitutable? #t] @ [#:properties '()] [#:guile-for-build #f] Return a derivation @var{name} that runs @var{exp} (a gexp) with @var{guile-for-build} (a derivation) on @var{system}; @var{exp} is stored in a file called @var{script-name}.  When @var{target} is true, it is used as the cross-compilation target triplet for packages referred to by @var{exp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12472
msgid "@var{modules} is deprecated in favor of @code{with-imported-modules}.  Its meaning is to make @var{modules} available in the evaluation context of @var{exp}; @var{modules} is a list of names of Guile modules searched in @var{module-path} to be copied in the store, compiled, and made available in the load path during the execution of @var{exp}---e.g., @code{((guix build utils) (guix build gnu-build-system))}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12475
msgid "@var{effective-version} determines the string to use when adding extensions of @var{exp} (see @code{with-extensions}) to the search path---e.g., @code{\"2.2\"}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12478
msgid "@var{graft?} determines whether packages referred to by @var{exp} should be grafted when applicable."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12481
msgid "When @var{references-graphs} is true, it must be a list of tuples of one of the following forms:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12487
#, no-wrap
msgid ""
"(@var{file-name} @var{obj})\n"
"(@var{file-name} @var{obj} @var{output})\n"
"(@var{file-name} @var{gexp-input})\n"
"(@var{file-name} @var{store-item})\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12493
msgid "The right-hand-side of each element of @var{references-graphs} is automatically made an input of the build process of @var{exp}.  In the build environment, each @var{file-name} contains the reference graph of the corresponding item, in a simple text format."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12499
msgid "@var{allowed-references} must be either @code{#f} or a list of output names and packages.  In the latter case, the list denotes store items that the result is allowed to refer to.  Any reference to another store item will lead to a build error.  Similarly for @var{disallowed-references}, which can list items that must not be referenced by the outputs."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12502
msgid "@var{deprecation-warnings} determines whether to show deprecation warnings while compiling modules.  It can be @code{#f}, @code{#t}, or @code{'detailed}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12504
msgid "The other arguments are as for @code{derivation} (@pxref{Derivations})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12506
#, no-wrap
msgid "file-like objects"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12511
msgid "The @code{local-file}, @code{plain-file}, @code{computed-file}, @code{program-file}, and @code{scheme-file} procedures below return @dfn{file-like objects}.  That is, when unquoted in a G-expression, these objects lead to a file in the store.  Consider this G-expression:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12515
#, no-wrap
msgid ""
"#~(system* #$(file-append glibc \"/sbin/nscd\") \"-f\"\n"
"           #$(local-file \"/tmp/my-nscd.conf\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12524
msgid "The effect here is to ``intern'' @file{/tmp/my-nscd.conf} by copying it to the store.  Once expanded, for instance @i{via} @code{gexp->derivation}, the G-expression refers to that copy under @file{/gnu/store}; thus, modifying or removing the file in @file{/tmp} does not have any effect on what the G-expression does.  @code{plain-file} can be used similarly; it differs in that the file content is directly passed as a string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12525
#, no-wrap
msgid "{Procedure} local-file file [name] [#:recursive? #f] [#:select? (const #t)]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12533
msgid "Return an object representing local file @var{file} to add to the store; this object can be used in a gexp.  If @var{file} is a literal string denoting a relative file name, it is looked up relative to the source file where it appears; if @var{file} is not a literal string, it is looked up relative to the current working directory at run time.  @var{file} will be added to the store under @var{name}--by default the base name of @var{file}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12543
#, fuzzy, no-wrap
#| msgid "name"
msgid "assume-valid-file-name"
msgstr "name"

#. type: deffn
#: guix-git/doc/guix.texi:12549
msgid "@var{file} can be wrapped in the @code{assume-valid-file-name} syntactic keyword. When this is done, there will not be a warning when @code{local-file} is used with a non-literal path.  The path is still looked up relative to the current working directory at run time.  Wrapping is done like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12554
#, no-wrap
msgid ""
"(define alice-key-file-path \"alice.pub\")\n"
";; ...\n"
"(local-file (assume-valid-file-name alice-key-file-path))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12556
#, no-wrap
msgid "relative file name, in @code{local-file}"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:12557
#, no-wrap
msgid "assume-source-relative-file-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12562
msgid "@var{file} can be wrapped in the @code{assume-source-relative-file-name} syntactic keyword.  When this is done, the file name will be looked up relative to the source file where it appears even when it is not a string literal."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12565
msgid "This is the declarative counterpart of the @code{interned-file} monadic procedure (@pxref{The Store Monad, @code{interned-file}})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12567
#, no-wrap
msgid "{Procedure} plain-file name content"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12570
msgid "Return an object representing a text file called @var{name} with the given @var{content} (a string or a bytevector) to be added to the store."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12572
msgid "This is the declarative counterpart of @code{text-file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12574
#, no-wrap
msgid "{Procedure} computed-file name gexp [#:local-build? #t] [#:options '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12579
msgid "Return an object representing the store item @var{name}, a file or directory computed by @var{gexp}.  When @var{local-build?} is true (the default), the derivation is built locally.  @var{options} is a list of additional arguments to pass to @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12581
msgid "This is the declarative counterpart of @code{gexp->derivation}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12583
#, no-wrap
msgid "{Monadic Procedure} gexp->script @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12589
msgid "[#:guile (default-guile)] [#:module-path %load-path] @ [#:system (%current-system)] [#:target #f] Return an executable script @var{name} that runs @var{exp} using @var{guile}, with @var{exp}'s imported modules in its search path.  Look up @var{exp}'s modules in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12592
msgid "The example below builds a script that simply invokes the @command{ls} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12595
#, no-wrap
msgid ""
"(use-modules (guix gexp) (gnu packages base))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12599
#, no-wrap
msgid ""
"(gexp->script \"list-files\"\n"
"              #~(execl #$(file-append coreutils \"/bin/ls\")\n"
"                       \"ls\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12604
msgid "When ``running'' it through the store (@pxref{The Store Monad, @code{run-with-store}}), we obtain a derivation that produces an executable file @file{/gnu/store/@dots{}-list-files} along these lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12609
#, no-wrap
msgid ""
"#!/gnu/store/@dots{}-guile-2.0.11/bin/guile -ds\n"
"!#\n"
"(execl \"/gnu/store/@dots{}-coreutils-8.22\"/bin/ls\" \"ls\")\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12612
#, no-wrap
msgid "{Procedure} program-file name exp [#:guile #f] [#:module-path %load-path]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12616
msgid "Return an object representing the executable store item @var{name} that runs @var{gexp}.  @var{guile} is the Guile package used to execute that script.  Imported modules of @var{gexp} are looked up in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12618
msgid "This is the declarative counterpart of @code{gexp->script}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12620
#, no-wrap
msgid "{Monadic Procedure} gexp->file @var{name} @var{exp} @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12627
msgid "[#:set-load-path? #t] [#:module-path %load-path] @ [#:splice? #f] @ [#:guile (default-guile)] Return a derivation that builds a file @var{name} containing @var{exp}.  When @var{splice?} is true, @var{exp} is considered to be a list of expressions that will be spliced in the resulting file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12632
msgid "When @var{set-load-path?} is true, emit code in the resulting file to set @code{%load-path} and @code{%load-compiled-path} to honor @var{exp}'s imported modules.  Look up @var{exp}'s modules in @var{module-path}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12635
msgid "The resulting file holds references to all the dependencies of @var{exp} or a subset thereof."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12637
#, fuzzy, no-wrap
#| msgid "name"
msgid "{Procedure} scheme-file name exp [#:splice? #f] @"
msgstr "name"

#. type: deffn
#: guix-git/doc/guix.texi:12641
msgid "[#:guile #f] [#:set-load-path? #t] Return an object representing the Scheme file @var{name} that contains @var{exp}.  @var{guile} is the Guile package used to produce that file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12643
msgid "This is the declarative counterpart of @code{gexp->file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12645
#, no-wrap
msgid "{Monadic Procedure} text-file* @var{name} @var{text} @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12651
msgid "Return as a monadic value a derivation that builds a text file containing all of @var{text}.  @var{text} may list, in addition to strings, objects of any type that can be used in a gexp: packages, derivations, local file objects, etc.  The resulting store file holds references to all these."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12656
msgid "This variant should be preferred over @code{text-file} anytime the file to create will reference items from the store.  This is typically the case when building a configuration file that embeds store file names, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12664
#, no-wrap
msgid ""
"(define (profile.sh)\n"
"  ;; Return the name of a shell script in the store that\n"
"  ;; initializes the 'PATH' environment variable.\n"
"  (text-file* \"profile.sh\"\n"
"              \"export PATH=\" coreutils \"/bin:\"\n"
"              grep \"/bin:\" sed \"/bin\\n\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12669
msgid "In this example, the resulting @file{/gnu/store/@dots{}-profile.sh} file will reference @var{coreutils}, @var{grep}, and @var{sed}, thereby preventing them from being garbage-collected during its lifetime."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12671
#, no-wrap
msgid "{Procedure} mixed-text-file name text @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12675
msgid "Return an object representing store file @var{name} containing @var{text}.  @var{text} is a sequence of strings and file-like objects, as in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12679
#, no-wrap
msgid ""
"(mixed-text-file \"profile\"\n"
"                 \"export PATH=\" coreutils \"/bin:\" grep \"/bin\")\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12682
msgid "This is the declarative counterpart of @code{text-file*}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12684
#, fuzzy, no-wrap
#| msgid "name"
msgid "{Procedure} file-union name files [#:dangling-symlinks? #f]"
msgstr "name"

#. type: deffn
#: guix-git/doc/guix.texi:12691
msgid "Return a @code{<computed-file>} that builds a directory containing all of @var{files}.  Each item in @var{files} must be a two-element list where the first element is the file name to use in the new directory, and the second element is a gexp denoting the target file.  @code{#:dangling-symlinks?} controls if gexps must lower to an existing file.  Here's an example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12698
#, no-wrap
msgid ""
"(file-union \"etc\"\n"
"            `((\"hosts\" ,(plain-file \"hosts\"\n"
"                                    \"127.0.0.1 localhost\"))\n"
"              (\"bashrc\" ,(plain-file \"bashrc\"\n"
"                                     \"alias ls='ls --color=auto'\"))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12701
msgid "This yields an @code{etc} directory containing these two files."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12703
#, fuzzy, no-wrap
#| msgid "Invoking guix size"
msgid "{Procedure} symlink-to target"
msgstr "Invocando guix size"

#. type: deffn
#: guix-git/doc/guix.texi:12707
msgid "Return a @code{<computed-file>} that is a symbolic link to target.  Note, that the target does not need to exist at the build time.  One of uses is to put arbitrary symlinks into user's home:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12711
#, no-wrap
msgid ""
"(service home-files-service-type\n"
"  `((\"Sync\" ,(symlink-to \"/storage/Sync\"))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12714
#, no-wrap
msgid "{Procedure} directory-union name things"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12717
msgid "Return a directory that is the union of @var{things}, where @var{things} is a list of file-like objects denoting directories.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12720
#, no-wrap
msgid "(directory-union \"guile+emacs\" (list guile emacs))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12723
msgid "yields a directory that is the union of the @code{guile} and @code{emacs} packages."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12725
#, no-wrap
msgid "{Procedure} file-append obj suffix @dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12729
msgid "Return a file-like object that expands to the concatenation of @var{obj} and @var{suffix}, where @var{obj} is a lowerable object and each @var{suffix} is a string."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12731
msgid "As an example, consider this gexp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12736
#, no-wrap
msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* #$(file-append coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12739
msgid "The same effect could be achieved with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12744
#, no-wrap
msgid ""
"(gexp->script \"run-uname\"\n"
"              #~(system* (string-append #$coreutils\n"
"                                        \"/bin/uname\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12750
msgid "There is one difference though: in the @code{file-append} case, the resulting script contains the absolute file name as a string, whereas in the second case, the resulting script contains a @code{(string-append @dots{})} expression to construct the file name @emph{at run time}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12752
#, no-wrap
msgid "let-system system body@dots{}"
msgstr ""

#. type: defmacx
#: guix-git/doc/guix.texi:12753
#, no-wrap
msgid "let-system (system target) body@dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12756
msgid "Bind @var{system} to the currently targeted system---e.g., @code{\"x86_64-linux\"}---within @var{body}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12761
msgid "In the second case, additionally bind @var{target} to the current cross-compilation target---a GNU triplet such as @code{\"arm-linux-gnueabihf\"}---or @code{#f} if we are not cross-compiling."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12764
msgid "@code{let-system} is useful in the occasional case where the object spliced into the gexp depends on the target system, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12775
#, no-wrap
msgid ""
"#~(system*\n"
"   #+(let-system system\n"
"       (cond ((string-prefix? \"armhf-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-arm\"))\n"
"             ((string-prefix? \"x86_64-\" system)\n"
"              (file-append qemu \"/bin/qemu-system-x86_64\"))\n"
"             (else\n"
"              (error \"dunno!\"))))\n"
"   \"-net\" \"user\" #$image)\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12778
#, no-wrap
msgid "with-parameters ((parameter value) @dots{}) exp"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12784
msgid "This macro is similar to the @code{parameterize} form for dynamically-bound @dfn{parameters} (@pxref{Parameters,,, guile, GNU Guile Reference Manual}).  The key difference is that it takes effect when the file-like object returned by @var{exp} is lowered to a derivation or store item."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12787
msgid "A typical use of @code{with-parameters} is to force the system in effect for a given object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12791
#, no-wrap
msgid ""
"(with-parameters ((%current-system \"i686-linux\"))\n"
"  coreutils)\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:12795
msgid "The example above returns an object that corresponds to the i686 build of Coreutils, regardless of the current value of @code{%current-system}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:12798
msgid "gexp-input"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12798
#, fuzzy, no-wrap
#| msgid "(ungexp @var{obj} @var{output})"
msgid "{Procedure} gexp-input @var{obj} [@var{output}] [#:native? #f]"
msgstr "(ungexp @var{obj} @var{saída})"

#. type: deffn
#: guix-git/doc/guix.texi:12802
msgid "Return a @dfn{gexp input} record for the given @var{output} of file-like object @var{obj}, with @code{#:native?} determining whether this is a native reference (as with @code{ungexp-native}) or not."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12807
msgid "This procedure is helpful when you want to pass a reference to a specific output of an object to some procedure that may not know about that output.  For example, assume you have this procedure, which takes one file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12812
#, no-wrap
msgid ""
"(define (make-symlink target)\n"
"  (computed-file \"the-symlink\"\n"
"                 #~(symlink #$target #$output)))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12818
msgid "Here @code{make-symlink} can only ever refer to the default output of @var{target}---the @code{\"out\"} output (@pxref{Packages with Multiple Outputs}).  To have it refer to, say, the @code{\"lib\"} output of the @code{hwloc} package, you can call it like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12821
#, no-wrap
msgid "(make-symlink (gexp-input hwloc \"lib\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12824
msgid "You can also compose it like any other file-like object:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:12828
#, no-wrap
msgid ""
"(make-symlink\n"
"  (file-append (gexp-input hwloc \"lib\") \"/lib/libhwloc.so\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12835
msgid "Of course, in addition to gexps embedded in ``host'' code, there are also modules containing build tools.  To make it clear that they are meant to be used in the build stratum, these modules are kept in the @code{(guix build @dots{})} name space."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12841
msgid "Internally, high-level objects are @dfn{lowered}, using their compiler, to either derivations or store items.  For instance, lowering a package yields a derivation, and lowering a @code{plain-file} yields a store item.  This is achieved using the @code{lower-object} monadic procedure."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12842
#, no-wrap
msgid "{Monadic Procedure} lower-object @var{obj} [@var{system}] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12848
msgid "[#:target #f] Return as a value in @code{%store-monad} the derivation or store item corresponding to @var{obj} for @var{system}, cross-compiling for @var{target} if @var{target} is true.  @var{obj} must be an object that has an associated gexp compiler, such as a @code{<package>}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12850
#, no-wrap
msgid "{Procedure} gexp->approximate-sexp gexp"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:12858
msgid "Sometimes, it may be useful to convert a G-exp into a S-exp.  For example, some linters (@pxref{Invoking guix lint}) peek into the build phases of a package to detect potential problems.  This conversion can be achieved with this procedure.  However, some information can be lost in the process.  More specifically, lowerable objects will be silently replaced with some arbitrary object -- currently the list @code{(*approximate*)}, but this may change."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:12861
#, no-wrap
msgid "Invoking @command{guix repl}"
msgstr "Invocando @command{guix repl}"

#. type: command{#1}
#: guix-git/doc/guix.texi:12863
#, fuzzy, no-wrap
#| msgid "guix graph"
msgid "guix repl"
msgstr "guix graph"

#. type: cindex
#: guix-git/doc/guix.texi:12864
#, no-wrap
msgid "REPL, read-eval-print loop, script"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12874
msgid "The @command{guix repl} command makes it easier to program Guix in Guile by launching a Guile @dfn{read-eval-print loop} (REPL) for interactive programming (@pxref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}), or by running Guile scripts (@pxref{Running Guile Scripts,,, guile, GNU Guile Reference Manual}).  Compared to just launching the @command{guile} command, @command{guix repl} guarantees that all the Guix modules and all its dependencies are available in the search path."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12879
#, no-wrap
msgid "guix repl @var{options} [@var{file} @var{args}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12883
msgid "When a @var{file} argument is provided, @var{file} is executed as a Guile scripts:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12886
#, no-wrap
msgid "guix repl my-script.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12890
msgid "To pass arguments to the script, use @code{--} to prevent them from being interpreted as arguments to @command{guix repl} itself:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12893
#, no-wrap
msgid "guix repl -- my-script.scm --input=foo.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12898
msgid "To make a script executable directly from the shell, using the guix executable that is on the user's search path, add the following two lines at the top of the script:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12902
#, no-wrap
msgid ""
"@code{#!/usr/bin/env -S guix repl --}\n"
"@code{!#}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12906
msgid "To make a script that launches an interactive REPL directly from the shell, use the @code{--interactive} flag:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12910
#, no-wrap
msgid ""
"@code{#!/usr/bin/env -S guix repl --interactive}\n"
"@code{!#}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12914
msgid "Without a file name argument, a Guile REPL is started, allowing for interactive use (@pxref{Using Guix Interactively}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12920
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guile-user)> ,use (gnu packages base)\n"
"scheme@@(guile-user)> coreutils\n"
"$1 = #<package coreutils@@8.29 gnu/packages/base.scm:327 3e28300>\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12927
msgid "In addition, @command{guix repl} implements a simple machine-readable REPL protocol for use by @code{(guix inferior)}, a facility to interact with @dfn{inferiors}, separate processes running a potentially different revision of Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12931 guix-git/doc/guix.texi:16322
#, no-wrap
msgid "--list-types"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12934
msgid "Display the @var{TYPE} options for @command{guix repl --type=TYPE} and exit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12935 guix-git/doc/guix.texi:16317
#, no-wrap
msgid "--type=@var{type}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12936 guix-git/doc/guix.texi:16318
#: guix-git/doc/guix.texi:46879
#, no-wrap
msgid "-t @var{type}"
msgstr "-t @var{tipo}"

#. type: table
#: guix-git/doc/guix.texi:12938
msgid "Start a REPL of the given @var{TYPE}, which can be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12940
#, no-wrap
msgid "guile"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12942
msgid "This is default, and it spawns a standard full-featured Guile REPL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12942
#, no-wrap
msgid "machine"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12945
msgid "Spawn a REPL that uses the machine-readable protocol.  This is the protocol that the @code{(guix inferior)} module speaks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12951
msgid "By default, @command{guix repl} reads from standard input and writes to standard output.  When this option is passed, it will instead listen for connections on @var{endpoint}.  Here are examples of valid options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12953
#, no-wrap
msgid "--listen=tcp:37146"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12955
msgid "Accept connections on localhost on port 37146."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12956
#, no-wrap
msgid "--listen=unix:/tmp/socket"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12958
msgid "Accept connections on the Unix-domain socket @file{/tmp/socket}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12960
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "--interactive"
msgstr "interfaces de usuário"

#. type: itemx
#: guix-git/doc/guix.texi:12961
#, no-wrap
msgid "-i"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12963
msgid "Launch the interactive REPL after @var{file} is executed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:12964 guix-git/doc/guix.texi:13230
#: guix-git/doc/guix.texi:15527 guix-git/doc/guix.texi:15717
#: guix-git/doc/guix.texi:15952 guix-git/doc/guix.texi:16097
#: guix-git/doc/guix.texi:16365
#, no-wrap
msgid "--load-path=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:12965 guix-git/doc/guix.texi:13231
#: guix-git/doc/guix.texi:15528 guix-git/doc/guix.texi:15718
#: guix-git/doc/guix.texi:15953 guix-git/doc/guix.texi:16098
#: guix-git/doc/guix.texi:16366
#, no-wrap
msgid "-L @var{directory}"
msgstr "-L @var{diretório}"

#. type: table
#: guix-git/doc/guix.texi:12968 guix-git/doc/guix.texi:13234
#: guix-git/doc/guix.texi:15531 guix-git/doc/guix.texi:15721
#: guix-git/doc/guix.texi:15956 guix-git/doc/guix.texi:16101
#: guix-git/doc/guix.texi:16369
msgid "Add @var{directory} to the front of the package module search path (@pxref{Package Modules})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12971
msgid "This allows users to define their own packages and make them visible to the script or REPL."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:12975
msgid "Inhibit loading of the @file{~/.guile} file.  By default, that configuration file is loaded when spawning a @code{guile} REPL."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:12980
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "interactive use"
msgstr "interfaces de usuário"

#. type: cindex
#: guix-git/doc/guix.texi:12981
#, fuzzy, no-wrap
#| msgid "read-eval-print loop"
msgid "REPL, read-eval-print loop"
msgstr "read-eval-print loop"

#. type: Plain text
#: guix-git/doc/guix.texi:12987
msgid "The @command{guix repl} command gives you access to a warm and friendly @dfn{read-eval-print loop} (REPL) (@pxref{Invoking guix repl}).  If you're getting into Guix programming---defining your own packages, writing manifests, defining services for Guix System or Guix Home, etc.---you will surely find it convenient to toy with ideas at the REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:12993
msgid "If you use Emacs, the most convenient way to do that is with Geiser (@pxref{The Perfect Setup}), but you do not have to use Emacs to enjoy the REPL@.  When using @command{guix repl} or @command{guile} in the terminal, we recommend using Readline for completion and Colorized to get colorful output.  To do that, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:12996
#, no-wrap
msgid "guix install guile guile-readline guile-colorized\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13001
msgid "... and then create a @file{.guile} file in your home directory containing this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13004
#, no-wrap
msgid ""
"(use-modules (ice-9 readline) (ice-9 colorized))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13007
#, no-wrap
msgid ""
"(activate-readline)\n"
"(activate-colorized)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13011
msgid "The REPL lets you evaluate Scheme code; you type a Scheme expression at the prompt, and the REPL prints what it evaluates to:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13018
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> (+ 2 3)\n"
"$1 = 5\n"
"scheme@@(guix-user)> (string-append \"a\" \"b\")\n"
"$2 = \"ab\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13029
msgid "It becomes interesting when you start fiddling with Guix at the REPL.  The first thing you'll want to do is to ``import'' the @code{(guix)} module, which gives access to the main part of the programming interface, and perhaps a bunch of useful Guix modules.  You could type @code{(use-modules (guix))}, which is valid Scheme code to import a module (@pxref{Using Guile Modules,,, guile, GNU Guile Reference Manual}), but the REPL provides the @code{use} @dfn{command} as a shorthand notation (@pxref{REPL Commands,,, guile, GNU Guile Reference Manual}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13033
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,use (guix)\n"
"scheme@@(guix-user)> ,use (gnu packages base)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13038
msgid "Notice that REPL commands are introduced by a leading comma.  A REPL command like @code{use} is not valid Scheme code; it's interpreted specially by the REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13047
msgid "Guix extends the Guile REPL with additional commands for convenience.  Among those, the @code{build} command comes in handy: it ensures that the given file-like object is built, building it if needed, and returns its output file name(s).  In the example below, we build the @code{coreutils} and @code{grep} packages, as well as a ``computed file'' (@pxref{G-Expressions, @code{computed-file}}), and we use the @code{scandir} procedure to list the files in Grep's @code{/bin} directory:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13060
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,build coreutils\n"
"$1 = \"/gnu/store/@dots{}-coreutils-8.32-debug\"\n"
"$2 = \"/gnu/store/@dots{}-coreutils-8.32\"\n"
"scheme@@(guix-user)> ,build grep\n"
"$3 = \"/gnu/store/@dots{}-grep-3.6\"\n"
"scheme@@(guix-user)> ,build (computed-file \"x\" #~(mkdir #$output))\n"
"building /gnu/store/@dots{}-x.drv...\n"
"$4 = \"/gnu/store/@dots{}-x\"\n"
"scheme@@(guix-user)> ,use(ice-9 ftw)\n"
"scheme@@(guix-user)> (scandir (string-append $3 \"/bin\"))\n"
"$5 = (\".\" \"..\" \"egrep\" \"fgrep\" \"grep\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13068
msgid "As a packager, you may be willing to inspect the build phases or flags of a given package; this is particularly useful when relying a lot on inheritance to define package variants (@pxref{Defining Package Variants}) or when package arguments are a result of some computation, both of which can make it harder to foresee what ends up in the package arguments.  Additional commands let you inspect those package arguments:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13084
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,phases grep\n"
"$1 = (modify-phases %standard-phases\n"
"       (add-after 'install 'fix-egrep-and-fgrep\n"
"         (lambda* (#:key outputs #:allow-other-keys)\n"
"           (let* ((out (assoc-ref outputs \"out\"))\n"
"                  (bin (string-append out \"/bin\")))\n"
"             (substitute* (list (string-append bin \"/egrep\")\n"
"                                (string-append bin \"/fgrep\"))\n"
"               ((\"^exec grep\")\n"
"                (string-append \"exec \" bin \"/grep\")))))))\n"
"scheme@@(guix-user)> ,configure-flags findutils\n"
"$2 = (list \"--localstatedir=/var\")\n"
"scheme@@(guix-user)> ,make-flags binutils\n"
"$3 = '(\"MAKEINFO=true\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13089
msgid "At a lower-level, a useful command is @code{lower}: it takes a file-like object and ``lowers'' it into a derivation (@pxref{Derivations}) or a store file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13095
#, no-wrap
msgid ""
"scheme@@(guix-user)> ,lower grep\n"
"$6 = #<derivation /gnu/store/@dots{}-grep-3.6.drv => /gnu/store/@dots{}-grep-3.6 7f0e639115f0>\n"
"scheme@@(guix-user)> ,lower (plain-file \"x\" \"Hello!\")\n"
"$7 = \"/gnu/store/@dots{}-x\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13099
msgid "The full list of REPL commands can be seen by typing @code{,help guix} and is given below for reference."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13100
#, no-wrap
msgid "{REPL command} build @var{object}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13103
msgid "Lower @var{object} and build it if it's not already built, returning its output file name(s)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13105
#, no-wrap
msgid "{REPL command} lower @var{object}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13107
msgid "Lower @var{object} into a derivation or store file name and return it."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13109
#, no-wrap
msgid "{REPL command} verbosity @var{level}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13111
msgid "Change build verbosity to @var{level}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13115
msgid "This is similar to the @option{--verbosity} command-line option (@pxref{Common Build Options}): level 0 means total silence, level 1 shows build events only, and higher levels print build logs."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13117
#, no-wrap
msgid "{REPL command} phases @var{package}"
msgstr ""

#. type: deffnx
#: guix-git/doc/guix.texi:13118
#, fuzzy, no-wrap
#| msgid "--with-git-url=@var{package}=@var{url}"
msgid "{REPL command} configure-flags @var{package}"
msgstr "--with-git-url=@var{pacote}=@var{url}"

#. type: deffnx
#: guix-git/doc/guix.texi:13119
#, no-wrap
msgid "{REPL command} make-flags @var{package}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13126
msgid "These REPL commands return the value of one element of the @code{arguments} field of @var{package} (@pxref{package Reference}): the first one show the staged code associated with @code{#:phases} (@pxref{Build Phases}), the second shows the code for @code{#:configure-flags}, and @code{,make-flags} returns the code for @code{#:make-flags}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13128
#, no-wrap
msgid "{REPL command} run-in-store @var{exp}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13131
msgid "Run @var{exp}, a monadic expression, through the store monad.  @xref{The Store Monad}, for more information."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13133
#, no-wrap
msgid "{REPL command} enter-store-monad"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:13136
msgid "Enter a new REPL to evaluate monadic expressions (@pxref{The Store Monad}).  You can quit this ``inner'' REPL by typing @code{,q}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13146
msgid "This section describes Guix command-line utilities.  Some of them are primarily targeted at developers and users who write new package definitions, while others are more generally useful.  They complement the Scheme programming interface of Guix in a convenient way."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13169
#, no-wrap
msgid "package building"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:13170
#, no-wrap
msgid "guix build"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13176
msgid "The @command{guix build} command builds packages or derivations and their dependencies, and prints the resulting store paths.  Note that it does not modify the user's profile---this is the job of the @command{guix package} command (@pxref{Invoking guix package}).  Thus, it is mainly useful for distribution developers."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13181
#, no-wrap
msgid "guix build @var{options} @var{package-or-derivation}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13186
msgid "As an example, the following command builds the latest versions of Emacs and of Guile, displays their build logs, and finally displays the resulting directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13189
#, no-wrap
msgid "guix build emacs guile\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13192
msgid "Similarly, the following command builds all the available packages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13196
#, no-wrap
msgid ""
"guix build --quiet --keep-going \\\n"
"  $(guix package -A | awk '@{ print $1 \"@@\" $2 @}')\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13204
msgid "@var{package-or-derivation} may be either the name of a package found in the software distribution such as @code{coreutils} or @code{coreutils@@8.20}, or a derivation such as @file{/gnu/store/@dots{}-coreutils-8.19.drv}.  In the former case, a package with the corresponding name (and optionally version) is searched for among the GNU distribution modules (@pxref{Package Modules})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13209
msgid "Alternatively, the @option{--expression} option may be used to specify a Scheme expression that evaluates to a package; this is useful when disambiguating among several same-named packages or package variants is needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13212
msgid "There may be zero or more @var{options}.  The available options are described in the subsections below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13227
msgid "A number of options that control the build process are common to @command{guix build} and other commands that can spawn builds, such as @command{guix package} or @command{guix archive}.  These are the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13237 guix-git/doc/guix.texi:15534
#: guix-git/doc/guix.texi:15959 guix-git/doc/guix.texi:16104
#: guix-git/doc/guix.texi:16372
msgid "This allows users to define their own packages and make them visible to the command-line tools."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13238
#, no-wrap
msgid "--keep-failed"
msgstr "--keep-failed"

#. type: itemx
#: guix-git/doc/guix.texi:13239
#, no-wrap
msgid "-K"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13245
msgid "Keep the build tree of failed builds.  Thus, if a build fails, its build tree is kept under @file{/tmp}, in a directory whose name is shown at the end of the build log.  This is useful when debugging build issues.  @xref{Debugging Build Failures}, for tips and tricks on how to debug build issues."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13249
msgid "This option implies @option{--no-offload}, and it has no effect when connecting to a remote daemon with a @code{guix://} URI (@pxref{The Store, the @env{GUIX_DAEMON_SOCKET} variable})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13250
#, no-wrap
msgid "--keep-going"
msgstr "--keep-going"

#. type: itemx
#: guix-git/doc/guix.texi:13251
#, no-wrap
msgid "-k"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13254
msgid "Keep going when some of the derivations fail to build; return only once all the builds have either completed or failed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13257
msgid "The default behavior is to stop as soon as one of the specified derivations has failed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13261
msgid "Do not build the derivations."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13263
msgid "fallback-option"
msgstr "fallback-option"

#. type: item
#: guix-git/doc/guix.texi:13263
#, no-wrap
msgid "--fallback"
msgstr "--fallback"

#. type: table
#: guix-git/doc/guix.texi:13266
msgid "When substituting a pre-built binary fails, fall back to building packages locally (@pxref{Substitution Failure})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13272
msgid "client-substitute-urls"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13272
msgid "Consider @var{urls} the whitespace-separated list of substitute source URLs, overriding the default list of URLs of @command{guix-daemon} (@pxref{daemon-substitute-urls,, @command{guix-daemon} URLs})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13276
msgid "This means that substitutes may be downloaded from @var{urls}, provided they are signed by a key authorized by the system administrator (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13279
msgid "When @var{urls} is the empty string, substitutes are effectively disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13285
#, no-wrap
msgid "--no-grafts"
msgstr "--no-grafts"

#. type: table
#: guix-git/doc/guix.texi:13289
msgid "Do not ``graft'' packages.  In practice, this means that package updates available as grafts are not applied.  @xref{Security Updates}, for more information on grafts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13290
#, no-wrap
msgid "--rounds=@var{n}"
msgstr "--rounds=@var{n}"

#. type: table
#: guix-git/doc/guix.texi:13293
msgid "Build each derivation @var{n} times in a row, and raise an error if consecutive build results are not bit-for-bit identical."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13298
msgid "This is a useful way to detect non-deterministic builds processes.  Non-deterministic build processes are a problem because they make it practically impossible for users to @emph{verify} whether third-party binaries are genuine.  @xref{Invoking guix challenge}, for more."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13314
msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--max-silent-time}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13321
msgid "By default, the daemon's setting is honored (@pxref{Invoking guix-daemon, @option{--timeout}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13324
#, no-wrap
msgid "verbosity, of the command-line tools"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13325
#, no-wrap
msgid "build logs, verbosity"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13326
#, no-wrap
msgid "-v @var{level}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13327
#, no-wrap
msgid "--verbosity=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13332
msgid "Use the given verbosity @var{level}, an integer.  Choosing 0 means that no output is produced, 1 is for quiet output; 2 is similar to 1 but it additionally displays download URLs; 3 shows all the build log output on standard error."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13337
msgid "Allow the use of up to @var{n} CPU cores for the build.  The special value @code{0} means to use as many CPU cores as available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13343
msgid "Allow at most @var{n} build jobs in parallel.  @xref{Invoking guix-daemon, @option{--max-jobs}}, for details about this option and the equivalent @command{guix-daemon} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13344
#, no-wrap
msgid "--debug=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13348
msgid "Produce debugging output coming from the build daemon.  @var{level} must be an integer between 0 and 5; higher means more verbose output.  Setting a level of 4 or more may be helpful when debugging setup issues with the build daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13355
msgid "Behind the scenes, @command{guix build} is essentially an interface to the @code{package-derivation} procedure of the @code{(guix packages)} module, and to the @code{build-derivations} procedure of the @code{(guix derivations)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13359
msgid "In addition to options explicitly passed on the command line, @command{guix build} and other @command{guix} commands that support building honor the @env{GUIX_BUILD_OPTIONS} environment variable."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13360
#, no-wrap
msgid "{Environment Variable} GUIX_BUILD_OPTIONS"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13365
msgid "Users can define this variable to a list of command line options that will automatically be used by @command{guix build} and other @command{guix} commands that can perform builds, as in the example below:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13368
#, no-wrap
msgid "$ export GUIX_BUILD_OPTIONS=\"--no-substitutes -c 2 -L /foo/bar\"\n"
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:13372
msgid "These options are parsed independently, and the result is appended to the parsed command-line options."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13378
#, no-wrap
msgid "package variants"
msgstr "variantes de pacotes"

#. type: Plain text
#: guix-git/doc/guix.texi:13386
msgid "Another set of command-line options supported by @command{guix build} and also @command{guix package} are @dfn{package transformation options}.  These are options that make it possible to define @dfn{package variants}---for instance, packages built from different source code.  This is a convenient way to create customized packages on the fly without having to type in the definitions of package variants (@pxref{Defining Packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13390
msgid "Package transformation options are preserved across upgrades: @command{guix upgrade} attempts to apply transformation options initially used when creating the profile to the upgraded packages."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13395
msgid "The available options are listed below.  Most commands support them and also support a @option{--help-transform} option that lists all the available options and a synopsis (these options are not shown in the @option{--help} output for brevity)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13398
#, fuzzy, no-wrap
#| msgid "formatting code"
msgid "performance, tuning code"
msgstr "formatação de código"

#. type: cindex
#: guix-git/doc/guix.texi:13399
#, fuzzy, no-wrap
#| msgid "customization, of packages"
msgid "optimization, of package code"
msgstr "personalização, de pacotes"

#. type: cindex
#: guix-git/doc/guix.texi:13400
#, fuzzy, no-wrap
#| msgid "formatting, of code"
msgid "tuning, of package code"
msgstr "formatação, de código"

#. type: cindex
#: guix-git/doc/guix.texi:13401
#, no-wrap
msgid "SIMD support"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13402
#, fuzzy, no-wrap
#| msgid "packages"
msgid "tunable packages"
msgstr "pacotes"

#. type: cindex
#: guix-git/doc/guix.texi:13403
#, fuzzy, no-wrap
#| msgid "package version"
msgid "package multi-versioning"
msgstr "versão de pacote"

#. type: item
#: guix-git/doc/guix.texi:13404
#, fuzzy, no-wrap
#| msgid "--coverage[=@var{count}]"
msgid "--tune[=@var{cpu}]"
msgstr "--coverage[=@var{contagem}]"

#. type: table
#: guix-git/doc/guix.texi:13408
msgid "Use versions of the packages marked as ``tunable'' optimized for @var{cpu}.  When @var{cpu} is @code{native}, or when it is omitted, tune for the CPU on which the @command{guix} command is running."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13414
msgid "Valid @var{cpu} names are those recognized by the underlying compiler, by default the GNU Compiler Collection.  On x86_64 processors, this includes CPU names such as @code{nehalem}, @code{haswell}, and @code{skylake} (@pxref{x86 Options, @code{-march},, gcc, Using the GNU Compiler Collection (GCC)})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13421
msgid "As new generations of CPUs come out, they augment the standard instruction set architecture (ISA) with additional instructions, in particular instructions for single-instruction/multiple-data (SIMD)  parallel processing.  For example, while Core2 and Skylake CPUs both implement the x86_64 ISA, only the latter supports AVX2 SIMD instructions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13428
msgid "The primary gain one can expect from @option{--tune} is for programs that can make use of those SIMD capabilities @emph{and} that do not already have a mechanism to select the right optimized code at run time.  Packages that have the @code{tunable?} property set are considered @dfn{tunable packages} by the @option{--tune} option; a package definition with the property set looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13433
#, no-wrap
msgid ""
"(package\n"
"  (name \"hello-simd\")\n"
"  ;; ...\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:13437
#, no-wrap
msgid ""
"  ;; This package may benefit from SIMD extensions so\n"
"  ;; mark it as \"tunable\".\n"
"  (properties '((tunable? . #t))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13442
msgid "Other packages are not considered tunable.  This allows Guix to use generic binaries in the cases where tuning for a specific CPU is unlikely to provide any gain."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13448
msgid "Tuned packages are built with @code{-march=@var{CPU}}; under the hood, the @option{-march} option is passed to the actual wrapper by a compiler wrapper.  Since the build machine may not be able to run code for the target CPU micro-architecture, the test suite is not run when building a tuned package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13452
msgid "To reduce rebuilds to the minimum, tuned packages are @emph{grafted} onto packages that depend on them (@pxref{Security Updates, grafts}).  Thus, using @option{--no-grafts} cancels the effect of @option{--tune}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13458
msgid "We call this technique @dfn{package multi-versioning}: several variants of tunable packages may be built, one for each CPU variant.  It is the coarse-grain counterpart of @dfn{function multi-versioning} as implemented by the GNU tool chain (@pxref{Function Multiversioning,,, gcc, Using the GNU Compiler Collection (GCC)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13459
#, no-wrap
msgid "--with-source=@var{source}"
msgstr "--with-source=@var{fonte}"

#. type: itemx
#: guix-git/doc/guix.texi:13460
#, no-wrap
msgid "--with-source=@var{package}=@var{source}"
msgstr "--with-source=@var{pacote}=@var{fonte}"

#. type: itemx
#: guix-git/doc/guix.texi:13461
#, no-wrap
msgid "--with-source=@var{package}@@@var{version}=@var{source}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13466
msgid "Use @var{source} as the source of @var{package}, and @var{version} as its version number.  @var{source} must be a file name or a URL, as for @command{guix download} (@pxref{Invoking guix download})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13472
msgid "When @var{package} is omitted, it is taken to be the package name specified on the command line that matches the base of @var{source}---e.g., if @var{source} is @code{/src/guile-2.0.10.tar.gz}, the corresponding package is @code{guile}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13475
msgid "Likewise, when @var{version} is omitted, the version string is inferred from @var{source}; in the previous example, it is @code{2.0.10}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13480
msgid "This option allows users to try out versions of packages other than the one provided by the distribution.  The example below downloads @file{ed-1.7.tar.gz} from a GNU mirror and uses that as the source for the @code{ed} package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13483
#, no-wrap
msgid "guix build ed --with-source=mirror://gnu/ed/ed-1.4.tar.gz\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13488
msgid "As a developer, @option{--with-source} makes it easy to test release candidates, and even to test their impact on packages that depend on them:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13491
#, no-wrap
msgid "guix build elogind --with-source=@dots{}/shepherd-0.9.0rc1.tar.gz\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13494
msgid "@dots{} or to build from a checkout in a pristine environment:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13498
#, no-wrap
msgid ""
"$ git clone git://git.sv.gnu.org/guix.git\n"
"$ guix build guix --with-source=guix@@1.0=./guix\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13500
#, no-wrap
msgid "--with-input=@var{package}=@var{replacement}"
msgstr "--with-input=@var{pacote}=@var{substituto}"

#. type: table
#: guix-git/doc/guix.texi:13505
msgid "Replace dependency on @var{package} by a dependency on @var{replacement}.  @var{package} must be a package name, and @var{replacement} must be a package specification such as @code{guile} or @code{guile@@1.8}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13509
msgid "For instance, the following command builds Guix, but replaces its dependency on the current stable version of Guile with a dependency on the legacy version of Guile, @code{guile@@2.2}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13512
#, fuzzy, no-wrap
#| msgid "guix build --with-input=guile=guile@@2.0 guix\n"
msgid "guix build --with-input=guile=guile@@2.2 guix\n"
msgstr "guix build --with-input=guile=guile@@2.0 guix\n"

#. type: table
#: guix-git/doc/guix.texi:13517
msgid "This is a recursive, deep replacement.  So in this example, both @code{guix} and its dependency @code{guile-json} (which also depends on @code{guile}) get rebuilt against @code{guile@@2.2}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13520
msgid "This is implemented using the @code{package-input-rewriting/spec} Scheme procedure (@pxref{Defining Packages, @code{package-input-rewriting/spec}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13521
#, no-wrap
msgid "--with-graft=@var{package}=@var{replacement}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13527
msgid "This is similar to @option{--with-input} but with an important difference: instead of rebuilding the whole dependency chain, @var{replacement} is built and then @dfn{grafted} onto the binaries that were initially referring to @var{package}.  @xref{Security Updates}, for more information on grafts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13531
msgid "For example, the command below grafts version 3.5.4 of GnuTLS onto Wget and all its dependencies, replacing references to the version of GnuTLS they currently refer to:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13534
#, no-wrap
msgid "guix build --with-graft=gnutls=gnutls@@3.5.4 wget\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13543
msgid "This has the advantage of being much faster than rebuilding everything.  But there is a caveat: it works if and only if @var{package} and @var{replacement} are strictly compatible---for example, if they provide a library, the application binary interface (ABI) of those libraries must be compatible.  If @var{replacement} is somehow incompatible with @var{package}, then the resulting package may be unusable.  Use with care!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13544 guix-git/doc/guix.texi:53537
#, no-wrap
msgid "debugging info, rebuilding"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13545
#, no-wrap
msgid "--with-debug-info=@var{package}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13550
msgid "Build @var{package} in a way that preserves its debugging info and graft it onto packages that depend on it.  This is useful if @var{package} does not already provide debugging info as a @code{debug} output (@pxref{Installing Debugging Files})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13556
msgid "For example, suppose you're experiencing a crash in Inkscape and would like to see what's up in GLib, a library deep down in Inkscape's dependency graph.  GLib lacks a @code{debug} output, so debugging is tough.  Fortunately, you rebuild GLib with debugging info and tack it on Inkscape:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13559 guix-git/doc/guix.texi:53568
#, no-wrap
msgid "guix install inkscape --with-debug-info=glib\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13563
msgid "Only GLib needs to be recompiled so this takes a reasonable amount of time.  @xref{Installing Debugging Files}, for more info."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13569
msgid "Under the hood, this option works by passing the @samp{#:strip-binaries? #f} to the build system of the package of interest (@pxref{Build Systems}).  Most build systems support that option but some do not.  In that case, an error is raised."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13573
msgid "Likewise, if a C/C++ package is built without @code{-g} (which is rarely the case), debugging info will remain unavailable even when @code{#:strip-binaries?} is false."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13575
#, no-wrap
msgid "tool chain, changing the build tool chain of a package"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13576
#, no-wrap
msgid "--with-c-toolchain=@var{package}=@var{toolchain}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13580
msgid "This option changes the compilation of @var{package} and everything that depends on it so that they get built with @var{toolchain} instead of the default GNU tool chain for C/C++."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13587
#, no-wrap
msgid ""
"guix build octave-cli \\\n"
"  --with-c-toolchain=fftw=gcc-toolchain@@10 \\\n"
"  --with-c-toolchain=fftwf=gcc-toolchain@@10\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13594
msgid "The command above builds a variant of the @code{fftw} and @code{fftwf} packages using version 10 of @code{gcc-toolchain} instead of the default tool chain, and then builds a variant of the GNU@tie{}Octave command-line interface using them.  GNU@tie{}Octave itself is also built with @code{gcc-toolchain@@10}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13598
msgid "This other example builds the Hardware Locality (@code{hwloc}) library and its dependents up to @code{intel-mpi-benchmarks} with the Clang C compiler:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13602
#, no-wrap
msgid ""
"guix build --with-c-toolchain=hwloc=clang-toolchain \\\n"
"           intel-mpi-benchmarks\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13611
msgid "There can be application binary interface (ABI) incompatibilities among tool chains.  This is particularly true of the C++ standard library and run-time support libraries such as that of OpenMP@.  By rebuilding all dependents with the same tool chain, @option{--with-c-toolchain} minimizes the risks of incompatibility but cannot entirely eliminate them.  Choose @var{package} wisely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13613
#, no-wrap
msgid "--with-git-url=@var{package}=@var{url}"
msgstr "--with-git-url=@var{pacote}=@var{url}"

#. type: cindex
#: guix-git/doc/guix.texi:13614
#, no-wrap
msgid "Git, using the latest commit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13615
#, no-wrap
msgid "latest commit, building"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13621
msgid "Build @var{package} from the latest commit of the @code{master} branch of the Git repository at @var{url}.  Git sub-modules of the repository are fetched, recursively, if @var{package} @code{source} is not a Git repository, otherwise it depends on the inherited value of @code{recursive?}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13624
msgid "For example, the following command builds the NumPy Python library against the latest commit of the master branch of Python itself:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13628
#, no-wrap
msgid ""
"guix build python-numpy \\\n"
"  --with-git-url=python=https://github.com/python/cpython\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13632
msgid "This option can also be combined with @option{--with-branch} or @option{--with-commit} (see below)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13633 guix-git/doc/guix.texi:37609
#, no-wrap
msgid "continuous integration"
msgstr "integração contínua"

#. type: table
#: guix-git/doc/guix.texi:13639
msgid "Obviously, since it uses the latest commit of the given branch, the result of such a command varies over time.  Nevertheless it is a convenient way to rebuild entire software stacks against the latest commit of one or more packages.  This is particularly useful in the context of continuous integration (CI)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13643
msgid "Checkouts are kept in a cache under @file{~/.cache/guix/checkouts} to speed up consecutive accesses to the same repository.  You may want to clean it up once in a while to save disk space."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13644
#, no-wrap
msgid "--with-branch=@var{package}=@var{branch}"
msgstr "--with-branch=@var{pacote}=@var{ramo}"

#. type: table
#: guix-git/doc/guix.texi:13650
msgid "Build @var{package} from the latest commit of @var{branch}.  If the @code{source} field of @var{package} is an origin with the @code{git-fetch} method (@pxref{origin Reference}) or a @code{git-checkout} object, the repository URL is taken from that @code{source}.  Otherwise you have to use @option{--with-git-url} to specify the URL of the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13655
msgid "For instance, the following command builds @code{guile-sqlite3} from the latest commit of its @code{master} branch, and then builds @code{guix} (which depends on it) and @code{cuirass} (which depends on @code{guix}) against this specific @code{guile-sqlite3} build:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13658
#, no-wrap
msgid "guix build --with-branch=guile-sqlite3=master cuirass\n"
msgstr "guix build --with-branch=guile-sqlite3=master cuirass\n"

#. type: item
#: guix-git/doc/guix.texi:13660
#, no-wrap
msgid "--with-commit=@var{package}=@var{commit}"
msgstr "--with-commit=@var{pacote}=@var{commit}"

#. type: table
#: guix-git/doc/guix.texi:13665
msgid "This is similar to @option{--with-branch}, except that it builds from @var{commit} rather than the tip of a branch.  @var{commit} must be a valid Git commit SHA1 identifier, a tag, or a @command{git describe} style identifier such as @code{1.0-3-gabc123}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13666
#, no-wrap
msgid "--with-patch=@var{package}=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13673
msgid "Add @var{file} to the list of patches applied to @var{package}, where @var{package} is a spec such as @code{python@@3.8} or @code{glibc}.  @var{file} must contain a patch; it is applied with the flags specified in the @code{origin} of @var{package} (@pxref{origin Reference}), which by default includes @code{-p1} (@pxref{patch Directories,,, diffutils, Comparing and Merging Files})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13676
msgid "As an example, the command below rebuilds Coreutils with the GNU C Library (glibc) patched with the given patch:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13679
#, no-wrap
msgid "guix build coreutils --with-patch=glibc=./glibc-frob.patch\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13683
msgid "In this example, glibc itself as well as everything that leads to Coreutils in the dependency graph is rebuilt."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13684
#, no-wrap
msgid "configure flags, changing them"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13685
#, fuzzy, no-wrap
#| msgid "--with-git-url=@var{package}=@var{url}"
msgid "--with-configure-flag=@var{package}=@var{flag}"
msgstr "--with-git-url=@var{pacote}=@var{url}"

#. type: table
#: guix-git/doc/guix.texi:13690
msgid "Append @var{flag} to the configure flags of @var{package}, where @var{package} is a spec such as @code{guile@@3.0} or @code{glibc}.  The build system of @var{package} must support the @code{#:configure-flags} argument."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13693
msgid "For example, the command below builds GNU@tie{}Hello with the configure flag @code{--disable-nls}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13696
#, no-wrap
msgid "guix build hello --with-configure-flag=hello=--disable-nls\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13700
msgid "The following command passes an extra flag to @command{cmake} as it builds @code{lapack}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13704
#, no-wrap
msgid ""
"guix build lapack \\\n"
"  --with-configure-flag=lapack=-DBUILD_SHARED_LIBS=OFF\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13711
msgid "Under the hood, this option works by passing the @samp{#:configure-flags} argument to the build system of the package of interest (@pxref{Build Systems}).  Most build systems support that option but some do not.  In that case, an error is raised."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13713
#, no-wrap
msgid "upstream, latest version"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13714
#, no-wrap
msgid "--with-latest=@var{package}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13715
#, fuzzy, no-wrap
#| msgid "--with-source=@var{package}=@var{source}"
msgid "--with-version=@var{package}=@var{version}"
msgstr "--with-source=@var{pacote}=@var{fonte}"

#. type: table
#: guix-git/doc/guix.texi:13721
msgid "So you like living on the bleeding edge? The @option{--with-latest} option is for you! It replaces occurrences of @var{package} in the dependency graph with its latest upstream version, as reported by @command{guix refresh} (@pxref{Invoking guix refresh})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13725
msgid "It does so by determining the latest upstream release of @var{package} (if possible), downloading it, and authenticating it @emph{if} it comes with an OpenPGP signature."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13728
msgid "As an example, the command below builds Guix against the latest version of Guile-JSON:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13731
#, no-wrap
msgid "guix build guix --with-latest=guile-json\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13738
msgid "The @option{--with-version} works similarly except that it lets you specify that you want precisely @var{version}, assuming that version exists upstream.  For example, to spawn a development environment with SciPy built against version 1.22.4 of NumPy (skipping its test suite because hey, we're not gonna wait this long), you would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13741
#, no-wrap
msgid "guix shell python python-scipy --with-version=python-numpy=1.22.4\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13748
msgid "Because they depend on source code published at a given point in time on upstream servers, deployments made with @option{--with-latest} and @option{--with-version} may be non-reproducible: source might disappear or be modified in place on the servers."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13751
msgid "To deploy old software versions without compromising on reproducibility, @pxref{Invoking guix time-machine, @command{guix time-machine}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13760
msgid "There are limitations.  First, in cases where the tool cannot or does not know how to authenticate source code, you are at risk of running malicious code; a warning is emitted in this case.  Second, this option simply changes the source used in the existing package definitions, which is not always sufficient: there might be additional dependencies that need to be added, patches to apply, and more generally the quality assurance work that Guix developers normally do will be missing."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13765
msgid "You've been warned! When those limitations are acceptable, it's a snappy way to stay on top.  We encourage you to submit patches updating the actual package definitions once you have successfully tested an upgrade with @option{--with-latest} (@pxref{Contributing})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13766
#, no-wrap
msgid "test suite, skipping"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13767
#, no-wrap
msgid "--without-tests=@var{package}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13773
msgid "Build @var{package} without running its tests.  This can be useful in situations where you want to skip the lengthy test suite of a intermediate package, or if a package's test suite fails in a non-deterministic fashion.  It should be used with care because running the test suite is a good way to ensure a package is working as intended."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13777
msgid "Turning off tests leads to a different store item.  Consequently, when using this option, anything that depends on @var{package} must be rebuilt, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13780
#, no-wrap
msgid "guix install --without-tests=python python-notebook\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13786
msgid "The command above installs @code{python-notebook} on top of @code{python} built without running its test suite.  To do so, it also rebuilds everything that depends on @code{python}, including @code{python-notebook} itself."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13792
msgid "Internally, @option{--without-tests} relies on changing the @code{#:tests?} option of a package's @code{check} phase (@pxref{Build Systems}).  Note that some packages use a customized @code{check} phase that does not respect a @code{#:tests? #f} setting.  Therefore, @option{--without-tests} has no effect on these packages."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13799
msgid "Wondering how to achieve the same effect using Scheme code, for example in your manifest, or how to write your own package transformation? @xref{Defining Package Variants}, for an overview of the programming interfaces available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:13805
msgid "The command-line options presented below are specific to @command{guix build}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13808
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13813
msgid "Build quietly, without displaying the build log; this is equivalent to @option{--verbosity=0}.  Upon completion, the build log is kept in @file{/var} (or similar) and can always be retrieved using the @option{--log-file} option."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13818
msgid "Build the package, derivation, or other file-like object that the code within @var{file} evaluates to (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13821
msgid "As an example, @var{file} might contain a package definition like this (@pxref{Defining Packages}):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13830
msgid "The @var{file} may also contain a JSON representation of one or more package definitions.  Running @code{guix build -f} on @file{hello.json} with the following contents would result in building the packages @code{myhello} and @code{greeter}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13835
#, no-wrap
msgid "--manifest=@var{manifest}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13836
#, no-wrap
msgid "-m @var{manifest}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13839
msgid "Build all packages listed in the given @var{manifest} (@pxref{profile-manifest, @option{--manifest}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13843
msgid "Build the package or derivation @var{expr} evaluates to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13847
msgid "For example, @var{expr} may be @code{(@@ (gnu packages guile)  guile-1.8)}, which unambiguously designates this specific variant of version 1.8 of Guile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13851
msgid "Alternatively, @var{expr} may be a G-expression, in which case it is used as a build program passed to @code{gexp->derivation} (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13855
msgid "Lastly, @var{expr} may refer to a zero-argument monadic procedure (@pxref{The Store Monad}).  The procedure must return a derivation as a monadic value, which is then passed through @code{run-with-store}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13860
msgid "Build the ``development environment'' (build dependencies) of the following package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13863
msgid "For example, the following command builds the inputs of @code{hello}, but @emph{not} @code{hello} itself, and also builds @code{guile}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13866
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "guix build -D hello guile\n"
msgstr "# guix install hello\n"

#. type: table
#: guix-git/doc/guix.texi:13873
msgid "Notice that @option{-D} (or @option{--development}) only applies to the immediately following package on the command line.  Under the hood, it uses @code{package->development-manifest} (@pxref{package-development-manifest, @code{package->development-manifest}})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13879
msgid "The effect of combining @option{--development} with @option{--target} (for cross-compilation) may not be what you expect: it will cross-compile all the dependencies of the given package when it is built natively."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13881
#, fuzzy, no-wrap
#| msgid "inputs, for Python packages"
msgid "dependents of a package, building them"
msgstr "entradas, para pacotes Python"

#. type: cindex
#: guix-git/doc/guix.texi:13882
#, fuzzy, no-wrap
#| msgid "inputs, for Python packages"
msgid "building the dependents of a package"
msgstr "entradas, para pacotes Python"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:13884
#, fuzzy
#| msgid "build-side modules"
msgid "build-dependents"
msgstr "módulos da banda de compilação"

#. type: item
#: guix-git/doc/guix.texi:13884
#, fuzzy, no-wrap
#| msgid "--delete-generations[=@var{pattern}]"
msgid "--dependents[=@var{depth}]"
msgstr "--delete-generations[=@var{padrão}]"

#. type: itemx
#: guix-git/doc/guix.texi:13885
#, fuzzy, no-wrap
#| msgid "-r [@var{port}]"
msgid "-P [@var{depth}]"
msgstr "-r [@var{porta}]"

#. type: table
#: guix-git/doc/guix.texi:13890
msgid "Build the dependents of the following package.  By default, build all the direct and indirect dependents; when @var{depth} is provided, limit to dependents at that distance: 1 for direct dependents, 2 for dependents of dependents, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13892
msgid "For example, the command below builds @emph{all} the dependents of libgit2:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13895
#, no-wrap
msgid "guix build --dependents libgit2\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13898
msgid "To build all the packages that directly depend on NumPy, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13901
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "guix build -P1 python-numpy\n"
msgstr "# guix install hello\n"

#. type: table
#: guix-git/doc/guix.texi:13905
#, fuzzy
#| msgid "Check that dependent packages (if applicable) are not affected by the change; @command{guix refresh --list-dependent @var{package}} will help you do that (@pxref{Invoking guix refresh})."
msgid "The list of dependents is computed in the same way as with @command{guix refresh --list-dependent} (@pxref{Invoking guix refresh})."
msgstr "Verifique-se os pacotes dependentes (se aplicável) não são afetados pela alteração; @command{guix refresh --list-dependent @var{pacote}} ajudará você a fazer isso (@pxref{Invoking guix refresh})."

#. type: item
#: guix-git/doc/guix.texi:13906
#, no-wrap
msgid "--source"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:13907
#, no-wrap
msgid "-S"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13910
msgid "Build the source derivations of the packages, rather than the packages themselves."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13914
msgid "For instance, @code{guix build -S gcc} returns something like @file{/gnu/store/@dots{}-gcc-4.7.2.tar.bz2}, which is the GCC source tarball."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13918
msgid "The returned source tarball is the result of applying any patches and code snippets specified in the package @code{origin} (@pxref{Defining Packages})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:13919
#, no-wrap
msgid "source, verification"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13925
msgid "As with other derivations, the result of building a source derivation can be verified using the @option{--check} option (@pxref{build-check}).  This is useful to validate that a (potentially already built or substituted, thus cached) package source matches against its declared hash."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13930
msgid "Note that @command{guix build -S} compiles the sources only of the specified packages.  They do not include the sources of statically linked dependencies and by themselves are insufficient for reproducing the packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13931
#, no-wrap
msgid "--sources"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13938
msgid "Fetch and return the source of @var{package-or-derivation} and all their dependencies, recursively.  This is a handy way to obtain a local copy of all the source code needed to build @var{packages}, allowing you to eventually build them even without network access.  It is an extension of the @option{--source} option and can accept one of the following optional argument values:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13940 guix-git/doc/guix.texi:16158
#, no-wrap
msgid "package"
msgstr "package"

#. type: table
#: guix-git/doc/guix.texi:13943
msgid "This value causes the @option{--sources} option to behave in the same way as the @option{--source} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13944 guix-git/doc/guix.texi:25498
#, no-wrap
msgid "all"
msgstr "all"

#. type: table
#: guix-git/doc/guix.texi:13947
msgid "Build the source derivations of all packages, including any source that might be listed as @code{inputs}.  This is the default value."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13953
#, no-wrap
msgid ""
"$ guix build --sources tzdata\n"
"The following derivations will be built:\n"
"   /gnu/store/@dots{}-tzdata2015b.tar.gz.drv\n"
"   /gnu/store/@dots{}-tzcode2015b.tar.gz.drv\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:13955
#, no-wrap
msgid "transitive"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13959
msgid "Build the source derivations of all packages, as well of all transitive inputs to the packages.  This can be used e.g.@: to prefetch package source for later offline building."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:13970
#, no-wrap
msgid ""
"$ guix build --sources=transitive tzdata\n"
"The following derivations will be built:\n"
"   /gnu/store/@dots{}-tzcode2015b.tar.gz.drv\n"
"   /gnu/store/@dots{}-findutils-4.4.2.tar.xz.drv\n"
"   /gnu/store/@dots{}-grep-2.21.tar.xz.drv\n"
"   /gnu/store/@dots{}-coreutils-8.23.tar.xz.drv\n"
"   /gnu/store/@dots{}-make-4.1.tar.xz.drv\n"
"   /gnu/store/@dots{}-bash-4.3.tar.xz.drv\n"
"@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13980
msgid "Attempt to build for @var{system}---e.g., @code{i686-linux}---instead of the system type of the build host.  The @command{guix build} command allows you to repeat this option several times, in which case it builds for all the specified systems; other commands ignore extraneous @option{-s} options."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13985
msgid "The @option{--system} flag is for @emph{native} compilation and must not be confused with cross-compilation.  See @option{--target} below for information on cross-compilation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:13992
msgid "An example use of this is on Linux-based systems, which can emulate different personalities.  For instance, passing @option{--system=i686-linux} on an @code{x86_64-linux} system or @option{--system=armhf-linux} on an @code{aarch64-linux} system allows you to build packages in a complete 32-bit environment."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:13997
msgid "Building for an @code{armhf-linux} system is unconditionally enabled on @code{aarch64-linux} machines, although certain aarch64 chipsets do not allow for this functionality, notably the ThunderX."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14003
msgid "Similarly, when transparent emulation with QEMU and @code{binfmt_misc} is enabled (@pxref{Virtualization Services, @code{qemu-binfmt-service-type}}), you can build for any system for which a QEMU @code{binfmt_misc} handler is installed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14007
msgid "Builds for a system other than that of the machine you are using can also be offloaded to a remote machine of the right architecture.  @xref{Daemon Offload Setup}, for more information on offloading."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14013
msgid "Cross-build for @var{triplet}, which must be a valid GNU triplet, such as @code{\"aarch64-linux-gnu\"} (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14014
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "--list-systems"
msgstr "--list-transitive"

#. type: table
#: guix-git/doc/guix.texi:14017
msgid "List all the supported systems, that can be passed as an argument to @option{--system}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14018
#, fuzzy, no-wrap
#| msgid "--list-failures"
msgid "--list-targets"
msgstr "--list-failures"

#. type: table
#: guix-git/doc/guix.texi:14021
msgid "List all the supported targets, that can be passed as an argument to @option{--target}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:14023
msgid "build-check"
msgstr "build-check"

#. type: cindex
#: guix-git/doc/guix.texi:14024
#, no-wrap
msgid "determinism, checking"
msgstr "determinismo, verificação"

#. type: cindex
#: guix-git/doc/guix.texi:14025
#, no-wrap
msgid "reproducibility, checking"
msgstr "reprodutibilidade, verificação"

#. type: table
#: guix-git/doc/guix.texi:14029
msgid "Rebuild @var{package-or-derivation}, which are already available in the store, and raise an error if the build results are not bit-for-bit identical."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14034
msgid "This mechanism allows you to check whether previously installed substitutes are genuine (@pxref{Substitutes}), or whether the build result of a package is deterministic.  @xref{Invoking guix challenge}, for more background information and tools."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14039
#, no-wrap
msgid "--repair"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14040
#, no-wrap
msgid "repairing store items"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14044
msgid "Attempt to repair the specified store items, if they are corrupt, by re-downloading or rebuilding them."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14046
msgid "This operation is not atomic and thus restricted to @code{root}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14047
#, no-wrap
msgid "--derivations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14051
msgid "Return the derivation paths, not the output paths, of the given packages."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14054
#, no-wrap
msgid "GC roots, adding"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14055
#, no-wrap
msgid "garbage collector roots, adding"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14058 guix-git/doc/guix.texi:46910
msgid "Make @var{file} a symlink to the result, and register it as a garbage collector root."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14064
msgid "Consequently, the results of this @command{guix build} invocation are protected from garbage collection until @var{file} is removed.  When that option is omitted, build results are eligible for garbage collection as soon as the build completes.  @xref{Invoking guix gc}, for more on GC roots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14065
#, no-wrap
msgid "--log-file"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14066
#, no-wrap
msgid "build logs, access"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14070
msgid "Return the build log file names or URLs for the given @var{package-or-derivation}, or raise an error if build logs are missing."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14073
msgid "This works regardless of how packages or derivations are specified.  For instance, the following invocations are equivalent:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14079
#, no-wrap
msgid ""
"guix build --log-file $(guix build -d guile)\n"
"guix build --log-file $(guix build guile)\n"
"guix build --log-file guile\n"
"guix build --log-file -e '(@@ (gnu packages guile) guile-2.0)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14084
msgid "If a log is unavailable locally, and unless @option{--no-substitutes} is passed, the command looks for a corresponding log on one of the substitute servers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14087
msgid "So for instance, imagine you want to see the build log of GDB on @code{aarch64}, but you are actually on an @code{x86_64} machine:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14091
#, no-wrap
msgid ""
"$ guix build --log-file gdb -s aarch64-linux\n"
"https://@value{SUBSTITUTE-SERVER-1}/log/@dots{}-gdb-7.10\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14094
msgid "You can freely access a huge library of build logs!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14099
#, no-wrap
msgid "build failures, debugging"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14105
msgid "When defining a new package (@pxref{Defining Packages}), you will probably find yourself spending some time debugging and tweaking the build until it succeeds.  To do that, you need to operate the build commands yourself in an environment as close as possible to the one the build daemon uses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14110
msgid "To that end, the first thing to do is to use the @option{--keep-failed} or @option{-K} option of @command{guix build}, which will keep the failed build tree in @file{/tmp} or whatever directory you specified as @env{TMPDIR} (@pxref{Common Build Options, @option{--keep-failed}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14116
msgid "From there on, you can @command{cd} to the failed build tree and source the @file{environment-variables} file, which contains all the environment variable definitions that were in place when the build failed.  So let's say you're debugging a build failure in package @code{foo}; a typical session would look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14123
#, no-wrap
msgid ""
"$ guix build foo -K\n"
"@dots{} @i{build fails}\n"
"$ cd /tmp/guix-build-foo.drv-0\n"
"$ source ./environment-variables\n"
"$ cd foo-1.2\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14127
msgid "Now, you can invoke commands as if you were the daemon (almost) and troubleshoot your build process."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14133
msgid "Sometimes it happens that, for example, a package's tests pass when you run them manually but they fail when the daemon runs them.  This can happen because the daemon runs builds in containers where, unlike in our environment above, network access is missing, @file{/bin/sh} does not exist, etc. (@pxref{Build Environment Setup})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14136
msgid "In such cases, you may need to inspect the build process from within a container similar to the one the build daemon creates:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14144
#, no-wrap
msgid ""
"$ guix build -K foo\n"
"@dots{}\n"
"$ cd /tmp/guix-build-foo.drv-0\n"
"$ guix shell --no-grafts -C -D foo strace gdb\n"
"[env]# source ./environment-variables\n"
"[env]# cd foo-1.2\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14153
msgid "Here, @command{guix shell -C} creates a container and spawns a new shell in it (@pxref{Invoking guix shell}).  The @command{strace gdb} part adds the @command{strace} and @command{gdb} commands to the container, which you may find handy while debugging.  The @option{--no-grafts} option makes sure we get the exact same environment, with ungrafted packages (@pxref{Security Updates}, for more info on grafts)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14157
msgid "To get closer to a container like that used by the build daemon, we can remove @file{/bin/sh} (you'll first need to pass the @option{--writable-root} option to @command{guix shell}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14160
#, no-wrap
msgid "[env]# rm /bin/sh\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14164
msgid "(Don't worry, this is harmless: this is all happening in the throw-away container created by @command{guix shell}.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14167
msgid "The @command{strace} command is probably not in the search path, but we can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14170
#, no-wrap
msgid "[env]# $GUIX_ENVIRONMENT/bin/strace -f -o log make check\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14175
msgid "In this way, not only you will have reproduced the environment variables the daemon uses, you will also be running the build process in a container similar to the one the daemon uses."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:14178
#, no-wrap
msgid "Invoking @command{guix edit}"
msgstr "Invocando @command{guix edit}"

#. type: command{#1}
#: guix-git/doc/guix.texi:14180
#, no-wrap
msgid "guix edit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14181
#, no-wrap
msgid "package definition, editing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14186
msgid "So many packages, so many source files! The @command{guix edit} command facilitates the life of users and packagers by pointing their editor at the source file containing the definition of the specified packages.  For instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14189
#, no-wrap
msgid "guix edit gcc@@4.9 vim\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14195
msgid "launches the program specified in the @env{VISUAL} or in the @env{EDITOR} environment variable to view the recipe of GCC@tie{}4.9.3 and that of Vim."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14201
msgid "If you are using a Guix Git checkout (@pxref{Building from Git}), or have created your own packages on @env{GUIX_PACKAGE_PATH} (@pxref{Package Modules}), you will be able to edit the package recipes.  In other cases, you will be able to examine the read-only recipes for packages currently in the store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14206
msgid "Instead of @env{GUIX_PACKAGE_PATH}, the command-line option @option{--load-path=@var{directory}} (or in short @option{-L @var{directory}}) allows you to add @var{directory} to the front of the package module search path and so make your own packages visible."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:14208
#, no-wrap
msgid "Invoking @command{guix download}"
msgstr "Invocando @command{guix download}"

#. type: command{#1}
#: guix-git/doc/guix.texi:14210
#, no-wrap
msgid "guix download"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14211
#, no-wrap
msgid "downloading package sources"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14218
msgid "When writing a package definition, developers typically need to download a source tarball, compute its SHA256 hash, and write that hash in the package definition (@pxref{Defining Packages}).  The @command{guix download} tool helps with this task: it downloads a file from the given URI, adds it to the store, and prints both its file name in the store and its SHA256 hash."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14225
msgid "The fact that the downloaded file is added to the store saves bandwidth: when the developer eventually tries to build the newly defined package with @command{guix build}, the source tarball will not have to be downloaded again because it is already in the store.  It is also a convenient way to temporarily stash files, which may be deleted eventually (@pxref{Invoking guix gc})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14233
msgid "The @command{guix download} command supports the same URIs as used in package definitions.  In particular, it supports @code{mirror://} URIs.  @code{https} URIs (HTTP over TLS) are supported @emph{provided} the Guile bindings for GnuTLS are available in the user's environment; when they are not available, an error is raised.  @xref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14238
msgid "@command{guix download} verifies HTTPS server certificates by loading the certificates of X.509 authorities from the directory pointed to by the @env{SSL_CERT_DIR} environment variable (@pxref{X.509 Certificates}), unless @option{--no-check-certificate} is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14241
msgid "Alternatively, @command{guix download} can also retrieve a Git repository, possibly a specific commit, tag, or branch."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14243 guix-git/doc/guix.texi:16476
msgid "The following options are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14245 guix-git/doc/guix.texi:14309
#, no-wrap
msgid "--hash=@var{algorithm}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14246 guix-git/doc/guix.texi:14310
#, no-wrap
msgid "-H @var{algorithm}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14249
msgid "Compute a hash using the specified @var{algorithm}.  @xref{Invoking guix hash}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14250 guix-git/doc/guix.texi:14319
#, no-wrap
msgid "--format=@var{fmt}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14251 guix-git/doc/guix.texi:14320
#, no-wrap
msgid "-f @var{fmt}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14254
msgid "Write the hash in the format specified by @var{fmt}.  For more information on the valid values for @var{fmt}, @pxref{Invoking guix hash}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14261
msgid "When using this option, you have @emph{absolutely no guarantee} that you are communicating with the authentic server responsible for the given URL, which makes you vulnerable to ``man-in-the-middle'' attacks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14262
#, no-wrap
msgid "--output=@var{file}"
msgstr "--output=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:14263
#, no-wrap
msgid "-o @var{file}"
msgstr "-o @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:14266
msgid "Save the downloaded file to @var{file} instead of adding it to the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14267
#, no-wrap
msgid "--git"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14270
msgid "Checkout the Git repository at the latest commit on the default branch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14271
#, fuzzy, no-wrap
#| msgid "--commit=@var{commit}"
msgid "--commit=@var{commit-or-tag}"
msgstr "--commit=@var{commit}"

#. type: table
#: guix-git/doc/guix.texi:14273
msgid "Checkout the Git repository at @var{commit-or-tag}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14276
msgid "@var{commit-or-tag} can be either a tag or a commit defined in the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14279
msgid "Checkout the Git repository at @var{branch}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14282
msgid "The repository will be checked out at the latest commit of @var{branch}, which must be a valid branch of the Git repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14286
msgid "Recursively clone the Git repository."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:14289
#, no-wrap
msgid "Invoking @command{guix hash}"
msgstr "Invocando @command{guix hash}"

#. type: command{#1}
#: guix-git/doc/guix.texi:14291
#, no-wrap
msgid "guix hash"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14296
msgid "The @command{guix hash} command computes the hash of a file.  It is primarily a convenience tool for anyone contributing to the distribution: it computes the cryptographic hash of one or more files, which can be used in the definition of a package (@pxref{Defining Packages})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14301
#, fuzzy, no-wrap
#| msgid "-r @var{package} @dots{}"
msgid "guix hash @var{option} @var{file} ...\n"
msgstr "guix hash @var{option} @var{file} ...\n"

#. type: Plain text
#: guix-git/doc/guix.texi:14306
msgid "When @var{file} is @code{-} (a hyphen), @command{guix hash} computes the hash of data read from standard input.  @command{guix hash} has the following options:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14313
msgid "Compute a hash using the specified @var{algorithm}, @code{sha256} by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14318
msgid "@var{algorithm} must be the name of a cryptographic hash algorithm supported by Libgcrypt @i{via} Guile-Gcrypt---e.g., @code{sha512} or @code{sha3-256} (@pxref{Hash Functions,,, guile-gcrypt, Guile-Gcrypt Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14322
msgid "Write the hash in the format specified by @var{fmt}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14325
msgid "Supported formats: @code{base64}, @code{nix-base32}, @code{base32}, @code{base16} (@code{hex} and @code{hexadecimal} can be used as well)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14329
msgid "If the @option{--format} option is not specified, @command{guix hash} will output the hash in @code{nix-base32}.  This representation is used in the definitions of packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14335
msgid "The @option{--recursive} option is deprecated in favor of @option{--serializer=nar} (see below); @option{-r} remains accepted as a convenient shorthand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14336
#, fuzzy, no-wrap
#| msgid "--profile=@var{profile}"
msgid "--serializer=@var{type}"
msgstr "--profile=@var{perfil}"

#. type: itemx
#: guix-git/doc/guix.texi:14337
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "-S @var{type}"
msgstr "-t @var{tipo}"

#. type: table
#: guix-git/doc/guix.texi:14339
msgid "Compute the hash on @var{file} using @var{type} serialization."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14341
msgid "@var{type} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14343 guix-git/doc/guix.texi:16835
#: guix-git/doc/guix.texi:22122 guix-git/doc/guix.texi:25495
#, no-wrap
msgid "none"
msgstr "none"

#. type: table
#: guix-git/doc/guix.texi:14345
msgid "This is the default: it computes the hash of a file's contents."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14346
#, no-wrap
msgid "nar"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14356
msgid "Compute the hash of a ``normalized archive'' (or ``nar'') containing @var{file}, including its children if it is a directory.  Some of the metadata of @var{file} is part of the archive; for instance, when @var{file} is a regular file, the hash is different depending on whether @var{file} is executable or not.  Metadata such as time stamps have no impact on the hash (@pxref{Invoking guix archive}, for more info on the nar format)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14357
#, no-wrap
msgid "git"
msgstr "git"

#. type: table
#: guix-git/doc/guix.texi:14360
msgid "Compute the hash of the file or directory as a Git ``tree'', following the same method as the Git version control system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14362
#, no-wrap
msgid "--exclude-vcs"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14363 guix-git/doc/guix.texi:15934
#, no-wrap
msgid "-x"
msgstr "-x"

#. type: table
#: guix-git/doc/guix.texi:14366
msgid "When combined with @option{--recursive}, exclude version control system directories (@file{.bzr}, @file{.git}, @file{.hg}, etc.)."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:14367
#, no-wrap
msgid "git-fetch"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14371
msgid "As an example, here is how you would compute the hash of a Git checkout, which is useful when using the @code{git-fetch} method (@pxref{origin Reference}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14376
#, no-wrap
msgid ""
"$ git clone http://example.org/foo.git\n"
"$ cd foo\n"
"$ guix hash -x --serializer=nar .\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14380 guix-git/doc/guix.texi:14385
#, no-wrap
msgid "Invoking @command{guix import}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14382
#, no-wrap
msgid "importing packages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14383
#, no-wrap
msgid "package import"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14384
#, no-wrap
msgid "package conversion"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14392
msgid "The @command{guix import} command is useful for people who would like to add a package to the distribution with as little work as possible---a legitimate demand.  The command knows of a few repositories from which it can ``import'' package metadata.  The result is a package definition, or a template thereof, in the format we know (@pxref{Defining Packages})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14397
#, fuzzy, no-wrap
#| msgid "guix style [@var{options}] @var{package}@dots{}\n"
msgid "guix import [@var{global-options}@dots{}] @var{importer} @var{package} [@var{options}@dots{}]\n"
msgstr "guix style [@var{options}] @var{package}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:14403
msgid "@var{importer} specifies the source from which to import package metadata, and @var{options} specifies a package identifier and other options specific to @var{importer}. @command{guix import} itself has the following @var{global-options}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14405
#, fuzzy, no-wrap
#| msgid "--root=@var{file}"
msgid "--insert=@var{file}"
msgstr "--root=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:14406
#, fuzzy, no-wrap
#| msgid "-f @var{file}"
msgid "-i @var{file}"
msgstr "-f @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:14410
msgid "Insert the package definition(s) that the @var{importer} generated into the specified @var{file}, either in alphabetical order among existing package definitions, or at the end of the file otherwise."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14415
msgid "Some of the importers rely on the ability to run the @command{gpgv} command.  For these, GnuPG must be installed and in @code{$PATH}; run @code{guix install gnupg} if needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:14417
msgid "Currently, the available ``importers'' are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14419 guix-git/doc/guix.texi:15309
#, no-wrap
msgid "gnu"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14423
msgid "Import metadata for the given GNU package.  This provides a template for the latest version of that GNU package, including the hash of its source tarball, and its canonical synopsis and description."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14426
msgid "Additional information such as the package dependencies and its license needs to be figured out manually."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14429
msgid "For example, the following command returns a package definition for GNU@tie{}Hello:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14432
#, no-wrap
msgid "guix import gnu hello\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14435 guix-git/doc/guix.texi:14707
#: guix-git/doc/guix.texi:14757 guix-git/doc/guix.texi:14786
msgid "Specific command-line options are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14437 guix-git/doc/guix.texi:15502
#, no-wrap
msgid "--key-download=@var{policy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14441
msgid "As for @command{guix refresh}, specify the policy to handle missing OpenPGP keys when verifying the package signature.  @xref{Invoking guix refresh, @option{--key-download}}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14443 guix-git/doc/guix.texi:14444
#: guix-git/doc/guix.texi:15333
#, no-wrap
msgid "pypi"
msgstr "pypi"

#. type: table
#: guix-git/doc/guix.texi:14451
msgid "Import metadata from the @uref{https://pypi.python.org/, Python Package Index}.  Information is taken from the JSON-formatted description available at @code{pypi.python.org} and usually includes all the relevant information, including package dependencies.  For maximum efficiency, it is recommended to install the @command{unzip} utility, so that the importer can unzip Python wheels and gather data from them."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14454
msgid "The command below imports metadata for the latest version of the @code{itsdangerous} Python package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14457
#, no-wrap
msgid "guix import pypi itsdangerous\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14460 guix-git/doc/guix.texi:14491
#: guix-git/doc/guix.texi:14579 guix-git/doc/guix.texi:15024
msgid "You can also ask for a specific version:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14463
#, no-wrap
msgid "guix import pypi itsdangerous@@1.1.0\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14471 guix-git/doc/guix.texi:14502
#: guix-git/doc/guix.texi:14534 guix-git/doc/guix.texi:14561
#: guix-git/doc/guix.texi:14649 guix-git/doc/guix.texi:14730
#: guix-git/doc/guix.texi:14771 guix-git/doc/guix.texi:14822
#: guix-git/doc/guix.texi:14847 guix-git/doc/guix.texi:14883
#: guix-git/doc/guix.texi:14916 guix-git/doc/guix.texi:14932
#: guix-git/doc/guix.texi:14952 guix-git/doc/guix.texi:15000
#: guix-git/doc/guix.texi:15036 guix-git/doc/guix.texi:15063
msgid "Traverse the dependency graph of the given upstream package recursively and generate package expressions for all those packages that are not yet in Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14473 guix-git/doc/guix.texi:14474
#: guix-git/doc/guix.texi:15335
#, no-wrap
msgid "gem"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14483
msgid "Import metadata from @uref{https://rubygems.org/, RubyGems}.  Information is taken from the JSON-formatted description available at @code{rubygems.org} and includes most relevant information, including runtime dependencies.  There are some caveats, however.  The metadata doesn't distinguish between synopses and descriptions, so the same string is used for both fields.  Additionally, the details of non-Ruby dependencies required to build native extensions is unavailable and left as an exercise to the packager."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14485
msgid "The command below imports metadata for the @code{rails} Ruby package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14488
#, no-wrap
msgid "guix import gem rails\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14494
#, no-wrap
msgid "guix import gem rails@@7.0.4\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14504 guix-git/doc/guix.texi:14505
#, no-wrap
msgid "minetest"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14506
#, fuzzy, no-wrap
#| msgid "contents"
msgid "ContentDB"
msgstr "conteúdo"

#. type: table
#: guix-git/doc/guix.texi:14515
msgid "Import metadata from @uref{https://content.minetest.net, ContentDB}.  Information is taken from the JSON-formatted metadata provided through @uref{https://content.minetest.net/help/api/, ContentDB's API} and includes most relevant information, including dependencies.  There are some caveats, however.  The license information is often incomplete.  The commit hash is sometimes missing.  The descriptions are in the Markdown format, but Guix uses Texinfo instead.  Texture packs and subgames are unsupported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14517
msgid "The command below imports metadata for the Mesecons mod by Jeija:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14520
#, no-wrap
msgid "guix import minetest Jeija/mesecons\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14523
msgid "The author name can also be left out:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14526
#, no-wrap
msgid "guix import minetest mesecons\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14536 guix-git/doc/guix.texi:15331
#, no-wrap
msgid "cpan"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14537
#, no-wrap
msgid "CPAN"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14545
msgid "Import metadata from @uref{https://www.metacpan.org/, MetaCPAN}.  Information is taken from the JSON-formatted metadata provided through @uref{https://fastapi.metacpan.org/, MetaCPAN's API} and includes most relevant information, such as module dependencies.  License information should be checked closely.  If Perl is available in the store, then the @code{corelist} utility will be used to filter core modules out of the list of dependencies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14547
msgid "The command below imports metadata for the Acme::Boolean Perl module:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14550
#, no-wrap
msgid "guix import cpan Acme::Boolean\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14554
msgid "Like many other importers, the @code{cpan} importer supports recursive imports:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14563 guix-git/doc/guix.texi:15327
#, no-wrap
msgid "cran"
msgstr "cran"

#. type: cindex
#: guix-git/doc/guix.texi:14564
#, no-wrap
msgid "CRAN"
msgstr "CRAN"

#. type: cindex
#: guix-git/doc/guix.texi:14565
#, no-wrap
msgid "Bioconductor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14569
msgid "Import metadata from @uref{https://cran.r-project.org/, CRAN}, the central repository for the @uref{https://r-project.org, GNU@tie{}R statistical and graphical environment}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14571
msgid "Information is extracted from the @file{DESCRIPTION} file of the package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14573
msgid "The command below imports metadata for the Cairo R package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14576
#, no-wrap
msgid "guix import cran Cairo\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14582
#, no-wrap
msgid "guix import cran rasterVis@@0.50.3\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14587
msgid "When @option{--recursive} is added, the importer will traverse the dependency graph of the given upstream package recursively and generate package expressions for all those packages that are not yet in Guix."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14594
msgid "When @option{--style=specification} is added, the importer will generate package definitions whose inputs are package specifications instead of references to package variables.  This is useful when generated package definitions are to be appended to existing user modules, as the list of used package modules need not be changed.  The default is @option{--style=variable}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14598
msgid "When @option{--prefix=license:} is added, the importer will prefix license atoms with @code{license:}, allowing a prefixed import of @code{(guix licenses)}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14603
msgid "When @option{--archive=bioconductor} is added, metadata is imported from @uref{https://www.bioconductor.org/, Bioconductor}, a repository of R packages for the analysis and comprehension of high-throughput genomic data in bioinformatics."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14606
msgid "Information is extracted from the @file{DESCRIPTION} file contained in the package archive."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14608
msgid "The command below imports metadata for the GenomicRanges R package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14611
#, no-wrap
msgid "guix import cran --archive=bioconductor GenomicRanges\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14616
msgid "Finally, you can also import R packages that have not yet been published on CRAN or Bioconductor as long as they are in a git repository.  Use @option{--archive=git} followed by the URL of the git repository:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14619
#, no-wrap
msgid "guix import cran --archive=git https://github.com/immunogenomics/harmony\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14621
#, no-wrap
msgid "texlive"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14622
#, no-wrap
msgid "TeX Live"
msgstr "TeX Live"

#. type: cindex
#: guix-git/doc/guix.texi:14623
#, no-wrap
msgid "CTAN"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14627
msgid "Import TeX package information from the TeX Live package database for TeX packages that are part of the @uref{https://www.tug.org/texlive/, TeX Live distribution}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14634
msgid "Information about the package is obtained from the TeX Live package database, a plain text file that is included in the @code{texlive-scripts} package.  The source code is downloaded from possibly multiple locations in the SVN repository of the Tex Live project.  Note that therefore SVN must be installed and in @code{$PATH}; run @code{guix install subversion} if needed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14636
msgid "The command below imports metadata for the @code{fontspec} TeX package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14639
#, no-wrap
msgid "guix import texlive fontspec\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14642 guix-git/doc/guix.texi:14840
#: guix-git/doc/guix.texi:14876 guix-git/doc/guix.texi:14909
#: guix-git/doc/guix.texi:14925 guix-git/doc/guix.texi:14945
#: guix-git/doc/guix.texi:14993 guix-git/doc/guix.texi:15030
#: guix-git/doc/guix.texi:15056
msgid "Additional options include:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14652
#, no-wrap
msgid "JSON, import"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14655
msgid "Import package metadata from a local JSON file.  Consider the following example package definition in JSON format:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14668
#, no-wrap
msgid ""
"@{\n"
"  \"name\": \"hello\",\n"
"  \"version\": \"2.10\",\n"
"  \"source\": \"mirror://gnu/hello/hello-2.10.tar.gz\",\n"
"  \"build-system\": \"gnu\",\n"
"  \"home-page\": \"https://www.gnu.org/software/hello/\",\n"
"  \"synopsis\": \"Hello, GNU world: An example GNU package\",\n"
"  \"description\": \"GNU Hello prints a greeting.\",\n"
"  \"license\": \"GPL-3.0+\",\n"
"  \"native-inputs\": [\"gettext\"]\n"
"@}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14674
msgid "The field names are the same as for the @code{<package>} record (@xref{Defining Packages}).  References to other packages are provided as JSON lists of quoted package specification strings such as @code{guile} or @code{guile@@2.0}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14677
msgid "The importer also supports a more explicit source definition using the common fields for @code{<origin>} records:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14690
#, no-wrap
msgid ""
"@{\n"
"  @dots{}\n"
"  \"source\": @{\n"
"    \"method\": \"url-fetch\",\n"
"    \"uri\": \"mirror://gnu/hello/hello-2.10.tar.gz\",\n"
"    \"sha256\": @{\n"
"      \"base32\": \"0ssi1wpaf7plaswqqjwigppsg5fyh99vdlb9kzl7c9lng89ndq1i\"\n"
"    @}\n"
"  @}\n"
"  @dots{}\n"
"@}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14694
msgid "The command below reads metadata from the JSON file @code{hello.json} and outputs a package expression:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14697
#, no-wrap
msgid "guix import json hello.json\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14699 guix-git/doc/guix.texi:14700
#: guix-git/doc/guix.texi:15339
#, no-wrap
msgid "hackage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14705
msgid "Import metadata from the Haskell community's central package archive @uref{https://hackage.haskell.org/, Hackage}.  Information is taken from Cabal files and includes all the relevant information, including package dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14709
#, no-wrap
msgid "--stdin"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14710
#, no-wrap
msgid "-s"
msgstr "-s"

#. type: table
#: guix-git/doc/guix.texi:14712
msgid "Read a Cabal file from standard input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14712 guix-git/doc/guix.texi:14759
#, no-wrap
msgid "--no-test-dependencies"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14715 guix-git/doc/guix.texi:14762
msgid "Do not include dependencies required only by the test suites."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14715
#, no-wrap
msgid "--cabal-environment=@var{alist}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14716
#, no-wrap
msgid "-e @var{alist}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14725
msgid "@var{alist} is a Scheme alist defining the environment in which the Cabal conditionals are evaluated.  The accepted keys are: @code{os}, @code{arch}, @code{impl} and a string representing the name of a flag.  The value associated with a flag has to be either the symbol @code{true} or @code{false}.  The value associated with other keys has to conform to the Cabal file format definition.  The default value associated with the keys @code{os}, @code{arch} and @code{impl} is @samp{linux}, @samp{x86_64} and @samp{ghc}, respectively."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14735
msgid "The command below imports metadata for the latest version of the HTTP Haskell package without including test dependencies and specifying the value of the flag @samp{network-uri} as @code{false}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14738
#, no-wrap
msgid "guix import hackage -t -e \"'((\\\"network-uri\\\" . false))\" HTTP\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14742
msgid "A specific package version may optionally be specified by following the package name by an at-sign and a version number as in the following example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14745
#, no-wrap
msgid "guix import hackage mtl@@2.1.3.1\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14747 guix-git/doc/guix.texi:14748
#: guix-git/doc/guix.texi:15341
#, no-wrap
msgid "stackage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14755
msgid "The @code{stackage} importer is a wrapper around the @code{hackage} one.  It takes a package name, looks up the package version included in a long-term support (LTS) @uref{https://www.stackage.org, Stackage} release and uses the @code{hackage} importer to retrieve its metadata.  Note that it is up to you to select an LTS release compatible with the GHC compiler used by Guix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14762
#, no-wrap
msgid "--lts-version=@var{version}"
msgstr "--lts-version=@var{versão}"

#. type: itemx
#: guix-git/doc/guix.texi:14763
#, no-wrap
msgid "-l @var{version}"
msgstr "-l @var{versão}"

#. type: table
#: guix-git/doc/guix.texi:14766
msgid "@var{version} is the desired LTS release version.  If omitted the latest release is used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14775
msgid "The command below imports metadata for the HTTP Haskell package included in the LTS Stackage release version 7.18:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14778
#, no-wrap
msgid "guix import stackage --lts-version=7.18 HTTP\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14780 guix-git/doc/guix.texi:14781
#: guix-git/doc/guix.texi:15325
#, no-wrap
msgid "elpa"
msgstr "elpa"

#. type: table
#: guix-git/doc/guix.texi:14784
msgid "Import metadata from an Emacs Lisp Package Archive (ELPA) package repository (@pxref{Packages,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14788
#, no-wrap
msgid "--archive=@var{repo}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:14789
#, no-wrap
msgid "-a @var{repo}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14793
msgid "@var{repo} identifies the archive repository from which to retrieve the information.  Currently the supported repositories and their identifiers are:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14797
msgid "@uref{https://elpa.gnu.org/packages, GNU}, selected by the @code{gnu} identifier.  This is the default."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14803
msgid "Packages from @code{elpa.gnu.org} are signed with one of the keys contained in the GnuPG keyring at @file{share/emacs/25.1/etc/package-keyring.gpg} (or similar) in the @code{emacs} package (@pxref{Package Installation, ELPA package signatures,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14807
msgid "@uref{https://elpa.nongnu.org/nongnu/, NonGNU}, selected by the @code{nongnu} identifier."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14811
msgid "@uref{https://stable.melpa.org/packages, MELPA-Stable}, selected by the @code{melpa-stable} identifier."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14815
msgid "@uref{https://melpa.org/packages, MELPA}, selected by the @code{melpa} identifier."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14824 guix-git/doc/guix.texi:14825
#: guix-git/doc/guix.texi:15343
#, no-wrap
msgid "crate"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14828
msgid "Import metadata from the crates.io Rust package repository @uref{https://crates.io, crates.io}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14831
#, no-wrap
msgid "guix import crate blake2-rfc\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14834
msgid "The crate importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14837
#, no-wrap
msgid "guix import crate constant-time-eq@@0.1.0\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14847
#, no-wrap
msgid "--recursive-dev-dependencies"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14851
msgid "If @option{--recursive-dev-dependencies} is specified, also the recursively imported packages contain their development dependencies, which are recursively imported as well."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14851
#, no-wrap
msgid "--allow-yanked"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14854
msgid "If no non-yanked version of a crate is available, use the latest yanked version instead instead of aborting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14854
#, fuzzy, no-wrap
#| msgid "--missing"
msgid "--mark-missing"
msgstr "--missing"

#. type: table
#: guix-git/doc/guix.texi:14858
msgid "If a crate dependency is not (yet) packaged, make the corresponding input in @code{#:cargo-inputs} or @code{#:cargo-development-inputs} into a comment."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14860 guix-git/doc/guix.texi:14861
#, no-wrap
msgid "elm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14864
msgid "Import metadata from the Elm package repository @uref{https://package.elm-lang.org, package.elm-lang.org}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14867
#, no-wrap
msgid "guix import elm elm-explorations/webgl\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14870
msgid "The Elm importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14873
#, no-wrap
msgid "guix import elm elm-explorations/webgl@@1.1.3\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14885
#, no-wrap
msgid "npm-binary"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14886
#, no-wrap
msgid "npm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14887
#, no-wrap
msgid "Node.js"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14890
msgid "Import metadata from the @uref{https://registry.npmjs.org, npm Registry}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14893
#, no-wrap
msgid "guix import npm-binary buffer-crc32\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14896
msgid "The npm-binary importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14899
#, no-wrap
msgid "guix import npm-binary buffer-crc32@@1.0.0\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:14906
msgid "Generated package expressions skip the build step of the @code{node-build-system}. As such, generated package expressions often refer to transpiled or generated files, instead of being built from source."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14918
#, no-wrap
msgid "opam"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14919
#, no-wrap
msgid "OPAM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14920
#, no-wrap
msgid "OCaml"
msgstr "OCaml"

#. type: table
#: guix-git/doc/guix.texi:14923
msgid "Import metadata from the @uref{https://opam.ocaml.org/, OPAM} package repository used by the OCaml community."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14934
#, no-wrap
msgid "composer"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14935
#, no-wrap
msgid "Composer"
msgstr "Composer"

#. type: cindex
#: guix-git/doc/guix.texi:14936
#, no-wrap
msgid "PHP"
msgstr "PHP"

#. type: table
#: guix-git/doc/guix.texi:14939
msgid "Import metadata from the @uref{https://getcomposer.org/, Composer} package archive used by the PHP community, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14942
#, no-wrap
msgid "guix import composer phpunit/phpunit\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14952
#, no-wrap
msgid "--repo"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14956
msgid "By default, packages are searched in the official OPAM repository.  This option, which can be used more than once, lets you add other repositories which will be searched for packages.  It accepts as valid arguments:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14958
#, no-wrap
msgid "the name of a known repository - can be one of @code{opam},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14961
msgid "@code{coq} (equivalent to @code{coq-released}), @code{coq-core-dev}, @code{coq-extra-dev} or @code{grew}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14961
#, no-wrap
msgid "the URL of a repository as expected by the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14965
msgid "@code{opam repository add} command (for instance, the URL equivalent of the above @code{opam} name would be @uref{https://opam.ocaml.org})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:14965
#, no-wrap
msgid "the path to a local copy of a repository (a directory containing a"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:14967
msgid "@file{packages/} sub-directory)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14972
msgid "Repositories are assumed to be passed to this option by order of preference.  The additional repositories will not replace the default @code{opam} repository, which is always kept as a fallback."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14977
msgid "Also, please note that versions are not compared across repositories.  The first repository (from left to right) that has at least one version of a given package will prevail over any others, and the version imported will be the latest one found @emph{in this repository only}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:14980 guix-git/doc/guix.texi:14981
#, no-wrap
msgid "go"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14984
msgid "Import metadata for a Go module using @uref{https://proxy.golang.org, proxy.golang.org}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:14987
#, no-wrap
msgid "guix import go gopkg.in/yaml.v2\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:14991
msgid "It is possible to use a package specification with a @code{@@VERSION} suffix to import a specific version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15000
#, fuzzy, no-wrap
msgid "--pin-versions"
msgstr "--verbose"

#. type: table
#: guix-git/doc/guix.texi:15008
msgid "When using this option, the importer preserves the exact versions of the Go modules dependencies instead of using their latest available versions.  This can be useful when attempting to import packages that recursively depend on former versions of themselves to build.  When using this mode, the symbol of the package is made by appending the version to its name, so that multiple versions of the same package can coexist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15010 guix-git/doc/guix.texi:15011
#: guix-git/doc/guix.texi:15323
#, no-wrap
msgid "egg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15018
msgid "Import metadata for @uref{https://wiki.call-cc.org/eggs, CHICKEN eggs}.  The information is taken from @file{PACKAGE.egg} files found in the @uref{git://code.call-cc.org/eggs-5-all, eggs-5-all} Git repository.  However, it does not provide all the information that we need, there is no ``description'' field, and the licenses used are not always precise (BSD is often used instead of BSD-N)."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15021
#, no-wrap
msgid "guix import egg sourcehut\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15027
#, no-wrap
msgid "guix import egg arrays@@1.0\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15038 guix-git/doc/guix.texi:15039
#, no-wrap
msgid "hexpm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15042
msgid "Import metadata from the hex.pm Erlang and Elixir package repository @uref{https://hex.pm, hex.pm}, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15045
#, no-wrap
msgid "guix import hexpm stun\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15048
msgid "The importer tries to determine the build system used by the package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15050
msgid "The hexpm importer also allows you to specify a version string:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15053
#, no-wrap
msgid "guix import hexpm cf@@0.3.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15069
msgid "The structure of the @command{guix import} code is modular.  It would be useful to have more importers for other package formats, and your help is welcome here (@pxref{Contributing})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15071
#, no-wrap
msgid "Invoking @command{guix refresh}"
msgstr "Invocando @command{guix refresh}"

#. type: command{#1}
#: guix-git/doc/guix.texi:15073
#, no-wrap
msgid "guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15081
msgid "The primary audience of the @command{guix refresh} command is packagers.  As a user, you may be interested in the @option{--with-latest} option, which can bring you package update superpowers built upon @command{guix refresh} (@pxref{Package Transformation Options, @option{--with-latest}}).  By default, @command{guix refresh} reports any packages provided by the distribution that are outdated compared to the latest upstream version, like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15086
#, no-wrap
msgid ""
"$ guix refresh\n"
"gnu/packages/gettext.scm:29:13: gettext would be upgraded from 0.18.1.1 to 0.18.2.1\n"
"gnu/packages/glib.scm:77:12: glib would be upgraded from 2.34.3 to 2.37.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15090
msgid "Alternatively, one can specify packages to consider, in which case a warning is emitted for packages that lack an updater:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15095
#, no-wrap
msgid ""
"$ guix refresh coreutils guile guile-ssh\n"
"gnu/packages/ssh.scm:205:2: warning: no updater for guile-ssh\n"
"gnu/packages/guile.scm:136:12: guile would be upgraded from 2.0.12 to 2.0.13\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15104
msgid "@command{guix refresh} browses the upstream repository of each package and determines the highest version number of the releases therein.  The command knows how to update specific types of packages: GNU packages, ELPA packages, etc.---see the documentation for @option{--type} below.  There are many packages, though, for which it lacks a method to determine whether a new upstream release is available.  However, the mechanism is extensible, so feel free to get in touch with us to add a new method!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15109
msgid "Consider the packages specified, and all the packages upon which they depend."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15117
#, no-wrap
msgid ""
"$ guix refresh --recursive coreutils\n"
"gnu/packages/acl.scm:40:13: acl would be upgraded from 2.2.53 to 2.3.1\n"
"gnu/packages/m4.scm:30:12: 1.4.18 is already the latest version of m4\n"
"gnu/packages/xml.scm:68:2: warning: no updater for expat\n"
"gnu/packages/multiprecision.scm:40:12: 6.1.2 is already the latest version of gmp\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15126
msgid "If for some reason you don't want to update to the latest version, you can update to a specific version by appending an equal sign and the desired version number to the package specification.  Note that not all updaters support this; an error is reported when an updater cannot refresh to the specified version."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15138
#, no-wrap
msgid ""
"$ guix refresh trytond-party\n"
"gnu/packages/guile.scm:392:2: guile would be upgraded from 3.0.3 to 3.0.5\n"
"$ guix refresh -u guile=3.0.4\n"
"@dots{}\n"
"gnu/packages/guile.scm:392:2: guile: updating from version 3.0.3 to version 3.0.4...\n"
"@dots{}\n"
"$ guix refresh -u guile@@2.0=2.0.12\n"
"@dots{}\n"
"gnu/packages/guile.scm:147:2: guile: updating from version 2.0.10 to version 2.0.12...\n"
"@dots{}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15140
#, fuzzy, no-wrap
#| msgid "Invoking guix refresh"
msgid "target version, guix refresh"
msgstr "Invocando guix refresh"

#. type: Plain text
#: guix-git/doc/guix.texi:15145
msgid "In some specific cases, you may have many packages specified via a manifest or a module selection which should all be updated together; for these cases, the @option{--target-version} option can be provided to have them all refreshed to the same version, as shown in the examples below:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15150
#, no-wrap
msgid ""
"$ guix refresh qtbase qtdeclarative --target-version=6.5.2\n"
"gnu/packages/qt.scm:1248:13: qtdeclarative would be upgraded from 6.3.2 to 6.5.2\n"
"gnu/packages/qt.scm:584:2: qtbase would be upgraded from 6.3.2 to 6.5.2\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15159
#, no-wrap
msgid ""
"$ guix refresh --manifest=qt5-manifest.scm --target-version=5.15.10\n"
"gnu/packages/qt.scm:1173:13: qtxmlpatterns would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:1202:13: qtdeclarative would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:1762:13: qtserialbus would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:2070:13: qtquickcontrols2 would be upgraded from 5.15.8 to 5.15.10\n"
"@dots{}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15161
#, no-wrap
msgid "partial target version, guix refresh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15165
msgid "The @option{--target-version} option accepts partial version prefixes, which can be useful to update to the latest major or major-minor prefixed version:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15170
#, no-wrap
msgid ""
"$ guix refresh qtbase@@5 qtdeclarative@@5 --target-version=5\n"
"gnu/packages/qt.scm:1472:13: qtdeclarative would be upgraded from 5.15.8 to 5.15.10\n"
"gnu/packages/qt.scm:452:13: qtbase would be upgraded from 5.15.8 to 5.15.10\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15172
#, fuzzy, no-wrap
#| msgid "Invoking guix refresh"
msgid "partial version specification, guix refresh"
msgstr "Invocando guix refresh"

#. type: Plain text
#: guix-git/doc/guix.texi:15176
msgid "A per-package equivalent to --target-version is made available by prefixing the version specification with the @samp{~} (tilde) character.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15181
#, no-wrap
msgid ""
"$ guix refresh bash=~5 guile=~3\n"
"gnu/packages/guile.scm:354:13: guile would be upgraded from 3.0.9 to 3.0.10\n"
"gnu/packages/bash.scm:150:15: bash would be upgraded from 5.1.16 to 5.2.37\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15187
msgid "Sometimes the upstream name differs from the package name used in Guix, and @command{guix refresh} needs a little help.  Most updaters honor the @code{upstream-name} property in package definitions, which can be used to that effect:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15194
#, no-wrap
msgid ""
"(define-public network-manager\n"
"  (package\n"
"    (name \"network-manager\")\n"
"    ;; @dots{}\n"
"    (properties '((upstream-name . \"NetworkManager\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15204
msgid "When passed @option{--update}, it modifies distribution source files to update the version numbers and source code hashes of those package definitions, as well as possibly their inputs (@pxref{Defining Packages}).  This is achieved by downloading each package's latest source tarball and its associated OpenPGP signature, authenticating the downloaded tarball against its signature using @command{gpgv}, and finally computing its hash---note that GnuPG must be installed and in @code{$PATH}; run @code{guix install gnupg} if needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15210
msgid "When the public key used to sign the tarball is missing from the user's keyring, an attempt is made to automatically retrieve it from a public key server; when this is successful, the key is added to the user's keyring; otherwise, @command{guix refresh} reports an error."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15212
msgid "The following options are supported:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15220 guix-git/doc/guix.texi:16353
msgid "This is useful to precisely refer to a package, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15223
#, no-wrap
msgid "guix refresh -l -e '(@@@@ (gnu packages commencement) glibc-final)'\n"
msgstr "guix refresh -l -e '(@@@@ (gnu packages commencement) glibc-final)'\n"

#. type: table
#: guix-git/doc/guix.texi:15227
msgid "This command lists the dependents of the ``final'' libc (essentially all the packages)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15233
msgid "Update distribution source files (package definitions) in place.  This is usually run from a checkout of the Guix source tree (@pxref{Running Guix Before It Is Installed}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15236
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgid "./pre-inst-env guix refresh -s non-core -u\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: table
#: guix-git/doc/guix.texi:15240
msgid "@xref{Defining Packages}, for more information on package definitions.  You can also run it on packages from a third-party channel:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15243
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgid "guix refresh -L /path/to/channel -u @var{package}\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: table
#: guix-git/doc/guix.texi:15246
msgid "@xref{Creating a Channel}, on how to create a channel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15252
msgid "This command updates the version and source code hash of the package.  Depending on the updater being used, it can also update the various @samp{inputs} fields of the package.  In some cases, the updater might get inputs wrong---it might not know about an extra input that's necessary, or it might add an input that should be avoided."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15253
#, no-wrap
msgid "@code{updater-extra-inputs}, package property"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15254
#, no-wrap
msgid "@code{updater-ignored-inputs}, package property"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15262
msgid "To address that, packagers can add properties stating inputs that should be added to those found by the updater or inputs that should be ignored: the @code{updater-extra-inputs} and @code{updater-ignored-inputs} properties pertain to ``regular'' inputs, and there are equivalent properties for @samp{native} and @samp{propagated} inputs.  In the example below, we tell the updater that we need @samp{openmpi} as an additional input:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15271
#, no-wrap
msgid ""
"(define-public python-mpi4py\n"
"  (package\n"
"    (name \"python-mpi4py\")\n"
"    ;; @dots{}\n"
"    (inputs (list openmpi))\n"
"    (properties\n"
"     '((updater-extra-inputs . (\"openmpi\"))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15276
msgid "That way, @command{guix refresh -u python-mpi4py} will leave the @samp{openmpi} input, even if it is not among the inputs it would normally add."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15277
#, no-wrap
msgid "--select=[@var{subset}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15278
#, no-wrap
msgid "-s @var{subset}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15281
msgid "Select all the packages in @var{subset}, one of @code{core}, @code{non-core} or @code{module:@var{name}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15288
msgid "The @code{core} subset refers to all the packages at the core of the distribution---i.e., packages that are used to build ``everything else''.  This includes GCC, libc, Binutils, Bash, etc.  Usually, changing one of these packages in the distribution entails a rebuild of all the others.  Thus, such updates are an inconvenience to users in terms of build time or bandwidth used to achieve the upgrade."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15292
msgid "The @code{non-core} subset refers to the remaining packages.  It is typically useful in cases where an update of the core packages would be inconvenient."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15297
msgid "The @code{module:@var{name}} subset refers to all the packages in a specified guile module.  The module can be specified as @code{module:guile} or @code{module:(gnu packages guile)}, the former is a shorthand for the later."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15302
msgid "Select all the packages from the manifest in @var{file}.  This is useful to check if any packages of the user manifest can be updated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15303
#, no-wrap
msgid "--type=@var{updater}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15304
#, no-wrap
msgid "-t @var{updater}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15307
msgid "Select only packages handled by @var{updater} (may be a comma-separated list of updaters).  Currently, @var{updater} may be one of:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15311
msgid "the updater for GNU packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15311
#, no-wrap
msgid "savannah"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15313
msgid "the updater for packages hosted at @uref{https://savannah.gnu.org, Savannah};"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15313
#, no-wrap
msgid "sourceforge"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15315
msgid "the updater for packages hosted at @uref{https://sourceforge.net, SourceForge};"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15315
#, no-wrap
msgid "gnome"
msgstr "gnome"

#. type: table
#: guix-git/doc/guix.texi:15317
msgid "the updater for GNOME packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15317
#, no-wrap
msgid "kde"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15319
msgid "the updater for KDE packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15319
#, no-wrap
msgid "xorg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15321
msgid "the updater for X.org packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15321
#, no-wrap
msgid "kernel.org"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15323
msgid "the updater for packages hosted on kernel.org;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15325
msgid "the updater for @uref{https://wiki.call-cc.org/eggs/, Egg} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15327
msgid "the updater for @uref{https://elpa.gnu.org/, ELPA} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15329
msgid "the updater for @uref{https://cran.r-project.org/, CRAN} packages;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15329
#, no-wrap
msgid "bioconductor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15331
msgid "the updater for @uref{https://www.bioconductor.org/, Bioconductor} R packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15333
msgid "the updater for @uref{https://www.cpan.org/, CPAN} packages;"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15335
msgid "the updater for @uref{https://pypi.python.org, PyPI} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15337
msgid "the updater for @uref{https://rubygems.org, RubyGems} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15337
#, no-wrap
msgid "github"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15339
msgid "the updater for @uref{https://github.com, GitHub} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15341
msgid "the updater for @uref{https://hackage.haskell.org, Hackage} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15343
msgid "the updater for @uref{https://www.stackage.org, Stackage} packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15345
msgid "the updater for @uref{https://crates.io, Crates} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15345
#, no-wrap
msgid "launchpad"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15347
msgid "the updater for @uref{https://launchpad.net, Launchpad} packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15347
#, no-wrap
msgid "generic-html"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15351
msgid "a generic updater that crawls the HTML page where the source tarball of the package is hosted, when applicable, or the HTML page specified by the @code{release-monitoring-url} property of the package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15352
#, no-wrap
msgid "generic-git"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15357
msgid "a generic updater for packages hosted on Git repositories.  It tries to be smart about parsing Git tag names, but if it is not able to parse the tag name and compare tags correctly, users can define the following properties for a package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15359
#, no-wrap
msgid "@code{release-tag-prefix}: a regular expression for matching a prefix of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15361 guix-git/doc/guix.texi:15364
msgid "the tag name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15362
#, no-wrap
msgid "@code{release-tag-suffix}: a regular expression for matching a suffix of"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15365
#, no-wrap
msgid "@code{release-tag-version-delimiter}: a string used as the delimiter in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15367
msgid "the tag name for separating the numbers of the version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15368
#, no-wrap
msgid "@code{accept-pre-releases}: by default, the updater will ignore"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15371
msgid "pre-releases; to make it also look for pre-releases, set the this property to @code{#t}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15382
#, no-wrap
msgid ""
"(package\n"
"  (name \"foo\")\n"
"  ;; ...\n"
"  (properties\n"
"    '((release-tag-prefix . \"^release0-\")\n"
"      (release-tag-suffix . \"[a-z]?$\")\n"
"      (release-tag-version-delimiter . \":\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15389
msgid "For instance, the following command only checks for updates of Emacs packages hosted at @code{elpa.gnu.org} and for updates of CRAN packages:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15394
#, no-wrap
msgid ""
"$ guix refresh --type=elpa,cran\n"
"gnu/packages/statistics.scm:819:13: r-testthat would be upgraded from 0.10.0 to 0.11.0\n"
"gnu/packages/emacs.scm:856:13: emacs-auctex would be upgraded from 11.88.6 to 11.88.9\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15396
#, no-wrap
msgid "--list-updaters"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15398
msgid "List available updaters and exit (see @option{--type} above)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15401
msgid "For each updater, display the fraction of packages it covers; at the end, display the fraction of packages covered by all these updaters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15405
msgid "In addition, @command{guix refresh} can be passed one or more package names, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15408
#, no-wrap
msgid "$ ./pre-inst-env guix refresh -u emacs idutils gcc@@4.8\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15415
msgid "The command above specifically updates the @code{emacs} and @code{idutils} packages.  The @option{--select} option would have no effect in this case.  You might also want to update definitions that correspond to the packages installed in your profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15419
#, no-wrap
msgid ""
"$ ./pre-inst-env guix refresh -u \\\n"
"       $(guix package --list-installed | cut -f1)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15425
msgid "When considering whether to upgrade a package, it is sometimes convenient to know which packages would be affected by the upgrade and should be checked for compatibility.  For this the following option may be used when passing @command{guix refresh} one or more package names:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15428
#, no-wrap
msgid "--list-dependent"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15429 guix-git/doc/guix.texi:15714
#: guix-git/doc/guix.texi:15924
#, no-wrap
msgid "-l"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15432
msgid "List top-level dependent packages that would need to be rebuilt as a result of upgrading one or more packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15436
msgid "@xref{Invoking guix graph, the @code{reverse-package} type of @command{guix graph}}, for information on how to visualize the list of dependents of a package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15439
msgid "@xref{build-dependents, @command{guix build --dependents}}, for a convenient way to build all the dependents of a package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15444
msgid "Be aware that the @option{--list-dependent} option only @emph{approximates} the rebuilds that would be required as a result of an upgrade.  More rebuilds might be required under some circumstances."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15449
#, no-wrap
msgid ""
"$ guix refresh --list-dependent flex\n"
"Building the following 120 packages would ensure 213 dependent packages are rebuilt:\n"
"hop@@2.4.0 emacs-geiser@@0.13 notmuch@@0.18 mu@@0.9.9.5 cflow@@1.4 idutils@@4.6 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15453
msgid "The command above lists a set of packages that could be built to check for compatibility with an upgraded @code{flex} package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15456
#, no-wrap
msgid "--list-transitive"
msgstr "--list-transitive"

#. type: itemx
#: guix-git/doc/guix.texi:15457
#, no-wrap
msgid "-T"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15459
msgid "List all the packages which one or more packages depend upon."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15464
#, no-wrap
msgid ""
"$ guix refresh --list-transitive flex\n"
"flex@@2.6.4 depends on the following 25 packages: perl@@5.28.0 help2man@@1.47.6\n"
"bison@@3.0.5 indent@@2.2.10 tar@@1.30 gzip@@1.9 bzip2@@1.0.6 xz@@5.2.4 file@@5.33 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15470
msgid "The command above lists a set of packages which, when changed, would cause @code{flex} to be rebuilt."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15472
msgid "The following options can be used to customize GnuPG operation:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15475
#, no-wrap
msgid "--gpg=@var{command}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15478
msgid "Use @var{command} as the GnuPG 2.x command.  @var{command} is searched for in @code{$PATH}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15479
#, no-wrap
msgid "--keyring=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15485
msgid "Use @var{file} as the keyring for upstream keys.  @var{file} must be in the @dfn{keybox format}.  Keybox files usually have a name ending in @file{.kbx} and the GNU@tie{}Privacy Guard (GPG) can manipulate these files (@pxref{kbxutil, @command{kbxutil},, gnupg, Using the GNU Privacy Guard}, for information on a tool to manipulate keybox files)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15491
msgid "When this option is omitted, @command{guix refresh} uses @file{~/.config/guix/upstream/trustedkeys.kbx} as the keyring for upstream signing keys.  OpenPGP signatures are checked against keys from this keyring; missing keys are downloaded to this keyring as well (see @option{--key-download} below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15493
msgid "You can fetch keys to a specific keybox file like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15497
#, no-wrap
msgid ""
"gpg --no-default-keyring --keyring mykeyring.kbx \\\n"
"  --recv-keys @value{OPENPGP-SIGNING-KEY-ID}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15501
msgid "@xref{GPG Configuration Options, @option{--keyring},, gnupg, Using the GNU Privacy Guard}, for more information on GPG's @option{--keyring} option."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15505
msgid "Handle missing OpenPGP keys according to @var{policy}, which may be one of:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15507 guix-git/doc/guix.texi:15749
#: guix-git/doc/guix.texi:29075
#, no-wrap
msgid "always"
msgstr "always"

#. type: table
#: guix-git/doc/guix.texi:15510
msgid "Always download missing OpenPGP keys from the key server, and add them to the user's GnuPG keyring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15511 guix-git/doc/guix.texi:29077
#, no-wrap
msgid "never"
msgstr "never"

#. type: table
#: guix-git/doc/guix.texi:15513
msgid "Never try to download missing OpenPGP keys.  Instead just bail out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15514
#, no-wrap
msgid "interactive"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15517
msgid "When a package signed with an unknown OpenPGP key is encountered, ask the user whether to download it or not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15518
#, no-wrap
msgid "auto"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15522
msgid "Automatically selects the @code{interactive} policy when the standard input is connected to a pseudo terminal (TTY), else @code{always}.  This is the default behavior."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15524
#, no-wrap
msgid "--key-server=@var{host}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15526
msgid "Use @var{host} as the OpenPGP key server when importing a public key."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15547
msgid "The @code{github} updater uses the @uref{https://developer.github.com/v3/, GitHub API} to query for new releases.  When used repeatedly e.g.@: when refreshing all packages, GitHub will eventually refuse to answer any further API requests.  By default 60 API requests per hour are allowed, and a full refresh on all GitHub packages in Guix requires more than this.  Authentication with GitHub through the use of an API token alleviates these limits.  To use an API token, set the environment variable @env{GUIX_GITHUB_TOKEN} to a token procured from @uref{https://github.com/settings/tokens} or otherwise."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15550
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix size}"
msgid "Invoking @command{guix style}"
msgstr "Invocando @command{guix size}"

#. type: command{#1}
#: guix-git/doc/guix.texi:15552
#, fuzzy, no-wrap
#| msgid "Invoking guix system"
msgid "guix style"
msgstr "Invocando guix system"

#. type: cindex
#: guix-git/doc/guix.texi:15553
#, fuzzy, no-wrap
#| msgid "--root=@var{file}"
msgid "styling rules"
msgstr "--root=@var{arquivo}"

#. type: cindex
#: guix-git/doc/guix.texi:15554
#, fuzzy, no-wrap
#| msgid "coding style"
msgid "lint, code style"
msgstr "estilo de codificação"

#. type: cindex
#: guix-git/doc/guix.texi:15555
#, fuzzy, no-wrap
#| msgid "formatting code"
msgid "format, code style"
msgstr "formatação de código"

#. type: cindex
#: guix-git/doc/guix.texi:15556
#, fuzzy, no-wrap
#| msgid "Writing conventions."
msgid "format conventions"
msgstr "Convenções de escrita."

#. type: Plain text
#: guix-git/doc/guix.texi:15563
msgid "The @command{guix style} command helps users and packagers alike style their package definitions and configuration files according to the latest fashionable trends.  It can either reformat whole files, with the @option{--whole-file} option, or apply specific @dfn{styling rules} to individual package definitions.  The command currently provides the following styling rules:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15568
msgid "formatting package definitions according to the project's conventions (@pxref{Formatting Code});"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:15571
msgid "rewriting package inputs to the ``new style'', as explained below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15577
msgid "The way package inputs are written is going through a transition (@pxref{package Reference}, for more on package inputs).  Until version 1.3.0, package inputs were written using the ``old style'', where each input was given an explicit label, most of the time the package name:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15584
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  ;; The \"old style\" (deprecated).\n"
"  (inputs `((\"libunistring\" ,libunistring)\n"
"            (\"libffi\" ,libffi))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15588
msgid "Today, the old style is deprecated and the preferred style looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15594
#, no-wrap
msgid ""
"(package\n"
"  ;; @dots{}\n"
"  ;; The \"new style\".\n"
"  (inputs (list libunistring libffi)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15599
msgid "Likewise, uses of @code{alist-delete} and friends to manipulate inputs is now deprecated in favor of @code{modify-inputs} (@pxref{Defining Package Variants}, for more info on @code{modify-inputs})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15604
msgid "In the vast majority of cases, this is a purely mechanical change on the surface syntax that does not even incur a package rebuild.  Running @command{guix style -S inputs} can do that for you, whether you're working on packages in Guix proper or in an external channel."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15609
#, no-wrap
msgid "guix style [@var{options}] @var{package}@dots{}\n"
msgstr "guix style [@var{options}] @var{package}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:15616
msgid "This causes @command{guix style} to analyze and rewrite the definition of @var{package}@dots{} or, when @var{package} is omitted, of @emph{all} the packages.  The @option{--styling} or @option{-S} option allows you to select the style rule, the default rule being @code{format}---see below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15618
msgid "To reformat entire source files, the syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15621
#, fuzzy, no-wrap
#| msgid "guix style [@var{options}] @var{package}@dots{}\n"
msgid "guix style --whole-file @var{file}@dots{}\n"
msgstr "guix style [@var{options}] @var{package}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:15624 guix-git/doc/guix.texi:17044
msgid "The available options are listed below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15629
msgid "Show source file locations that would be edited but do not modify them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15630
#, no-wrap
msgid "--whole-file"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15631
#, no-wrap
msgid "-f"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15635
msgid "Reformat the given files in their entirety.  In that case, subsequent arguments are interpreted as file names (rather than package names), and the @option{--styling} option has no effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15638
msgid "As an example, here is how you might reformat your operating system configuration (you need write permissions for the file):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15641
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix style -f /etc/config.scm\n"
msgstr "$ guix system list-generations 10d\n"

#. type: item
#: guix-git/doc/guix.texi:15643
#, no-wrap
msgid "--alphabetical-sort"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15644
#, no-wrap
msgid "-A"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15649
msgid "Place the top-level package definitions in the given files in alphabetical order.  Package definitions with matching names are placed with versions in descending order.  This option only has an effect in combination with @option{--whole-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15650
#, fuzzy, no-wrap
#| msgid "--root=@var{file}"
msgid "--styling=@var{rule}"
msgstr "--root=@var{arquivo}"

#. type: itemx
#: guix-git/doc/guix.texi:15651
#, fuzzy, no-wrap
#| msgid "-f @var{file}"
msgid "-S @var{rule}"
msgstr "-f @var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:15653
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "Apply @var{rule}, one of the following styling rules:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: code{#1}
#: guix-git/doc/guix.texi:15655 guix-git/doc/guix.texi:52950
#, no-wrap
msgid "format"
msgstr "format"

#. type: table
#: guix-git/doc/guix.texi:15660
msgid "Format the given package definition(s)---this is the default styling rule.  For example, a packager running Guix on a checkout (@pxref{Running Guix Before It Is Installed}) might want to reformat the definition of the Coreutils package like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15663
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgid "./pre-inst-env guix style coreutils\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: item
#: guix-git/doc/guix.texi:15665
#, no-wrap
msgid "inputs"
msgstr "inputs"

#. type: table
#: guix-git/doc/guix.texi:15669
msgid "Rewrite package inputs to the ``new style'', as described above.  This is how you would rewrite inputs of package @code{whatnot} in your own channel:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15672
#, no-wrap
msgid "guix style -L ~/my/channel -S inputs whatnot\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15678
msgid "Rewriting is done in a conservative way: preserving comments and bailing out if it cannot make sense of the code that appears in an inputs field.  The @option{--input-simplification} option described below provides fine-grain control over when inputs should be simplified."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:15679 guix-git/doc/guix.texi:21852
#: guix-git/doc/guix.texi:42836
#, no-wrap
msgid "arguments"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15682
msgid "Rewrite package arguments to use G-expressions (@pxref{G-Expressions}).  For example, consider this package definition:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15691
#, no-wrap
msgid ""
"(define-public my-package\n"
"  (package\n"
"    ;; @dots{}\n"
"    (arguments      ;old-style quoted arguments\n"
"     '(#:make-flags '(\"V=1\")\n"
"       #:phases (modify-phases %standard-phases\n"
"                  (delete 'build))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15696
msgid "Running @command{guix style -S arguments} on this package would rewrite its @code{arguments} field like to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15705
#, no-wrap
msgid ""
"(define-public my-package\n"
"  (package\n"
"    ;; @dots{}\n"
"    (arguments\n"
"      (list #:make-flags #~'(\"V=1\")\n"
"            #:phases #~(modify-phases %standard-phases\n"
"                         (delete 'build))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15711
msgid "Note that changes made by the @code{arguments} rule do not entail a rebuild of the affected packages.  Furthermore, if a package definition happens to be using G-expressions already, @command{guix style} leaves it unchanged."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15713
#, fuzzy, no-wrap
#| msgid "--list-live"
msgid "--list-stylings"
msgstr "--list-live"

#. type: table
#: guix-git/doc/guix.texi:15716
msgid "List and describe the available styling rules and exit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15725
msgid "Style the package @var{expr} evaluates to."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15730
#, no-wrap
msgid "guix style -e '(@@ (gnu packages gcc) gcc-5)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15733
#, fuzzy
#| msgid "Editing package definitions."
msgid "styles the @code{gcc-5} package definition."
msgstr "Editando definições de pacote."

#. type: item
#: guix-git/doc/guix.texi:15734
#, no-wrap
msgid "--input-simplification=@var{policy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15739
msgid "When using the @code{inputs} styling rule, with @samp{-S inputs}, this option specifies the package input simplification policy for cases where an input label does not match the corresponding package name.  @var{policy} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15741
#, no-wrap
msgid "silent"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15744
msgid "Simplify inputs only when the change is ``silent'', meaning that the package does not need to be rebuilt (its derivation is unchanged)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15745
#, no-wrap
msgid "safe"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15748
msgid "Simplify inputs only when that is ``safe'' to do: the package might need to be rebuilt, but the change is known to have no observable effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15752
msgid "Simplify inputs even when input labels do not match package names, and even if that might have an observable effect."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15756
msgid "The default is @code{silent}, meaning that input simplifications do not trigger any package rebuild."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15759
#, no-wrap
msgid "Invoking @command{guix lint}"
msgstr "Invocando @command{guix lint}"

#. type: command{#1}
#: guix-git/doc/guix.texi:15761
#, no-wrap
msgid "guix lint"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15762
#, no-wrap
msgid "package, checking for errors"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15768
msgid "The @command{guix lint} command is meant to help package developers avoid common errors and use a consistent style.  It runs a number of checks on a given set of packages in order to find common mistakes in their definitions.  Available @dfn{checkers} include (see @option{--list-checkers} for a complete list):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15774
msgid "Validate certain typographical and stylistic rules about package descriptions and synopses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15775
#, no-wrap
msgid "inputs-should-be-native"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15777
msgid "Identify inputs that should most likely be native inputs."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15780
#, no-wrap
msgid "mirror-url"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15781
#, no-wrap
msgid "github-url"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:15782
#, no-wrap
msgid "source-file-name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15789
msgid "Probe @code{home-page} and @code{source} URLs and report those that are invalid.  Suggest a @code{mirror://} URL when applicable.  If the @code{source} URL redirects to a GitHub URL, recommend usage of the GitHub URL@.  Check that the source file name is meaningful, e.g.@: is not just a version number or ``git-checkout'', without a declared @code{file-name} (@pxref{origin Reference})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15790
#, no-wrap
msgid "source-unstable-tarball"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15794
msgid "Parse the @code{source} URL to determine if a tarball from GitHub is autogenerated or if it is a release tarball.  Unfortunately GitHub's autogenerated tarballs are sometimes regenerated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15798
msgid "Check that the derivation of the given packages can be successfully computed for all the supported systems (@pxref{Derivations})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15799
#, no-wrap
msgid "profile-collisions"
msgstr "profile-collisions"

#. type: table
#: guix-git/doc/guix.texi:15805
msgid "Check whether installing the given packages in a profile would lead to collisions.  Collisions occur when several packages with the same name but a different version or a different store file name are propagated.  @xref{package Reference, @code{propagated-inputs}}, for more information on propagated inputs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15806
#, no-wrap
msgid "archival"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15807
#, no-wrap
msgid "Software Heritage, source code archive"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15808
#, no-wrap
msgid "archival of source code, Software Heritage"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15811
msgid "Checks whether the package's source code is archived at @uref{https://www.softwareheritage.org, Software Heritage}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15819
msgid "When the source code that is not archived comes from a version-control system (VCS)---e.g., it's obtained with @code{git-fetch}, send Software Heritage a ``save'' request so that it eventually archives it.  This ensures that the source will remain available in the long term, and that Guix can fall back to Software Heritage should the source code disappear from its original host.  The status of recent ``save'' requests can be @uref{https://archive.softwareheritage.org/save/#requests, viewed on-line}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15824
msgid "When source code is a tarball obtained with @code{url-fetch}, simply print a message when it is not archived.  As of this writing, Software Heritage does not allow requests to save arbitrary tarballs; we are working on ways to ensure that non-VCS source code is also archived."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15830
msgid "Software Heritage @uref{https://archive.softwareheritage.org/api/#rate-limiting, limits the request rate per IP address}.  When the limit is reached, @command{guix lint} prints a message and the @code{archival} checker stops doing anything until that limit has been reset."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15831
#, no-wrap
msgid "cve"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15832 guix-git/doc/guix.texi:53720
#, no-wrap
msgid "security vulnerabilities"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:15833
#, no-wrap
msgid "CVE, Common Vulnerabilities and Exposures"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15838
msgid "Report known vulnerabilities found in the Common Vulnerabilities and Exposures (CVE) databases of the current and past year @uref{https://nvd.nist.gov/vuln/data-feeds, published by the US NIST}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15840
msgid "To view information about a particular vulnerability, visit pages such as:"
msgstr ""

#. type: indicateurl{#1}
#: guix-git/doc/guix.texi:15844
msgid "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-YYYY-ABCD"
msgstr ""

#. type: indicateurl{#1}
#: guix-git/doc/guix.texi:15846
msgid "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-YYYY-ABCD"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15851
msgid "where @code{CVE-YYYY-ABCD} is the CVE identifier---e.g., @code{CVE-2015-7554}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15856
msgid "Package developers can specify in package recipes the @uref{https://nvd.nist.gov/products/cpe,Common Platform Enumeration (CPE)} name and version of the package when they differ from the name or version that Guix uses, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15864
#, no-wrap
msgid ""
"(package\n"
"  (name \"grub\")\n"
"  ;; @dots{}\n"
"  ;; CPE calls this package \"grub2\".\n"
"  (properties '((cpe-name . \"grub2\")\n"
"                (cpe-version . \"2.3\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15870
msgid "A CVE alert can be a false positive when its CPE name matches the one in Guix, while actually referring to a distinct product.  These alerts can be addressed by setting the correct CPE vendor, or when no vendors apply, by ignoring alerts from irrelevant vendors, as in these examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15876
#, no-wrap
msgid ""
"(package\n"
"  (name \"halibut\")\n"
"  ;; @dots{}\n"
"  (properties '((cpe-vendor . \"halibut_project\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15882
#, no-wrap
msgid ""
"(package\n"
"  (name \"cvs\")\n"
"  ;; @dots{}\n"
"  (properties '((lint-hidden-cpe-vendors . (\"jenkins\"\n"
"                                            \"vendor2\")))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15889
msgid "Finally, some entries in the CVE database do not specify which version of a package they apply to, and would thus ``stick around'' forever.  Package developers who found CVE alerts and verified they can be ignored can declare them as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:15899
#, no-wrap
msgid ""
"(package\n"
"  (name \"t1lib\")\n"
"  ;; @dots{}\n"
"  ;; These CVEs no longer apply and can be safely ignored.\n"
"  (properties `((lint-hidden-cve . (\"CVE-2011-0433\"\n"
"                                    \"CVE-2011-1553\"\n"
"                                    \"CVE-2011-1554\"\n"
"                                    \"CVE-2011-5244\")))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15901
#, no-wrap
msgid "formatting"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15904
msgid "Warn about obvious source code formatting issues: trailing white space, use of tabulations, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15905
#, no-wrap
msgid "input-labels"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15911
msgid "Report old-style input labels that do not match the name of the corresponding package.  This aims to help migrate from the ``old input style''.  @xref{package Reference}, for more information on package inputs and input styles.  @xref{Invoking guix style}, on how to migrate to the new style."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15917
#, no-wrap
msgid "guix lint @var{options} @var{package}@dots{}\n"
msgstr "guix lint @var{opções} @var{pacote}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:15921
msgid "If no package is given on the command line, then all packages are checked.  The @var{options} may be zero or more of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15923
#, no-wrap
msgid "--list-checkers"
msgstr "--list-checkers"

#. type: table
#: guix-git/doc/guix.texi:15927
msgid "List and describe all the available checkers that will be run on packages and exit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15928
#, no-wrap
msgid "--checkers"
msgstr "--checkers"

#. type: itemx
#: guix-git/doc/guix.texi:15929
#, no-wrap
msgid "-c"
msgstr "-c"

#. type: table
#: guix-git/doc/guix.texi:15932
msgid "Only enable the checkers specified in a comma-separated list using the names returned by @option{--list-checkers}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15933
#, no-wrap
msgid "--exclude"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15937
msgid "Only disable the checkers specified in a comma-separated list using the names returned by @option{--list-checkers}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15943
msgid "This is useful to unambiguously designate packages, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15946
#, no-wrap
msgid "guix lint -c archival -e '(@@ (gnu packages guile) guile-3.0)'\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:15948
#, no-wrap
msgid "--no-network"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:15951
msgid "Only enable the checkers that do not depend on Internet access."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:15963
#, no-wrap
msgid "Invoking @command{guix size}"
msgstr "Invocando @command{guix size}"

#. type: code{#1}
#: guix-git/doc/guix.texi:15965 guix-git/doc/guix.texi:47293
#, no-wrap
msgid "size"
msgstr "size"

#. type: cindex
#: guix-git/doc/guix.texi:15966
#, no-wrap
msgid "package size"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:15968
#, no-wrap
msgid "guix size"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15975
msgid "The @command{guix size} command helps package developers profile the disk usage of packages.  It is easy to overlook the impact of an additional dependency added to a package, or the impact of using a single output for a package that could easily be split (@pxref{Packages with Multiple Outputs}).  Such are the typical issues that @command{guix size} can highlight."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15980
msgid "The command can be passed one or more package specifications such as @code{gcc@@4.8} or @code{guile:debug}, or a file name in the store.  Consider this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:15993
#, no-wrap
msgid ""
"$ guix size coreutils\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-gcc-5.5.0-lib           60.4    30.1  38.1%\n"
"/gnu/store/@dots{}-glibc-2.27              30.3    28.8  36.6%\n"
"/gnu/store/@dots{}-coreutils-8.28          78.9    15.0  19.0%\n"
"/gnu/store/@dots{}-gmp-6.1.2               63.1     2.7   3.4%\n"
"/gnu/store/@dots{}-bash-static-4.4.12       1.5     1.5   1.9%\n"
"/gnu/store/@dots{}-acl-2.2.52              61.1     0.4   0.5%\n"
"/gnu/store/@dots{}-attr-2.4.47             60.6     0.2   0.3%\n"
"/gnu/store/@dots{}-libcap-2.25             60.5     0.2   0.2%\n"
"total: 78.9 MiB\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:15999
msgid "The store items listed here constitute the @dfn{transitive closure} of Coreutils---i.e., Coreutils and all its dependencies, recursively---as would be returned by:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16002
#, no-wrap
msgid "$ guix gc -R /gnu/store/@dots{}-coreutils-8.23\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16010
msgid "Here the output shows three columns next to store items.  The first column, labeled ``total'', shows the size in mebibytes (MiB) of the closure of the store item---that is, its own size plus the size of all its dependencies.  The next column, labeled ``self'', shows the size of the item itself.  The last column shows the ratio of the size of the item itself to the space occupied by all the items listed here."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16016
msgid "In this example, we see that the closure of Coreutils weighs in at 79@tie{}MiB, most of which is taken by libc and GCC's run-time support libraries.  (That libc and GCC's libraries represent a large fraction of the closure is not a problem @i{per se} because they are always available on the system anyway.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16019
msgid "Since the command also accepts store file names, assessing the size of a build result is straightforward:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16022
#, no-wrap
msgid "guix size $(guix system build config.scm)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16032
msgid "When the package(s) passed to @command{guix size} are available in the store@footnote{More precisely, @command{guix size} looks for the @emph{ungrafted} variant of the given package(s), as returned by @code{guix build @var{package} --no-grafts}.  @xref{Security Updates}, for information on grafts.}, @command{guix size} queries the daemon to determine its dependencies, and measures its size in the store, similar to @command{du -ms --apparent-size} (@pxref{du invocation,,, coreutils, GNU Coreutils})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16037
msgid "When the given packages are @emph{not} in the store, @command{guix size} reports information based on the available substitutes (@pxref{Substitutes}).  This makes it possible to profile the disk usage of store items that are not even on disk, only available remotely."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16039
msgid "You can also specify several package names:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16049
#, no-wrap
msgid ""
"$ guix size coreutils grep sed bash\n"
"store item                               total    self\n"
"/gnu/store/@dots{}-coreutils-8.24          77.8    13.8  13.4%\n"
"/gnu/store/@dots{}-grep-2.22               73.1     0.8   0.8%\n"
"/gnu/store/@dots{}-bash-4.3.42             72.3     4.7   4.6%\n"
"/gnu/store/@dots{}-readline-6.3            67.6     1.2   1.2%\n"
"@dots{}\n"
"total: 102.3 MiB\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16055
msgid "In this example we see that the combination of the four packages takes 102.3@tie{}MiB in total, which is much less than the sum of each closure since they have a lot of dependencies in common."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16061
msgid "When looking at the profile returned by @command{guix size}, you may find yourself wondering why a given package shows up in the profile at all.  To understand it, you can use @command{guix graph --path -t references} to display the shortest path between the two packages (@pxref{Invoking guix graph})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16063
msgid "The available options are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16069
msgid "Use substitute information from @var{urls}.  @xref{client-substitute-urls, the same option for @code{guix build}}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16070
#, no-wrap
msgid "--sort=@var{key}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16072
msgid "Sort lines according to @var{key}, one of the following options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16074
#, no-wrap
msgid "self"
msgstr "self"

#. type: table
#: guix-git/doc/guix.texi:16076
msgid "the size of each item (the default);"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16078
msgid "the total size of the item's closure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16080
#, no-wrap
msgid "--map-file=@var{file}"
msgstr "--map-file=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:16082
msgid "Write a graphical map of disk usage in PNG format to @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16084
msgid "For the example above, the map looks like this:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16087
msgid "@image{images/coreutils-size-map,5in,, map of Coreutils disk usage produced by @command{guix size}}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16092
msgid "This option requires that @uref{https://wingolog.org/software/guile-charting/, Guile-Charting} be installed and visible in Guile's module search path.  When that is not the case, @command{guix size} fails as it tries to load it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16096
msgid "Consider packages for @var{system}---e.g., @code{x86_64-linux}."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16107
#, no-wrap
msgid "Invoking @command{guix graph}"
msgstr "Invocando @command{guix graph}"

#. type: cindex
#: guix-git/doc/guix.texi:16109
#, no-wrap
msgid "DAG"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16110
#, no-wrap
msgid "guix graph"
msgstr "guix graph"

#. type: Plain text
#: guix-git/doc/guix.texi:16125
msgid "Packages and their dependencies form a @dfn{graph}, specifically a directed acyclic graph (DAG).  It can quickly become difficult to have a mental model of the package DAG, so the @command{guix graph} command provides a visual representation of the DAG@.  By default, @command{guix graph} emits a DAG representation in the input format of @uref{https://www.graphviz.org/, Graphviz}, so its output can be passed directly to the @command{dot} command of Graphviz.  It can also emit an HTML page with embedded JavaScript code to display a ``chord diagram'' in a Web browser, using the @uref{https://d3js.org/, d3.js} library, or emit Cypher queries to construct a graph in a graph database supporting the @uref{https://www.opencypher.org/, openCypher} query language.  With @option{--path}, it simply displays the shortest path between two packages.  The general syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16128
#, no-wrap
msgid "guix graph @var{options} @var{package}@dots{}\n"
msgstr "guix graph @var{opções} @var{pacote}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:16133
msgid "For example, the following command generates a PDF file representing the package DAG for the GNU@tie{}Core Utilities, showing its build-time dependencies:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16136
#, no-wrap
msgid "guix graph coreutils | dot -Tpdf > dag.pdf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16139
msgid "The output looks like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16141
msgid "@image{images/coreutils-graph,2in,,Dependency graph of the GNU Coreutils}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16143
msgid "Nice little graph, no?"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16146
msgid "You may find it more pleasant to navigate the graph interactively with @command{xdot} (from the @code{xdot} package):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16149
#, no-wrap
msgid "guix graph coreutils | xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16156
msgid "But there is more than one graph! The one above is concise: it is the graph of package objects, omitting implicit inputs such as GCC, libc, grep, etc.  It is often useful to have such a concise graph, but sometimes one may want to see more details.  @command{guix graph} supports several types of graphs, allowing you to choose the level of detail:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16162
msgid "This is the default type used in the example above.  It shows the DAG of package objects, excluding implicit dependencies.  It is concise, but filters out many details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16163
#, no-wrap
msgid "reverse-package"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16165
msgid "This shows the @emph{reverse} DAG of packages.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16168
#, no-wrap
msgid "guix graph --type=reverse-package ocaml\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16173
msgid "...@: yields the graph of packages that @emph{explicitly} depend on OCaml (if you are also interested in cases where OCaml is an implicit dependency, see @code{reverse-bag} below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16178
msgid "Note that for core packages this can yield huge graphs.  If all you want is to know the number of packages that depend on a given package, use @command{guix refresh --list-dependent} (@pxref{Invoking guix refresh, @option{--list-dependent}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16179
#, no-wrap
msgid "bag-emerged"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16181
msgid "This is the package DAG, @emph{including} implicit inputs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16183
msgid "For instance, the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16186
#, no-wrap
msgid "guix graph --type=bag-emerged coreutils\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16189
msgid "...@: yields this bigger graph:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16191
msgid "@image{images/coreutils-bag-graph,,5in,Detailed dependency graph of the GNU Coreutils}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16194
msgid "At the bottom of the graph, we see all the implicit inputs of @var{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16198
msgid "Now, note that the dependencies of these implicit inputs---that is, the @dfn{bootstrap dependencies} (@pxref{Bootstrapping})---are not shown here, for conciseness."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16199
#, no-wrap
msgid "bag"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16202
msgid "Similar to @code{bag-emerged}, but this time including all the bootstrap dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16203
#, no-wrap
msgid "bag-with-origins"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16205
msgid "Similar to @code{bag}, but also showing origins and their dependencies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16206
#, no-wrap
msgid "reverse-bag"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16209
msgid "This shows the @emph{reverse} DAG of packages.  Unlike @code{reverse-package}, it also takes implicit dependencies into account.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16212
#, no-wrap
msgid "guix graph -t reverse-bag dune\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16219
msgid "...@: yields the graph of all packages that depend on Dune, directly or indirectly.  Since Dune is an @emph{implicit} dependency of many packages @i{via} @code{dune-build-system}, this shows a large number of packages, whereas @code{reverse-package} would show very few if any."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16225
msgid "This is the most detailed representation: It shows the DAG of derivations (@pxref{Derivations}) and plain store items.  Compared to the above representation, many additional nodes are visible, including build scripts, patches, Guile modules, etc."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16228
msgid "For this type of graph, it is also possible to pass a @file{.drv} file name instead of a package name, as in:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16231
#, no-wrap
msgid "guix graph -t derivation $(guix system build -d my-config.scm)\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16237
msgid "This is the graph of @dfn{package modules} (@pxref{Package Modules}).  For example, the following command shows the graph for the package module that defines the @code{guile} package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16240
#, no-wrap
msgid "guix graph -t module guile | xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16245
msgid "All the types above correspond to @emph{build-time dependencies}.  The following graph type represents the @emph{run-time dependencies}:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16250
msgid "This is the graph of @dfn{references} of a package output, as returned by @command{guix gc --references} (@pxref{Invoking guix gc})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16253
msgid "If the given package output is not available in the store, @command{guix graph} attempts to obtain dependency information from substitutes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16257
msgid "Here you can also pass a store file name instead of a package name.  For example, the command below produces the reference graph of your profile (which can be big!):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16260
#, no-wrap
msgid "guix graph -t references $(readlink -f ~/.guix-profile)\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16262
#, no-wrap
msgid "referrers"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16265
msgid "This is the graph of the @dfn{referrers} of a store item, as returned by @command{guix gc --referrers} (@pxref{Invoking guix gc})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16271
msgid "This relies exclusively on local information from your store.  For instance, let us suppose that the current Inkscape is available in 10 profiles on your machine; @command{guix graph -t referrers inkscape} will show a graph rooted at Inkscape and with those 10 profiles linked to it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16274
msgid "It can help determine what is preventing a store item from being garbage collected."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16277
#, no-wrap
msgid "shortest path, between packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16284
msgid "Often, the graph of the package you are interested in does not fit on your screen, and anyway all you want to know is @emph{why} that package actually depends on some seemingly unrelated package.  The @option{--path} option instructs @command{guix graph} to display the shortest path between two packages (or derivations, or store items, etc.):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16298
#, no-wrap
msgid ""
"$ guix graph --path emacs libunistring\n"
"emacs@@26.3\n"
"mailutils@@3.9\n"
"libunistring@@0.9.10\n"
"$ guix graph --path -t derivation emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3.drv\n"
"/gnu/store/@dots{}-mailutils-3.9.drv\n"
"/gnu/store/@dots{}-libunistring-0.9.10.drv\n"
"$ guix graph --path -t references emacs libunistring\n"
"/gnu/store/@dots{}-emacs-26.3\n"
"/gnu/store/@dots{}-libidn2-2.2.0\n"
"/gnu/store/@dots{}-libunistring-0.9.10\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16306
msgid "Sometimes you still want to visualize the graph but would like to trim it so it can actually be displayed.  One way to do it is via the @option{--max-depth} (or @option{-M}) option, which lets you specify the maximum depth of the graph.  In the example below, we visualize only @code{libreoffice} and the nodes whose distance to @code{libreoffice} is at most 2:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16309
#, no-wrap
msgid "guix graph -M 2 libreoffice | xdot -f fdp -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16313
msgid "Mind you, that's still a big ball of spaghetti, but at least @command{dot} can render it quickly and it can be browsed somewhat."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16315
msgid "The available options are the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16321
msgid "Produce a graph output of @var{type}, where @var{type} must be one of the values listed above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16324
msgid "List the supported graph types."
msgstr "Lista os tipos de grafos disponíveis."

#. type: item
#: guix-git/doc/guix.texi:16325
#, no-wrap
msgid "--backend=@var{backend}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16326
#, no-wrap
msgid "-b @var{backend}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16328
msgid "Produce a graph using the selected @var{backend}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16329
#, no-wrap
msgid "--list-backends"
msgstr "--list-backends"

#. type: table
#: guix-git/doc/guix.texi:16331
msgid "List the supported graph backends."
msgstr "Lista os backends de grafos disponíveis."

#. type: table
#: guix-git/doc/guix.texi:16333
msgid "Currently, the available backends are Graphviz and d3.js."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16334
#, no-wrap
msgid "--path"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16339
msgid "Display the shortest path between two nodes of the type specified by @option{--type}.  The example below shows the shortest path between @code{libreoffice} and @code{llvm} according to the references of @code{libreoffice}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16346
#, no-wrap
msgid ""
"$ guix graph --path -t references libreoffice llvm\n"
"/gnu/store/@dots{}-libreoffice-6.4.2.2\n"
"/gnu/store/@dots{}-libepoxy-1.5.4\n"
"/gnu/store/@dots{}-mesa-19.3.4\n"
"/gnu/store/@dots{}-llvm-9.0.1\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16356
#, no-wrap
msgid "guix graph -e '(@@@@ (gnu packages commencement) gnu-make-final)'\n"
msgstr "guix graph -e '(@@@@ (gnu packages commencement) gnu-make-final)'\n"

#. type: table
#: guix-git/doc/guix.texi:16361
msgid "Display the graph for @var{system}---e.g., @code{i686-linux}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16364
msgid "The package dependency graph is largely architecture-independent, but there are some architecture-dependent bits that this option allows you to visualize."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16380
msgid "On top of that, @command{guix graph} supports all the usual package transformation options (@pxref{Package Transformation Options}).  This makes it easy to view the effect of a graph-rewriting transformation such as @option{--with-input}.  For example, the command below outputs the graph of @code{git} once @code{openssl} has been replaced by @code{libressl} everywhere in the graph:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16383
#, no-wrap
msgid "guix graph git --with-input=openssl=libressl\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16386
msgid "So many possibilities, so much fun!"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16388
#, no-wrap
msgid "Invoking @command{guix publish}"
msgstr "Invocando @command{guix publish}"

#. type: command{#1}
#: guix-git/doc/guix.texi:16390
#, no-wrap
msgid "guix publish"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16394
msgid "The purpose of @command{guix publish} is to enable users to easily share their store with others, who can then use it as a substitute server (@pxref{Substitutes})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16400
msgid "When @command{guix publish} runs, it spawns an HTTP server which allows anyone with network access to obtain substitutes from it.  This means that any machine running Guix can also act as if it were a build farm, since the HTTP interface is compatible with Cuirass, the software behind the @code{@value{SUBSTITUTE-SERVER-1}} build farm."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16406
msgid "For security, each substitute is signed, allowing recipients to check their authenticity and integrity (@pxref{Substitutes}).  Because @command{guix publish} uses the signing key of the system, which is only readable by the system administrator, it must be started as root; the @option{--user} option makes it drop root privileges early on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16410
msgid "The signing key pair must be generated before @command{guix publish} is launched, using @command{guix archive --generate-key} (@pxref{Invoking guix archive})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16415
msgid "When the @option{--advertise} option is passed, the server advertises its availability on the local network using multicast DNS (mDNS) and DNS service discovery (DNS-SD), currently @i{via} Guile-Avahi (@pxref{Top,,, guile-avahi, Using Avahi in Guile Scheme Programs})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16420
#, no-wrap
msgid "guix publish @var{options}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16424
msgid "Running @command{guix publish} without any additional arguments will spawn an HTTP server on port 8080:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16427
#, no-wrap
msgid "guix publish\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16429
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix publish}"
msgid "socket activation, for @command{guix publish}"
msgstr "Invocando @command{guix publish}"

#. type: Plain text
#: guix-git/doc/guix.texi:16433
msgid "@command{guix publish} can also be started following the systemd ``socket activation'' protocol (@pxref{Service De- and Constructors, @code{make-systemd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16436
msgid "Once a publishing server has been authorized, the daemon may download substitutes from it.  @xref{Getting Substitutes from Other Servers}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16444
msgid "By default, @command{guix publish} compresses archives on the fly as it serves them.  This ``on-the-fly'' mode is convenient in that it requires no setup and is immediately available.  However, when serving lots of clients, we recommend using the @option{--cache} option, which enables caching of the archives before they are sent to clients---see below for details.  The @command{guix weather} command provides a handy way to check what a server provides (@pxref{Invoking guix weather})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16451
msgid "As a bonus, @command{guix publish} also serves as a content-addressed mirror for source files referenced in @code{origin} records (@pxref{origin Reference}).  For instance, assuming @command{guix publish} is running on @code{example.org}, the following URL returns the raw @file{hello-2.10.tar.gz} file with the given SHA256 hash (represented in @code{nix-base32} format, @pxref{Invoking guix hash}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16454
#, no-wrap
msgid "http://example.org/file/hello-2.10.tar.gz/sha256/0ssi1@dots{}ndq1i\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16458
msgid "Obviously, these URLs only work for files that are in the store; in other cases, they return 404 (``Not Found'')."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16459
#, no-wrap
msgid "build logs, publication"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16461
msgid "Build logs are available from @code{/log} URLs like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16464
#, no-wrap
msgid "http://example.org/log/gwspk@dots{}-guile-2.2.3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16474
msgid "When @command{guix-daemon} is configured to save compressed build logs, as is the case by default (@pxref{Invoking guix-daemon}), @code{/log} URLs return the compressed log as-is, with an appropriate @code{Content-Type} and/or @code{Content-Encoding} header.  We recommend running @command{guix-daemon} with @option{--log-compression=gzip} since Web browsers can automatically decompress it, which is not the case with Bzip2 compression."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16478
#, no-wrap
msgid "--port=@var{port}"
msgstr "--port=@var{porta}"

#. type: itemx
#: guix-git/doc/guix.texi:16479
#, no-wrap
msgid "-p @var{port}"
msgstr "-p @var{porta}"

#. type: table
#: guix-git/doc/guix.texi:16481
msgid "Listen for HTTP requests on @var{port}."
msgstr "Ouve requisições HTTP na @var{porta}."

#. type: item
#: guix-git/doc/guix.texi:16482
#, no-wrap
msgid "--listen=@var{host}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16485
msgid "Listen on the network interface for @var{host}.  The default is to accept connections from any interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16490
msgid "Change privileges to @var{user} as soon as possible---i.e., once the server socket is open and the signing key has been read."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16491
#, no-wrap
msgid "--compression[=@var{method}[:@var{level}]]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16492
#, no-wrap
msgid "-C [@var{method}[:@var{level}]]"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16496
msgid "Compress data using the given @var{method} and @var{level}.  @var{method} is one of @code{lzip}, @code{zstd}, and @code{gzip}; when @var{method} is omitted, @code{gzip} is used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16500
msgid "When @var{level} is zero, disable compression.  The range 1 to 9 corresponds to different compression levels: 1 is the fastest, and 9 is the best (CPU-intensive).  The default is 3."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16507
msgid "Usually, @code{lzip} compresses noticeably better than @code{gzip} for a small increase in CPU usage; see @uref{https://nongnu.org/lzip/lzip_benchmark.html,benchmarks on the lzip Web page}.  However, @code{lzip} achieves low decompression throughput (on the order of 50@tie{}MiB/s on modern hardware), which can be a bottleneck for someone who downloads over a fast network connection."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16511
msgid "The compression ratio of @code{zstd} is between that of @code{lzip} and that of @code{gzip}; its main advantage is a @uref{https://facebook.github.io/zstd/,high decompression speed}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16520
msgid "Unless @option{--cache} is used, compression occurs on the fly and the compressed streams are not cached.  Thus, to reduce load on the machine that runs @command{guix publish}, it may be a good idea to choose a low compression level, to run @command{guix publish} behind a caching proxy, or to use @option{--cache}.  Using @option{--cache} has the advantage that it allows @command{guix publish} to add @code{Content-Length} HTTP header to its responses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16525
msgid "This option can be repeated, in which case every substitute gets compressed using all the selected methods, and all of them are advertised.  This is useful when users may not support all the compression methods: they can select the one they support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16526
#, no-wrap
msgid "--cache=@var{directory}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16527
#, no-wrap
msgid "-c @var{directory}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16530
msgid "Cache archives and meta-data (@code{.narinfo} URLs) to @var{directory} and only serve archives that are in cache."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16538
msgid "When this option is omitted, archives and meta-data are created on-the-fly.  This can reduce the available bandwidth, especially when compression is enabled, since this may become CPU-bound.  Another drawback of the default mode is that the length of archives is not known in advance, so @command{guix publish} does not add a @code{Content-Length} HTTP header to its responses, which in turn prevents clients from knowing the amount of data being downloaded."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16546
msgid "Conversely, when @option{--cache} is used, the first request for a store item (@i{via} a @code{.narinfo} URL) triggers a background process to @dfn{bake} the archive---computing its @code{.narinfo} and compressing the archive, if needed.  Once the archive is cached in @var{directory}, subsequent requests succeed and are served directly from the cache, which guarantees that clients get the best possible bandwidth."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16553
msgid "That first @code{.narinfo} request nonetheless returns 200, provided the requested store item is ``small enough'', below the cache bypass threshold---see @option{--cache-bypass-threshold} below.  That way, clients do not have to wait until the archive is baked.  For larger store items, the first @code{.narinfo} request returns 404, meaning that clients have to wait until the archive is baked."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16557
msgid "The ``baking'' process is performed by worker threads.  By default, one thread per CPU core is created, but this can be customized.  See @option{--workers} below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16560
msgid "When @option{--ttl} is used, cached entries are automatically deleted when they have expired."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16561
#, no-wrap
msgid "--workers=@var{N}"
msgstr "--workers=@var{N}"

#. type: table
#: guix-git/doc/guix.texi:16564
msgid "When @option{--cache} is used, request the allocation of @var{N} worker threads to ``bake'' archives."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16565
#, no-wrap
msgid "--ttl=@var{ttl}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16569 guix-git/doc/guix.texi:43242
msgid "Produce @code{Cache-Control} HTTP headers that advertise a time-to-live (TTL) of @var{ttl}.  @var{ttl} must denote a duration: @code{5d} means 5 days, @code{1m} means 1 month, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16574
msgid "This allows the user's Guix to keep substitute information in cache for @var{ttl}.  However, note that @code{guix publish} does not itself guarantee that the store items it provides will indeed remain available for as long as @var{ttl}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16578
msgid "Additionally, when @option{--cache} is used, cached entries that have not been accessed for @var{ttl} and that no longer have a corresponding item in the store, may be deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16579
#, fuzzy, no-wrap
#| msgid "--manifest=@var{file}"
msgid "--negative-ttl=@var{ttl}"
msgstr "--manifest=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:16584 guix-git/doc/guix.texi:43259
msgid "Similarly produce @code{Cache-Control} HTTP headers to advertise the time-to-live (TTL) of @emph{negative} lookups---missing store items, for which the HTTP 404 code is returned.  By default, no negative TTL is advertised."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16588
msgid "This parameter can help adjust server load and substitute latency by instructing cooperating clients to be more or less patient when a store item is missing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16589
#, no-wrap
msgid "--cache-bypass-threshold=@var{size}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16594
msgid "When used in conjunction with @option{--cache}, store items smaller than @var{size} are immediately available, even when they are not yet in cache.  @var{size} is a size in bytes, or it can be suffixed by @code{M} for megabytes and so on.  The default is @code{10M}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16599
msgid "``Cache bypass'' allows you to reduce the publication delay for clients at the expense of possibly additional I/O and CPU use on the server side: depending on the client access patterns, those store items can end up being baked several times until a copy is available in cache."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16603
msgid "Increasing the threshold may be useful for sites that have few users, or to guarantee that users get substitutes even for store items that are not popular."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16604
#, no-wrap
msgid "--nar-path=@var{path}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16607
msgid "Use @var{path} as the prefix for the URLs of ``nar'' files (@pxref{Invoking guix archive, normalized archives})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16611
msgid "By default, nars are served at a URL such as @code{/nar/gzip/@dots{}-coreutils-8.25}.  This option allows you to change the @code{/nar} part to @var{path}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16612
#, no-wrap
msgid "--public-key=@var{file}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16613
#, no-wrap
msgid "--private-key=@var{file}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16616 guix-git/doc/guix.texi:37806
#: guix-git/doc/guix.texi:37843
msgid "Use the specific @var{file}s as the public/private key pair used to sign the store items being published."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16623
msgid "The files must correspond to the same key pair (the private key is used for signing and the public key is merely advertised in the signature metadata).  They must contain keys in the canonical s-expression format as produced by @command{guix archive --generate-key} (@pxref{Invoking guix archive}).  By default, @file{/etc/guix/signing-key.pub} and @file{/etc/guix/signing-key.sec} are used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16624
#, no-wrap
msgid "--repl[=@var{port}]"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16625
#, no-wrap
msgid "-r [@var{port}]"
msgstr "-r [@var{porta}]"

#. type: table
#: guix-git/doc/guix.texi:16629
msgid "Spawn a Guile REPL server (@pxref{REPL Servers,,, guile, GNU Guile Reference Manual}) on @var{port} (37146 by default).  This is used primarily for debugging a running @command{guix publish} server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16635
msgid "Enabling @command{guix publish} on Guix System is a one-liner: just instantiate a @code{guix-publish-service-type} service in the @code{services} field of the @code{operating-system} declaration (@pxref{guix-publish-service-type, @code{guix-publish-service-type}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16638
msgid "If you are instead running Guix on a ``foreign distro'', follow these instructions:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16642
msgid "If your host distro uses the systemd init system:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16647
#, no-wrap
msgid ""
"# ln -s ~root/.guix-profile/lib/systemd/system/guix-publish.service \\\n"
"        /etc/systemd/system/\n"
"# systemctl start guix-publish && systemctl enable guix-publish\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16651
msgid "If your host distro uses the Upstart init system:"
msgstr "Se sua distro hospedeira usa o sistema init Upstart:"

#. type: example
#: guix-git/doc/guix.texi:16655
#, no-wrap
msgid ""
"# ln -s ~root/.guix-profile/lib/upstart/system/guix-publish.conf /etc/init/\n"
"# start guix-publish\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:16659
msgid "Otherwise, proceed similarly with your distro's init system."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16662
#, no-wrap
msgid "Invoking @command{guix challenge}"
msgstr "Invocando @command{guix challenge}"

#. type: cindex
#: guix-git/doc/guix.texi:16665
#, no-wrap
msgid "verifiable builds"
msgstr ""

#. type: command{#1}
#: guix-git/doc/guix.texi:16666
#, no-wrap
msgid "guix challenge"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16667
#, no-wrap
msgid "challenge"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16672
msgid "Do the binaries provided by this server really correspond to the source code it claims to build? Is a package build process deterministic? These are the questions the @command{guix challenge} command attempts to answer."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16680
msgid "The former is obviously an important question: Before using a substitute server (@pxref{Substitutes}), one had better @emph{verify} that it provides the right binaries, and thus @emph{challenge} it.  The latter is what enables the former: If package builds are deterministic, then independent builds of the package should yield the exact same result, bit for bit; if a server provides a binary different from the one obtained locally, it may be either corrupt or malicious."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16689
msgid "We know that the hash that shows up in @file{/gnu/store} file names is the hash of all the inputs of the process that built the file or directory---compilers, libraries, build scripts, etc. (@pxref{Introduction}).  Assuming deterministic build processes, one store file name should map to exactly one build output.  @command{guix challenge} checks whether there is, indeed, a single mapping by comparing the build outputs of several independent builds of any given store item."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16691
msgid "The command output looks like this:"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16705
#, no-wrap
msgid ""
"$ guix challenge \\\n"
"  --substitute-urls=\"https://@value{SUBSTITUTE-SERVER-1} https://guix.example.org\" \\\n"
"  openssl git pius coreutils grep\n"
"updating substitutes from 'https://@value{SUBSTITUTE-SERVER-1}'... 100.0%\n"
"updating substitutes from 'https://guix.example.org'... 100.0%\n"
"/gnu/store/@dots{}-openssl-1.0.2d contents differ:\n"
"  local hash: 0725l22r5jnzazaacncwsvp9kgf42266ayyp814v7djxs7nk963q\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-openssl-1.0.2d: 0725l22r5jnzazaacncwsvp9kgf42266ayyp814v7djxs7nk963q\n"
"  https://guix.example.org/nar/@dots{}-openssl-1.0.2d: 1zy4fmaaqcnjrzzajkdn3f5gmjk754b43qkq47llbyak9z0qjyim\n"
"  differing files:\n"
"    /lib/libcrypto.so.1.1\n"
"    /lib/libssl.so.1.1\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16712
#, no-wrap
msgid ""
"/gnu/store/@dots{}-git-2.5.0 contents differ:\n"
"  local hash: 00p3bmryhjxrhpn2gxs2fy0a15lnip05l97205pgbk5ra395hyha\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-git-2.5.0: 069nb85bv4d4a6slrwjdy8v1cn4cwspm3kdbmyb81d6zckj3nq9f\n"
"  https://guix.example.org/nar/@dots{}-git-2.5.0: 0mdqa9w1p6cmli6976v4wi0sw9r4p5prkj7lzfd1877wk11c9c73\n"
"  differing file:\n"
"    /libexec/git-core/git-fsck\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16719
#, no-wrap
msgid ""
"/gnu/store/@dots{}-pius-2.1.1 contents differ:\n"
"  local hash: 0k4v3m9z1zp8xzzizb7d8kjj72f9172xv078sq4wl73vnq9ig3ax\n"
"  https://@value{SUBSTITUTE-SERVER-1}/nar/@dots{}-pius-2.1.1: 0k4v3m9z1zp8xzzizb7d8kjj72f9172xv078sq4wl73vnq9ig3ax\n"
"  https://guix.example.org/nar/@dots{}-pius-2.1.1: 1cy25x1a4fzq5rk0pmvc8xhwyffnqz95h2bpvqsz2mpvlbccy0gs\n"
"  differing file:\n"
"    /share/man/man1/pius.1.gz\n"
"\n"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:16721
#, no-wrap
msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

#. type: smallexample
#: guix-git/doc/guix.texi:16726
#, no-wrap
msgid ""
"5 store items were analyzed:\n"
"  - 2 (40.0%) were identical\n"
"  - 3 (60.0%) differed\n"
"  - 0 (0.0%) were inconclusive\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16736
msgid "In this example, @command{guix challenge} queries all the substitute servers for each of the fives packages specified on the command line.  It then reports those store items for which the servers obtained a result different from the local build (if it exists) and/or different from one another; here, the @samp{local hash} lines indicate that a local build result was available for each of these packages and shows its hash."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16737
#, no-wrap
msgid "non-determinism, in package builds"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16748
msgid "As an example, @code{guix.example.org} always gets a different answer.  Conversely, @code{@value{SUBSTITUTE-SERVER-1}} agrees with local builds, except in the case of Git.  This might indicate that the build process of Git is non-deterministic, meaning that its output varies as a function of various things that Guix does not fully control, in spite of building packages in isolated environments (@pxref{Features}).  Most common sources of non-determinism include the addition of timestamps in build results, the inclusion of random numbers, and directory listings sorted by inode number.  See @uref{https://reproducible-builds.org/docs/}, for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16751
msgid "To find out what is wrong with this Git binary, the easiest approach is to run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16756
#, no-wrap
msgid ""
"guix challenge git \\\n"
"  --diff=diffoscope \\\n"
"  --substitute-urls=\"https://@value{SUBSTITUTE-SERVER-1} https://guix.example.org\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16760
msgid "This automatically invokes @command{diffoscope}, which displays detailed information about files that differ."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16763
msgid "Alternatively, we can do something along these lines (@pxref{Invoking guix archive}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16768
#, no-wrap
msgid ""
"$ wget -q -O - https://@value{SUBSTITUTE-SERVER-1}/nar/lzip/@dots{}-git-2.5.0 \\\n"
"   | lzip -d | guix archive -x /tmp/git\n"
"$ diff -ur --no-dereference /gnu/store/@dots{}-git.2.5.0 /tmp/git\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16777
msgid "This command shows the difference between the files resulting from the local build, and the files resulting from the build on @code{@value{SUBSTITUTE-SERVER-1}} (@pxref{Overview, Comparing and Merging Files,, diffutils, Comparing and Merging Files}).  The @command{diff} command works great for text files.  When binary files differ, a better option is @uref{https://diffoscope.org/, Diffoscope}, a tool that helps visualize differences for all kinds of files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16785
msgid "Once you have done that work, you can tell whether the differences are due to a non-deterministic build process or to a malicious server.  We try hard to remove sources of non-determinism in packages to make it easier to verify substitutes, but of course, this is a process that involves not just Guix, but a large part of the free software community.  In the meantime, @command{guix challenge} is one tool to help address the problem."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16789
msgid "If you are writing packages for Guix, you are encouraged to check whether @code{@value{SUBSTITUTE-SERVER-1}} and other substitute servers obtain the same build result as you did with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16792
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guix build gnew --keep-failed\n"
msgid "guix challenge @var{package}\n"
msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#. type: example
#: guix-git/doc/guix.texi:16798
#, fuzzy, no-wrap
#| msgid "guix style [@var{options}] @var{package}@dots{}\n"
msgid "guix challenge @var{options} @var{argument}@dots{}\n"
msgstr "guix style [@var{options}] @var{package}@dots{}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:16805
msgid "where @var{argument} is a package specification such as @code{guile@@2.0} or @code{glibc:debug} or, alternatively, a store file name as returned, for example, by @command{guix build} or @command{guix gc --list-live}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16811
msgid "When a difference is found between the hash of a locally-built item and that of a server-provided substitute, or among substitutes provided by different servers, the command displays it as in the example above and its exit code is 2 (other non-zero exit codes denote other kinds of errors)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16813
msgid "The one option that matters is:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16819
msgid "Consider @var{urls} the whitespace-separated list of substitute source URLs to compare to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16820
#, no-wrap
msgid "--diff=@var{mode}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16822
msgid "Upon mismatches, show differences according to @var{mode}, one of:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16824
#, no-wrap
msgid "@code{simple} (the default)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16826
msgid "Show the list of files that differ."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:16827
#, no-wrap
msgid "diffoscope"
msgstr ""

#. type: var{#1}
#: guix-git/doc/guix.texi:16828
#, no-wrap
msgid "command"
msgstr "comando"

#. type: table
#: guix-git/doc/guix.texi:16831
msgid "Invoke @uref{https://diffoscope.org/, Diffoscope}, passing it two directories whose contents do not match."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16834
msgid "When @var{command} is an absolute file name, run @var{command} instead of Diffoscope."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16837
msgid "Do not show further details about the differences."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16842
msgid "Thus, unless @option{--diff=none} is passed, @command{guix challenge} downloads the store items from the given substitute servers so that it can compare them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16843
#, no-wrap
msgid "--verbose"
msgstr "--verbose"

#. type: itemx
#: guix-git/doc/guix.texi:16844
#, no-wrap
msgid "-v"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16847
msgid "Show details about matches (identical contents) in addition to information about mismatches."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16851
#, no-wrap
msgid "Invoking @command{guix copy}"
msgstr "Invocando @command{guix copy}"

#. type: command{#1}
#: guix-git/doc/guix.texi:16853
#, fuzzy, no-wrap
#| msgid "Invoking guix copy"
msgid "guix copy"
msgstr "Invocando guix copy"

#. type: cindex
#: guix-git/doc/guix.texi:16854
#, no-wrap
msgid "copy, of store items, over SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16855
#, no-wrap
msgid "SSH, copy of store items"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16856
#, no-wrap
msgid "sharing store items across machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16857
#, no-wrap
msgid "transferring store items across machines"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16864
msgid "The @command{guix copy} command copies items from the store of one machine to that of another machine over a secure shell (SSH)  connection@footnote{This command is available only when Guile-SSH was found.  @xref{Requirements}, for details.}.  For example, the following command copies the @code{coreutils} package, the user's profile, and all their dependencies over to @var{host}, logged in as @var{user}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16868
#, no-wrap
msgid ""
"guix copy --to=@var{user}@@@var{host} \\\n"
"          coreutils $(readlink -f ~/.guix-profile)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16872
msgid "If some of the items to be copied are already present on @var{host}, they are not actually sent."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16875
msgid "The command below retrieves @code{libreoffice} and @code{gimp} from @var{host}, assuming they are available there:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16878
#, no-wrap
msgid "guix copy --from=@var{host} libreoffice gimp\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16883
msgid "The SSH connection is established using the Guile-SSH client, which is compatible with OpenSSH: it honors @file{~/.ssh/known_hosts} and @file{~/.ssh/config}, and uses the SSH agent for authentication."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16889
msgid "The key used to sign items that are sent must be accepted by the remote machine.  Likewise, the key used by the remote machine to sign items you are retrieving must be in @file{/etc/guix/acl} so it is accepted by your own daemon.  @xref{Invoking guix archive}, for more information about store item authentication."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16894
#, no-wrap
msgid "guix copy [--to=@var{spec}|--from=@var{spec}] @var{items}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16897
msgid "You must always specify one of the following options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16899
#, no-wrap
msgid "--to=@var{spec}"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:16900
#, no-wrap
msgid "--from=@var{spec}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16904
msgid "Specify the host to send to or receive from.  @var{spec} must be an SSH spec such as @code{example.org}, @code{charlie@@example.org}, or @code{charlie@@example.org:2222}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16908
msgid "The @var{items} can be either package names, such as @code{gimp}, or store items, such as @file{/gnu/store/@dots{}-idutils-4.6}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16912
msgid "When specifying the name of a package to send, it is first built if needed, unless @option{--dry-run} was specified.  Common build options are supported (@pxref{Common Build Options})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16915
#, no-wrap
msgid "Invoking @command{guix container}"
msgstr "Invocando @command{guix container}"

#. type: command{#1}
#: guix-git/doc/guix.texi:16917
#, no-wrap
msgid "guix container"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:16921
msgid "As of version @value{VERSION}, this tool is experimental.  The interface is subject to radical change in the future."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16928
msgid "The purpose of @command{guix container} is to manipulate processes running within an isolated environment, commonly known as a ``container'', typically created by the @command{guix shell} (@pxref{Invoking guix shell}) and @command{guix system container} (@pxref{Invoking guix system}) commands."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16933
#, no-wrap
msgid "guix container @var{action} @var{options}@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16937
msgid "@var{action} specifies the operation to perform with a container, and @var{options} specifies the context-specific arguments for the action."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16939
msgid "The following actions are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:16941
#, no-wrap
msgid "exec"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16943
msgid "Execute a command within the context of a running container."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16945
msgid "The syntax is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16948
#, no-wrap
msgid "guix container exec @var{pid} @var{program} @var{arguments}@dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16954
msgid "@var{pid} specifies the process ID of the running container.  @var{program} specifies an executable file name within the root file system of the container.  @var{arguments} are the additional options that will be passed to @var{program}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:16958
msgid "The following command launches an interactive login shell inside a Guix system container, started by @command{guix system container}, and whose process ID is 9001:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:16961
#, no-wrap
msgid "guix container exec 9001 /run/current-system/profile/bin/bash --login\n"
msgstr "guix container exec 9001 /run/current-system/profile/bin/bash --login\n"

#. type: table
#: guix-git/doc/guix.texi:16965
msgid "Note that the @var{pid} cannot be the parent process of a container.  It must be PID 1 of the container or one of its child processes."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:16969
#, no-wrap
msgid "Invoking @command{guix weather}"
msgstr "Invocando @command{guix weather}"

#. type: command{#1}
#: guix-git/doc/guix.texi:16971
#, fuzzy, no-wrap
#| msgid "Invoking guix weather"
msgid "guix weather"
msgstr "Invocando guix weather"

#. type: Plain text
#: guix-git/doc/guix.texi:16982
msgid "Occasionally you're grumpy because substitutes are lacking and you end up building packages by yourself (@pxref{Substitutes}).  The @command{guix weather} command reports on substitute availability on the specified servers so you can have an idea of whether you'll be grumpy today.  It can sometimes be useful info as a user, but it is primarily useful to people running @command{guix publish} (@pxref{Invoking guix publish}).  Sometimes substitutes @emph{are} available but they are not authorized on your system; @command{guix weather} reports it so you can authorize them if you want (@pxref{Getting Substitutes from Other Servers})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16983
#, no-wrap
msgid "statistics, for substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16984
#, no-wrap
msgid "availability of substitutes"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16985
#, no-wrap
msgid "substitute availability"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:16986
#, no-wrap
msgid "weather, substitute availability"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:16988
msgid "Here's a sample run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17000
#, no-wrap
msgid ""
"$ guix weather --substitute-urls=https://guix.example.org\n"
"computing 5,872 package derivations for x86_64-linux...\n"
"looking for 6,128 store items on https://guix.example.org..\n"
"updating substitutes from 'https://guix.example.org'... 100.0%\n"
"https://guix.example.org\n"
"  43.4% substitutes available (2,658 out of 6,128)\n"
"  7,032.5 MiB of nars (compressed)\n"
"  19,824.2 MiB on disk (uncompressed)\n"
"  0.030 seconds per request (182.9 seconds in total)\n"
"  33.5 requests per second\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17010
#, no-wrap
msgid ""
"  9.8% (342 out of 3,470) of the missing items are queued\n"
"  867 queued builds\n"
"      x86_64-linux: 518 (59.7%)\n"
"      i686-linux: 221 (25.5%)\n"
"      aarch64-linux: 128 (14.8%)\n"
"  build rate: 23.41 builds per hour\n"
"      x86_64-linux: 11.16 builds per hour\n"
"      i686-linux: 6.03 builds per hour\n"
"      aarch64-linux: 6.41 builds per hour\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17012
#, no-wrap
msgid "continuous integration, statistics"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17023
msgid "As you can see, it reports the fraction of all the packages for which substitutes are available on the server---regardless of whether substitutes are enabled, and regardless of whether this server's signing key is authorized.  It also reports the size of the compressed archives (``nars'') provided by the server, the size the corresponding store items occupy in the store (assuming deduplication is turned off), and the server's throughput.  The second part gives continuous integration (CI) statistics, if the server supports it.  In addition, using the @option{--coverage} option, @command{guix weather} can list ``important'' package substitutes missing on the server (see below)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17029
msgid "To achieve that, @command{guix weather} queries over HTTP(S) meta-data (@dfn{narinfos}) for all the relevant store items.  Like @command{guix challenge}, it ignores signatures on those substitutes, which is innocuous since the command only gathers statistics and cannot install those substitutes."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17034
#, no-wrap
msgid "guix weather @var{options}@dots{} [@var{packages}@dots{}]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17042
msgid "When @var{packages} is omitted, @command{guix weather} checks the availability of substitutes for @emph{all} the packages, or for those specified with @option{--manifest}; otherwise it only considers the specified packages.  It is also possible to query specific system types with @option{--system}.  @command{guix weather} exits with a non-zero code when the fraction of available substitutes is below 100%."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17051
msgid "@var{urls} is the space-separated list of substitute server URLs to query.  When this option is omitted, the URLs specified with the @option{--substitute-urls} option of @command{guix-daemon} are used or, as a last resort, the default set of substitute URLs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17057
msgid "Query substitutes for @var{system}---e.g., @code{aarch64-linux}.  This option can be repeated, in which case @command{guix weather} will query substitutes for several system types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17063
msgid "Instead of querying substitutes for all the packages, only ask for those specified in @var{file}.  @var{file} must contain a @dfn{manifest}, as with the @code{-m} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17066
msgid "This option can be repeated several times, in which case the manifests are concatenated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17074
msgid "A typical use case for this option is specifying a package that is hidden and thus cannot be referred to in the usual way, as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17077
#, no-wrap
msgid "guix weather -e '(@@@@ (gnu packages rust) rust-bootstrap)'\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17080
msgid "This option can be repeated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17081
#, no-wrap
msgid "--coverage[=@var{count}]"
msgstr "--coverage[=@var{contagem}]"

#. type: itemx
#: guix-git/doc/guix.texi:17082
#, no-wrap
msgid "-c [@var{count}]"
msgstr "-c [@var{contagem}]"

#. type: table
#: guix-git/doc/guix.texi:17088
msgid "Report on substitute coverage for packages: list packages with at least @var{count} dependents (zero by default) for which substitutes are unavailable.  Dependent packages themselves are not listed: if @var{b} depends on @var{a} and @var{a} has no substitutes, only @var{a} is listed, even though @var{b} usually lacks substitutes as well.  The result looks like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17102
#, no-wrap
msgid ""
"$ guix weather --substitute-urls=@value{SUBSTITUTE-URLS} -c 10\n"
"computing 8,983 package derivations for x86_64-linux...\n"
"looking for 9,343 store items on @value{SUBSTITUTE-URLS}...\n"
"updating substitutes from '@value{SUBSTITUTE-URLS}'... 100.0%\n"
"@value{SUBSTITUTE-URLS}\n"
"  64.7% substitutes available (6,047 out of 9,343)\n"
"@dots{}\n"
"2502 packages are missing from '@value{SUBSTITUTE-URLS}' for 'x86_64-linux', among which:\n"
"    58  kcoreaddons@@5.49.0      /gnu/store/@dots{}-kcoreaddons-5.49.0\n"
"    46  qgpgme@@1.11.1           /gnu/store/@dots{}-qgpgme-1.11.1\n"
"    37  perl-http-cookiejar@@0.008  /gnu/store/@dots{}-perl-http-cookiejar-0.008\n"
"    @dots{}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17108
msgid "What this example shows is that @code{kcoreaddons} and presumably the 58 packages that depend on it have no substitutes at @code{@value{SUBSTITUTE-SERVER-1}}; likewise for @code{qgpgme} and the 46 packages that depend on it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17112
msgid "If you are a Guix developer, or if you are taking care of this build farm, you'll probably want to have a closer look at these packages: they may simply fail to build."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17113
#, no-wrap
msgid "--display-missing"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17115
msgid "Display the list of store items for which substitutes are missing."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:17118
#, no-wrap
msgid "Invoking @command{guix processes}"
msgstr "Invocando @command{guix processes}"

#. type: command{#1}
#: guix-git/doc/guix.texi:17120
#, fuzzy, no-wrap
#| msgid "Invoking guix processes"
msgid "guix processes"
msgstr "Invocando guix processes"

#. type: Plain text
#: guix-git/doc/guix.texi:17127
msgid "The @command{guix processes} command can be useful to developers and system administrators, especially on multi-user machines and on build farms: it lists the current sessions (connections to the daemon), as well as information about the processes involved@footnote{Remote sessions, when @command{guix-daemon} is started with @option{--listen} specifying a TCP endpoint, are @emph{not} listed.}.  Here's an example of the information it returns:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17133
#, no-wrap
msgid ""
"$ sudo guix processes\n"
"SessionPID: 19002\n"
"ClientPID: 19090\n"
"ClientCommand: guix shell python\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17137
#, no-wrap
msgid ""
"SessionPID: 19402\n"
"ClientPID: 19367\n"
"ClientCommand: guix publish -u guix-publish -p 3000 -C 9 @dots{}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17150
#, no-wrap
msgid ""
"SessionPID: 19444\n"
"ClientPID: 19419\n"
"ClientCommand: cuirass --cache-directory /var/cache/cuirass @dots{}\n"
"LockHeld: /gnu/store/@dots{}-perl-ipc-cmd-0.96.lock\n"
"LockHeld: /gnu/store/@dots{}-python-six-bootstrap-1.11.0.lock\n"
"LockHeld: /gnu/store/@dots{}-libjpeg-turbo-2.0.0.lock\n"
"ChildPID: 20495\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
"ChildPID: 27733\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
"ChildPID: 27793\n"
"ChildCommand: guix offload x86_64-linux 7200 1 28800\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17157
msgid "In this example we see that @command{guix-daemon} has three clients: @command{guix shell}, @command{guix publish}, and the Cuirass continuous integration tool; their process identifier (PID) is given by the @code{ClientPID} field.  The @code{SessionPID} field gives the PID of the @command{guix-daemon} sub-process of this particular session."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17164
msgid "The @code{LockHeld} fields show which store items are currently locked by this session, which corresponds to store items being built or substituted (the @code{LockHeld} field is not displayed when @command{guix processes} is not running as root).  Last, by looking at the @code{ChildPID} and @code{ChildCommand} fields, we understand that these three builds are being offloaded (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17169
msgid "The output is in Recutils format so we can use the handy @command{recsel} command to select sessions of interest (@pxref{Selection Expressions,,, recutils, GNU recutils manual}).  As an example, the command shows the command line and PID of the client that triggered the build of a Perl package:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17175
#, no-wrap
msgid ""
"$ sudo guix processes | \\\n"
"    recsel -p ClientPID,ClientCommand -e 'LockHeld ~ \"perl\"'\n"
"ClientPID: 19419\n"
"ClientCommand: cuirass --cache-directory /var/cache/cuirass @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17178
msgid "Additional options are listed below."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17188
msgid "The default option.  It outputs a set of Session recutils records that include each @code{ChildProcess} as a field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17189
#, no-wrap
msgid "normalized"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17196
msgid "Normalize the output records into record sets (@pxref{Record Sets,,, recutils, GNU recutils manual}).  Normalizing into record sets allows joins across record types.  The example below lists the PID of each @code{ChildProcess} and the associated PID for @code{Session} that spawned the @code{ChildProcess} where the @code{Session} was started using @command{guix build}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17206
#, no-wrap
msgid ""
"$ guix processes --format=normalized | \\\n"
"    recsel \\\n"
"    -j Session \\\n"
"    -t ChildProcess \\\n"
"    -p Session.PID,PID \\\n"
"    -e 'Session.ClientCommand ~ \"guix build\"'\n"
"PID: 4435\n"
"Session_PID: 4278\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17209
#, no-wrap
msgid ""
"PID: 4554\n"
"Session_PID: 4278\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17212
#, no-wrap
msgid ""
"PID: 4646\n"
"Session_PID: 4278\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17222
msgid "You can target computers of different CPU architectures when producing packages (@pxref{Invoking guix package}), packs (@pxref{Invoking guix pack}) or full systems (@pxref{Invoking guix system})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17225
msgid "GNU Guix supports two distinct mechanisms to target foreign architectures:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:17231
msgid "The traditional @uref{https://en.wikipedia.org/wiki/Cross_compiler,cross-compilation} mechanism."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:17235
msgid "The native building mechanism which consists in building using the CPU instruction set of the foreign system you are targeting.  It often requires emulation, using the QEMU program for instance."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17245
#, no-wrap
msgid "foreign architectures"
msgstr "arquiteturas estrangeiras"

#. type: Plain text
#: guix-git/doc/guix.texi:17248
msgid "The commands supporting cross-compilation are proposing the @option{--list-targets} and @option{--target} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17251
msgid "The @option{--list-targets} option lists all the supported targets that can be passed as an argument to @option{--target}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17255
#, no-wrap
msgid ""
"$ guix build --list-targets\n"
"The available targets are:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17272
#, no-wrap
msgid ""
"   - aarch64-linux-gnu\n"
"   - arm-linux-gnueabihf\n"
"   - avr\n"
"   - i586-pc-gnu\n"
"   - i686-linux-gnu\n"
"   - i686-w64-mingw32\n"
"   - loongarch64-linux-gnu\n"
"   - mips64el-linux-gnu\n"
"   - or1k-elf\n"
"   - powerpc-linux-gnu\n"
"   - powerpc64le-linux-gnu\n"
"   - riscv64-linux-gnu\n"
"   - x86_64-linux-gnu\n"
"   - x86_64-linux-gnux32\n"
"   - x86_64-w64-mingw32\n"
"   - xtensa-ath9k-elf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17276
msgid "Targets are specified as GNU triplets (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17280
msgid "Those triplets are passed to GCC and the other underlying compilers possibly involved when building a package, a system image or any other GNU Guix output."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17284
#, no-wrap
msgid ""
"$ guix build --target=aarch64-linux-gnu hello\n"
"/gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17288
#, no-wrap
msgid ""
"$ file /gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12/bin/hello\n"
"/gnu/store/9926by9qrxa91ijkhw9ndgwp4bn24g9h-hello-2.12/bin/hello: ELF\n"
"64-bit LSB executable, ARM aarch64 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17294
msgid "The major benefit of cross-compilation is that there are no performance penalty compared to emulation using QEMU.  There are however higher risks that some packages fail to cross-compile because fewer users are using this mechanism extensively."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17300
msgid "The commands that support impersonating a specific system have the @option{--list-systems} and @option{--system} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17303
msgid "The @option{--list-systems} option lists all the supported systems that can be passed as an argument to @option{--system}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17307
#, no-wrap
msgid ""
"$ guix build --list-systems\n"
"The available systems are:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17317
#, no-wrap
msgid ""
"   - x86_64-linux [current]\n"
"   - aarch64-linux\n"
"   - armhf-linux\n"
"   - i586-gnu\n"
"   - i686-linux\n"
"   - mips64el-linux\n"
"   - powerpc-linux\n"
"   - powerpc64le-linux\n"
"   - riscv64-linux\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17320
#, no-wrap
msgid ""
"$ guix build --system=i686-linux hello\n"
"/gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17324
#, no-wrap
msgid ""
"$ file /gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12/bin/hello\n"
"/gnu/store/cc0km35s8x2z4pmwkrqqjx46i8b1i3gm-hello-2.12/bin/hello: ELF\n"
"32-bit LSB executable, Intel 80386 @dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17328
msgid "In the above example, the current system is @var{x86_64-linux}.  The @var{hello} package is however built for the @var{i686-linux} system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17332
msgid "This is possible because the @var{i686} CPU instruction set is a subset of the @var{x86_64}, hence @var{i686} targeting binaries can be run on @var{x86_64}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17337
msgid "Still in the context of the previous example, if picking the @var{aarch64-linux} system and the @command{guix build --system=aarch64-linux hello} has to build some derivations, an extra step might be needed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17345
msgid "The @var{aarch64-linux} targeting binaries cannot directly be run on a @var{x86_64-linux} system.  An emulation layer is requested.  The GNU Guix daemon can take advantage of the Linux kernel @uref{https://en.wikipedia.org/wiki/Binfmt_misc,binfmt_misc} mechanism for that.  In short, the Linux kernel can defer the execution of a binary targeting a foreign platform, here @var{aarch64-linux}, to a userspace program, usually an emulator."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17351
msgid "There is a service that registers QEMU as a backend for the @code{binfmt_misc} mechanism (@pxref{Virtualization Services, @code{qemu-binfmt-service-type}}).  On Debian based foreign distributions, the alternative would be the @code{qemu-user-static} package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17354
msgid "If the @code{binfmt_misc} mechanism is not setup correctly, the building will fail this way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17362
#, no-wrap
msgid ""
"$ guix build --system=armhf-linux hello --check\n"
"@dots{}\n"
"@ unsupported-platform /gnu/store/jjn969pijv7hff62025yxpfmc8zy0aq0-hello-2.12.drv aarch64-linux\n"
"while setting up the build environment: a `aarch64-linux' is required to\n"
"build `/gnu/store/jjn969pijv7hff62025yxpfmc8zy0aq0-hello-2.12.drv', but\n"
"I am a `x86_64-linux'@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17366
msgid "whereas, with the @code{binfmt_misc} mechanism correctly linked with QEMU, one can expect to see:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17370
#, no-wrap
msgid ""
"$ guix build --system=armhf-linux hello --check\n"
"/gnu/store/13xz4nghg39wpymivlwghy08yzj97hlj-hello-2.12\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17376
msgid "The main advantage of native building compared to cross-compiling, is that more packages are likely to build correctly.  However it comes at a price: compilation backed by QEMU is @emph{way slower} than cross-compilation, because every instruction needs to be emulated."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17382
msgid "The availability of substitutes for the architecture targeted by the @code{--system} option can mitigate this problem.  An other way to work around it is to install GNU Guix on a machine whose CPU supports the targeted instruction set, and set it up as an offload machine (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17386
#, no-wrap
msgid "system configuration"
msgstr "configuração do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:17392
msgid "Guix System supports a consistent whole-system configuration mechanism.  By that we mean that all aspects of the global system configuration---such as the available system services, timezone and locale settings, user accounts---are declared in a single place.  Such a @dfn{system configuration} can be @dfn{instantiated}---i.e., effected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17402
msgid "One of the advantages of putting all the system configuration under the control of Guix is that it supports transactional system upgrades, and makes it possible to roll back to a previous system instantiation, should something go wrong with the new one (@pxref{Features}).  Another advantage is that it makes it easy to replicate the exact same configuration across different machines, or at different points in time, without having to resort to additional administration tools layered on top of the own tools of the system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17407
msgid "This section describes this mechanism.  First we focus on the system administrator's viewpoint---explaining how the system is configured and instantiated.  Then we show how this mechanism can be extended, for instance to support new system services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17433
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "system configuration file"
msgstr "Configuração do sistema"

#. type: cindex
#: guix-git/doc/guix.texi:17434
#, fuzzy, no-wrap
msgid "configuration file, of the system"
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:17444
msgid "You're reading this section probably because you have just installed Guix System (@pxref{System Installation}) and would like to know where to go from here.  If you're already familiar with GNU/Linux system administration, the way Guix System is configured is very different from what you're used to: you won't install a system service by running @command{guix install}, you won't configure services by modifying files under @file{/etc}, and you won't create user accounts by invoking @command{useradd}; instead, all these aspects are spelled out in a @dfn{system configuration file}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17448
msgid "The first step with Guix System is thus to write the @dfn{system configuration file}; luckily, system installation already generated one for you and stored it under @file{/etc/config.scm}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17454
msgid "You can store your system configuration file anywhere you like---it doesn't have to be at @file{/etc/config.scm}.  It's a good idea to keep it under version control, for instance in a @uref{https://git-scm.com/book/en/, Git repository}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17459
msgid "The @emph{entire} configuration of the system---user accounts, system services, timezone, locale settings---is declared in this file, which follows this template:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17464
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-package-modules @dots{})\n"
"(use-service-modules @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17474
#, no-wrap
msgid ""
"(operating-system\n"
"  (host-name @dots{})\n"
"  (timezone @dots{})\n"
"  (locale @dots{})\n"
"  (bootloader @dots{})\n"
"  (file-systems @dots{})\n"
"  (users @dots{})\n"
"  (packages @dots{})\n"
"  (services @dots{}))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17482
msgid "This configuration file is in fact a Scheme program; the first lines pull in modules providing variables you might need in the rest of the file---e.g., packages, services, etc.  The @code{operating-system} form declares the system configuration as a @dfn{record} with a number of @dfn{fields}.  @xref{Using the Configuration System}, to view complete examples and learn what to put in there."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17487
msgid "The second step, once you have this configuration file, is to test it.  Of course, you can skip this step if you're feeling lucky---you choose! To do that, pass your configuration file to @command{guix system vm} (no need to be root, you can do that as a regular user):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17490
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix system vm /etc/config.scm\n"
msgstr "$ guix system list-generations 10d\n"

#. type: Plain text
#: guix-git/doc/guix.texi:17496
msgid "This command returns the name of a shell script that starts a virtual machine (VM) running the system @emph{as described in the configuration file}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17499
#, no-wrap
msgid "/gnu/store/@dots{}-run-vm.sh\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17506
msgid "In this VM, you can log in as @code{root} with no password.  That's a good way to check that your configuration file is correct and that it gives the expected result, without touching your system.  @xref{Invoking guix system}, for more information."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17514
msgid "When using @command{guix system vm}, aspects tied to your hardware such as file systems and mapped devices are overridden because they cannot be meaningfully tested in the VM@.  Other aspects such as static network configuration (@pxref{Networking Setup, @code{static-networking-service-type}}) are @emph{not} overridden but they may not work inside the VM@."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17516 guix-git/doc/guix.texi:17926
#, fuzzy, no-wrap
#| msgid "System Installation"
msgid "system instantiation"
msgstr "Instalação do sistema"

#. type: cindex
#: guix-git/doc/guix.texi:17517 guix-git/doc/guix.texi:17927
#, fuzzy, no-wrap
#| msgid "Configuring the operating system."
msgid "reconfiguring the system"
msgstr "Configurando o sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:17521
msgid "The third step, once you're happy with your configuration, is to @dfn{instantiate} it---make this configuration effective on your system.  To do that, run:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17526
#, fuzzy, no-wrap
#| msgid "Specifying system services."
msgid "upgrading system services"
msgstr "Especificando serviços de sistema."

#. type: cindex
#: guix-git/doc/guix.texi:17527
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "system services, upgrading"
msgstr "guix-publish-service-type"

#. type: Plain text
#: guix-git/doc/guix.texi:17535
msgid "This operation is @dfn{transactional}: either it succeeds and you end up with an upgraded system, or it fails and nothing has changed.  Note that it does @emph{not} restart system services that were already running.  Thus, to upgrade those services, you have to reboot or to explicitly restart them; for example, to restart the secure shell (SSH) daemon, you would run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17538
#, no-wrap
msgid "sudo herd restart sshd\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17544
msgid "System services are managed by the Shepherd (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}).  The @code{herd} command lets you inspect, start, and stop services.  To view the status of services, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17547
#, no-wrap
msgid "sudo herd status\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17551
msgid "To view detailed information about a given service, add its name to the command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17554
#, no-wrap
msgid "sudo herd status sshd\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17557
#, fuzzy
#| msgid "@xref{Invoking guix pack}, for more info on this handy tool."
msgid "@xref{Services}, for more information."
msgstr "@xref{Invocando guix pack}, para mais informações sobre essa ferramenta útil."

#. type: cindex
#: guix-git/doc/guix.texi:17559
#, fuzzy, no-wrap
#| msgid "provenance tracking, of the home environment"
msgid "provenance, of the system"
msgstr "rastreamento de proveniência, do ambiente doméstico"

#. type: Plain text
#: guix-git/doc/guix.texi:17562
msgid "The system records its @dfn{provenance}---the configuration file and channels that were used to deploy it.  You can view it like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17565 guix-git/doc/guix.texi:46505
#, no-wrap
msgid "guix system describe\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17569
msgid "Additionally, @command{guix system reconfigure} preserves previous system generations, which you can list:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17572
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix system list-generations\n"
msgstr "$ guix system list-generations 10d\n"

#. type: cindex
#: guix-git/doc/guix.texi:17575
#, no-wrap
msgid "roll back, for the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17582
msgid "Crucially, that means that you can always @emph{roll back} to an earlier generation should something go wrong! When you eventually reboot, you'll notice a sub-menu in the bootloader that reads ``Old system generations'': it's what allows you to boot @emph{an older generation of your system}, should the latest generation be ``broken'' or otherwise unsatisfying.  You can also ``permanently'' roll back, like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17585
#, no-wrap
msgid "sudo guix system roll-back\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17590
msgid "Alternatively, you can use @command{guix system switch-generation} to switch to a specific generation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17595
msgid "Once in a while, you'll want to delete old generations that you do not need anymore to allow @dfn{garbage collection} to free space (@pxref{Invoking guix gc}).  For example, to remove generations older than 4 months, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17598
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "sudo guix system delete-generations 4m\n"
msgstr "$ guix system list-generations 10d\n"

#. type: Plain text
#: guix-git/doc/guix.texi:17604
msgid "From there on, anytime you want to change something in the system configuration, be it adding a user account or changing parameters of a service, you will first update your configuration file and then run @command{guix system reconfigure} as shown above."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17604
#, no-wrap
msgid "upgrade, of the system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17607
msgid "Likewise, to @emph{upgrade} system software, you first fetch an up-to-date Guix and then reconfigure your system with that new Guix:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17616
msgid "We recommend doing that regularly so that your system includes the latest security updates (@pxref{Security Updates})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17619
#, no-wrap
msgid "sudo vs. @command{guix pull}"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17622
msgid "@command{sudo guix} runs your user's @command{guix} command and @emph{not} root's, because @command{sudo} leaves @env{PATH} unchanged."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17627
msgid "The difference matters here, because @command{guix pull} updates the @command{guix} command and package definitions only for the user it is run as.  This means that if you choose to use @command{guix system reconfigure} in root's login shell, you'll need to @command{guix pull} separately."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17632
msgid "That's it! If you're getting started with Guix entirely, @pxref{Getting Started}.  The next sections dive in more detail into the crux of the matter: system configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17640
msgid "The previous section showed the overall workflow you would follow when administering a Guix System machine (@pxref{Getting Started with the System}).  Let's now see in more detail what goes into the system configuration file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17647
msgid "The operating system is configured by providing an @code{operating-system} declaration in a file that can then be passed to the @command{guix system} command (@pxref{Invoking guix system}), as we've seen before.  A simple setup, with the default Linux-Libre kernel, initial RAM disk, and a couple of system services added to those provided by default looks like this:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:17648 guix-git/doc/guix.texi:47212
#: guix-git/doc/guix.texi:52980
#, no-wrap
msgid "operating-system"
msgstr "operating-system"

#. type: include
#: guix-git/doc/guix.texi:17650
#, no-wrap
msgid "os-config-bare-bones.texi"
msgstr "os-config-bare-bones.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:17662
#, fuzzy
#| msgid "This example should be self-describing.  Some of the fields defined above, such as @code{host-name} and @code{bootloader}, are mandatory.  Others, such as @code{packages} and @code{services}, can be omitted, in which case they get a default value."
msgid "The configuration is declarative.  It is code in the Scheme programming language; the whole @code{(operating-system @dots{})} expression produces a @dfn{record} with a number of @dfn{fields}.  Some of the fields defined above, such as @code{host-name} and @code{bootloader}, are mandatory.  Others, such as @code{packages} and @code{services}, can be omitted, in which case they get a default value.  @xref{operating-system Reference}, for details about all the available fields."
msgstr "Este exemplo deve ser autodescritivo. Alguns dos campos definidos acima, como @code{host-name} e @code{bootloader}, são obrigatórios. Outros, como @code{packages} e @code{services}, podem ser omitidos; nesse caso, eles recebem um valor padrão."

#. type: Plain text
#: guix-git/doc/guix.texi:17664
msgid "Below we discuss the meaning of some of the most important fields."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17669
msgid "The configuration file is a Scheme program and you might get the syntax or semantics wrong as you get started.  Syntactic issues such as misplaced parentheses can often be identified by reformatting your file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17672
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix style -f config.scm\n"
msgstr "$ guix system list-generations 10d\n"

#. type: quotation
#: guix-git/doc/guix.texi:17678
msgid "The Cookbook has a short section to get started with the Scheme programming language that explains the fundamentals, which you will find helpful when hacking your configuration.  @xref{A Scheme Crash Course,,, guix-cookbook, GNU Guix Cookbook}."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17680
#, no-wrap
msgid "Bootloader"
msgstr "Carregador de inicialização"

#. type: cindex
#: guix-git/doc/guix.texi:17682
#, no-wrap
msgid "legacy boot, on Intel machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17683
#, no-wrap
msgid "BIOS boot, on Intel machines"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17684
#, no-wrap
msgid "UEFI boot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17685
#, no-wrap
msgid "EFI boot"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17691
msgid "The @code{bootloader} field describes the method that will be used to boot your system.  Machines based on Intel processors can boot in ``legacy'' BIOS mode, as in the example above.  However, more recent machines rely instead on the @dfn{Unified Extensible Firmware Interface} (UEFI) to boot.  In that case, the @code{bootloader} field should contain something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17696
#, no-wrap
msgid ""
"(bootloader-configuration\n"
"  (bootloader grub-efi-bootloader)\n"
"  (targets '(\"/boot/efi\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17700
msgid "@xref{Bootloader Configuration}, for more information on the available configuration options."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17701
#, no-wrap
msgid "Globally-Visible Packages"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:17703
#, no-wrap
msgid "%base-packages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17716
msgid "The @code{packages} field lists packages that will be globally visible on the system, for all user accounts---i.e., in every user's @env{PATH} environment variable---in addition to the per-user profiles (@pxref{Invoking guix package}).  The @code{%base-packages} variable provides all the tools one would expect for basic user and administrator tasks---including the GNU Core Utilities, the GNU Networking Utilities, the @command{mg} lightweight text editor, @command{find}, @command{grep}, etc.  The example above adds GNU@tie{}Screen to those, taken from the @code{(gnu packages screen)} module (@pxref{Package Modules}).  The @code{(list package output)} syntax can be used to add a specific output of a package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17720
#, no-wrap
msgid ""
"(use-modules (gnu packages))\n"
"(use-modules (gnu packages dns))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17725
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (cons (list isc-bind \"utils\")\n"
"                  %base-packages)))\n"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17727
#, no-wrap
msgid "specification->package"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17736
msgid "Referring to packages by variable name, like @code{isc-bind} above, has the advantage of being unambiguous; it also allows typos and such to be diagnosed right away as ``unbound variables''.  The downside is that one needs to know which module defines which package, and to augment the @code{use-package-modules} line accordingly.  To avoid that, one can use the @code{specification->package} procedure of the @code{(gnu packages)} module, which returns the best package for a given name or name and version:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17739 guix-git/doc/guix.texi:17755
#, no-wrap
msgid ""
"(use-modules (gnu packages))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17745
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (append (map specification->package\n"
"                         '(\"tcpdump\" \"htop\" \"gnupg@@2.0\"))\n"
"                    %base-packages)))\n"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17747
#, fuzzy, no-wrap
#| msgid "package"
msgid "specifications->packages"
msgstr "pacote"

#. type: Plain text
#: guix-git/doc/guix.texi:17752
msgid "When a package has more than one output it can be a challenge to refer to a specific output instead of just to the standard @code{out} output.  For these situations one can use the @code{specifications->packages} procedure from the @code{(gnu packages)} module.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17761
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (packages (append (specifications->packages\n"
"                      '(\"git\" \"git:send-email\"))\n"
"                    %base-packages)))\n"
"\n"
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17764
#, no-wrap
msgid "System Services"
msgstr "Serviços do sistema"

#. type: cindex
#: guix-git/doc/guix.texi:17766 guix-git/doc/guix.texi:45701
#: guix-git/doc/guix.texi:47595
#, no-wrap
msgid "services"
msgstr "services"

#. type: defvar
#: guix-git/doc/guix.texi:17767 guix-git/doc/guix.texi:19530
#, no-wrap
msgid "%base-services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17777
msgid "The @code{services} field lists @dfn{system services} to be made available when the system starts (@pxref{Services}).  The @code{operating-system} declaration above specifies that, in addition to the basic services, we want the OpenSSH secure shell daemon listening on port 2222 (@pxref{Networking Services, @code{openssh-service-type}}).  Under the hood, @code{openssh-service-type} arranges so that @command{sshd} is started with the right command-line options, possibly with supporting configuration files generated as needed (@pxref{Defining Services})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17778
#, no-wrap
msgid "customization, of services"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:17779
#, no-wrap
msgid "modify-services"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17783
msgid "Occasionally, instead of using the base services as is, you will want to customize them.  To do this, use @code{modify-services} (@pxref{Service Reference, @code{modify-services}}) to modify the list."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:17789
msgid "auto-login to TTY"
msgstr "auto-login to TTY"

#. type: Plain text
#: guix-git/doc/guix.texi:17789
msgid "For example, suppose you want to modify @code{guix-daemon} and Mingetty (the console log-in) in the @code{%base-services} list (@pxref{Base Services, @code{%base-services}}).  To do that, you can write the following in your operating system declaration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17806
#, no-wrap
msgid ""
"(define %my-services\n"
"  ;; My very own list of services.\n"
"  (modify-services %base-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        ;; Fetch substitutes from example.org.\n"
"                        (substitute-urls\n"
"                          (list \"https://example.org/guix\"\n"
"                                \"https://ci.guix.gnu.org\"))))\n"
"    (mingetty-service-type config =>\n"
"                           (mingetty-configuration\n"
"                            (inherit config)\n"
"                            ;; Automatically log in as \"guest\".\n"
"                            (auto-login \"guest\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17810
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"
msgstr ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services %my-services))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:17823
msgid "This changes the configuration---i.e., the service parameters---of the @code{guix-service-type} instance, and that of all the @code{mingetty-service-type} instances in the @code{%base-services} list (@pxref{Auto-Login to a Specific TTY, see the cookbook for how to auto-login one user to a specific TTY,, guix-cookbook, GNU Guix Cookbook})).  Observe how this is accomplished: first, we arrange for the original configuration to be bound to the identifier @code{config} in the @var{body}, and then we write the @var{body} so that it evaluates to the desired configuration.  In particular, notice how we use @code{inherit} to create a new configuration which has the same values as the old configuration, but with a few modifications."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17830
msgid "The configuration for a typical ``desktop'' usage, with an encrypted root partition, a swap file on the root partition, the X11 display server, GNOME and Xfce (users can choose which of these desktop environments to use at the log-in screen by pressing @kbd{F1}), network management, power management, and more, would look like this:"
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:17832
#, no-wrap
msgid "os-config-desktop.texi"
msgstr "os-config-desktop.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:17837
msgid "A graphical system with a choice of lightweight window managers instead of full-blown desktop environments would look like this:"
msgstr "Um sistema gráfico com uma escolha de gerenciadores de janelas leves em vez de ambientes de desktop completos teria a seguinte aparência:"

#. type: include
#: guix-git/doc/guix.texi:17839
#, no-wrap
msgid "os-config-lightweight-desktop.texi"
msgstr "os-config-lightweight-desktop.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:17845
msgid "This example refers to the @file{/boot/efi} file system by its UUID, @code{1234-ABCD}.  Replace this UUID with the right UUID on your system, as returned by the @command{blkid} command."
msgstr "Este exemplo faz referência ao sistema de arquivos @file{/boot/efi} por seu UUID, @code{1234-ABCD}. Substitua esse UUID pelo UUID correto no seu sistema, conforme retornado pelo comando @command{blkid}."

#. type: Plain text
#: guix-git/doc/guix.texi:17848
msgid "@xref{Desktop Services}, for the exact list of services provided by @code{%desktop-services}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17855
msgid "Again, @code{%desktop-services} is just a list of service objects.  If you want to remove services from there, you can do so using the procedures for list filtering (@pxref{SRFI-1 Filtering and Partitioning,,, guile, GNU Guile Reference Manual}).  For instance, the following expression returns a list that contains all the services in @code{%desktop-services} minus the Avahi service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17860
#, no-wrap
msgid ""
"(remove (lambda (service)\n"
"          (eq? (service-kind service) avahi-service-type))\n"
"        %desktop-services)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17863
msgid "Alternatively, the @code{modify-services} macro can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:17867
#, no-wrap
msgid ""
"(modify-services %desktop-services\n"
"  (delete avahi-service-type))\n"
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17869
#, fuzzy, no-wrap
#| msgid "Printing Services"
msgid "Inspecting Services"
msgstr "Serviços de impressão"

#. type: cindex
#: guix-git/doc/guix.texi:17871
#, fuzzy, no-wrap
#| msgid "Invoking guix system"
msgid "troubleshooting, for system services"
msgstr "Invocando guix system"

#. type: cindex
#: guix-git/doc/guix.texi:17872
#, fuzzy, no-wrap
#| msgid "Specifying system services."
msgid "inspecting system services"
msgstr "Especificando serviços de sistema."

#. type: cindex
#: guix-git/doc/guix.texi:17873
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "system services, inspecting"
msgstr "guix-publish-service-type"

#. type: Plain text
#: guix-git/doc/guix.texi:17877
msgid "As you work on your system configuration, you might wonder why some system service doesn't show up or why the system is not as you expected.  There are several ways to inspect and troubleshoot problems."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17878
#, fuzzy, no-wrap
msgid "dependency graph, of Shepherd services"
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:17881
msgid "First, you can inspect the dependency graph of Shepherd services like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17885
#, no-wrap
msgid ""
"guix system shepherd-graph /etc/config.scm | \\\n"
"  guix shell xdot -- xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17892
msgid "This lets you visualize the Shepherd services as defined in @file{/etc/config.scm}.  Each box is a service as would be shown by @command{sudo herd status} on the running system, and each arrow denotes a dependency (in the sense that if service @var{A} depends on @var{B}, then @var{B} must be started before @var{A})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:17893
#, fuzzy, no-wrap
#| msgid "extension-graph"
msgid "extension graph, of services"
msgstr "extension-graph"

#. type: Plain text
#: guix-git/doc/guix.texi:17897
msgid "Not all ``services'' are Shepherd services though, since Guix System uses a broader definition of the term (@pxref{Services}).  To visualize system services and their relations at a higher level, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17901
#, no-wrap
msgid ""
"guix system extension-graph /etc/config.scm | \\\n"
"  guix shell xdot -- xdot -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17907
msgid "This lets you view the @dfn{service extension graph}: how services ``extend'' each other, for instance by contributing to their configuration.  @xref{Service Composition}, to understand the meaning of this graph."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17911
msgid "Last, you may also find it useful to inspect your system configuration at the REPL (@pxref{Using Guix Interactively}).  Here is an example session:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:17919
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> ,use (gnu)\n"
"scheme@@(guix-user)> (define os (load \"config.scm\"))\n"
"scheme@@(guix-user)> ,pp (map service-kind (operating-system-services os))\n"
"$1 = (#<service-type localed cabba93>\n"
"      @dots{})\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17923
msgid "@xref{Service Reference}, to learn about the Scheme interface to manipulate and inspect services."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17924
#, no-wrap
msgid "Instantiating the System"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17933
msgid "Assuming the @code{operating-system} declaration is stored in the @file{config.scm} file, the @command{sudo guix system reconfigure config.scm} command instantiates that configuration, and makes it the default boot entry.  @xref{Getting Started with the System}, for an overview."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17941
msgid "The normal way to change the system configuration is by updating this file and re-running @command{guix system reconfigure}.  One should never have to touch files in @file{/etc} or to run commands that modify the system state such as @command{useradd} or @command{grub-install}.  In fact, you must avoid that since that would not only void your warranty but also prevent you from rolling back to previous versions of your system, should you ever need to."
msgstr ""

#. type: unnumberedsubsec
#: guix-git/doc/guix.texi:17942
#, no-wrap
msgid "The Programming Interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17947
msgid "At the Scheme level, the bulk of an @code{operating-system} declaration is instantiated with the following monadic procedure (@pxref{The Store Monad}):"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:17948
#, no-wrap
msgid "{Monadic Procedure} operating-system-derivation os"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:17951
msgid "Return a derivation that builds @var{os}, an @code{operating-system} object (@pxref{Derivations})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:17955
msgid "The output of the derivation is a single directory that refers to all the packages, configuration files, and other supporting files needed to instantiate @var{os}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17960
msgid "This procedure is provided by the @code{(gnu system)} module.  Along with @code{(gnu services)} (@pxref{Services}), this module contains the guts of Guix System.  Make sure to visit it!"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:17963
#, no-wrap
msgid "@code{operating-system} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:17968
msgid "This section summarizes all the options available in @code{operating-system} declarations (@pxref{Using the Configuration System})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:17969
#, no-wrap
msgid "{Data Type} operating-system"
msgstr "{Tipo de dados} operating-system"

#. type: deftp
#: guix-git/doc/guix.texi:17973
msgid "This is the data type representing an operating system configuration.  By that, we mean all the global system configuration, not per-user configuration (@pxref{Using the Configuration System})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17975
#, no-wrap
msgid "@code{kernel} (default: @code{linux-libre})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17981
msgid "The package object of the operating system kernel to use@footnote{Currently only the Linux-libre kernel is fully supported.  Using GNU@tie{}mach with the GNU@tie{}Hurd is experimental and only available when building a virtual machine disk image.}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:17982 guix-git/doc/guix.texi:40251
#, no-wrap
msgid "hurd"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17983
#, no-wrap
msgid "@code{hurd} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17988
msgid "The package object of the Hurd to be started by the kernel.  When this field is set, produce a GNU/Hurd operating system.  In that case, @code{kernel} must also be set to the @code{gnumach} package---the microkernel the Hurd runs on."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:17991
msgid "This feature is experimental and only supported for disk images."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17993
#, no-wrap
msgid "@code{kernel-loadable-modules} (default: '())"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:17996
msgid "A list of objects (usually packages) to collect loadable kernel modules from--e.g. @code{(list ddcci-driver-linux)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:17997
#, no-wrap
msgid "@code{kernel-arguments} (default: @code{%default-kernel-arguments})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18000
msgid "List of strings or gexps representing additional arguments to pass on the command-line of the kernel---e.g., @code{(\"console=ttyS0\")}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18001 guix-git/doc/guix.texi:45945
#: guix-git/doc/guix.texi:45964
#, no-wrap
msgid "bootloader"
msgstr "bootloader"

#. type: table
#: guix-git/doc/guix.texi:18003
msgid "The system bootloader configuration object.  @xref{Bootloader Configuration}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18004 guix-git/doc/guix.texi:23641
#: guix-git/doc/guix.texi:46236 guix-git/doc/guix.texi:53065
#, no-wrap
msgid "label"
msgstr "label"

#. type: table
#: guix-git/doc/guix.texi:18007
msgid "This is the label (a string) as it appears in the bootloader's menu entry.  The default label includes the kernel name and version."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18008 guix-git/doc/guix.texi:20001
#: guix-git/doc/guix.texi:25253 guix-git/doc/guix.texi:46108
#, no-wrap
msgid "@code{keyboard-layout} (default: @code{#f})"
msgstr "@code{keyboard-layout} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18013
msgid "This field specifies the keyboard layout to use in the console.  It can be either @code{#f}, in which case the default keyboard layout is used (usually US English), or a @code{<keyboard-layout>} record. @xref{Keyboard Layout}, for more information."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18018
msgid "This keyboard layout is in effect as soon as the kernel has booted.  For instance, it is the keyboard layout in effect when you type a passphrase if your root file system is on a @code{luks-device-mapping} mapped device (@pxref{Mapped Devices})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:18025
msgid "This does @emph{not} specify the keyboard layout used by the bootloader, nor that used by the graphical display server.  @xref{Bootloader Configuration}, for information on how to specify the bootloader's keyboard layout.  @xref{X Window}, for information on how to specify the keyboard layout used by the X Window System."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18027
#, no-wrap
msgid "@code{initrd-modules} (default: @code{%base-initrd-modules})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18028 guix-git/doc/guix.texi:45738
#: guix-git/doc/guix.texi:45871
#, no-wrap
msgid "initrd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18029 guix-git/doc/guix.texi:45739
#: guix-git/doc/guix.texi:45872
#, no-wrap
msgid "initial RAM disk"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18032
msgid "The list of Linux kernel modules that need to be available in the initial RAM disk.  @xref{Initial RAM Disk}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18033
#, no-wrap
msgid "@code{initrd} (default: @code{base-initrd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18037
msgid "A procedure that returns an initial RAM disk for the Linux kernel.  This field is provided to support low-level customization and should rarely be needed for casual use.  @xref{Initial RAM Disk}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18038
#, no-wrap
msgid "@code{firmware} (default: @code{%base-firmware})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18039
#, no-wrap
msgid "firmware"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18041
msgid "List of firmware packages loadable by the operating system kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18046
msgid "The default includes firmware needed for Atheros- and Broadcom-based WiFi devices (Linux-libre modules @code{ath9k} and @code{b43-open}, respectively).  @xref{Hardware Considerations}, for more info on supported hardware."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18047 guix-git/doc/guix.texi:47231
#, no-wrap
msgid "host-name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18049
msgid "The host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18050
#, no-wrap
msgid "@code{mapped-devices} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18052
msgid "A list of mapped devices.  @xref{Mapped Devices}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18053
#, no-wrap
msgid "file-systems"
msgstr "file-systems"

#. type: table
#: guix-git/doc/guix.texi:18055
msgid "A list of file systems.  @xref{File Systems}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18056
#, no-wrap
msgid "@code{swap-devices} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18057
#, no-wrap
msgid "swap devices"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18059
msgid "A list of swap spaces.  @xref{Swap Space}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18060
#, no-wrap
msgid "@code{users} (default: @code{%base-user-accounts})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:18061
#, no-wrap
msgid "@code{groups} (default: @code{%base-groups})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18063
msgid "List of user accounts and groups.  @xref{User Accounts}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18066
msgid "If the @code{users} list lacks a user account with UID@tie{}0, a ``root'' account with UID@tie{}0 is automatically added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18067
#, no-wrap
msgid "@code{skeletons} (default: @code{(default-skeletons)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18071
msgid "A list of target file name/file-like object tuples (@pxref{G-Expressions, file-like objects}).  These are the skeleton files that will be added to the home directory of newly-created user accounts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18073
msgid "For instance, a valid value may look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18079
#, no-wrap
msgid ""
"`((\".bashrc\" ,(plain-file \"bashrc\" \"echo Hello\\n\"))\n"
"  (\".guile\" ,(plain-file \"guile\"\n"
"                         \"(use-modules (ice-9 readline))\n"
"                          (activate-readline)\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18081
#, no-wrap
msgid "@code{issue} (default: @code{%default-issue})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18084
msgid "A string denoting the contents of the @file{/etc/issue} file, which is displayed when users log in on a text console."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18085
#, no-wrap
msgid "@code{packages} (default: @code{%base-packages})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18089
msgid "A list of packages to be installed in the global profile, which is accessible at @file{/run/current-system/profile}.  Each element is either a package variable or a package/output tuple.  Here's a simple example of both:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18094
#, no-wrap
msgid ""
"(cons* git                     ; the default \"out\" output\n"
"       (list git \"send-email\") ; another output of git\n"
"       %base-packages)         ; the default set\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18099
msgid "The default set includes core utilities and it is good practice to install non-core utilities in user profiles (@pxref{Invoking guix package})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18100
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{timezone} (default: @code{\"Etc/UTC\"})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18102
msgid "A timezone identifying string---e.g., @code{\"Europe/Paris\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18106
msgid "You can run the @command{tzselect} command to find out which timezone string corresponds to your region.  Choosing an invalid timezone name causes @command{guix system} to fail."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18107 guix-git/doc/guix.texi:27875
#, no-wrap
msgid "@code{locale} (default: @code{\"en_US.utf8\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18110
msgid "The name of the default locale (@pxref{Locale Names,,, libc, The GNU C Library Reference Manual}).  @xref{Locales}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18111
#, no-wrap
msgid "@code{locale-definitions} (default: @code{%default-locale-definitions})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18114
msgid "The list of locale definitions to be compiled and that may be used at run time.  @xref{Locales}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18115
#, no-wrap
msgid "@code{locale-libcs} (default: @code{(list @var{glibc})})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18119
msgid "The list of GNU@tie{}libc packages whose locale data and tools are used to build the locale definitions.  @xref{Locales}, for compatibility considerations that justify this option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18120
#, no-wrap
msgid "@code{name-service-switch} (default: @code{%default-nss})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18124
msgid "Configuration of the libc name service switch (NSS)---a @code{<name-service-switch>} object.  @xref{Name Service Switch}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18125
#, no-wrap
msgid "@code{services} (default: @code{%base-services})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18127
msgid "A list of service objects denoting system services.  @xref{Services}."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:18129
#, fuzzy
#| msgid "operating-system Reference"
msgid "operating-system-essential-services"
msgstr "Referência do operating-system"

#. type: cindex
#: guix-git/doc/guix.texi:18129
#, no-wrap
msgid "essential services"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18130
#, no-wrap
msgid "@code{essential-services} (default: ...)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18136
msgid "The list of ``essential services''---i.e., things like instances of @code{system-service-type} (@pxref{Service Reference}) and @code{host-name-service-type}, which are derived from the operating system definition itself.  As a user you should @emph{never} need to touch this field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18137
#, no-wrap
msgid "@code{pam-services} (default: @code{(base-pam-services)})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18138
#, no-wrap
msgid "PAM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18139
#, no-wrap
msgid "pluggable authentication modules"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18142
msgid "Linux @dfn{pluggable authentication module} (PAM) services."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18143
#, fuzzy, no-wrap
msgid "@code{privileged-programs} (default: @code{%default-privileged-programs})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18146
msgid "List of @code{<privileged-program>}.  @xref{Privileged Programs}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18147
#, no-wrap
msgid "@code{sudoers-file} (default: @code{%sudoers-specification})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18148
#, no-wrap
msgid "sudoers file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18151
msgid "The contents of the @file{/etc/sudoers} file as a file-like object (@pxref{G-Expressions, @code{local-file} and @code{plain-file}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18156
msgid "This file specifies which users can use the @command{sudo} command, what they are allowed to do, and what privileges they may gain.  The default is that only @code{root} and members of the @code{wheel} group may use @code{sudo}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18159
#, fuzzy, no-wrap
#| msgid "operating-system"
msgid "this-operating-system"
msgstr "sistema operacional"

#. type: defmac
#: guix-git/doc/guix.texi:18162
msgid "When used in the @emph{lexical scope} of an operating system field definition, this identifier resolves to the operating system being defined."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18165
msgid "The example below shows how to refer to the operating system being defined in the definition of the @code{label} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18168
#, no-wrap
msgid ""
"(use-modules (gnu) (guix))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18173
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (label (package-full-name\n"
"          (operating-system-kernel this-operating-system))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:18177
msgid "It is an error to refer to @code{this-operating-system} outside an operating system definition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18188
msgid "The list of file systems to be mounted is specified in the @code{file-systems} field of the operating system declaration (@pxref{Using the Configuration System}).  Each file system is declared using the @code{file-system} form, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18194
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (device \"/dev/sda3\")\n"
"  (type \"ext4\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18198
msgid "As usual, some of the fields are mandatory---those shown in the example above---while others can be omitted.  These are described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18199
#, no-wrap
msgid "{Data Type} file-system"
msgstr "{Tipo de dados} file-system"

#. type: deftp
#: guix-git/doc/guix.texi:18202
msgid "Objects of this type represent file systems to be mounted.  They contain the following members:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18204 guix-git/doc/guix.texi:18636
#: guix-git/doc/guix.texi:21846 guix-git/doc/guix.texi:43290
#, no-wrap
msgid "type"
msgstr "tipo"

#. type: table
#: guix-git/doc/guix.texi:18207
msgid "This is a string specifying the type of the file system---e.g., @code{\"ext4\"}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18208
#, no-wrap
msgid "mount-point"
msgstr "mount-point"

#. type: table
#: guix-git/doc/guix.texi:18210
msgid "This designates the place where the file system is to be mounted."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18211 guix-git/doc/guix.texi:21792
#: guix-git/doc/guix.texi:23749
#, no-wrap
msgid "device"
msgstr "device"

#. type: table
#: guix-git/doc/guix.texi:18221
msgid "This names the ``source'' of the file system.  It can be one of three things: a file system label, a file system UUID, or the name of a @file{/dev} node.  Labels and UUIDs offer a way to refer to file systems without having to hard-code their actual device name@footnote{Note that, while it is tempting to use @file{/dev/disk/by-uuid} and similar device names to achieve the same result, this is not recommended: These special device nodes are created by the udev daemon and may be unavailable at the time the device is mounted.}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:18222
#, no-wrap
msgid "file-system-label"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18227
msgid "File system labels are created using the @code{file-system-label} procedure, UUIDs are created using @code{uuid}, and @file{/dev} nodes are plain strings.  Here's an example of a file system referred to by its label, as shown by the @command{e2label} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18233
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"ext4\")\n"
"  (device (file-system-label \"my-home\")))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18235 guix-git/doc/guix.texi:43006
#: guix-git/doc/guix.texi:43022
#, no-wrap
msgid "uuid"
msgstr "uuid"

#. type: table
#: guix-git/doc/guix.texi:18243
msgid "UUIDs are converted from their string representation (as shown by the @command{tune2fs -l} command) using the @code{uuid} form@footnote{The @code{uuid} form expects 16-byte UUIDs as defined in @uref{https://tools.ietf.org/html/rfc4122, RFC@tie{}4122}.  This is the form of UUID used by the ext2 family of file systems and others, but it is different from ``UUIDs'' found in FAT file systems, for instance.}, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18249
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"ext4\")\n"
"  (device (uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18257
msgid "When the source of a file system is a mapped device (@pxref{Mapped Devices}), its @code{device} field @emph{must} refer to the mapped device name---e.g., @file{\"/dev/mapper/root-partition\"}.  This is required so that the system knows that mounting the file system depends on having the corresponding device mapping established."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18258 guix-git/doc/guix.texi:53074
#, no-wrap
msgid "@code{flags} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18270
msgid "This is a list of symbols denoting mount flags.  Recognized flags include @code{read-only}, @code{bind-mount}, @code{no-dev} (disallow access to special files), @code{no-suid} (ignore setuid and setgid bits), @code{no-atime} (do not update file access times), @code{no-diratime} (likewise for directories only), @code{strict-atime} (update file access time), @code{lazy-time} (only update time on the in-memory version of the file inode), @code{no-exec} (disallow program execution), and @code{shared} (make the mount shared).  @xref{Mount-Unmount-Remount,,, libc, The GNU C Library Reference Manual}, for more information on these flags."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18271
#, no-wrap
msgid "@code{options} (default: @code{#f})"
msgstr "@code{options} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18275
msgid "This is either @code{#f}, or a string denoting mount options passed to the file system driver.  @xref{Mount-Unmount-Remount,,, libc, The GNU C Library Reference Manual}, for details."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18279
msgid "Run @command{man 8 mount} for options for various file systems, but beware that what it lists as file-system-independent ``mount options'' are in fact flags, and belong in the @code{flags} field described above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18284
msgid "The @code{file-system-options->alist} and @code{alist->file-system-options} procedures from @code{(gnu system file-systems)} can be used to convert file system options given as an association list to the string representation, and vice-versa."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18285
#, no-wrap
msgid "@code{mount?} (default: @code{#t})"
msgstr "@code{mount?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:18290
msgid "This value indicates whether to automatically mount the file system when the system is brought up.  When set to @code{#f}, the file system gets an entry in @file{/etc/fstab} (read by the @command{mount} command) but is not automatically mounted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18291
#, no-wrap
msgid "@code{needed-for-boot?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18296
msgid "This Boolean value indicates whether the file system is needed when booting.  If that is true, then the file system is mounted when the initial RAM disk (initrd) is loaded.  This is always the case, for instance, for the root file system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18297
#, no-wrap
msgid "@code{check?} (default: @code{#t})"
msgstr "@code{check?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:18301
msgid "This Boolean indicates whether the file system should be checked for errors before being mounted.  How and when this happens can be further adjusted with the following options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18302
#, fuzzy, no-wrap
#| msgid "@code{check?} (default: @code{#t})"
msgid "@code{skip-check-if-clean?} (default: @code{#t})"
msgstr "@code{check?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:18307
msgid "When true, this Boolean indicates that a file system check triggered by @code{check?} may exit early if the file system is marked as ``clean'', meaning that it was previously correctly unmounted and should not contain errors."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18311
msgid "Setting this to false will always force a full consistency check when @code{check?} is true.  This may take a very long time and is not recommended on healthy systems---in fact, it may reduce reliability!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18315
msgid "Conversely, some primitive file systems like @code{fat} do not keep track of clean shutdowns and will perform a full scan regardless of the value of this option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18316
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{repair} (default: @code{'preen})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18319
msgid "When @code{check?} finds errors, it can (try to) repair them and continue booting.  This option controls when and how to do so."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18323
msgid "If false, try not to modify the file system at all.  Checking certain file systems like @code{jfs} may still write to the device to replay the journal.  No repairs will be attempted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18326
msgid "If @code{#t}, try to repair any errors found and assume ``yes'' to all questions.  This will fix the most errors, but may be risky."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18330
msgid "If @code{'preen}, repair only errors that are safe to fix without human interaction.  What that means is left up to the developers of each file system and may be equivalent to ``none'' or ``all''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18331
#, no-wrap
msgid "@code{create-mount-point?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18333
msgid "When true, the mount point is created if it does not exist yet."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18334
#, no-wrap
msgid "@code{mount-may-fail?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18339
msgid "When true, this indicates that mounting this file system can fail but that should not be considered an error.  This is useful in unusual cases; an example of this is @code{efivarfs}, a file system that can only be mounted on EFI/UEFI systems."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18344
msgid "This is a list of @code{<file-system>} or @code{<mapped-device>} objects representing file systems that must be mounted or mapped devices that must be opened before (and unmounted or closed after) this one."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18348
msgid "As an example, consider a hierarchy of mounts: @file{/sys/fs/cgroup} is a dependency of @file{/sys/fs/cgroup/cpu} and @file{/sys/fs/cgroup/memory}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18351
msgid "Another example is a file system that depends on a mapped device, for example for an encrypted partition (@pxref{Mapped Devices})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18352
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirements} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:18355
msgid "This is a list of symbols denoting Shepherd requirements that must be met before mounting the file system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18365
msgid "As an example, an NFS file system would typically have a requirement for @code{networking}.  In some situations, requiring @code{networking} might not be sufficient as @code{networking} being marked as started does @emph{not} imply the network has already been configured and in working order (for example, when using @code{dhcp-client-service-type}).  For such cases, adding a requirement on a custom @code{network-online} service may be necessary.  A sample @code{network-online} one-shot Shepherd service implementation is provided below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18385
#, no-wrap
msgid ""
"(simple-service 'network-online shepherd-root-service-type\n"
"  (list\n"
"   (shepherd-service\n"
"    (requirement '(networking))\n"
"    (provision '(network-online))\n"
"    (documentation \"Wait for the network to come up.\")\n"
"    (start #~(lambda _\n"
"               (let* ((cmd\n"
"                       \"set -eux\n"
"c=0\n"
"while ! /run/setuid-programs/ping -qc1 -W1 example.org; do\n"
"\tsleep 1\n"
"\t[ \\\"$((c += 1))\\\" -lt 30 ] || exit 1  # Limit the wait time\n"
"done\n"
"\")\n"
"                    (status (system cmd)))\n"
"               (= 0 (status:exit-val status)))))\n"
"    (one-shot? #t))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18393
msgid "Typically, file systems are mounted before most other Shepherd services are started.  However, file systems with a non-empty shepherd-requirements field are mounted after Shepherd services have begun.  Any Shepherd service that depends on a file system with a non-empty shepherd-requirements field must depend on it directly and not on the generic symbol @code{file-systems}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18396
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "{Procedure} file-system-label str"
msgstr "--list-transitive"

#. type: deffn
#: guix-git/doc/guix.texi:18399
msgid "This procedure returns an opaque file system label from @var{str}, a string:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18403
#, no-wrap
msgid ""
"(file-system-label \"home\")\n"
"@result{} #<file-system-label \"home\">\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18407
msgid "File system labels are used to refer to file systems by label rather than by device name.  See above for examples."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18411
msgid "The @code{(gnu system file-systems)} exports the following useful variables."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18412
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "%base-file-systems"
msgstr "--list-transitive"

#. type: defvar
#: guix-git/doc/guix.texi:18417
msgid "These are essential file systems that are required on normal systems, such as @code{%pseudo-terminal-file-system} and @code{%immutable-store} (see below).  Operating system declarations should always contain at least these."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18419
#, no-wrap
msgid "%pseudo-terminal-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18425
msgid "This is the file system to be mounted as @file{/dev/pts}.  It supports @dfn{pseudo-terminals} created @i{via} @code{openpty} and similar functions (@pxref{Pseudo-Terminals,,, libc, The GNU C Library Reference Manual}).  Pseudo-terminals are used by terminal emulators such as @command{xterm}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18427
#, no-wrap
msgid "%shared-memory-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18431
msgid "This file system is mounted as @file{/dev/shm} and is used to support memory sharing across processes (@pxref{Memory-mapped I/O, @code{shm_open},, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18433
#, no-wrap
msgid "%immutable-store"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18438
msgid "This file system performs a read-only ``bind mount'' of @file{/gnu/store}, making it read-only for all the users including @code{root}.  This prevents against accidental modification by software running as @code{root} or by system administrators."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18441
msgid "The daemon itself is still able to write to the store: it remounts it read-write in its own ``name space.''"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18443
#, no-wrap
msgid "%binary-format-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18447
msgid "The @code{binfmt_misc} file system, which allows handling of arbitrary executable file types to be delegated to user space.  This requires the @code{binfmt.ko} kernel module to be loaded."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18449
#, no-wrap
msgid "%fuse-control-file-system"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18453
msgid "The @code{fusectl} file system, which allows unprivileged users to mount and unmount user-space FUSE file systems.  This requires the @code{fuse.ko} kernel module to be loaded."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18457
msgid "The @code{(gnu system uuid)} module provides tools to deal with file system ``unique identifiers'' (UUIDs)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18458
#, no-wrap
msgid "{Procedure} uuid str [type]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18461
msgid "Return an opaque UUID (unique identifier) object of the given @var{type} (a symbol) by parsing @var{str} (a string):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18465
#, no-wrap
msgid ""
"(uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")\n"
"@result{} #<<uuid> type: dce bv: @dots{}>\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18468
#, no-wrap
msgid ""
"(uuid \"1234-ABCD\" 'fat)\n"
"@result{} #<<uuid> type: fat bv: @dots{}>\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18472
msgid "@var{type} may be one of @code{dce}, @code{iso9660}, @code{fat}, @code{ntfs}, or one of the commonly found synonyms for these."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18475
msgid "UUIDs are another way to unambiguously refer to file systems in operating system configuration.  See the examples above."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18489
msgid "The Btrfs has special features, such as subvolumes, that merit being explained in more details.  The following section attempts to cover basic as well as complex uses of a Btrfs file system with the Guix System."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18492
msgid "In its simplest usage, a Btrfs file system can be described, for example, by:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18498
#, no-wrap
msgid ""
"(file-system\n"
"  (mount-point \"/home\")\n"
"  (type \"btrfs\")\n"
"  (device (file-system-label \"my-home\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18504
msgid "The example below is more complex, as it makes use of a Btrfs subvolume, named @code{rootfs}.  The parent Btrfs file system is labeled @code{my-btrfs-pool}, and is located on an encrypted device (hence the dependency on @code{mapped-devices}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18512
#, no-wrap
msgid ""
"(file-system\n"
"  (device (file-system-label \"my-btrfs-pool\"))\n"
"  (mount-point \"/\")\n"
"  (type \"btrfs\")\n"
"  (options \"subvol=rootfs\")\n"
"  (dependencies mapped-devices))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18523
msgid "Some bootloaders, for example GRUB, only mount a Btrfs partition at its top level during the early boot, and rely on their configuration to refer to the correct subvolume path within that top level.  The bootloaders operating in this way typically produce their configuration on a running system where the Btrfs partitions are already mounted and where the subvolume information is readily available.  As an example, @command{grub-mkconfig}, the configuration generator command shipped with GRUB, reads @file{/proc/self/mountinfo} to determine the top-level path of a subvolume."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18531
msgid "The Guix System produces a bootloader configuration using the operating system configuration as its sole input; it is therefore necessary to extract the subvolume name on which @file{/gnu/store} lives (if any)  from that operating system configuration.  To better illustrate, consider a subvolume named 'rootfs' which contains the root file system data.  In such situation, the GRUB bootloader would only see the top level of the root Btrfs partition, e.g.:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18538
#, no-wrap
msgid ""
"/                   (top level)\n"
"├── rootfs          (subvolume directory)\n"
"    ├── gnu         (normal directory)\n"
"        ├── store   (normal directory)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18543
msgid "Thus, the subvolume name must be prepended to the @file{/gnu/store} path of the kernel, initrd binaries and any other files referred to in the GRUB configuration that must be found during the early boot."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18546
msgid "The next example shows a nested hierarchy of subvolumes and directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18553
#, no-wrap
msgid ""
"/                   (top level)\n"
"├── rootfs          (subvolume)\n"
"    ├── gnu         (normal directory)\n"
"        ├── store   (subvolume)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18560
msgid "This scenario would work without mounting the 'store' subvolume.  Mounting 'rootfs' is sufficient, since the subvolume name matches its intended mount point in the file system hierarchy.  Alternatively, the 'store' subvolume could be referred to by setting the @code{subvol} option to either @code{/rootfs/gnu/store} or @code{rootfs/gnu/store}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18562
msgid "Finally, a more contrived example of nested subvolumes:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18569
#, no-wrap
msgid ""
"/                           (top level)\n"
"├── root-snapshots          (subvolume)\n"
"    ├── root-current        (subvolume)\n"
"        ├── guix-store      (subvolume)\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18576
msgid "Here, the 'guix-store' subvolume doesn't match its intended mount point, so it is necessary to mount it.  The subvolume must be fully specified, by passing its file name to the @code{subvol} option.  To illustrate, the 'guix-store' subvolume could be mounted on @file{/gnu/store} by using a file system declaration such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18584
#, no-wrap
msgid ""
"(file-system\n"
"  (device (file-system-label \"btrfs-pool-1\"))\n"
"  (mount-point \"/gnu/store\")\n"
"  (type \"btrfs\")\n"
"  (options \"subvol=root-snapshots/root-current/guix-store,\\\n"
"compress-force=zstd,space_cache=v2\"))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18589
#, no-wrap
msgid "device mapping"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18590
#, no-wrap
msgid "mapped devices"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18607
msgid "The Linux kernel has a notion of @dfn{device mapping}: a block device, such as a hard disk partition, can be @dfn{mapped} into another device, usually in @code{/dev/mapper/}, with additional processing over the data that flows through it@footnote{Note that the GNU@tie{}Hurd makes no difference between the concept of a ``mapped device'' and that of a file system: both boil down to @emph{translating} input/output operations made on a file to operations on its backing store.  Thus, the Hurd implements mapped devices, like file systems, using the generic @dfn{translator} mechanism (@pxref{Translators,,, hurd, The GNU Hurd Reference Manual}).}.  A typical example is encryption device mapping: all writes to the mapped device are encrypted, and all reads are deciphered, transparently.  Guix extends this notion by considering any device or set of devices that are @dfn{transformed} in some way to create a new device; for instance, RAID devices are obtained by @dfn{assembling} several other devices, such as hard disks or partitions, into a new one that behaves as one partition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18610
msgid "Mapped devices are declared using the @code{mapped-device} form, defined as follows; for examples, see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18611
#, no-wrap
msgid "{Data Type} mapped-device"
msgstr "{Tipo de dados} mapped-device"

#. type: deftp
#: guix-git/doc/guix.texi:18614
msgid "Objects of this type represent device mappings that will be made when the system boots up."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18621
msgid "This is either a string specifying the name of the block device to be mapped, such as @code{\"/dev/sda3\"}, or a list of such strings when several devices need to be assembled for creating a new one.  In case of LVM this is a string specifying name of the volume group to be mapped."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18622 guix-git/doc/guix.texi:18823
#: guix-git/doc/guix.texi:52789
#, no-wrap
msgid "target"
msgstr "target"

#. type: table
#: guix-git/doc/guix.texi:18631
msgid "This string specifies the name of the resulting mapped device.  For kernel mappers such as encrypted devices of type @code{luks-device-mapping}, specifying @code{\"my-partition\"} leads to the creation of the @code{\"/dev/mapper/my-partition\"} device.  For RAID devices of type @code{raid-device-mapping}, the full device name such as @code{\"/dev/md0\"} needs to be given.  LVM logical volumes of type @code{lvm-device-mapping} need to be specified as @code{\"VGNAME-LVNAME\"}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:18632 guix-git/doc/guix.texi:46079
#, no-wrap
msgid "targets"
msgstr "targets"

#. type: table
#: guix-git/doc/guix.texi:18635
msgid "This list of strings specifies names of the resulting mapped devices in case there are several.  The format is identical to @var{target}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18639
msgid "This must be a @code{mapped-device-kind} object, which specifies how @var{source} is mapped to @var{target}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18642
#, no-wrap
msgid "luks-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18646
msgid "This defines LUKS block device encryption using the @command{cryptsetup} command from the package with the same name.  It relies on the @code{dm-crypt} Linux kernel module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18648
#, no-wrap
msgid "{Procedure} luks-device-mapping-with-options [#:key-file #:allow-discards?]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18653
msgid "Return a @code{luks-device-mapping} object, which defines LUKS block device encryption using the @command{cryptsetup} command from the package with the same name.  It relies on the @code{dm-crypt} Linux kernel module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18660
msgid "If @code{key-file} is provided, unlocking is first attempted using that key file.  This has an advantage of not requiring a password entry, so it can be used (for example) to unlock RAID arrays automatically on boot.  If key file unlock fails, password unlock is attempted as well.  Key file is not stored in the store and needs to be available at the given location at the time of the unlock attempt."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18669
#, no-wrap
msgid ""
";; Following definition would be equivalent to running:\n"
";;   cryptsetup open --key-file /crypto.key /dev/sdb1 data\n"
"(mapped-device\n"
" (source \"/dev/sdb1)\n"
" (target \"data)\n"
" (type (luks-device-mapping-with-options\n"
"        #:key-file \"/crypto.key\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:18678
msgid "@code{allow-discards?} allows the use of discard (TRIM) requests for the underlying device.  This is useful for solid state drives.  However, this option can have a negative security impact because it can make file system level operations visible on the physical device.  For more information, refer to the description of the @code{--allow-discards} option in the @code{cryptsetup-open(8)} man page."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18681
#, no-wrap
msgid "raid-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18686
msgid "This defines a RAID device, which is assembled using the @code{mdadm} command from the package with the same name.  It requires a Linux kernel module for the appropriate RAID level to be loaded, such as @code{raid456} for RAID-4, RAID-5 or RAID-6, or @code{raid10} for RAID-10."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18688
#, no-wrap
msgid "LVM, logical volume manager"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18689
#, no-wrap
msgid "lvm-device-mapping"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:18694
msgid "This defines one or more logical volumes for the Linux @uref{https://www.sourceware.org/lvm2/, Logical Volume Manager (LVM)}.  The volume group is activated by the @command{vgchange} command from the @code{lvm2} package."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18696
#, no-wrap
msgid "disk encryption"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18697
#, no-wrap
msgid "LUKS"
msgstr "LUKS"

#. type: Plain text
#: guix-git/doc/guix.texi:18705
msgid "The following example specifies a mapping from @file{/dev/sda3} to @file{/dev/mapper/home} using LUKS---the @url{https://gitlab.com/cryptsetup/cryptsetup,Linux Unified Key Setup}, a standard mechanism for disk encryption.  The @file{/dev/mapper/home} device can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18711
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source \"/dev/sda3\")\n"
"  (target \"home\")\n"
"  (type luks-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18716
msgid "Alternatively, to become independent of device numbering, one may obtain the LUKS UUID (@dfn{unique identifier}) of the source device by a command like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:18719
#, no-wrap
msgid "cryptsetup luksUUID /dev/sda3\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18722
msgid "and use it as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18728
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source (uuid \"cb67fc72-0d54-4c88-9d4b-b225f30b0f44\"))\n"
"  (target \"home\")\n"
"  (type luks-device-mapping))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18730
#, no-wrap
msgid "swap encryption"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18737
msgid "It is also desirable to encrypt swap space, since swap space may contain sensitive data.  One way to accomplish that is to use a swap file in a file system on a device mapped via LUKS encryption.  In this way, the swap file is encrypted because the entire device is encrypted.  @xref{Swap Space}, or @xref{Preparing for Installation,,Disk Partitioning}, for an example."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18740
msgid "A RAID device formed of the partitions @file{/dev/sda1} and @file{/dev/sdb1} may be declared as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18746
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source (list \"/dev/sda1\" \"/dev/sdb1\"))\n"
"  (target \"/dev/md0\")\n"
"  (type raid-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18753
msgid "The @file{/dev/md0} device can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems}).  Note that the RAID level need not be given; it is chosen during the initial creation and formatting of the RAID device and is determined automatically later."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18756
msgid "LVM logical volumes ``alpha'' and ``beta'' from volume group ``vg0'' can be declared as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18762
#, no-wrap
msgid ""
"(mapped-device\n"
"  (source \"vg0\")\n"
"  (targets (list \"vg0-alpha\" \"vg0-beta\"))\n"
"  (type lvm-device-mapping))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18767
msgid "Devices @file{/dev/mapper/vg0-alpha} and @file{/dev/mapper/vg0-beta} can then be used as the @code{device} of a @code{file-system} declaration (@pxref{File Systems})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18770
#, no-wrap
msgid "swap space"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18780
msgid "Swap space, as it is commonly called, is a disk area specifically designated for paging: the process in charge of memory management (the Linux kernel or Hurd's default pager) can decide that some memory pages stored in RAM which belong to a running program but are unused should be stored on disk instead.  It unloads those from the RAM, freeing up precious fast memory, and writes them to the swap space.  If the program tries to access that very page, the memory management process loads it back into memory for the program to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18786
msgid "A common misconception about swap is that it is only useful when small amounts of RAM are available to the system.  However, it should be noted that kernels often use all available RAM for disk access caching to make I/O faster, and thus paging out unused portions of program memory will expand the RAM available for such caching."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18790
msgid "For a more detailed description of how memory is managed from the viewpoint of a monolithic kernel, @pxref{Memory Concepts,,, libc, The GNU C Library Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18799
msgid "The Linux kernel has support for swap partitions and swap files: the former uses a whole disk partition for paging, whereas the second uses a file on a file system for that (the file system driver needs to support it).  On a comparable setup, both have the same performance, so one should consider ease of use when deciding between them.  Partitions are ``simpler'' and do not need file system support, but need to be allocated at disk formatting time (logical volumes notwithstanding), whereas files can be allocated and deallocated at any time."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18800
#, fuzzy, no-wrap
#| msgid "deduplication"
msgid "hibernation"
msgstr "deduplicação"

#. type: cindex
#: guix-git/doc/guix.texi:18801
#, no-wrap
msgid "suspend to disk"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18812
msgid "Swap space is also required to put the system into @dfn{hibernation} (also called @dfn{suspend to disk}), whereby memory is dumped to swap before shutdown so it can be restored when the machine is eventually restarted.  Hibernation uses at most half the size of the RAM in the configured swap space.  The Linux kernel needs to know about the swap space to be used to resume from hibernation on boot (@i{via} a kernel argument).  When using a swap file, its offset in the device holding it also needs to be given to the kernel; that value has to be updated if the file is initialized again as swap---e.g., because its size was changed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18817
msgid "Note that swap space is not zeroed on shutdown, so sensitive data (such as passwords) may linger on it if it was paged out.  As such, you should consider having your swap reside on an encrypted device (@pxref{Mapped Devices})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18818
#, no-wrap
msgid "{Data Type} swap-space"
msgstr "{Tipo de dados} swap-space"

#. type: deftp
#: guix-git/doc/guix.texi:18821
msgid "Objects of this type represent swap spaces.  They contain the following members:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18827
msgid "The device or file to use, either a UUID, a @code{file-system-label} or a string, as in the definition of a @code{file-system} (@pxref{File Systems})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18834
msgid "A list of @code{file-system} or @code{mapped-device} objects, upon which the availability of the space depends.  Note that just like for @code{file-system} objects, dependencies which are needed for boot and mounted in early userspace are not managed by the Shepherd, and so automatically filtered out for you."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18835
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{priority} (default: @code{#f})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18842
msgid "Only supported by the Linux kernel.  Either @code{#f} to disable swap priority, or an integer between 0 and 32767.  The kernel will first use swap spaces of higher priority when paging, and use same priority spaces on a round-robin basis.  The kernel will use swap spaces without a set priority after prioritized spaces, and in the order that they appeared in (not round-robin)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:18843
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{discard?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:18847
msgid "Only supported by the Linux kernel.  When true, the kernel will notify the disk controller of discarded pages, for example with the TRIM operation on Solid State Drives."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18852
msgid "Here are some examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18855
#, no-wrap
msgid "(swap-space (target (uuid \"4dab5feb-d176-45de-b287-9b0a6e4c01cb\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18860
msgid "Use the swap partition with the given UUID@.  You can learn the UUID of a Linux swap partition by running @command{swaplabel @var{device}}, where @var{device} is the @file{/dev} file name of that partition."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18865
#, no-wrap
msgid ""
"(swap-space\n"
"  (target (file-system-label \"swap\"))\n"
"  (dependencies mapped-devices))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18871
msgid "Use the partition with label @code{swap}, which can be found after all the @var{mapped-devices} mapped devices have been opened.  Again, the @command{swaplabel} command allows you to view and change the label of a Linux swap partition."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18874
msgid "Here's a more involved example with the corresponding @code{file-systems} part of an @code{operating-system} declaration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18885
#, no-wrap
msgid ""
"(file-systems\n"
"  (list (file-system\n"
"          (device (file-system-label \"root\"))\n"
"          (mount-point \"/\")\n"
"          (type \"ext4\"))\n"
"        (file-system\n"
"          (device (file-system-label \"btrfs\"))\n"
"          (mount-point \"/btrfs\")\n"
"          (type \"btrfs\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18892
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/btrfs/swapfile\")\n"
"      (dependencies (filter (file-system-mount-point-predicate \"/btrfs\")\n"
"                            file-systems)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18897
msgid "Use the file @file{/btrfs/swapfile} as swap space, which depends on the file system mounted at @file{/btrfs}.  Note how we use Guile's filter to select the file system in an elegant fashion!"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18904
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/dev/mapper/my-swap\")\n"
"      (dependencies mapped-devices))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18908
#, no-wrap
msgid ""
"(kernel-arguments\n"
"  (cons* \"resume=/dev/mapper/my-swap\"\n"
"         %default-kernel-arguments))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18915
msgid "The above snippet of an @code{operating-system} declaration enables the mapped device @file{/dev/mapper/my-swap} (which may be part of an encrypted device) as swap space, and tells the kernel to use it for hibernation via the @code{resume} kernel argument (@pxref{operating-system Reference}, @code{kernel-arguments})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18923
#, no-wrap
msgid ""
"(swap-devices\n"
"  (list\n"
"    (swap-space\n"
"      (target \"/swapfile\")\n"
"      (dependencies (filter (file-system-mount-point-predicate \"/\")\n"
"                            file-systems)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18928
#, no-wrap
msgid ""
"(kernel-arguments\n"
"  (cons* \"resume=/dev/sda3\"        ;device that holds /swapfile\n"
"         \"resume_offset=92514304\"  ;offset of /swapfile on device\n"
"         %default-kernel-arguments))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18938
msgid "This other snippet of @code{operating-system} enables the swap file @file{/swapfile} for hibernation by telling the kernel about the partition containing it (@code{resume} argument) and its offset on that partition (@code{resume_offset} argument).  The latter value can be found in the output of the command @command{filefrag -e} as the first number right under the @code{physical_offset} column header (the second command extracts its value directly):"
msgstr ""

#. type: smallexample
#: guix-git/doc/guix.texi:18948
#, no-wrap
msgid ""
"$ sudo filefrag -e /swapfile\n"
"Filesystem type is: ef53\n"
"File size of /swapfile is 2463842304 (601524 blocks of 4096 bytes)\n"
" ext:     logical_offset:        physical_offset: length:   expected: flags:\n"
"   0:        0..    2047:   92514304..  92516351:   2048:\n"
"@dots{}\n"
"$ sudo filefrag -e /swapfile | grep '^ *0:' | cut -d: -f3 | cut -d. -f1\n"
"   92514304\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18953
#, no-wrap
msgid "users"
msgstr "usuários"

#. type: cindex
#: guix-git/doc/guix.texi:18954
#, no-wrap
msgid "accounts"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:18955
#, no-wrap
msgid "user accounts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18959
msgid "User accounts and groups are entirely managed through the @code{operating-system} declaration.  They are specified with the @code{user-account} and @code{user-group} forms:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18969
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"alice\")\n"
"  (group \"users\")\n"
"  (supplementary-groups '(\"wheel\"   ;allow use of sudo, etc.\n"
"                          \"audio\"   ;sound card\n"
"                          \"video\"   ;video devices such as webcams\n"
"                          \"cdrom\")) ;the good ol' CD-ROM\n"
"  (comment \"Bob's sister\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18973
msgid "Here's a user account that uses a different shell and a custom home directory (the default would be @file{\"/home/bob\"}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:18981
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"bob\")\n"
"  (group \"users\")\n"
"  (comment \"Alice's bro\")\n"
"  (shell (file-append zsh \"/bin/zsh\"))\n"
"  (home-directory \"/home/robert\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:18990
msgid "When booting or upon completion of @command{guix system reconfigure}, the system ensures that only the user accounts and groups specified in the @code{operating-system} declaration exist, and with the specified properties.  Thus, account or group creations or modifications made by directly invoking commands such as @command{useradd} are lost upon reconfiguration or reboot.  This ensures that the system remains exactly as declared."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:18991
#, no-wrap
msgid "{Data Type} user-account"
msgstr "{Tipo de dados} user-account"

#. type: deftp
#: guix-git/doc/guix.texi:18994
msgid "Objects of this type represent user accounts.  The following members may be specified:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:18998
msgid "The name of the user account."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:18999 guix-git/doc/guix.texi:45692
#, no-wrap
msgid "group"
msgstr "group"

#. type: cindex
#: guix-git/doc/guix.texi:19000 guix-git/doc/guix.texi:19084
#, no-wrap
msgid "groups"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19003
msgid "This is the name (a string) or identifier (a number) of the user group this account belongs to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19004
#, no-wrap
msgid "@code{supplementary-groups} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19007
msgid "Optionally, this can be defined as a list of group names that this account belongs to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19008 guix-git/doc/guix.texi:27941
#, no-wrap
msgid "@code{uid} (default: @code{#f})"
msgstr "@code{uid} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19012
msgid "This is the user ID for this account (a number), or @code{#f}.  In the latter case, a number is automatically chosen by the system when the account is created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19013 guix-git/doc/guix.texi:23386
#, no-wrap
msgid "@code{comment} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19015
msgid "A comment about the account, such as the account owner's full name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19020
msgid "Note that, for non-system accounts, users are free to change their real name as it appears in @file{/etc/passwd} using the @command{chfn} command.  When they do, their choice prevails over the system administrator's choice; reconfiguring does @emph{not} change their name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19021
#, no-wrap
msgid "home-directory"
msgstr "home-directory"

#. type: table
#: guix-git/doc/guix.texi:19023
msgid "This is the name of the home directory for the account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19024
#, no-wrap
msgid "@code{create-home-directory?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19027
msgid "Indicates whether the home directory of this account should be created if it does not exist yet."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19028
#, no-wrap
msgid "@code{shell} (default: Bash)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19032
msgid "This is a G-expression denoting the file name of a program to be used as the shell (@pxref{G-Expressions}).  For example, you would refer to the Bash executable like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19035
#, no-wrap
msgid "(file-append bash \"/bin/bash\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19039
msgid "... and to the Zsh executable like that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19042
#, no-wrap
msgid "(file-append zsh \"/bin/zsh\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19044 guix-git/doc/guix.texi:19102
#, no-wrap
msgid "@code{system?} (default: @code{#f})"
msgstr "@code{system?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19048
msgid "This Boolean value indicates whether the account is a ``system'' account.  System accounts are sometimes treated specially; for instance, graphical login managers do not list them."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:19050
msgid "user-account-password"
msgstr "user-account-password"

#. type: cindex
#: guix-git/doc/guix.texi:19050
#, no-wrap
msgid "password, for user accounts"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19057
msgid "You would normally leave this field to @code{#f}, initialize user passwords as @code{root} with the @command{passwd} command, and then let users change it with @command{passwd}.  Passwords set with @command{passwd} are of course preserved across reboot and reconfiguration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19061
msgid "If you @emph{do} want to set an initial password for an account, then this field must contain the encrypted password, as a string.  You can use the @code{crypt} procedure for this purpose:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19066
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"charlie\")\n"
"  (group \"users\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19069
#, no-wrap
msgid ""
"  ;; Specify a SHA-512-hashed initial password.\n"
"  (password (crypt \"InitialPassword!\" \"$6$abc\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19075
msgid "The hash of this initial password will be available in a file in @file{/gnu/store}, readable by all the users, so this method must be used with care."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19080
msgid "@xref{Passphrase Storage,,, libc, The GNU C Library Reference Manual}, for more information on password encryption, and @ref{Encryption,,, guile, GNU Guile Reference Manual}, for information on Guile's @code{crypt} procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19086
msgid "User group declarations are even simpler:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19089
#, no-wrap
msgid "(user-group (name \"students\"))\n"
msgstr "(user-group (name \"students\"))\n"

#. type: deftp
#: guix-git/doc/guix.texi:19091
#, no-wrap
msgid "{Data Type} user-group"
msgstr "{Tipo de dados} user-group"

#. type: deftp
#: guix-git/doc/guix.texi:19093
msgid "This type is for, well, user groups.  There are just a few fields:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19097
msgid "The name of the group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19098 guix-git/doc/guix.texi:23637
#: guix-git/doc/guix.texi:40392
#, no-wrap
msgid "@code{id} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19101
msgid "The group identifier (a number).  If @code{#f}, a new number is automatically allocated when the group is created."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19105
msgid "This Boolean value indicates whether the group is a ``system'' group.  System groups have low numerical IDs."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19109
msgid "What, user groups can have a password? Well, apparently yes.  Unless @code{#f}, this field specifies the password of the group."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19115
msgid "For convenience, a variable lists all the basic user groups one may expect:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19116
#, no-wrap
msgid "%base-groups"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19121
msgid "This is the list of basic user groups that users and/or packages expect to be present on the system.  This includes groups such as ``root'', ``wheel'', and ``users'', as well as groups used to control access to specific devices such as ``audio'', ``disk'', and ``cdrom''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19123
#, fuzzy, no-wrap
#| msgid "user-account-password"
msgid "%base-user-accounts"
msgstr "user-account-password"

#. type: defvar
#: guix-git/doc/guix.texi:19126
msgid "This is the list of basic system accounts that programs may expect to find on a GNU/Linux system, such as the ``nobody'' account."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19129
msgid "Note that the ``root'' account is not included here.  It is a special-case and is automatically added whether or not it is specified."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19131
#, no-wrap
msgid "containers, subordinate IDs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19137
msgid "The Linux kernel also implements @dfn{subordinate user and group IDs}, or ``subids'', which are used to map the ID of a user and group to several IDs inside separate name spaces---inside ``containers''.  @xref{subordinate-user-group-ids, the subordinate user and group ID service}, for information on how to configure it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19142
#, no-wrap
msgid "keymap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19150
msgid "To specify what each key of your keyboard does, you need to tell the operating system what @dfn{keyboard layout} you want to use.  The default, when nothing is specified, is the US English QWERTY layout for 105-key PC keyboards.  However, German speakers will usually prefer the German QWERTZ layout, French speakers will want the AZERTY layout, and so on; hackers might prefer Dvorak or bépo, and they might even want to further customize the effect of some of the keys.  This section explains how to get that done."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19151
#, no-wrap
msgid "keyboard layout, definition"
msgstr "disposição do teclado, definição"

#. type: Plain text
#: guix-git/doc/guix.texi:19153
msgid "There are three components that will want to know about your keyboard layout:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19160
msgid "The @emph{bootloader} may want to know what keyboard layout you want to use (@pxref{Bootloader Configuration, @code{keyboard-layout}}).  This is useful if you want, for instance, to make sure that you can type the passphrase of your encrypted root partition using the right layout."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19165
msgid "The @emph{operating system kernel}, Linux, will need that so that the console is properly configured (@pxref{operating-system Reference, @code{keyboard-layout}})."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19169
msgid "The @emph{graphical display server}, usually Xorg, also has its own idea of the keyboard layout (@pxref{X Window, @code{keyboard-layout}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19173
msgid "Guix allows you to configure all three separately but, fortunately, it allows you to share the same keyboard layout for all three components."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19174
#, no-wrap
msgid "XKB, keyboard layouts"
msgstr "XKB, disposições do teclado"

#. type: Plain text
#: guix-git/doc/guix.texi:19182
msgid "Keyboard layouts are represented by records created by the @code{keyboard-layout} procedure of @code{(gnu system keyboard)}.  Following the X Keyboard extension (XKB), each layout has four attributes: a name (often a language code such as ``fi'' for Finnish or ``jp'' for Japanese), an optional variant name, an optional keyboard model name, and a possibly empty list of additional options.  In most cases the layout name is all you care about."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19183
#, no-wrap
msgid "{Procedure} keyboard-layout name [variant] [#:model] [#:options '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19185
msgid "Return a new keyboard layout with the given @var{name} and @var{variant}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19189
msgid "@var{name} must be a string such as @code{\"fr\"}; @var{variant} must be a string such as @code{\"bepo\"} or @code{\"nodeadkeys\"}.  See the @code{xkeyboard-config} package for valid options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19192
msgid "Here are a few examples:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19197
#, no-wrap
msgid ""
";; The German QWERTZ layout.  Here we assume a standard\n"
";; \"pc105\" keyboard model.\n"
"(keyboard-layout \"de\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19200
#, no-wrap
msgid ""
";; The bépo variant of the French layout.\n"
"(keyboard-layout \"fr\" \"bepo\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19203
#, no-wrap
msgid ""
";; The Catalan layout.\n"
"(keyboard-layout \"es\" \"cat\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19206
#, no-wrap
msgid ""
";; Arabic layout with \"Alt-Shift\" to switch to US layout.\n"
"(keyboard-layout \"ar,us\" #:options '(\"grp:alt_shift_toggle\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19213
#, no-wrap
msgid ""
";; The Latin American Spanish layout.  In addition, the\n"
";; \"Caps Lock\" key is used as an additional \"Ctrl\" key,\n"
";; and the \"Menu\" key is used as a \"Compose\" key to enter\n"
";; accented letters.\n"
"(keyboard-layout \"latam\"\n"
"                 #:options '(\"ctrl:nocaps\" \"compose:menu\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19216
#, no-wrap
msgid ""
";; The Russian layout for a ThinkPad keyboard.\n"
"(keyboard-layout \"ru\" #:model \"thinkpad\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19221
#, no-wrap
msgid ""
";; The \"US international\" layout, which is the US layout plus\n"
";; dead keys to enter accented characters.  This is for an\n"
";; Apple MacBook keyboard.\n"
"(keyboard-layout \"us\" \"intl\" #:model \"macbook78\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19225
msgid "See the @file{share/X11/xkb} directory of the @code{xkeyboard-config} package for a complete list of supported layouts, variants, and models."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19226
#, no-wrap
msgid "keyboard layout, configuration"
msgstr "disposição do teclado, configuração"

#. type: Plain text
#: guix-git/doc/guix.texi:19230
msgid "Let's say you want your system to use the Turkish keyboard layout throughout your system---bootloader, console, and Xorg.  Here's what your system configuration would look like:"
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:19231
#, no-wrap
msgid "set-xorg-configuration"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19235
#, no-wrap
msgid ""
";; Using the Turkish layout for the bootloader, the console,\n"
";; and for Xorg.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19247
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (keyboard-layout (keyboard-layout \"tr\"))  ;for the console\n"
"  (bootloader (bootloader-configuration\n"
"                (bootloader grub-efi-bootloader)\n"
"                (targets '(\"/boot/efi\"))\n"
"                (keyboard-layout keyboard-layout))) ;for GRUB\n"
"  (services (cons (set-xorg-configuration\n"
"                    (xorg-configuration             ;for Xorg\n"
"                      (keyboard-layout keyboard-layout)))\n"
"                  %desktop-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19254
msgid "In the example above, for GRUB and for Xorg, we just refer to the @code{keyboard-layout} field defined above, but we could just as well refer to a different layout.  The @code{set-xorg-configuration} procedure communicates the desired Xorg configuration to the graphical log-in manager, by default GDM."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19257
msgid "We've discussed how to specify the @emph{default} keyboard layout of your system when it starts, but you can also adjust it at run time:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19262
msgid "If you're using GNOME, its settings panel has a ``Region & Language'' entry where you can select one or more keyboard layouts."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19267
msgid "Under Xorg, the @command{setxkbmap} command (from the same-named package)  allows you to change the current layout.  For example, this is how you would change the layout to US Dvorak:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19270
#, no-wrap
msgid "setxkbmap us dvorak\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:19277
msgid "The @code{loadkeys} command changes the keyboard layout in effect in the Linux console.  However, note that @code{loadkeys} does @emph{not} use the XKB keyboard layout categorization described above.  The command below loads the French bépo layout:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19280
#, no-wrap
msgid "loadkeys fr-bepo\n"
msgstr "loadkeys fr-bepo\n"

#. type: cindex
#: guix-git/doc/guix.texi:19286
#, no-wrap
msgid "locale"
msgstr "localidade"

#. type: Plain text
#: guix-git/doc/guix.texi:19293
msgid "A @dfn{locale} defines cultural conventions for a particular language and region of the world (@pxref{Locales,,, libc, The GNU C Library Reference Manual}).  Each locale has a name that typically has the form @code{@var{language}_@var{territory}.@var{codeset}}---e.g., @code{fr_LU.utf8} designates the locale for the French language, with cultural conventions from Luxembourg, and using the UTF-8 encoding."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19294
#, no-wrap
msgid "locale definition"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19298
msgid "Usually, you will want to specify the default locale for the machine using the @code{locale} field of the @code{operating-system} declaration (@pxref{operating-system Reference, @code{locale}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19307
msgid "The selected locale is automatically added to the @dfn{locale definitions} known to the system if needed, with its codeset inferred from its name---e.g., @code{bo_CN.utf8} will be assumed to use the @code{UTF-8} codeset.  Additional locale definitions can be specified in the @code{locale-definitions} slot of @code{operating-system}---this is useful, for instance, if the codeset could not be inferred from the locale name.  The default set of locale definitions includes some widely used locales, but not all the available locales, in order to save space."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19310
msgid "For instance, to add the North Frisian locale for Germany, the value of that field may be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19315
#, no-wrap
msgid ""
"(cons (locale-definition\n"
"        (name \"fy_DE.utf8\") (source \"fy_DE\"))\n"
"      %default-locale-definitions)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19319
msgid "Likewise, to save space, one might want @code{locale-definitions} to list only the locales that are actually used, as in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19324
#, no-wrap
msgid ""
"(list (locale-definition\n"
"        (name \"ja_JP.eucjp\") (source \"ja_JP\")\n"
"        (charset \"EUC-JP\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19333
msgid "The compiled locale definitions are available at @file{/run/current-system/locale/X.Y}, where @code{X.Y} is the libc version, which is the default location where the GNU@tie{}libc provided by Guix looks for locale data.  This can be overridden using the @env{LOCPATH} environment variable (@pxref{locales-and-locpath, @env{LOCPATH} and locale packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19336
msgid "The @code{locale-definition} form is provided by the @code{(gnu system locale)} module.  Details are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19337
#, no-wrap
msgid "{Data Type} locale-definition"
msgstr "{Tipo de dados} locale-definition"

#. type: deftp
#: guix-git/doc/guix.texi:19339
msgid "This is the data type of a locale definition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19345
msgid "The name of the locale.  @xref{Locale Names,,, libc, The GNU C Library Reference Manual}, for more information on locale names."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19349
msgid "The name of the source for that locale.  This is typically the @code{@var{language}_@var{territory}} part of the locale name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19350
#, no-wrap
msgid "@code{charset} (default: @code{\"UTF-8\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19354
msgid "The ``character set'' or ``code set'' for that locale, @uref{https://www.iana.org/assignments/character-sets, as defined by IANA}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19358
#, fuzzy, no-wrap
#| msgid "Updating package definitions."
msgid "%default-locale-definitions"
msgstr "Atualizando definições de pacotes."

#. type: defvar
#: guix-git/doc/guix.texi:19362
msgid "A list of commonly used UTF-8 locales, used as the default value of the @code{locale-definitions} field of @code{operating-system} declarations."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19363
#, no-wrap
msgid "locale name"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19364
#, no-wrap
msgid "normalized codeset in locale names"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19370
msgid "These locale definitions use the @dfn{normalized codeset} for the part that follows the dot in the name (@pxref{Using gettextized software, normalized codeset,, libc, The GNU C Library Reference Manual}).  So for instance it has @code{uk_UA.utf8} but @emph{not}, say, @code{uk_UA.UTF-8}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:19372
#, no-wrap
msgid "Locale Data Compatibility Considerations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19374
#, no-wrap
msgid "incompatibility, of locale data"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19381
msgid "@code{operating-system} declarations provide a @code{locale-libcs} field to specify the GNU@tie{}libc packages that are used to compile locale declarations (@pxref{operating-system Reference}).  ``Why would I care?'', you may ask.  Well, it turns out that the binary format of locale data is occasionally incompatible from one libc version to another."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19393
msgid "For instance, a program linked against libc version 2.21 is unable to read locale data produced with libc 2.22; worse, that program @emph{aborts} instead of simply ignoring the incompatible locale data@footnote{Versions 2.23 and later of GNU@tie{}libc will simply skip the incompatible locale data, which is already an improvement.}.  Similarly, a program linked against libc 2.22 can read most, but not all, of the locale data from libc 2.21 (specifically, @env{LC_COLLATE} data is incompatible); thus calls to @code{setlocale} may fail, but programs will not abort."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19398
msgid "The ``problem'' with Guix is that users have a lot of freedom: They can choose whether and when to upgrade software in their profiles, and might be using a libc version different from the one the system administrator used to build the system-wide locale data."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19402
msgid "Fortunately, unprivileged users can also install their own locale data and define @env{GUIX_LOCPATH} accordingly (@pxref{locales-and-locpath, @env{GUIX_LOCPATH} and locale packages})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19409
msgid "Still, it is best if the system-wide locale data at @file{/run/current-system/locale} is built for all the libc versions actually in use on the system, so that all the programs can access it---this is especially crucial on a multi-user system.  To do that, the administrator can specify several libc packages in the @code{locale-libcs} field of @code{operating-system}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19412
#, no-wrap
msgid ""
"(use-package-modules base)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19416
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (locale-libcs (list glibc-2.21 (canonical-package glibc))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19421
msgid "This example would lead to a system containing locale definitions for both libc 2.21 and the current version of libc in @file{/run/current-system/locale}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19426
#, no-wrap
msgid "system services"
msgstr "serviços de sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:19432
msgid "An important part of preparing an @code{operating-system} declaration is listing @dfn{system services} and their configuration (@pxref{Using the Configuration System}).  System services are typically daemons launched when the system boots, or other actions needed at that time---e.g., configuring network access."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19439
msgid "Guix has a broad definition of ``service'' (@pxref{Service Composition}), but many services are managed by the GNU@tie{}Shepherd (@pxref{Shepherd Services}).  On a running system, the @command{herd} command allows you to list the available services, show their status, start and stop them, or do other specific operations (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}).  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19442
#, no-wrap
msgid "# herd status\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19447
msgid "The above command, run as @code{root}, lists the currently defined services.  The @command{herd doc} command shows a synopsis of the given service and its associated actions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19451
#, no-wrap
msgid ""
"# herd doc nscd\n"
"Run libc's name service cache daemon (nscd).\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19454
#, no-wrap
msgid ""
"# herd doc nscd action invalidate\n"
"invalidate: Invalidate the given cache--e.g., 'hosts' for host name lookups.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19459
msgid "The @command{start}, @command{stop}, and @command{restart} sub-commands have the effect you would expect.  For instance, the commands below stop the nscd service and restart the Xorg display server:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19466
#, no-wrap
msgid ""
"# herd stop nscd\n"
"Service nscd has been stopped.\n"
"# herd restart xorg-server\n"
"Service xorg-server has been stopped.\n"
"Service xorg-server has been started.\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19468
#, fuzzy, no-wrap
msgid "configuration, action for shepherd services"
msgstr "Gerencie a configuração do sistema operacional."

#. type: cindex
#: guix-git/doc/guix.texi:19469
#, fuzzy, no-wrap
msgid "configuration file, of a shepherd service"
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:19473
msgid "For some services, @command{herd configuration} returns the name of the service's configuration file, which can be handy to inspect its configuration:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19477
#, no-wrap
msgid ""
"# herd configuration sshd\n"
"/gnu/store/@dots{}-sshd_config\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19482
msgid "The following sections document the available services, starting with the core services, that may be used in an @code{operating-system} declaration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:19529
msgid "The @code{(gnu services base)} module provides definitions for the basic services that one expects from the system.  The services exported by this module are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19536
msgid "This variable contains a list of basic services (@pxref{Service Types and Services}, for more information on service objects) one would expect from the system: a login service (mingetty) on each tty, syslogd, the libc name service cache daemon (nscd), the udev device manager, and more."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19541
msgid "This is the default value of the @code{services} field of @code{operating-system} declarations.  Usually, when customizing a system, you will want to append services to @code{%base-services}, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19546
#, no-wrap
msgid ""
"(append (list (service avahi-service-type)\n"
"              (service openssh-service-type))\n"
"        %base-services)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19549
#, fuzzy, no-wrap
msgid "special-files-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19552
msgid "This is the service that sets up ``special files'' such as @file{/bin/sh}; an instance of it is part of @code{%base-services}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19556
msgid "The value associated with @code{special-files-service-type} services must be a list of two-element lists where the first element is the ``special file'' and the second element is its target.  By default it is:"
msgstr ""

#. type: file{#1}
#: guix-git/doc/guix.texi:19557
#, no-wrap
msgid "/bin/sh"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19558
#, no-wrap
msgid "@file{sh}, in @file{/bin}"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19562
#, no-wrap
msgid ""
"`((\"/bin/sh\" ,(file-append bash \"/bin/sh\"))\n"
"  (\"/usr/bin/env\" ,(file-append coreutils \"/bin/env\")))\n"
msgstr ""

#. type: file{#1}
#: guix-git/doc/guix.texi:19564
#, no-wrap
msgid "/usr/bin/env"
msgstr "/usr/bin/env"

#. type: cindex
#: guix-git/doc/guix.texi:19565
#, no-wrap
msgid "@file{env}, in @file{/usr/bin}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19568
msgid "If you want to add, say, @code{/bin/bash} to your system, you can change it to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19573
#, no-wrap
msgid ""
"`((\"/bin/sh\" ,(file-append bash \"/bin/sh\"))\n"
"  (\"/usr/bin/env\" ,(file-append coreutils \"/bin/env\"))\n"
"  (\"/bin/bash\" ,(file-append bash \"/bin/bash\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19580
msgid "Since this is part of @code{%base-services}, you can use @code{modify-services} to customize the set of special files (@pxref{Service Reference, @code{modify-services}}).  But the simple way to add a special file is @i{via} the @code{extra-special-file} procedure (see below)."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19582
#, no-wrap
msgid "{Procedure} extra-special-file file target"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19584
msgid "Use @var{target} as the ``special file'' @var{file}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19588
msgid "For example, adding the following lines to the @code{services} field of your operating system declaration leads to a @file{/usr/bin/env} symlink:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19592
#, no-wrap
msgid ""
"(extra-special-file \"/usr/bin/env\"\n"
"                    (file-append coreutils \"/bin/env\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19597
msgid "This procedure is meant for @code{/bin/sh}, @code{/usr/bin/env} and similar targets.  In particular, use for targets under @code{/etc} might not work as expected if the target is managed by Guix in other ways."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19599
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "host-name-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19603
msgid "Type of the service that sets the system host name, whose value is a string. This service is included in @code{operating-system} by default (@pxref{operating-system-essential-services,@code{essential-services}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19605
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "console-font-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19610
msgid "Install the given fonts on the specified ttys (fonts are per virtual console on the kernel Linux).  The value of this service is a list of tty/font pairs.  The font can be the name of a font provided by the @code{kbd} package or any valid argument to @command{setfont}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19619
#, no-wrap
msgid ""
"`((\"tty1\" . \"LatGrkCyr-8x16\")\n"
"  (\"tty2\" . ,(file-append\n"
"                font-tamzen\n"
"                \"/share/kbd/consolefonts/TamzenForPowerline10x20.psf\"))\n"
"  (\"tty3\" . ,(file-append\n"
"                font-terminus\n"
"                \"/share/consolefonts/ter-132n\"))) ; for HDPI\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19622
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hosts-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19626
msgid "Type of the service that populates the entries for (@file{/etc/hosts}).  This service type can be @emph{extended} by passing it a list of @code{host} records."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19628
msgid "The example below shows how to add two entries to @file{/etc/hosts}:"
msgstr ""

#.  The domain names below SHOULD NOT be translated.
#. type: lisp
#: guix-git/doc/guix.texi:19639
#, no-wrap
msgid ""
"(simple-service 'add-extra-hosts\n"
"                hosts-service-type\n"
"                (list (host \"192.0.2.1\" \"example.com\"\n"
"                            '(\"example.net\" \"example.org\"))\n"
"                      (host \"2001:db8::1\" \"example.com\"\n"
"                            '(\"example.net\" \"example.org\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19642
#, no-wrap
msgid "@file{/etc/hosts} default entries"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19644
msgid "By default @file{/etc/hosts} comes with the following entries:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:19647
#, no-wrap
msgid ""
"127.0.0.1 localhost @var{host-name}\n"
"::1       localhost @var{host-name}\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19653
msgid "For most setups this is what you want though if you find yourself in the situation where you want to change the default entries, you can do so in @code{operating-system} via @code{modify-services} (@pxref{Service Reference,@code{modify-services}})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:19656
msgid "The following example shows how to unset @var{host-name} from being an alias of @code{localhost}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19659 guix-git/doc/guix.texi:21158
#: guix-git/doc/guix.texi:21233
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19666
#, no-wrap
msgid ""
"  (essential-services\n"
"   (modify-services\n"
"     (operating-system-default-essential-services this-operating-system)\n"
"     (hosts-service-type config => (list\n"
"                                     (host \"127.0.0.1\" \"localhost\")\n"
"                                     (host \"::1\"       \"localhost\"))))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19671
#, no-wrap
msgid "{Procedure} host @var{address} @var{canonical-name} [@var{aliases}]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19674
msgid "Return a new record for the host at @var{address} with the given @var{canonical-name} and possibly @var{aliases}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:19678
msgid "@var{address} must be a string denoting a valid IPv4 or IPv6 address, and @var{canonical-name} and the strings listed in @var{aliases} must be valid host names."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19680
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "login-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19683
msgid "Type of the service that provides a console login service, whose value is a @code{<login-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19685
#, no-wrap
msgid "{Data Type} login-configuration"
msgstr "{Tipo de dados} login-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:19688
#, fuzzy
msgid "Data type representing the configuration of login, which specifies the @acronym{MOTD, message of the day}, among other things."
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:19691 guix-git/doc/guix.texi:20846
#, no-wrap
msgid "motd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:19692
#, no-wrap
msgid "message of the day"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19694 guix-git/doc/guix.texi:20848
msgid "A file-like object containing the ``message of the day''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19695 guix-git/doc/guix.texi:20849
#: guix-git/doc/guix.texi:24842
#, no-wrap
msgid "@code{allow-empty-passwords?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19698 guix-git/doc/guix.texi:20852
msgid "Allow empty passwords by default so that first-time users can log in when the 'root' account has just been created."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19702
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mingetty-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19706
msgid "Type of the service that runs Mingetty, an implementation of the virtual console log-in.  The value for this service is a @code{<mingetty-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19708
#, no-wrap
msgid "{Data Type} mingetty-configuration"
msgstr "{Tipo de dados} mingetty-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:19711
#, fuzzy
msgid "Data type representing the configuration of Mingetty, which specifies the tty to run, among other things."
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:19713 guix-git/doc/guix.texi:19797
#: guix-git/doc/guix.texi:43735
#, no-wrap
msgid "tty"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19715
msgid "The name of the console this Mingetty runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19716 guix-git/doc/guix.texi:19826
#: guix-git/doc/guix.texi:19988
#, no-wrap
msgid "@code{auto-login} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19720
msgid "When true, this field must be a string denoting the user name under which the system automatically logs in.  When it is @code{#f}, a user name and password must be entered to log in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19721
#, no-wrap
msgid "@code{login-program} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19725
msgid "This must be either @code{#f}, in which case the default log-in program is used (@command{login} from the Shadow tool suite), or a gexp denoting the name of the log-in program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19726
#, no-wrap
msgid "@code{login-pause?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19729
msgid "When set to @code{#t} in conjunction with @var{auto-login}, the user will have to press a key before the log-in shell is launched."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19730
#, no-wrap
msgid "@code{clear-on-logout?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19734
msgid "When set to @code{#t}, the screen will be cleared before showing the login prompt.  The field name is bit unfortunate, since it controls clearing also before the initial login, not just after a logout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19735 guix-git/doc/guix.texi:19948
#, no-wrap
msgid "@code{delay} (default: @code{#f})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19737
msgid "When set to a number, sleep that many seconds after startup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19738
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{print-issue} (default: @code{#t})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19742
msgid "When set to @code{#t}, write out a new line and the content of @file{/etc/issue}.  Value of @code{'no-nl} can be used to suppress the new line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19743
#, fuzzy, no-wrap
#| msgid "@code{no-hostname?} (default: @code{#f})"
msgid "@code{print-hostname} (default: @code{#t})"
msgstr "@code{no-hostname?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19747
msgid "When set to @code{#t}, print the host name before the login prompt.  The host name is printed up to the first dot.  Can be set to @code{'long} to print the full host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19748 guix-git/doc/guix.texi:19952
#, no-wrap
msgid "@code{nice} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19750
msgid "When set to a number, change the process priority using @code{nice}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19751
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{working-directory} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19754
msgid "When set to a string, change into that directory before calling the login program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19755
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{root-directory} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19758
msgid "When set to a string, use this directory at the process's root directory."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:19759
#, fuzzy, no-wrap
#| msgid "Requirements"
msgid "shepherd-requirement"
msgstr "Requisitos"

#. type: table
#: guix-git/doc/guix.texi:19762
msgid "List of shepherd requirements.  Unless you know what you are doing, it is recommended to extend the default list instead of overriding it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19765
msgid "As an example, when using auto-login on a system with elogind, it is necessary to wait on the @code{'dbus-system} service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:19777
#, fuzzy, no-wrap
#| msgid ""
#| "(operating-system\n"
#| "  ;; @dots{}\n"
#| "  (services\n"
#| "    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
#| "    ;; with the list of services you're actually using.\n"
#| "    (modify-services %desktop-services\n"
#| "      (guix-service-type config =>\n"
#| "                        (guix-configuration\n"
#| "                          (inherit config)\n"
#| "                          (substitute-urls\n"
#| "                            (append (list \"https://guix.example.org\")\n"
#| "                                    %default-substitute-urls))\n"
#| "                          (authorized-keys\n"
#| "                            (append (list (local-file \"./key.pub\"))\n"
#| "                                    %default-authorized-guix-keys)))))))\n"
msgid ""
"(modify-services %base-services\n"
"  (mingetty-service-type config =>\n"
"                         (mingetty-configuration\n"
"                          (inherit config)\n"
"                          ;; Automatically log in as \"guest\".\n"
"                          (auto-login \"guest\")\n"
"                          (shepherd-requirement\n"
"                           (cons 'dbus-system\n"
"                                 (mingetty-configuration-shepherd-requirement\n"
"                                  config))))))\n"
msgstr ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"  ;; Suponha que estamos começando com '%desktop-services'. Substitua-o\n"
"  ;; pela lista de serviços que você está realmente usando.\n"
"  (modify-services %desktop-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        (substitute-urls\n"
"                         (append (list \"https://guix.example.org\")\n"
"                                 %default-substitute-urls))\n"
"                        (authorized-keys\n"
"                         (append (list (local-file \"./key.pub\"))\n"
"                                 %default-authorized-guix-keys)))))))\n"

#. type: item
#: guix-git/doc/guix.texi:19779
#, no-wrap
msgid "@code{mingetty} (default: @var{mingetty})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19781
msgid "The Mingetty package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19785
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "agetty-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19789
msgid "Type of the service that runs agetty, which implements virtual and serial console log-in.  The value for this service is a @code{<agetty-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19791
#, no-wrap
msgid "{Data Type} agetty-configuration"
msgstr "{Tipo de dados} agetty-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:19795
msgid "Data type representing the configuration of agetty, which specifies the tty to run, among other things@footnote{See the @code{agetty(8)} man page for more information.}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19801
msgid "The name of the console this agetty runs on, as a string---e.g., @code{\"ttyS0\"}.  This argument is optional, it will default to a reasonable default serial port used by the kernel Linux."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19805
msgid "For this, if there is a value for an option @code{agetty.tty} in the kernel command line, agetty will extract the device name of the serial port from it and use that."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19809
msgid "If not and if there is a value for an option @code{console} with a tty in the Linux command line, agetty will extract the device name of the serial port from it and use that."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19813
msgid "In both cases, agetty will leave the other serial device settings (baud rate etc.)@: alone---in the hope that Linux pinned them to the correct values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19814 guix-git/doc/guix.texi:43921
#, no-wrap
msgid "@code{baud-rate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19817
msgid "A string containing a comma-separated list of one or more baud rates, in descending order."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19818
#, no-wrap
msgid "@code{term} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19821
msgid "A string containing the value used for the @env{TERM} environment variable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19822
#, no-wrap
msgid "@code{eight-bits?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19825
msgid "When @code{#t}, the tty is assumed to be 8-bit clean, and parity detection is disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19829 guix-git/doc/guix.texi:19991
msgid "When passed a login name, as a string, the specified user will be logged in automatically without prompting for their login name or password."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19830
#, no-wrap
msgid "@code{no-reset?} (default: @code{#f})"
msgstr "@code{no-reset?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19832
msgid "When @code{#t}, don't reset terminal cflags (control modes)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19833
#, no-wrap
msgid "@code{host} (default: @code{#f})"
msgstr "@code{host} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19836
msgid "This accepts a string containing the ``login_host'', which will be written into the @file{/var/run/utmpx} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19837
#, no-wrap
msgid "@code{remote?} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19841
msgid "When set to @code{#t} in conjunction with @var{host}, this will add an @code{-r} fakehost option to the command line of the login program specified in @var{login-program}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19842
#, no-wrap
msgid "@code{flow-control?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19844
msgid "When set to @code{#t}, enable hardware (RTS/CTS) flow control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19845
#, no-wrap
msgid "@code{no-issue?} (default: @code{#f})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19848
msgid "When set to @code{#t}, the contents of the @file{/etc/issue} file will not be displayed before presenting the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19849
#, no-wrap
msgid "@code{init-string} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19852
msgid "This accepts a string that will be sent to the tty or modem before sending anything else.  It can be used to initialize a modem."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19853
#, no-wrap
msgid "@code{no-clear?} (default: @code{#f})"
msgstr "@code{no-clear?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19856
msgid "When set to @code{#t}, agetty will not clear the screen before showing the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19857
#, no-wrap
msgid "@code{login-program} (default: (file-append shadow \"/bin/login\"))"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19861
msgid "This must be either a gexp denoting the name of a log-in program, or unset, in which case the default value is the @command{login} from the Shadow tool suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19862
#, no-wrap
msgid "@code{local-line} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19866
msgid "Control the CLOCAL line flag.  This accepts one of three symbols as arguments, @code{'auto}, @code{'always}, or @code{'never}.  If @code{#f}, the default value chosen by agetty is @code{'auto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19867
#, no-wrap
msgid "@code{extract-baud?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19870
msgid "When set to @code{#t}, instruct agetty to try to extract the baud rate from the status messages produced by certain types of modems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19871
#, no-wrap
msgid "@code{skip-login?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19875
msgid "When set to @code{#t}, do not prompt the user for a login name.  This can be used with @var{login-program} field to use non-standard login systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19876
#, no-wrap
msgid "@code{no-newline?} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19879
msgid "When set to @code{#t}, do not print a newline before printing the @file{/etc/issue} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19881
#, no-wrap
msgid "@code{login-options} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19886
msgid "This option accepts a string containing options that are passed to the login program.  When used with the @var{login-program}, be aware that a malicious user could try to enter a login name containing embedded options that could be parsed by the login program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19887
#, no-wrap
msgid "@code{login-pause} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19891
msgid "When set to @code{#t}, wait for any key before showing the login prompt.  This can be used in conjunction with @var{auto-login} to save memory by lazily spawning shells."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19892 guix-git/doc/guix.texi:37568
#, no-wrap
msgid "@code{chroot} (default: @code{#f})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19895
msgid "Change root to the specified directory.  This option accepts a directory path as a string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19896
#, no-wrap
msgid "@code{hangup?} (default: @code{#f})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19899
msgid "Use the Linux system call @code{vhangup} to do a virtual hangup of the specified terminal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19900
#, no-wrap
msgid "@code{keep-baud?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19904
msgid "When set to @code{#t}, try to keep the existing baud rate.  The baud rates from @var{baud-rate} are used when agetty receives a @key{BREAK} character."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19905
#, no-wrap
msgid "@code{timeout} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19908
msgid "When set to an integer value, terminate if no user name could be read within @var{timeout} seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19909
#, no-wrap
msgid "@code{detect-case?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19915
msgid "When set to @code{#t}, turn on support for detecting an uppercase-only terminal.  This setting will detect a login name containing only uppercase letters as indicating an uppercase-only terminal and turn on some upper-to-lower case conversions.  Note that this will not support Unicode characters."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19916
#, no-wrap
msgid "@code{wait-cr?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19921
msgid "When set to @code{#t}, wait for the user or modem to send a carriage-return or linefeed character before displaying @file{/etc/issue} or login prompt.  This is typically used with the @var{init-string} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19922
#, no-wrap
msgid "@code{no-hints?} (default: @code{#f})"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19925
msgid "When set to @code{#t}, do not print hints about Num, Caps, and Scroll locks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19926
#, no-wrap
msgid "@code{no-hostname?} (default: @code{#f})"
msgstr "@code{no-hostname?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19929
msgid "By default, the hostname is printed.  When this option is set to @code{#t}, no hostname will be shown at all."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19930
#, no-wrap
msgid "@code{long-hostname?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19934
msgid "By default, the hostname is only printed until the first dot.  When this option is set to @code{#t}, the fully qualified hostname by @code{gethostname} or @code{getaddrinfo} is shown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19935
#, no-wrap
msgid "@code{erase-characters} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19938
msgid "This option accepts a string of additional characters that should be interpreted as backspace when the user types their login name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19939
#, no-wrap
msgid "@code{kill-characters} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19943
msgid "This option accepts a string that should be interpreted to mean ``ignore all previous characters'' (also called a ``kill'' character) when the user types their login name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19944
#, no-wrap
msgid "@code{chdir} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19947
msgid "This option accepts, as a string, a directory path that will be changed to before login."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19951
msgid "This options accepts, as an integer, the number of seconds to sleep before opening the tty and displaying the login prompt."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19955
msgid "This option accepts, as an integer, the nice value with which to run the @command{login} program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19956 guix-git/doc/guix.texi:20159
#: guix-git/doc/guix.texi:20344 guix-git/doc/guix.texi:22432
#: guix-git/doc/guix.texi:31540 guix-git/doc/guix.texi:33014
#: guix-git/doc/guix.texi:34895 guix-git/doc/guix.texi:36593
#: guix-git/doc/guix.texi:37732 guix-git/doc/guix.texi:41227
#: guix-git/doc/guix.texi:44883 guix-git/doc/guix.texi:50535
#: guix-git/doc/guix.texi:51301 guix-git/doc/guix.texi:51365
#, no-wrap
msgid "@code{extra-options} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19959
msgid "This option provides an ``escape hatch'' for the user to provide arbitrary command-line arguments to @command{agetty} as a list of strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19960 guix-git/doc/guix.texi:21949
#: guix-git/doc/guix.texi:22180 guix-git/doc/guix.texi:29667
#: guix-git/doc/guix.texi:34515
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:19963
msgid "The option can be used to provides extra shepherd requirements (for example @code{'syslogd}) to the respective @code{'term-}* shepherd service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:19967
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "kmscon-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:19971
msgid "Type of the service that runs @uref{https://www.freedesktop.org/wiki/Software/kmscon,kmscon}, which implements virtual console log-in.  The value for this service is a @code{<kmscon-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:19973
#, no-wrap
msgid "{Data Type} kmscon-configuration"
msgstr "{Tipo de dados} kmscon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:19976
#, fuzzy
msgid "Data type representing the configuration of Kmscon, which specifies the tty to run, among other things."
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:19978
#, no-wrap
msgid "virtual-terminal"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19980
msgid "The name of the console this Kmscon runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19981
#, no-wrap
msgid "@code{login-program} (default: @code{#~(string-append #$shadow \"/bin/login\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19984
msgid "A gexp denoting the name of the log-in program.  The default log-in program is @command{login} from the Shadow tool suite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19985
#, no-wrap
msgid "@code{login-arguments} (default: @code{'(\"-p\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19987
msgid "A list of arguments to pass to @command{login}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19992
#, no-wrap
msgid "@code{hardware-acceleration?} (default: #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:19994
msgid "Whether to use hardware acceleration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19995
#, fuzzy, no-wrap
msgid "@code{font-engine} (default: @code{\"pango\"})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:19997
msgid "Font engine used in Kmscon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:19998
#, fuzzy, no-wrap
msgid "@code{font-size} (default: @code{12})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20000
msgid "Font size used in Kmscon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20004
msgid "If this is @code{#f}, Kmscon uses the default keyboard layout---usually US English (``qwerty'') for a 105-key PC keyboard."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20008
msgid "Otherwise this must be a @code{keyboard-layout} object specifying the keyboard layout.  @xref{Keyboard Layout}, for more information on how to specify the keyboard layout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20009
#, no-wrap
msgid "@code{kmscon} (default: @var{kmscon})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20011
msgid "The Kmscon package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20016
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "nscd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20019
#, fuzzy
msgid "Type of the service that runs the libc @abbr{nscd, name service cache daemon}, whose value is an @code{<nscd-configuration>} object."
msgstr "Gerencie a configuração do sistema operacional."

#. type: defvar
#: guix-git/doc/guix.texi:20021
msgid "For convenience, the Shepherd service for nscd provides the following actions:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20023
#, no-wrap
msgid "invalidate"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20024
#, no-wrap
msgid "nscd, cache invalidation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20025
#, no-wrap
msgid "cache invalidation, nscd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20027
msgid "This invalidate the given cache.  For instance, running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20030
#, no-wrap
msgid "herd invalidate nscd hosts\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20034
msgid "invalidates the host name lookup cache of nscd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20035
#, no-wrap
msgid "statistics"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20038
msgid "Running @command{herd statistics nscd} displays information about nscd usage and caches."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20041
#, no-wrap
msgid "{Data Type} nscd-configuration"
msgstr "{Tipo de dados} nscd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20044
#, fuzzy
msgid "Data type representing the @abbr{nscd, name service cache daemon} configuration."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20047
#, no-wrap
msgid "@code{name-services} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20050
msgid "List of packages denoting @dfn{name services} that must be visible to the nscd---e.g., @code{(list @var{nss-mdns})}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20051
#, no-wrap
msgid "@code{glibc} (default: @var{glibc})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20054
msgid "Package object denoting the GNU C Library providing the @command{nscd} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20055 guix-git/doc/guix.texi:43925
#, no-wrap
msgid "@code{log-file} (default: @code{#f})"
msgstr "@code{log-file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20060
msgid "Name of the nscd log file.  Debugging output goes to that file when @code{debug-level} is strictly positive, or to standard error if it is @code{#f}.  Regular messages are written to syslog when @code{debug-level} is zero, regardless of the value of @code{log-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20061
#, no-wrap
msgid "@code{debug-level} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20064
msgid "Integer denoting the debugging levels.  Higher numbers mean that more debugging output is logged."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20065
#, no-wrap
msgid "@code{caches} (default: @code{%nscd-default-caches})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20068
msgid "List of @code{<nscd-cache>} objects denoting things to be cached; see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20072
#, no-wrap
msgid "{Data Type} nscd-cache"
msgstr "{Tipo de dados} nscd-cache"

#. type: deftp
#: guix-git/doc/guix.texi:20074
msgid "Data type representing a cache database of nscd and its parameters."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20077 guix-git/doc/guix.texi:27827
#, no-wrap
msgid "database"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20082
msgid "This is a symbol representing the name of the database to be cached.  Valid values are @code{passwd}, @code{group}, @code{hosts}, and @code{services}, which designate the corresponding NSS database (@pxref{NSS Basics,,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:20083
#, no-wrap
msgid "positive-time-to-live"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:20084
#, no-wrap
msgid "@code{negative-time-to-live} (default: @code{20})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20087
msgid "A number representing the number of seconds during which a positive or negative lookup result remains in cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20088
#, no-wrap
msgid "@code{check-files?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20091
msgid "Whether to check for updates of the files corresponding to @var{database}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20095
msgid "For instance, when @var{database} is @code{hosts}, setting this flag instructs nscd to check for updates in @file{/etc/hosts} and to take them into account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20096
#, no-wrap
msgid "@code{persistent?} (default: @code{#t})"
msgstr "@code{persistent?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20098
msgid "Whether the cache should be stored persistently on disk."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20099
#, no-wrap
msgid "@code{shared?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20101
msgid "Whether the cache should be shared among users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20102
#, no-wrap
msgid "@code{max-database-size} (default: 32@tie{}MiB)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20104
msgid "Maximum size in bytes of the database cache."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20111
#, no-wrap
msgid "%nscd-default-caches"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20114
msgid "List of @code{<nscd-cache>} objects used by default by @code{nscd-configuration} (see above)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20120
msgid "It enables persistent and aggressive caching of service and host name lookups.  The latter provides better host name lookup performance, resilience in the face of unreliable name servers, and also better privacy---often the result of host name lookups is in local cache, so external name servers do not even need to be queried."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20122
#, no-wrap
msgid "syslog, with external syslogd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20123
#, no-wrap
msgid "logging, syslog"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20124
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "syslog-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20127
#, fuzzy
msgid "Type of the service that runs the syslog daemon (@command{syslogd}), whose value is a @code{<syslog-configuration>} object (see below)."
msgstr "Gerencie a configuração do sistema operacional."

#. type: quotation
#: guix-git/doc/guix.texi:20132
msgid "This service is redundant with and for the most part superseded by @code{shepherd-system-log-service-type} (@pxref{shepherd-system-log, the Shepherd system log})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20139
msgid "To have a modified @code{syslog-configuration} come into effect after reconfiguring your system, the @samp{reload} action should be preferred to restarting the service, as many services such as the login manager depend on it and would be restarted as well:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20142
#, no-wrap
msgid "# herd reload syslog\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20146
msgid "which will cause the running @command{syslogd} process to reload its configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20147
#, no-wrap
msgid "{Data Type} syslog-configuration"
msgstr "{Tipo de dados} syslog-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20149
#, fuzzy
msgid "Data type representing the configuration of the syslog daemon."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20151
#, no-wrap
msgid "@code{syslogd} (default: @code{#~(string-append #$inetutils \"/libexec/syslogd\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20153
msgid "The syslog daemon to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20154
#, no-wrap
msgid "@code{config-file} (default: @code{%default-syslog.conf})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20158
msgid "The syslog configuration file to use.  @xref{syslogd invocation,,, inetutils, GNU Inetutils}, for more information on the configuration file syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20161
#, fuzzy
msgid "List of extra command-line options for @command{syslog}."
msgstr "@code{cache} (default: @code{#f})"

#. type: defvar
#: guix-git/doc/guix.texi:20165
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "guix-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20169
msgid "This is the type of the service that runs the build daemon, @command{guix-daemon} (@pxref{Invoking guix-daemon}).  Its value must be a @code{guix-configuration} record as described below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20172
msgid "guix-configuration-type"
msgstr "guix-configuration-type"

#. type: deftp
#: guix-git/doc/guix.texi:20172
#, no-wrap
msgid "{Data Type} guix-configuration"
msgstr "{Tipo de dados} guix-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20175
msgid "This data type represents the configuration of the Guix build daemon.  @xref{Invoking guix-daemon}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20177
#, no-wrap
msgid "@code{guix} (default: @var{guix})"
msgstr "@code{guix} (default: @var{guix})"

#. type: table
#: guix-git/doc/guix.texi:20180
msgid "The Guix package to use.  @xref{Customizing the System-Wide Guix} to learn how to provide a package with a pre-configured set of channels."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20181
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix-daemon}"
msgid "unprivileged @command{guix-daemon}"
msgstr "Invocando @command{guix-daemon}"

#. type: cindex
#: guix-git/doc/guix.texi:20182
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix-daemon}"
msgid "rootless @command{guix-daemon}"
msgstr "Invocando @command{guix-daemon}"

#. type: item
#: guix-git/doc/guix.texi:20183
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{privileged?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20185
#, fuzzy
#| msgid "Invoking @command{guix-daemon}"
msgid "Whether to run @command{guix-daemon} as root."
msgstr "Invocando @command{guix-daemon}"

#. type: table
#: guix-git/doc/guix.texi:20193
msgid "When true, @command{guix-daemon} runs with root privileges and build processes run under unprivileged user accounts as specified by @code{build-group} and @code{build-accounts} (see below); when false, @command{guix-daemon} run as the @code{guix-daemon} user, which is unprivileged, and so do build processes.  The unprivileged or ``rootless'' mode can reduce the impact of some classes of vulnerabilities that could affect the daemon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20196
msgid "The default is currently @code{#t} (@command{guix-daemon} runs with root privileges) but may eventually be changed to @code{#f}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20202
msgid "When changing this option, @file{/gnu/store}, @file{/var/guix}, and @file{/etc/guix} have their ownership automatically changed by the @code{guix-ownership} service to either the @code{guix-daemon} user or the @code{root} user (@pxref{unprivileged-daemon-migration})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20206
msgid "This can take a while, especially if @file{/gnu/store} is big; it cannot be interrupted and @command{guix-daemon} cannot be used until it has completed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20210
#, fuzzy
#| msgid "@xref{Invoking guix git authenticate}, for more information on this command."
msgid "@xref{Build Environment Setup}, for more information on the two ways to run @command{guix-daemon}."
msgstr "@xref{Invoking guix git authenticate}, para mais informações sobre este comando."

#. type: item
#: guix-git/doc/guix.texi:20211
#, no-wrap
msgid "@code{build-group} (default: @code{\"guixbuild\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20213
msgid "Name of the group for build user accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20214
#, no-wrap
msgid "@code{build-accounts} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20216
msgid "Number of build user accounts to create."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20217
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{chroot?} (default: @code{'default})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20223
msgid "The value should be one of @code{#t} or @code{#f}, in which case chroot is enabled or disabled, respectively; or it should be @code{'default}, which amounts to @code{#f} in Docker containers (so that they can be run in non-privileged mode)  or @code{#t} otherwise."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20224
#, no-wrap
msgid "@code{authorize-key?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20231
msgid "Whether to authorize the substitute keys listed in @code{authorized-keys}---by default that of @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} (@pxref{Substitutes})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20237
msgid "When @code{authorize-key?} is true, @file{/etc/guix/acl} cannot be changed by invoking @command{guix archive --authorize}.  You must instead adjust @code{guix-configuration} as you wish and reconfigure the system.  This ensures that your operating system configuration file is self-contained."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:20244
msgid "When booting or reconfiguring to a system where @code{authorize-key?} is true, the existing @file{/etc/guix/acl} file is backed up as @file{/etc/guix/acl.bak} if it was determined to be a manually modified file.  This is to facilitate migration from earlier versions, which allowed for in-place modifications to @file{/etc/guix/acl}."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:20246
#, no-wrap
msgid "%default-authorized-guix-keys"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20247
#, no-wrap
msgid "@code{authorized-keys} (default: @code{%default-authorized-guix-keys})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20253
msgid "The list of authorized key files for archive imports, as a list of string-valued gexps (@pxref{Invoking guix archive}).  By default, it contains that of @code{@value{SUBSTITUTE-SERVER-1}} and @code{@value{SUBSTITUTE-SERVER-2}} (@pxref{Substitutes}).  See @code{substitute-urls} below for an example on how to change it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20254
#, no-wrap
msgid "@code{use-substitutes?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20256
msgid "Whether to use substitutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20257 guix-git/doc/guix.texi:37836
#, no-wrap
msgid "@code{substitute-urls} (default: @code{%default-substitute-urls})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20259 guix-git/doc/guix.texi:37838
msgid "The list of URLs where to look for substitutes by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20266
msgid "Suppose you would like to fetch substitutes from @code{guix.example.org} in addition to @code{@value{SUBSTITUTE-SERVER-1}}.  You will need to do two things: (1) add @code{guix.example.org} to @code{substitute-urls}, and (2) authorize its signing key, having done appropriate checks (@pxref{Substitute Server Authorization}).  The configuration below does exactly that:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20275
#, no-wrap
msgid ""
"(guix-configuration\n"
"  (substitute-urls\n"
"   (append (list \"https://guix.example.org\")\n"
"           %default-substitute-urls))\n"
"  (authorized-keys\n"
"   (append (list (local-file \"./guix.example.org-key.pub\"))\n"
"           %default-authorized-guix-keys)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20280
msgid "This example assumes that the file @file{./guix.example.org-key.pub} contains the public key that @code{guix.example.org} uses to sign substitutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20281
#, fuzzy, no-wrap
#| msgid "@code{negative-cache?} (default: @code{#t})"
msgid "@code{generate-substitute-key?} (default: @code{#t})"
msgstr "@code{negative-cache?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20285
msgid "Whether to generate a @dfn{substitute key pair} under @file{/etc/guix/signing-key.pub} and @file{/etc/guix/signing-key.sec} if there is not already one."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20292
msgid "This key pair is used when exporting store items, for instance with @command{guix publish} (@pxref{Invoking guix publish}) or @command{guix archive} (@pxref{Invoking guix archive}).  Generating a key pair takes a few seconds when enough entropy is available and is only done once; you might want to turn it off for instance in a virtual machine that does not need it and where the extra boot time is a problem."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20294
#, fuzzy
#| msgid "guix-configuration-type"
msgid "guix-configuration-channels"
msgstr "guix-configuration-type"

#. type: item
#: guix-git/doc/guix.texi:20294
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{channels} (default: @code{#f})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20298
#, fuzzy
#| msgid "Make the profile available under @file{~root/.config/guix/current}, which is where @command{guix pull} will install updates (@pxref{Invoking guix pull}):"
msgid "List of channels to be specified in @file{/etc/guix/channels.scm}, which is what @command{guix pull} uses by default (@pxref{Invoking guix pull})."
msgstr "Torne o perfil disponível sob @file{~root/.config/guix/current}, que é onde @command{guix pull} vai instalar atualizações (@pxref{Invoking guix pull}):"

#. type: quotation
#: guix-git/doc/guix.texi:20305
msgid "When reconfiguring a system, the existing @file{/etc/guix/channels.scm} file is backed up as @file{/etc/guix/channels.scm.bak} if it was determined to be a manually modified file.  This is to facilitate migration from earlier versions, which allowed for in-place modifications to @file{/etc/guix/channels.scm}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20307
#, fuzzy, no-wrap
msgid "@code{max-silent-time} (default: @code{3600})"
msgstr "@code{term} (default: @code{#f})"

#. type: itemx
#: guix-git/doc/guix.texi:20308
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{3306})"
msgid "@code{timeout} (default: @code{(* 3600 24)})"
msgstr "@code{porta} (default: @code{3306})"

#. type: table
#: guix-git/doc/guix.texi:20312
msgid "The number of seconds of silence and the number of seconds of activity, respectively, after which a build process times out.  A value of zero disables the timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20313
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{log-compression} (default: @code{'gzip})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:20316
msgid "The type of compression used for build logs---one of @code{gzip}, @code{bzip2}, or @code{none}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20317
#, no-wrap
msgid "@code{discover?} (default: @code{#f})"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:20322
#, fuzzy
#| msgid "guix-configuration-type"
msgid "guix-configuration-build-machines"
msgstr "guix-configuration-type"

#. type: item
#: guix-git/doc/guix.texi:20322
#, fuzzy, no-wrap
#| msgid "@code{domain} (default: @code{#f})"
msgid "@code{build-machines} (default: @code{#f})"
msgstr "@code{domain} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20326
msgid "This field must be either @code{#f} or a list of gexps evaluating to a @code{build-machine} record or to a list of @code{build-machine} records (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20333
msgid "When it is @code{#f}, the @file{/etc/guix/machines.scm} file is left untouched.  Otherwise, the list of of gexps is written to @file{/etc/guix/machines.scm}; if a previously-existing file is found, it is backed up as @file{/etc/guix/machines.scm.bak}.  This allows you to declare build machines for offloading directly in the operating system declaration, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20339
#, no-wrap
msgid ""
"(guix-configuration\n"
"  (build-machines\n"
"    (list #~(build-machine (name \"foo.example.org\") @dots{})\n"
"          #~(build-machine (name \"bar.example.org\") @dots{}))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20343
msgid "Additional build machines may be added @i{via} the @code{guix-extension} mechanism (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20346
msgid "List of extra command-line options for @command{guix-daemon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20347
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/guix-daemon.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20350
msgid "File where @command{guix-daemon}'s standard output and standard error are written."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20351
#, no-wrap
msgid "HTTP proxy, for @code{guix-daemon}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20352
#, no-wrap
msgid "proxy, for @code{guix-daemon} HTTP access"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20353
#, no-wrap
msgid "@code{http-proxy} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20356
msgid "The URL of the HTTP and HTTPS proxy used for downloading fixed-output derivations and substitutes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20359
msgid "It is also possible to change the daemon's proxy at run time through the @code{set-http-proxy} action, which restarts it:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20362
#, no-wrap
msgid "herd set-http-proxy guix-daemon http://localhost:8118\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20365
msgid "To clear the proxy settings, run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:20368
#, no-wrap
msgid "herd set-http-proxy guix-daemon\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20370
#, no-wrap
msgid "@code{tmpdir} (default: @code{#f})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20372
msgid "A directory path where the @command{guix-daemon} will perform builds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20373
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{environment} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20376
msgid "Environment variables to be set before starting the daemon, as a list of @code{key=value} strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20377
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{socket-directory-permissions} (default: @code{#o755})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20383
msgid "Permissions to set for the directory @file{/var/guix/daemon-socket}.  This, together with @code{socket-directory-group} and @code{socket-directory-user}, determines who can connect to the build daemon via its Unix socket.  TCP socket operation is unaffected by these."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20384
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{socket-directory-user} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: itemx
#: guix-git/doc/guix.texi:20385
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{socket-directory-group} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20388
msgid "User and group owning the @file{/var/guix/daemon-socket} directory or @code{#f} to keep the user or group as root."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20392
#, no-wrap
msgid "{Data Type} guix-extension"
msgstr "{Tipo de dados} guix-extension"

#. type: deftp
#: guix-git/doc/guix.texi:20397
msgid "This data type represents the parameters of the Guix build daemon that are extendable. This is the type of the object that must be used within a guix service extension.  @xref{Service Composition}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20399 guix-git/doc/guix.texi:24010
#, no-wrap
msgid "@code{authorized-keys} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20401
msgid "A list of file-like objects where each element contains a public key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20402
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{substitute-urls} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20404
msgid "A list of strings where each element is a substitute URL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20405
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{build-machines} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20409
msgid "A list of gexps that evaluate to @code{build-machine} records or to a list of @code{build-machine} records.  (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20415
msgid "Using this field, a service may add new build machines to receive builds offloaded by the daemon.  This is useful for a service such as @code{hurd-vm-service-type}, which can make a GNU/Hurd virtual machine directly usable for offloading (@pxref{hurd-vm, @code{hurd-vm-service-type}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20416
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{chroot-directories} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20418
msgid "A list of file-like objects or strings pointing to additional directories the build daemon can use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20421
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "udev-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20425
msgid "Type of the service that runs udev, a service which populates the @file{/dev} directory dynamically, whose value is a @code{<udev-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20433
msgid "Since the file names for udev rules and hardware description files matter, the configuration items for rules and hardware cannot simply be plain file-like objects with the rules content, because the name would be ignored.  Instead, they are directory file-like objects that contain optional rules in @file{lib/udev/rules.d} and optional hardware files in @file{lib/udev/hwdb.d}.  This way, the service can be configured with whole packages from which to take rules and hwdb files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20439
msgid "The @code{udev-service-type} can be @emph{extended} with file-like directories that respect this hierarchy.  For convenience, the @code{udev-rule} and @code{file->udev-rule} can be used to construct udev rules, while @code{udev-hardware} and @code{file->udev-hardware} can be used to construct hardware description files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20443
msgid "In an @code{operating-system} declaration, this service type can be @emph{extended} using procedures @code{udev-rules-service} and @code{udev-hardware-service}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20445
#, no-wrap
msgid "{Data Type} udev-configuration"
msgstr "{Tipo de dados} udev-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20447
#, fuzzy
msgid "Data type representing the configuration of udev."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20449
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "udev (default: @code{eudev}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20454
msgid "Package object of the udev service.  This package is used at run-time, when compiled for the target system.  In order to generate the @file{hwdb.bin} hardware index, it is also used when generating the system definition, compiled for the current system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20455
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "debug? (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20458
msgid "Whether to enable debug output.  The debug output is written to the system log, @file{/var/log/messages}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20459
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "rules (default: @code{'()}) (type: list-of-file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20461
msgid "List of file-like objects denoting udev rule files under a sub-directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20462
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "hardware (default: @code{'()}) (type: list-of-file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20465
msgid "List of file-like objects denoting udev hardware description files under a sub-directory."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20469
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} udev-rule @var{file-name} @var{contents}"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:20472
msgid "Return a udev-rule file named @var{file-name} containing the rules defined by the @var{contents} literal."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20476
msgid "In the following example, a rule for a USB device is defined to be stored in the file @file{90-usb-thing.rules}.  The rule runs a script upon detecting a USB device with a given product identifier."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20484
#, no-wrap
msgid ""
"(define %example-udev-rule\n"
"  (udev-rule\n"
"    \"90-usb-thing.rules\"\n"
"    (string-append \"ACTION==\\\"add\\\", SUBSYSTEM==\\\"usb\\\", \"\n"
"                   \"ATTR@{product@}==\\\"Example\\\", \"\n"
"                   \"RUN+=\\\"/path/to/script\\\"\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20487
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} udev-hardware @var{file-name} @var{contents}"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:20490
msgid "Return a udev hardware description file named @var{file-name} containing the hardware information @var{contents}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20492
#, no-wrap
msgid "{Procedure} udev-rules-service @var{name} @var{rules} [#:groups '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20498
msgid "Return a service that extends @code{udev-service-type} with @var{rules} and @code{account-service-type} with @var{groups} as system groups.  This works by creating a singleton service type @code{@var{name}-udev-rules}, of which the returned service is an instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20501
msgid "Here we show how it can be used to extend @code{udev-service-type} with the previously defined rule @code{%example-udev-rule}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20508
#, no-wrap
msgid ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"   (cons (udev-rules-service 'usb-thing %example-udev-rule)\n"
"         %desktop-services)))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20511
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} udev-hardware-service @var{name} @var{hardware}"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:20514
msgid "Return a service that extends @code{udev-service-type} with @var{hardware}.  The service name is @code{@var{name}-udev-hardware}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20516
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} file->udev-rule @var{file-name} @var{file}"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:20519
msgid "Return a udev-rule file named @var{file-name} containing the rules defined within @var{file}, a file-like object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20521
msgid "The following example showcases how we can use an existing rule file."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20526
#, no-wrap
msgid ""
"(use-modules (guix download)     ;for url-fetch\n"
"             (guix packages)     ;for origin\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20537
#, no-wrap
msgid ""
"(define %android-udev-rules\n"
"  (file->udev-rule\n"
"    \"51-android-udev.rules\"\n"
"    (let ((version \"20170910\"))\n"
"      (origin\n"
"       (method url-fetch)\n"
"       (uri (string-append \"https://raw.githubusercontent.com/M0Rf30/\"\n"
"                           \"android-udev-rules/\" version \"/51-android.rules\"))\n"
"       (sha256\n"
"        (base32 \"0lmmagpyb6xsq6zcr2w1cyx9qmjqmajkvrdbhjx32gqf1d9is003\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20545
msgid "Since guix package definitions can be included in @var{rules} in order to use all their rules under the @file{lib/udev/rules.d} sub-directory, then in lieu of the previous @var{file->udev-rule} example, we could have used the @var{android-udev-rules} package which exists in Guix in the @code{(gnu packages android)} module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:20546
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} file->udev-hardware @var{file-name} @var{file}"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:20549
msgid "Return a udev hardware description file named @var{file-name} containing the rules defined within @var{file}, a file-like object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:20559
msgid "The following example shows how to use the @var{android-udev-rules} package so that the Android tool @command{adb} can detect devices without root privileges.  It also details how to create the @code{adbusers} group, which is required for the proper functioning of the rules defined within the @code{android-udev-rules} package.  To create such a group, we must define it both as part of the @code{supplementary-groups} of our @code{user-account} declaration, as well as in the @var{groups} of the @code{udev-rules-service} procedure."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20564
#, no-wrap
msgid ""
"(use-modules (gnu packages android)  ;for android-udev-rules\n"
"             (gnu system shadow)     ;for user-group\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20577
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (users (cons (user-account\n"
"                ;; @dots{}\n"
"                (supplementary-groups\n"
"                 '(\"adbusers\"   ;for adb\n"
"                   \"wheel\" \"netdev\" \"audio\" \"video\")))))\n"
"  ;; @dots{}\n"
"  (services\n"
"    (cons (udev-rules-service 'android android-udev-rules\n"
"                              #:groups '(\"adbusers\"))\n"
"          %desktop-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20579
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "urandom-seed-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20584
msgid "Save some entropy in @code{%random-seed-file} to seed @file{/dev/urandom} when rebooting.  It also tries to seed @file{/dev/urandom} from @file{/dev/hwrng} while booting, if @file{/dev/hwrng} exists and is readable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20586
#, no-wrap
msgid "%random-seed-file"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20590
msgid "This is the name of the file where some random bytes are saved by @var{urandom-seed-service} to seed @file{/dev/urandom} when rebooting.  It defaults to @file{/var/lib/random-seed}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20592
#, no-wrap
msgid "mouse"
msgstr "mouse"

#. type: cindex
#: guix-git/doc/guix.texi:20593
#, no-wrap
msgid "gpm"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20594
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gpm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20599
msgid "This is the type of the service that runs GPM, the @dfn{general-purpose mouse daemon}, which provides mouse support to the Linux console.  GPM allows users to use the mouse in the console, notably to select, copy, and paste text."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20602
msgid "The value for services of this type must be a @code{gpm-configuration} (see below).  This service is not part of @code{%base-services}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20604
#, no-wrap
msgid "{Data Type} gpm-configuration"
msgstr "{Tipo de dados} gpm-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20606
msgid "Data type representing the configuration of GPM."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20608
#, no-wrap
msgid "@code{options} (default: @code{%default-gpm-options})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20613
msgid "Command-line options passed to @command{gpm}.  The default set of options instruct @command{gpm} to listen to mouse events on @file{/dev/input/mice}.  @xref{Command Line,,, gpm, gpm manual}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20614
#, no-wrap
msgid "@code{gpm} (default: @code{gpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20616
msgid "The GPM package to use."
msgstr "O pacote GPM a ser usado."

#. type: defvar
#: guix-git/doc/guix.texi:20621
#, no-wrap
msgid "guix-publish-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20625
msgid "This is the service type for @command{guix publish} (@pxref{Invoking guix publish}).  Its value must be a @code{guix-publish-configuration} object, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20629
msgid "This assumes that @file{/etc/guix} already contains a signing key pair as created by @command{guix archive --generate-key} (@pxref{Invoking guix archive}).  If that is not the case, the service will fail to start."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20631
#, no-wrap
msgid "{Data Type} guix-publish-configuration"
msgstr "{Tipo de dados} guix-publish-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20634
msgid "Data type representing the configuration of the @code{guix publish} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20636
#, no-wrap
msgid "@code{guix} (default: @code{guix})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20638 guix-git/doc/guix.texi:27805
msgid "The Guix package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20639 guix-git/doc/guix.texi:41082
#, no-wrap
msgid "@code{port} (default: @code{80})"
msgstr "@code{port} (padrão: @code{80})"

#. type: table
#: guix-git/doc/guix.texi:20641
msgid "The TCP port to listen for connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20642 guix-git/doc/guix.texi:37716
#: guix-git/doc/guix.texi:42535
#, no-wrap
msgid "@code{host} (default: @code{\"localhost\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20645
msgid "The host (and thus, network interface) to listen to.  Use @code{\"0.0.0.0\"} to listen on all the network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20646
#, no-wrap
msgid "@code{advertise?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20649
msgid "When true, advertise the service on the local network @i{via} the DNS-SD protocol, using Avahi."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20653
msgid "This allows neighboring Guix devices with discovery on (see @code{guix-configuration} above) to discover this @command{guix publish} instance and to automatically download substitutes from it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20654
#, fuzzy, no-wrap
msgid "@code{compression} (default: @code{'((\"gzip\" 3) (\"zstd\" 3))})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:20658
msgid "This is a list of compression method/level tuple used when compressing substitutes.  For example, to compress all substitutes with @emph{both} lzip at level 7 and gzip at level 9, write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20661
#, no-wrap
msgid "'((\"lzip\" 7) (\"gzip\" 9))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20667
msgid "Level 9 achieves the best compression ratio at the expense of increased CPU usage, whereas level 1 achieves fast compression.  @xref{Invoking guix publish}, for more information on the available compression methods and the tradeoffs involved."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20669
msgid "An empty list disables compression altogether."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20670
#, no-wrap
msgid "@code{nar-path} (default: @code{\"nar\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20673
msgid "The URL path at which ``nars'' can be fetched.  @xref{Invoking guix publish, @option{--nar-path}}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20674
#, no-wrap
msgid "@code{cache} (default: @code{#f})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20680
msgid "When it is @code{#f}, disable caching and instead generate archives on demand.  Otherwise, this should be the name of a directory---e.g., @code{\"/var/cache/guix/publish\"}---where @command{guix publish} caches archives and meta-data ready to be sent.  @xref{Invoking guix publish, @option{--cache}}, for more information on the tradeoffs involved."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20681 guix-git/doc/guix.texi:43293
#, no-wrap
msgid "@code{workers} (default: @code{#f})"
msgstr "@code{workers} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20685
msgid "When it is an integer, this is the number of worker threads used for caching; when @code{#f}, the number of processors is used.  @xref{Invoking guix publish, @option{--workers}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20686
#, no-wrap
msgid "@code{cache-bypass-threshold} (default: 10 MiB)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20691
msgid "When @code{cache} is true, this is the maximum size in bytes of a store item for which @command{guix publish} may bypass its cache in case of a cache miss.  @xref{Invoking guix publish, @option{--cache-bypass-threshold}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20692 guix-git/doc/guix.texi:43238
#: guix-git/doc/guix.texi:43310
#, no-wrap
msgid "@code{ttl} (default: @code{#f})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20696
msgid "When it is an integer, this denotes the @dfn{time-to-live} in seconds of the published archives.  @xref{Invoking guix publish, @option{--ttl}}, for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20697 guix-git/doc/guix.texi:43254
#, fuzzy, no-wrap
#| msgid "@code{ttl} (default: @code{#f})"
msgid "@code{negative-ttl} (default: @code{#f})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20701
msgid "When it is an integer, this denotes the @dfn{time-to-live} in seconds for the negative lookups.  @xref{Invoking guix publish, @option{--negative-ttl}}, for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20704
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rngd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20707
msgid "Type of the service that runs rng-tools rngd, whose value is an @code{<rngd-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20709
#, no-wrap
msgid "{Data Type} rngd-configuration"
msgstr "{Tipo de dados} rngd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20711
#, fuzzy
msgid "Data type representing the configuration of rngd."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20713
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{rng-tools} (default: @code{rng-tools}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20715
msgid "Package object of the rng-tools rngd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20716
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{device} (default: @var{\"/dev/hwrng\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20719
msgid "Path of the device to add to the kernel's entropy pool.  The service will fail if @var{device} does not exist."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20723
#, no-wrap
msgid "session limits"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20724
#, no-wrap
msgid "ulimit"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20725
#, no-wrap
msgid "priority"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20726
#, no-wrap
msgid "realtime"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20727
#, no-wrap
msgid "jackd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20728
#, no-wrap
msgid "nofile"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:20729
#, no-wrap
msgid "open file descriptors"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20731
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pam-limits-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20738
msgid "Type of the service that installs a configuration file for the @uref{http://linux-pam.org/Linux-PAM-html/sag-pam_limits.html, @code{pam_limits} module}.  The value for this service type is a list of @code{pam-limits-entry} values, which can be used to specify @code{ulimit} limits and @code{nice} priority limits to user sessions.  By default, the value is the empty list."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20741
msgid "The following limits definition sets two hard and soft limits for all login sessions of users in the @code{realtime} group:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20747
#, no-wrap
msgid ""
"(service pam-limits-service-type\n"
"         (list\n"
"          (pam-limits-entry \"@@realtime\" 'both 'rtprio 99)\n"
"          (pam-limits-entry \"@@realtime\" 'both 'memlock 'unlimited)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20753
msgid "The first entry increases the maximum realtime priority for non-privileged processes; the second entry lifts any restriction of the maximum address space that can be locked in memory.  These settings are commonly used for real-time audio systems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20756
msgid "Another useful example is raising the maximum number of open file descriptors that can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20761
#, no-wrap
msgid ""
"(service pam-limits-service-type\n"
"         (list\n"
"          (pam-limits-entry \"*\" 'both 'nofile 100000)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20769
msgid "In the above example, the asterisk means the limit should apply to any user.  It is important to ensure the chosen value doesn't exceed the maximum system value visible in the @file{/proc/sys/fs/file-max} file, else the users would be prevented from login in.  For more information about the Pluggable Authentication Module (PAM) limits, refer to the @samp{pam_limits} man page from the @code{linux-pam} package."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20771
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "greetd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:20775
msgid "@uref{https://git.sr.ht/~kennylevinsen/greetd, @code{greetd}} is a minimal and flexible login manager daemon, that makes no assumptions about what you want to launch."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20779
msgid "If you can run it from your shell in a TTY, greetd can start it. If it can be taught to speak a simple JSON-based IPC protocol, then it can be a geeter."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20782
msgid "@code{greetd-service-type} provides necessary infrastructure for logging in users, including:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:20786
msgid "@code{greetd} PAM service"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:20789
msgid "Special variation of @code{pam-mount} to mount @code{XDG_RUNTIME_DIR}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:20793
msgid "Here is an example of switching from @code{mingetty-service-type} to @code{greetd-service-type}, and how different terminals could be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20839
#, no-wrap
msgid ""
"  (append\n"
"   (modify-services %base-services\n"
"     ;; greetd-service-type provides \"greetd\" PAM service\n"
"     (delete login-service-type)\n"
"     ;; and can be used in place of mingetty-service-type\n"
"     (delete mingetty-service-type))\n"
"   (list\n"
"    (service greetd-service-type\n"
"             (greetd-configuration\n"
"              (terminals\n"
"               (list\n"
"                ;; we can make any terminal active by default\n"
"                (greetd-terminal-configuration (terminal-vt \"1\") (terminal-switch #t))\n"
"                ;; we can make environment without XDG_RUNTIME_DIR set\n"
"                ;; even provide our own environment variables\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"2\")\n"
"                 (default-session-command\n"
"                   (greetd-agreety-session\n"
"                    (command\n"
"                     (greetd-user-session\n"
"                      (extra-env '((\"MY_VAR\" . \"1\")))\n"
"                      (xdg-env? #f))))))\n"
"                ;; we can use different shell instead of default bash\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"3\")\n"
"                 (default-session-command\n"
"                   (greetd-agreety-session\n"
"                    (command\n"
"                     (greetd-user-session\n"
"                      (command (file-append zsh \"/bin/zsh\"))\n"
"                      (command-args '(\"-l\"))\n"
"                      (extra-env '((\"MY_VAR\" . \"1\")))\n"
"                      (xdg-env? #f))))))\n"
"                ;; we can use any other executable command as greeter\n"
"                (greetd-terminal-configuration\n"
"                 (terminal-vt \"4\")\n"
"                 (default-session-command (program-file \"my-noop-greeter\" #~(exit))))\n"
"                (greetd-terminal-configuration (terminal-vt \"5\"))\n"
"                (greetd-terminal-configuration (terminal-vt \"6\"))))))\n"
"    ;; mingetty-service-type can be used in parallel\n"
"    ;; if needed to do so, do not (delete login-service-type)\n"
"    ;; as illustrated above\n"
"    #| (service mingetty-service-type (mingetty-configuration (tty \"tty8\"))) |#))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20842
#, no-wrap
msgid "{Data Type} greetd-configuration"
msgstr "{Tipo de dados} greetd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20844
#, fuzzy
msgid "Configuration record for the @code{greetd-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20853
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{terminals} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20856
msgid "List of @code{greetd-terminal-configuration} per terminal for which @code{greetd} should be started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20857
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{greeter-supplementary-groups} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20859
msgid "List of groups which should be added to @code{greeter} user. For instance:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:20861
#, no-wrap
msgid "(greeter-supplementary-groups '(\"seat\" \"video\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:20863
msgid "Note that this example will fail if @code{seat} group does not exist."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20866
#, no-wrap
msgid "{Data Type} greetd-terminal-configuration"
msgstr "{Tipo de dados} greetd-terminal-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20868
#, fuzzy
msgid "Configuration record for per terminal greetd daemon service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20870
#, fuzzy, no-wrap
#| msgid "@code{gdm} (default: @code{gdm})"
msgid "@code{greetd} (default: @code{greetd})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:20872
#, fuzzy
msgid "The greetd package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:20873
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{extra-shepherd-requirement} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20878
msgid "This option can be used to provide a list of @emph{additional} symbols naming Shepherd services that this service will depend on, such as @code{'seatd} or @code{'elogind} when the terminal session is a graphical greeter."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:20879
#, fuzzy, no-wrap
#| msgid "name"
msgid "config-file-name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:20882
msgid "Configuration file name to use for greetd daemon. Generally, autogenerated derivation based on @code{terminal-vt} value."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:20883
#, fuzzy, no-wrap
#| msgid "name"
msgid "log-file-name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:20886
msgid "Log file name to use for greetd daemon. Generally, autogenerated name based on @code{terminal-vt} value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20887
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{terminal-vt} (default: @samp{\"7\"})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20890
msgid "The VT to run on. Use of a specific VT with appropriate conflict avoidance is recommended."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20891
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{terminal-switch} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20893
msgid "Make this terminal active on start of @code{greetd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20894
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{source-profile?} (default: @code{#t})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20897
msgid "Whether to source @file{/etc/profile} and @file{~/.profile}, when they exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20898
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{default-session-user} (default: @samp{\"greeter\"})"
msgstr "@code{user} (default: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:20900
msgid "The user to use for running the greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20901
#, fuzzy, no-wrap
msgid "@code{default-session-command} (default: @code{(greetd-agreety-session)})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20905
msgid "Can be either @code{greetd-agreety-session}, @code{greetd-wlgreet-sway-session}, @code{greetd-gtkgreet-sway-session} or a file-like object to use as greeter."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20909
#, fuzzy, no-wrap
#| msgid "{Data Type} greetd-agreety-session"
msgid "{Data Type} greetd-user-session"
msgstr "{Tipo de dados} greetd-agreety-session"

#. type: deftp
#: guix-git/doc/guix.texi:20917
msgid "Configuration record for the user session command.  Greeters require the user command to be specified in some or another way.  @code{greetd-user-session} provides a common command for that.  Users should prefer POSIX shell commands like @command{bash}, which can start an actual user terminal shell, window manager or desktop environment with their own mechanism, for example via @file{~/.bashrc} in the case of Bash."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20919
#, fuzzy, no-wrap
msgid "@code{command} (default: @code{(file-append bash \"/bin/bash\")})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20921
msgid "Command to be started by @command{agreety} on successful login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20922
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{command-args} (default: @code{'(\"-l\")})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20924
msgid "Command arguments to pass to command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20925
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{extra-env} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20927
msgid "Extra environment variables to set on login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20928
#, fuzzy, no-wrap
#| msgid "@code{deny?} (default: @code{#f})"
msgid "@code{xdg-session-type} (default: @code{\"tty\"})"
msgstr "@code{deny?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20932
msgid "Specify the value of @code{XDG_SESSION_TYPE}.  The user environment may adapt depending on its value (normally by using @file{.bashrc} or similar)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20933
#, fuzzy, no-wrap
#| msgid "@code{deny?} (default: @code{#f})"
msgid "@code{xdg-env?} (default: @code{#t})"
msgstr "@code{deny?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20937
msgid "If true @code{XDG_RUNTIME_DIR} and @code{XDG_SESSION_TYPE} will be set before starting command.  One should note that, @code{extra-env} variables are set right after mentioned variables, so that they can be overridden."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20941
#, no-wrap
msgid "{Data Type} greetd-agreety-session"
msgstr "{Tipo de dados} greetd-agreety-session"

#. type: deftp
#: guix-git/doc/guix.texi:20943
#, fuzzy
msgid "Configuration record for the agreety greetd greeter."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20945
#, fuzzy, no-wrap
#| msgid "@code{gdm} (default: @code{gdm})"
msgid "@code{agreety} (default: @code{greetd})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:20947
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{agreety} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:20948 guix-git/doc/guix.texi:21005
#: guix-git/doc/guix.texi:21068
#, fuzzy, no-wrap
msgid "@code{command} (default: @code{(greetd-user-session)})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20951
msgid "Command to be started by @command{agreety} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20955
#, fuzzy, no-wrap
#| msgid "{Data Type} greetd-configuration"
msgid "{Data Type} greetd-wlgreet-configuration"
msgstr "{Tipo de dados} greetd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:20957
#, fuzzy
msgid "Generic configuration record for the wlgreet greetd greeter."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20959
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{output-mode} (default: @code{\"all\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20961
msgid "Option to use for @code{outputMode} in the TOML configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20962
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{scale} (default: @code{1})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20964
msgid "Option to use for @code{scale} in the TOML configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20965
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{background} (default: @code{'(0 0 0 0.9)})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20967
msgid "RGBA list to use as the background colour of the login prompt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20968
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{headline} (default: @code{'(1 1 1 1)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20970
msgid "RGBA list to use as the headline colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20971
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{prompt} (default: @code{'(1 1 1 1)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20973
msgid "RGBA list to use as the prompt colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20974
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{prompt-error} (default: @code{'(1 1 1 1)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20976
msgid "RGBA list to use as the error colour of the UI popup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20977
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{border} (default: @code{'(1 1 1 1)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:20979
msgid "RGBA list to use as the border colour of the UI popup."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:20983
#, no-wrap
msgid "{Data Type} greetd-wlgreet-sway-session"
msgstr "{Tipo de dados} greetd-wlgreet-sway-session"

#. type: deftp
#: guix-git/doc/guix.texi:20985
#, fuzzy
msgid "Sway-specific configuration record for the wlgreet greetd greeter."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:20987
#, fuzzy, no-wrap
msgid "@code{wlgreet-session} (default: @code{(greetd-wlgreet-session)})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20990
msgid "A @code{greetd-wlgreet-session} record for generic wlgreet configuration, on top of the Sway-specific @code{greetd-wlgreet-sway-session}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20991 guix-git/doc/guix.texi:21055
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{sway} (default: @code{sway})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:20993
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{sway} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:20994
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{sway-configuration} (default: #f)"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:20997
msgid "File-like object providing an additional Sway configuration file to be prepended to the mandatory part of the configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:20998
#, fuzzy, no-wrap
#| msgid "@code{gdm} (default: @code{gdm})"
msgid "@code{wlgreet} (default: @code{wlgreet})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:21000
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{wlgreet} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:21001
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{wlgreet-configuration} (default: @code{(greetd-wlgreet-configuration)})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:21004
msgid "Configuration of @code{wlgreet} represented by @code{greetd-wlgreet-configuration}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21008
msgid "Command to be started by @command{wlgreet} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21012
msgid "Here is an example of a greetd configuration that uses wlgreet and Sway:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21028
#, no-wrap
msgid ""
"  (greetd-configuration\n"
"   ;; The graphical greeter requires additional group membership.\n"
"   (greeter-supplementary-groups (list \"video\" \"input\" \"seat\"))\n"
"   (terminals\n"
"    (list (greetd-terminal-configuration\n"
"           ;; Sway requires seatd service.\n"
"           (extra-shepherd-requirement '(seatd))\n"
"           (terminal-vt \"1\")\n"
"           (terminal-switch #t)\n"
"           (default-session-command\n"
"            (greetd-wlgreet-sway-session\n"
"             (sway-configuration\n"
"              ;; Optional extra sway configuration.\n"
"              (local-file \"sway-greetd.conf\"))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21031
#, fuzzy, no-wrap
#| msgid "{Data Type} greetd-wlgreet-sway-session"
msgid "{Data Type} greetd-gtkgreet-sway-session"
msgstr "{Tipo de dados} greetd-wlgreet-sway-session"

#. type: deftp
#: guix-git/doc/guix.texi:21034
#, fuzzy
msgid "Configuration record for the gtkgreet greetd greeter.  It can be used as follows:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: lisp
#: guix-git/doc/guix.texi:21052
#, no-wrap
msgid ""
"  (greetd-configuration\n"
"   ;; The graphical greeter requires additional groups membership.\n"
"   (greeter-supplementary-groups (list \"video\" \"input\" \"seat\"))\n"
"   (terminals\n"
"    (list (greetd-terminal-configuration\n"
"           ;; Sway requires the seatd service.\n"
"           (extra-shepherd-requirement '(seatd))\n"
"           (terminal-vt \"1\")\n"
"           (terminal-switch #t)\n"
"           (default-session-command\n"
"            (greetd-gtkgreet-sway-session\n"
"             (command\n"
"              (greetd-user-session\n"
"               ;; Optionally signal to .bashrc that we want the Wayland\n"
"               ;; compositor.\n"
"               (xdg-session-type \"wayland\")))))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21057
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{sway} and @command{swaymsg} commands."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:21058
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{sway-configuration} (default: @code{#f})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21061
msgid "Extra file-like configuration for sway to be included before executing the greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21062
#, fuzzy, no-wrap
#| msgid "@code{gdm} (default: @code{gdm})"
msgid "@code{gtkgreet} (default: @code{gtkgreet})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:21064
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{gtkgreet} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:21065
#, fuzzy, no-wrap
#| msgid "@code{key} (default: @code{#f})"
msgid "@code{gtkgreet-style} (default: @code{#f})"
msgstr "@code{key} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21067
msgid "Extra file-like CSS stylesheet to customize the GTK look."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21071
msgid "The command to be started by @command{gtkgreet} on successful login, an instance of @code{greetd-user-session}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21078
#, no-wrap
msgid "cron"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21079
#, no-wrap
msgid "scheduling jobs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21083
msgid "It is often useful to have system tasks run periodically.  This can be achieved by defining Shepherd @dfn{timers} or by using the historical and somewhat less flexible mcron service."
msgstr ""

#. type: subsubsection
#: guix-git/doc/guix.texi:21084
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "Shepherd Timers"
msgstr "Serviços de Shepherd"

#. type: cindex
#: guix-git/doc/guix.texi:21086
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "timers, Shepherd"
msgstr "Serviços de Shepherd"

#. type: cindex
#: guix-git/doc/guix.texi:21087
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "Shepherd timers"
msgstr "Serviços de Shepherd"

#. type: Plain text
#: guix-git/doc/guix.texi:21092
msgid "The Shepherd supports running jobs periodically by defining @dfn{timers}, a special kind of service.  A Shepherd timer can be defined like another Shepherd service, but with specific @code{start} and @code{stop} methods (@pxref{Shepherd Services}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21107
#, no-wrap
msgid ""
";; Defining a timer, verbosely.\n"
"(shepherd-service\n"
" (provision '(updatedb))\n"
" (requirement '(user-processes))\n"
" (modules '((shepherd service timer)))\n"
" (start #~(make-timer-constructor\n"
"           ;; Everyday at 3AM (using Vixie cron syntax).\n"
"           (cron-string->calendar-event \"0 3 * * *\")\n"
"           (command '(#$(file-append findutils \"/bin/updatedb\")))\n"
"           #:wait-for-termination? #t))\n"
" (stop #~(make-timer-destructor))\n"
" (documentation \"Periodically run 'updatedb'.\")\n"
" (actions (list shepherd-trigger-action)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21111
msgid "This is quite some boilerplate so you can instead use this equivalent shorthand notation:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21117
#, no-wrap
msgid ""
";; Equivalent timer definition, but shorter.\n"
"(shepherd-timer '(updatedb) \"0 3 * * *\"\n"
"                #~(#$(file-append findutils \"/bin/updatedb\"))\n"
"                #:requirement '(user-processes))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21120
msgid "This procedure is defined as follows."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21122
#, fuzzy
msgid "shepherd-timer-procedure"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:21122
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "{Procedure} shepherd-timer @var{provision} @var{schedule} @"
msgstr "-t @var{tipo}"

#. type: deffn
#: guix-git/doc/guix.texi:21130
msgid "@var{command} [#:requirement '()] @ [#:documentation %default-timer-documentation] Return a Shepherd service with the given @var{provision} periodically running @var{command}, a list-valued gexp, according to @var{schedule}, a string in Vixie cron syntax or a gexp providing a Shepherd calendar event.  @var{documentation} is the string that appears when running @code{herd doc @var{service}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21134
#, fuzzy
#| msgid "The example below shows how to add a package as a native input of itself when cross-compiling:"
msgid "The example below shows how to define a timer and to add it to your operating system configuration."
msgstr "O exemplo abaixo mostra como adicionar um pacote como uma entrada nativa de si mesmo durante a compilação cruzada:"

#. type: lisp
#: guix-git/doc/guix.texi:21139
#, fuzzy, no-wrap
#| msgid ""
#| "(use-modules (guix packages) (gnu packages base))\n"
#| "\n"
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules shepherd)\n"
"(use-package-modules base)\n"
"\n"
msgstr ""
"(use-modules (guix packages) (gnu packages base))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:21147
#, no-wrap
msgid ""
"(define updatedb-timer\n"
"  ;; Run 'updatedb' at 3AM everyday.\n"
"  (shepherd-timer '(updatedb)\n"
"                  \"0 3 * * *\"  ;Vixie cron syntax\n"
"                  #~(#$(file-append findutils \"/bin/updatedb\")\n"
"                     \"--prunepaths=/tmp /var/tmp /gnu/store\")\n"
"                  #:requirement '(user-processes)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21155
#, no-wrap
msgid ""
"(define garbage-collection-timer\n"
"  ;; Run 'guix gc' everyday at 5AM.\n"
"  (shepherd-timer '(garbage-collection)\n"
"                  #~(calendar-event #:hours '(5) #:minutes '(0))\n"
"                  #~(\"/run/current-system/profile/bin/guix\"\n"
"                     \"gc\" \"-F\" \"10G\")\n"
"                  #:requirement '(guix-daemon)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21166
#, no-wrap
msgid ""
"  ;; Extend the Shepherd service with additional timers\n"
"  ;; using 'simple-service'.\n"
"  (services (cons (simple-service 'my-timers\n"
"                                   shepherd-root-service-type\n"
"                                   (list garbage-collection-timer\n"
"                                         updatedb-timer))\n"
"                  %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21170
msgid "The resulting system contains these two services, which can be inspected with @command{herd status}.  They can also be triggered manually:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21173
#, fuzzy, no-wrap
#| msgid "Extending the package collection."
msgid "herd trigger garbage-collection\n"
msgstr "Ampliando a coleta de pacotes."

#. type: Plain text
#: guix-git/doc/guix.texi:21177 guix-git/doc/guix.texi:50196
#, fuzzy
#| msgid "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, for more information."
msgid "@xref{Timers,,, shepherd, The GNU Shepherd Manual} for more information on Shepherd timers."
msgstr "@xref{Macro Search Path,,, automake, The GNU Automake Manual}, para mais informações."

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21179
#, fuzzy
#| msgid "guix-publish-service-type"
msgid "mcron-service"
msgstr "guix-publish-service-type"

#. type: subsubsection
#: guix-git/doc/guix.texi:21179
#, no-wrap
msgid "Mcron"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21181
#, no-wrap
msgid "mcron"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21191
msgid "Alternatively, the @code{(gnu services mcron)} module provides an interface to GNU@tie{}mcron, a daemon to run jobs at scheduled times (@pxref{Top,,, mcron, GNU@tie{}mcron}).  GNU@tie{}mcron is similar to the traditional Unix @command{cron} daemon; the main difference is that it is implemented in Guile Scheme.  It is overall less convenient than Shepherd timers: individual jobs cannot depend on specific Shepherd services, logging is coarse-grain (one file for all the jobs), jobs may not be inspected, updated, or triggered manually."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21195
msgid "For the reasons given above, we recommend using Shepherd timers rather than mcron for your periodic tasks."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21204
msgid "The example below defines an operating system that runs the @command{updatedb} (@pxref{Invoking updatedb,,, find, Finding Files})  and the @command{guix gc} commands (@pxref{Invoking guix gc}) daily, as well as the @command{mkid} command on behalf of an unprivileged user (@pxref{mkid invocation,,, idutils, ID Database Utilities}).  It uses gexps to introduce job definitions that are passed to mcron (@pxref{G-Expressions})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21208
#, no-wrap
msgid ""
"(use-modules (guix) (gnu) (gnu services mcron))\n"
"(use-package-modules base idutils)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21217
#, no-wrap
msgid ""
"(define updatedb-job\n"
"  ;; Run 'updatedb' at 3AM every day.  Here we write the\n"
"  ;; job's action as a Scheme procedure.\n"
"  #~(job '(next-hour '(3))\n"
"         (lambda ()\n"
"           (system* (string-append #$findutils \"/bin/updatedb\")\n"
"                    \"--prunepaths=/tmp /var/tmp /gnu/store\"))\n"
"         \"updatedb\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21223
#, no-wrap
msgid ""
"(define garbage-collector-job\n"
"  ;; Collect garbage 5 minutes after midnight every day.\n"
"  ;; The job's action is a shell command.\n"
"  #~(job \"5 0 * * *\"            ;Vixie cron syntax\n"
"         \"guix gc -F 1G\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21230
#, no-wrap
msgid ""
"(define idutils-job\n"
"  ;; Update the index database as user \"charlie\" at 12:15PM\n"
"  ;; and 19:15PM.  This runs from the user's home directory.\n"
"  #~(job '(next-minute-from (next-hour '(12 19)) '(15))\n"
"         (string-append #$idutils \"/bin/mkid src\")\n"
"         #:user \"charlie\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21243
#, no-wrap
msgid ""
"  ;; %BASE-SERVICES already includes an instance of\n"
"  ;; 'mcron-service-type', which we extend with additional\n"
"  ;; jobs using 'simple-service'.\n"
"  (services (cons (simple-service 'my-cron-jobs\n"
"                                   mcron-service-type\n"
"                                   (list garbage-collector-job\n"
"                                         updatedb-job\n"
"                                         idutils-job))\n"
"                  %base-services)))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21251
msgid "When providing the action of a job specification as a procedure, you should provide an explicit name for the job via the optional 3rd argument as done in the @code{updatedb-job} example above.  Otherwise, the job would appear as ``Lambda function'' in the output of @command{herd schedule mcron}, which is not nearly descriptive enough!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21257
msgid "Avoid calling the Guile procedures @code{execl}, @code{execle} or @code{execlp} inside a job specification, else mcron won't be able to output the completion status of the job."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21264
msgid "For more complex jobs defined in Scheme where you need control over the top level, for instance to introduce a @code{use-modules} form, you can move your code to a separate program using the @code{program-file} procedure of the @code{(guix gexp)} module (@pxref{G-Expressions}).  The example below illustrates that."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21280
#, no-wrap
msgid ""
"(define %battery-alert-job\n"
"  ;; Beep when the battery percentage falls below %MIN-LEVEL.\n"
"  #~(job\n"
"     '(next-minute (range 0 60 1))\n"
"     #$(program-file\n"
"        \"battery-alert.scm\"\n"
"        (with-imported-modules (source-module-closure\n"
"                                '((guix build utils)))\n"
"          #~(begin\n"
"              (use-modules (guix build utils)\n"
"                           (ice-9 popen)\n"
"                           (ice-9 regex)\n"
"                           (ice-9 textual-ports)\n"
"                           (srfi srfi-2))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21282
#, no-wrap
msgid ""
"              (define %min-level 20)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21293
#, no-wrap
msgid ""
"              (setenv \"LC_ALL\" \"C\")     ;ensure English output\n"
"              (and-let* ((input-pipe (open-pipe*\n"
"                                      OPEN_READ\n"
"                                      #$(file-append acpi \"/bin/acpi\")))\n"
"                         (output (get-string-all input-pipe))\n"
"                         (m (string-match \"Discharging, ([0-9]+)%\" output))\n"
"                         (level (string->number (match:substring m 1)))\n"
"                         ((< level %min-level)))\n"
"                (format #t \"warning: Battery level is low (~a%)~%\" level)\n"
"                (invoke #$(file-append beep \"/bin/beep\") \"-r5\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21298
msgid "@xref{Guile Syntax, mcron job specifications,, mcron, GNU@tie{}mcron}, for more information on mcron job specifications.  Below is the reference of the mcron service."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21301
msgid "On a running system, you can use the @code{schedule} action of the service to visualize the mcron jobs that will be executed next:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21304
#, no-wrap
msgid "# herd schedule mcron\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21309
msgid "The example above lists the next five tasks that will be executed, but you can also specify the number of tasks to display:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21312
#, no-wrap
msgid "# herd schedule mcron 10\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21314
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mcron-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21317
msgid "This is the type of the @code{mcron} service, whose value is an @code{mcron-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21322 guix-git/doc/guix.texi:50005
msgid "This service type can be the target of a service extension that provides additional job specifications (@pxref{Service Composition}).  In other words, it is possible to define services that provide additional mcron jobs to run."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21327
#, no-wrap
msgid "{Data Type} mcron-configuration"
msgstr "{Tipo de dados} mcron-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21329
msgid "Available @code{mcron-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21331 guix-git/doc/guix.texi:50014
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{mcron} (default: @code{mcron}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:21333 guix-git/doc/guix.texi:50016
msgid "The mcron package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21334 guix-git/doc/guix.texi:50017
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{jobs} (default: @code{'()}) (type: list-of-gexps)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:21338 guix-git/doc/guix.texi:50021
msgid "This is a list of gexps (@pxref{G-Expressions}), where each gexp corresponds to an mcron job specification (@pxref{Syntax, mcron job specifications,, mcron,GNU@tie{}mcron})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21339 guix-git/doc/guix.texi:50022
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21341 guix-git/doc/guix.texi:50024
msgid "Log messages to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21342
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/mcron.log\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21344
#, fuzzy
#| msgid "Log Rotation"
msgid "Log file location."
msgstr "Rotação de log"

#. type: item
#: guix-git/doc/guix.texi:21345 guix-git/doc/guix.texi:50025
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{log-format} (default: @code{\"~1@@*~a ~a: ~a~%\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:21350
msgid "@code{(ice-9 format)} format string for log messages.  The default value produces messages like @samp{@var{pid} @var{name}: @var{message}} (@pxref{Invoking mcron, Invoking,, mcron,GNU@tie{}mcron}).  Each message is also prefixed by a timestamp by GNU Shepherd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21351
#, fuzzy, no-wrap
msgid "@code{date-format} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21353
msgid "@code{(srfi srfi-19)} format string for date."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21361
#, no-wrap
msgid "rottlog"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21362
#, no-wrap
msgid "log rotation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21363
#, no-wrap
msgid "logging"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21370
msgid "Log files such as those found in @file{/var/log} tend to grow endlessly, so it's a good idea to @dfn{rotate} them once in a while---i.e., archive their contents in separate files, possibly compressed.  The @code{(gnu services admin)} module provides an interface to the log rotation service provided by the Shepherd (@pxref{Log Rotation Service,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21379
msgid "This log rotation service is made available through @code{log-rotation-service-type}, which takes a @code{log-rotation-configuration} record as its value.  By default, this provides @code{log-rotation}, a Shepherd ``timed service'' that runs periodically---once a week by default.  It automatically knows about the log files produced by Shepherd services and can be taught about external log files.  You can inspect the service and see when it's going to run the usual way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21385
#, no-wrap
msgid ""
"$ sudo herd status log-rotation\n"
"Status of log-rotation:\n"
"  It is running since Mon 09 Dec 2024 03:27:47 PM CET (2 days ago).\n"
"  @dots{}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21390
#, no-wrap
msgid ""
"Upcoming timer alarms:\n"
"  Sun 15 Dec 2024 10:00:00 PM CET (in 4 days)\n"
"  Sun 22 Dec 2024 10:00:00 PM CET (in 11 days)\n"
"  Sun 29 Dec 2024 10:00:00 PM CET (in 18 days)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21395
msgid "You can also list files subject to rotation with @command{herd files log-rotation} and trigger rotation manually with @command{herd trigger log-rotation}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21398
msgid "This service is part of @code{%base-services}, and thus enabled by default, with the default settings."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21399
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "log-rotation-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21402
msgid "This is the type of the log rotation service.  Its associated value must be a @code{log-rotation-configuration} record, as discussed below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:21406
#, fuzzy
#| msgid "nginx-location-configuration body"
msgid "log-rotation-configuration"
msgstr "nginx-location-configuration body"

#. type: deftp
#: guix-git/doc/guix.texi:21407
#, fuzzy, no-wrap
#| msgid "{Data Type} login-configuration"
msgid "{Data Type} log-rotation-configuration"
msgstr "{Tipo de dados} login-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21409
#, fuzzy
msgid "Available @code{log-rotation-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:21411
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{provision} (default: @code{'(log-rotation)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21413
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name(s) of the log rotation Shepherd service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:21414
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{requirement} (default: @code{'(user-processes)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21416
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Dependencies of the log rotation Shepherd service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:21417
#, fuzzy, no-wrap
msgid "@code{calendar-event} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21421
msgid "Gexp containing the @dfn{calendar event} when log rotation occurs.  @xref{Timers,,,shepherd,The GNU Shepherd Manual}, for more information on calendar events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21422
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{external-log-files} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21424
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "List of file names, external log files that should also be rotated."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:21425
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{compression} (default: @code{zstd}) (type: symbol)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21428
msgid "The compression method used for rotated log files, one of @code{'none}, @code{'gzip}, and @code{'zstd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21429
#, fuzzy, no-wrap
msgid "@code{expiry} (type: gexp-or-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21431
msgid "Age in seconds after which a log file is deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21432
#, fuzzy, no-wrap
msgid "@code{size-threshold} (type: gexp-or-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21434
msgid "Size in bytes below which a log file is @emph{not} rotated."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:21442
#, no-wrap
msgid "Rottlog"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21447
msgid "An alternative log rotation service relying on GNU@tie{}Rot[t]log, a log rotation tool (@pxref{Top,,, rottlog, GNU Rot[t]log Manual}), is also provided."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:21453
msgid "The Rottlog service presented here is deprecated in favor of @code{log-rotation-service-type} (see above).  The @code{rottlog-service-type} variable and related tools will be removed after 2025-06-15."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21458
msgid "The example below shows how to extend it with an additional @dfn{rotation}, should you need to do that (usually, services that produce log files already take care of that):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21462
#, no-wrap
msgid ""
"(use-modules (guix) (gnu))\n"
"(use-service-modules admin)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21466
#, no-wrap
msgid ""
"(define my-log-files\n"
"  ;; Log files that I want to rotate.\n"
"  '(\"/var/log/something.log\" \"/var/log/another.log\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21475
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (simple-service 'rotate-my-stuff\n"
"                                  rottlog-service-type\n"
"                                  (list (log-rotation\n"
"                                         (frequency 'daily)\n"
"                                         (files my-log-files))))\n"
"                  %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21477
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rottlog-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21480
msgid "This is the type of the Rottlog service, whose value is a @code{rottlog-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21483
msgid "Other services can extend this one with new @code{log-rotation} objects (see below), thereby augmenting the set of files to be rotated."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21486
msgid "This service type can define mcron jobs (@pxref{Scheduled Job Execution}) to run the rottlog service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21488
#, no-wrap
msgid "{Data Type} rottlog-configuration"
msgstr "{Tipo de dados} rottlog-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21490
msgid "Data type representing the configuration of rottlog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21492
#, no-wrap
msgid "@code{rottlog} (default: @code{rottlog})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21494
msgid "The Rottlog package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21495
#, no-wrap
msgid "@code{rc-file} (default: @code{(file-append rottlog \"/etc/rc\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21498
msgid "The Rottlog configuration file to use (@pxref{Mandatory RC Variables,,, rottlog, GNU Rot[t]log Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21499
#, no-wrap
msgid "@code{rotations} (default: @code{%default-rotations})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21501
msgid "A list of @code{log-rotation} objects as defined below."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21502
#, no-wrap
msgid "jobs"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21505
msgid "This is a list of gexps where each gexp corresponds to an mcron job specification (@pxref{Scheduled Job Execution})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21508
#, no-wrap
msgid "{Data Type} log-rotation"
msgstr "{Tipo de dados} log-rotation"

#. type: deftp
#: guix-git/doc/guix.texi:21510
msgid "Data type representing the rotation of a group of log files."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21514
msgid "Taking an example from the Rottlog manual (@pxref{Period Related File Examples,,, rottlog, GNU Rot[t]log Manual}), a log rotation might be defined like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21523
#, no-wrap
msgid ""
"(log-rotation\n"
"  (frequency 'daily)\n"
"  (files '(\"/var/log/apache/*\"))\n"
"  (options '(\"storedir apache-archives\"\n"
"             \"rotate 6\"\n"
"             \"notifempty\"\n"
"             \"nocompress\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21526
msgid "The list of fields is as follows:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21528
#, no-wrap
msgid "@code{frequency} (default: @code{'weekly})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21530
msgid "The log rotation frequency, a symbol."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21533
msgid "The list of files or file glob patterns to rotate."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:21534
#, no-wrap
msgid "%default-log-rotation-options"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21535
#, fuzzy, no-wrap
msgid "@code{options} (default: @code{%default-log-rotation-options})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21538
msgid "The list of rottlog options for this rotation (@pxref{Configuration parameters,,, rottlog, GNU Rot[t]log Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21539
#, no-wrap
msgid "@code{post-rotate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21541
msgid "Either @code{#f} or a gexp to execute once the rotation has completed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21544
#, no-wrap
msgid "%default-rotations"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21547
msgid "Specifies weekly rotation of @code{%rotated-files} and of @file{/var/log/guix-daemon.log}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21549
#, no-wrap
msgid "%rotated-files"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21553
msgid "The list of syslog-controlled files to be rotated.  By default it is: @code{'(\"/var/log/messages\" \"/var/log/secure\" \"/var/log/debug\" \\ \"/var/log/maillog\")}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21561
msgid "Some log files just need to be deleted periodically once they are old, without any other criterion and without any archival step.  This is the case of build logs stored by @command{guix-daemon} under @file{/var/log/guix/drvs} (@pxref{Invoking guix-daemon}).  The @code{log-cleanup} service addresses this use case.  For example, @code{%base-services} (@pxref{Base Services}) includes the following:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21567
#, no-wrap
msgid ""
";; Periodically delete old build logs.\n"
"(service log-cleanup-service-type\n"
"         (log-cleanup-configuration\n"
"          (directory \"/var/log/guix/drvs\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21570
msgid "That ensures build logs do not accumulate endlessly."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21571
#, fuzzy, no-wrap
msgid "log-cleanup-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21574
msgid "This is the type of the service to delete old logs.  Its value must be a @code{log-cleanup-configuration} record as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21576
#, no-wrap
msgid "{Data Type} log-cleanup-configuration"
msgstr "{Tipo de dados} log-cleanup-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21578
#, fuzzy
msgid "Data type representing the log cleanup configuration"
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:21580
#, no-wrap
msgid "directory"
msgstr "directory"

#. type: table
#: guix-git/doc/guix.texi:21582
msgid "Name of the directory containing log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21583
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{\"6600\"})"
msgid "@code{expiry} (default: @code{(* 6 30 24 3600)})"
msgstr "@code{porta} (default: @code{\"6600\"})"

#. type: table
#: guix-git/doc/guix.texi:21586
msgid "Age in seconds after which a file is subject to deletion (six months by default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21587
#, fuzzy, no-wrap
msgid "@code{schedule} (default: @code{\"30 12 01,08,15,22 * *\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:21591
msgid "Schedule of the log cleanup job written either as a string in traditional cron syntax or as a gexp representing a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21594
#, no-wrap
msgid "logging, anonymization"
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:21595
#, fuzzy, no-wrap
#| msgid "Sound Services"
msgid "Anonip Service"
msgstr "Serviços de som"

#. type: Plain text
#: guix-git/doc/guix.texi:21600
msgid "Anonip is a privacy filter that removes IP address from web server logs.  This service creates a FIFO and filters any written lines with anonip before writing the filtered log to a target file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21604
msgid "The following example sets up the FIFO @file{/var/run/anonip/https.access.log} and writes the filtered log file @file{/var/log/anonip/https.access.log}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21610
#, no-wrap
msgid ""
"(service anonip-service-type\n"
"         (anonip-configuration\n"
"           (input  \"/var/run/anonip/https.access.log\")\n"
"           (output \"/var/log/anonip/https.access.log\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21615
msgid "Configure your web server to write its logs to the FIFO at @file{/var/run/anonip/https.access.log} and collect the anonymized log file at @file{/var/web-logs/https.access.log}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21616
#, no-wrap
msgid "{Data Type} anonip-configuration"
msgstr "{Tipo de dados} anonip-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21619
msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:21621
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{anonip} (default: @code{anonip})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21623
#, fuzzy
#| msgid "The GPM package to use."
msgid "The anonip package to use."
msgstr "O pacote GPM a ser usado."

#. type: code{#1}
#: guix-git/doc/guix.texi:21624
#, no-wrap
msgid "input"
msgstr "input"

#. type: table
#: guix-git/doc/guix.texi:21627
msgid "The file name of the input log file to process.  The service creates a FIFO of this name.  The web server should write its logs to this FIFO."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21628
#, no-wrap
msgid "output"
msgstr "output"

#. type: table
#: guix-git/doc/guix.texi:21632
msgid "The file name of the processed log file.  This file is subject to log rotation @i{via} the Shepherd's log rotation service (@pxref{Log Rotation})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21635
#, fuzzy
#| msgid "The following command-line options are supported:"
msgid "The following optional settings may be provided:"
msgstr "As seguintes opções de linha de comando são suportadas:"

#. type: item
#: guix-git/doc/guix.texi:21637
#, no-wrap
msgid "debug?"
msgstr "debug?"

#. type: table
#: guix-git/doc/guix.texi:21639
msgid "Print debug messages when @code{#true}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21640
#, no-wrap
msgid "skip-private?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21642
msgid "When @code{#true} do not mask addresses in private ranges."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21643
#, no-wrap
msgid "column"
msgstr "column"

#. type: table
#: guix-git/doc/guix.texi:21646
msgid "A 1-based indexed column number.  Assume IP address is in the specified column (default is 1)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21647
#, no-wrap
msgid "replacement"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21649
msgid "Replacement string in case address parsing fails, e.g. @code{\"0.0.0.0\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21650
#, no-wrap
msgid "ipv4mask"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21652
msgid "Number of bits to mask in IPv4 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21653
#, no-wrap
msgid "ipv6mask"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21655
msgid "Number of bits to mask in IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21656
#, fuzzy, no-wrap
#| msgid "Requirements"
msgid "increment"
msgstr "Requisitos"

#. type: table
#: guix-git/doc/guix.texi:21658
msgid "Increment the IP address by the given number.  By default this is zero."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21659
#, no-wrap
msgid "delimiter"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21661
msgid "Log delimiter string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21662
#, no-wrap
msgid "regex"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21664
msgid "Regular expression for detecting IP addresses.  Use this instead of @code{column}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21679
msgid "The @code{(gnu services networking)} module provides services to configure network interfaces and set up networking on your machine.  Those services provide different ways for you to set up your machine: by declaring a static network configuration, by running a Dynamic Host Configuration Protocol (DHCP) client, or by running daemons such as NetworkManager and Connman that automate the whole process, automatically adapt to connectivity changes, and provide a high-level user interface."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21685
msgid "On a laptop, NetworkManager and Connman are by far the most convenient options, which is why the default desktop services include NetworkManager (@pxref{Desktop Services, @code{%desktop-services}}).  For a server, or for a virtual machine or a container, static network configuration or a simple DHCP client are often more appropriate."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21688
msgid "This section describes the various network setup services available, starting with static network configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21689
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "static-networking-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21694
msgid "This is the type for statically-configured network interfaces.  Its value must be a list of @code{static-networking} records.  Each of them declares a set of @dfn{addresses}, @dfn{routes}, and @dfn{links}, as shown below."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21695
#, no-wrap
msgid "network interface controller (NIC)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21696
#, no-wrap
msgid "NIC, networking interface controller"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21699
msgid "Here is the simplest configuration, with only one network interface controller (NIC) and only IPv4 connectivity:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21713
#, no-wrap
msgid ""
";; Static networking for one NIC, IPv4-only.\n"
"(service static-networking-service-type\n"
"         (list (static-networking\n"
"                (addresses\n"
"                 (list (network-address\n"
"                        (device \"eno1\")\n"
"                        (value \"10.0.2.15/24\"))))\n"
"                (routes\n"
"                 (list (network-route\n"
"                        (destination \"default\")\n"
"                        (gateway \"10.0.2.2\"))))\n"
"                (name-servers '(\"10.0.2.3\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21722
msgid "The snippet above can be added to the @code{services} field of your operating system configuration (@pxref{Using the Configuration System}).  It will configure your machine to have 10.0.2.15 as its IP address, with a 24-bit netmask for the local network---meaning that any 10.0.2.@var{x} address is on the local area network (LAN).  Traffic to addresses outside the local network is routed @i{via} 10.0.2.2.  Host names are resolved by sending domain name system (DNS) queries to 10.0.2.3."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21724
#, no-wrap
msgid "{Data Type} static-networking"
msgstr "{Tipo de dados} static-networking"

#. type: deftp
#: guix-git/doc/guix.texi:21726
#, fuzzy
msgid "This is the data type representing a static network configuration."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:21730
msgid "As an example, here is how you would declare the configuration of a machine with a single network interface controller (NIC) available as @code{eno1}, and with one IPv4 and one IPv6 address:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21747
#, no-wrap
msgid ""
";; Network configuration for one NIC, IPv4 + IPv6.\n"
"(static-networking\n"
" (addresses (list (network-address\n"
"                   (device \"eno1\")\n"
"                   (value \"10.0.2.15/24\"))\n"
"                  (network-address\n"
"                   (device \"eno1\")\n"
"                   (value \"2001:123:4567:101::1/64\"))))\n"
" (routes (list (network-route\n"
"                (destination \"default\")\n"
"                (gateway \"10.0.2.2\"))\n"
"               (network-route\n"
"                (destination \"default\")\n"
"                (gateway \"2020:321:4567:42::1\"))))\n"
" (name-servers '(\"10.0.2.3\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21753
msgid "If you are familiar with the @command{ip} command of the @uref{https://wiki.linuxfoundation.org/networking/iproute2, @code{iproute2} package} found on Linux-based systems, the declaration above is equivalent to typing:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:21759
#, no-wrap
msgid ""
"ip address add 10.0.2.15/24 dev eno1\n"
"ip address add 2001:123:4567:101::1/64 dev eno1\n"
"ip route add default via inet 10.0.2.2\n"
"ip route add default via inet6 2020:321:4567:42::1\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21764
msgid "Run @command{man 8 ip} for more info.  Venerable GNU/Linux users will certainly know how to do it with @command{ifconfig} and @command{route}, but we'll spare you that."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21766
msgid "The available fields of this data type are as follows:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21768
#, no-wrap
msgid "addresses"
msgstr "addresses"

#. type: itemx
#: guix-git/doc/guix.texi:21769
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{links} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: itemx
#: guix-git/doc/guix.texi:21770
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{routes} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21773
msgid "The list of @code{network-address}, @code{network-link}, and @code{network-route} records for this network (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21774
#, fuzzy, no-wrap
msgid "@code{name-servers} (default: @code{'()})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21777
msgid "The list of IP addresses (strings) of domain name servers.  These IP addresses go to @file{/etc/resolv.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21778
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{provision} (default: @code{'(networking)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21781
msgid "If true, this should be a list of symbols for the Shepherd service corresponding to this network configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21782
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{requirement} (default @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21784
msgid "The list of Shepherd services depended on."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21787
#, no-wrap
msgid "{Data Type} network-address"
msgstr "{Tipo de dados} network-address"

#. type: deftp
#: guix-git/doc/guix.texi:21790
msgid "This is the data type representing the IP address of a network interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21795
msgid "The name of the network interface for this address---e.g., @code{\"eno1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21796
#, no-wrap
msgid "value"
msgstr "value"

#. type: table
#: guix-git/doc/guix.texi:21800
msgid "The actual IP address and network mask, in @uref{https://en.wikipedia.org/wiki/CIDR#CIDR_notation, @acronym{CIDR, Classless Inter-Domain Routing} notation}, as a string."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21804
msgid "For example, @code{\"10.0.2.15/24\"} denotes IPv4 address 10.0.2.15 on a 24-bit sub-network---all 10.0.2.@var{x} addresses are on the same local network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21805
#, no-wrap
msgid "ipv6?"
msgstr "ipv6?"

#. type: table
#: guix-git/doc/guix.texi:21808
msgid "Whether @code{value} denotes an IPv6 address.  By default this is automatically determined."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21811
#, no-wrap
msgid "{Data Type} network-route"
msgstr "{Tipo de dados} network-route"

#. type: deftp
#: guix-git/doc/guix.texi:21813
msgid "This is the data type representing a network route."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:21815
#, no-wrap
msgid "destination"
msgstr "destination"

#. type: table
#: guix-git/doc/guix.texi:21818
msgid "The route destination (a string), either an IP address and network mask or @code{\"default\"} to denote the default route."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21819
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{source} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21821
#, fuzzy
#| msgid "The rottlog service."
msgid "The route source."
msgstr "O serviço rottlog."

#. type: item
#: guix-git/doc/guix.texi:21822 guix-git/doc/guix.texi:46265
#, no-wrap
msgid "@code{device} (default: @code{#f})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21824
msgid "The device used for this route---e.g., @code{\"eno2\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21825
#, fuzzy, no-wrap
#| msgid "@code{ipv6?} (default: @code{#t})"
msgid "@code{ipv6?} (default: auto)"
msgstr "@code{ipv6?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:21828
msgid "Whether this is an IPv6 route.  By default this is automatically determined based on @code{destination} or @code{gateway}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21829
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{gateway} (default: @code{#f})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21831
msgid "IP address (a string) through which traffic is routed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21834
#, no-wrap
msgid "{Data Type} network-link"
msgstr "{Tipo de dados} network-link"

#. type: deftp
#: guix-git/doc/guix.texi:21841
msgid "Data type for a network link (@pxref{Link,,, guile-netlink, Guile-Netlink Manual}).  During startup, network links are employed to construct or modify existing or virtual ethernet links.  These ethernet links can be identified by their @var{name} or @var{mac-address}.  If there is a need to create virtual interface, @var{name} and @var{type} fields are required."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21845
msgid "The name of the link---e.g., @code{\"v0p0\"} (default: @code{#f})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21848
msgid "A symbol denoting the type of the link---e.g., @code{'veth} (default: @code{#f})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21849
#, no-wrap
msgid "mac-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21851
msgid "The mac-address of the link---e.g., @code{\"98:11:22:33:44:55\"} (default: @code{#f})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21854
msgid "List of arguments for this type of link."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21866
msgid "Consider a scenario where a server equipped with a network interface which has multiple ports.  These ports are connected to a switch, which supports @uref{https://en.wikipedia.org/wiki/Link_aggregation, link aggregation} (also known as bonding or NIC teaming).  The switch uses port channels to consolidate multiple physical interfaces into one logical interface to provide higher bandwidth, load balancing, and link redundancy.  When a port is added to a LAG (or link aggregation group), it inherits the properties of the port-channel.  Some of these properties are VLAN membership, trunk status, and so on."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21871
msgid "@uref{https://en.wikipedia.org/wiki/Virtual_LAN, VLAN} (or virtual local area network) is a logical network that is isolated from other VLANs on the same physical network.  This can be used to segregate traffic, improve security, and simplify network management."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:21876
msgid "With all that in mind let's configure our static network for the server.  We will bond two existing interfaces together using 802.3ad schema and on top of it, build a VLAN interface with id 1055.  We assign a static ip to our new VLAN interface."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21886
#, no-wrap
msgid ""
"(static-networking\n"
" (links (list (network-link\n"
"               (name \"bond0\")\n"
"               (type 'bond)\n"
"               (arguments '((mode . \"802.3ad\")\n"
"                            (miimon . 100)\n"
"                            (lacp-active . \"on\")\n"
"                            (lacp-rate . \"fast\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21890
#, no-wrap
msgid ""
"              (network-link\n"
"               (mac-address \"98:11:22:33:44:55\")\n"
"               (arguments '((master . \"bond0\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21894
#, no-wrap
msgid ""
"              (network-link\n"
"               (mac-address \"98:11:22:33:44:56\")\n"
"               (arguments '((master . \"bond0\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21903
#, no-wrap
msgid ""
"              (network-link\n"
"               (name \"bond0.1055\")\n"
"               (type 'vlan)\n"
"               (arguments '((id . 1055)\n"
"                            (link . \"bond0\"))))))\n"
" (addresses (list (network-address\n"
"                   (value \"192.168.1.4/24\")\n"
"                   (device \"bond0.1055\")))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21905
#, no-wrap
msgid "loopback device"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21906
#, fuzzy, no-wrap
msgid "%loopback-static-networking"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21910
msgid "This is the @code{static-networking} record representing the ``loopback device'', @code{lo}, for IP addresses 127.0.0.1 and ::1, and providing the @code{loopback} Shepherd service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21912
#, no-wrap
msgid "networking, with QEMU"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21913
#, fuzzy, no-wrap
#| msgid "Networking"
msgid "QEMU, networking"
msgstr "Rede"

#. type: defvar
#: guix-git/doc/guix.texi:21914
#, fuzzy, no-wrap
msgid "%qemu-static-networking"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21918
msgid "This is the @code{static-networking} record representing network setup when using QEMU's user-mode network stack on @code{eth0} (@pxref{Using the user mode network stack,,, qemu, QEMU Documentation})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21920
#, no-wrap
msgid "DHCP, networking service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21921
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dhcp-client-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21924
msgid "This is the type of services that run @var{dhclient}, the ISC Dynamic Host Configuration Protocol (DHCP) client."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21926
#, no-wrap
msgid "{Data Type} dhcp-client-configuration"
msgstr "{Tipo de dados} dhcp-client-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21928
#, fuzzy
msgid "Data type representing the configuration of the ISC DHCP client service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:21930 guix-git/doc/guix.texi:22688
#, no-wrap
msgid "@code{package} (default: @code{isc-dhcp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21932
#, fuzzy
msgid "The ISC DHCP client package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:21933
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{interfaces} (default: @code{'all})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21936
msgid "Either @code{'all} or the list of interface names that the ISC DHCP client should listen on---e.g., @code{'(\"eno1\")}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21940
msgid "When set to @code{'all}, the ISC DHCP client listens on all the available non-loopback interfaces that can be activated.  Otherwise the ISC DHCP client listens only on the specified interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:21941 guix-git/doc/guix.texi:22429
#: guix-git/doc/guix.texi:22693 guix-git/doc/guix.texi:29719
#: guix-git/doc/guix.texi:31566 guix-git/doc/guix.texi:37518
#, no-wrap
msgid "@code{config-file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21943
#, fuzzy
msgid "The configuration file for the ISC DHCP client."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:21944 guix-git/doc/guix.texi:22698
#, no-wrap
msgid "@code{version} (default: @code{\"4\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21948
msgid "The DHCP protocol version to use, as a string.  Accepted values are @code{\"4\"} or @code{\"6\"} for DHCPv4 or DHCPv6, respectively, as well as @code{\"4o6\"}, for DHCPv4 over DHCPv6 (as specified by RFC 7341)."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:21950
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-provision} (default: @code{'(networking)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:21955 guix-git/doc/guix.texi:22185
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on, such as @code{'wpa-supplicant} or @code{'iwd} if you require authenticated access for encrypted WiFi or Ethernet networks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:21960
msgid "Likewise, @code{shepherd-provision} is a list of Shepherd service names (symbols) provided by this service.  You might want to change the default value if you intend to run several ISC DHCP clients, only one of which provides the @code{networking} Shepherd service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:21963
#, fuzzy, no-wrap
#| msgid "Networking Services"
msgid "DHCPCD, networking service"
msgstr "Serviços de Rede"

#. type: defvar
#: guix-git/doc/guix.texi:21965
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dhcpcd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:21970
msgid "This the type for a service running @command{dhcpcd}, a @acronym{DHCP, Dynamic Host Configuration Protocol} client that can be used as a replacement for the historical ISC client supported by @code{dhcp-client-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:21975
msgid "Its value must be a @code{dhcpcd-configuration} record, as described below.  As an example, consider the following setup which runs @command{dhcpcd} with a local @acronym{DNS, Domain Name System} resolver:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:21987
#, no-wrap
msgid ""
"(service dhcpcd-service-type\n"
"  (dhcpcd-configuration\n"
"    (option '(\"rapid_commit\" \"interface_mtu\"))\n"
"    (no-option '(\"nd_rdnss\"\n"
"                 \"dhcp6_name_servers\"\n"
"                 \"domain_name_servers\"\n"
"                 \"domain_name\"\n"
"                 \"domain_search\"))\n"
"    (static '(\"domain_name_servers=127.0.0.1\"))\n"
"    (no-hook '(\"hostname\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:21990
#, fuzzy, no-wrap
#| msgid "{Data Type} dhcpd-configuration"
msgid "{Data Type} dhcpcd-configuration"
msgstr "{Tipo de dados} dhcpd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:21992
#, fuzzy
msgid "Available @code{dhcpcd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:21994
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{interfaces} (default: @code{()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:21999
msgid "List of networking interfaces---e.g., @code{\"eth0\"}---to start a DHCP client for.  If no interface is specified (i.e., the list is empty) then @command{dhcpcd} discovers available Ethernet interfaces, that can be configured, automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22000
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{command-arguments} (default: @code{(\"-q\" \"-q\")}) (type: list)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22002
#, fuzzy
msgid "List of additional command-line options."
msgstr "@code{cache} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:22003
#, fuzzy, no-wrap
msgid "@code{host-name} (default: @code{\"\"}) (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22005
msgid "Host name to send via DHCP, defaults to the current system host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22006
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{duid} (default: @code{\"\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22012
msgid "DHCPv4 clients require a unique client identifier, this option uses the DHCPv6 Unique Identifier as a DHCPv4 client identifier as well.  For more information, refer to @uref{https://www.rfc-editor.org/rfc/rfc4361,RFC 4361} and @code{dhcpcd.conf(5)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22013
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{persistent?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22016
msgid "When true, automatically de-configure the interface when @command{dhcpcd} exits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22017
#, no-wrap
msgid "@code{option} (default: @code{(\"rapid_commit\" \"domain_name_servers\" \"domain_name\" \"domain_search\" \"host_name\" \"classless_static_routes\" \"interface_mtu\")}) (type: list-of-strings)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22019
msgid "List of options to request from the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22020
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{require} (default: @code{(\"dhcp_server_identifier\")}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22022
msgid "List of options to require in responses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22023
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{slaac} (default: @code{\"private\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22025
msgid "Interface identifier used for SLAAC generated IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22026
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{no-option} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22028
msgid "List of options to remove from the message before it's processed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22029
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{no-hook} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22031
msgid "List of hook script which should not be invoked."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22032
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{static} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22036
msgid "DHCP client can request different options from a DHCP server, through @code{static} it is possible to configure static values for selected options.  For example, @code{\"domain_name_servers=127.0.0.1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22037 guix-git/doc/guix.texi:22318
#, fuzzy, no-wrap
msgid "@code{vendor-class-id} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22041
msgid "Set the DHCP Vendor Class (e.g., @code{MSFT}).  For more information, refer to @uref{https://www.rfc-editor.org/rfc/rfc2132#section-9.13,RFC 2132}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22042
#, fuzzy, no-wrap
msgid "@code{client-id} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22045
msgid "Use the interface hardware address or the given string as a client identifier, this is matually exclusive with the @code{duid} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22046 guix-git/doc/guix.texi:36633
#, fuzzy, no-wrap
msgid "@code{extra-content} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22048
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Extra content to append to the configuration as-is."
msgstr "Inicializando uma configuração pessoal."

#. type: item
#: guix-git/doc/guix.texi:22049 guix-git/doc/guix.texi:22482
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{()}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:22052 guix-git/doc/guix.texi:30326
#: guix-git/doc/guix.texi:39353
msgid "This is a list of symbols naming Shepherd services that this service will depend on."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22057
#, no-wrap
msgid "NetworkManager"
msgstr "NetworkManager"

#. type: defvar
#: guix-git/doc/guix.texi:22059
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "network-manager-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22064
msgid "This is the service type for the @uref{https://wiki.gnome.org/Projects/NetworkManager, NetworkManager} service. The value for this service type is a @code{network-manager-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22067 guix-git/doc/guix.texi:22611
#: guix-git/doc/guix.texi:22640
msgid "This service is part of @code{%desktop-services} (@pxref{Desktop Services})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22069
#, no-wrap
msgid "{Data Type} network-manager-configuration"
msgstr "{Tipo de dados} network-manager-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22071
msgid "Data type representing the configuration of NetworkManager."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22073
#, no-wrap
msgid "@code{network-manager} (default: @code{network-manager})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22075
msgid "The NetworkManager package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22076
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{'(wireless-daemon)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:22082
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on. The default @code{'wireless-daemon} is provided by @code{'wpa-supplicant-service-type} and @code{'iwd-service-type}.  Make sure you have one of these configured. Note, that @code{%desktop-services} already include @code{wpa-supplicant-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22083
#, no-wrap
msgid "@code{dns} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22086
msgid "Processing mode for DNS, which affects how NetworkManager uses the @code{resolv.conf} configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22091
msgid "NetworkManager will update @code{resolv.conf} to reflect the nameservers provided by currently active connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22092
#, no-wrap
msgid "dnsmasq"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22096
msgid "NetworkManager will run @code{dnsmasq} as a local caching nameserver, using a @dfn{conditional forwarding} configuration if you are connected to a VPN, and then update @code{resolv.conf} to point to the local nameserver."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22102
msgid "With this setting, you can share your network connection.  For example when you want to share your network connection to another laptop @i{via} an Ethernet cable, you can open @command{nm-connection-editor} and configure the Wired connection's method for IPv4 and IPv6 to be ``Shared to other computers'' and reestablish the connection (or reboot)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22109
msgid "You can also set up a @dfn{host-to-guest connection} to QEMU VMs (@pxref{Installing Guix in a VM}).  With a host-to-guest connection, you can e.g.@: access a Web server running on the VM (@pxref{Web Services}) from a Web browser on your host system, or connect to the VM @i{via} SSH (@pxref{Networking Services, @code{openssh-service-type}}).  To set up a host-to-guest connection, run this command once:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:22116
#, no-wrap
msgid ""
"nmcli connection add type tun \\\n"
" connection.interface-name tap0 \\\n"
" tun.mode tap tun.owner $(id -u) \\\n"
" ipv4.method shared \\\n"
" ipv4.addresses 172.28.112.1/24\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22121
msgid "Then each time you launch your QEMU VM (@pxref{Running Guix in a VM}), pass @option{-nic tap,ifname=tap0,script=no,downscript=no} to @command{qemu-system-...}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22124
msgid "NetworkManager will not modify @code{resolv.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22126
#, no-wrap
msgid "@code{vpn-plugins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22130
msgid "This is the list of available plugins for virtual private networks (VPNs).  An example of this is the @code{network-manager-openvpn} package, which allows NetworkManager to manage VPNs @i{via} OpenVPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22131
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{extra-configuration-files} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:22139
msgid "A list of two-element lists; the first element of each list is a file name (as a string), and the second is a file-like object.  Used to specify configuration files which will be added to the @file{/etc/NetworkManager/conf.d}.  NetworkManager will read additional configuration from this directory.  For details on configuration file precedence and the configuration file format, see @samp{man 5 NetworkManager.conf}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22142
msgid "For example, to add two files named @file{001-basic.conf} and @file{002-unmanaged.conf}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22152
#, no-wrap
msgid ""
"(service network-manager-service-type\n"
"         (network-manager-configuration\n"
"          (extra-configuration-files\n"
"           `((\"001-basic.conf\" ,(local-file \"basic.conf\"))\n"
"             (\"002-unmanaged.conf\" ,(plain-file \"constructed-unmanaged.conf\"\n"
"                                                \"\\\n"
"[keyfile]\n"
"unmanaged-devices=interface-name:wlo1_ap\\n\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22157
#, no-wrap
msgid "Connman"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22158
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "connman-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22161
msgid "This is the service type to run @url{https://01.org/connman,Connman}, a network connection manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22163
#, fuzzy
msgid "Its value must be a @code{connman-configuration} record as in this example:"
msgstr "build-machine {Data Type}"

#. type: lisp
#: guix-git/doc/guix.texi:22168
#, no-wrap
msgid ""
"(service connman-service-type\n"
"         (connman-configuration\n"
"           (disable-vpn? #t)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22171
msgid "See below for details about @code{connman-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22173
#, no-wrap
msgid "{Data Type} connman-configuration"
msgstr "{Tipo de dados} connman-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22175
msgid "Data Type representing the configuration of connman."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22177
#, no-wrap
msgid "@code{connman} (default: @var{connman})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22179
msgid "The connman package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22186
#, no-wrap
msgid "@code{disable-vpn?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22188
msgid "When true, disable connman's vpn plugin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22189
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{general-configuration} (default: @code{(connman-general-configuration)})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22192
msgid "Configuration serialized to @file{main.conf} and passed as @option{--config} to @command{connmand}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22198
#, no-wrap
msgid "{Data Type} connman-general-configuration"
msgstr "{Tipo de dados} connman-general-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22200
#, fuzzy
msgid "Available @code{connman-general-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22202
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{input-request-timeout} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22207
msgid "Set input request timeout.  Default is 120 seconds.  The request for inputs like passphrase will timeout after certain amount of time.  Use this setting to increase the value in case of different user interface designs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22208
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{browser-launch-timeout} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22213
msgid "Set browser launch timeout.  Default is 300 seconds.  The request for launching a browser for portal pages will timeout after certain amount of time.  Use this setting to increase the value in case of different user interface designs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22214
#, fuzzy, no-wrap
msgid "@code{background-scanning?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22224
msgid "Enable background scanning.  Default is true.  If wifi is disconnected, the background scanning will follow a simple back off mechanism from 3s up to 5 minutes.  Then, it will stay in 5 minutes unless user specifically asks for scanning through a D-Bus call.  If so, the mechanism will start again from 3s.  This feature activates also the background scanning while being connected, which is required for roaming on wifi.  When @code{background-scanning?} is false, ConnMan will not perform any scan regardless of wifi is connected or not, unless it is requested by the user through a D-Bus call."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22225
#, fuzzy, no-wrap
msgid "@code{use-gateways-as-timeservers?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22228
msgid "Assume that service gateways also function as timeservers.  Default is false."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22229
#, fuzzy, no-wrap
msgid "@code{fallback-timeservers} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22235
msgid "List of Fallback timeservers.  These timeservers are used for NTP sync when there are no timeservers set by the user or by the service, and when @code{use-gateways-as-timeservers?} is @code{#f}.  These can contain a mixed combination of fully qualified domain names, IPv4 and IPv6 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22236
#, fuzzy, no-wrap
msgid "@code{fallback-nameservers} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22240
msgid "List of fallback nameservers appended to the list of nameservers given by the service.  The nameserver entries must be in numeric format, host names are ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22241
#, fuzzy, no-wrap
msgid "@code{default-auto-connect-technologies} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22246
msgid "List of technologies that are marked autoconnectable by default.  The default value for this entry when empty is @code{\"ethernet\"}, @code{\"wifi\"}, @code{\"cellular\"}.  Services that are automatically connected must have been set up and saved to storage beforehand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22247
#, fuzzy, no-wrap
msgid "@code{default-favourite-technologies} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22251
msgid "List of technologies that are marked favorite by default.  The default value for this entry when empty is @code{\"ethernet\"}.  Connects to services from this technology even if not setup and saved to storage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22252
#, fuzzy, no-wrap
msgid "@code{always-connected-technologies} (type: maybe-list)"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22257
msgid "List of technologies which are always connected regardless of preferred-technologies setting (@code{auto-connect?} @code{#t}).  The default value is empty and this feature is disabled unless explicitly enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22258
#, fuzzy, no-wrap
msgid "@code{preferred-technologies} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22268
msgid "List of preferred technologies from the most preferred one to the least preferred one.  Services of the listed technology type will be tried one by one in the order given, until one of them gets connected or they are all tried.  A service of a preferred technology type in state 'ready' will get the default route when compared to another preferred type further down the list with state 'ready' or with a non-preferred type; a service of a preferred technology type in state 'online' will get the default route when compared to either a non-preferred type or a preferred type further down in the list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22269
#, fuzzy, no-wrap
msgid "@code{network-interface-blacklist} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22274
msgid "List of blacklisted network interfaces.  Found interfaces will be compared to the list and will not be handled by ConnMan, if their first characters match any of the list entries.  Default value is @code{\"vmnet\"}, @code{\"vboxnet\"}, @code{\"virbr\"}, @code{\"ifb\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22275
#, fuzzy, no-wrap
msgid "@code{allow-hostname-updates?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22278
msgid "Allow ConnMan to change the system hostname.  This can happen for example if we receive DHCP hostname option.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22279
#, fuzzy, no-wrap
msgid "@code{allow-domainname-updates?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22283
msgid "Allow connman to change the system domainname.  This can happen for example if we receive DHCP domainname option.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22284
#, fuzzy, no-wrap
msgid "@code{single-connected-technology?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22295
msgid "Keep only a single connected technology at any time.  When a new service is connected by the user or a better one is found according to preferred-technologies, the new service is kept connected and all the other previously connected services are disconnected.  With this setting it does not matter whether the previously connected services are in 'online' or 'ready' states, the newly connected service is the only one that will be kept connected.  A service connected by the user will be used until going out of network coverage.  With this setting enabled applications will notice more network breaks than normal.  Note this options can't be used with VPNs.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22296
#, fuzzy, no-wrap
msgid "@code{tethering-technologies} (type: maybe-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22306
msgid "List of technologies that are allowed to enable tethering.  The default value is @code{\"wifi\"}, @code{\"bluetooth\"}, @code{\"gadget\"}.  Only those technologies listed here are used for tethering.  If one wants to tether ethernet, then add @code{\"ethernet\"} in the list.  Note that if ethernet tethering is enabled, then a DHCP server is started on all ethernet interfaces.  Tethered ethernet should never be connected to corporate or home network as it will disrupt normal operation of these networks.  Due to this ethernet is not tethered by default.  Do not activate ethernet tethering unless you really know what you are doing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22307
#, fuzzy, no-wrap
msgid "@code{persistent-tethering-mode?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22311
msgid "Restore earlier tethering status when returning from offline mode, re-enabling a technology, and after restarts and reboots.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22312
#, fuzzy, no-wrap
msgid "@code{enable-6to4?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22317
msgid "Automatically enable anycast 6to4 if possible.  This is not recommended, as the use of 6to4 will generally lead to a severe degradation of connection quality.  See RFC6343.  Default value is @code{#f} (as recommended by RFC6343 section 4.1)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22322
msgid "Set DHCP option 60 (Vendor Class ID) to the given string.  This option can be used by DHCP servers to identify specific clients without having to rely on MAC address ranges, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22323
#, fuzzy, no-wrap
msgid "@code{enable-online-check?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22330
msgid "Enable or disable use of HTTP GET as an online status check.  When a service is in a READY state, and is selected as default, ConnMan will issue an HTTP GET request to verify that end-to-end connectivity is successful.  Only then the service will be transitioned to ONLINE state.  If this setting is false, the default service will remain in READY state.  Default value is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22331
#, fuzzy, no-wrap
msgid "@code{online-check-ipv4-url} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22335
msgid "IPv4 URL used during the online status check.  Please refer to the README for more detailed information.  Default value is @uref{http://ipv4.connman.net/online/status.html}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22336
#, fuzzy, no-wrap
msgid "@code{online-check-ipv6-url} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22340
msgid "IPv6 URL used during the online status check.  Please refer to the README for more detailed information.  Default value is @uref{http://ipv6.connman.net/online/status.html}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22341
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{online-check-initial-interval} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22344 guix-git/doc/guix.texi:22348
msgid "Range of intervals between two online check requests.  Please refer to the README for more detailed information.  Default value is @samp{1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22345
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{online-check-max-interval} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:22349
#, fuzzy, no-wrap
msgid "@code{enable-online-to-ready-transition?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22360
msgid "WARNING: This is an experimental feature.  In addition to @code{enable-online-check} setting, enable or disable use of HTTP GET to detect the loss of end-to-end connectivity.  If this setting is @code{#f}, when the default service transitions to ONLINE state, the HTTP GET request is no more called until next cycle, initiated by a transition of the default service to DISCONNECT state.  If this setting is @code{#t}, the HTTP GET request keeps being called to guarantee that end-to-end connectivity is still successful.  If not, the default service will transition to READY state, enabling another service to become the default one, in replacement.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22361
#, fuzzy, no-wrap
msgid "@code{auto-connect-roaming-services?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22365
msgid "Automatically connect roaming services.  This is not recommended unless you know you won't have any billing problem.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22366
#, fuzzy, no-wrap
msgid "@code{address-conflict-detection?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22375
msgid "Enable or disable the implementation of IPv4 address conflict detection according to RFC5227.  ConnMan will send probe ARP packets to see if an IPv4 address is already in use before assigning the address to an interface.  If an address conflict occurs for a statically configured address, an IPv4LL address will be chosen instead (according to RFC3927).  If an address conflict occurs for an address offered via DHCP, ConnMan sends a DHCP DECLINE once and for the second conflict resorts to finding an IPv4LL address.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22376
#, fuzzy, no-wrap
msgid "@code{localtime} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22378
msgid "Path to localtime file.  Defaults to @file{/etc/localtime}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22379
#, fuzzy, no-wrap
msgid "@code{regulatory-domain-follows-timezone?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22385
msgid "Enable regulatory domain to be changed along timezone changes.  With this option set to true each time the timezone changes the first present ISO3166 country code is read from @file{/usr/share/zoneinfo/zone1970.tab} and set as regulatory domain value.  Default value is @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22386
#, fuzzy, no-wrap
msgid "@code{resolv-conf} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22392
msgid "Path to resolv.conf file.  If the file does not exist, but intermediate directories exist, it will be created.  If this option is not set, it tries to write into @file{/var/run/connman/resolv.conf} if it fails (@file{/var/run/connman} does not exist or is not writeable).  If you do not want to update resolv.conf, you can set @file{/dev/null}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22397
#, no-wrap
msgid "WPA Supplicant"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22398
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "wpa-supplicant-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22402
msgid "This is the service type to run @url{https://w1.fi/wpa_supplicant/,WPA supplicant}, an authentication daemon required to authenticate against encrypted WiFi or ethernet networks."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22404
#, no-wrap
msgid "{Data Type} wpa-supplicant-configuration"
msgstr "{Tipo de dados} wpa-supplicant-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22406
msgid "Data type representing the configuration of WPA Supplicant."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22408 guix-git/doc/guix.texi:42645
msgid "It takes the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22410
#, no-wrap
msgid "@code{wpa-supplicant} (default: @code{wpa-supplicant})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22412
msgid "The WPA Supplicant package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22413
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{(user-processes loopback syslogd)}"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:22415
msgid "List of services that should be started before WPA Supplicant starts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22416
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-provision} (default: @code{(wpa-supplicant wireless-daemon)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:22418 guix-git/doc/guix.texi:22487
#: guix-git/doc/guix.texi:31336
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name(s) of the service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:22419
#, no-wrap
msgid "@code{dbus?} (default: @code{#t})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22421
msgid "Whether to listen for requests on D-Bus."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22422
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/wpa_supplicant.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22424
msgid "Where to store the PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22425 guix-git/doc/guix.texi:40851
#: guix-git/doc/guix.texi:40993
#, no-wrap
msgid "@code{interface} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22428
msgid "If this is set, it must specify the name of a network interface that WPA supplicant will control."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22431
msgid "Optional configuration file to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22434
msgid "List of additional command-line arguments to pass to the daemon."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22437
#, no-wrap
msgid "iwd, iNet Wireless Daemon"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22438
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "iwd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22442
msgid "This is the service type to run iwd, the @uref{https://iwd.wiki.kernel.org/, iNet Wireless Daemon}, a daemon required to authenticate against encrypted WiFi networks."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:22450
msgid "By default @code{iwd} removes and re-creates interfaces it manages.  It doesn't play nicely with @code{dhcp-client-service-type} that enumerates wireless interfaces before starting the Shepherd service.  Use either @code{dhcpcd-service-type} or the @code{iwd}'s built-in DHCP client (see @code{enable-network-configuration} option below)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:22455
msgid "@code{iwd-service-type} conflicts with @code{wpa-supplicant-service-type}.  Make sure only one is configured."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22459
#, fuzzy, no-wrap
#| msgid "{Data Type} wsdd-configuration"
msgid "{Data Type} iwd-configuration"
msgstr "{Tipo de dados} wsdd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22461
#, fuzzy
msgid "Available @code{iwd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22463
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{iwd} (default: @code{iwd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22465
#, fuzzy
#| msgid "The GPM package to use."
msgid "The IWD package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:22466
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{interfaces} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22469
msgid "If this is set, it must specify @dfn{glob patterns} matching network interfaces that IWD will control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22470
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{ignored-interfaces} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22473
msgid "If this is set, it must specify @dfn{glob patterns} matching network interfaces that IWD will not manage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22474
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{phys} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22477
msgid "If this is set, it must specify @dfn{glob patterns} matching network PHYs names that IWD will control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22478
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{ignored-phys} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22481
msgid "If this is set, it must specify @dfn{glob patterns} matching network PHYs names that IWD will not manage."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22484 guix-git/doc/guix.texi:30868
#: guix-git/doc/guix.texi:31339
msgid "Shepherd requirements the service should depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22485
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-provision} (default: @code{(iwd wireless-daemon)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: item
#: guix-git/doc/guix.texi:22488
#, fuzzy, no-wrap
msgid "@code{config} (type: iwd-settings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22490
#, fuzzy
#| msgid "Configuring the boot loader."
msgid "Configuration settings."
msgstr "Configurando o \"bootloader\"."

#. type: deftp
#: guix-git/doc/guix.texi:22500
#, fuzzy, no-wrap
#| msgid "{Data Type} log-rotation"
msgid "{Data Type} iwd-settings"
msgstr "{Tipo de dados} log-rotation"

#. type: deftp
#: guix-git/doc/guix.texi:22502
#, fuzzy
msgid "Available @code{iwd-settings} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22504
#, fuzzy, no-wrap
msgid "@code{general} (type: iwd-general-settings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22506
#, fuzzy
#| msgid "generations"
msgid "General settings."
msgstr "gerações"

#. type: item
#: guix-git/doc/guix.texi:22507
#, fuzzy, no-wrap
msgid "@code{network} (default: @code{(iwd-network-settings)}) (type: maybe-iwd-network-settings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22509
#, fuzzy
#| msgid "Networking"
msgid "Network settings."
msgstr "Rede"

#. type: item
#: guix-git/doc/guix.texi:22510
#, fuzzy, no-wrap
msgid "@code{scan} (type: maybe-iwd-scan-settings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22512
#, fuzzy
#| msgid "Testing Guix."
msgid "Scan settings."
msgstr "Testando o Guix."

#. type: item
#: guix-git/doc/guix.texi:22513
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{extra-config} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22515
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Extra configuration values to append to the IWD configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: deftp
#: guix-git/doc/guix.texi:22525
#, fuzzy, no-wrap
#| msgid "{Data Type} image"
msgid "{Data Type} iwd-general-settings"
msgstr "{Tipo de dados} image"

#. type: deftp
#: guix-git/doc/guix.texi:22527
#, fuzzy
msgid "Available @code{iwd-general-settings} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22529
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enable-network-configuration?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22532
msgid "Setting this option to true enables @code{iwd} to configure the network interfaces with the IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22533 guix-git/doc/guix.texi:22557
#: guix-git/doc/guix.texi:22588 guix-git/doc/guix.texi:36655
#: guix-git/doc/guix.texi:36671 guix-git/doc/guix.texi:36690
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-options} (default: @code{()}) (type: alist)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22536
msgid "An association list of option symbols/strings to string values to be appended to the General settings group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22546
#, fuzzy, no-wrap
#| msgid "{Data Type} static-networking"
msgid "{Data Type} iwd-network-settings"
msgstr "{Tipo de dados} static-networking"

#. type: deftp
#: guix-git/doc/guix.texi:22548
#, fuzzy
msgid "Available @code{iwd-network-settings} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22550
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enable-ipv6?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22553
msgid "Sets the global default that tells @code{iwd} whether it should configure IPv6 addresses and routes"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22554
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{name-resolving-service} (default: @code{none}) (type: resolving-service)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22556
msgid "Configures a DNS resolution method used by the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22560
msgid "An association list of option symbols/strings to string values to be appended to the Network settings group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22570
#, fuzzy, no-wrap
#| msgid "{Data Type} ganeti-os"
msgid "{Data Type} iwd-scan-settings"
msgstr "{Tipo de dados} ganeti-os"

#. type: deftp
#: guix-git/doc/guix.texi:22572
#, fuzzy
msgid "Available @code{iwd-scan-settings} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22574
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{disable-periodic-scan?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22577
msgid "Setting this option to @code{#t} will prevent @code{iwd} from issuing the periodic scans for the available networks while disconnected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22578
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{initial-periodic-scan-interval} (default: @code{10}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22580
msgid "The initial periodic scan interval upon disconnect (in seconds)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22581
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{maximum-periodic-scan-interval} (default: @code{300}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22583
msgid "The maximum periodic scan interval (in seconds)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22584
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{disable-roaming-scan?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22587
msgid "Setting this option to @code{#t} will prevent @code{iwd} from trying to scan when roaming decisions are activated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22591
msgid "An association list of option symbols/strings to string values to be appended to the Scan settings group."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22599
#, no-wrap
msgid "ModemManager"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22602
msgid "Some networking devices such as modems require special care, and this is what the services below focus on."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22603
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "modem-manager-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22608
msgid "This is the service type for the @uref{https://wiki.gnome.org/Projects/ModemManager, ModemManager} service.  The value for this service type is a @code{modem-manager-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22613
#, no-wrap
msgid "{Data Type} modem-manager-configuration"
msgstr "{Tipo de dados} modem-manager-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22615
msgid "Data type representing the configuration of ModemManager."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22617
#, no-wrap
msgid "@code{modem-manager} (default: @code{modem-manager})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22619
msgid "The ModemManager package to use."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22623
#, no-wrap
msgid "USB_ModeSwitch"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22624
#, no-wrap
msgid "Modeswitching"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22626
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "usb-modeswitch-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22631
msgid "This is the service type for the @uref{https://www.draisberghof.de/usb_modeswitch/, USB_ModeSwitch} service.  The value for this service type is a @code{usb-modeswitch-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22637
msgid "When plugged in, some USB modems (and other USB devices) initially present themselves as a read-only storage medium and not as a modem.  They need to be @dfn{modeswitched} before they are usable.  The USB_ModeSwitch service type installs udev rules to automatically modeswitch these devices when they are plugged in."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22642
#, no-wrap
msgid "{Data Type} usb-modeswitch-configuration"
msgstr "{Tipo de dados} usb-modeswitch-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22644
msgid "Data type representing the configuration of USB_ModeSwitch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22646
#, no-wrap
msgid "@code{usb-modeswitch} (default: @code{usb-modeswitch})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22648
msgid "The USB_ModeSwitch package providing the binaries for modeswitching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22649
#, no-wrap
msgid "@code{usb-modeswitch-data} (default: @code{usb-modeswitch-data})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22652
msgid "The package providing the device data and udev rules file used by USB_ModeSwitch."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22653
#, no-wrap
msgid "@code{config-file} (default: @code{#~(string-append #$usb-modeswitch:dispatcher \"/etc/usb_modeswitch.conf\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22658
msgid "Which config file to use for the USB_ModeSwitch dispatcher.  By default the config file shipped with USB_ModeSwitch is used which disables logging to @file{/var/log} among other default settings.  If set to @code{#f}, no config file is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:22672
msgid "The @code{(gnu services networking)} module discussed in the previous section provides services for more advanced setups: providing a DHCP service for others to use, filtering packets with iptables or nftables, running a WiFi access point with @command{hostapd}, running the @command{inetd} ``superdaemon'', and more.  This section describes those."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22673
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dhcpd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22677
msgid "This type defines a service that runs a DHCP daemon.  To create a service of this type, you must supply a @code{<dhcpd-configuration>}.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22683
#, no-wrap
msgid ""
"(service dhcpd-service-type\n"
"         (dhcpd-configuration\n"
"          (config-file (local-file \"my-dhcpd.conf\"))\n"
"          (interfaces '(\"enp0s25\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22686
#, no-wrap
msgid "{Data Type} dhcpd-configuration"
msgstr "{Tipo de dados} dhcpd-configuration"

#. type: table
#: guix-git/doc/guix.texi:22693
msgid "The package that provides the DHCP daemon.  This package is expected to provide the daemon at @file{sbin/dhcpd} relative to its output directory.  The default package is the @uref{https://www.isc.org/dhcp/, ISC's DHCP server}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22698
msgid "The configuration file to use.  This is required.  It will be passed to @code{dhcpd} via its @code{-cf} option.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  See @code{man dhcpd.conf} for details on the configuration file syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22703
msgid "The DHCP version to use.  The ISC DHCP server supports the values ``4'', ``6'', and ``4o6''.  These correspond to the @code{dhcpd} program options @code{-4}, @code{-6}, and @code{-4o6}.  See @code{man dhcpd} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22703
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/run/dhcpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22706
msgid "The run directory to use.  At service activation time, this directory will be created if it does not exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22706
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/run/dhcpd/dhcpd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22709
msgid "The PID file to use.  This corresponds to the @code{-pf} option of @code{dhcpd}.  See @code{man dhcpd} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22709
#, no-wrap
msgid "@code{interfaces} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22715
msgid "The names of the network interfaces on which dhcpd should listen for broadcasts.  If this list is not empty, then its elements (which must be strings) will be appended to the @code{dhcpd} invocation when starting the daemon.  It may not be necessary to explicitly specify any interfaces here; see @code{man dhcpd} for details."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22718
#, no-wrap
msgid "hostapd service, for Wi-Fi access points"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22719
#, no-wrap
msgid "Wi-Fi access points, hostapd service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22720
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hostapd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22725
msgid "This is the service type to run the @uref{https://w1.fi/hostapd/, hostapd} daemon to set up WiFi (IEEE 802.11) access points and authentication servers.  Its associated value must be a @code{hostapd-configuration} as shown below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22733
#, no-wrap
msgid ""
";; Use wlan1 to run the access point for \"My Network\".\n"
"(service hostapd-service-type\n"
"         (hostapd-configuration\n"
"          (interface \"wlan1\")\n"
"          (ssid \"My Network\")\n"
"          (channel 12)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22736
#, no-wrap
msgid "{Data Type} hostapd-configuration"
msgstr "{Tipo de dados} hostapd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22739
msgid "This data type represents the configuration of the hostapd service, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22741
#, no-wrap
msgid "@code{package} (default: @code{hostapd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22743
msgid "The hostapd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22744
#, no-wrap
msgid "@code{interface} (default: @code{\"wlan0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22746
msgid "The network interface to run the WiFi access point."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:22747
#, no-wrap
msgid "ssid"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22750
msgid "The SSID (@dfn{service set identifier}), a string that identifies this network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22751
#, no-wrap
msgid "@code{broadcast-ssid?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22753
msgid "Whether to broadcast this SSID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22754
#, no-wrap
msgid "@code{channel} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22756
msgid "The WiFi channel to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22757
#, no-wrap
msgid "@code{driver} (default: @code{\"nl80211\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22761
msgid "The driver interface type.  @code{\"nl80211\"} is used with all Linux mac80211 drivers.  Use @code{\"none\"} if building hostapd as a standalone RADIUS server that does not control any wireless/wired driver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22762 guix-git/doc/guix.texi:30808
#: guix-git/doc/guix.texi:35088
#, no-wrap
msgid "@code{extra-settings} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22766
msgid "Extra settings to append as-is to the hostapd configuration file.  See @uref{https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf} for the configuration file reference."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22769
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "simulated-wifi-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22776
msgid "This is the type of a service to simulate WiFi networking, which can be useful in virtual machines for testing purposes.  The service loads the Linux kernel @uref{https://www.kernel.org/doc/html/latest/networking/mac80211_hwsim/mac80211_hwsim.html, @code{mac80211_hwsim} module} and starts hostapd to create a pseudo WiFi network that can be seen on @code{wlan0}, by default."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22778
msgid "The service's value is a @code{hostapd-configuration} record."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22781
#, no-wrap
msgid "iptables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22782
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "iptables-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22788
msgid "This is the service type to set up an iptables configuration.  iptables is a packet filtering framework supported by the Linux kernel.  This service supports configuring iptables for both IPv4 and IPv6.  A simple example configuration rejecting all incoming connections except those to the ssh port 22 is shown below."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22810
#, no-wrap
msgid ""
"(service iptables-service-type\n"
"         (iptables-configuration\n"
"          (ipv4-rules (plain-file \"iptables.rules\" \"*filter\n"
":INPUT ACCEPT\n"
":FORWARD ACCEPT\n"
":OUTPUT ACCEPT\n"
"-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n"
"-A INPUT -p tcp --dport 22 -j ACCEPT\n"
"-A INPUT -j REJECT --reject-with icmp-port-unreachable\n"
"COMMIT\n"
"\"))\n"
"          (ipv6-rules (plain-file \"ip6tables.rules\" \"*filter\n"
":INPUT ACCEPT\n"
":FORWARD ACCEPT\n"
":OUTPUT ACCEPT\n"
"-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\n"
"-A INPUT -p tcp --dport 22 -j ACCEPT\n"
"-A INPUT -j REJECT --reject-with icmp6-port-unreachable\n"
"COMMIT\n"
"\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22813
#, no-wrap
msgid "{Data Type} iptables-configuration"
msgstr "{Tipo de dados} iptables-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22815
msgid "The data type representing the configuration of iptables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22817
#, no-wrap
msgid "@code{iptables} (default: @code{iptables})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22820
msgid "The iptables package that provides @code{iptables-restore} and @code{ip6tables-restore}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22820
#, no-wrap
msgid "@code{ipv4-rules} (default: @code{%iptables-accept-all-rules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22824
msgid "The iptables rules to use.  It will be passed to @code{iptables-restore}.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22824
#, no-wrap
msgid "@code{ipv6-rules} (default: @code{%iptables-accept-all-rules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22828
msgid "The ip6tables rules to use.  It will be passed to @code{ip6tables-restore}.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22831
#, no-wrap
msgid "nftables"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22832
#, no-wrap
msgid "firewall, nftables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22833
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "nftables-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22841
msgid "This is the service type to set up a nftables configuration.  nftables is a netfilter project that aims to replace the iptables, ip6tables, arptables and ebtables framework.  It provides a new packet filtering framework, a new user-space utility @command{nft}, and a compatibility layer for iptables.  This service comes with a default ruleset, @code{%default-nftables-ruleset}, that rejects all incoming connections except those to the SSH port 22 (TCP).  To use it, simply write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22844
#, no-wrap
msgid "(service nftables-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22849
#, no-wrap
msgid "{Data Type} nftables-configuration"
msgstr "{Tipo de dados} nftables-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22851
#, fuzzy
msgid "Available @code{nftables-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:22853
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{nftables}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22855
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{nftables} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:22856
#, fuzzy, no-wrap
msgid "@code{debug-levels} (type: maybe-list-of-debug-levels)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22861
msgid "A list of debug levels, for enabling debugging output.  Valid debug level values are the @samp{scanner}, @samp{parser}, @samp{eval}, @samp{netlink}, @samp{mnl}, @samp{proto-ctx}, @samp{segtree} or @samp{all} symbols."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22862
#, fuzzy, no-wrap
msgid "@code{ruleset} (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:22866
msgid "A file-like object containing the complete nftables ruleset.  The default ruleset rejects all incoming connections except those to TCP port 22, with connections from the loopback interface are allowed."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22874
#, no-wrap
msgid "NTP (Network Time Protocol), service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22875
#, no-wrap
msgid "ntpd, service for the Network Time Protocol daemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22876
#, no-wrap
msgid "real time clock"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22877
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ntp-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22881
msgid "This is the type of the service running the @uref{https://www.ntp.org, Network Time Protocol (NTP)} daemon, @command{ntpd}.  The daemon will keep the system clock synchronized with that of the specified NTP servers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22884
msgid "The value of this service is an @code{ntpd-configuration} object, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22886
#, no-wrap
msgid "{Data Type} ntp-configuration"
msgstr "{Tipo de dados} ntp-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:22888
msgid "This is the data type for the NTP service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22890
#, no-wrap
msgid "@code{servers} (default: @code{%ntp-servers})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22894
msgid "This is the list of servers (@code{<ntp-server>} records) with which @command{ntpd} will be synchronized.  See the @code{ntp-server} data type definition below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22895
#, no-wrap
msgid "@code{allow-large-adjustment?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22898
msgid "This determines whether @command{ntpd} is allowed to make an initial adjustment of more than 1,000 seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22899
#, no-wrap
msgid "@code{ntp} (default: @code{ntp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22901
msgid "The NTP package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22904
#, no-wrap
msgid "%ntp-servers"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22907
msgid "List of host names used as the default NTP servers.  These are servers of the @uref{https://www.ntppool.org/en/, NTP Pool Project}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22909
#, no-wrap
msgid "{Data Type} ntp-server"
msgstr "{Tipo de dados} ntp-server"

#. type: deftp
#: guix-git/doc/guix.texi:22911
msgid "The data type representing the configuration of a NTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22913
#, no-wrap
msgid "@code{type} (default: @code{'server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22916
msgid "The type of the NTP server, given as a symbol.  One of @code{'pool}, @code{'server}, @code{'peer}, @code{'broadcast} or @code{'manycastclient}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:22917
#, no-wrap
msgid "address"
msgstr "address"

#. type: table
#: guix-git/doc/guix.texi:22919
msgid "The address of the server, as a string."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:22920 guix-git/doc/guix.texi:43982
#: guix-git/doc/guix.texi:44002
#, no-wrap
msgid "options"
msgstr "options"

#. type: table
#: guix-git/doc/guix.texi:22925
msgid "NTPD options to use with that specific server, given as a list of option names and/or of option names and values tuples.  The following example define a server to use with the options @option{iburst} and @option{prefer}, as well as @option{version} 3 and a @option{maxpoll} time of 16 seconds."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:22931
#, no-wrap
msgid ""
"(ntp-server\n"
" (type 'server)\n"
" (address \"some.ntp.server.org\")\n"
" (options `(iburst (version 3) (maxpoll 16) prefer))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22935
#, no-wrap
msgid "OpenNTPD"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22936
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "openntpd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22940
msgid "Run the @command{ntpd}, the Network Time Protocol (NTP) daemon, as implemented by @uref{http://www.openntpd.org, OpenNTPD}.  The daemon will keep the system clock synchronized with that of the given servers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:22949
#, no-wrap
msgid ""
"(service\n"
" openntpd-service-type\n"
" (openntpd-configuration\n"
"  (listen-on '(\"127.0.0.1\" \"::1\"))\n"
"  (sensor '(\"udcf0 correction 70000\"))\n"
"  (constraint-from '(\"www.gnu.org\"))\n"
"  (constraints-from '(\"https://www.google.com/\"))))\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22953
#, no-wrap
msgid "%openntpd-servers"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22956
msgid "This variable is a list of the server addresses defined in @code{%ntp-servers}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:22958
#, no-wrap
msgid "{Data Type} openntpd-configuration"
msgstr "{Tipo de dados} openntpd-configuration"

#. type: item
#: guix-git/doc/guix.texi:22960
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{openntpd} (default: @code{openntpd})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:22962
#, fuzzy
#| msgid "The GPM package to use."
msgid "The openntpd package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:22962
#, no-wrap
msgid "@code{listen-on} (default: @code{'(\"127.0.0.1\" \"::1\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22964
msgid "A list of local IP addresses or hostnames the ntpd daemon should listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22964
#, no-wrap
msgid "@code{query-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22966
msgid "A list of local IP address the ntpd daemon should use for outgoing queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22966
#, no-wrap
msgid "@code{sensor} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22971
msgid "Specify a list of timedelta sensor devices ntpd should use.  @code{ntpd} will listen to each sensor that actually exists and ignore non-existent ones.  See @uref{https://man.openbsd.org/ntpd.conf, upstream documentation} for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22971
#, no-wrap
msgid "@code{server} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22973
msgid "Specify a list of IP addresses or hostnames of NTP servers to synchronize to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22973
#, no-wrap
msgid "@code{servers} (default: @code{%openntp-servers})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22975
msgid "Specify a list of IP addresses or hostnames of NTP pools to synchronize to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22975
#, no-wrap
msgid "@code{constraint-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22982
msgid "@code{ntpd} can be configured to query the ‘Date’ from trusted HTTPS servers via TLS.  This time information is not used for precision but acts as an authenticated constraint, thereby reducing the impact of unauthenticated NTP man-in-the-middle attacks.  Specify a list of URLs, IP addresses or hostnames of HTTPS servers to provide a constraint."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:22982
#, no-wrap
msgid "@code{constraints-from} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:22986
msgid "As with constraint from, specify a list of URLs, IP addresses or hostnames of HTTPS servers to provide a constraint.  Should the hostname resolve to multiple IP addresses, @code{ntpd} will calculate a median constraint from all of them."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:22989
#, no-wrap
msgid "inetd"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:22990
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "inetd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:22995
msgid "This service runs the @command{inetd} (@pxref{inetd invocation,,, inetutils, GNU Inetutils}) daemon.  @command{inetd} listens for connections on internet sockets, and lazily starts the specified server program when a connection is made on one of these sockets."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23001
msgid "The value of this service is an @code{inetd-configuration} object.  The following example configures the @command{inetd} daemon to provide the built-in @command{echo} service, as well as an smtp service which forwards smtp traffic over ssh to a server @code{smtp-server} behind a gateway @code{hostname}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23024
#, no-wrap
msgid ""
"(service\n"
" inetd-service-type\n"
" (inetd-configuration\n"
"  (entries (list\n"
"            (inetd-entry\n"
"             (name \"echo\")\n"
"             (socket-type 'stream)\n"
"             (protocol \"tcp\")\n"
"             (wait? #f)\n"
"             (user \"root\"))\n"
"            (inetd-entry\n"
"             (node \"127.0.0.1\")\n"
"             (name \"smtp\")\n"
"             (socket-type 'stream)\n"
"             (protocol \"tcp\")\n"
"             (wait? #f)\n"
"             (user \"root\")\n"
"             (program (file-append openssh \"/bin/ssh\"))\n"
"             (arguments\n"
"              '(\"ssh\" \"-qT\" \"-i\" \"/path/to/ssh_key\"\n"
"                \"-W\" \"smtp-server:25\" \"user@@hostname\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23027
msgid "See below for more details about @code{inetd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23029
#, no-wrap
msgid "{Data Type} inetd-configuration"
msgstr "{Tipo de dados} inetd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23031
msgid "Data type representing the configuration of @command{inetd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23033
#, no-wrap
msgid "@code{program} (default: @code{(file-append inetutils \"/libexec/inetd\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23035
msgid "The @command{inetd} executable to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23036 guix-git/doc/guix.texi:36020
#, no-wrap
msgid "@code{entries} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23039
msgid "A list of @command{inetd} service entries.  Each entry should be created by the @code{inetd-entry} constructor."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23042
#, no-wrap
msgid "{Data Type} inetd-entry"
msgstr "{Tipo de dados} inetd-entry"

#. type: deftp
#: guix-git/doc/guix.texi:23046
msgid "Data type representing an entry in the @command{inetd} configuration.  Each entry corresponds to a socket where @command{inetd} will listen for requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23048
#, no-wrap
msgid "@code{node} (default: @code{#f})"
msgstr "@code{node} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23053
msgid "Optional string, a comma-separated list of local addresses @command{inetd} should use when listening for this service.  @xref{Configuration file,,, inetutils, GNU Inetutils} for a complete description of all options."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23055
msgid "A string, the name must correspond to an entry in @code{/etc/services}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23055
#, no-wrap
msgid "socket-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23058
msgid "One of @code{'stream}, @code{'dgram}, @code{'raw}, @code{'rdm} or @code{'seqpacket}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23058
#, no-wrap
msgid "protocol"
msgstr "protocol"

#. type: table
#: guix-git/doc/guix.texi:23060
msgid "A string, must correspond to an entry in @code{/etc/protocols}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23060
#, no-wrap
msgid "@code{wait?} (default: @code{#t})"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23063
msgid "Whether @command{inetd} should wait for the server to exit before listening to new service requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23068
msgid "A string containing the user (and, optionally, group) name of the user as whom the server should run.  The group name can be specified in a suffix, separated by a colon or period, i.e.@: @code{\"user\"}, @code{\"user:group\"} or @code{\"user.group\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23068
#, no-wrap
msgid "@code{program} (default: @code{\"internal\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23071
msgid "The server program which will serve the requests, or @code{\"internal\"} if @command{inetd} should use a built-in service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23076
msgid "A list strings or file-like objects, which are the server program's arguments, starting with the zeroth argument, i.e.@: the name of the program itself.  For @command{inetd}'s internal services, this entry must be @code{'()} or @code{'(\"internal\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23080
msgid "@xref{Configuration file,,, inetutils, GNU Inetutils} for a more detailed discussion of each configuration field."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23082
#, no-wrap
msgid "opendht, distributed hash table network service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23083
#, no-wrap
msgid "dhtproxy, for use with jami"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23084
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "opendht-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23089
msgid "This is the type of the service running a @uref{https://opendht.net, OpenDHT} node, @command{dhtnode}.  The daemon can be used to host your own proxy service to the distributed hash table (DHT), for example to connect to with Jami, among other applications."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:23099
msgid "When using the OpenDHT proxy server, the IP addresses it ``sees'' from the clients should be addresses reachable from other peers.  In practice this means that a publicly reachable address is best suited for a proxy server, outside of your private network.  For example, hosting the proxy server on a IPv4 private local network and exposing it via port forwarding could work for external peers, but peers local to the proxy would have their private addresses shared with the external peers, leading to connectivity problems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23103
msgid "The value of this service is a @code{opendht-configuration} object, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23108
#, no-wrap
msgid "{Data Type} opendht-configuration"
msgstr "{Tipo de dados} opendht-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23110
msgid "Available @code{opendht-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23112
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{opendht} (default: @code{opendht}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23114
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{opendht} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:23115
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{peer-discovery?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23117
msgid "Whether to enable the multicast local peer discovery mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23118
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enable-logging?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23121
msgid "Whether to enable logging messages to syslog.  It is disabled by default as it is rather verbose."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23122 guix-git/doc/guix.texi:25076
#: guix-git/doc/guix.texi:30314 guix-git/doc/guix.texi:30863
#: guix-git/doc/guix.texi:31741
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{debug?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23125
msgid "Whether to enable debug-level logging messages.  This has no effect if logging is disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23126
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{bootstrap-host} (default: @code{\"bootstrap.jami.net:4222\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23133
msgid "The node host name that is used to make the first connection to the network.  A specific port value can be provided by appending the @code{:PORT} suffix.  By default, it uses the Jami bootstrap nodes, but any host can be specified here.  It's also possible to disable bootstrapping by explicitly setting this field to the @code{%unset-value} value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23134
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{4222}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23137
msgid "The UDP port to bind to.  When left unspecified, an available port is automatically selected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23138
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{proxy-server-port} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23140
msgid "Spawn a proxy server listening on the specified port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23141
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{proxy-server-port-tls} (type: maybe-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23143
msgid "Spawn a proxy server listening to TLS connections on the specified port."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23147
#, no-wrap
msgid "Tor"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23148
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "tor-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23153
msgid "Type for a service that runs the @uref{https://torproject.org, Tor} anonymous networking daemon.  The service is configured using a @code{<tor-configuration>} record.  By default, the Tor daemon runs as the @code{tor} unprivileged user, which is a member of the @code{tor} group."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23154
#, fuzzy, no-wrap
#| msgid "Monitoring services."
msgid "onion services, for Tor"
msgstr "Serviços de monitoramento."

#. type: defvar
#: guix-git/doc/guix.texi:23158
msgid "Services of this type can be extended by other services to specify @dfn{onion services} (in addition to those already specified in @code{tor-configuration}) as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23164
#, no-wrap
msgid ""
"(simple-service 'my-extra-onion-service tor-service-type\n"
"                (list (tor-onion-service-configuration\n"
"                        (name \"extra-onion-service\")\n"
"                        (mapping '((80 . \"127.0.0.1:8080\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23167
#, no-wrap
msgid "{Data Type} tor-configuration"
msgstr "{Tipo de dados} tor-configuration"

#. type: item
#: guix-git/doc/guix.texi:23169
#, no-wrap
msgid "@code{tor} (default: @code{tor})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:23174
msgid "The package that provides the Tor daemon.  This package is expected to provide the daemon at @file{bin/tor} relative to its output directory.  The default package is the @uref{https://www.torproject.org, Tor Project's} implementation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23175
#, no-wrap
msgid "@code{config-file} (default: @code{(plain-file \"empty\" \"\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23181
msgid "The configuration file to use.  It will be appended to a default configuration file, and the final configuration file will be passed to @code{tor} via its @code{-f} option.  This may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  See @code{man tor} for details on the configuration file syntax."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23182
#, no-wrap
msgid "@code{hidden-services} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23187
msgid "The list of @code{<tor-onion-service-configuration>} records to use.  For any onion service you include in this list, appropriate configuration to enable the onion service will be automatically added to the default configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23188
#, no-wrap
msgid "@code{socks-socket-type} (default: @code{'tcp})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23195
msgid "The default socket type that Tor should use for its SOCKS socket.  This must be either @code{'tcp} or @code{'unix}.  If it is @code{'tcp}, then by default Tor will listen on TCP port 9050 on the loopback interface (i.e., localhost).  If it is @code{'unix}, then Tor will listen on the UNIX domain socket @file{/var/run/tor/socks-sock}, which will be made writable by members of the @code{tor} group."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23200
msgid "If you want to customize the SOCKS socket in more detail, leave @code{socks-socket-type} at its default value of @code{'tcp} and use @code{config-file} to override the default by providing your own @code{SocksPort} option."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23201
#, no-wrap
msgid "@code{control-socket?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23207
msgid "Whether or not to provide a ``control socket'' by which Tor can be controlled to, for instance, dynamically instantiate tor onion services.  If @code{#t}, Tor will listen for control commands on the UNIX domain socket @file{/var/run/tor/control-sock}, which will be made writable by members of the @code{tor} group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23208
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{transport-plugins} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:23213
msgid "The list of @code{<tor-transport-plugin>} records to use.  For any transport plugin you include in this list, appropriate configuration line to enable transport plugin will be automatically added to the default configuration file."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23217
#, fuzzy, no-wrap
#| msgid "Monitoring services."
msgid "onion service, tor"
msgstr "Serviços de monitoramento."

#. type: deftp
#: guix-git/doc/guix.texi:23218
#, no-wrap
msgid "{Data Type} tor-onion-service-configuration"
msgstr "{Tipo de dados} tor-onion-service-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23223
msgid "Data Type representing a Tor @dfn{Onion Service} configuration.  See @url{https://community.torproject.org/onion-services/, the Tor project's documentation} for more information.  Available @code{tor-onion-service-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23225 guix-git/doc/guix.texi:25342
#: guix-git/doc/guix.texi:31141 guix-git/doc/guix.texi:31164
#: guix-git/doc/guix.texi:31219 guix-git/doc/guix.texi:36681
#: guix-git/doc/guix.texi:39225 guix-git/doc/guix.texi:44679
#: guix-git/doc/guix.texi:45015 guix-git/doc/guix.texi:45029
#: guix-git/doc/guix.texi:45127 guix-git/doc/guix.texi:45292
#: guix-git/doc/guix.texi:50356 guix-git/doc/guix.texi:51207
#, fuzzy, no-wrap
msgid "@code{name} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23230
msgid "Name for this Onion Service.  This creates a @file{/var/lib/tor/hidden-services/@var{name}} directory, where the @file{hostname} file contains the @indicateurl{.onion} host name for this Onion Service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23231
#, fuzzy, no-wrap
msgid "@code{mapping} (type: alist)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23233
msgid "Association list of port to address mappings.  The following example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23236
#, no-wrap
msgid ""
"'((22 . \"127.0.0.1:22\")\n"
"  (80 . \"127.0.0.1:8080\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23238
msgid "maps ports 22 and 80 of the Onion Service to the local ports 22 and 8080."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23242
#, no-wrap
msgid "pluggable transports, tor"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23243
#, no-wrap
msgid "{Data Type} tor-transport-plugin"
msgstr "{Tipo de dados} tor-transport-plugin"

#. type: deftp
#: guix-git/doc/guix.texi:23252
msgid "Data type representing a Tor pluggable transport plugin in @code{tor-configuration}.  Plugguble transports are programs that disguise Tor traffic, which can be useful in case Tor is censored.  See the the Tor project's @url{https://tb-manual.torproject.org/circumvention/, documentation} and @url{https://spec.torproject.org/pt-spec/index.html, specification} for more information."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23258
msgid "Each transport plugin corresponds either to @code{ClientTransportPlugin ...} or to @code{ServerTransportPlugin ...} line in the default configuration file, see @command{man tor}.  Available @code{tor-transport-plugin} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23260
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{role} (default: @code{'client})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:23271
msgid "This must be either @code{'client} or @code{'server}.  Otherwise, an error is raised.  Set the @code{'server} value if you want to run a bridge to help censored users connect to the Tor network, see @url{https://community.torproject.org/relay/setup/bridge/, the Tor project's brige guide}.  Set the @code{'client} value if you want to connect to somebody else's bridge, see @url{https://bridges.torproject.org/, the Tor project's ``Get Bridges'' page}.  In both cases the required additional configuration should be provided via @code{#:config-file} option of @code{tor-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23271
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{protocol} (default: @code{\"obfs4\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23273
msgid "A string that specifies a pluggable transport protocol."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23273 guix-git/doc/guix.texi:45492
#, no-wrap
msgid "program"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23279
msgid "This must be a ``file-like'' object or a string pointing to the pluggable transport plugin executable.  This option allows the Tor daemon run inside the container to access the executable and all the references (e.g. package dependencies) attached to it."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23287
msgid "Suppose you would like Tor daemon to use obfs4 type obfuscation and to connect to Tor network via obfs4 bridge (a nonpublic Tor relay with support for obfs4 type obfuscation). Then you may go to @url{https://bridges.torproject.org/, https://bridges.torproject.org/} and get there a couple of bridge lines (each starts with @code{obfs4 ...})  and use these lines in tor-service-type configuration as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23298
#, no-wrap
msgid ""
"(service tor-service-type\n"
"\t (tor-configuration\n"
"\t  (config-file (plain-file \"torrc\"\n"
"\t\t\t\t   \"\\\n"
"UseBridges 1\n"
"Bridge obfs4 ...\n"
"Bridge obfs4 ...\"))\n"
"\t  (transport-plugins\n"
"\t   (list (tor-transport-plugin\n"
"\t\t  (program (file-append lyrebird \"/bin/lyrebird\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23302
msgid "The @code{(gnu services rsync)} module provides the following services:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23306
msgid "You might want an rsync daemon if you have files that you want available so anyone (or just yourself) can download existing files or upload new files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23307
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rsync-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23311
msgid "This is the service type for the @uref{https://rsync.samba.org, rsync} daemon, The value for this service type is a @command{rsync-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23324
#, no-wrap
msgid ""
";; Export two directories over rsync.  By default rsync listens on\n"
";; all the network interfaces.\n"
"(service rsync-service-type\n"
"         (rsync-configuration\n"
"           (modules (list (rsync-module\n"
"                            (name \"music\")\n"
"                            (file-name \"/srv/zik\")\n"
"                            (read-only? #f))\n"
"                          (rsync-module\n"
"                            (name \"movies\")\n"
"                            (file-name \"/home/charlie/movies\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23327
msgid "See below for details about @code{rsync-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23329
#, no-wrap
msgid "{Data Type} rsync-configuration"
msgstr "{Tipo de dados} rsync-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23331
msgid "Data type representing the configuration for @code{rsync-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23333
#, no-wrap
msgid "@code{package} (default: @var{rsync})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23335
msgid "@code{rsync} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23336 guix-git/doc/guix.texi:41085
#, no-wrap
msgid "@code{address} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23339
msgid "IP address on which @command{rsync} listens for incoming connections.  If unspecified, it defaults to listening on all available addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23340
#, no-wrap
msgid "@code{port-number} (default: @code{873})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23344
msgid "TCP port on which @command{rsync} listens for incoming connections.  If port is less than @code{1024} @command{rsync} needs to be started as the @code{root} user and group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23345
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/rsyncd/rsyncd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23347
msgid "Name of the file where @command{rsync} writes its PID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23348
#, no-wrap
msgid "@code{lock-file} (default: @code{\"/var/run/rsyncd/rsyncd.lock\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23350
msgid "Name of the file where @command{rsync} writes its lock file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23351
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/rsyncd.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23353
msgid "Name of the file where @command{rsync} writes its log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23354 guix-git/doc/guix.texi:47241
#, no-wrap
msgid "@code{user} (default: @code{\"root\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23356
msgid "Owner of the @code{rsync} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23357
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"root\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23359
msgid "Group of the @code{rsync} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23360
#, fuzzy, no-wrap
#| msgid "@code{uid} (default: @code{#f})"
msgid "@code{uid} (default: @code{\"rsyncd\"})"
msgstr "@code{uid} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23363
msgid "User name or user ID that file transfers to and from that module should take place as when the daemon was run as @code{root}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23364
#, fuzzy, no-wrap
#| msgid "@code{gdm} (default: @code{gdm})"
msgid "@code{gid} (default: @code{\"rsyncd\"})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:23366 guix-git/doc/guix.texi:24239
msgid "Group name or group ID that will be used when accessing the module."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23367 guix-git/doc/guix.texi:48279
#, no-wrap
msgid "@code{modules} (default: @code{%default-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23370
msgid "List of ``modules''---i.e., directories exported over rsync.  Each element must be a @code{rsync-module} record, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23373
#, no-wrap
msgid "{Data Type} rsync-module"
msgstr "{Tipo de dados} rsync-module"

#. type: deftp
#: guix-git/doc/guix.texi:23376
msgid "This is the data type for rsync ``modules''.  A module is a directory exported over the rsync protocol.  The available fields are as follows:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23382
msgid "The module name.  This is the name that shows up in URLs.  For example, if the module is called @code{music}, the corresponding URL will be @code{rsync://host.example.org/music}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23383
#, fuzzy, no-wrap
#| msgid "name"
msgid "file-name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:23385
msgid "Name of the directory being exported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23389
msgid "Comment associated with the module.  Client user interfaces may display it when they obtain the list of available modules."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23390
#, fuzzy, no-wrap
#| msgid "@code{respawn?} (default: @code{#t})"
msgid "@code{read-only?} (default: @code{#t})"
msgstr "@code{respawn?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23394
msgid "Whether or not client will be able to upload files.  If this is false, the uploads will be authorized if permissions on the daemon side permit it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23395
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{chroot?} (default: @code{#t})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23399
msgid "When this is true, the rsync daemon changes root to the module's directory before starting file transfers with the client.  This improves security, but requires rsync to run as root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23400
#, no-wrap
msgid "@code{timeout} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23403
msgid "Idle time in seconds after which the daemon closes a connection with the client."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23406 guix-git/doc/guix.texi:52216
#, no-wrap
msgid "Syncthing, file synchronization service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23407 guix-git/doc/guix.texi:52217
#, no-wrap
msgid "backup service, Syncthing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23409
msgid "The @code{(gnu services syncthing)} module provides the following services:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23409
#, no-wrap
msgid "syncthing"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23414
msgid "You might want a Syncthing daemon if you have files between two or more computers and want to sync them in real time, safely protected from prying eyes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23415
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "syncthing-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23419
msgid "This is the service type for the @uref{https://syncthing.net/, syncthing} daemon, The value for this service type is a @command{syncthing-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23423
#, no-wrap
msgid ""
"(service syncthing-service-type\n"
"         (syncthing-configuration (user \"alice\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:23429
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Networking Home Services, @code{home-syncthing-service-type}})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23432
msgid "See below for details about @code{syncthing-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23434
#, no-wrap
msgid "{Data Type} syncthing-configuration"
msgstr "{Tipo de dados} syncthing-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23436
msgid "Data type representing the configuration for @code{syncthing-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23438
#, no-wrap
msgid "@code{syncthing} (default: @var{syncthing})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23440
msgid "@code{syncthing} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23441
#, no-wrap
msgid "@code{arguments} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23443
msgid "List of command-line arguments passing to @code{syncthing} binary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23444
#, no-wrap
msgid "@code{logflags} (default: @var{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23447
msgid "Sum of logging flags, see @uref{https://docs.syncthing.net/users/syncthing.html#cmdoption-logflags, Syncthing documentation logflags}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23448
#, no-wrap
msgid "@code{user} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23451
msgid "The user as which the Syncthing service is to be run.  This assumes that the specified user exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23452
#, no-wrap
msgid "@code{group} (default: @var{\"users\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23455
msgid "The group as which the Syncthing service is to be run.  This assumes that the specified group exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23456
#, no-wrap
msgid "@code{home} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23459
msgid "Sets the @code{HOME} variable for the Syncthing daemon.  The default is @file{$HOME} of the specified Syncthing @code{user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23460
#, fuzzy, no-wrap
#| msgid "@code{log-file} (default: @code{#f})"
msgid "@code{config-file} (default: @var{#f})"
msgstr "@code{log-file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23469
msgid "Either a file-like object that resolves to a Syncthing configuration XML file, or a @code{syncthing-config-file} record (see below).  If set to @code{#f}, Guix will not try to generate a config file, and Syncthing will generate a default configuration which will not be touched on reconfigure.  Specifying this in a system service moves Syncthing's common configuration and data directory (@code{--home} in @uref{https://docs.syncthing.net/users/syncthing.html}) to @file{/var/lib/syncthing-<user>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23478
msgid "When used as a home service, syncthing configuration will be populated in @file{~/.local/state/syncthing/}.  Old Syncthing installs may have files in @file{$XDG_CONFIG_HOME/syncthing/} (usually @file{~/.config/syncthing/}), which will override configuration in @file{~/.local/state/syncthing} managed by this service.  In such cases, you should move the contents of @file{$XDG_CONFIG_HOME/syncthing/} into @file{~/.local/state/syncthing/}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23494
msgid "This section documents a subset of the Syncthing configuration options—specifically those related to Guix or those affecting how your computer will connect to other computers over the network (such as Syncthing relays or discovery servers).  The configuration is fully documented in the upstream @uref{https://docs.syncthing.net/users/config.html, Syncthing config documentation}; camelCase there is converted to kebab-case here.  If you are migrating from a Syncthing-managed configuration to one managed by Guix, you can check what changes were introduced by @code{diff}ing the respective @file{config.xml} files.  Note that you will need to add whitespace with 4-space indentation to the file generated by Guix, using the @code{xmllint} program from the @code{libxml2} package like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:23497
#, no-wrap
msgid "XMLLINT_INDENT=\"    \" xmllint --format /path/to/new/config.xml | diff /path/to/old/config.xml -\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23503
msgid "When generating a configuration file through Guix, you can still temporarily modify Syncthing from the GUI or through @code{introducer} and @code{autoAcceptFolders} mechanisms, but such changes will be reset on reconfigure."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23504
#, fuzzy, no-wrap
#| msgid "{Data Type} syncthing-configuration"
msgid "{Data Type} syncthing-config-file"
msgstr "{Tipo de dados} syncthing-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23507
#, fuzzy
msgid "Data type representing the configuration file read by the Syncthing daemon."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:23509
#, fuzzy, no-wrap
#| msgid "@code{rc-file} (default: @var{(gitolite-rc-file)})"
msgid "@code{folders} (default: @code{(list (syncthing-folder (id \"default\") (label \"Default Folder\") (path \"~/Sync\")))}"
msgstr "@code{rc-file} (padrão: @var{(gitolite-rc-file)})"

#. type: table
#: guix-git/doc/guix.texi:23512
msgid "The default here is the same as Syncthing's default.  The value should be a list of @code{syncthing-folder}s."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23513
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{devices} (default: @code{'()}"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23522
msgid "This should be a list of @code{syncthing-device}s.  Guix will automatically add any devices specified in any `folders' to this list.  There are instances when you want to connect to a device despite not (initially) sharing any folders (such as a device with autoAcceptFolders).  In such instances, you should specify those devices here.  If multiple versions of the same device (as determined by comparing device ID) are discovered, the one in this list is prioritized.  Otherwise, the first instance in the first folder is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23523
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{gui-enabled?} (default: @code{#t})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23527
msgid "By default, any user on the computer can access the GUI and make changes to Syncthing.  If you leave this enabled, you should probably set @code{gui-user} and @code{gui-password} (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23528
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{gui-tls?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23529
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{gui-debugging?} (default: @code{#f})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23530
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{gui-send-basic-authorization-prompt?} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23531
#, fuzzy, no-wrap
msgid "@code{gui-address} (default: @code{\"127.0.0.1:8384\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: item
#: guix-git/doc/guix.texi:23532
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{gui-user} (default: @code{#f})"
msgstr "@code{users} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23533
#, fuzzy, no-wrap
#| msgid "@code{password} (default: @code{#f})"
msgid "@code{gui-password} (default: @code{#f})"
msgstr "@code{password} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23536
msgid "A bcrypt hash of the GUI password.  Remember that this will be globally exposed in @file{/gnu/store}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23537
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{gui-apikey} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: table
#: guix-git/doc/guix.texi:23540
msgid "You must specify this to use the Syncthing REST interface.  This key is kept in @file{/gnu/store} and is accessible to all users of the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23541
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{gui-theme} (default: @code{\"default\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23542
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{ldap-enabled?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23543
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{ldap-address} (default: @code{\"\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23544
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{ldap-bind-dn} (default: @code{\"\"})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23545
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @var{8888})"
msgid "@code{ldap-transport} (default: @code{\"\"})"
msgstr "@code{port} (padrão: @var{8888})"

#. type: item
#: guix-git/doc/guix.texi:23546
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{ldap-insecure-skip-verify} (default: @code{\"\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23547
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{ldap-search-base-dn} (default: @code{\"\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23548
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{ldap-search-filter} (default: @code{\"\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23549
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{listen-address} (default: @code{\"default\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23550
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{global-announce-server} (default: @code{\"default\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23551
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{global-announce-enabled?} (default: @code{#t})"
msgstr "@code{user} (default: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:23554
msgid "Global discovery servers can be used to help connect devices at unknown IP addresses by storing the last known IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23555
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{local-announce-enabled?} (default: @code{#t})"
msgstr "@code{user} (default: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:23559
msgid "This makes devices find each other very easily on the same LAN.  Often, this will allow you to just plug an Ethernet between two devices, or connect one device to the other's hotspot and start syncing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23560
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @var{8888})"
msgid "@code{local-announce-port} (default: @code{21027})"
msgstr "@code{port} (padrão: @var{8888})"

#. type: item
#: guix-git/doc/guix.texi:23561
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{local-announce-mac-address} (default: @code{\"[ff12::8384]:21027\"})"
msgstr "@code{options} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23562 guix-git/doc/guix.texi:23726
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{max-send-kbps} (default: @code{0})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23563 guix-git/doc/guix.texi:23727
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{max-receive-kbps} (default: @code{0})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: item
#: guix-git/doc/guix.texi:23564
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{reconnection-interval-seconds} (default: @code{60})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23565
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{relays-enabled?} (default: @code{#t})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23571
msgid "This option allows your Syncthing instance to use a global network of @uref{https://docs.syncthing.net/users/relaying.html, relays} to enable syncing between devices when all other methods fail.  As always, Syncthing traffic is encrypted in transport and the relays are unable to decrypt it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23572
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{relay-reconnect-interval-minutes} (default: @code{10})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23573
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{start-browser?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: item
#: guix-git/doc/guix.texi:23574
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{nat-enabled?} (default: @code{#t})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23575
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{nat-lease-minutes} (default: @code{60})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23576
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{nat-renewal-minutes} (default: @code{30})"
msgstr "@code{term} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23577
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{nat-timeout-seconds} (default: @code{10})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23578
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{usage-reporting-accepted} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23583
msgid "Options whose names begin with `usage-reporting-' control usage reporting.  Set to -1 to disable, or to a positive value to enable.  The default (0) disables reporting, but causes a usage reporting consent prompt to be displayed in the Syncthing GUI."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23584
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{usage-reporting-seen} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23585
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{usage-reporting-unique-id} (default: @code{\"\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23586
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{usage-reporting-url} (default: @code{\"https://data.syncthing.net/newdata\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: item
#: guix-git/doc/guix.texi:23587
#, fuzzy, no-wrap
#| msgid "@code{no-hosts?} (default: @code{#f})"
msgid "@code{usage-reporting-post-insecurely?} (default: @code{#f})"
msgstr "@code{no-hosts?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23588
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{usage-reporting-initial-delay-seconds} (default: @code{1800})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: item
#: guix-git/doc/guix.texi:23589
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{auto-upgrade-interval-hours} (default: @code{12})"
msgstr "@code{term} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23590
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{upgrade-to-pre-releases?} (default: @code{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23591
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{keep-temporaries-hours} (default: @code{24})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23592
#, fuzzy, no-wrap
#| msgid "@code{ignore-lid?} (default: @code{#f})"
msgid "@code{cache-ignored-files?} (default: @code{#f})"
msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23593
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{progress-update-interval-seconds} (default: @code{5})"
msgstr "@code{delay} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23594
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{limit-bandwidth-in-lan?} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23595
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{min-home-disk-free-unit} (default: @code{\"%\"})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23596
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{min-home-disk-free} (default: @code{1})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23597
#, no-wrap
msgid "@code{releases-url} (default: @code{\"https://upgrades.syncthing.net/meta.json\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23598
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{overwrite-remote-device-names-on-connect?} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23599
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{temp-index-min-blocks} (default: @code{10})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23600
#, fuzzy, no-wrap
msgid "@code{unacked-notification-id} (default: @code{\"authenticationUserAndPassword\"})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23601
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{traffic-class} (default: @code{0})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23602
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{set-low-priority?} (default: @code{#t})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23603
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{max-folder-concurrency} (default: @code{0})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23604
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{crash-reporting-url} (default: @code{\"https://crash.syncthing.net/newcrash\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: item
#: guix-git/doc/guix.texi:23605
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{crash-reporting-enabled?} (default: @code{#t})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23606
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{stun-keepalive-start-seconds} (default: @code{180})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23607
#, fuzzy, no-wrap
#| msgid "@code{key} (default: @code{#f})"
msgid "@code{stun-keepalive-min-seconds} (default: @code{20})"
msgstr "@code{key} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23608
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{stun-server} (default: @code{\"default\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23609
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{database-tuning} (default: @code{\"auto\"})"
msgstr "@code{cache} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23610
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-concurrent-incoming-request-kib} (default: @code{0})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23611
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{announce-lan-addresses?} (default: @code{#t})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23612
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{send-full-index-on-upgrade?} (default: @code{#f})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: item
#: guix-git/doc/guix.texi:23613
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-limit-enough} (default: @code{0})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23614
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-limit-max} (default: @code{0})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23615
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{insecure-allow-old-tls-versions?} (default: @code{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23616
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-priority-tcp-lan} (default: @code{10})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23617
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-priority-quic-lan} (default: @code{20})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23618
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-priority-tcp-wan} (default: @code{30})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23619
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-priority-quic-wan} (default: @code{40})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23620
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-priority-relay} (default: @code{50})"
msgstr "@code{options} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23621
#, fuzzy, no-wrap
#| msgid "@code{no-resolv?} (default: @code{#f})"
msgid "@code{connection-priority-upgrade-threshold} (default: @code{0})"
msgstr "@code{no-resolv?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23622
#, fuzzy, no-wrap
#| msgid "@code{rc-file} (default: @var{(gitolite-rc-file)})"
msgid "@code{default-folder} (default: @code{(syncthing-folder (label \"\"))})"
msgstr "@code{rc-file} (padrão: @var{(gitolite-rc-file)})"

#. type: itemx
#: guix-git/doc/guix.texi:23623
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{default-device} (default: @code{(syncthing-device (id \"\"))})"
msgstr "@code{device} (default: @code{#f})"

#. type: itemx
#: guix-git/doc/guix.texi:23624
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{default-ignores} (default: @code{\"\")})"
msgstr "@code{user} (padrão: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:23630
msgid "Options whose names begin with `default-' above do not affect folders and devices added through the Guix configuration interface.  They will, however, affect folders and devices that are added through the Syncthing GUI, by an @code{introducer}, or a device with @code{auto-accept-folders}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23633
#, fuzzy, no-wrap
#| msgid "{Data Type} rsync-module"
msgid "{Data Type} syncthing-folder"
msgstr "{Tipo de dados} rsync-module"

#. type: deftp
#: guix-git/doc/guix.texi:23635
#, fuzzy
msgid "Data type representing a folder to be synchronized."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:23640
msgid "This ID cannot match the ID of any other folder on this device.  If left unspecified, it will default to the label (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23643
msgid "A human readable label for the folder."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:23644
#, no-wrap
msgid "path"
msgstr "path"

#. type: table
#: guix-git/doc/guix.texi:23646
msgid "The path at which to store this folder."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23647
#, fuzzy, no-wrap
#| msgid "@code{upower} (default: @var{upower})"
msgid "@code{type} (default: @code{\"sendreceive\"})"
msgstr "@code{upower} (default: @var{upower})"

#. type: item
#: guix-git/doc/guix.texi:23648
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{rescan-interval-seconds} (default: @code{3600})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23649
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{file-system-watcher-enabled?} (default: @code{#t})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23650
#, fuzzy, no-wrap
#| msgid "@code{patch-flags} (default: @code{'(\"-p1\")})"
msgid "@code{file-system-watcher-delay-seconds} (default: @code{10})"
msgstr "@code{patch-flags} (padrão: @code{'(\"-p1\")})"

#. type: item
#: guix-git/doc/guix.texi:23651
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{file-system-watcher-timeout-seconds} (default: @code{0})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: item
#: guix-git/doc/guix.texi:23652
#, fuzzy, no-wrap
#| msgid "@code{ignore-lid?} (default: @code{#f})"
msgid "@code{ignore-permissions?} (default: @code{#f})"
msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23653
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{auto-normalize?} (default: @code{#t})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23654
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{devices} (default: @code{'()})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23659
msgid "This should be a list of other Syncthing devices.  You do not need to specify the current device.  Each device can be listed as a a @code{syncthing-device} record or a @code{syncthing-folder-device} record if you want files to be encrypted on disk.  See below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23660
#, fuzzy, no-wrap
#| msgid "@code{system?} (default: @code{#f})"
msgid "@code{filesystem-type} (default: @code{\"basic\"})"
msgstr "@code{system?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23661
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{min-disk-free-unit} (default: @code{\"%\"})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23662
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{min-disk-free} (default: @code{1})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23663
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{versioning-type} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23664
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{versioning-file-system-path} (default: @code{\"\"})"
msgstr "@code{term} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23665
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{versioning-file-system-type} (default: @code{\"basic\"})"
msgstr "@code{node} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23666
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{versioning-cleanup-interval-seconds} (default: @code{3600})"
msgstr "@code{nice} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23667
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{versioning-cleanout-days} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23668
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{versioning-keep} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23669
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{versioning-max-age} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23670
#, fuzzy, no-wrap
#| msgid "@code{domain} (default: @code{#f})"
msgid "@code{versioning-command} (default: @code{#f})"
msgstr "@code{domain} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23671
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{copiers} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23672
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{puller-max-pending-kib} (default: @code{0})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23673
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{hashers} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23674
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{order} (default: @code{\"random\"})"
msgstr "@code{user} (default: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23675
#, fuzzy, no-wrap
#| msgid "@code{ignore-lid?} (default: @code{#f})"
msgid "@code{ignore-delete?} (default: @code{#f})"
msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23676
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{scan-progress-interval-seconds} (default: @code{0})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23677
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{puller-pause-seconds} (default: @code{0})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23678
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-conflicts} (default: @code{10})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23679
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{disable-sparse-files?} (default: @code{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23680
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{disable-temp-indexes?} (default: @code{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23681 guix-git/doc/guix.texi:23724
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{paused?} (default: @code{#f})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: item
#: guix-git/doc/guix.texi:23682
#, fuzzy, no-wrap
#| msgid "@code{no-resolv?} (default: @code{#f})"
msgid "@code{weak-hash-threshold-percentage} (default: @code{25})"
msgstr "@code{no-resolv?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23683
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{marker-name} (default: @code{\".stfolder\"})"
msgstr "@code{user} (default: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23684
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{copy-ownership-from-parent?} (default: @code{#f})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23685
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{mod-time-window-seconds} (default: @code{0})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23686
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-concurrent-writes} (default: @code{2})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23687
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{disable-fsync?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23688
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{block-pull-order} (default: @code{\"standard\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23689
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{copy-range-method} (default: @code{\"standard\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: item
#: guix-git/doc/guix.texi:23690
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{case-sensitive-file-system?} (default: @code{#f})"
msgstr "@code{file} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23691
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{junctions-as-dirs?} (default: @code{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23692
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{sync-ownership?} (default: @code{#f})"
msgstr "@code{users} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23693
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{send-ownership?} (default: @code{#f})"
msgstr "@code{users} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23694
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{sync-xattrs?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23695
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{send-xattrs?} (default: @code{#f})"
msgstr "@code{users} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23696
#, fuzzy, no-wrap
msgid "@code{xattr-filter-max-single-entry-size} (default: @code{1024})"
msgstr "@code{term} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23697
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{xattr-filter-max-total-size} (default: @code{4096})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: deftp
#: guix-git/doc/guix.texi:23701
#, fuzzy, no-wrap
#| msgid "{Data Type} rsync-module"
msgid "{Data Type} syncthing-device"
msgstr "{Tipo de dados} rsync-module"

#. type: deftp
#: guix-git/doc/guix.texi:23703
#, fuzzy
msgid "Data type representing a device to synchronize folders with."
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:23705
#, fuzzy, no-wrap
#| msgid "uuid"
msgid "id"
msgstr "uuid"

#. type: table
#: guix-git/doc/guix.texi:23709
msgid "A long hash representing the keys generated by Syncthing on the first launch.  You can obtain this from the Syncthing GUI or by inspecting an existing Syncthing configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23710
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{\"\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23712
msgid "A human readable device name for viewing in the GUI or in Scheme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23713
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{compression} (default: @code{\"metadata\"})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: item
#: guix-git/doc/guix.texi:23714
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{introducer?} (default: @code{#f})"
msgstr "@code{node} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23715
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{skip-introduction-removals?} (default: @code{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23716 guix-git/doc/guix.texi:23752
#, fuzzy, no-wrap
#| msgid "@code{group} (default: @var{git})"
msgid "@code{introduced-by} (default: @code{\"\"})"
msgstr "@code{group} (padrão: @var{git})"

#. type: item
#: guix-git/doc/guix.texi:23717
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{addresses} (default: @code{'(\"dynamic\")})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:23723
msgid "List of addresses at which to search for this device.  When the special value ``dynamic'' is included, Syncthing will search for the device locally as well as via the Syncthing project's @uref{https://docs.syncthing.net/users/security.html#global-discovery, global discovery} servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23725
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{auto-accept-folders?} (default: @code{#f})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23728
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{max-request-kib} (default: @code{0})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: item
#: guix-git/doc/guix.texi:23729
#, fuzzy, no-wrap
#| msgid "@code{nsec3?} (default: @code{#f})"
msgid "@code{untrusted?} (default: @code{#f})"
msgstr "@code{nsec3?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:23730
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @var{8888})"
msgid "@code{remote-gui-port} (default: @code{0})"
msgstr "@code{port} (padrão: @var{8888})"

#. type: item
#: guix-git/doc/guix.texi:23731
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{num-connections} (default: @code{0})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: deftp
#: guix-git/doc/guix.texi:23736
#, fuzzy, no-wrap
#| msgid "{Data Type} syncthing-configuration"
msgid "{Data Type} syncthing-folder-device"
msgstr "{Tipo de dados} syncthing-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23739
msgid "This data type offers two folder-specific device options: @code{introduced-by} and @code{encryption-password}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23743
msgid "@code{syncthing-folder-device} corresponds to the @uref{https://docs.syncthing.net/users/config.html#config-option-folder.device, `device'} option in the upstream `folder' element."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23747
msgid "If you don't need to use these options, then you can just use @code{syncthing-device} instead of @code{syncthing-folder-device} in the @code{devices} field of a @code{syncthing-folder} instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23751
msgid "The @code{syncthing-device} for which this configuration applies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23758
msgid "The name of the device that \"introduced\" our device to the device sharing this folder.  This is only used when \"introduced\" devices are removed by the introducer.  See @uref{https://docs.syncthing.net/users/introducer.html, Syncthing introductions}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23759
#, fuzzy, no-wrap
#| msgid "@code{password} (default: @code{#f})"
msgid "@code{encryption-password} (default: @code{\"\"})"
msgstr "@code{password} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23762
msgid "The password used to encrypt data that is synchronized to untrusted devices."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23772
msgid "Beware: specifying this field will include this password as plain text (not encrypted) and globally visible in @file{/gnu/store/}.  If the encryption-password is non-empty, then it will be used as a password to encrypt file chunks as they are synchronized to untrusted devices.  For more information on syncing to devices you don't totally trust, see Syncthing's documentation on @uref{https://docs.syncthing.net/users/untrusted.html, Untrusted (Encrypted) Devices}.  Note that data transfer is always encrypted while in transport (\"end-to-end encryption\"), regardless of this setting."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23777
msgid "Here is a more complex example configuration for illustrative purposes:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23801
#, no-wrap
msgid ""
"(service syncthing-service-type\n"
"         (let ((laptop (syncthing-device (id \"VHOD2D6-...-7XRMDEN\")))\n"
"               (desktop (syncthing-device (id \"64SAZ37-...-FZJ5GUA\")\n"
"                                          (addresses '(\"tcp://example.com\"))))\n"
"               (bob-desktop (syncthing-device (id \"KYIMEGO-...-FT77EAO\"))))\n"
"           (syncthing-configuration\n"
"            (user \"alice\")\n"
"            (config-file\n"
"             (syncthing-config-file\n"
"               (folders (list (syncthing-folder\n"
"                               (label \"some-files\")\n"
"                               (path \"~/data\")\n"
"                               (devices (list desktop laptop)))\n"
"                              (syncthing-folder\n"
"                               (label \"critical-files\")\n"
"                               (path \"~/secrets\")\n"
"                               (devices\n"
"                                (list desktop\n"
"                                      laptop\n"
"                                      (syncthing-folder-device\n"
"                                       (device bob-desktop)\n"
"                                       (encryption-password \"mypassword\"))))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:23805
msgid "Furthermore, @code{(gnu services ssh)} provides the following services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23805 guix-git/doc/guix.texi:23874
#: guix-git/doc/guix.texi:47527
#, no-wrap
msgid "SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:23806 guix-git/doc/guix.texi:23875
#: guix-git/doc/guix.texi:47528
#, no-wrap
msgid "SSH server"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23808
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "lsh-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23812
msgid "Type of the service that runs the GNU@tie{}lsh secure shell (SSH)  daemon, @command{lshd}.  The value for this service is a @code{<lsh-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23814
#, no-wrap
msgid "{Data Type} lsh-configuration"
msgstr "{Tipo de dados} lsh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23816
#, fuzzy
msgid "Data type representing the configuration of @command{lshd}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:23818
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{lsh} (default: @code{lsh}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23820
msgid "The package object of the GNU@tie{}lsh secure shell (SSH) daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23821
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{daemonic?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23823
msgid "Whether to detach from the controlling terminal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23824
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{host-key} (default: @code{\"/etc/lsh/host-key\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23827
msgid "File containing the @dfn{host key}.  This file must be readable by root only."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23828
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{interfaces} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23832
msgid "List of host names or addresses that @command{lshd} will listen on.  If empty, @command{lshd} listens for connections on all the network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23833
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port-number} (default: @code{22}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23835
msgid "Port to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23836 guix-git/doc/guix.texi:25073
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{allow-empty-passwords?} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23838
msgid "Whether to accept log-ins with empty passwords."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23839
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{root-login?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23841
msgid "Whether to accept log-ins as root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23842
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{syslog-output?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23845
msgid "Whether to log @command{lshd} standard output to syslogd.  This will make the service depend on the existence of a syslogd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23846
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pid-file?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23849
msgid "When @code{#t}, @command{lshd} writes its PID to the file specified in @var{pid-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23850
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/lshd.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23852
msgid "File that @command{lshd} will write its PID to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23853
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{x11-forwarding?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23855
msgid "Whether to enable X11 forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23856
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{tcp/ip-forwarding?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23858
msgid "Whether to enable TCP/IP forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23859
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{password-authentication?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23861
msgid "Whether to accept log-ins using password authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23862
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{public-key-authentication?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23864
msgid "Whether to accept log-ins using public key authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23865
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{initialize?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23870
msgid "When @code{#f}, it is up to the user to initialize the randomness generator (@pxref{lsh-make-seed,,, lsh, LSH Manual}), and to create a key pair with the private key stored in file @var{host-key} (@pxref{lshd basics,,, lsh, LSH Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23876
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "openssh-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:23880
msgid "This is the type for the @uref{http://www.openssh.org, OpenSSH} secure shell daemon, @command{sshd}.  Its value must be an @code{openssh-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23889
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"           (x11-forwarding? #t)\n"
"           (permit-root-login 'prohibit-password)\n"
"           (authorized-keys\n"
"             `((\"alice\" ,(local-file \"alice.pub\"))\n"
"               (\"bob\" ,(local-file \"bob.pub\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23892
msgid "See below for details about @code{openssh-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:23895
msgid "This service can be extended with extra authorized keys, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23900
#, no-wrap
msgid ""
"(service-extension openssh-service-type\n"
"                   (const `((\"charlie\"\n"
"                             ,(local-file \"charlie.pub\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:23903
#, no-wrap
msgid "{Data Type} openssh-configuration"
msgstr "{Tipo de dados} openssh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:23905
msgid "This is the configuration record for OpenSSH's @command{sshd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23907
#, no-wrap
msgid "@code{openssh} (default @var{openssh})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23909 guix-git/doc/guix.texi:50531
#, fuzzy
#| msgid "The GPM package to use."
msgid "The OpenSSH package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:23910
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/sshd.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23912
msgid "Name of the file where @command{sshd} writes its PID."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23913
#, no-wrap
msgid "@code{port-number} (default: @code{22})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23915
msgid "TCP port on which @command{sshd} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23916
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-connections} (default: @code{200})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23921
msgid "Hard limit on the maximum number of simultaneous client connections, enforced by the inetd-style Shepherd service (@pxref{Service De- and Constructors, @code{make-inetd-constructor},, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23922
#, no-wrap
msgid "@code{permit-root-login} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23927
msgid "This field determines whether and when to allow logins as root.  If @code{#f}, root logins are disallowed; if @code{#t}, they are allowed.  If it's the symbol @code{'prohibit-password}, then root logins are permitted but not with password-based authentication."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23928 guix-git/doc/guix.texi:24098
#, no-wrap
msgid "@code{allow-empty-passwords?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23931
msgid "When true, users with empty passwords may log in.  When false, they may not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23932 guix-git/doc/guix.texi:24101
#, no-wrap
msgid "@code{password-authentication?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23935
msgid "When true, users may log in with their password.  When false, they have other authentication methods."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23936
#, no-wrap
msgid "@code{public-key-authentication?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23939
msgid "When true, users may log in using public key authentication.  When false, users have to use other authentication method."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23942
msgid "Authorized public keys are stored in @file{~/.ssh/authorized_keys}.  This is used only by protocol version 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23943
#, no-wrap
msgid "@code{x11-forwarding?} (default: @code{#f})"
msgstr "@code{x11-forwarding?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23947
msgid "When true, forwarding of X11 graphical client connections is enabled---in other words, @command{ssh} options @option{-X} and @option{-Y} will work."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23948
#, no-wrap
msgid "@code{allow-agent-forwarding?} (default: @code{#t})"
msgstr "@code{allow-agent-forwarding?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23950
msgid "Whether to allow agent forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23951
#, no-wrap
msgid "@code{allow-tcp-forwarding?} (default: @code{#t})"
msgstr "@code{allow-tcp-forwarding?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:23953
msgid "Whether to allow TCP forwarding."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23954
#, no-wrap
msgid "@code{gateway-ports?} (default: @code{#f})"
msgstr "@code{gateway-ports?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:23956
msgid "Whether to allow gateway ports."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23957
#, no-wrap
msgid "@code{challenge-response-authentication?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23960
msgid "Specifies whether challenge response authentication is allowed (e.g.@: via PAM)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23961
#, no-wrap
msgid "@code{use-pam?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23967
msgid "Enables the Pluggable Authentication Module interface.  If set to @code{#t}, this will enable PAM authentication using @code{challenge-response-authentication?} and @code{password-authentication?}, in addition to PAM account and session module processing for all authentication types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23972
msgid "Because PAM challenge response authentication usually serves an equivalent role to password authentication, you should disable either @code{challenge-response-authentication?} or @code{password-authentication?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23973
#, no-wrap
msgid "@code{print-last-log?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23976
msgid "Specifies whether @command{sshd} should print the date and time of the last user login when a user logs in interactively."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23977
#, no-wrap
msgid "@code{subsystems} (default: @code{'((\"sftp\" \"internal-sftp\"))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23979
msgid "Configures external subsystems (e.g.@: file transfer daemon)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23983
msgid "This is a list of two-element lists, each of which containing the subsystem name and a command (with optional arguments) to execute upon subsystem request."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23986
msgid "The command @command{internal-sftp} implements an in-process SFTP server.  Alternatively, one can specify the @command{sftp-server} command:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:23991
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"          (subsystems\n"
"           `((\"sftp\" ,(file-append openssh \"/libexec/sftp-server\"))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:23993
#, no-wrap
msgid "@code{accepted-environment} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23995
msgid "List of strings describing which environment variables may be exported."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:23998
msgid "Each string gets on its own line.  See the @code{AcceptEnv} option in @code{man sshd_config}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24003
msgid "This example allows ssh-clients to export the @env{COLORTERM} variable.  It is set by terminal emulators, which support colors.  You can use it in your shell's resource file to enable colors for the prompt and commands if this variable is set."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24008
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration\n"
"           (accepted-environment '(\"COLORTERM\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24011
#, no-wrap
msgid "authorized keys, SSH"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24012
#, no-wrap
msgid "SSH authorized keys"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24016
msgid "This is the list of authorized keys.  Each element of the list is a user name followed by one or more file-like objects that represent SSH public keys.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24023
#, no-wrap
msgid ""
"(openssh-configuration\n"
"  (authorized-keys\n"
"    `((\"rekado\" ,(local-file \"rekado.pub\"))\n"
"      (\"chris\" ,(local-file \"chris.pub\"))\n"
"      (\"root\" ,(local-file \"rekado.pub\") ,(local-file \"chris.pub\")))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24028
msgid "registers the specified public keys for user accounts @code{rekado}, @code{chris}, and @code{root}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24031
msgid "Additional authorized keys can be specified @i{via} @code{service-extension}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24034
msgid "Note that this does @emph{not} interfere with the use of @file{~/.ssh/authorized_keys}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24035
#, fuzzy, no-wrap
#| msgid "@code{no-hosts?} (default: @code{#f})"
msgid "@code{generate-host-keys?} (default: @code{#t})"
msgstr "@code{no-hosts?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24038
msgid "Whether to generate host key pairs with @command{ssh-keygen -A} under @file{/etc/ssh} if there are none."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24044
msgid "Generating key pairs takes a few seconds when enough entropy is available and is only done once.  You might want to turn it off for instance in a virtual machine that does not need it because host keys are provided in some other way, and where the extra boot time is a problem."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24045 guix-git/doc/guix.texi:24447
#, no-wrap
msgid "@code{log-level} (default: @code{'info})"
msgstr "@code{log-level} (default: @code{'info})"

#. type: table
#: guix-git/doc/guix.texi:24049
msgid "This is a symbol specifying the logging level: @code{quiet}, @code{fatal}, @code{error}, @code{info}, @code{verbose}, @code{debug}, etc.  See the man page for @file{sshd_config} for the full list of level names."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24050 guix-git/doc/guix.texi:28134
#: guix-git/doc/guix.texi:34655 guix-git/doc/guix.texi:42413
#: guix-git/doc/guix.texi:42437
#, no-wrap
msgid "@code{extra-content} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24055
msgid "This field can be used to append arbitrary text to the configuration file.  It is especially useful for elaborate configurations that cannot be expressed otherwise.  This configuration, for example, would generally disable root logins, but permit them from one specific IP address:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24061
#, no-wrap
msgid ""
"(openssh-configuration\n"
"  (extra-content \"\\\n"
"Match Address 192.168.0.1\n"
"  PermitRootLogin yes\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24066
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dropbear-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24070
msgid "Type of the service that runs the @url{https://matt.ucc.asn.au/dropbear/dropbear.html, Dropbear SSH daemon}, whose value is a @code{<dropbear-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24072
msgid "For example, to specify a Dropbear service listening on port 1234:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24076
#, no-wrap
msgid ""
"(service dropbear-service-type (dropbear-configuration\n"
"                                 (port-number 1234)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24079
#, no-wrap
msgid "{Data Type} dropbear-configuration"
msgstr "{Tipo de dados} dropbear-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24081
msgid "This data type represents the configuration of a Dropbear SSH daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24083
#, no-wrap
msgid "@code{dropbear} (default: @var{dropbear})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24085
msgid "The Dropbear package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24086
#, no-wrap
msgid "@code{port-number} (default: 22)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24088
msgid "The TCP port where the daemon waits for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24089
#, no-wrap
msgid "@code{syslog-output?} (default: @code{#t})"
msgstr "@code{syslog-output?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:24091
msgid "Whether to enable syslog output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24092
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/dropbear.pid\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24094
msgid "File name of the daemon's PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24095
#, no-wrap
msgid "@code{root-login?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24097
msgid "Whether to allow @code{root} logins."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24100 guix-git/doc/guix.texi:25350
msgid "Whether to allow empty passwords."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24103
msgid "Whether to enable password-based authentication."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24106
#, no-wrap
msgid "AutoSSH"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24107
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "autossh-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24115
msgid "This is the type for the @uref{https://www.harding.motd.ca/autossh, AutoSSH} program that runs a copy of @command{ssh} and monitors it, restarting it as necessary should it die or stop passing traffic.  AutoSSH can be run manually from the command-line by passing arguments to the binary @command{autossh} from the package @code{autossh}, but it can also be run as a Guix service.  This latter use case is documented here."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24119
msgid "AutoSSH can be used to forward local traffic to a remote machine using an SSH tunnel, and it respects the @file{~/.ssh/config} of the user it is run as."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24124
msgid "For example, to specify a service running autossh as the user @code{pino} and forwarding all local connections to port @code{8081} to @code{remote:8081} using an SSH tunnel, add this call to the operating system's @code{services} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24130
#, no-wrap
msgid ""
"(service autossh-service-type\n"
"         (autossh-configuration\n"
"          (user \"pino\")\n"
"          (ssh-options (list \"-T\" \"-N\" \"-L\" \"8081:localhost:8081\" \"remote.net\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24133
#, no-wrap
msgid "{Data Type} autossh-configuration"
msgstr "{Tipo de dados} autossh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24135
msgid "This data type represents the configuration of an AutoSSH service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24138
#, no-wrap
msgid "@code{user} (default @code{\"autossh\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24141
msgid "The user as which the AutoSSH service is to be run.  This assumes that the specified user exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24142
#, no-wrap
msgid "@code{poll} (default @code{600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24144
msgid "Specifies the connection poll time in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24145
#, no-wrap
msgid "@code{first-poll} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24151
msgid "Specifies how many seconds AutoSSH waits before the first connection test.  After this first test, polling is resumed at the pace defined in @code{poll}.  When set to @code{#f}, the first poll is not treated specially and will also use the connection poll specified in @code{poll}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24152
#, no-wrap
msgid "@code{gate-time} (default @code{30})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24155
msgid "Specifies how many seconds an SSH connection must be active before it is considered successful."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24156
#, no-wrap
msgid "@code{log-level} (default @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24159
msgid "The log level, corresponding to the levels used by syslog---so @code{0} is the most silent while @code{7} is the chattiest."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24160
#, no-wrap
msgid "@code{max-start} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24163
msgid "The maximum number of times SSH may be (re)started before AutoSSH exits.  When set to @code{#f}, no maximum is configured and AutoSSH may restart indefinitely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24164
#, no-wrap
msgid "@code{message} (default @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24166
msgid "The message to append to the echo message sent when testing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24167
#, no-wrap
msgid "@code{port} (default @code{\"0\"})"
msgstr "@code{port} (padrão @code{\"0\"})"

#. type: table
#: guix-git/doc/guix.texi:24177
msgid "The ports used for monitoring the connection.  When set to @code{\"0\"}, monitoring is disabled.  When set to @code{\"@var{n}\"} where @var{n} is a positive integer, ports @var{n} and @var{n}+1 are used for monitoring the connection, such that port @var{n} is the base monitoring port and @code{n+1} is the echo port.  When set to @code{\"@var{n}:@var{m}\"} where @var{n} and @var{m} are positive integers, the ports @var{n} and @var{m} are used for monitoring the connection, such that port @var{n} is the base monitoring port and @var{m} is the echo port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24178
#, no-wrap
msgid "@code{ssh-options} (default @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24182
msgid "The list of command-line arguments to pass to @command{ssh} when it is run.  Options @option{-f} and @option{-M} are reserved for AutoSSH and may cause undefined behaviour."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24186
#, no-wrap
msgid "WebSSH"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24187
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "webssh-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24193
msgid "This is the type for the @uref{https://webssh.huashengdun.org/, WebSSH} program that runs a web SSH client.  WebSSH can be run manually from the command-line by passing arguments to the binary @command{wssh} from the package @code{webssh}, but it can also be run as a Guix service.  This latter use case is documented here."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24199
msgid "For example, to specify a service running WebSSH on loopback interface on port @code{8888} with reject policy with a list of allowed to connection hosts, and NGINX as a reverse-proxy to this service listening for HTTPS connection, add this call to the operating system's @code{services} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24207
#, no-wrap
msgid ""
"(service webssh-service-type\n"
"  (webssh-configuration (address \"127.0.0.1\")\n"
"                        (port 8888)\n"
"                        (policy 'reject)\n"
"                        (known-hosts '(\"localhost ecdsa-sha2-nistp256 AAAA…\"\n"
"                                       \"127.0.0.1 ecdsa-sha2-nistp256 AAAA…\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24223
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"          (server-blocks\n"
"           (list\n"
"            (nginx-server-configuration\n"
"             (inherit %webssh-configuration-nginx)\n"
"             (server-name '(\"webssh.example.com\"))\n"
"             (listen '(\"443 ssl\"))\n"
"             (ssl-certificate (letsencrypt-certificate \"webssh.example.com\"))\n"
"             (ssl-certificate-key (letsencrypt-key \"webssh.example.com\"))\n"
"             (locations\n"
"              (cons (nginx-location-configuration\n"
"                     (uri \"/.well-known\")\n"
"                     (body '(\"root /var/www;\")))\n"
"                    (nginx-server-configuration-locations %webssh-configuration-nginx))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24226
#, no-wrap
msgid "{Data Type} webssh-configuration"
msgstr "{Tipo de dados} webssh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24228
msgid "Data type representing the configuration for @code{webssh-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24230
#, no-wrap
msgid "@code{package} (default: @var{webssh})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24232
msgid "@code{webssh} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24233
#, no-wrap
msgid "@code{user-name} (default: @var{\"webssh\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24236
msgid "User name or user ID that file transfers to and from that module should take place."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24237
#, no-wrap
msgid "@code{group-name} (default: @var{\"webssh\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24240
#, no-wrap
msgid "@code{address} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24242
msgid "IP address on which @command{webssh} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24243
#, no-wrap
msgid "@code{port} (default: @var{8888})"
msgstr "@code{port} (padrão: @var{8888})"

#. type: table
#: guix-git/doc/guix.texi:24245
msgid "TCP port on which @command{webssh} listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24246
#, no-wrap
msgid "@code{policy} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24248
msgid "Connection policy.  @var{reject} policy requires to specify @var{known-hosts}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24249
#, no-wrap
msgid "@code{known-hosts} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24251
msgid "List of hosts which allowed for SSH connection from @command{webssh}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24252
#, no-wrap
msgid "@code{log-file} (default: @file{\"/var/log/webssh.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24254
msgid "Name of the file where @command{webssh} writes its log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24255
#, no-wrap
msgid "@code{log-level} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24257
msgid "Logging level."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24261
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "block-facebook-hosts-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24268
msgid "This service type adds a list of known Facebook hosts to the @file{/etc/hosts} file.  (@pxref{Host Names,,, libc, The GNU C Library Reference Manual})  Each line contains an entry that maps a known server name of the Facebook on-line service---e.g., @code{www.facebook.com}---to unroutable IPv4 and IPv6 addresses."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24271
msgid "This mechanism can prevent programs running locally, such as Web browsers, from accessing Facebook."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24274
msgid "The @code{(gnu services avahi)} provides the following definition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24275
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "avahi-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24280
msgid "This is the service that runs @command{avahi-daemon}, a system-wide mDNS/DNS-SD responder that allows for service discovery and ``zero-configuration'' host name lookups (see @uref{https://avahi.org/}).  Its value must be an @code{avahi-configuration} record---see below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24285
msgid "This service extends the name service cache daemon (nscd) so that it can resolve @code{.local} host names using @uref{https://0pointer.de/lennart/projects/nss-mdns/, nss-mdns}.  @xref{Name Service Switch}, for information on host name resolution."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24288
msgid "Additionally, add the @var{avahi} package to the system profile so that commands such as @command{avahi-browse} are directly usable."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24290
#, no-wrap
msgid "{Data Type} avahi-configuration"
msgstr "{Tipo de dados} avahi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24292
msgid "Data type representation the configuration for Avahi."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24295 guix-git/doc/guix.texi:37589
#: guix-git/doc/guix.texi:42403
#, no-wrap
msgid "@code{host-name} (default: @code{#f})"
msgstr "@code{host-name} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24298
msgid "If different from @code{#f}, use that as the host name to publish for this machine; otherwise, use the machine's actual host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24299 guix-git/doc/guix.texi:37797
#, no-wrap
msgid "@code{publish?} (default: @code{#t})"
msgstr "@code{publish?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:24302
msgid "When true, allow host names and services to be published (broadcast) over the network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24303
#, no-wrap
msgid "@code{publish-workstation?} (default: @code{#t})"
msgstr "@code{publish-workstation?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:24307
msgid "When true, @command{avahi-daemon} publishes the machine's host name and IP address via mDNS on the local network.  To view the host names published on your local network, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24310
#, no-wrap
msgid "avahi-browse _workstation._tcp\n"
msgstr "avahi-browse _workstation._tcp\n"

#. type: item
#: guix-git/doc/guix.texi:24312
#, no-wrap
msgid "@code{wide-area?} (default: @code{#f})"
msgstr "@code{wide-area?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24314
msgid "When true, DNS-SD over unicast DNS is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24315
#, no-wrap
msgid "@code{ipv4?} (default: @code{#t})"
msgstr "@code{ipv4?} (default: @code{#t})"

#. type: itemx
#: guix-git/doc/guix.texi:24316
#, no-wrap
msgid "@code{ipv6?} (default: @code{#t})"
msgstr "@code{ipv6?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:24318
msgid "These fields determine whether to use IPv4/IPv6 sockets."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24319
#, no-wrap
msgid "@code{domains-to-browse} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24321
msgid "This is a list of domains to browse."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24324
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "openvswitch-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24328
msgid "This is the type of the @uref{https://www.openvswitch.org, Open vSwitch} service, whose value should be an @code{openvswitch-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24330
#, no-wrap
msgid "{Data Type} openvswitch-configuration"
msgstr "{Tipo de dados} openvswitch-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24334
msgid "Data type representing the configuration of Open vSwitch, a multilayer virtual switch which is designed to enable massive network automation through programmatic extension."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24336
#, no-wrap
msgid "@code{package} (default: @var{openvswitch})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24338
msgid "Package object of the Open vSwitch."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24342
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pagekite-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24347
msgid "This is the service type for the @uref{https://pagekite.net, PageKite} service, a tunneling solution for making localhost servers publicly visible, even from behind restrictive firewalls or NAT without forwarded ports.  The value for this service type is a @code{pagekite-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24349
msgid "Here's an example exposing the local HTTP and SSH daemons:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24356
#, no-wrap
msgid ""
"(service pagekite-service-type\n"
"         (pagekite-configuration\n"
"           (kites '(\"http:@@kitename:localhost:80:@@kitesecret\"\n"
"                    \"raw/22:@@kitename:localhost:22:@@kitesecret\"))\n"
"           (extra-file \"/etc/pagekite.rc\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24359
#, no-wrap
msgid "{Data Type} pagekite-configuration"
msgstr "{Tipo de dados} pagekite-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24361
msgid "Data type representing the configuration of PageKite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24363
#, no-wrap
msgid "@code{package} (default: @var{pagekite})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24365
msgid "Package object of PageKite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24366
#, no-wrap
msgid "@code{kitename} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24368
msgid "PageKite name for authenticating to the frontend server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24369
#, no-wrap
msgid "@code{kitesecret} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24372
msgid "Shared secret for authenticating to the frontend server.  You should probably put this inside @code{extra-file} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24373
#, no-wrap
msgid "@code{frontend} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24376
msgid "Connect to the named PageKite frontend server instead of the @uref{https://pagekite.net,,pagekite.net} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24377
#, no-wrap
msgid "@code{kites} (default: @code{'(\"http:@@kitename:localhost:80:@@kitesecret\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24380
msgid "List of service kites to use.  Exposes HTTP on port 80 by default.  The format is @code{proto:kitename:host:port:secret}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24381
#, no-wrap
msgid "@code{extra-file} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24384
msgid "Extra configuration file to read, which you are expected to create manually.  Use this to add additional options and manage shared secrets out-of-band."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24388
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "yggdrasil-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24392
msgid "The service type for connecting to the @uref{https://yggdrasil-network.github.io/, Yggdrasil network}, an early-stage implementation of a fully end-to-end encrypted IPv6 network."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24399
msgid "Yggdrasil provides name-independent routing with cryptographically generated addresses.  Static addressing means you can keep the same address as long as you want, even if you move to a new location, or generate a new address (by generating new keys) whenever you want.  @uref{https://yggdrasil-network.github.io/2018/07/28/addressing.html}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24403
msgid "Pass it a value of @code{yggdrasil-configuration} to connect it to public peers and/or local peers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24407
msgid "Here is an example using public peers and a static address.  The static signing and encryption keys are defined in @file{/etc/yggdrasil-private.conf} (the default value for @code{config-file})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24419
#, no-wrap
msgid ""
";; part of the operating-system declaration\n"
"(service yggdrasil-service-type\n"
"              (yggdrasil-configuration\n"
"               (autoconf? #f) ;; use only the public peers\n"
"               (json-config\n"
"               ;; choose one from\n"
"               ;; https://github.com/yggdrasil-network/public-peers\n"
"                '((peers . #(\"tcp://1.2.3.4:1337\"))))\n"
"               ;; /etc/yggdrasil-private.conf is the default value for config-file\n"
"               ))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24426
#, no-wrap
msgid ""
"# sample content for /etc/yggdrasil-private.conf\n"
"@{\n"
"  # Your private key. DO NOT share this with anyone!\n"
"  PrivateKey: 5c750...\n"
"@}\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24429
#, no-wrap
msgid "{Data Type} yggdrasil-configuration"
msgstr "{Tipo de dados} yggdrasil-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24431
msgid "Data type representing the configuration of Yggdrasil."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24433
#, no-wrap
msgid "@code{package} (default: @code{yggdrasil})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24435
msgid "Package object of Yggdrasil."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24436
#, no-wrap
msgid "@code{json-config} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24442
msgid "Contents of @file{/etc/yggdrasil.conf}.  Will be merged with @file{/etc/yggdrasil-private.conf}.  Note that these settings are stored in the Guix store, which is readable to all users. @strong{Do not store your private keys in it}.  See the output of @code{yggdrasil -genconf} for a quick overview of valid keys and their default values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24443
#, no-wrap
msgid "@code{autoconf?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24446
msgid "Whether to use automatic mode.  Enabling it makes Yggdrasil use a dynamic IP and peer with IPv6 neighbors."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24449
msgid "How much detail to include in logs.  Use @code{'debug} for more detail."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24450
#, no-wrap
msgid "@code{log-to} (default: @code{'stdout})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24454
msgid "Where to send logs.  By default, the service logs standard output to @file{/var/log/yggdrasil.log}.  The alternative is @code{'syslog}, which sends output to the running syslog service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24455
#, no-wrap
msgid "@code{config-file} (default: @code{\"/etc/yggdrasil-private.conf\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24462
msgid "What HJSON file to load sensitive data from.  This is where private keys should be stored, which are necessary to specify if you don't want a randomized address after each restart.  Use @code{#f} to disable.  Options defined in this file take precedence over @code{json-config}.  Use the output of @code{yggdrasil -genconf} as a starting point.  To configure a static address, delete everything except PrivateKey option."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24466
#, no-wrap
msgid "IPFS"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24467
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ipfs-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24471
msgid "The service type for connecting to the @uref{https://ipfs.io,IPFS network}, a global, versioned, peer-to-peer file system. Pass it a @code{ipfs-configuration} to change the ports used for the gateway and API."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24473
msgid "Here's an example configuration, using some non-standard ports:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24479
#, no-wrap
msgid ""
"(service ipfs-service-type\n"
"         (ipfs-configuration\n"
"          (gateway \"/ip4/127.0.0.1/tcp/8880\")\n"
"          (api \"/ip4/127.0.0.1/tcp/8881\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24482
#, no-wrap
msgid "{Data Type} ipfs-configuration"
msgstr "{Tipo de dados} ipfs-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24484
#, fuzzy
msgid "Data type representing the configuration of IPFS."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:24486
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{go-ipfs})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24488
msgid "Package object of IPFS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24489
#, fuzzy, no-wrap
msgid "@code{gateway} (default: @code{\"/ip4/127.0.0.1/tcp/8082\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:24491
msgid "Address of the gateway, in ‘multiaddress’ format."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24492
#, fuzzy, no-wrap
msgid "@code{api} (default: @code{\"/ip4/127.0.0.1/tcp/5001\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:24494
msgid "Address of the API endpoint, in ‘multiaddress’ format."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24497
#, no-wrap
msgid "keepalived"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24498
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "keepalived-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24503
msgid "This is the type for the @uref{https://www.keepalived.org/, Keepalived} routing software, @command{keepalived}.  Its value must be an @code{keepalived-configuration} record as in this example for master machine:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24508
#, no-wrap
msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"           (config-file (local-file \"keepalived-master.conf\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24511
msgid "where @file{keepalived-master.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24523
#, no-wrap
msgid ""
"vrrp_instance my-group @{\n"
"  state MASTER\n"
"  interface enp9s0\n"
"  virtual_router_id 100\n"
"  priority 100\n"
"  unicast_peer @{ 10.0.0.2 @}\n"
"  virtual_ipaddress @{\n"
"    10.0.0.4/24\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24526
msgid "and for backup machine:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24531
#, no-wrap
msgid ""
"(service keepalived-service-type\n"
"         (keepalived-configuration\n"
"          (config-file (local-file \"keepalived-backup.conf\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24534
msgid "where @file{keepalived-backup.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:24546
#, no-wrap
msgid ""
"vrrp_instance my-group @{\n"
"  state BACKUP\n"
"  interface enp9s0\n"
"  virtual_router_id 100\n"
"  priority 99\n"
"  unicast_peer @{ 10.0.0.3 @}\n"
"  virtual_ipaddress @{\n"
"    10.0.0.4/24\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24552
#, no-wrap
msgid "unattended upgrades"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24553
#, no-wrap
msgid "upgrades, unattended"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24558
msgid "The @code{(gnu services admin)} module provides a service to perform @emph{unattended upgrades}: periodically, the system automatically reconfigures itself from the latest Guix.  Guix System has several properties that make unattended upgrades safe:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24563
msgid "upgrades are transactional (either the upgrade succeeds or it fails, but you cannot end up with an ``in-between'' system state);"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24567
msgid "the upgrade log is kept---you can view it with @command{guix system list-generations}---and you can roll back to any previous generation, should the upgraded system fail to behave as intended;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24570
msgid "channel code is authenticated so you know you can only run genuine code (@pxref{Channels});"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:24573
msgid "@command{guix system reconfigure} prevents downgrades, which makes it immune to @dfn{downgrade attacks}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24578
msgid "To set up unattended upgrades, add an instance of @code{unattended-upgrade-service-type} like the one below to the list of your operating system services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24581
#, no-wrap
msgid "(service unattended-upgrade-service-type)\n"
msgstr "(service unattended-upgrade-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:24588
msgid "The defaults above set up weekly upgrades: every Sunday at midnight.  You do not need to provide the operating system configuration file: it uses @file{/run/current-system/configuration.scm}, which ensures it always uses your latest configuration---@pxref{provenance-service-type}, for more information about this file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24594
msgid "There are several things that can be configured, in particular the periodicity and services (daemons) to be restarted upon completion.  When the upgrade is successful, the service takes care of deleting system generations older that some threshold, as per @command{guix system delete-generations}.  See the reference below for details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24598
msgid "To ensure that upgrades are actually happening, you can run @command{guix system describe}.  To investigate upgrade failures, visit the unattended upgrade log file (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24599
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "unattended-upgrade-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24603
msgid "This is the service type for unattended upgrades.  It sets up an mcron job (@pxref{Scheduled Job Execution}) that runs @command{guix system reconfigure} from the latest version of the specified channels."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24606
msgid "Its value must be a @code{unattended-upgrade-configuration} record (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24608
#, no-wrap
msgid "{Data Type} unattended-upgrade-configuration"
msgstr "{Tipo de dados} unattended-upgrade-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24611
msgid "This data type represents the configuration of the unattended upgrade service.  The following fields are available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24613
#, no-wrap
msgid "@code{schedule} (default: @code{\"30 01 * * 0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24617
msgid "This is the schedule of upgrades, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24618 guix-git/doc/guix.texi:27817
#, no-wrap
msgid "@code{channels} (default: @code{#~%default-channels})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24622
msgid "This gexp specifies the channels to use for the upgrade (@pxref{Channels}).  By default, the tip of the official @code{guix} channel is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24623
#, no-wrap
msgid "@code{operating-system-file} (default: @code{\"/run/current-system/configuration.scm\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24626
msgid "This field specifies the operating system configuration file to use.  The default is to reuse the config file of the current configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24632
msgid "There are cases, though, where referring to @file{/run/current-system/configuration.scm} is not enough, for instance because that file refers to extra files (SSH public keys, extra configuration files, etc.) @i{via} @code{local-file} and similar constructs.  For those cases, we recommend something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24638
#, no-wrap
msgid ""
"(unattended-upgrade-configuration\n"
"  (operating-system-file\n"
"    (file-append (local-file \".\" \"config-dir\" #:recursive? #t)\n"
"                 \"/config.scm\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24645
msgid "The effect here is to import all of the current directory into the store, and to refer to @file{config.scm} within that directory.  Therefore, uses of @code{local-file} within @file{config.scm} will work as expected.  @xref{G-Expressions}, for information about @code{local-file} and @code{file-append}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24646
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{operating-system-expression} (default: @code{#f})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24650
msgid "This field specifies an expression that evaluates to the operating system to use for the upgrade.  If no value is provided the @code{operating-system-file} field value is used."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24655
#, no-wrap
msgid ""
"(unattended-upgrade-configuration\n"
"  (operating-system-expression\n"
"    #~(@@ (guix system install) installation-os)))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24657
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{reboot?} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24660
msgid "This field specifies whether the system should reboot after completing an unattended upgrade."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24664
msgid "When @code{reboot?} is @code{#t}, services are not restarted before rebooting.  This means that the value for @code{services-to-restart} is ignored.  The updated services will be started after the system reboots."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24665
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{services-to-restart} (default: @code{'(unattended-upgrade)})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24668
msgid "This field specifies the Shepherd services to restart when the upgrade completes."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24675
msgid "Those services are restarted right away upon completion, as with @command{herd restart}, which ensures that the latest version is running---remember that by default @command{guix system reconfigure} only restarts services that are not currently running, which is conservative: it minimizes disruption but leaves outdated services running."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24679
msgid "Use @command{herd status} to find out candidates for restarting.  @xref{Services}, for general information about services.  Common services to restart would include @code{ntpd} and @code{ssh-daemon}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24683
msgid "By default, the @code{unattended-upgrade} service is restarted.  This ensures that the latest version of the unattended upgrade job will be used next time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24684
#, no-wrap
msgid "@code{system-expiration} (default: @code{(* 3 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24688
msgid "This is the expiration time in seconds for system generations.  System generations older that this amount of time are deleted with @command{guix system delete-generations} when an upgrade completes."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24693
msgid "The unattended upgrade service does not run the garbage collector.  You will probably want to set up your own mcron job to run @command{guix gc} periodically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24695
#, no-wrap
msgid "@code{maximum-duration} (default: @code{3600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24698
msgid "Maximum duration in seconds for the upgrade; past that time, the upgrade aborts."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24701
msgid "This is primarily useful to ensure the upgrade does not end up rebuilding or re-downloading ``the world''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24702
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/unattended-upgrade.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24704
msgid "File where unattended upgrades are logged."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24710
#, no-wrap
msgid "X11"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24711
#, no-wrap
msgid "X Window System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24712 guix-git/doc/guix.texi:24908
#, no-wrap
msgid "login manager"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24717
msgid "Support for the X Window graphical display system---specifically Xorg---is provided by the @code{(gnu services xorg)} module.  Note that there is no @code{xorg-service} procedure.  Instead, the X server is started by the @dfn{login manager}, by default the GNOME Display Manager (GDM)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24718
#, no-wrap
msgid "GDM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24719
#, no-wrap
msgid "GNOME, login manager"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:24724
msgid "gdm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24724
msgid "GDM of course allows users to log in into window managers and desktop environments other than GNOME; for those using GNOME, GDM is required for features such as automatic screen locking."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24725
#, no-wrap
msgid "window manager"
msgstr "gerenciadores de janelas"

#. type: Plain text
#: guix-git/doc/guix.texi:24730
msgid "To use X11, you must install at least one @dfn{window manager}---for example the @code{windowmaker} or @code{openbox} packages---preferably by adding it to the @code{packages} field of your operating system definition (@pxref{operating-system Reference, system-wide packages})."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:24736
msgid "wayland-gdm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:24736
msgid "GDM also supports Wayland: it can itself use Wayland instead of X11 for its user interface, and it can also start Wayland sessions.  Wayland support is enabled by default.  To disable it, set @code{wayland?} to @code{#f} in @code{gdm-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24737
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gdm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24742
msgid "This is the type for the @uref{https://wiki.gnome.org/Projects/GDM/, GNOME Desktop Manager} (GDM), a program that manages graphical display servers and handles graphical user logins.  Its value must be a @code{gdm-configuration} (see below)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24743
#, no-wrap
msgid "session types"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24751
msgid "GDM looks for @dfn{session types} described by the @file{.desktop} files in @file{/run/current-system/profile/share/xsessions} (for X11 sessions) and @file{/run/current-system/profile/share/wayland-sessions} (for Wayland sessions) and allows users to choose a session from the log-in screen.  Packages such as @code{gnome}, @code{xfce}, @code{i3} and @code{sway} provide @file{.desktop} files; adding them to the system-wide set of packages automatically makes them available at the log-in screen."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24755
msgid "In addition, @file{~/.xsession} files are honored.  When available, @file{~/.xsession} must be an executable that starts a window manager and/or other X clients."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24757
#, no-wrap
msgid "{Data Type} gdm-configuration"
msgstr "{Tipo de dados} gdm-configuration"

#. type: item
#: guix-git/doc/guix.texi:24759 guix-git/doc/guix.texi:24853
#, no-wrap
msgid "@code{auto-login?} (default: @code{#f})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24760
#, no-wrap
msgid "@code{default-user} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24762
msgid "When @code{auto-login?} is false, GDM presents a log-in screen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24765
msgid "When @code{auto-login?} is true, GDM logs in directly as @code{default-user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24766
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{auto-suspend?} (default @code{#t})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24771
msgid "When true, GDM will automatically suspend to RAM when nobody is physically connected.  When a machine is used via remote desktop or SSH, this should be set to false to avoid GDM interrupting remote sessions or rendering the machine unavailable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24772 guix-git/doc/guix.texi:32909
#: guix-git/doc/guix.texi:35067 guix-git/doc/guix.texi:40871
#: guix-git/doc/guix.texi:40900 guix-git/doc/guix.texi:40929
#: guix-git/doc/guix.texi:40956 guix-git/doc/guix.texi:41011
#: guix-git/doc/guix.texi:41036 guix-git/doc/guix.texi:41063
#: guix-git/doc/guix.texi:41089 guix-git/doc/guix.texi:41134
#, no-wrap
msgid "@code{debug?} (default: @code{#f})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24774
msgid "When true, GDM writes debug messages to its log."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24775
#, no-wrap
msgid "@code{gnome-shell-assets} (default: ...)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24777
msgid "List of GNOME Shell assets needed by GDM: icon theme, fonts, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24778
#, no-wrap
msgid "@code{xorg-configuration} (default: @code{(xorg-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24780 guix-git/doc/guix.texi:24880
#: guix-git/doc/guix.texi:24990
msgid "Configuration of the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24781
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{x-session} (default: @code{(xinitrc)})"
msgstr "@code{node} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24783 guix-git/doc/guix.texi:25005
msgid "Script to run before starting a X session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24784
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{xdmcp?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24789
msgid "When true, enable the X Display Manager Control Protocol (XDMCP).  This should only be enabled in trusted environments, as the protocol is not secure.  When enabled, GDM listens for XDMCP queries on the UDP port 177."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24790
#, no-wrap
msgid "@code{dbus-daemon} (default: @code{dbus-daemon-wrapper})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24792
msgid "File name of the @code{dbus-daemon} executable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24793
#, no-wrap
msgid "@code{gdm} (default: @code{gdm})"
msgstr "@code{gdm} (default: @code{gdm})"

#. type: table
#: guix-git/doc/guix.texi:24795
msgid "The GDM package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24796
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{wayland?} (default: @code{#t})"
msgstr "@code{node} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24798
msgid "When true, enables Wayland in GDM, necessary to use Wayland sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24799
#, fuzzy, no-wrap
msgid "@code{wayland-session} (default: @code{gdm-wayland-session-wrapper})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24802
msgid "The Wayland session wrapper to use, needed to setup the environment."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24805
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "slim-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24807
msgid "This is the type for the SLiM graphical login manager for X11."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24811
msgid "Like GDM, SLiM looks for session types described by @file{.desktop} files and allows users to choose a session from the log-in screen using @kbd{F1}.  It also honors @file{~/.xsession} files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24818
msgid "Unlike GDM, SLiM does not spawn the user session on a different VT after logging in, which means that you can only start one graphical session.  If you want to be able to run multiple graphical sessions at the same time you have to add multiple SLiM services to your system services.  The following example shows how to replace the default GDM service with two SLiM services on tty7 and tty8."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24823
#, no-wrap
msgid ""
"(use-modules (gnu services)\n"
"             (gnu services desktop)\n"
"             (gnu services xorg))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24834
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (cons* (service slim-service-type (slim-configuration\n"
"                                               (display \":0\")\n"
"                                               (vt \"vt7\")))\n"
"                   (service slim-service-type (slim-configuration\n"
"                                               (display \":1\")\n"
"                                               (vt \"vt8\")))\n"
"                   (modify-services %desktop-services\n"
"                     (delete gdm-service-type)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24838
#, no-wrap
msgid "{Data Type} slim-configuration"
msgstr "{Tipo de dados} slim-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24840
msgid "Data type representing the configuration of @code{slim-service-type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24844
msgid "Whether to allow logins with empty passwords."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24845
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{gnupg?} (default: @code{#f})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24852
msgid "If enabled, @code{pam-gnupg} will attempt to automatically unlock the user's GPG keys with the login password via @code{gpg-agent}.  The keygrips of all keys to be unlocked should be written to @file{~/.pam-gnupg}, and can be queried with @code{gpg -K --with-keygrip}.  Presetting passphrases must be enabled by adding @code{allow-preset-passphrase} in @file{~/.gnupg/gpg-agent.conf}."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24854
#, no-wrap
msgid "@code{default-user} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24856
msgid "When @code{auto-login?} is false, SLiM presents a log-in screen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24859
msgid "When @code{auto-login?} is true, SLiM logs in directly as @code{default-user}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24860
#, no-wrap
msgid "@code{theme} (default: @code{%default-slim-theme})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:24861
#, no-wrap
msgid "@code{theme-name} (default: @code{%default-slim-theme-name})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24863
msgid "The graphical theme to use and its name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24864
#, no-wrap
msgid "@code{auto-login-session} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24867
msgid "If true, this must be the name of the executable to start as the default session---e.g., @code{(file-append windowmaker \"/bin/windowmaker\")}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24871
msgid "If false, a session described by one of the available @file{.desktop} files in @code{/run/current-system/profile} and @code{~/.guix-profile} will be used."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24876
msgid "You must install at least one window manager in the system profile or in your user profile.  Failing to do that, if @code{auto-login-session} is false, you will be unable to log in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24878 guix-git/doc/guix.texi:24988
#, no-wrap
msgid "@code{xorg-configuration} (default @code{(xorg-configuration)})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24881
#, no-wrap
msgid "@code{display} (default @code{\":0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24883
msgid "The display on which to start the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24884
#, no-wrap
msgid "@code{vt} (default @code{\"vt7\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24886
msgid "The VT on which to start the Xorg graphical server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24887
#, no-wrap
msgid "@code{xauth} (default: @code{xauth})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24889
msgid "The XAuth package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24890
#, no-wrap
msgid "@code{shepherd} (default: @code{shepherd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24893
msgid "The Shepherd package used when invoking @command{halt} and @command{reboot}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24894
#, no-wrap
msgid "@code{sessreg} (default: @code{sessreg})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24896
msgid "The sessreg package used in order to register the session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24897
#, no-wrap
msgid "@code{slim} (default: @code{slim})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24899
msgid "The SLiM package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24902
#, no-wrap
msgid "%default-theme"
msgstr ""

#. type: defvarx
#: guix-git/doc/guix.texi:24903
#, no-wrap
msgid "%default-theme-name"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24905
msgid "The default SLiM theme and its name."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:24909
#, no-wrap
msgid "X11 login"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24910
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "sddm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:24914
msgid "This is the type of the service to run the @uref{https://github.com/sddm/sddm,SDDM display manager}.  Its value must be a @code{sddm-configuration} record (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:24916
msgid "Here's an example use:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:24922
#, no-wrap
msgid ""
"(service sddm-service-type\n"
"         (sddm-configuration\n"
"           (auto-login-user \"alice\")\n"
"           (auto-login-session \"xfce.desktop\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:24925
#, no-wrap
msgid "{Data Type} sddm-configuration"
msgstr "{Tipo de dados} sddm-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:24928
msgid "This data type represents the configuration of the SDDM login manager.  The available fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24930
#, no-wrap
msgid "@code{sddm} (default: @code{sddm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24932
msgid "The SDDM package to use."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:24936
msgid "sddm has Qt6 enabled by default. If you want to still use a Qt5 theme, you need to set it to @code{sddm-qt5}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24938
#, no-wrap
msgid "@code{display-server} (default: \"x11\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24941
msgid "Select display server to use for the greeter.  Valid values are @samp{\"x11\"} or @samp{\"wayland\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24942
#, no-wrap
msgid "@code{numlock} (default: \"on\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24944
msgid "Valid values are @samp{\"on\"}, @samp{\"off\"} or @samp{\"none\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24945
#, fuzzy, no-wrap
msgid "@code{halt-command} (default @code{#~(string-append #$shepherd \"/sbin/halt\")})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:24947
msgid "Command to run when halting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24948
#, no-wrap
msgid "@code{reboot-command} (default @code{#~(string-append #$shepherd \"/sbin/reboot\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24950
msgid "Command to run when rebooting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24951
#, no-wrap
msgid "@code{theme} (default \"maldives\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24954
msgid "Theme to use.  Default themes provided by SDDM are @samp{\"elarun\"}, @samp{\"maldives\"} or @samp{\"maya\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24955
#, no-wrap
msgid "@code{themes-directory} (default \"/run/current-system/profile/share/sddm/themes\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24957
msgid "Directory to look for themes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24958
#, no-wrap
msgid "@code{faces-directory} (default \"/run/current-system/profile/share/sddm/faces\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24960
msgid "Directory to look for faces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24961
#, no-wrap
msgid "@code{default-path} (default \"/run/current-system/profile/bin\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24963
msgid "Default PATH to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24964
#, no-wrap
msgid "@code{minimum-uid} (default: 1000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24966
msgid "Minimum UID displayed in SDDM and allowed for log-in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24967
#, no-wrap
msgid "@code{maximum-uid} (default: 2000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24969
msgid "Maximum UID to display in SDDM."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24970
#, no-wrap
msgid "@code{remember-last-user?} (default #t)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24972
msgid "Remember last user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24973
#, no-wrap
msgid "@code{remember-last-session?} (default #t)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24975
msgid "Remember last session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24976
#, no-wrap
msgid "@code{hide-users} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24978
msgid "Usernames to hide from SDDM greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24979
#, no-wrap
msgid "@code{hide-shells} (default @code{#~(string-append #$shadow \"/sbin/nologin\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24981
msgid "Users with shells listed will be hidden from the SDDM greeter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24982
#, no-wrap
msgid "@code{session-command} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/wayland-session\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24984
msgid "Script to run before starting a wayland session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24985
#, no-wrap
msgid "@code{sessions-directory} (default \"/run/current-system/profile/share/wayland-sessions\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24987
msgid "Directory to look for desktop files starting wayland sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24991
#, no-wrap
msgid "@code{xauth-path} (default @code{#~(string-append #$xauth \"/bin/xauth\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24993
msgid "Path to xauth."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24994
#, no-wrap
msgid "@code{xephyr-path} (default @code{#~(string-append #$xorg-server \"/bin/Xephyr\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24996
msgid "Path to Xephyr."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:24997
#, no-wrap
msgid "@code{xdisplay-start} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/Xsetup\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:24999
msgid "Script to run after starting xorg-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25000
#, no-wrap
msgid "@code{xdisplay-stop} (default @code{#~(string-append #$sddm \"/share/sddm/scripts/Xstop\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25002
msgid "Script to run before stopping xorg-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25003
#, no-wrap
msgid "@code{xsession-command} (default: @code{xinitrc})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25006
#, no-wrap
msgid "@code{xsessions-directory} (default: \"/run/current-system/profile/share/xsessions\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25008
msgid "Directory to look for desktop files starting X sessions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25009
#, no-wrap
msgid "@code{minimum-vt} (default: 7)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25011
msgid "Minimum VT to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25012
#, no-wrap
msgid "@code{auto-login-user} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25015
msgid "User account that will be automatically logged in.  Setting this to the empty string disables auto-login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25016
#, no-wrap
msgid "@code{auto-login-session} (default \"\")"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25018
msgid "The @file{.desktop} file name to use as the auto-login session, or the empty string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25019
#, no-wrap
msgid "@code{relogin?} (default #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25021
msgid "Relogin after logout."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25025
#, no-wrap
msgid "lightdm, graphical login manager"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25026
#, no-wrap
msgid "display manager, lightdm"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:25028
msgid "lightdm"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25028
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "lightdm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:25036
msgid "This is the type of the service to run the @url{https://github.com/canonical/lightdm,LightDM display manager}.  Its value must be a @code{lightdm-configuration} record, which is documented below.  Among its distinguishing features are TigerVNC integration for easily remoting your desktop as well as support for the XDMCP protocol, which can be used by remote clients to start a session from the login manager."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25038
msgid "In its most basic form, it can be used simply as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25041
#, fuzzy, no-wrap
msgid "(service lightdm-service-type)\n"
msgstr "(service lightdm-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:25045
msgid "A more elaborate example making use of the VNC capabilities and enabling more features and verbose logs could look like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25059
#, no-wrap
msgid ""
"(service lightdm-service-type\n"
"         (lightdm-configuration\n"
"          (allow-empty-passwords? #t)\n"
"          (xdmcp? #t)\n"
"          (vnc-server? #t)\n"
"          (vnc-server-command\n"
"           (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                        \"  -SecurityTypes None\"))\n"
"          (seats\n"
"           (list (lightdm-seat-configuration\n"
"                  (name \"*\")\n"
"                  (user-session \"ratpoison\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25066
#, no-wrap
msgid "{Data Type} lightdm-configuration"
msgstr "{Tipo de dados} lightdm-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:25068
msgid "Available @code{lightdm-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25070
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{lightdm} (default: @code{lightdm}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25072
#, fuzzy
msgid "The lightdm package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:25075
msgid "Whether users not having a password set can login."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25078
msgid "Enable verbose output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25079
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{xorg-configuration} (type: xorg-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25083
msgid "The default Xorg server configuration to use to generate the Xorg server start script.  It can be refined per seat via the @code{xserver-command} of the @code{<lightdm-seat-configuration>} record, if desired."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25084
#, fuzzy, no-wrap
msgid "@code{greeters} (type: list-of-greeter-configurations)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:25086
msgid "The LightDM greeter configurations specifying the greeters to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25087
#, fuzzy, no-wrap
msgid "@code{seats} (type: list-of-seat-configurations)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:25089
msgid "The seat configurations to use.  A LightDM seat is akin to a user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25090 guix-git/doc/guix.texi:36812
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{xdmcp?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25092
msgid "Whether a XDMCP server should listen on port UDP 177."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25093
#, fuzzy, no-wrap
msgid "@code{xdmcp-listen-address} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25096
msgid "The host or IP address the XDMCP server listens for incoming connections.  When unspecified, listen on for any hosts/IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25097
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{vnc-server?} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25099
msgid "Whether a VNC server is started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25100
#, fuzzy, no-wrap
msgid "@code{vnc-server-command} (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25104
msgid "The Xvnc command to use for the VNC server, it's possible to provide extra options not otherwise exposed along the command, for example to disable security:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25108
#, no-wrap
msgid ""
"(vnc-server-command (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                                 \" -SecurityTypes None\" ))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25112
msgid "Or to set a PasswordFile for the classic (unsecure) VncAuth mechanism:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25116
#, no-wrap
msgid ""
"(vnc-server-command (file-append tigervnc-server \"/bin/Xvnc\"\n"
"                                 \" -PasswordFile /var/lib/lightdm/.vnc/passwd\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25122
msgid "The password file should be manually created using the @command{vncpasswd} command.  Note that LightDM will create new sessions for VNC users, which means they need to authenticate in the same way as local users would."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25123
#, fuzzy, no-wrap
msgid "@code{vnc-server-listen-address} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25126
msgid "The host or IP address the VNC server listens for incoming connections.  When unspecified, listen for any hosts/IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25127
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{vnc-server-port} (default: @code{5900}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25129
msgid "The TCP port the VNC server should listen to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25130 guix-git/doc/guix.texi:25179
#: guix-git/doc/guix.texi:25217
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{extra-config} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25132
msgid "Extra configuration values to append to the LightDM configuration file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25140
#, no-wrap
msgid "{Data Type} lightdm-gtk-greeter-configuration"
msgstr "{Tipo de dados} lightdm-gtk-greeter-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:25142
msgid "Available @code{lightdm-gtk-greeter-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25144
#, fuzzy, no-wrap
msgid "@code{lightdm-gtk-greeter} (default: @code{lightdm-gtk-greeter}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25146
#, fuzzy
msgid "The lightdm-gtk-greeter package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:25147
#, no-wrap
msgid "@code{assets} (default: @code{(adwaita-icon-theme gnome-themes-extra hicolor-icon-theme)}) (type: list-of-file-likes)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25150
msgid "The list of packages complementing the greeter, such as package providing icon themes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25151
#, fuzzy, no-wrap
msgid "@code{theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25153
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name of the theme to use."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:25154
#, fuzzy, no-wrap
msgid "@code{icon-theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25156
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name of the icon theme to use."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:25157
#, fuzzy, no-wrap
msgid "@code{cursor-theme-name} (default: @code{\"Adwaita\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25159
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name of the cursor theme to use."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:25160
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{cursor-theme-size} (default: @code{16}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25162
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The size to use for the cursor theme."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:25163
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{allow-debugging?} (type: maybe-boolean)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25165
msgid "Set to #t to enable debug log level."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25166
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{background} (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25168
#, fuzzy
#| msgid "The GPM package to use."
msgid "The background image to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:25169
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{at-spi-enabled?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25172
msgid "Enable accessibility support through the Assistive Technology Service Provider Interface (AT-SPI)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25173
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{a11y-states} (default: @code{(contrast font keyboard reader)}) (type: list-of-a11y-states)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25175
msgid "The accessibility features to enable, given as list of symbols."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25176
#, fuzzy, no-wrap
msgid "@code{reader} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25178
msgid "The command to use to launch a screen reader."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25182
msgid "Extra configuration values to append to the LightDM GTK Greeter configuration file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25189
#, no-wrap
msgid "{Data Type} lightdm-seat-configuration"
msgstr "{Tipo de dados} lightdm-seat-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:25191
msgid "Available @code{lightdm-seat-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25193
#, fuzzy, no-wrap
msgid "@code{name} (type: seat-name)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25196
msgid "The name of the seat.  An asterisk (*) can be used in the name to apply the seat configuration to all the seat names it matches."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25197
#, fuzzy, no-wrap
msgid "@code{user-session} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25200
msgid "The session to use by default.  The session name must be provided as a lowercase string, such as @code{\"gnome\"}, @code{\"ratpoison\"}, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25201
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{type} (default: @code{local}) (type: seat-type)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25203
msgid "The type of the seat, either the @code{local} or @code{xremote} symbol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25204
#, fuzzy, no-wrap
msgid "@code{autologin-user} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25206
msgid "The username to automatically log in with by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25207
#, fuzzy, no-wrap
msgid "@code{greeter-session} (default: @code{lightdm-gtk-greeter}) (type: greeter-session)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25210
msgid "The greeter session to use, specified as a symbol.  Currently, only @code{lightdm-gtk-greeter} is supported."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25211
#, fuzzy, no-wrap
msgid "@code{xserver-command} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25213
#, fuzzy
#| msgid "The GPM package to use."
msgid "The Xorg server command to run."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:25214
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{session-wrapper} (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25216
#, fuzzy
msgid "The xinitrc session wrapper to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:25219
msgid "Extra configuration values to append to the seat configuration section."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25225
#, no-wrap
msgid "Xorg, configuration"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25226
#, no-wrap
msgid "{Data Type} xorg-configuration"
msgstr "{Tipo de dados} xorg-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:25232
msgid "This data type represents the configuration of the Xorg graphical display server.  Note that there is no Xorg service; instead, the X server is started by a ``display manager'' such as GDM, SDDM, LightDM or SLiM@.  Thus, the configuration of these display managers aggregates an @code{xorg-configuration} record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25234
#, no-wrap
msgid "@code{modules} (default: @code{%default-xorg-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25237
msgid "This is a list of @dfn{module packages} loaded by the Xorg server---e.g., @code{xf86-video-vesa}, @code{xf86-input-libinput}, and so on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25238
#, no-wrap
msgid "@code{fonts} (default: @code{%default-xorg-fonts})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25240
msgid "This is a list of font directories to add to the server's @dfn{font path}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25241
#, no-wrap
msgid "@code{drivers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25245
msgid "This must be either the empty list, in which case Xorg chooses a graphics driver automatically, or a list of driver names that will be tried in this order---e.g., @code{'(\"modesetting\" \"vesa\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25246
#, no-wrap
msgid "@code{resolutions} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25250
msgid "When @code{resolutions} is the empty list, Xorg chooses an appropriate screen resolution.  Otherwise, it must be a list of resolutions---e.g., @code{'((1024 768) (640 480))}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25251
#, no-wrap
msgid "keyboard layout, for Xorg"
msgstr "disposição do teclado, para Xorg"

#. type: cindex
#: guix-git/doc/guix.texi:25252
#, no-wrap
msgid "keymap, for Xorg"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25256
msgid "If this is @code{#f}, Xorg uses the default keyboard layout---usually US English (``qwerty'') for a 105-key PC keyboard."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25260
msgid "Otherwise this must be a @code{keyboard-layout} object specifying the keyboard layout in use when Xorg is running.  @xref{Keyboard Layout}, for more information on how to specify the keyboard layout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25261 guix-git/doc/guix.texi:28004
#: guix-git/doc/guix.texi:44878
#, no-wrap
msgid "@code{extra-config} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25264 guix-git/doc/guix.texi:44882
msgid "This is a list of strings or objects appended to the configuration file.  It is used to pass extra text to be added verbatim to the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25265
#, no-wrap
msgid "@code{server} (default: @code{xorg-server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25267
msgid "This is the package providing the Xorg server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25268
#, no-wrap
msgid "@code{server-arguments} (default: @code{%default-xorg-server-arguments})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25271
msgid "This is the list of command-line arguments to pass to the X server.  The default is @code{-nolisten tcp}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25274
#, fuzzy, no-wrap
msgid "{Procedure} set-xorg-configuration config [login-manager-service-type]"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:25277
msgid "Tell the log-in manager (of type @var{login-manager-service-type}) to use @var{config}, an @code{<xorg-configuration>} record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25281
msgid "Since the Xorg configuration is embedded in the log-in manager's configuration---e.g., @code{gdm-configuration}---this procedure provides a shorthand to set the Xorg configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25283
#, no-wrap
msgid "{Procedure} xorg-start-command [config]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25287
msgid "Return a @code{startx} script in which the modules, fonts, etc. specified in @var{config}, are available.  The result should be used in place of @code{startx}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25289
msgid "Usually the X server is started by a login manager."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25291
#, no-wrap
msgid "{Procedure} xorg-start-command-xinit [config]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:25300
msgid "Return a @code{startx} script in which the modules, fonts, etc. specified in @var{config} are available.  The result should be used in place of @code{startx} and should be invoked by the user from a tty after login.  Unlike @code{xorg-start-command}, this script calls xinit.  Therefore it works well when executed from a tty.  This script can be set up as @code{startx} using @code{startx-command-service-type} or @code{home-startx-command-service-type}.  If you are using a desktop environment, you are unlikely to need this procedure."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25303
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "screen-locker-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:25307
msgid "Type for a service that adds a package for a screen locker or screen saver to the set of privileged programs and/or add a PAM entry for it.  The value for this service is a @code{<screen-locker-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25312
msgid "While the default behavior is to setup both a privileged program and PAM entry, these two methods are redundant.  Screen locker programs may not execute when PAM is configured and @code{setuid} is set on their executable.  In this case, @code{using-setuid?} can be set to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25314
msgid "For example, to make XlockMore usable:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25320
#, no-wrap
msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"           (name \"xlock\")\n"
"           (program (file-append xlockmore \"/bin/xlock\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25323
msgid "makes the good ol' XlockMore usable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25326
msgid "For example, swaylock fails to execute when compiled with PAM support and setuid enabled.  One can thus disable setuid:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25334
#, no-wrap
msgid ""
"(service screen-locker-service-type\n"
"         (screen-locker-configuration\n"
"           (name \"swaylock\")\n"
"           (program (file-append swaylock \"/bin/swaylock\"))\n"
"           (using-pam? #t)\n"
"           (using-setuid? #f)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:25338
#, no-wrap
msgid "{Data Type} screen-locker-configuration"
msgstr "{Tipo de dados} screen-locker-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:25340
#, fuzzy
msgid "Available @code{screen-locker-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:25344
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Name of the screen locker."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:25345
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{program} (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25347
msgid "Path to the executable for the screen locker as a G-Expression."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25348
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{allow-empty-password?} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:25351
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{using-pam?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:25353
msgid "Whether to setup PAM entry."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25354
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{using-setuid?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:25356
msgid "Whether to setup program as setuid binary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25361
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "startx-command-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:25363
msgid "Add @command{startx} to the system profile putting it onto @env{PATH}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25367 guix-git/doc/guix.texi:50826
msgid "The value for this service is a @code{<xorg-configuration>} object which is passed to the @code{xorg-start-command-xinit} procedure producing the @command{startx} used.  Default value is @code{(xorg-configuration)}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:25373
#, no-wrap
msgid "printer support with CUPS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25377
msgid "The @code{(gnu services cups)} module provides a Guix service definition for the CUPS printing service.  To add printer support to a Guix system, add a @code{cups-service} to the operating system definition:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:25378
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "cups-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:25382
msgid "The service type for the CUPS print server.  Its value should be a valid CUPS configuration (see below).  To use the default settings, simply write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25384
#, no-wrap
msgid "(service cups-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25394
msgid "The CUPS configuration controls the basic things about your CUPS installation: what interfaces it listens on, what to do if a print job fails, how much logging to do, and so on.  To actually add a printer, you have to visit the @url{http://localhost:631} URL, or use a tool such as GNOME's printer configuration services.  By default, configuring a CUPS service will generate a self-signed certificate if needed, for secure connections to the print server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25400
msgid "Suppose you want to enable the Web interface of CUPS and also add support for Epson printers @i{via} the @code{epson-inkjet-printer-escpr} package and for HP printers @i{via} the @code{hplip-minimal} package.  You can do that directly, like this (you need to use the @code{(gnu packages cups)} module):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:25407
#, no-wrap
msgid ""
"(service cups-service-type\n"
"         (cups-configuration\n"
"           (web-interface? #t)\n"
"           (extensions\n"
"             (list cups-filters epson-inkjet-printer-escpr hplip-minimal))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:25413
msgid "If you wish to use the Qt5 based GUI which comes with the hplip package then it is suggested that you install the @code{hplip} package, either in your OS configuration file or as your user."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25421
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  There is also a way to specify the configuration as a string, if you have an old @code{cupsd.conf} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:25432
msgid "Available @code{cups-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25433
#, no-wrap
msgid "{@code{cups-configuration} parameter} package cups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25435 guix-git/doc/guix.texi:26170
msgid "The CUPS package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25437
#, no-wrap
msgid "{@code{cups-configuration} parameter} package-list extensions (default: @code{(list brlaser cups-filters epson-inkjet-printer-escpr foomatic-filters hplip-minimal splix)})"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25439
msgid "Drivers and other extensions to the CUPS package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25441
#, no-wrap
msgid "{@code{cups-configuration} parameter} files-configuration files-configuration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25444
msgid "Configuration of where to write logs, what directories to use for print spools, and related privileged configuration parameters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25446
msgid "Available @code{files-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25447
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location access-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25455
msgid "Defines the access log filename.  Specifying a blank filename disables access log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-access_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25457
msgid "Defaults to @samp{\"/var/log/cups/access_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25459
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name cache-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25461
msgid "Where CUPS should cache data."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25463
msgid "Defaults to @samp{\"/var/cache/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25465
#, no-wrap
msgid "{@code{files-configuration} parameter} string config-file-perm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25468
msgid "Specifies the permissions for all configuration files that the scheduler writes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25474
msgid "Note that the permissions for the printers.conf file are currently masked to only allow access from the scheduler user (typically root).  This is done because printer device URIs sometimes contain sensitive authentication information that should not be generally known on the system.  There is no way to disable this security feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25476
msgid "Defaults to @samp{\"0640\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25478
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location error-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25486
msgid "Defines the error log filename.  Specifying a blank filename disables error log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-error_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25488
msgid "Defaults to @samp{\"/var/log/cups/error_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25490
#, no-wrap
msgid "{@code{files-configuration} parameter} string fatal-errors"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25493
msgid "Specifies which errors are fatal, causing the scheduler to exit.  The kind strings are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25497
msgid "No errors are fatal."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:25500
msgid "All of the errors below are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25501
#, no-wrap
msgid "browse"
msgstr "browse"

#. type: table
#: guix-git/doc/guix.texi:25504
msgid "Browsing initialization errors are fatal, for example failed connections to the DNS-SD daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25505
#, no-wrap
msgid "config"
msgstr "config"

#. type: table
#: guix-git/doc/guix.texi:25507
msgid "Configuration file syntax errors are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25508
#, no-wrap
msgid "listen"
msgstr "listen"

#. type: table
#: guix-git/doc/guix.texi:25511
msgid "Listen or Port errors are fatal, except for IPv6 failures on the loopback or @code{any} addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25512
#, no-wrap
msgid "log"
msgstr "log"

#. type: table
#: guix-git/doc/guix.texi:25514
msgid "Log file creation or write errors are fatal."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:25515
#, no-wrap
msgid "permissions"
msgstr "permissions"

#. type: table
#: guix-git/doc/guix.texi:25518
msgid "Bad startup file permissions are fatal, for example shared TLS certificate and key files with world-read permissions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25521
msgid "Defaults to @samp{\"all -browse\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25523
#, no-wrap
msgid "{@code{files-configuration} parameter} boolean file-device?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25526
msgid "Specifies whether the file pseudo-device can be used for new printer queues.  The URI @uref{file:///dev/null} is always allowed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25528 guix-git/doc/guix.texi:25604
#: guix-git/doc/guix.texi:25646 guix-git/doc/guix.texi:25665
#: guix-git/doc/guix.texi:25671 guix-git/doc/guix.texi:25759
#: guix-git/doc/guix.texi:25836 guix-git/doc/guix.texi:26144
#: guix-git/doc/guix.texi:26157 guix-git/doc/guix.texi:28318
#: guix-git/doc/guix.texi:29810 guix-git/doc/guix.texi:29916
#: guix-git/doc/guix.texi:29981 guix-git/doc/guix.texi:29990
#: guix-git/doc/guix.texi:32215 guix-git/doc/guix.texi:32259
#: guix-git/doc/guix.texi:32276 guix-git/doc/guix.texi:32284
#: guix-git/doc/guix.texi:32299 guix-git/doc/guix.texi:32317
#: guix-git/doc/guix.texi:32341 guix-git/doc/guix.texi:32394
#: guix-git/doc/guix.texi:32527 guix-git/doc/guix.texi:32561
#: guix-git/doc/guix.texi:32597 guix-git/doc/guix.texi:32613
#: guix-git/doc/guix.texi:32641 guix-git/doc/guix.texi:32702
#: guix-git/doc/guix.texi:32785 guix-git/doc/guix.texi:38240
#: guix-git/doc/guix.texi:38254 guix-git/doc/guix.texi:38454
#: guix-git/doc/guix.texi:38499 guix-git/doc/guix.texi:38586
#: guix-git/doc/guix.texi:41505 guix-git/doc/guix.texi:41514
#: guix-git/doc/guix.texi:41522 guix-git/doc/guix.texi:41530
#: guix-git/doc/guix.texi:41546 guix-git/doc/guix.texi:41562
#: guix-git/doc/guix.texi:41570 guix-git/doc/guix.texi:41578
#: guix-git/doc/guix.texi:41587 guix-git/doc/guix.texi:41596
#: guix-git/doc/guix.texi:41612 guix-git/doc/guix.texi:41676
#: guix-git/doc/guix.texi:41782 guix-git/doc/guix.texi:41790
#: guix-git/doc/guix.texi:41798 guix-git/doc/guix.texi:41824
#: guix-git/doc/guix.texi:41878 guix-git/doc/guix.texi:41926
#: guix-git/doc/guix.texi:42127 guix-git/doc/guix.texi:42134
msgid "Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25530
#, no-wrap
msgid "{@code{files-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25533
msgid "Specifies the group name or ID that will be used when executing external programs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25535 guix-git/doc/guix.texi:25621
msgid "Defaults to @samp{\"lp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25537
#, no-wrap
msgid "{@code{files-configuration} parameter} string log-file-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25539
msgid "Specifies the group name or ID that will be used for log files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25541
msgid "Defaults to @samp{\"lpadmin\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25543
#, no-wrap
msgid "{@code{files-configuration} parameter} string log-file-perm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25545
msgid "Specifies the permissions for all log files that the scheduler writes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25547
msgid "Defaults to @samp{\"0644\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25549
#, no-wrap
msgid "{@code{files-configuration} parameter} log-location page-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25557
msgid "Defines the page log filename.  Specifying a blank filename disables page log generation.  The value @code{stderr} causes log entries to be sent to the standard error file when the scheduler is running in the foreground, or to the system log daemon when run in the background.  The value @code{syslog} causes log entries to be sent to the system log daemon.  The server name may be included in filenames using the string @code{%s}, as in @code{/var/log/cups/%s-page_log}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25559
msgid "Defaults to @samp{\"/var/log/cups/page_log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25561
#, no-wrap
msgid "{@code{files-configuration} parameter} string remote-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25564
msgid "Specifies the username that is associated with unauthenticated accesses by clients claiming to be the root user.  The default is @code{remroot}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25566
msgid "Defaults to @samp{\"remroot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25568
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name request-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25571
msgid "Specifies the directory that contains print jobs and other HTTP request data."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25573
msgid "Defaults to @samp{\"/var/spool/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25575
#, no-wrap
msgid "{@code{files-configuration} parameter} sandboxing sandboxing"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25580
msgid "Specifies the level of security sandboxing that is applied to print filters, backends, and other child processes of the scheduler; either @code{relaxed} or @code{strict}.  This directive is currently only used/supported on macOS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25582
msgid "Defaults to @samp{strict}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25584
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name server-keychain"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25589
msgid "Specifies the location of TLS certificates and private keys.  CUPS will look for public and private keys in this directory: @file{.crt} files for PEM-encoded certificates and corresponding @file{.key} files for PEM-encoded private keys."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25591
msgid "Defaults to @samp{\"/etc/cups/ssl\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25593
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name server-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25595
msgid "Specifies the directory containing the server configuration files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25597
msgid "Defaults to @samp{\"/etc/cups\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25599
#, no-wrap
msgid "{@code{files-configuration} parameter} boolean sync-on-close?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25602
msgid "Specifies whether the scheduler calls fsync(2) after writing configuration or state files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25606
#, no-wrap
msgid "{@code{files-configuration} parameter} space-separated-string-list system-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25608
msgid "Specifies the group(s) to use for @code{@@SYSTEM} group authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25610
#, no-wrap
msgid "{@code{files-configuration} parameter} file-name temp-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25612
msgid "Specifies the directory where temporary files are stored."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25614
msgid "Defaults to @samp{\"/var/spool/cups/tmp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25616
#, no-wrap
msgid "{@code{files-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25619
msgid "Specifies the user name or ID that is used when running external programs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25623
#, no-wrap
msgid "{@code{files-configuration} parameter} string set-env"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25625
msgid "Set the specified environment variable to be passed to child processes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25627
msgid "Defaults to @samp{\"variable value\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25630
#, no-wrap
msgid "{@code{cups-configuration} parameter} access-log-level access-log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25637
msgid "Specifies the logging level for the AccessLog file.  The @code{config} level logs when printers and classes are added, deleted, or modified and when configuration files are accessed or updated.  The @code{actions} level logs when print jobs are submitted, held, released, modified, or canceled, and any of the conditions for @code{config}.  The @code{all} level logs all requests."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25639
msgid "Defaults to @samp{actions}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25641
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean auto-purge-jobs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25644
msgid "Specifies whether to purge job history data automatically when it is no longer required for quotas."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25648
#, no-wrap
msgid "{@code{cups-configuration} parameter} comma-separated-string-list browse-dns-sd-sub-types"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25650
msgid "Specifies a list of DNS-SD sub-types to advertise for each shared printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25653
msgid "The default @samp{(list \"_cups\" \"_print\" \"_universal\")} tells clients that CUPS sharing, IPP Everywhere, AirPrint, and Mopria are supported."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25655
#, no-wrap
msgid "{@code{cups-configuration} parameter} browse-local-protocols browse-local-protocols"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25657
msgid "Specifies which protocols to use for local printer sharing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25659
msgid "Defaults to @samp{dnssd}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25661
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean browse-web-if?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25663
msgid "Specifies whether the CUPS web interface is advertised."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25667
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean browsing?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25669
msgid "Specifies whether shared printers are advertised."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25673
#, no-wrap
msgid "{@code{cups-configuration} parameter} default-auth-type default-auth-type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25675
msgid "Specifies the default type of authentication to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25677
msgid "Defaults to @samp{Basic}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25679
#, no-wrap
msgid "{@code{cups-configuration} parameter} default-encryption default-encryption"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25681
msgid "Specifies whether encryption will be used for authenticated requests."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25683
msgid "Defaults to @samp{Required}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25685
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-language"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25687
msgid "Specifies the default language to use for text and web content."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25689
msgid "Defaults to @samp{\"en\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25691
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-paper-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25696
msgid "Specifies the default paper size for new print queues.  @samp{\"Auto\"} uses a locale-specific default, while @samp{\"None\"} specifies there is no default paper size.  Specific size names are typically @samp{\"Letter\"} or @samp{\"A4\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25698
msgid "Defaults to @samp{\"Auto\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25700
#, no-wrap
msgid "{@code{cups-configuration} parameter} string default-policy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25702
msgid "Specifies the default access policy to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25704
msgid "Defaults to @samp{\"default\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25706
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean default-shared?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25708
msgid "Specifies whether local printers are shared by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25710 guix-git/doc/guix.texi:25790
#: guix-git/doc/guix.texi:26060 guix-git/doc/guix.texi:29907
#: guix-git/doc/guix.texi:29958 guix-git/doc/guix.texi:29965
#: guix-git/doc/guix.texi:32239 guix-git/doc/guix.texi:32427
#: guix-git/doc/guix.texi:32544 guix-git/doc/guix.texi:32580
#: guix-git/doc/guix.texi:32631 guix-git/doc/guix.texi:32650
#: guix-git/doc/guix.texi:32660 guix-git/doc/guix.texi:32670
#: guix-git/doc/guix.texi:32729 guix-git/doc/guix.texi:32751
#: guix-git/doc/guix.texi:32776 guix-git/doc/guix.texi:32802
#: guix-git/doc/guix.texi:32820 guix-git/doc/guix.texi:38107
#: guix-git/doc/guix.texi:38247 guix-git/doc/guix.texi:38461
#: guix-git/doc/guix.texi:38468 guix-git/doc/guix.texi:38490
#: guix-git/doc/guix.texi:38529 guix-git/doc/guix.texi:38549
#: guix-git/doc/guix.texi:38563 guix-git/doc/guix.texi:41450
#: guix-git/doc/guix.texi:41538 guix-git/doc/guix.texi:41554
#: guix-git/doc/guix.texi:41604
msgid "Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25712
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer dirty-clean-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25716
msgid "Specifies the delay for updating of configuration and state files, in seconds.  A value of 0 causes the update to happen as soon as possible, typically within a few milliseconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25718 guix-git/doc/guix.texi:25766
#: guix-git/doc/guix.texi:25775 guix-git/doc/guix.texi:26078
#: guix-git/doc/guix.texi:32589 guix-git/doc/guix.texi:32622
msgid "Defaults to @samp{30}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25720
#, no-wrap
msgid "{@code{cups-configuration} parameter} error-policy error-policy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25726
msgid "Specifies what to do when an error occurs.  Possible values are @code{abort-job}, which will discard the failed print job; @code{retry-job}, which will retry the job at a later time; @code{retry-current-job}, which retries the failed job immediately; and @code{stop-printer}, which stops the printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25728
msgid "Defaults to @samp{stop-printer}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25730
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer filter-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25738
msgid "Specifies the maximum cost of filters that are run concurrently, which can be used to minimize disk, memory, and CPU resource problems.  A limit of 0 disables filter limiting.  An average print to a non-PostScript printer needs a filter limit of about 200.  A PostScript printer needs about half that (100).  Setting the limit below these thresholds will effectively limit the scheduler to printing a single job at any time."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25740 guix-git/doc/guix.texi:25748
#: guix-git/doc/guix.texi:25797 guix-git/doc/guix.texi:25902
#: guix-git/doc/guix.texi:25916 guix-git/doc/guix.texi:25923
#: guix-git/doc/guix.texi:25944 guix-git/doc/guix.texi:25952
#: guix-git/doc/guix.texi:25960 guix-git/doc/guix.texi:25968
#: guix-git/doc/guix.texi:28448 guix-git/doc/guix.texi:28464
#: guix-git/doc/guix.texi:29121 guix-git/doc/guix.texi:29133
#: guix-git/doc/guix.texi:29926 guix-git/doc/guix.texi:29935
#: guix-git/doc/guix.texi:29943 guix-git/doc/guix.texi:29951
#: guix-git/doc/guix.texi:38123 guix-git/doc/guix.texi:38476
#: guix-git/doc/guix.texi:41443 guix-git/doc/guix.texi:41743
#: guix-git/doc/guix.texi:41918
msgid "Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25742
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer filter-nice"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25746
msgid "Specifies the scheduling priority of filters that are run to print a job.  The nice value ranges from 0, the highest priority, to 19, the lowest priority."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25750
#, no-wrap
msgid "{@code{cups-configuration} parameter} host-name-lookups host-name-lookups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25757
msgid "Specifies whether to do reverse lookups on connecting clients.  The @code{double} setting causes @code{cupsd} to verify that the hostname resolved from the address matches one of the addresses returned for that hostname.  Double lookups also prevent clients with unregistered addresses from connecting to your server.  Only set this option to @code{#t} or @code{double} if absolutely required."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25761
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-kill-delay"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25764
msgid "Specifies the number of seconds to wait before killing the filters and backend associated with a canceled or held job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25768
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-retry-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25773
msgid "Specifies the interval between retries of jobs in seconds.  This is typically used for fax queues but can also be used with normal print queues whose error policy is @code{retry-job} or @code{retry-current-job}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25777
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer job-retry-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25782
msgid "Specifies the number of retries that are done for jobs.  This is typically used for fax queues but can also be used with normal print queues whose error policy is @code{retry-job} or @code{retry-current-job}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25784 guix-git/doc/guix.texi:32553
#: guix-git/doc/guix.texi:41395 guix-git/doc/guix.texi:41403
#: guix-git/doc/guix.texi:41411 guix-git/doc/guix.texi:41435
msgid "Defaults to @samp{5}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25786
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean keep-alive?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25788
msgid "Specifies whether to support HTTP keep-alive connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25792
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer limit-request-body"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25795
msgid "Specifies the maximum size of print files, IPP requests, and HTML form data.  A limit of 0 disables the limit check."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25799
#, no-wrap
msgid "{@code{cups-configuration} parameter} multiline-string-list listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25806
msgid "Listens on the specified interfaces for connections.  Valid values are of the form @var{address}:@var{port}, where @var{address} is either an IPv6 address enclosed in brackets, an IPv4 address, or @code{*} to indicate all addresses.  Values can also be file names of local UNIX domain sockets.  The Listen directive is similar to the Port directive but allows you to restrict access to specific interfaces or networks."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25808
#, no-wrap
msgid "{@code{cups-configuration} parameter} location-access-control-list location-access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25810
msgid "Specifies a set of additional access controls."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25812
msgid "Available @code{location-access-controls} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25813
#, no-wrap
msgid "{@code{location-access-controls} parameter} file-name path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25815
msgid "Specifies the URI path to which the access control applies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25817
#, no-wrap
msgid "{@code{location-access-controls} parameter} access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25820
msgid "Access controls for all access to this path, in the same format as the @code{access-controls} of @code{operation-access-control}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25822 guix-git/doc/guix.texi:25828
#: guix-git/doc/guix.texi:25842 guix-git/doc/guix.texi:25849
#: guix-git/doc/guix.texi:25982 guix-git/doc/guix.texi:26041
#: guix-git/doc/guix.texi:26123 guix-git/doc/guix.texi:26137
#: guix-git/doc/guix.texi:28328 guix-git/doc/guix.texi:28337
#: guix-git/doc/guix.texi:29607 guix-git/doc/guix.texi:29824
#: guix-git/doc/guix.texi:29852 guix-git/doc/guix.texi:29882
#: guix-git/doc/guix.texi:29997 guix-git/doc/guix.texi:30010
#: guix-git/doc/guix.texi:30017 guix-git/doc/guix.texi:32759
#: guix-git/doc/guix.texi:33834 guix-git/doc/guix.texi:33842
#: guix-git/doc/guix.texi:34087 guix-git/doc/guix.texi:41458
#: guix-git/doc/guix.texi:41465 guix-git/doc/guix.texi:41807
#: guix-git/doc/guix.texi:41886 guix-git/doc/guix.texi:41980
#: guix-git/doc/guix.texi:41988 guix-git/doc/guix.texi:42024
#: guix-git/doc/guix.texi:42174 guix-git/doc/guix.texi:42225
#: guix-git/doc/guix.texi:42234
msgid "Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25824
#, no-wrap
msgid "{@code{location-access-controls} parameter} method-access-control-list method-access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25826
msgid "Access controls for method-specific access to this path."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25830
msgid "Available @code{method-access-controls} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25831
#, no-wrap
msgid "{@code{method-access-controls} parameter} boolean reverse?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25834
msgid "If @code{#t}, apply access controls to all methods except the listed methods.  Otherwise apply to only the listed methods."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25838
#, no-wrap
msgid "{@code{method-access-controls} parameter} method-list methods"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25840
msgid "Methods to which this access control applies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25844
#, no-wrap
msgid "{@code{method-access-controls} parameter} access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25847
msgid "Access control directives, as a list of strings.  Each string should be one directive, such as @samp{\"Order allow,deny\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25853
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer log-debug-history"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25857
msgid "Specifies the number of debugging messages that are retained for logging if an error occurs in a print job.  Debug messages are logged regardless of the LogLevel setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25859 guix-git/doc/guix.texi:25880
#: guix-git/doc/guix.texi:25887 guix-git/doc/guix.texi:29367
#: guix-git/doc/guix.texi:32291 guix-git/doc/guix.texi:32306
msgid "Defaults to @samp{100}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25861
#, no-wrap
msgid "{@code{cups-configuration} parameter} log-level log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25864
msgid "Specifies the level of logging for the ErrorLog file.  The value @code{none} stops all logging while @code{debug2} logs everything."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25866 guix-git/doc/guix.texi:32768
msgid "Defaults to @samp{info}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25868
#, no-wrap
msgid "{@code{cups-configuration} parameter} log-time-format log-time-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25871
msgid "Specifies the format of the date and time in the log files.  The value @code{standard} logs whole seconds while @code{usecs} logs microseconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25873
msgid "Defaults to @samp{standard}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25875
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-clients"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25878
msgid "Specifies the maximum number of simultaneous clients that are allowed by the scheduler."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25882
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-clients-per-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25885
msgid "Specifies the maximum number of simultaneous clients that are allowed from a single address."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25889
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-copies"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25892
msgid "Specifies the maximum number of copies that a user can print of each job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25894
msgid "Defaults to @samp{9999}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25896
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-hold-time"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25900
msgid "Specifies the maximum time a job may remain in the @code{indefinite} hold state before it is canceled.  A value of 0 disables cancellation of held jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25904
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25907
msgid "Specifies the maximum number of simultaneous jobs that are allowed.  Set to 0 to allow an unlimited number of jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25909
msgid "Defaults to @samp{500}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25911
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs-per-printer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25914
msgid "Specifies the maximum number of simultaneous jobs that are allowed per printer.  A value of 0 allows up to @code{max-jobs} per printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25918
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-jobs-per-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25921
msgid "Specifies the maximum number of simultaneous jobs that are allowed per user.  A value of 0 allows up to @code{max-jobs} per user."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25925
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-job-time"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25928
msgid "Specifies the maximum time a job may take to print before it is canceled, in seconds.  Set to 0 to disable cancellation of ``stuck'' jobs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25930
msgid "Defaults to @samp{10800}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25932
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-log-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25935
msgid "Specifies the maximum size of the log files before they are rotated, in bytes.  The value 0 disables log rotation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25937
msgid "Defaults to @samp{1048576}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25939
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25942
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed.  Set to @samp{0} to allow an unlimited number of subscriptions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25946
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-job"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25950
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per job.  A value of @samp{0} allows up to @code{max-subscriptions} per job."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25954
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-printer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25958
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per printer.  A value of @samp{0} allows up to @code{max-subscriptions} per printer."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25962
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer max-subscriptions-per-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25966
msgid "Specifies the maximum number of simultaneous event subscriptions that are allowed per user.  A value of @samp{0} allows up to @code{max-subscriptions} per user."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25970
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer multiple-operation-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25973
msgid "Specifies the maximum amount of time to allow between files in a multiple file print job, in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25975 guix-git/doc/guix.texi:26150
msgid "Defaults to @samp{900}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25977
#, no-wrap
msgid "{@code{cups-configuration} parameter} environment-variables environment-variables"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25980
msgid "Passes the specified environment variable(s) to child processes; a list of strings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25984
#, no-wrap
msgid "{@code{cups-configuration} parameter} policy-configuration-list policies"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25986
msgid "Specifies named access control policies."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25988
msgid "Available @code{policy-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25989
#, no-wrap
msgid "{@code{policy-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25991
msgid "Name of the policy."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:25993
#, no-wrap
msgid "{@code{policy-configuration} parameter} string job-private-access"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26003
msgid "Specifies an access list for a job's private values.  @code{@@ACL} maps to the printer's requesting-user-name-allowed or requesting-user-name-denied values.  @code{@@OWNER} maps to the job's owner.  @code{@@SYSTEM} maps to the groups listed for the @code{system-group} field of the @code{files-configuration}, which is reified into the @code{cups-files.conf(5)} file.  Other possible elements of the access list include specific user names, and @code{@@@var{group}} to indicate members of a specific group.  The access list may also be simply @code{all} or @code{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26005 guix-git/doc/guix.texi:26027
msgid "Defaults to @samp{\"@@OWNER @@SYSTEM\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26007
#, no-wrap
msgid "{@code{policy-configuration} parameter} string job-private-values"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26010 guix-git/doc/guix.texi:26032
msgid "Specifies the list of job values to make private, or @code{all}, @code{default}, or @code{none}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26013
msgid "Defaults to @samp{\"job-name job-originating-host-name job-originating-user-name phone\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26015
#, no-wrap
msgid "{@code{policy-configuration} parameter} string subscription-private-access"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26025
msgid "Specifies an access list for a subscription's private values.  @code{@@ACL} maps to the printer's requesting-user-name-allowed or requesting-user-name-denied values.  @code{@@OWNER} maps to the job's owner.  @code{@@SYSTEM} maps to the groups listed for the @code{system-group} field of the @code{files-configuration}, which is reified into the @code{cups-files.conf(5)} file.  Other possible elements of the access list include specific user names, and @code{@@@var{group}} to indicate members of a specific group.  The access list may also be simply @code{all} or @code{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26029
#, no-wrap
msgid "{@code{policy-configuration} parameter} string subscription-private-values"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26035
msgid "Defaults to @samp{\"notify-events notify-pull-method notify-recipient-uri notify-subscriber-user-name notify-user-data\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26037
#, no-wrap
msgid "{@code{policy-configuration} parameter} operation-access-control-list access-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26039
msgid "Access control by IPP operation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26044
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean-or-non-negative-integer preserve-job-files"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26049
msgid "Specifies whether job files (documents) are preserved after a job is printed.  If a numeric value is specified, job files are preserved for the indicated number of seconds after printing.  Otherwise a boolean value applies indefinitely."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26051
msgid "Defaults to @samp{86400}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26053
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean-or-non-negative-integer preserve-job-history"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26058
msgid "Specifies whether the job history is preserved after a job is printed.  If a numeric value is specified, the job history is preserved for the indicated number of seconds after printing.  If @code{#t}, the job history is preserved until the MaxJobs limit is reached."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26062
#, no-wrap
msgid "{@code{cups-configuration} parameter} comma-separated-string-list-or-#f ready-paper-sizes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26066
msgid "Specifies a list of potential paper sizes that are reported as ready, that is: loaded.  The actual list will contain only the sizes that each printer supports."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26071
msgid "The default value of @code{#f} is a special case: CUPS will use @samp{(list \\\"Letter\\\" \\\"Legal\\\" \\\"Tabloid\\\" \\\"4x6\\\" \\\"Env10\\\")} if the default paper size is \\\"Letter\\\", and @samp{(list \\\"A3\\\" \\\"A4\\\" \\\"A5\\\" \\\"A6\\\" \\\"EnvDL\\\")} otherwise."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26073
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer reload-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26076
msgid "Specifies the amount of time to wait for job completion before restarting the scheduler."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26080
#, no-wrap
msgid "{@code{cups-configuration} parameter} string server-admin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26082
msgid "Specifies the email address of the server administrator."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26084
msgid "Defaults to @samp{\"root@@localhost.localdomain\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26086
#, no-wrap
msgid "{@code{cups-configuration} parameter} host-name-list-or-* server-alias"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26094
msgid "The ServerAlias directive is used for HTTP Host header validation when clients connect to the scheduler from external interfaces.  Using the special name @code{*} can expose your system to known browser-based DNS rebinding attacks, even when accessing sites through a firewall.  If the auto-discovery of alternate names does not work, we recommend listing each alternate name with a ServerAlias directive instead of using @code{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26096
msgid "Defaults to @samp{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26098
#, no-wrap
msgid "{@code{cups-configuration} parameter} string server-name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26100
msgid "Specifies the fully-qualified host name of the server."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26102
msgid "Defaults to @samp{\"localhost\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26104
#, no-wrap
msgid "{@code{cups-configuration} parameter} server-tokens server-tokens"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26112
msgid "Specifies what information is included in the Server header of HTTP responses.  @code{None} disables the Server header.  @code{ProductOnly} reports @code{CUPS}.  @code{Major} reports @code{CUPS 2}.  @code{Minor} reports @code{CUPS 2.0}.  @code{Minimal} reports @code{CUPS 2.0.0}.  @code{OS} reports @code{CUPS 2.0.0 (@var{uname})} where @var{uname} is the output of the @code{uname} command.  @code{Full} reports @code{CUPS 2.0.0 (@var{uname}) IPP/2.0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26114
msgid "Defaults to @samp{Minimal}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26116
#, no-wrap
msgid "{@code{cups-configuration} parameter} multiline-string-list ssl-listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26121
msgid "Listens on the specified interfaces for encrypted connections.  Valid values are of the form @var{address}:@var{port}, where @var{address} is either an IPv6 address enclosed in brackets, an IPv4 address, or @code{*} to indicate all addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26125
#, no-wrap
msgid "{@code{cups-configuration} parameter} ssl-options ssl-options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26135
msgid "Sets encryption options.  By default, CUPS only supports encryption using TLS v1.0 or higher using known secure cipher suites.  Security is reduced when @code{Allow} options are used, and enhanced when @code{Deny} options are used.  The @code{AllowRC4} option enables the 128-bit RC4 cipher suites, which are required for some older clients.  The @code{AllowSSL3} option enables SSL v3.0, which is required for some older clients that do not support TLS v1.0.  The @code{DenyCBC} option disables all CBC cipher suites.  The @code{DenyTLS1.0} option disables TLS v1.0 support - this sets the minimum protocol version to TLS v1.1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26139
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean strict-conformance?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26142
msgid "Specifies whether the scheduler requires clients to strictly adhere to the IPP specifications."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26146
#, no-wrap
msgid "{@code{cups-configuration} parameter} non-negative-integer timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26148
msgid "Specifies the HTTP request timeout, in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26153
#, no-wrap
msgid "{@code{cups-configuration} parameter} boolean web-interface?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26155
msgid "Specifies whether the web interface is enabled."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26165
msgid "At this point you're probably thinking ``oh dear, Guix manual, I like you but you can stop already with the configuration options''.  Indeed.  However, one more point: it could be that you have an existing @code{cupsd.conf} that you want to use.  In that case, you can pass an @code{opaque-cups-configuration} as the configuration of a @code{cups-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26167
msgid "Available @code{opaque-cups-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26168
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} package cups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26172
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} string cupsd.conf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26174
msgid "The contents of the @code{cupsd.conf}, as a string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26176
#, no-wrap
msgid "{@code{opaque-cups-configuration} parameter} string cups-files.conf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:26178
msgid "The contents of the @code{cups-files.conf} file, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26183
msgid "For example, if your @code{cupsd.conf} and @code{cups-files.conf} are in strings of the same name, you could instantiate a CUPS service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26189
#, no-wrap
msgid ""
"(service cups-service-type\n"
"         (opaque-cups-configuration\n"
"           (cupsd.conf cupsd.conf)\n"
"           (cups-files.conf cups-files.conf)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26200
msgid "The @code{(gnu services desktop)} module provides services that are usually useful in the context of a ``desktop'' setup---that is, on a machine running a graphical display server, possibly with graphical user interfaces, etc.  It also defines services that provide specific desktop environments like GNOME, Xfce or MATE."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26204
msgid "To simplify things, the module defines a variable containing the set of services that users typically expect on a machine with a graphical environment and networking:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26205
#, fuzzy, no-wrap
#| msgid "Desktop Services"
msgid "%desktop-services"
msgstr "Serviços de desktop"

#. type: defvar
#: guix-git/doc/guix.texi:26208
msgid "This is a list of services that builds upon @code{%base-services} and adds or adjusts services for a typical ``desktop'' setup."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26217
msgid "In particular, it adds a graphical login manager (@pxref{X Window, @code{gdm-service-type}}), screen lockers, a network management tool (@pxref{Networking Services, @code{network-manager-service-type}}) with modem support (@pxref{Networking Services, @code{modem-manager-service-type}}), energy and color management services, the @code{elogind} login and seat manager, the Polkit privilege service, the GeoClue location service, the AccountsService daemon that allows authorized users change system passwords, a NTP client (@pxref{Networking Services}) and the Avahi daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26222
msgid "The @code{%desktop-services} variable can be used as the @code{services} field of an @code{operating-system} declaration (@pxref{operating-system Reference, @code{services}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26225
msgid "Additionally, the following procedures add one (or more!) desktop environments to a system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26227
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{gnome-desktop-service-type} adds GNOME,"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:26228
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{plasma-desktop-service-type} adds KDE Plasma,"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:26229
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{enlightenment-desktop-service-type} adds Enlightenment,"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:26230
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{lxqt-desktop-service-type} adds LXQt,"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:26231
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{mate-desktop-service-type} adds MATE, and"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:26232
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "@code{xfce-desktop-service-type} adds Xfce."
msgstr "guix-publish-service-type"

#. type: Plain text
#: guix-git/doc/guix.texi:26238
msgid "These service types add ``metapackages'' such as @code{gnome} or @code{plasma} to the system profile, but most of them also set up other useful services that mere packages can't do."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26243
msgid "For example, they may elevate privileges on a limited number of special-purpose system interfaces and programs.  This allows backlight adjustment helpers, power management utilities, screen lockers, and other integrated functionality to work as expected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26253
msgid "The desktop environments in Guix use the Xorg display server by default.  If you'd like to use the newer display server protocol called Wayland, you need to enable Wayland support in GDM (@pxref{wayland-gdm}).  Another solution is to use the @code{sddm-service} instead of GDM as the graphical login manager.  You should then select the ``GNOME (Wayland)'' session in SDDM@.  Alternatively you can also try starting GNOME on Wayland manually from a TTY with the command ``XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session``.  Currently only GNOME has support for Wayland."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26254
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gnome-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26258
msgid "This is the type of the service that adds the @uref{https://www.gnome.org, GNOME} desktop environment.  Its value is a @code{gnome-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26261
msgid "This service adds the @code{gnome} package to the system profile, and extends polkit with the actions from @code{gnome-settings-daemon}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26263
#, no-wrap
msgid "{Data Type} gnome-desktop-configuration"
msgstr "{Tipo de dados} gnome-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26266
#, fuzzy
msgid "Configuration record for the GNOME desktop environment.  Available @code{gnome-desktop-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:26268
#, fuzzy, no-wrap
msgid "@code{core-services} (type: list-of-packages)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26270
msgid "A list of packages that the GNOME Shell and applications may rely on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26271
#, fuzzy, no-wrap
msgid "@code{shell} (type: list-of-packages)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:26274
msgid "A list of packages that constitute the GNOME Shell, without applications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26275
#, fuzzy, no-wrap
msgid "@code{utilities} (type: list-of-packages)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26277
msgid "A list of packages that serve as applications to use on top of the GNOME Shell."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26278
#, fuzzy, no-wrap
msgid "@code{gnome} (type: maybe-package)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26283
msgid "This field used to be the only configuration point and specified a GNOME meta-package to install system-wide.  Since the meta-package itself provides neither sources nor the actual packages and is only used to propagate them, this field is deprecated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26284
#, fuzzy, no-wrap
msgid "@code{extra-packages} (type: list-of-packages)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26289
msgid "A list of GNOME-adjacent packages to also include.  This field is intended for users to add their own packages to their GNOME experience.  Note, that it already includes some packages that are considered essential by some (most?) GNOME users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26290
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{udev-ignorelist} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26295
msgid "A list of regular expressions denoting udev rules or hardware file names provided by any package that should not be installed.  By default, every udev rule and hardware file specified by any package referenced in the other fields are installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26296
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{polkit-ignorelist} (default: @code{()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26300
msgid "A list of regular expressions denoting polkit rules provided by any package that should not be installed.  By default, every polkit rule added by any package referenced in the other fields are installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26301
#, fuzzy, no-wrap
#| msgid "{Data Type} gnome-keyring-configuration"
msgid "@code{keyring} (type: gnome-keyring-configuration-or-#f)"
msgstr "{Tipo de dados} gnome-keyring-configuration"

#. type: table
#: guix-git/doc/guix.texi:26306
msgid "A <gnome-keyring-configuration> record used to better integrate the GNOME keyring with the system.  Refer to the documentation of the @code{gnome-keyring-service-type} for more information.  If you'd rather avoid integrating the GNOME keyring, you can set this to @code{#f}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26310
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "plasma-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26314
msgid "This is the type of the service that adds the @uref{https://kde.org/plasma-desktop/, Plasma} desktop environment.  Its value is a @code{plasma-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26316
msgid "This service adds the @code{plasma} package to the system profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26318
#, no-wrap
msgid "{Data Type} plasma-desktop-configuration"
msgstr "{Tipo de dados} plasma-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26320
#, fuzzy
msgid "Configuration record for the Plasma desktop environment."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26322
#, fuzzy, no-wrap
msgid "@code{plasma} (default: @code{plasma})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26324
#, fuzzy
msgid "The Plasma package to use."
msgstr "O pacote GPM a ser usado."

#. type: defvar
#: guix-git/doc/guix.texi:26327
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "xfce-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26331
msgid "This is the type of a service to run the @uref{Xfce, https://xfce.org/} desktop environment.  Its value is an @code{xfce-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26336
msgid "This service adds the @code{xfce} package to the system profile, and extends polkit with the ability for @code{thunar} to manipulate the file system as root from within a user session, after the user has authenticated with the administrator's password."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26342
msgid "Note that @code{xfce4-panel} and its plugin packages should be installed in the same profile to ensure compatibility.  When using this service, you should add extra plugins (@code{xfce4-whiskermenu-plugin}, @code{xfce4-weather-plugin}, etc.) to the @code{packages} field of your @code{operating-system}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26344
#, no-wrap
msgid "{Data Type} xfce-desktop-configuration"
msgstr "{Tipo de dados} xfce-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26346
msgid "Configuration record for the Xfce desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26348
#, no-wrap
msgid "@code{xfce} (default: @code{xfce})"
msgstr "@code{xfce} (default: @code{xfce})"

#. type: table
#: guix-git/doc/guix.texi:26350
msgid "The Xfce package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26353
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mate-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26357
msgid "This is the type of the service that runs the @uref{https://mate-desktop.org/, MATE desktop environment}.  Its value is a @code{mate-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26361
msgid "This service adds the @code{mate} package to the system profile, and extends polkit with the actions from @code{mate-settings-daemon}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26363
#, no-wrap
msgid "{Data Type} mate-desktop-configuration"
msgstr "{Tipo de dados} mate-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26365
msgid "Configuration record for the MATE desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26367
#, no-wrap
msgid "@code{mate} (default: @code{mate})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26369
msgid "The MATE package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26372
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "lxqt-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26376
msgid "This is the type of the service that runs the @uref{https://lxqt-project.org, LXQt desktop environment}.  Its value is a @code{lxqt-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26379
msgid "This service adds the @code{lxqt} package to the system profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26381
#, no-wrap
msgid "{Data Type} lxqt-desktop-configuration"
msgstr "{Tipo de dados} lxqt-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26383
msgid "Configuration record for the LXQt desktop environment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26385
#, no-wrap
msgid "@code{lxqt} (default: @code{lxqt})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26387
msgid "The LXQT package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26390
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "sugar-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26394
msgid "This is the type of the service that runs the @uref{https://www.sugarlabs.org, Sugar desktop environment}.  Its value is a @code{sugar-desktop-configuration} object (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26398
msgid "This service adds the @code{sugar} package to the system profile, as well as any selected Sugar activities.  By default it only includes a minimal set of activities."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26400
#, no-wrap
msgid "{Data Type} sugar-desktop-configuration"
msgstr "{Tipo de dados} sugar-desktop-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26402
#, fuzzy
msgid "Configuration record for the Sugar desktop environment."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26404
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{sugar} (default: @code{sugar})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26406
#, fuzzy
msgid "The Sugar package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:26406
#, fuzzy, no-wrap
msgid "@code{gobject-introspection} (default: @code{gobject-introspection})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26409
msgid "The @code{gobject-introspection} package to use.  This package is used to access libraries installed as dependencies of Sugar activities."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26409
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{activities} (default: @code{(list sugar-help-activity)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:26411
msgid "A list of Sugar activities to install."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26416
msgid "The following example configures the Sugar desktop environment with a number of useful activities:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26431
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-package-modules sugar)\n"
"(use-service-modules desktop)\n"
"(operating-system\n"
"  ...\n"
"  (services (cons* (service sugar-desktop-service-type\n"
"                            (sugar-desktop-configuration\n"
"                              (activities (list sugar-browse-activity\n"
"                                                sugar-help-activity\n"
"                                                sugar-jukebox-activity\n"
"                                                sugar-typing-turtle-activity))))\n"
"                   %desktop-services))\n"
"  ...)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26433
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "enlightenment-desktop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26436
msgid "Return a service that adds the @code{enlightenment} package to the system profile, and extends dbus with actions from @code{efl}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26438
#, no-wrap
msgid "{Data Type} enlightenment-desktop-service-configuration"
msgstr "{Tipo de dados} enlightenment-desktop-service-configuration"

#. type: item
#: guix-git/doc/guix.texi:26440
#, no-wrap
msgid "@code{enlightenment} (default: @code{enlightenment})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26442
msgid "The enlightenment package to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26450
msgid "Because the GNOME, Xfce and MATE desktop services pull in so many packages, the default @code{%desktop-services} variable doesn't include any of them by default.  To add GNOME, Xfce or MATE, just @code{cons} them onto @code{%desktop-services} in the @code{services} field of your @code{operating-system}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26461
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules desktop)\n"
"(operating-system\n"
"  ...\n"
"  ;; cons* adds items to the list given as its last argument.\n"
"  (services (cons* (service gnome-desktop-service-type)\n"
"                   (service xfce-desktop-service-type)\n"
"                   %desktop-services))\n"
"  ...)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26465
msgid "These desktop environments will then be available as options in the graphical login window."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26469
msgid "The actual service definitions included in @code{%desktop-services} and provided by @code{(gnu services dbus)} and @code{(gnu services desktop)} are described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26470
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dbus-root-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26475
msgid "Type for a service that runs the D-Bus ``system bus''.  @footnote{@uref{https://dbus.freedesktop.org/, D-Bus} is an inter-process communication facility.  Its system bus is used to allow system services to communicate and to be notified of system-wide events.}"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26477
msgid "The value for this service type is a @code{<dbus-configuration>} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26479
#, no-wrap
msgid "{Data Type} dbus-configuration"
msgstr "{Tipo de dados} dbus-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26481
#, fuzzy
msgid "Data type representing the configuration for @code{dbus-root-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26483
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{dbus} (default: @code{dbus}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26485
#, fuzzy
#| msgid "Package Modules"
msgid "Package object for dbus."
msgstr "Módulos de pacote"

#. type: item
#: guix-git/doc/guix.texi:26486
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{services} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26491
msgid "List of packages that provide an @file{etc/dbus-1/system.d} directory containing additional D-Bus configuration and policy files.  For example, to allow avahi-daemon to use the system bus, @var{services} must be equal to @code{(list avahi)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26492 guix-git/doc/guix.texi:45314
#: guix-git/doc/guix.texi:50480
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{verbose?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26498
msgid "When @code{#t}, D-Bus is launched with environment variable @samp{DBUS_VERBOSE} set to @samp{1}.  A verbose-enabled D-Bus package such as @code{dbus-verbose} should be provided to @var{dbus} in this scenario. The verbose output is logged to @file{/var/log/dbus-daemon.log}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:26502
#, no-wrap
msgid "Elogind"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26508
msgid "@uref{https://github.com/elogind/elogind, Elogind} is a login and seat management daemon that also handles most system-level power events for a computer, for example suspending the system when a lid is closed, or shutting it down when the power button is pressed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:26512
msgid "It also provides a D-Bus interface that can be used to know which users are logged in, know what kind of sessions they have open, suspend the system, inhibit system suspend, reboot the system, and other tasks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26513
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "elogind-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26517
msgid "Type of the service that runs @command{elogind}, a login and seat management daemon.  The value for this service is a @code{<elogind-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26522
#, no-wrap
msgid "{Data Type} elogind-configuration"
msgstr "{Tipo de dados} elogind-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26524
#, fuzzy
msgid "Available @code{elogind-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:26526
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{elogind} (default: @code{elogind}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26528
#, fuzzy
msgid "The elogind package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:26529
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{system-sleep-hook-files} (default: @code{()}) (type: list-of-file-likes)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26533
msgid "A list of executables (file-like objects) that will be installed into the @file{/etc/elogind/system-sleep} hook directory.  See `Hook directories' in the @samp{loginctl(1)} man page for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26534
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{system-shutdown-hook-files} (default: @code{()}) (type: list-of-file-likes)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26537
msgid "A list of executables (file-like objects) that will be installed into the @file{/etc/elogind/system-shutdown/} hook directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26538
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{allow-power-off-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26542
msgid "Whether the executables in elogind's hook directories (see above) can cause a power-off action to be cancelled (interrupted) by printing an appropriate error message to stdout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26543
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{allow-suspend-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26546
msgid "Likewise as the @code{allow-power-off-interrupts?} option, but for the suspend action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26547
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{broadcast-power-off-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26549
msgid "Whether an interrupt of a power-off action is broadcasted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26550
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{broadcast-suspend-interrupts?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26552
msgid "Whether an interrupt of a suspend action is broadcasted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26553
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{kill-user-processes?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26555
msgid "Whether the processes of a user should be killed when the user logs out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26556
#, fuzzy, no-wrap
msgid "@code{kill-only-users} (type: maybe-list-of-user-names)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26559
msgid "Usernames whose processes should be killed, regardless the value of @code{kill-user-processes?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26560
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{kill-exclude-users} (default: @code{(\"root\")}) (type: maybe-list-of-user-names)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26563
msgid "Usernames whose processes should @emph{not} be killed, regardless the value of @code{kill-user-processes?}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26564
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{inhibit-delay-max-seconds} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26568
msgid "The maximum time a system shutdown or sleep request is delayed due to an inhibitor lock of type delay being active before the inhibitor is ignored and the operation executes anyway."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26569
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-power-key} (default: @code{poweroff}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26572
msgid "The action done when the power key is pressed.  The compiled default is @code{'poweroff}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26573
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-suspend-key} (default: @code{suspend}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26575
msgid "The action done when the suspend key is pressed.  The"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26576
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-hibernate-key} (default: @code{hibernate}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26578
msgid "The action done when the hibernate key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26579
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-lid-switch} (default: @code{suspend}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26581
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The action done when the lid is closed."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:26582
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-lid-switch-docked} (default: @code{ignore}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26584
msgid "The action done when the lid is closed and the device docked."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26585
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{handle-lid-switch-external-power} (default: @code{suspend}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26588
msgid "The action done when the lid is closed and the device is externally powered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26589
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{power-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26592
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the power key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26593
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{suspend-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26596
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the suspend key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26597
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{hibernate-key-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26600
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the hibernate key is pressed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26601
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{lid-switch-ignore-inhibited?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26604
msgid "Whether to ignore high-level inhibitor locks (shutdown, reboot, sleep or idle) when the lid is closed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26605
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{holdoff-timeout-seconds} (default: @code{30}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26608
msgid "Specifies the number of seconds after system startup or system resume during which elogind will hold off on reacting to lid events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26609
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{idle-action} (default: @code{ignore}) (type: maybe-action)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26611
msgid "Action to take when the system is idle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26612
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{idle-action-seconds} (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26615
msgid "The delay after which the action configured in @code{idle-action} is taken after the system is idle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26616
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{runtime-directory-size-percent} (type: maybe-percent)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26622
msgid "Set the size limit, in percent, on the @env{XDG_RUNTIME_DIR} runtime directory for each user who logs in.  This specifies the per-user size limit relative to the amount of physical @acronym{RAM,read access memory}.  This value takes precedence over that specified via @code{runtime-directory-size}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26623
#, fuzzy, no-wrap
msgid "@code{runtime-directory-size} (type: maybe-non-negative-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26626
msgid "Set the size limit, in bytes, on the @env{XDG_RUNTIME_DIR} runtime directory for each user who logs in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26627
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{remove-ipc?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26630
msgid "Whether @acronym{IPC,inter-process communication} objects belonging to the user shall be removed when the user fully logs out."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26631
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{suspend-state} (default: @code{(mem standby freeze)}) (type: maybe-list-of-suspend-states)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26635
msgid "The suspend state values to be write to @file{/sys/power/state} by elogind when suspending the system.  They will be tried in turn, until one is written without error."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26636
#, fuzzy, no-wrap
msgid "@code{suspend-mode} (type: maybe-list-of-suspend-modes)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26639
msgid "The suspend mode values to write to @file{/sys/power/mem_sleep} by elogind when suspending the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26640
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{suspend-estimation-seconds} (default: @code{3600}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26646
msgid "Cause the RTC alarm to wake the system after the specified time span to measure the system battery capacity level and estimate the battery discharging rate, which is used for estimating the time span until the system battery charge level goes down to 5%.  This option is only used by elogind when using the @code{'suspend-then-hibernate} action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26647
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{hibernate-mode} (default: @code{(platform shutdown)}) (type: maybe-list-of-hibernation-modes)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26650
msgid "The hibernation mode values to write to @file{/sys/power/disk} by elogind when hibernating the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26651
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{hibernate-delay-seconds} (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26654
msgid "The amount of time the system spends in suspend mode before the system is automatically put into hibernate mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26655
#, fuzzy, no-wrap
msgid "@code{hibernate-state} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26657 guix-git/doc/guix.texi:26660
#: guix-git/doc/guix.texi:26663
#, fuzzy
#| msgid "Deprecation Policy"
msgid "Deprecated option."
msgstr "Política de depreciação"

#. type: item
#: guix-git/doc/guix.texi:26658
#, fuzzy, no-wrap
msgid "@code{hybrid-sleep-state} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:26661
#, fuzzy, no-wrap
msgid "@code{hybrid-sleep-mode} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: defvar
#: guix-git/doc/guix.texi:26671
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "accountsservice-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26678
msgid "Type for the service that runs AccountsService, a system service that can list available accounts, change their passwords, and so on.  AccountsService integrates with PolicyKit to enable unprivileged users to acquire the capability to modify their system configuration.  See @url{https://www.freedesktop.org/wiki/Software/AccountsService/, AccountsService} for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26681
msgid "The value for this service is a file-like object, by default it is set to @code{accountsservice} (the package object for AccountsService)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26683
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "polkit-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26691
msgid "Type for the service that runs the @url{https://www.freedesktop.org/wiki/Software/polkit/, Polkit privilege management service}, which allows system administrators to grant access to privileged operations in a structured way.  By querying the Polkit service, a privileged system component can know when it should grant additional capabilities to ordinary users.  For example, an ordinary user can be granted the capability to suspend the system if the user is logged in locally."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26693
msgid "The value for this service is a @code{<polkit-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26698
#, no-wrap
msgid "polkit-wheel-service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26703
msgid "Service that adds the @code{wheel} group as admins to the Polkit service.  This makes it so that users in the @code{wheel} group are queried for their own passwords when performing administrative actions instead of @code{root}'s, similar to the behaviour used by @code{sudo}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26705
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "upower-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26709
msgid "Service that runs @uref{https://upower.freedesktop.org/, @command{upowerd}}, a system-wide monitor for power consumption and battery levels, with the given configuration settings."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26712
msgid "It implements the @code{org.freedesktop.UPower} D-Bus interface, and is notably used by GNOME."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26714
#, no-wrap
msgid "{Data Type} upower-configuration"
msgstr "{Tipo de dados} upower-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26716
msgid "Data type representation the configuration for UPower."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26719
#, no-wrap
msgid "@code{upower} (default: @var{upower})"
msgstr "@code{upower} (default: @var{upower})"

#. type: table
#: guix-git/doc/guix.texi:26721
msgid "Package to use for @code{upower}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26722
#, no-wrap
msgid "@code{watts-up-pro?} (default: @code{#f})"
msgstr "@code{watts-up-pro?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26724
msgid "Enable the Watts Up Pro device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26725
#, no-wrap
msgid "@code{poll-batteries?} (default: @code{#t})"
msgstr "@code{poll-batteries?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26727
msgid "Enable polling the kernel for battery level changes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26728
#, no-wrap
msgid "@code{ignore-lid?} (default: @code{#f})"
msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26730
msgid "Ignore the lid state, this can be useful if it's incorrect on a device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26731
#, fuzzy, no-wrap
#| msgid "@code{respawn?} (default: @code{#t})"
msgid "@code{use-percentage-for-policy?} (default: @code{#t})"
msgstr "@code{respawn?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26735
msgid "Whether to use a policy based on battery percentage rather than on estimated time left.  A policy based on battery percentage is usually more reliable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26736
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{percentage-low} (default: @code{20})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26739
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which the battery is considered low."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26740
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{percentage-critical} (default: @code{5})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26743
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which the battery is considered critical."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26744
#, no-wrap
msgid "@code{percentage-action} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26747
msgid "When @code{use-percentage-for-policy?} is @code{#t}, this sets the percentage at which action will be taken."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26748
#, no-wrap
msgid "@code{time-low} (default: @code{1200})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26751
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which the battery is considered low."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26752
#, no-wrap
msgid "@code{time-critical} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26755
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which the battery is considered critical."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26756
#, no-wrap
msgid "@code{time-action} (default: @code{120})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26759
msgid "When @code{use-time-for-policy?} is @code{#f}, this sets the time remaining in seconds at which action will be taken."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26760
#, no-wrap
msgid "@code{critical-power-action} (default: @code{'hybrid-sleep})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26763
msgid "The action taken when @code{percentage-action} or @code{time-action} is reached (depending on the configuration of @code{use-percentage-for-policy?})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:26765 guix-git/doc/guix.texi:26951
#: guix-git/doc/guix.texi:26983 guix-git/doc/guix.texi:27003
#: guix-git/doc/guix.texi:27224 guix-git/doc/guix.texi:27242
#: guix-git/doc/guix.texi:27273 guix-git/doc/guix.texi:27286
#: guix-git/doc/guix.texi:27336
msgid "Possible values are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26769
msgid "'power-off"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26772
msgid "'hibernate"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:26775
msgid "@code{'hybrid-sleep}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26780
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "udisks-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26791
msgid "Type for the service that runs @uref{https://udisks.freedesktop.org/docs/latest/, UDisks}, a @dfn{disk management} daemon that provides user interfaces with notifications and ways to mount/unmount disks.  Programs that talk to UDisks include the @command{udisksctl} command, part of UDisks, and GNOME Disks.  Note that Udisks relies on the @command{mount} command, so it will only be able to use the file-system utilities installed in the system profile.  For example if you want to be able to mount NTFS file-systems in read and write fashion, you'll need to have @code{ntfs-3g} installed system-wide."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26793
msgid "The value for this service is a @code{<udisks-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26795
#, no-wrap
msgid "{Data Type} udisks-configuration"
msgstr "{Tipo de dados} udisks-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26797
#, fuzzy
msgid "Data type representing the configuration for @code{udisks-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26799
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{udisks} (default: @code{udisks}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26801
msgid "Package object for UDisks."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26805
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gvfs-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26810
msgid "Type for the service that provides virtual file systems for GIO applications, which enables support for @code{trash://}, @code{ftp://}, @code{sftp://} and many other location schemas in file managers like Nautilus (GNOME Files) and Thunar."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26812
msgid "The value for this service is a @code{<gvfs-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26814
#, no-wrap
msgid "{Data Type} gvfs-configuration"
msgstr "{Tipo de dados} gvfs-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26816
#, fuzzy
msgid "Data type representing the configuration for @code{gvfs-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26818
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{gvfs} (default: @code{gvfs}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:26820
#, fuzzy
#| msgid "Package Modules"
msgid "Package object for GVfs."
msgstr "Módulos de pacote"

#. type: defvar
#: guix-git/doc/guix.texi:26824
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "colord-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26831
msgid "This is the type of the service that runs @command{colord}, a system service with a D-Bus interface to manage the color profiles of input and output devices such as screens and scanners.  It is notably used by the GNOME Color Manager graphical tool.  See @uref{https://www.freedesktop.org/software/colord/, the colord web site} for more information."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:26833
#, no-wrap
msgid "scanner access"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26834
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "sane-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26840
msgid "This service provides access to scanners @i{via} @uref{http://www.sane-project.org, SANE} by installing the necessary udev rules.  It is included in @code{%desktop-services} (@pxref{Desktop Services}) and relies by default on @code{sane-backends-minimal} package (see below) for hardware support."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26842
#, no-wrap
msgid "sane-backends-minimal"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26845
msgid "The default package which the @code{sane-service-type} installs.  It supports many recent scanners."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26847
#, fuzzy, no-wrap
#| msgid "--list-backends"
msgid "sane-backends"
msgstr "--list-backends"

#. type: defvar
#: guix-git/doc/guix.texi:26854
msgid "This package includes support for all scanners that @code{sane-backends-minimal} supports, plus older Hewlett-Packard scanners supported by @code{hplip} package.  In order to use this on a system which relies on @code{%desktop-services}, you may use @code{modify-services} (@pxref{Service Reference, @code{modify-services}}) as illustrated below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26863
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules\n"
"  @dots{}\n"
"  desktop)\n"
"(use-package-modules\n"
"  @dots{}\n"
"  scanner)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26868
#, no-wrap
msgid ""
"(define %my-desktop-services\n"
"  ;; List of desktop services that supports a broader range of scanners.\n"
"  (modify-services %desktop-services\n"
"    (sane-service-type _ => sane-backends)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26872
#, no-wrap
msgid ""
"(operating-system\n"
"  @dots{}\n"
"  (services %my-desktop-services))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:26875
#, no-wrap
msgid "{Procedure} geoclue-application name [#:allowed? #t] [#:system? #f] [#:users '()]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:26884
msgid "Return a configuration allowing an application to access GeoClue location data.  @var{name} is the Desktop ID of the application, without the @code{.desktop} part.  If @var{allowed?} is true, the application will have access to location information by default.  The boolean @var{system?} value indicates whether an application is a system component or not.  Finally @var{users} is a list of UIDs of all users for which this application is allowed location info access.  An empty users list means that all users are allowed."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26886
#, no-wrap
msgid "%standard-geoclue-applications"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26893
msgid "The standard list of well-known GeoClue application configurations, granting authority to the GNOME date-and-time utility to ask for the current location in order to set the time zone, and allowing the IceCat and Epiphany web browsers to request location information.  IceCat and Epiphany both query the user before allowing a web page to know the user's location."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26895
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "geoclue-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26901
msgid "Type for the service that runs the @url{https://wiki.freedesktop.org/www/Software/GeoClue/, GeoClue} location service.  This service provides a D-Bus interface to allow applications to request access to a user's physical location, and optionally to add information to online location databases."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26903
msgid "The value for this service is a @code{<geoclue-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26908
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "bluetooth-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:26913
msgid "This is the type for the @uref{https://bluez.org/, Linux Bluetooth Protocol Stack} (BlueZ) system, which generates the @file{/etc/bluetooth/main.conf} configuration file.  The value for this type is a @command{bluetooth-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:26916
#, no-wrap
msgid "(service bluetooth-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:26919
msgid "See below for details about @code{bluetooth-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:26921
#, no-wrap
msgid "{Data Type} bluetooth-configuration"
msgstr "{Tipo de dados} bluetooth-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:26923
#, fuzzy
msgid "Data type representing the configuration for @code{bluetooth-service}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:26925
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{bluez} (default: @code{bluez})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26927
#, fuzzy
#| msgid "The GPM package to use."
msgid "@code{bluez} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:26928
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{\"BlueZ\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26930
msgid "Default adapter name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26931
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{class} (default: @code{#x000000})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26933
msgid "Default device class. Only the major and minor device class bits are considered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26934
#, fuzzy, no-wrap
#| msgid "@code{cache-size} (default: @code{150})"
msgid "@code{discoverable-timeout} (default: @code{180})"
msgstr "@code{cache-size} (default: @code{150})"

#. type: table
#: guix-git/doc/guix.texi:26937
msgid "How long to stay in discoverable mode before going back to non-discoverable. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26938
#, fuzzy, no-wrap
#| msgid "@code{gateway-ports?} (default: @code{#f})"
msgid "@code{always-pairable?} (default: @code{#f})"
msgstr "@code{gateway-ports?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26940
msgid "Always allow pairing even if there are no agents registered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26941
#, fuzzy, no-wrap
msgid "@code{pairable-timeout} (default: @code{0})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26944
msgid "How long to stay in pairable mode before going back to non-discoverable. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26945
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{device-id} (default: @code{#f})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26949
msgid "Use vendor id source (assigner), vendor, product and version information for DID profile support. The values are separated by \":\" and @var{assigner}, @var{VID}, @var{PID} and @var{version}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:26955
msgid "@code{#f} to disable it,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:26959
msgid "@code{\"assigner:1234:5678:abcd\"}, where @var{assigner} is either @code{usb} (default)  or @code{bluetooth}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26962
#, fuzzy, no-wrap
msgid "@code{reverse-service-discovery?} (default: @code{#t})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26968
msgid "Do reverse service discovery for previously unknown devices that connect to us. For BR/EDR this option is really only needed for qualification since the BITE tester doesn't like us doing reverse SDP for some test cases, for LE this disables the GATT client functionally so it can be used in system which can only operate as peripheral."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26969
#, fuzzy, no-wrap
#| msgid "@code{no-resolv?} (default: @code{#f})"
msgid "@code{name-resolving?} (default: @code{#t})"
msgstr "@code{no-resolv?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26972
msgid "Enable name resolving after inquiry. Set it to @code{#f} if you don't need remote devices name and want shorter discovery cycle."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26973
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{debug-keys?} (default: @code{#f})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:26977
msgid "Enable runtime persistency of debug link keys. Default is false which makes debug link keys valid only for the duration of the connection that they were created for."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26978
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{controller-mode} (default: @code{'dual})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:26981
msgid "Restricts all controllers to the specified transport. @code{'dual} means both BR/EDR and LE are enabled (if supported by the hardware)."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26987
msgid "'dual"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26990
msgid "'bredr"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:26993
msgid "'le"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:26996
#, fuzzy, no-wrap
#| msgid "@code{log-file} (default: @code{#f})"
msgid "@code{multi-profile} (default: @code{'off})"
msgstr "@code{log-file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27001
msgid "Enables Multi Profile Specification support. This allows to specify if system supports only Multiple Profiles Single Device (MPSD) configuration or both Multiple Profiles Single Device (MPSD) and Multiple Profiles Multiple Devices (MPMD) configurations."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27007
msgid "'off"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27010
msgid "'single"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27013
msgid "'multiple"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27016
#, no-wrap
msgid "@code{fast-connectable?} (default: @code{#f})"
msgstr "@code{fast-connectable?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27021
msgid "Permanently enables the Fast Connectable setting for adapters that support it. When enabled other devices can connect faster to us, however the tradeoff is increased power consumptions. This feature will fully work only on kernel version 4.1 and newer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27022
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{privacy} (default: @code{'off})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27024
msgid "Default privacy settings."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27028
msgid "@code{'off}: Disable local privacy"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27033
msgid "@code{'network/on}: A device will only accept advertising packets from peer devices that contain private addresses. It may not be compatible with some legacy devices since it requires the use of RPA(s) all the time"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27039
msgid "@code{'device}: A device in device privacy mode is only concerned about the privacy of the device and will accept advertising packets from peer devices that contain their Identity Address as well as ones that contain a private address, even if the peer device has distributed its IRK in the past"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27043
msgid "and additionally, if @var{controller-mode} is set to @code{'dual}:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27049
msgid "@code{'limited-network}: Apply Limited Discoverable Mode to advertising, which follows the same policy as to BR/EDR that publishes the identity address when discoverable, and Network Privacy Mode for scanning"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27054
msgid "@code{'limited-device}: Apply Limited Discoverable Mode to advertising, which follows the same policy as to BR/EDR that publishes the identity address when discoverable, and Device Privacy Mode for scanning."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27057
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{just-works-repairing} (default: @code{'never})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27059
msgid "Specify the policy to the JUST-WORKS repairing initiated by peer."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27061 guix-git/doc/guix.texi:27086
#: guix-git/doc/guix.texi:27303
msgid "Possible values:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27064
msgid "'never"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27067
#, fuzzy
#| msgid "config"
msgid "'confirm"
msgstr "config"

#. type: code{#1}
#: guix-git/doc/guix.texi:27070
msgid "'always"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27073
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{3306})"
msgid "@code{temporary-timeout} (default: @code{30})"
msgstr "@code{porta} (default: @code{3306})"

#. type: table
#: guix-git/doc/guix.texi:27076
msgid "How long to keep temporary devices around. The value is in seconds. @code{0} disables the timer completely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27077
#, fuzzy, no-wrap
#| msgid "@code{persistent?} (default: @code{#t})"
msgid "@code{refresh-discovery?} (default: @code{#t})"
msgstr "@code{persistent?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27080
msgid "Enables the device to issue an SDP request to update known services when profile is connected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27081
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{experimental} (default: @code{#f})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27084
msgid "Enables experimental features and interfaces, alternatively a list of UUIDs can be given."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27090
msgid "#t"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27093
msgid "#f"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27096 guix-git/doc/guix.texi:27310
msgid "@code{(list (uuid <uuid-1>) (uuid <uuid-2>) ...)}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27099
msgid "List of possible UUIDs:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27102
msgid "@code{d4992530-b9ec-469f-ab01-6c481c47da1c}: BlueZ Experimental Debug,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27105
msgid "@code{671b10b5-42c0-4696-9227-eb28d1b049d6}: BlueZ Experimental Simultaneous Central and Peripheral,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27108
msgid "@code{15c0a148-c273-11ea-b3de-0242ac130004}: BlueZ Experimental LL privacy,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27111
msgid "@code{330859bc-7506-492d-9370-9a6f0614037f}: BlueZ Experimental Bluetooth Quality Report,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27114
msgid "@code{a6695ace-ee7f-4fb9-881a-5fac66c629af}: BlueZ Experimental Offload Codecs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27116
#, fuzzy, no-wrap
msgid "@code{remote-name-request-retry-delay} (default: @code{300})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27119
msgid "The duration to avoid retrying to resolve a peer's name, if the previous try failed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27120
#, fuzzy, no-wrap
#| msgid "@code{snippet} (default: @code{#f})"
msgid "@code{page-scan-type} (default: @code{#f})"
msgstr "@code{snippet} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27122
msgid "BR/EDR Page scan activity type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27123
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{page-scan-interval} (default: @code{#f})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27125
msgid "BR/EDR Page scan activity interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27126
#, fuzzy, no-wrap
#| msgid "@code{password} (default: @code{#f})"
msgid "@code{page-scan-window} (default: @code{#f})"
msgstr "@code{password} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27128
msgid "BR/EDR Page scan activity window."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27129
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{inquiry-scan-type} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27131
msgid "BR/EDR Inquiry scan activity type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27132
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{inquiry-scan-interval} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27134
msgid "BR/EDR Inquiry scan activity interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27135
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{inquiry-scan-window} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27137
msgid "BR/EDR Inquiry scan activity window."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27138
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{link-supervision-timeout} (default: @code{#f})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27140
msgid "BR/EDR Link supervision timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27141
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{page-timeout} (default: @code{#f})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27143
msgid "BR/EDR Page timeout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27144
#, fuzzy, no-wrap
#| msgid "@code{no-newline?} (default: @code{#f})"
msgid "@code{min-sniff-interval} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27146
msgid "BR/EDR minimum sniff interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27147
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-sniff-interval} (default: @code{#f})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27149
msgid "BR/EDR maximum sniff interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27150
#, fuzzy, no-wrap
#| msgid "@code{ttl} (default: @code{#f})"
msgid "@code{min-advertisement-interval} (default: @code{#f})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27152
msgid "LE minimum advertisement interval (used for legacy advertisement only)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27153
#, fuzzy, no-wrap
msgid "@code{max-advertisement-interval} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27155
msgid "LE maximum advertisement interval (used for legacy advertisement only)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27156
#, fuzzy, no-wrap
msgid "@code{multi-advertisement-rotation-interval} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27158
msgid "LE multiple advertisement rotation interval."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27159
#, fuzzy, no-wrap
#| msgid "@code{no-newline?} (default: @code{#f})"
msgid "@code{scan-interval-auto-connect} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27161
msgid "LE scanning interval used for passive scanning supporting auto connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27162
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{scan-window-auto-connect} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27164
msgid "LE scanning window used for passive scanning supporting auto connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27165
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{scan-interval-suspend} (default: @code{#f})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27167
msgid "LE scanning interval used for active scanning supporting wake from suspend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27168
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{scan-window-suspend} (default: @code{#f})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27170
msgid "LE scanning window used for active scanning supporting wake from suspend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27171
#, fuzzy, no-wrap
#| msgid "@code{no-newline?} (default: @code{#f})"
msgid "@code{scan-interval-discovery} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27173
msgid "LE scanning interval used for active scanning supporting discovery."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27174
#, fuzzy, no-wrap
#| msgid "@code{no-issue?} (default: @code{#f})"
msgid "@code{scan-window-discovery} (default: @code{#f})"
msgstr "@code{no-issue?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27176
msgid "LE scanning window used for active scanning supporting discovery."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27177
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{scan-interval-adv-monitor} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27179
msgid "LE scanning interval used for passive scanning supporting the advertisement monitor APIs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27180
#, fuzzy, no-wrap
#| msgid "@code{wide-area?} (default: @code{#f})"
msgid "@code{scan-window-adv-monitor} (default: @code{#f})"
msgstr "@code{wide-area?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27182
msgid "LE scanning window used for passive scanning supporting the advertisement monitor APIs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27183
#, fuzzy, no-wrap
#| msgid "@code{no-newline?} (default: @code{#f})"
msgid "@code{scan-interval-connect} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27185
msgid "LE scanning interval used for connection establishment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27186
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{scan-window-connect} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27188
msgid "LE scanning window used for connection establishment."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27189
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{min-connection-interval} (default: @code{#f})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27192
msgid "LE default minimum connection interval. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27193
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{max-connection-interval} (default: @code{#f})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27196
msgid "LE default maximum connection interval. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27197
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{connection-latency} (default: @code{#f})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27200
msgid "LE default connection latency. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27201
#, fuzzy, no-wrap
#| msgid "@code{no-reset?} (default: @code{#f})"
msgid "@code{connection-supervision-timeout} (default: @code{#f})"
msgstr "@code{no-reset?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27204
msgid "LE default connection supervision timeout. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27205
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{autoconnect-timeout} (default: @code{#f})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27208
msgid "LE default autoconnect timeout. This value is superseded by any specific value provided via the Load Connection Parameters interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27209
#, fuzzy, no-wrap
#| msgid "@code{allow-agent-forwarding?} (default: @code{#t})"
msgid "@code{adv-mon-allowlist-scan-duration} (default: @code{300})"
msgstr "@code{allow-agent-forwarding?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27212
msgid "Allowlist scan duration during interleaving scan. Only used when scanning for ADV monitors. The units are msec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27213
#, fuzzy, no-wrap
#| msgid "@code{zonefile-load} (default: @code{#f})"
msgid "@code{adv-mon-no-filter-scan-duration} (default: @code{500})"
msgstr "@code{zonefile-load} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27216
msgid "No filter scan duration during interleaving scan. Only used when scanning for ADV monitors. The units are msec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27217
#, fuzzy, no-wrap
#| msgid "@code{negative-cache?} (default: @code{#t})"
msgid "@code{enable-adv-mon-interleave-scan?} (default: @code{#t})"
msgstr "@code{negative-cache?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27219
msgid "Enable/Disable Advertisement Monitor interleave scan for power saving."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27220
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{cache} (default: @code{'always})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27222
msgid "GATT attribute cache."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27230
msgid "@code{'always}: Always cache attributes even for devices not paired, this is recommended as it is best for interoperability, with more consistent reconnection times and enables proper tracking of notifications for all devices"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27233
msgid "@code{'yes}: Only cache attributes of paired devices"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27236
msgid "@code{'no}: Never cache attributes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27238
#, fuzzy, no-wrap
#| msgid "@code{cache-size} (default: @code{150})"
msgid "@code{key-size} (default: @code{0})"
msgstr "@code{cache-size} (default: @code{150})"

#. type: table
#: guix-git/doc/guix.texi:27240
msgid "Minimum required Encryption Key Size for accessing secured characteristics."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27245
msgid "@code{0}: Don't care"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27248
msgid "7 <= N <= 16"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27250
#, fuzzy, no-wrap
#| msgid "@code{challenge} (default: @code{#f})"
msgid "@code{exchange-mtu} (default: @code{517})"
msgstr "@code{challenge} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27252
msgid "Exchange MTU size. Possible values are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27256
msgid "23 <= N <= 517"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27258
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{att-channels} (default: @code{3})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27260
msgid "Number of ATT channels. Possible values are:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27264
msgid "@code{1}: Disables EATT"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27267
msgid "2 <= N <= 5"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27269
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{session-mode} (default: @code{'basic})"
msgstr "@code{node} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27271
msgid "AVDTP L2CAP signalling channel mode."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27277 guix-git/doc/guix.texi:27290
msgid "@code{'basic}: Use L2CAP basic mode"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27280
msgid "@code{'ertm}: Use L2CAP enhanced retransmission mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27282
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{stream-mode} (default: @code{'basic})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27284
msgid "AVDTP L2CAP transport channel mode."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27293
msgid "@code{'streaming}: Use L2CAP streaming mode."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27295
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{reconnect-uuids} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:27301
msgid "The ReconnectUUIDs defines the set of remote services that should try to be reconnected to in case of a link loss (link supervision timeout). The policy plugin should contain a sane set of values by default, but this list can be overridden here. By setting the list to empty the reconnection feature gets disabled."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27307
msgid "'()"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27312
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{reconnect-attempts} (default: @code{7})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27315
msgid "Defines the number of attempts to reconnect after a link lost. Setting the value to 0 disables reconnecting feature."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27316
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{reconnect-intervals} (default: @code{'(1 2 4 8 16 32 64)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:27320
msgid "Defines a list of intervals in seconds to use in between attempts. If the number of attempts defined in @var{reconnect-attempts} is bigger than the list of intervals the last interval is repeated until the last attempt."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27321
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{auto-enable?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27324
msgid "Defines option to enable all controllers when they are found. This includes adapters present on start as well as adapters that are plugged in later on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27325
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{resume-delay} (default: @code{2})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27330
msgid "Audio devices that were disconnected due to suspend will be reconnected on resume. @var{resume-delay} determines the delay between when the controller resumes from suspend and a connection attempt is made. A longer delay is better for better co-existence with Wi-Fi. The value is in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27331
#, fuzzy, no-wrap
#| msgid "@code{snippet} (default: @code{#f})"
msgid "@code{rssi-sampling-period} (default: @code{#xFF})"
msgstr "@code{snippet} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27334
msgid "Default RSSI Sampling Period. This is used when a client registers an advertisement monitor and leaves the RSSISamplingPeriod unset."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27339
msgid "@code{#x0}: Report all advertisements"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27342
msgid "@code{N = #xXX}: Report advertisements every N x 100 msec (range: #x01 to #xFE)"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:27345
msgid "@code{#xFF}: Report only one advertisement per device during monitoring period."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27350
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gnome-keyring-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27356
msgid "This is the type of the service that adds the @uref{https://wiki.gnome.org/Projects/GnomeKeyring, GNOME Keyring}.  Its value is a @code{gnome-keyring-configuration} object (see below).  Note that there is no need to use this service when using @code{gnome-desktop-service-type}, which includes it."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27360
msgid "This service adds the @code{gnome-keyring} package to the system profile and extends PAM with entries using @code{pam_gnome_keyring.so}, unlocking a user's login keyring when they log in or setting its password with passwd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27362
#, no-wrap
msgid "{Data Type} gnome-keyring-configuration"
msgstr "{Tipo de dados} gnome-keyring-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27364
msgid "Configuration record for the GNOME Keyring service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27366
#, no-wrap
msgid "@code{keyring} (default: @code{gnome-keyring})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27368
msgid "The GNOME keyring package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27369 guix-git/doc/guix.texi:27408
#, no-wrap
msgid "pam-services"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27374
msgid "A list of @code{(@var{service} . @var{kind})} pairs denoting PAM services to extend, where @var{service} is the name of an existing service to extend and @var{kind} is one of @code{login} or @code{passwd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27380
msgid "If @code{login} is given, it adds an optional @code{pam_gnome_keyring.so} to the auth block without arguments and to the session block with @code{auto_start}.  If @code{passwd} is given, it adds an optional @code{pam_gnome_keyring.so} to the password block without arguments."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27383
msgid "By default, this field contains ``gdm-password'' with the value @code{login} and ``passwd'' is with the value @code{passwd}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27386
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "kwallet-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27394
msgid "This is the type of the service that adds the @uref{https://invent.kde.org/plasma/kwallet-pam, KWallet keyring}.  Its value is a @code{kwallet-configuration} object (see below).  Note that, contrary to @code{gnome-desktop-service-type}, which includes the respective keyring for that service, @code{gnome-keyring-service-type}, @code{plasma-desktop-service-type} does not include @code{kwallet-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27399
msgid "This service adds the @code{kwallet-pam} package to the system profile and extends PAM with entries using @code{pam_kwallet5.so}.  It can unlock the user's login keyring or set their password with @command{passwd} at the time they log in."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27401
#, fuzzy, no-wrap
#| msgid "{Data Type} agetty-configuration"
msgid "{Data Type} kwallet-configuration"
msgstr "{Tipo de dados} agetty-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27403
#, fuzzy
msgid "Configuration record for the KWallet Keyring service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:27405
#, fuzzy, no-wrap
#| msgid "@code{key} (default: @code{#f})"
msgid "@code{keyring} (default: @code{kwallet-pam})"
msgstr "@code{key} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27407
#, fuzzy
msgid "The KWallet keyring package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:27413
msgid "A list of @code{(@var{service} . @var{kind})} pairs denoting PAM services to extend, where @var{service} is the name of an existing service to extend and @var{kind} is one of @code{login} or @code{passwd} symbols."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27419
msgid "If @code{login} is given, it adds an optional @code{pam_kwallet5.so} to the auth block without arguments and to the session block with @code{auto_start}.  If @code{passwd} is given, it adds an optional @code{pam_kwallet5.so} to the password block without arguments."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27423
msgid "By default, it takes for value an alist associating the @code{\"sddm\"} key with the @code{'login} value, and the @code{\"passwd\"} key with the @code{'passwd} value."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27426
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "seatd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27429
msgid "@uref{https://sr.ht/~kennylevinsen/seatd/, seatd} is a minimal seat management daemon."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27432
msgid "Seat management takes care of mediating access to shared devices (graphics, input), without requiring the applications needing access to be root."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27438
#, no-wrap
msgid ""
"(append\n"
"  (list\n"
"   ;; make sure seatd is running\n"
"   (service seatd-service-type))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27441
#, no-wrap
msgid ""
"  ;; normally one would want %base-services\n"
"  %base-services)\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27450
msgid "@code{seatd} operates over a UNIX domain socket, with @code{libseat} providing the client side of the protocol.  Applications that acquire access to the shared resources via @code{seatd} (e.g. @code{sway})  need to be able to talk to this socket.  This can be achieved by adding the user they run under to the group owning @code{seatd}'s socket (usually ``seat''), like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27461
#, no-wrap
msgid ""
"(user-account\n"
"  (name \"alice\")\n"
"  (group \"users\")\n"
"  (supplementary-groups '(\"wheel\"   ; allow use of sudo, etc.\n"
"                          \"seat\"    ; seat management\n"
"                          \"audio\"   ; sound card\n"
"                          \"video\"   ; video devices such as webcams\n"
"                          \"cdrom\")) ; the good ol' CD-ROM\n"
"  (comment \"Bob's sister\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27466
msgid "Depending on your setup, you will have to not only add regular users, but also system users to this group.  For instance, some greetd greeters require graphics and therefore also need to negotiate with seatd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27469
#, no-wrap
msgid "{Data Type} seatd-configuration"
msgstr "{Tipo de dados} seatd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27471
#, fuzzy
msgid "Configuration record for the seatd daemon service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:27473
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{seatd} (default: @code{seatd})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27475
#, fuzzy
#| msgid "The GPM package to use."
msgid "The seatd package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:27476
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @samp{\"seat\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27478
msgid "Group to own the seatd socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27479
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{socket} (default: @samp{\"/run/seatd.sock\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:27481
msgid "Where to create the seatd socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27482
#, fuzzy, no-wrap
msgid "@code{logfile} (default: @samp{\"/var/log/seatd.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:27484
msgid "Log file to write to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27485
#, fuzzy, no-wrap
#| msgid "@code{log-level} (default: @code{'info})"
msgid "@code{loglevel} (default: @samp{\"error\"})"
msgstr "@code{log-level} (default: @code{'info})"

#. type: table
#: guix-git/doc/guix.texi:27488
msgid "Log level to output logs. Possible values: @samp{\"silent\"}, @samp{\"error\"}, @samp{\"info\"} and @samp{\"debug\"}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27496
#, no-wrap
msgid "sound support"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27497
#, no-wrap
msgid "ALSA"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27498
#, no-wrap
msgid "PulseAudio, sound support"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27503
msgid "The @code{(gnu services sound)} module provides a service to configure the Advanced Linux Sound Architecture (ALSA) system, which makes PulseAudio the preferred ALSA output driver."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27504
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "alsa-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27509
msgid "This is the type for the @uref{https://alsa-project.org/, Advanced Linux Sound Architecture} (ALSA) system, which generates the @file{/etc/asound.conf} configuration file.  The value for this type is a @command{alsa-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27512
#, no-wrap
msgid "(service alsa-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27515
msgid "See below for details about @code{alsa-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27517
#, no-wrap
msgid "{Data Type} alsa-configuration"
msgstr "{Tipo de dados} alsa-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27519
msgid "Data type representing the configuration for @code{alsa-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27521
#, no-wrap
msgid "@code{alsa-plugins} (default: @var{alsa-plugins})"
msgstr "@code{alsa-plugins} (default: @var{alsa-plugins})"

#. type: table
#: guix-git/doc/guix.texi:27523
msgid "@code{alsa-plugins} package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27524
#, no-wrap
msgid "@code{pulseaudio?} (default: @var{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27527
msgid "Whether ALSA applications should transparently be made to use the @uref{https://www.pulseaudio.org/, PulseAudio} sound server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27531
msgid "Using PulseAudio allows you to run several sound-producing applications at the same time and to individual control them @i{via} @command{pavucontrol}, among other things."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27532
#, no-wrap
msgid "@code{extra-options} (default: @var{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27534
msgid "String to append to the @file{/etc/asound.conf} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27540
msgid "Individual users who want to override the system configuration of ALSA can do it with the @file{~/.asoundrc} file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27546
#, no-wrap
msgid ""
"# In guix, we have to specify the absolute path for plugins.\n"
"pcm_type.jack @{\n"
"  lib \"/home/alice/.guix-profile/lib/alsa-lib/libasound_module_pcm_jack.so\"\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27555
#, no-wrap
msgid ""
"# Routing ALSA to jack:\n"
"# <http://jackaudio.org/faq/routing_alsa.html>.\n"
"pcm.rawjack @{\n"
"  type jack\n"
"  playback_ports @{\n"
"    0 system:playback_1\n"
"    1 system:playback_2\n"
"  @}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27561
#, no-wrap
msgid ""
"  capture_ports @{\n"
"    0 system:capture_1\n"
"    1 system:capture_2\n"
"  @}\n"
"@}\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27568
#, no-wrap
msgid ""
"pcm.!default @{\n"
"  type plug\n"
"  slave @{\n"
"    pcm \"rawjack\"\n"
"  @}\n"
"@}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27572
msgid "See @uref{https://www.alsa-project.org/main/index.php/Asoundrc} for the details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27573
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pulseaudio-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27577
msgid "This is the type for the @uref{https://www.pulseaudio.org/, PulseAudio} sound server.  It exists to allow system overrides of the default settings via @code{pulseaudio-configuration}, see below."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:27583
msgid "This service overrides per-user configuration files.  If you want PulseAudio to honor configuration files in @file{~/.config/pulse}, you have to unset the environment variables @env{PULSE_CONFIG} and @env{PULSE_CLIENTCONFIG} in your @file{~/.bash_profile}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:27591
msgid "This service on its own does not ensure, that the @code{pulseaudio} package exists on your machine.  It merely adds configuration files for it, as detailed below.  In the (admittedly unlikely) case, that you find yourself without a @code{pulseaudio} package, consider enabling it through the @code{alsa-service-type} above."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27594
#, no-wrap
msgid "{Data Type} pulseaudio-configuration"
msgstr "{Tipo de dados} pulseaudio-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27596
msgid "Data type representing the configuration for @code{pulseaudio-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27598
#, no-wrap
msgid "@code{client-conf} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27603
msgid "List of settings to set in @file{client.conf}.  Accepts a list of strings or symbol-value pairs.  A string will be inserted as-is with a newline added.  A pair will be formatted as ``key = value'', again with a newline added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27604
#, no-wrap
msgid "@code{daemon-conf} (default: @code{'((flat-volumes . no))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27607
msgid "List of settings to set in @file{daemon.conf}, formatted just like @var{client-conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27608
#, no-wrap
msgid "@code{script-file} (default: @code{(file-append pulseaudio \"/etc/pulse/default.pa\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27613
msgid "Script file to use as @file{default.pa}.  In case the @code{extra-script-files} field below is used, an @code{.include} directive pointing to @file{/etc/pulse/default.pa.d} is appended to the provided script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27614
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{extra-script-files} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:27621
msgid "A list of file-like objects defining extra PulseAudio scripts to run at the initialization of the @command{pulseaudio} daemon, after the main @code{script-file}.  The scripts are deployed to the @file{/etc/pulse/default.pa.d} directory; they should have the @samp{.pa} file name extension.  For a reference of the available commands, refer to @command{man pulse-cli-syntax}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27622
#, no-wrap
msgid "@code{system-script-file} (default: @code{(file-append pulseaudio \"/etc/pulse/system.pa\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27624
msgid "Script file to use as @file{system.pa}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27629
msgid "The example below sets the default PulseAudio card profile, the default sink and the default source to use for a old SoundBlaster Audigy sound card:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27638
#, no-wrap
msgid ""
"(pulseaudio-configuration\n"
" (extra-script-files\n"
"  (list (plain-file \"audigy.pa\"\n"
"                    (string-append \"\\\n"
"set-card-profile alsa_card.pci-0000_01_01.0 \\\n"
"  output:analog-surround-40+input:analog-mono\n"
"set-default-source alsa_input.pci-0000_01_01.0.analog-mono\n"
"set-default-sink alsa_output.pci-0000_01_01.0.analog-surround-40\\n\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27646
msgid "Note that @code{pulseaudio-service-type} is part of @code{%desktop-services}; if your operating system declaration was derived from one of the desktop templates, you'll want to adjust the above example to modify the existing @code{pulseaudio-service-type} via @code{modify-services} (@pxref{Service Reference, @code{modify-services}}), instead of defining a new one."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27649
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ladspa-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27652
msgid "This service sets the @var{LADSPA_PATH} variable, so that programs, which respect it, e.g.@: PulseAudio, can load LADSPA plugins."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27655
msgid "The following example will setup the service to enable modules from the @code{swh-plugins} package:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27659
#, no-wrap
msgid ""
"(service ladspa-service-type\n"
"         (ladspa-configuration (plugins (list swh-plugins))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27663
msgid "See @uref{http://plugin.org.uk/ladspa-swh/docs/ladspa-swh.html} for the details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:27666
#, fuzzy, no-wrap
#| msgid "System Services"
msgid "Speaker Safety Daemon System Service"
msgstr "Serviços do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:27672
msgid "@uref{https://github.com/AsahiLinux/speakersafetyd, Speaker Safety Daemon} is a user-space daemon that implements an analogue of the Texas Instruments Smart Amp speaker protection model.  It can be used to protect the speakers on Apple Silicon devices."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27673
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "speakersafetyd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27676
msgid "This is the type for the @code{speakersafetyd} system service, whose value is a @command{speakersafetyd-configuration} record."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27679
#, fuzzy, no-wrap
msgid "(service speakersafetyd-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:27682
msgid "See below for details about @code{speakersafetyd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27685
#, fuzzy, no-wrap
#| msgid "{Data Type} seatd-configuration"
msgid "{Data Type} speakersafetyd-configuration"
msgstr "{Tipo de dados} seatd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27687
#, fuzzy
msgid "Available @code{speakersafetyd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:27689
#, fuzzy, no-wrap
msgid "@code{blackbox-directory} (default: @code{\"/var/lib/speakersafetyd/blackbox\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27694
msgid "The directory to which blackbox files are written when the speakers are getting too hot.  The blackbox files contain audio and debug information which the developers of @code{speakersafetyd} might ask for when reporting bugs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27695
#, fuzzy, no-wrap
msgid "@code{configuration-directory} (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27698
msgid "The base directory as a G-expression (@pxref{G-Expressions}) that contains the configuration files of the speaker models."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27699
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{\"speakersafetyd\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27701
#, fuzzy
msgid "The group to run the Speaker Safety Daemon as."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:27702
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/speakersafetyd.log\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27704
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The file name to the Speaker Safety Daemon log file."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:27705
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{maximum-gain-reduction} (default: @code{7}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27707
msgid "Maximum gain reduction before panicking, useful for debugging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27708
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{speakersafetyd} (default: @code{speakersafetyd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27710
#, fuzzy
msgid "The Speaker Safety Daemon package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:27711
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{\"speakersafetyd\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27713
#, fuzzy
msgid "The user to run the Speaker Safety Daemon as."
msgstr "O pacote GPM a ser usado."

#. type: cindex
#: guix-git/doc/guix.texi:27722
#, no-wrap
msgid "searching for a file"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27726
msgid "The services in this section populate @dfn{file databases} that let you search for files on your machine.  These services are provided by the @code{(gnu services admin)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27732
msgid "The first one, @code{file-database-service-type}, periodically runs the venerable @command{updatedb} command (@pxref{Invoking updatedb,,, find, GNU Findutils}).  That command populates a database of file names that you can then search with the @command{locate} command (@pxref{Invoking locate,,, find, GNU Findutils}), as in this example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27735
#, no-wrap
msgid "locate important-notes.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27739
msgid "You can enable this service with its default settings by adding this snippet to your operating system services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27742
#, fuzzy, no-wrap
msgid "(service file-database-service-type)\n"
msgstr "(service file-database-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:27748
msgid "This updates the database once a week, excluding files from @file{/gnu/store}---these are more usefully handled by @command{guix locate} (@pxref{Invoking guix locate}).  You can of course provide a custom configuration, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27749
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "file-database-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27753
msgid "This is the type of the file database service, which runs @command{updatedb} periodically.  Its associated value must be a @code{file-database-configuration} record, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27755
#, no-wrap
msgid "{Data Type} file-database-configuration"
msgstr "{Tipo de dados} file-database-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27758
msgid "Record type for the @code{file-database-service-type} configuration, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27760
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{findutils})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27763
#, fuzzy
#| msgid "Package management commands."
msgid "The package from which the @command{updatedb} command is taken.  Examples of such packages are GNU@tie{}Findutils and Plocate."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:27764
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{schedule} (default: @code{%default-file-database-update-schedule})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27768
msgid "This is the schedule of database updates, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27769
#, fuzzy, no-wrap
msgid "@code{excluded-directories} (default @code{%default-file-database-excluded-directories})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27775
msgid "List of regular expressions of directories to ignore when building the file database.  By default, this includes @file{/tmp} and @file{/gnu/store}; the latter should instead be indexed by @command{guix locate} (@pxref{Invoking guix locate}).  This list is passed to the @option{--prunepaths} option of @command{updatedb} (@pxref{Invoking updatedb,,, find, GNU@tie{}Findutils})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27785
msgid "The second service, @code{package-database-service-type}, builds the database used by @command{guix locate}, which lets you search for packages that contain a given file (@pxref{Invoking guix locate}).  The service periodically updates a system-wide database, which will be readily available to anyone running @command{guix locate} on the system.  To use this service with its default settings, add this snippet to your service list:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27788
#, fuzzy, no-wrap
msgid "(service package-database-service-type)\n"
msgstr "(service package-database-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:27791
msgid "This will run @command{guix locate --update} once a week."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27792
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "package-database-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27796
msgid "This is the service type for periodic @command{guix locate} updates (@pxref{Invoking guix locate}).  Its value must be a @code{package-database-configuration} record, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27798
#, no-wrap
msgid "{Data Type} package-database-configuration"
msgstr "{Tipo de dados} package-database-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27801
msgid "Data type to configure periodic package database updates.  It has the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27803
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{guix})"
msgstr "@code{cache} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:27806
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{schedule} (default: @code{%default-package-database-update-schedule})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27811
msgid "This is the schedule of the periodic @command{guix locate --update} job, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27812
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{method} (default: @code{'store})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:27816
msgid "Indexing method for @command{guix locate}.  The default value, @code{'store}, yields a more complete database but is relatively expensive in terms of CPU and input/output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27820
msgid "G-exp denoting the channels to use when updating the database (@pxref{Channels})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27828
#, no-wrap
msgid "SQL"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:27830
msgid "The @code{(gnu services databases)} module provides the following services."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:27831
#, no-wrap
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: defvar
#: guix-git/doc/guix.texi:27833
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "postgresql-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:27838
msgid "The service type for the PostgreSQL database server.  Its value should be a valid @code{postgresql-configuration} object, documented below.  The following example describes a PostgreSQL service with the default configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27843
#, no-wrap
msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (postgresql postgresql)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27849
msgid "If the services fails to start, it may be due to an incompatible cluster already present in @var{data-directory}.  Adjust it (or, if you don't need the cluster anymore, delete @var{data-directory}), then restart the service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:27856
msgid "Peer authentication is used by default and the @code{postgres} user account has no shell (unless @code{allow-login?} is @code{#t}), which prevents the direct execution of @code{psql} commands as this user.  To use @code{psql}, you can temporarily log in as @code{postgres} using a shell, create a PostgreSQL superuser with the same name as one of the system users and then create the associated database."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27861
#, no-wrap
msgid ""
"sudo -u postgres -s /bin/sh\n"
"createuser --interactive\n"
"createdb $MY_USER_LOGIN      # Replace appropriately.\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27864
#, no-wrap
msgid "{Data Type} postgresql-configuration"
msgstr "{Tipo de dados} postgresql-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:27867
msgid "Data type representing the configuration for the @code{postgresql-service-type}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:27869
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "postgresql"
msgstr "guix-publish-service-type"

#. type: table
#: guix-git/doc/guix.texi:27871
msgid "PostgreSQL package to use for the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27872
#, no-wrap
msgid "@code{port} (default: @code{5432})"
msgstr "@code{port} (padrão: @code{5432})"

#. type: table
#: guix-git/doc/guix.texi:27874
msgid "Port on which PostgreSQL should listen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27877
msgid "Locale to use as the default when creating the database cluster."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27878
#, no-wrap
msgid "@code{config-file} (default: @code{(postgresql-config-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27882
msgid "The configuration file to use when running PostgreSQL@.  The default behaviour uses the postgresql-config-file record with the default values for the fields."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27883
#, no-wrap
msgid "@code{log-directory} (default: @code{\"/var/log/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27887
msgid "The directory where @command{pg_ctl} output will be written in a file named @code{\"pg_ctl.log\"}.  This file can be useful to debug PostgreSQL configuration errors for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27888
#, no-wrap
msgid "@code{data-directory} (default: @code{\"/var/lib/postgresql/data\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27890
msgid "Directory in which to store the data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27891
#, no-wrap
msgid "@code{extension-packages} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27892
#, no-wrap
msgid "postgresql extension-packages"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27897
msgid "Additional extensions are loaded from packages listed in @var{extension-packages}.  Extensions are available at runtime.  For instance, to create a geographic database using the @code{postgis} extension, a user can configure the postgresql-service as in this example:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:27898
#, no-wrap
msgid "postgis"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27901
#, no-wrap
msgid ""
"(use-package-modules databases geo)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27914
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  ;; postgresql is required to run `psql' but postgis is not required for\n"
"  ;; proper operation.\n"
"  (packages (cons* postgresql %base-packages))\n"
"  (services\n"
"    (cons*\n"
"      (service postgresql-service-type\n"
"               (postgresql-configuration\n"
"                (postgresql postgresql)\n"
"                (extension-packages (list postgis))))\n"
"      %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27918
msgid "Then the extension becomes visible and you can initialise an empty geographic database in this way:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:27925
#, no-wrap
msgid ""
"psql -U postgres\n"
"> create database postgistest;\n"
"> \\connect postgistest;\n"
"> create extension postgis;\n"
"> create extension postgis_topology;\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27930
msgid "There is no need to add this field for contrib extensions such as hstore or dblink as they are already loadable by postgresql.  This field is only required to add extensions provided by other packages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27931
#, fuzzy, no-wrap
#| msgid "@code{respawn?} (default: @code{#t})"
msgid "@code{create-account?} (default: @code{#t})"
msgstr "@code{respawn?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:27933
msgid "Whether or not the @code{postgres} user and group should be created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27934
#, fuzzy, no-wrap
#| msgid "@code{no-newline?} (default: @code{#f})"
msgid "@code{allow-login?} (default: @code{#f})"
msgstr "@code{no-newline?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27936
msgid "Whether or not to allow login into the created account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27937
#, fuzzy, no-wrap
msgid "@code{home-directory} (default: @code{\"/var/empty\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:27940
msgid "The home directory of the user.  It is strongly advised to change this if you set @code{allow-login?} to @code{#t}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27945
msgid "Explicitly specify the UID of the @code{postgres} daemon account.  You normally do not need to specify this, in which case a free UID will be automatically assigned."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27948
msgid "One situation where this option might be useful is if the @var{data-directory} is located on a mounted network share."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27949
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{gid} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:27951
msgid "Explicitly specify the GID of the @code{postgres} group."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:27955
#, no-wrap
msgid "{Data Type} postgresql-config-file"
msgstr "{Tipo de dados} postgresql-config-file"

#. type: deftp
#: guix-git/doc/guix.texi:27961
msgid "Data type representing the PostgreSQL configuration file.  As shown in the following example, this can be used to customize the configuration of PostgreSQL@.  Note that you can use any G-expression or filename in place of this record, if you already have a configuration file you'd like to use for example."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:27981
#, no-wrap
msgid ""
"(service postgresql-service-type\n"
"         (postgresql-configuration\n"
"          (config-file\n"
"           (postgresql-config-file\n"
"            (log-destination \"stderr\")\n"
"            (hba-file\n"
"             (plain-file \"pg_hba.conf\"\n"
"                         \"\n"
"local\tall\tall\t\t\ttrust\n"
"host\tall\tall\t127.0.0.1/32 \tmd5\n"
"host\tall\tall\t::1/128 \tmd5\"))\n"
"            (extra-config\n"
"             '((\"session_preload_libraries\"     \"auto_explain\")\n"
"               (\"random_page_cost\"              2)\n"
"               (\"auto_explain.log_min_duration\" \"100 ms\")\n"
"               (\"work_mem\"                      \"500 MB\")\n"
"               (\"logging_collector\"             #t)\n"
"               (\"log_directory\"                 \"/var/log/postgresql\")))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27984
#, no-wrap
msgid "@code{log-destination} (default: @code{\"syslog\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27987
msgid "The logging method to use for PostgreSQL@.  Multiple values are accepted, separated by commas."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27988
#, no-wrap
msgid "@code{hba-file} (default: @code{%default-postgres-hba})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27991
msgid "Filename or G-expression for the host-based authentication configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27992
#, no-wrap
msgid "@code{ident-file} (default: @code{%default-postgres-ident})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:27994
msgid "Filename or G-expression for the user name mapping configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:27995
#, fuzzy, no-wrap
msgid "@code{socket-directory} (default: @code{\"/var/run/postgresql\"})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28000
msgid "Specifies the directory of the Unix-domain socket(s) on which PostgreSQL is to listen for connections from client applications. If set to @code{\"\"} PostgreSQL does not listen on any Unix-domain sockets, in which case only TCP/IP sockets can be used to connect to the server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28003
msgid "By default, the @code{#false} value means the PostgreSQL default value will be used, which is currently @samp{/tmp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28008
msgid "List of additional keys and values to include in the PostgreSQL config file.  Each entry in the list should be a list where the first element is the key, and the remaining elements are the values."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28014
msgid "The values can be numbers, booleans or strings and will be mapped to PostgreSQL parameters types @code{Boolean}, @code{String}, @code{Numeric}, @code{Numeric with Unit} and @code{Enumerated} described @uref{https://www.postgresql.org/docs/current/config-setting.html, here}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28018
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "postgresql-role-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:28021
msgid "This service allows to create PostgreSQL roles and databases after PostgreSQL service start.  Here is an example of its use."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28029
#, no-wrap
msgid ""
"(service postgresql-role-service-type\n"
"            (postgresql-role-configuration\n"
"             (roles\n"
"              (list (postgresql-role\n"
"                     (name \"test\")\n"
"                     (create-database? #t))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28033
msgid "This service can be extended with extra roles, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28040
#, no-wrap
msgid ""
"(service-extension postgresql-role-service-type\n"
"                   (const (list\n"
"                           (postgresql-role\n"
"                            (name \"alice\")\n"
"                            (create-database? #t)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28043
#, no-wrap
msgid "{Data Type} postgresql-role"
msgstr "{Tipo de dados} postgresql-role"

#. type: deftp
#: guix-git/doc/guix.texi:28049
msgid "PostgreSQL manages database access permissions using the concept of roles.  A role can be thought of as either a database user, or a group of database users, depending on how the role is set up.  Roles can own database objects (for example, tables) and can assign privileges on those objects to other roles to control who has access to which objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28053
msgid "The role name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28054
#, no-wrap
msgid "@code{permissions} (default: @code{'(createdb login)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28058
msgid "The role permissions list.  Supported permissions are @code{bypassrls}, @code{createdb}, @code{createrole}, @code{login}, @code{replication} and @code{superuser}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28059
#, no-wrap
msgid "@code{create-database?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28061
msgid "whether to create a database with the same name as the role."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28062
#, fuzzy, no-wrap
#| msgid "@code{password} (default: @code{#f})"
msgid "@code{password-file} (default: @code{#f})"
msgstr "@code{password} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28065
msgid "A string representing the path of a file that contains the password to be set for the role."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28066
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{encoding} (default: @code{\"UTF8\"})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28068
msgid "The character set to use for storing text in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28069
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{collation} (default: @code{\"en_US.utf8\"})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28071
msgid "The string sort order locale setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28072
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{ctype} (default: @code{\"en_US.utf8\"})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28074
msgid "The character classification locale setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28075
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{template} (default: @code{\"template1\"})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28079
msgid "The default template to copy the new database from when creating it.  Use @code{\"template0\"} for a pristine database with no system-local modifications."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28083
#, no-wrap
msgid "{Data Type} postgresql-role-configuration"
msgstr "{Tipo de dados} postgresql-role-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:28086
msgid "Data type representing the configuration of @var{postgresql-role-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28088
#, no-wrap
msgid "@code{host} (default: @code{\"/var/run/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28090
msgid "The PostgreSQL host to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28091
#, no-wrap
msgid "@code{log} (default: @code{\"/var/log/postgresql_roles.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28093
msgid "File name of the log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28094
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{'(user-processes postgres)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:28099
msgid "The Shepherd services dependencies to use.  Add extra dependencies to @code{%default-postgresql-role-shepherd-requirement} to extend its value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28100
#, no-wrap
msgid "@code{roles} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28102
msgid "The initial PostgreSQL roles to create."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28105
#, no-wrap
msgid "MariaDB/MySQL"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28107
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mysql-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:28111
msgid "This is the service type for a MySQL or MariaDB database server.  Its value is a @code{mysql-configuration} object that specifies which package to use, as well as various settings for the @command{mysqld} daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28113
#, no-wrap
msgid "{Data Type} mysql-configuration"
msgstr "{Tipo de dados} mysql-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:28115
msgid "Data type representing the configuration of @var{mysql-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28117
#, no-wrap
msgid "@code{mysql} (default: @var{mariadb})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28120
msgid "Package object of the MySQL database server, can be either @var{mariadb} or @var{mysql}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28123
msgid "For MySQL, a temporary root password will be displayed at activation time.  For MariaDB, the root password is empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28124 guix-git/doc/guix.texi:32970
#, no-wrap
msgid "@code{bind-address} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28127
msgid "The IP on which to listen for network connections.  Use @code{\"0.0.0.0\"} to bind to all available network interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28128
#, no-wrap
msgid "@code{port} (default: @code{3306})"
msgstr "@code{port} (padrão: @code{3306})"

#. type: table
#: guix-git/doc/guix.texi:28130
msgid "TCP port on which the database server listens for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28131
#, no-wrap
msgid "@code{socket} (default: @code{\"/run/mysqld/mysqld.sock\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28133
msgid "Socket file to use for local (non-network) connections."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28136
msgid "Additional settings for the @file{my.cnf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28137
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{extra-environment} (default: @code{#~'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:28139
msgid "List of environment variables passed to the @command{mysqld} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28140
#, no-wrap
msgid "@code{auto-upgrade?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28145
msgid "Whether to automatically run @command{mysql_upgrade} after starting the service.  This is necessary to upgrade the @dfn{system schema} after ``major'' updates (such as switching from MariaDB 10.4 to 10.5), but can be disabled if you would rather do that manually."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28149
#, no-wrap
msgid "Memcached"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28151
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "memcached-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:28155
msgid "This is the service type for the @uref{https://memcached.org/, Memcached} service, which provides a distributed in memory cache.  The value for the service type is a @code{memcached-configuration} object."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28159
#, no-wrap
msgid "(service memcached-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28161
#, no-wrap
msgid "{Data Type} memcached-configuration"
msgstr "{Tipo de dados} memcached-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:28163
msgid "Data type representing the configuration of memcached."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28165
#, no-wrap
msgid "@code{memcached} (default: @code{memcached})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28167
msgid "The Memcached package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28168
#, no-wrap
msgid "@code{interfaces} (default: @code{'(\"0.0.0.0\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28170
msgid "Network interfaces on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28171
#, no-wrap
msgid "@code{tcp-port} (default: @code{11211})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28173
msgid "Port on which to accept connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28174
#, no-wrap
msgid "@code{udp-port} (default: @code{11211})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28177
msgid "Port on which to accept UDP connections on, a value of 0 will disable listening on a UDP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28178
#, no-wrap
msgid "@code{additional-options} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28180
msgid "Additional command line options to pass to @code{memcached}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28183
#, no-wrap
msgid "Redis"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28185
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "redis-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:28188
msgid "This is the service type for the @uref{https://redis.io/, Redis} key/value store, whose value is a @code{redis-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:28190
#, no-wrap
msgid "{Data Type} redis-configuration"
msgstr "{Tipo de dados} redis-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:28192
msgid "Data type representing the configuration of redis."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28194
#, no-wrap
msgid "@code{redis} (default: @code{redis})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28196
msgid "The Redis package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28197
#, no-wrap
msgid "@code{bind} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28199
msgid "Network interface on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28200
#, no-wrap
msgid "@code{port} (default: @code{6379})"
msgstr "@code{port} (padrão: @code{6379})"

#. type: table
#: guix-git/doc/guix.texi:28203
msgid "Port on which to accept connections on, a value of 0 will disable listening on a TCP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28204
#, no-wrap
msgid "@code{working-directory} (default: @code{\"/var/lib/redis\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28206
msgid "Directory in which to store the database and related files."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28212
#, no-wrap
msgid "mail"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:28213 guix-git/doc/guix.texi:30275
#, no-wrap
msgid "email"
msgstr "e-mail"

#. type: Plain text
#: guix-git/doc/guix.texi:28218
msgid "The @code{(gnu services mail)} module provides Guix service definitions for email services: IMAP, POP3, and LMTP servers, as well as mail transport agents (MTAs).  Lots of acronyms! These services are detailed in the subsections below."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:28219
#, no-wrap
msgid "Dovecot Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:28221
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dovecot-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:28224
msgid "Type for the service that runs the Dovecot IMAP/POP3/LMTP mail server, whose value is a @code{<dovecot-configuration>} object."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28234
msgid "By default, Dovecot does not need much configuration; the default configuration object created by @code{(dovecot-configuration)} will suffice if your mail is delivered to @code{~/Maildir}.  A self-signed certificate will be generated for TLS-protected connections, though Dovecot will also listen on cleartext ports by default.  There are a number of options, though, which mail administrators might need to change, and as is the case with other services, Guix allows the system administrator to specify these parameters via a uniform Scheme interface."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28237
msgid "For example, to specify that mail is located at @code{maildir~/.mail}, one would instantiate the Dovecot service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:28242
#, no-wrap
msgid ""
"(service dovecot-service-type\n"
"         (dovecot-configuration\n"
"           (mail-location \"maildir:~/.mail\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28250
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  There is also a way to specify the configuration as a string, if you have an old @code{dovecot.conf} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:28260
msgid "Available @code{dovecot-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28261
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} package dovecot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28263 guix-git/doc/guix.texi:29631
msgid "The dovecot package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28265
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} package-list extensions"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28269
msgid "A list of additional Dovecot plugin packages to make available at runtime. During service activation, the @file{lib/dovecot} directory from each specified package is combined with Dovecot's core modules into a unified module directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28271
#, fuzzy
#| msgid "For example, running:"
msgid "For example, to enable Sieve filtering:"
msgstr "Por exemplo, executando:"

#. type: lisp
#: guix-git/doc/guix.texi:28274
#, no-wrap
msgid "(extensions (list dovecot-pigeonhole))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28280
msgid "Each package in the list must provide its modules at @file{lib/dovecot}, as this is where @code{make-dovecot-moduledir} expects to find its extensions. The service combines these directories to create a unified module structure."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28282
msgid "The default value is an empty list, providing only core Dovecot functionality."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28284
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} comma-separated-string-list listen"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28290
msgid "A list of IPs or hosts where to listen for connections.  @samp{*} listens on all IPv4 interfaces, @samp{::} listens on all IPv6 interfaces.  If you want to specify non-default ports or anything more complex, customize the address and port fields of the @samp{inet-listener} of the specific services you are interested in."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28292
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} protocol-configuration-list protocols"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28295
msgid "List of protocols we want to serve.  Available protocols include @samp{imap}, @samp{pop3}, and @samp{lmtp}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28297
msgid "Available @code{protocol-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28298
#, no-wrap
msgid "{@code{protocol-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28300
msgid "The name of the protocol."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28302
#, no-wrap
msgid "{@code{protocol-configuration} parameter} string auth-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28306
msgid "UNIX socket path to the master authentication server to find users.  This is used by imap (for shared users) and lda.  It defaults to @samp{\"/var/run/dovecot/auth-userdb\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28308
#, no-wrap
msgid "{@code{protocol-configuration} parameter} boolean imap-metadata?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28313
msgid "Whether to enable the @code{IMAP METADATA} extension as defined in @uref{https://tools.ietf.org/html/rfc5464,RFC@tie{}5464}, which provides a means for clients to set and retrieve per-mailbox, per-user metadata and annotations over IMAP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28316
msgid "If this is @samp{#t}, you must also specify a dictionary @i{via} the @code{mail-attribute-dict} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28321
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list managesieve-notify-capabilities"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28326
msgid "Which NOTIFY capabilities to report to clients that first connect to the ManageSieve service, before authentication.  These may differ from the capabilities offered to authenticated users.  If this field is left empty, report what the Sieve interpreter supports by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28330
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list managesieve-sieve-capability"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28335
msgid "Which SIEVE capabilities to report to clients that first connect to the ManageSieve service, before authentication.  These may differ from the capabilities offered to authenticated users.  If this field is left empty, report what the Sieve interpreter supports by default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28340
#, no-wrap
msgid "{@code{protocol-configuration} parameter} space-separated-string-list mail-plugins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28342
msgid "Space separated list of plugins to load."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28344
#, no-wrap
msgid "{@code{protocol-configuration} parameter} non-negative-integer mail-max-userip-connections"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28348
msgid "Maximum number of IMAP connections allowed for a user from each IP address.  NOTE: The username is compared case-sensitively.  Defaults to @samp{10}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28352
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} service-configuration-list services"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28356
msgid "List of services to enable.  Available services include @samp{imap}, @samp{imap-login}, @samp{pop3}, @samp{pop3-login}, @samp{auth}, and @samp{lmtp}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28358
msgid "Available @code{service-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28359
#, no-wrap
msgid "{@code{service-configuration} parameter} string kind"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28364
msgid "The service kind.  Valid values include @code{director}, @code{imap-login}, @code{pop3-login}, @code{lmtp}, @code{imap}, @code{pop3}, @code{auth}, @code{auth-worker}, @code{dict}, @code{tcpwrap}, @code{quota-warning}, or anything else."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28366
#, no-wrap
msgid "{@code{service-configuration} parameter} listener-configuration-list listeners"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28371
msgid "Listeners for the service.  A listener is either a @code{unix-listener-configuration}, a @code{fifo-listener-configuration}, or an @code{inet-listener-configuration}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28373
msgid "Available @code{unix-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28374
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28377 guix-git/doc/guix.texi:28400
msgid "Path to the file, relative to @code{base-dir} field.  This is also used as the section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28379
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28382 guix-git/doc/guix.texi:28405
msgid "The access mode for the socket.  Defaults to @samp{\"0600\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28384
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28387 guix-git/doc/guix.texi:28410
msgid "The user to own the socket.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28389
#, no-wrap
msgid "{@code{unix-listener-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28392 guix-git/doc/guix.texi:28415
msgid "The group to own the socket.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28396
msgid "Available @code{fifo-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28397
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28402
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28407
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28412
#, no-wrap
msgid "{@code{fifo-listener-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28419
msgid "Available @code{inet-listener-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28420
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} string protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28422
msgid "The protocol to listen for."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28424
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} string address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28427
msgid "The address on which to listen, or empty for all addresses.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28429
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} non-negative-integer port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28431
msgid "The port on which to listen."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28433
#, no-wrap
msgid "{@code{inet-listener-configuration} parameter} boolean ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28437
msgid "Whether to use SSL for this service; @samp{yes}, @samp{no}, or @samp{required}.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28441
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer client-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28446
msgid "Maximum number of simultaneous client connections per process.  Once this number of connections is received, the next incoming connection will prompt Dovecot to spawn another process.  If set to 0, @code{default-client-limit} is used instead."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28451
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer service-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28456
msgid "Number of connections to handle before starting a new process.  Typically the only useful values are 0 (unlimited) or 1.  1 is more secure, but 0 is faster.  <doc/wiki/LoginProcess.txt>.  Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28459
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer process-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28462
msgid "Maximum number of processes that can exist for this service.  If set to 0, @code{default-process-limit} is used instead."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28467
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer process-min-avail"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28470
msgid "Number of processes to always keep waiting for more connections.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28472
#, no-wrap
msgid "{@code{service-configuration} parameter} non-negative-integer vsz-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28476
msgid "If you set @samp{service-count 0}, you probably need to grow this.  Defaults to @samp{256000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28480
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} dict-configuration dict"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28483
msgid "Dict configuration, as created by the @code{dict-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28485
msgid "Available @code{dict-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28486
#, no-wrap
msgid "{@code{dict-configuration} parameter} free-form-fields entries"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28489
msgid "A list of key-value pairs that this dict should hold.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28493
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} passdb-configuration-list passdbs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28496
msgid "A list of passdb configurations, each one created by the @code{passdb-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28498
msgid "Available @code{passdb-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28499
#, no-wrap
msgid "{@code{passdb-configuration} parameter} string driver"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28504
msgid "The driver that the passdb should use.  Valid values include @samp{pam}, @samp{passwd}, @samp{shadow}, @samp{bsdauth}, and @samp{static}.  Defaults to @samp{\"pam\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28506
#, no-wrap
msgid "{@code{passdb-configuration} parameter} space-separated-string-list args"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28509
msgid "Space separated list of arguments to the passdb driver.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28513
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} userdb-configuration-list userdbs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28516
msgid "List of userdb configurations, each one created by the @code{userdb-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28518
msgid "Available @code{userdb-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28519
#, no-wrap
msgid "{@code{userdb-configuration} parameter} string driver"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28523
msgid "The driver that the userdb should use.  Valid values include @samp{passwd} and @samp{static}.  Defaults to @samp{\"passwd\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28525
#, no-wrap
msgid "{@code{userdb-configuration} parameter} space-separated-string-list args"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28528
msgid "Space separated list of arguments to the userdb driver.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28530
#, no-wrap
msgid "{@code{userdb-configuration} parameter} free-form-args override-fields"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28533
msgid "Override fields from passwd.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28537
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} plugin-configuration plugin-configuration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28540
msgid "Plug-in configuration, created by the @code{plugin-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28542
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} list-of-namespace-configuration namespaces"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28545
msgid "List of namespaces.  Each item in the list is created by the @code{namespace-configuration} constructor."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28547
msgid "Available @code{namespace-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28548
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28550
msgid "Name for this namespace."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28552
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28555
msgid "Namespace type: @samp{private}, @samp{shared} or @samp{public}.  Defaults to @samp{\"private\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28557
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string separator"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28563
msgid "Hierarchy separator to use.  You should use the same separator for all namespaces or some clients get confused.  @samp{/} is usually a good one.  The default however depends on the underlying mail storage format.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28565
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28569
msgid "Prefix required to access this namespace.  This needs to be different for all namespaces.  For example @samp{Public/}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28571
#, no-wrap
msgid "{@code{namespace-configuration} parameter} string location"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28575
msgid "Physical location of the mailbox. This is in the same format as mail_location, which is also the default for it.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28577
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean inbox?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28581
msgid "There can be only one INBOX, and this setting defines which namespace has it.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28583
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean hidden?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28591
msgid "If namespace is hidden, it's not advertised to clients via NAMESPACE extension.  You'll most likely also want to set @samp{list? #f}.  This is mostly useful when converting from another server with different namespaces which you want to deprecate but still keep working.  For example you can create hidden namespaces with prefixes @samp{~/mail/}, @samp{~%u/mail/} and @samp{mail/}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28593
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean list?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28599
msgid "Show the mailboxes under this namespace with the LIST command.  This makes the namespace visible for clients that do not support the NAMESPACE extension.  The special @code{children} value lists child mailboxes, but hides the namespace prefix.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28601
#, no-wrap
msgid "{@code{namespace-configuration} parameter} boolean subscriptions?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28606
msgid "Namespace handles its own subscriptions.  If set to @code{#f}, the parent namespace handles them.  The empty prefix should always have this as @code{#t}).  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28608
#, no-wrap
msgid "{@code{namespace-configuration} parameter} mailbox-configuration-list mailboxes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28611
msgid "List of predefined mailboxes in this namespace.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28613
msgid "Available @code{mailbox-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28614
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28616
msgid "Name for this mailbox."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28618
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} string auto"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28622
msgid "@samp{create} will automatically create this mailbox.  @samp{subscribe} will both create and subscribe to the mailbox.  Defaults to @samp{\"no\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28624
#, no-wrap
msgid "{@code{mailbox-configuration} parameter} space-separated-string-list special-use"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28629
msgid "List of IMAP @code{SPECIAL-USE} attributes as specified by RFC 6154.  Valid values are @code{\\All}, @code{\\Archive}, @code{\\Drafts}, @code{\\Flagged}, @code{\\Junk}, @code{\\Sent}, and @code{\\Trash}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28635
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name base-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28638
msgid "Base directory where to store runtime data.  Defaults to @samp{\"/var/run/dovecot/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28640
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string login-greeting"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28643
msgid "Greeting message for clients.  Defaults to @samp{\"Dovecot ready.\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28645
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-trusted-networks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28652
msgid "List of trusted network ranges.  Connections from these IPs are allowed to override their IP addresses and ports (for logging and for authentication checks).  @samp{disable-plaintext-auth} is also ignored for these networks.  Typically you would specify your IMAP proxy servers here.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28654
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-access-sockets"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28657
msgid "List of login access check sockets (e.g.@: tcpwrap).  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28659
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean verbose-proctitle?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28665
msgid "Show more verbose process titles (in ps).  Currently shows user name and IP address.  Useful for seeing who is actually using the IMAP processes (e.g.@: shared mailboxes or if the same uid is used for multiple accounts).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28667
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean shutdown-clients?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28673
msgid "Should all processes be killed when Dovecot master process shuts down.  Setting this to @code{#f} means that Dovecot can be upgraded without forcing existing client connections to close (although that could also be a problem if the upgrade is e.g.@: due to a security fix).  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28675
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer doveadm-worker-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28679
msgid "If non-zero, run mail commands via this many connections to doveadm server, instead of running them directly in the same process.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28681
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string doveadm-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28684
msgid "UNIX socket or host:port used for connecting to doveadm server.  Defaults to @samp{\"doveadm-server\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28686
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list import-environment"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28690
msgid "List of environment variables that are preserved on Dovecot startup and passed down to all of its child processes.  You can also give key=value pairs to always set specific settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28692
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean disable-plaintext-auth?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28699
msgid "Disable LOGIN command and all other plaintext authentications unless SSL/TLS is used (LOGINDISABLED capability).  Note that if the remote IP matches the local IP (i.e.@: you're connecting from the same computer), the connection is considered secure and plaintext authentication is allowed.  See also the @samp{ssl=required} setting.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28701
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer auth-cache-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28706
msgid "Authentication cache size (e.g.@: @samp{#e10e6}).  0 means it's disabled.  Note that bsdauth, PAM and vpopmail require @samp{cache-key} to be set for caching to be used.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28708
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-cache-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28716
msgid "Time to live for cached data.  After TTL expires the cached record is no longer used, *except* if the main database lookup returns internal failure.  We also try to handle password changes automatically: If user's previous authentication was successful, but this one wasn't, the cache isn't used.  For now this works only with plaintext authentication.  Defaults to @samp{\"1 hour\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28718
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-cache-negative-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28722
msgid "TTL for negative hits (user not found, password mismatch).  0 disables caching them completely.  Defaults to @samp{\"1 hour\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28724
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list auth-realms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28730
msgid "List of realms for SASL authentication mechanisms that need them.  You can leave it empty if you don't want to support multiple realms.  Many clients simply use the first one listed here, so keep the default realm first.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28732
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-default-realm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28737
msgid "Default realm/domain to use if none was specified.  This is used for both SASL realms and appending @@domain to username in plaintext logins.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28739
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-chars"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28746
msgid "List of allowed characters in username.  If the user-given username contains a character not listed in here, the login automatically fails.  This is just an extra check to make sure user can't exploit any potential quote escaping vulnerabilities with SQL/LDAP databases.  If you want to allow all characters, set this value to empty.  Defaults to @samp{\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890.-_@@\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28748
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-translation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28754
msgid "Username character translations before it's looked up from databases.  The value contains series of from -> to characters.  For example @samp{#@@/@@} means that @samp{#} and @samp{/} characters are translated to @samp{@@}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28756
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-username-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28763
msgid "Username formatting before it's looked up from databases.  You can use the standard variables here, e.g.@: %Lu would lowercase the username, %n would drop away the domain if it was given, or @samp{%n-AT-%d} would change the @samp{@@} into @samp{-AT-}.  This translation is done after @samp{auth-username-translation} changes.  Defaults to @samp{\"%Lu\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28765
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-master-user-separator"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28773
msgid "If you want to allow master users to log in by specifying the master username within the normal username string (i.e.@: not using SASL mechanism's support for it), you can specify the separator character here.  The format is then <username><separator><master username>.  UW-IMAP uses @samp{*} as the separator, so that could be a good choice.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28775
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-anonymous-username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28779
msgid "Username to use for users logging in with ANONYMOUS SASL mechanism.  Defaults to @samp{\"anonymous\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28781
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer auth-worker-max-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28786
msgid "Maximum number of dovecot-auth worker processes.  They're used to execute blocking passdb and userdb queries (e.g.@: MySQL and PAM).  They're automatically created and destroyed as needed.  Defaults to @samp{30}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28788
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-gssapi-hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28793
msgid "Host name to use in GSSAPI principal names.  The default is to use the name returned by gethostname().  Use @samp{$ALL} (with quotes) to allow all keytab entries.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28795
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-krb5-keytab"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28801
msgid "Kerberos keytab to use for the GSSAPI mechanism.  Will use the system default (usually @file{/etc/krb5.keytab}) if not specified.  You may need to change the auth service to run as root to be able to read this file.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28803
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-use-winbind?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28808
msgid "Do NTLM and GSS-SPNEGO authentication using Samba's winbind daemon and @samp{ntlm-auth} helper.  <doc/wiki/Authentication/Mechanisms/Winbind.txt>.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28810
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name auth-winbind-helper-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28813
msgid "Path for Samba's @samp{ntlm-auth} helper binary.  Defaults to @samp{\"/usr/bin/ntlm_auth\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28815
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-failure-delay"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28818
msgid "Time to delay before replying to failed authentications.  Defaults to @samp{\"2 secs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28820
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-ssl-require-client-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28824
msgid "Require a valid SSL client certificate or the authentication fails.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28826
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-ssl-username-from-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28831
msgid "Take the username from client's SSL certificate, using @code{X509_NAME_get_text_by_NID()} which returns the subject's DN's CommonName.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28833
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list auth-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28839
msgid "List of wanted authentication mechanisms.  Supported mechanisms are: @samp{plain}, @samp{login}, @samp{digest-md5}, @samp{cram-md5}, @samp{ntlm}, @samp{rpa}, @samp{apop}, @samp{anonymous}, @samp{gssapi}, @samp{otp}, @samp{skey}, and @samp{gss-spnego}.  See also the @samp{disable-plaintext-auth} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28841
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list director-servers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28846
msgid "List of IPs or hostnames to all director servers, including ourself.  Ports can be specified as ip:port.  The default port is the same as what director service's @samp{inet-listener} is using.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28848
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list director-mail-servers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28852
msgid "List of IPs or hostnames to all backend mail servers.  Ranges are allowed too, like 10.0.0.10-10.0.0.30.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28854
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string director-user-expire"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28858
msgid "How long to redirect users to a specific server after it no longer has any connections.  Defaults to @samp{\"15 min\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28860
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string director-username-hash"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28865
msgid "How the username is translated before being hashed.  Useful values include %Ln if user can log in with or without @@domain, %Ld if mailboxes are shared within domain.  Defaults to @samp{\"%Lu\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28867
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28871
msgid "Log file to use for error messages.  @samp{syslog} logs to syslog, @samp{/dev/stderr} logs to stderr.  Defaults to @samp{\"syslog\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28873
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string info-log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28877
msgid "Log file to use for informational messages.  Defaults to @samp{log-path}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28879
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string debug-log-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28883
msgid "Log file to use for debug messages.  Defaults to @samp{info-log-path}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28885
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string syslog-facility"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28890
msgid "Syslog facility to use if you're logging to syslog.  Usually if you don't want to use @samp{mail}, you'll use local0..local7.  Also other standard facilities are supported.  Defaults to @samp{\"mail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28892
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-verbose?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28896
msgid "Log unsuccessful authentication attempts and the reasons why they failed.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28898
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string auth-verbose-passwords"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28905
msgid "In case of password mismatches, log the attempted password.  Valid values are no, plain and sha1.  sha1 can be useful for detecting brute force password attempts vs.  user simply trying the same password over and over again.  You can also truncate the value to n chars by appending \":n\" (e.g.@: sha1:6).  Defaults to @samp{\"no\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28907
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-debug?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28911
msgid "Even more verbose logging for debugging purposes.  Shows for example SQL queries.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28913
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean auth-debug-passwords?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28918
msgid "In case of password mismatches, log the passwords and used scheme so the problem can be debugged.  Enabling this also enables @samp{auth-debug}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28920
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-debug?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28924
msgid "Enable mail process debugging.  This can help you figure out why Dovecot isn't finding your mails.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28926
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean verbose-ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28929
msgid "Show protocol level SSL errors.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28931
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string log-timestamp"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28935
msgid "Prefix for each line written to log file.  % codes are in strftime(3) format.  Defaults to @samp{\"\\\"%b %d %H:%M:%S \\\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28937
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list login-log-format-elements"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28941
msgid "List of elements we want to log.  The elements which have a non-empty variable value are joined together to form a comma-separated string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28943
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string login-log-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28947
msgid "Login log format.  %s contains @samp{login-log-format-elements} string, %$ contains the data we want to log.  Defaults to @samp{\"%$: %s\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28949
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-log-prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28953
msgid "Log prefix for mail processes.  See doc/wiki/Variables.txt for list of possible variables you can use.  Defaults to @samp{\"\\\"%s(%u)<%@{pid@}><%@{session@}>: \\\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28955
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string deliver-log-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28957
msgid "Format to use for logging mail deliveries.  You can use variables:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28958
#, no-wrap
msgid "%$"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28960
msgid "Delivery status message (e.g.@: @samp{saved to INBOX})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28960
#, no-wrap
msgid "%m"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28962
msgid "Message-ID"
msgstr "Mensagem-ID"

#. type: item
#: guix-git/doc/guix.texi:28962 guix-git/doc/guix.texi:29505
#, no-wrap
msgid "%s"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28964
msgid "Subject"
msgstr "Assunto"

#. type: item
#: guix-git/doc/guix.texi:28964
#, no-wrap
msgid "%f"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28966
msgid "From address"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28966
#, no-wrap
msgid "%p"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28968
msgid "Physical size"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28968
#, no-wrap
msgid "%w"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28970
msgid "Virtual size."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28972
msgid "Defaults to @samp{\"msgid=%m: %$\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28974
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-location"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28979
msgid "Location for users' mailboxes.  The default is empty, which means that Dovecot tries to find the mailboxes automatically.  This won't work if the user doesn't yet have any mail, so you should explicitly tell Dovecot the full location."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28985
msgid "If you're using mbox, giving a path to the INBOX file (e.g.@: @file{/var/mail/%u}) isn't enough.  You'll also need to tell Dovecot where the other mailboxes are kept.  This is called the @emph{root mail directory}, and it must be the first path given in the @samp{mail-location} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:28987
msgid "There are a few special variables you can use, e.g.:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28989
#, no-wrap
msgid "%u"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28991
msgid "username"
msgstr "nome de usuário"

#. type: item
#: guix-git/doc/guix.texi:28991 guix-git/doc/guix.texi:29501
#, no-wrap
msgid "%n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28993
msgid "user part in user@@domain, same as %u if there's no domain"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28993
#, no-wrap
msgid "%d"
msgstr "%d"

#. type: table
#: guix-git/doc/guix.texi:28995
msgid "domain part in user@@domain, empty if there's no domain"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:28995
#, no-wrap
msgid "%h"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:28997
msgid "home directory"
msgstr "diretório pessoal"

#. type: deftypevr
#: guix-git/doc/guix.texi:29000
msgid "See doc/wiki/Variables.txt for full list.  Some examples:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29001
#, no-wrap
msgid "maildir:~/Maildir"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29002
#, no-wrap
msgid "mbox:~/mail:INBOX=/var/mail/%u"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29003
#, no-wrap
msgid "mbox:/var/mail/%d/%1n/%n:INDEX=/var/indexes/%d/%1n/%"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29006 guix-git/doc/guix.texi:29018
#: guix-git/doc/guix.texi:29046 guix-git/doc/guix.texi:29817
#: guix-git/doc/guix.texi:29831 guix-git/doc/guix.texi:29838
#: guix-git/doc/guix.texi:29845 guix-git/doc/guix.texi:29875
#: guix-git/doc/guix.texi:29973 guix-git/doc/guix.texi:41348
#: guix-git/doc/guix.texi:41356 guix-git/doc/guix.texi:41364
#: guix-git/doc/guix.texi:41472 guix-git/doc/guix.texi:41497
#: guix-git/doc/guix.texi:41628 guix-git/doc/guix.texi:41636
#: guix-git/doc/guix.texi:41644 guix-git/doc/guix.texi:41652
#: guix-git/doc/guix.texi:41660 guix-git/doc/guix.texi:41668
#: guix-git/doc/guix.texi:41691 guix-git/doc/guix.texi:41699
#: guix-git/doc/guix.texi:41751 guix-git/doc/guix.texi:41767
#: guix-git/doc/guix.texi:41775 guix-git/doc/guix.texi:41815
#: guix-git/doc/guix.texi:41838 guix-git/doc/guix.texi:41860
#: guix-git/doc/guix.texi:41867 guix-git/doc/guix.texi:41902
#: guix-git/doc/guix.texi:41910 guix-git/doc/guix.texi:41934
#: guix-git/doc/guix.texi:41966 guix-git/doc/guix.texi:41995
#: guix-git/doc/guix.texi:42002 guix-git/doc/guix.texi:42009
#: guix-git/doc/guix.texi:42017 guix-git/doc/guix.texi:42031
#: guix-git/doc/guix.texi:42040 guix-git/doc/guix.texi:42050
#: guix-git/doc/guix.texi:42057 guix-git/doc/guix.texi:42064
#: guix-git/doc/guix.texi:42071 guix-git/doc/guix.texi:42142
#: guix-git/doc/guix.texi:42149 guix-git/doc/guix.texi:42156
#: guix-git/doc/guix.texi:42165 guix-git/doc/guix.texi:42181
#: guix-git/doc/guix.texi:42188 guix-git/doc/guix.texi:42195
#: guix-git/doc/guix.texi:42202 guix-git/doc/guix.texi:42210
#: guix-git/doc/guix.texi:42218
msgid "Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29008
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29013
msgid "System user and group used to access mails.  If you use multiple, userdb can override these by returning uid or gid fields.  You can use either numbers or names.  <doc/wiki/UserIds.txt>.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29015
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29020
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-privileged-group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29026
msgid "Group to enable temporarily for privileged operations.  Currently this is used only with INBOX when either its initial creation or dotlocking fails.  Typically this is set to @samp{\"mail\"} to give access to @file{/var/mail}.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29028
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-access-groups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29036
msgid "Grant access to these supplementary groups for mail processes.  Typically these are used to set up access to shared mailboxes.  Note that it may be dangerous to set these if users can create symlinks (e.g.@: if @samp{mail} group is set here, @code{ln -s /var/mail ~/mail/var} could allow a user to delete others' mailboxes, or @code{ln -s /secret/shared/box ~/mail/mybox} would allow reading it).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29038
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attribute-dict"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29041
msgid "The location of a dictionary used to store @code{IMAP METADATA} as defined by @uref{https://tools.ietf.org/html/rfc5464, RFC@tie{}5464}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29044
msgid "The IMAP METADATA commands are available only if the ``imap'' protocol configuration's @code{imap-metadata?} field is @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29049
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-full-filesystem-access?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29055
msgid "Allow full file system access to clients.  There's no access checks other than what the operating system does for the active UID/GID@.  It works with both maildir and mboxes, allowing you to prefix mailboxes names with e.g.@: @file{/path/} or @file{~user/}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29057
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mmap-disable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29061
msgid "Don't use @code{mmap()} at all.  This is required if you store indexes to shared file systems (NFS or clustered file system).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29063
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean dotlock-use-excl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29068
msgid "Rely on @samp{O_EXCL} to work when creating dotlock files.  NFS supports @samp{O_EXCL} since version 3, so this should be safe to use nowadays by default.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29070
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-fsync"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29072
msgid "When to use fsync() or fdatasync() calls:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29073
#, no-wrap
msgid "optimized"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29075
msgid "Whenever necessary to avoid losing important data"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29077
msgid "Useful with e.g.@: NFS when @code{write()}s are delayed"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29079
msgid "Never use it (best performance, but crashes can lose data)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29081
msgid "Defaults to @samp{\"optimized\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29083
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-nfs-storage?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29088
msgid "Mail storage exists in NFS@.  Set this to yes to make Dovecot flush NFS caches whenever needed.  If you're using only a single mail server this isn't needed.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29090
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-nfs-index?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29094
msgid "Mail index files also exist in NFS@.  Setting this to yes requires @samp{mmap-disable? #t} and @samp{fsync-disable? #f}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29096
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string lock-method"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29102
msgid "Locking method for index files.  Alternatives are fcntl, flock and dotlock.  Dotlocking uses some tricks which may create more disk I/O than other locking methods.  NFS users: flock doesn't work, remember to change @samp{mmap-disable}.  Defaults to @samp{\"fcntl\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29104
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name mail-temp-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29108
msgid "Directory in which LDA/LMTP temporarily stores incoming mails >128 kB.  Defaults to @samp{\"/tmp\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29110
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer first-valid-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29116
msgid "Valid UID range for users.  This is mostly to make sure that users can't log in as daemons or other system users.  Note that denying root logins is hardcoded to dovecot binary and can't be done even if @samp{first-valid-uid} is set to 0.  Defaults to @samp{500}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29118
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer last-valid-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29123
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer first-valid-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29128
msgid "Valid GID range for users.  Users having non-valid GID as primary group ID aren't allowed to log in.  If user belongs to supplementary groups with non-valid GIDs, those groups are not set.  Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29130
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer last-valid-gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29135
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-max-keyword-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29139
msgid "Maximum allowed length for mail keyword name.  It's only forced when trying to create new keywords.  Defaults to @samp{50}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29141
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} colon-separated-file-name-list valid-chroot-dirs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29151
msgid "List of directories under which chrooting is allowed for mail processes (i.e.@: @file{/var/mail} will allow chrooting to @file{/var/mail/foo/bar} too).  This setting doesn't affect @samp{login-chroot} @samp{mail-chroot} or auth chroot settings.  If this setting is empty, @samp{/./} in home dirs are ignored.  WARNING: Never add directories here which local users can modify, that may lead to root exploit.  Usually this should be done only if you don't allow shell access for users.  <doc/wiki/Chrooting.txt>.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29153
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-chroot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29162
msgid "Default chroot directory for mail processes.  This can be overridden for specific users in user database by giving @samp{/./} in user's home directory (e.g.@: @samp{/home/./user} chroots into @file{/home}).  Note that usually there is no real need to do chrooting, Dovecot doesn't allow users to access files outside their mail directory anyway.  If your home directories are prefixed with the chroot directory, append @samp{/.} to @samp{mail-chroot}.  <doc/wiki/Chrooting.txt>.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29164
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name auth-socket-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29168
msgid "UNIX socket path to master authentication server to find users.  This is used by imap (for shared users) and lda.  Defaults to @samp{\"/var/run/dovecot/auth-userdb\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29170
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name mail-plugin-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29173
msgid "Directory where to look up mail plugins.  Defaults to @samp{\"/usr/lib/dovecot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29175
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mail-plugins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29179
msgid "List of plugins to load for all services.  Plugins specific to IMAP, LDA, etc.@: are added to this list in their own .conf files.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29181
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-cache-min-mail-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29186
msgid "The minimum number of mails in a mailbox before updates are done to cache file.  This allows optimizing Dovecot's behavior to do less disk writes at the cost of more disk reads.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29188
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mailbox-idle-check-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29195
msgid "When IDLE command is running, mailbox is checked once in a while to see if there are any new mails or other changes.  This setting defines the minimum time to wait between those checks.  Dovecot can also use dnotify, inotify and kqueue to find out immediately when changes occur.  Defaults to @samp{\"30 secs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29197
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mail-save-crlf?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29204
msgid "Save mails with CR+LF instead of plain LF@.  This makes sending those mails take less CPU, especially with sendfile() syscall with Linux and FreeBSD@.  But it also creates a bit more disk I/O which may just make it slower.  Also note that if other software reads the mboxes/maildirs, they may handle the extra CRs wrong and cause problems.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29206
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-stat-dirs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29214
msgid "By default LIST command returns all entries in maildir beginning with a dot.  Enabling this option makes Dovecot return only entries which are directories.  This is done by stat()ing each entry, so it causes more disk I/O.  (For systems setting struct @samp{dirent->d_type} this check is free and it's done always regardless of this setting).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29216
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-copy-with-hardlinks?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29221
msgid "When copying a message, do it with hard links whenever possible.  This makes the performance much better, and it's unlikely to have any side effects.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29223
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean maildir-very-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29228
msgid "Assume Dovecot is the only MUA accessing Maildir: Scan cur/ directory only when its mtime changes unexpectedly or when we can't find the mail otherwise.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29230
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mbox-read-locks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29233
msgid "Which locking methods to use for locking mbox.  There are four available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29235
#, no-wrap
msgid "dotlock"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29239
msgid "Create <mailbox>.lock file.  This is the oldest and most NFS-safe solution.  If you want to use /var/mail/ like directory, the users will need write access to that directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29239
#, no-wrap
msgid "dotlock-try"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29242
msgid "Same as dotlock, but if it fails because of permissions or because there isn't enough disk space, just skip it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29242
#, no-wrap
msgid "fcntl"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29244
msgid "Use this if possible.  Works with NFS too if lockd is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29244
#, no-wrap
msgid "flock"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29246 guix-git/doc/guix.texi:29248
msgid "May not exist in all systems.  Doesn't work with NFS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29246
#, no-wrap
msgid "lockf"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29254
msgid "You can use multiple locking methods; if you do the order they're declared in is important to avoid deadlocks if other MTAs/MUAs are using multiple locking methods as well.  Some operating systems don't allow using some of them simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29256
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list mbox-write-locks"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29260
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mbox-lock-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29263
msgid "Maximum time to wait for lock (all of them) before aborting.  Defaults to @samp{\"5 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29265
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mbox-dotlock-change-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29269
msgid "If dotlock exists but the mailbox isn't modified in any way, override the lock file after this much time.  Defaults to @samp{\"2 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29271
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29282
msgid "When mbox changes unexpectedly we have to fully read it to find out what changed.  If the mbox is large this can take a long time.  Since the change is usually just a newly appended mail, it'd be faster to simply read the new mails.  If this setting is enabled, Dovecot does this but still safely fallbacks to re-reading the whole mbox file whenever something in mbox isn't how it's expected to be.  The only real downside to this setting is that if some other MUA changes message flags, Dovecot doesn't notice it immediately.  Note that a full sync is done with SELECT, EXAMINE, EXPUNGE and CHECK commands.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29284
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-very-dirty-syncs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29289
msgid "Like @samp{mbox-dirty-syncs}, but don't do full syncs even with SELECT, EXAMINE, EXPUNGE or CHECK commands.  If this is set, @samp{mbox-dirty-syncs} is ignored.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29291
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mbox-lazy-writes?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29297
msgid "Delay writing mbox headers until doing a full write sync (EXPUNGE and CHECK commands and when closing the mailbox).  This is especially useful for POP3 where clients often delete all mails.  The downside is that our changes aren't immediately visible to other MUAs.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29299
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mbox-min-index-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29304
msgid "If mbox size is smaller than this (e.g.@: 100k), don't write index files.  If an index file already exists it's still read, just not updated.  Defaults to @samp{0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29306
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mdbox-rotate-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29309
msgid "Maximum dbox file size until it's rotated.  Defaults to @samp{10000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29311
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mdbox-rotate-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29316
msgid "Maximum dbox file age until it's rotated.  Typically in days.  Day begins from midnight, so 1d = today, 2d = yesterday, etc.  0 = check disabled.  Defaults to @samp{\"1d\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29318
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean mdbox-preallocate-space?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29323
msgid "When creating new mdbox files, immediately preallocate their size to @samp{mdbox-rotate-size}.  This setting currently works only in Linux with some file systems (ext4, xfs).  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29325
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29329
msgid "sdbox and mdbox support saving mail attachments to external files, which also allows single instance storage for them.  Other backends don't support this for now."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29331
msgid "WARNING: This feature hasn't been tested much yet.  Use at your own risk."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29334
msgid "Directory root where to store mail attachments.  Disabled, if empty.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29336
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer mail-attachment-min-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29341
msgid "Attachments smaller than this aren't saved externally.  It's also possible to write a plugin to disable saving specific attachments externally.  Defaults to @samp{128000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29343
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-fs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29345
msgid "File system backend to use for saving attachments:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29346
#, no-wrap
msgid "posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29348
msgid "No SiS done by Dovecot (but this might help FS's own deduplication)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29348
#, no-wrap
msgid "sis posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29350
msgid "SiS with immediate byte-by-byte comparison during saving"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29350
#, no-wrap
msgid "sis-queue posix"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29352
msgid "SiS with delayed comparison and deduplication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29354
msgid "Defaults to @samp{\"sis posix\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29356
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string mail-attachment-hash"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29362
msgid "Hash format to use in attachment filenames.  You can add any text and variables: @code{%@{md4@}}, @code{%@{md5@}}, @code{%@{sha1@}}, @code{%@{sha256@}}, @code{%@{sha512@}}, @code{%@{size@}}.  Variables can be truncated, e.g.@: @code{%@{sha256:80@}} returns only first 80 bits.  Defaults to @samp{\"%@{sha1@}\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29364
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-process-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29369
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-client-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29372
msgid "Defaults to @samp{1000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29374
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer default-vsz-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29379
msgid "Default VSZ (virtual memory size) limit for service processes.  This is mainly intended to catch and kill processes that leak memory before they eat up everything.  Defaults to @samp{256000000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29381
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string default-login-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29386
msgid "Login user is internally used by login processes.  This is the most untrusted user in Dovecot system.  It shouldn't have access to anything at all.  Defaults to @samp{\"dovenull\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29388
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string default-internal-user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29393
msgid "Internal user is used by unprivileged processes.  It should be separate from login user, so that login processes can't disturb other processes.  Defaults to @samp{\"dovecot\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29395
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29398
msgid "SSL/TLS support: yes, no, required.  <doc/wiki/SSL.txt>.  Defaults to @samp{\"required\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29400
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29403
msgid "PEM encoded X.509 SSL/TLS certificate (public key).  Defaults to @samp{\"</etc/dovecot/default.pem\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29405
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29410
msgid "PEM encoded SSL/TLS private key.  The key is opened before dropping root privileges, so keep the key file unreadable by anyone but root.  Defaults to @samp{\"</etc/dovecot/private/default.pem\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29412
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-key-password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29418
msgid "If key file is password protected, give the password here.  Alternatively give it when starting dovecot with -p parameter.  Since this file is often world-readable, you may want to place this setting instead to a different.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29420
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-ca"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29426
msgid "PEM encoded trusted certificate authority.  Set this only if you intend to use @samp{ssl-verify-client-cert? #t}.  The file should contain the CA certificate(s) followed by the matching CRL(s).  (e.g.@: @samp{ssl-ca </etc/ssl/certs/ca.pem}).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29428
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean ssl-require-crl?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29431
msgid "Require that CRL check succeeds for client certificates.  Defaults to @samp{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29433
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean ssl-verify-client-cert?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29437
msgid "Request client to send a certificate.  If you also want to require it, set @samp{auth-ssl-require-client-cert? #t} in auth section.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29439
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cert-username-field"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29444
msgid "Which field from certificate to use for username.  commonName and x500UniqueIdentifier are the usual choices.  You'll also need to set @samp{auth-ssl-username-from-cert? #t}.  Defaults to @samp{\"commonName\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29446
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-min-protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29449
msgid "Minimum SSL protocol version to accept.  Defaults to @samp{\"TLSv1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29451
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-cipher-list"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29454
msgid "SSL ciphers to use.  Defaults to @samp{\"ALL:!kRSA:!SRP:!kDHd:!DSS:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4:!ADH:!LOW@@STRENGTH\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29456
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string ssl-crypto-device"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29459
msgid "SSL crypto device to use, for valid values run \"openssl engine\".  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29461
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string postmaster-address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29465
msgid "Address to use when sending rejection mails.  %d expands to recipient domain.  Defaults to @samp{\"postmaster@@%d\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29467
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29471
msgid "Hostname to use in various parts of sent mails (e.g.@: in Message-Id)  and in LMTP replies.  Default is the system's real hostname@@domain.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29473
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean quota-full-tempfail?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29477
msgid "If user is over quota, return with temporary failure instead of bouncing the mail.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29479
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} file-name sendmail-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29482
msgid "Binary to use for sending mails.  Defaults to @samp{\"/usr/sbin/sendmail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29484
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string submission-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29488
msgid "If non-empty, send mails via this SMTP host[:port] instead of sendmail.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29490
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string rejection-subject"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29494
msgid "Subject: header to use for rejection mails.  You can use the same variables as for @samp{rejection-reason} below.  Defaults to @samp{\"Rejected: %s\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29496
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string rejection-reason"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29499
msgid "Human readable error message for rejection mails.  You can use variables:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29503
msgid "CRLF"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29503
#, no-wrap
msgid "%r"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29505
msgid "reason"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29507
msgid "original subject"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29507
#, no-wrap
msgid "%t"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29509
msgid "recipient"
msgstr "destinatário"

#. type: deftypevr
#: guix-git/doc/guix.texi:29511
msgid "Defaults to @samp{\"Your message to <%t> was automatically rejected:%n%r\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29513
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string recipient-delimiter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29517
msgid "Delimiter character between local-part and detail in email address.  Defaults to @samp{\"+\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29519
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string lda-original-recipient-header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29525
msgid "Header where the original recipient address (SMTP's RCPT TO: address) is taken from if not available elsewhere.  With dovecot-lda -a parameter overrides this.  A commonly used header for this is X-Original-To.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29527
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean lda-mailbox-autocreate?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29531
msgid "Should saving a mail to a nonexistent mailbox automatically create it?.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29533
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} boolean lda-mailbox-autosubscribe?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29537
msgid "Should automatically created mailboxes be also automatically subscribed?.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29539
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} non-negative-integer imap-max-line-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29545
msgid "Maximum IMAP command line length.  Some clients generate very long command lines with huge mailboxes, so you may need to raise this if you get \"Too long argument\" or \"IMAP command line too large\" errors often.  Defaults to @samp{64000}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29547
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-logout-format"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29549
msgid "IMAP logout format string:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29550
#, no-wrap
msgid "%i"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29552
msgid "total number of bytes read from client"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29552
#, no-wrap
msgid "%o"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29554
msgid "total number of bytes sent to client."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29557
msgid "See @file{doc/wiki/Variables.txt} for a list of all the variables you can use.  Defaults to @samp{\"in=%i out=%o deleted=%@{deleted@} expunged=%@{expunged@} trashed=%@{trashed@} hdr_count=%@{fetch_hdr_count@} hdr_bytes=%@{fetch_hdr_bytes@} body_count=%@{fetch_body_count@} body_bytes=%@{fetch_body_bytes@}\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29559
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-capability"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29563
msgid "Override the IMAP CAPABILITY response.  If the value begins with '+', add the given capabilities on top of the defaults (e.g.@: +XFOO XBAR).  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29565
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-idle-notify-interval"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29569
msgid "How long to wait between \"OK Still here\" notifications when client is IDLEing.  Defaults to @samp{\"2 mins\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29571
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-id-send"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29577
msgid "ID field names and values to send to clients.  Using * as the value makes Dovecot use the default value.  The following fields have default values currently: name, version, os, os-version, support-url, support-email.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29579
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-id-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29582
msgid "ID fields sent by client to log.  * means everything.  Defaults to @samp{\"\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29584
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} space-separated-string-list imap-client-workarounds"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29586
msgid "Workarounds for various client bugs:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29588
#, no-wrap
msgid "delay-newmail"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29595
msgid "Send EXISTS/RECENT new mail notifications only when replying to NOOP and CHECK commands.  Some clients ignore them otherwise, for example OSX Mail (<v2.1).  Outlook Express breaks more badly though, without this it may show user \"Message no longer in server\" errors.  Note that OE6 still breaks even with this workaround if synchronization is set to \"Headers Only\"."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29596
#, no-wrap
msgid "tb-extra-mailbox-sep"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29600
msgid "Thunderbird gets somehow confused with LAYOUT=fs (mbox and dbox) and adds extra @samp{/} suffixes to mailbox names.  This option causes Dovecot to ignore the extra @samp{/} instead of treating it as invalid mailbox name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29601
#, no-wrap
msgid "tb-lsub-flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29605
msgid "Show \\Noselect flags for LSUB replies with LAYOUT=fs (e.g.@: mbox).  This makes Thunderbird realize they aren't selectable and show them greyed out, instead of only later giving \"not selectable\" popup error."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29609
#, no-wrap
msgid "{@code{dovecot-configuration} parameter} string imap-urlauth-host"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29612
msgid "Host allowed in URLAUTH URLs sent by client.  \"*\" allows all.  Defaults to @samp{\"\"}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29620
msgid "Whew! Lots of configuration options.  The nice thing about it though is that Guix has a complete interface to Dovecot's configuration language.  This allows not only a nice way to declare configurations, but also offers reflective capabilities as well: users can write code to inspect and transform configurations from within Scheme."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29626
msgid "However, it could be that you just want to get a @code{dovecot.conf} up and running.  In that case, you can pass an @code{opaque-dovecot-configuration} as the @code{#:config} parameter to @code{dovecot-service}.  As its name indicates, an opaque configuration does not have easy reflective capabilities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29628
msgid "Available @code{opaque-dovecot-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29629
#, no-wrap
msgid "{@code{opaque-dovecot-configuration} parameter} package dovecot"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29633
#, no-wrap
msgid "{@code{opaque-dovecot-configuration} parameter} string string"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29635
msgid "The contents of the @code{dovecot.conf}, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29639
msgid "For example, if your @code{dovecot.conf} is just the empty string, you could instantiate a dovecot service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29644
#, no-wrap
msgid ""
"(dovecot-service #:config\n"
"                 (opaque-dovecot-configuration\n"
"                  (string \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29646
#, no-wrap
msgid "OpenSMTPD Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:29648
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "opensmtpd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:29652
msgid "This is the type of the @uref{https://www.opensmtpd.org, OpenSMTPD} service, whose value should be an @code{opensmtpd-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29657
#, no-wrap
msgid ""
"(service opensmtpd-service-type\n"
"         (opensmtpd-configuration\n"
"           (config-file (local-file \"./my-smtpd.conf\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29660
#, no-wrap
msgid "{Data Type} opensmtpd-configuration"
msgstr "{Tipo de dados} opensmtpd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:29662
msgid "Data type representing the configuration of opensmtpd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29664
#, no-wrap
msgid "@code{package} (default: @var{opensmtpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29666
msgid "Package object of the OpenSMTPD SMTP server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29671
msgid "This option can be used to provide a list of symbols naming Shepherd services that this service will depend on, such as @code{'networking} if you want to configure OpenSMTPD to listen on non-loopback interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29672
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{config-file} (default: @code{%default-opensmtpd-config-file})"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:29677
msgid "File-like object of the OpenSMTPD configuration file to use.  By default it listens on the loopback network interface, and allows for mail from users and daemons on the local machine, as well as permitting email to remote servers.  Run @command{man smtpd.conf} for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29678
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/mail.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:29681
msgid "The file location for the OpenSMTPD log file.  Logging occurs in the foreground via the Shepherd, i.e. OpenSMTPD does not detach."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29682
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{setgid-commands?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:29687
msgid "Make the following commands setgid to @code{smtpq} so they can be executed: @command{smtpctl}, @command{sendmail}, @command{send-mail}, @command{makemap}, @command{mailq}, and @command{newaliases}.  @xref{Privileged Programs}, for more information on setgid programs."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29690
#, no-wrap
msgid "Exim Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29692
#, no-wrap
msgid "mail transfer agent (MTA)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29693
#, no-wrap
msgid "MTA (mail transfer agent)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29694
#, no-wrap
msgid "SMTP"
msgstr "SMTP"

#. type: defvar
#: guix-git/doc/guix.texi:29696
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "exim-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:29700
msgid "This is the type of the @uref{https://exim.org, Exim} mail transfer agent (MTA), whose value should be an @code{exim-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:29705
#, no-wrap
msgid ""
"(service exim-service-type\n"
"         (exim-configuration\n"
"           (config-file (local-file \"./my-exim.conf\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29711
msgid "In order to use an @code{exim-service-type} service you must also have a @code{mail-aliases-service-type} service present in your @code{operating-system} (even if it has no aliases)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:29712
#, no-wrap
msgid "{Data Type} exim-configuration"
msgstr "{Tipo de dados} exim-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:29714
msgid "Data type representing the configuration of exim."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:29716
#, no-wrap
msgid "@code{package} (default: @var{exim})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29718
msgid "Package object of the Exim server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:29725
msgid "File-like object of the Exim configuration file to use.  If its value is @code{#f} then use the default configuration file from the package provided in @code{package}.  The resulting configuration file is loaded after setting the @code{exim_user} and @code{exim_group} configuration variables."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:29729
#, no-wrap
msgid "Getmail service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:29731
#, no-wrap
msgid "IMAP"
msgstr "IMAP"

#. type: cindex
#: guix-git/doc/guix.texi:29732
#, no-wrap
msgid "POP"
msgstr "POP"

#. type: defvar
#: guix-git/doc/guix.texi:29734
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "getmail-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:29737
msgid "This is the type of the @uref{http://pyropus.ca/software/getmail/, Getmail} mail retriever, whose value should be a @code{getmail-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:29740
msgid "Available @code{getmail-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29741
#, no-wrap
msgid "{@code{getmail-configuration} parameter} symbol name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29743
msgid "A symbol to identify the getmail service."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29745
msgid "Defaults to @samp{\"unset\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29748
#, no-wrap
msgid "{@code{getmail-configuration} parameter} package package"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29750
msgid "The getmail package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29753
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string user"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29755
msgid "The user to run getmail as."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29757 guix-git/doc/guix.texi:29764
msgid "Defaults to @samp{\"getmail\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29760
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string group"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29762
msgid "The group to run getmail as."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29767
#, no-wrap
msgid "{@code{getmail-configuration} parameter} string directory"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29769
msgid "The getmail directory to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29771
msgid "Defaults to @samp{\"/var/lib/getmail/default\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29774
#, no-wrap
msgid "{@code{getmail-configuration} parameter} getmail-configuration-file rcfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29776
msgid "The getmail configuration file to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29778
msgid "Available @code{getmail-configuration-file} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29779
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-retriever-configuration retriever"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29781
msgid "What mail account to retrieve mail from, and how to access that account."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29783
msgid "Available @code{getmail-retriever-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29784
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29787
msgid "The type of mail retriever to use.  Valid values include @samp{passwd} and @samp{static}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29789
msgid "Defaults to @samp{\"SimpleIMAPSSLRetriever\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29792
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string server"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29794 guix-git/doc/guix.texi:29801
msgid "Username to login to the mail server with."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29796 guix-git/doc/guix.texi:29803
#: guix-git/doc/guix.texi:29867
msgid "Defaults to @samp{unset}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29799
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29806
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} non-negative-integer port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29808
msgid "Port number to connect to."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29813
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29815 guix-git/doc/guix.texi:29822
msgid "Override fields from passwd."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29820
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} list password-command"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29827
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string keyfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29829
msgid "PEM-formatted key file to use for the TLS negotiation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29834
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string certfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29836
msgid "PEM-formatted certificate file to use for the TLS negotiation."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29841
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} string ca-certs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29843
msgid "CA certificates to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29848
#, no-wrap
msgid "{@code{getmail-retriever-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29850
msgid "Extra retriever parameters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29857
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-destination-configuration destination"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29859
msgid "What to do with retrieved messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29861
msgid "Available @code{getmail-destination-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29862
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} string type"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29865
msgid "The type of mail destination.  Valid values include @samp{Maildir}, @samp{Mboxrd} and @samp{MDA_external}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29870
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} string-or-filelike path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29873
msgid "The path option for the mail destination.  The behaviour depends on the chosen type."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29878
#, no-wrap
msgid "{@code{getmail-destination-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29880
msgid "Extra destination parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29887
#, no-wrap
msgid "{@code{getmail-configuration-file} parameter} getmail-options-configuration options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29889
msgid "Configure getmail."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29891
msgid "Available @code{getmail-options-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29892
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer verbose"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29897
msgid "If set to @samp{0}, getmail will only print warnings and errors.  A value of @samp{1} means that messages will be printed about retrieving and deleting messages.  If set to @samp{2}, getmail will print messages about each of its actions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29899 guix-git/doc/guix.texi:38483
msgid "Defaults to @samp{1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29902
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean read-all"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29905
msgid "If true, getmail will retrieve all available messages.  Otherwise it will only retrieve messages it hasn't seen previously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29910
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean delete"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29914
msgid "If set to true, messages will be deleted from the server after retrieving and successfully delivering them.  Otherwise, messages will be left on the server."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29919
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer delete-after"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29924
msgid "Getmail will delete messages this number of days after seeing them, if they have been delivered.  This means messages will be left on the server this number of days after delivering them.  A value of @samp{0} disabled this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29929
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer delete-bigger-than"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29933
msgid "Delete messages larger than this of bytes after retrieving them, even if the delete and delete-after options are disabled.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29938
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer max-bytes-per-session"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29941
msgid "Retrieve messages totalling up to this number of bytes before closing the session with the server.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29946
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} non-negative-integer max-message-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29949
msgid "Don't retrieve messages larger than this number of bytes.  A value of @samp{0} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29954
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean delivered-to"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29956
msgid "If true, getmail will add a Delivered-To header to messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29961
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean received"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29963
msgid "If set, getmail adds a Received header to the messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29968
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} string message-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29971
msgid "Getmail will record a log of its actions to the named file.  A value of @samp{\"\"} disables this feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29976
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean message-log-syslog"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29979
msgid "If true, getmail will record a log of its actions using the system logger."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29984
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} boolean message-log-verbose"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29988
msgid "If true, getmail will log information about messages not retrieved and the reason for not retrieving them, as well as starting and ending information lines."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29993
#, no-wrap
msgid "{@code{getmail-options-configuration} parameter} parameter-alist extra-parameters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:29995
msgid "Extra options to include."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30004
#, no-wrap
msgid "{@code{getmail-configuration} parameter} list idle"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30008
msgid "A list of mailboxes that getmail should wait on the server for new mail notifications.  This depends on the server supporting the IDLE extension."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30013
#, no-wrap
msgid "{@code{getmail-configuration} parameter} list environment-variables"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30015
msgid "Environment variables to set for getmail."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30020
#, no-wrap
msgid "Mail Aliases Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30022
#, no-wrap
msgid "email aliases"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30023
#, no-wrap
msgid "aliases, for email addresses"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30025
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mail-aliases-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30028
msgid "This is the type of the service which provides @code{/etc/aliases}, specifying how to deliver mail to users on this system."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30033
#, no-wrap
msgid ""
"(service mail-aliases-service-type\n"
"         '((\"postmaster\" \"bob\")\n"
"           (\"bob\" \"bob@@example.com\" \"bob@@example2.com\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30041
msgid "The configuration for a @code{mail-aliases-service-type} service is an association list denoting how to deliver mail that comes to this system.  Each entry is of the form @code{(alias addresses ...)}, with @code{alias} specifying the local alias and @code{addresses} specifying where to deliver this user's mail."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30047
msgid "The aliases aren't required to exist as users on the local system.  In the above example, there doesn't need to be a @code{postmaster} entry in the @code{operating-system}'s @code{user-accounts} in order to deliver the @code{postmaster} mail to @code{bob} (which subsequently would deliver mail to @code{bob@@example.com} and @code{bob@@example2.com})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30048 guix-git/doc/guix.texi:30049
#, no-wrap
msgid "GNU Mailutils IMAP4 Daemon"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30051
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "imap4d-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30055
msgid "This is the type of the GNU Mailutils IMAP4 Daemon (@pxref{imap4d,,, mailutils, GNU Mailutils Manual}), whose value should be an @code{imap4d-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30060
#, no-wrap
msgid ""
"(service imap4d-service-type\n"
"         (imap4d-configuration\n"
"           (config-file (local-file \"imap4d.conf\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30063
#, no-wrap
msgid "{Data Type} imap4d-configuration"
msgstr "{Tipo de dados} imap4d-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30065
msgid "Data type representing the configuration of @command{imap4d}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30067
#, no-wrap
msgid "@code{package} (default: @code{mailutils})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30069
msgid "The package that provides @command{imap4d}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30070
#, no-wrap
msgid "@code{config-file} (default: @code{%default-imap4d-config-file})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30074
msgid "File-like object of the configuration file to use, by default it will listen on TCP port 143 of @code{localhost}.  @xref{Conf-imap4d,,, mailutils, GNU Mailutils Manual}, for details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30078
#, no-wrap
msgid "Radicale Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30079
#, no-wrap
msgid "CalDAV"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30080
#, no-wrap
msgid "CardDAV"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30082
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "radicale-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30088
msgid "This is the type of the @uref{https://radicale.org, Radicale} CalDAV/CardDAV server whose value should be a @code{radicale-configuration}.  The default configuration matches the @uref{https://radicale.org/v3.html#configuration, upstream documentation}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30090
#, no-wrap
msgid "{Data Type} radicale-configuration"
msgstr "{Tipo de dados} radicale-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30093
#, fuzzy
msgid "Data type representing the configuration of @command{radicale}.  Available @code{radicale-configuration} fields are:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:30095
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{radicale}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30097
#, fuzzy
#| msgid "The package data type."
msgid "Package that provides @command{radicale}."
msgstr "O tipo de dados package."

#. type: item
#: guix-git/doc/guix.texi:30098
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{auth} (default: @code{'()}) (type: radicale-auth-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30100
#, fuzzy
msgid "Configuration for auth-related variables."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:30101
#, no-wrap
msgid "{Data Type} radicale-auth-configuration"
msgstr "{Tipo de dados} radicale-auth-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30105
msgid "Data type representing the @code{auth} section of a @command{radicale} configuration file.  Available @code{radicale-auth-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30107
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{type} (default: @code{'none}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30112
msgid "The method to verify usernames and passwords.  Options are @code{none}, @code{htpasswd}, @code{remote-user}, and @code{http-x-remote-user}.  This value is tied to @code{htpasswd-filename} and @code{htpasswd-encryption}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30113
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{htpasswd-filename} (default: @code{\"/etc/radicale/users\"}) (type: file-name)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30116
msgid "Path to the htpasswd file.  Use htpasswd or similar to generate this file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30117
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{htpasswd-encryption} (default: @code{'md5}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30120
msgid "Encryption method used in the htpasswd file.  Options are @code{plain}, @code{bcrypt}, and @code{md5}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30121
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{delay} (default: @code{1}) (type: non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30123
msgid "Average delay after failed login attempts in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30124
#, fuzzy, no-wrap
msgid "@code{realm} (default: @code{\"Radicale - Password Required\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30126
msgid "Message displayed in the client when a password is needed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30131
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{encoding} (default: @code{'()}) (type: radicale-encoding-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30133
#, fuzzy
msgid "Configuration for encoding-related variables."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:30134
#, no-wrap
msgid "{Data Type} radicale-encoding-configuration"
msgstr "{Tipo de dados} radicale-encoding-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30138
msgid "Data type representing the @code{encoding} section of a @command{radicale} configuration file.  Available @code{radicale-encoding-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30140
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{request} (default: @code{'utf-8}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30142
msgid "Encoding for responding requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30143
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{stock} (default: @code{'utf-8}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30145
msgid "Encoding for storing local collections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30150
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{headers-file} (default: none) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30152
msgid "Custom HTTP headers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30153
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{logging} (default: @code{'()}) (type: radicale-logging-configuration)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30155
#, fuzzy
msgid "Configuration for logging-related variables."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:30156
#, no-wrap
msgid "{Data Type} radicale-logging-configuration"
msgstr "{Tipo de dados} radicale-logging-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30160
msgid "Data type representing the @code{logging} section of a @command{radicale} configuration file.  Available @code{radicale-logging-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30162
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{level} (default: @code{'warning}) (type: symbol)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30165
msgid "Set the logging level.  One of @code{debug}, @code{info}, @code{warning}, @code{error}, or @code{critical}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30166
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{mask-passwords?} (default: @code{#t}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30168
msgid "Whether to include passwords in logs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30173
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{rights} (default: @code{'()}) (type: radicale-rights-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30176
msgid "Configuration for rights-related variables.  This should be a @code{radicale-rights-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30177
#, no-wrap
msgid "{Data Type} radicale-rights-configuration"
msgstr "{Tipo de dados} radicale-rights-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30181
msgid "Data type representing the @code{rights} section of a @command{radicale} configuration file.  Available @code{radicale-rights-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30183
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{type} (default: @code{'owner-only}) (type: symbol)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30191
msgid "Backend used to check collection access rights.  The recommended backend is @code{owner-only}.  If access to calendars and address books outside the home directory of users is granted, clients won't detect these collections and will not show them to the user.  Choosing any other method is only useful if you access calendars and address books directly via URL.  Options are @code{authenticate}, @code{owner-only}, @code{owner-write}, and @code{from-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30192
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{file} (default: @code{\"\"}) (type: file-name)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30194
msgid "File for the rights backend @code{from-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30199
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{server} (default: @code{'()}) (type: radicale-server-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30201
msgid "Configuration for server-related variables.  Ignored if WSGI is used."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30202
#, no-wrap
msgid "{Data Type} radicale-server-configuration"
msgstr "{Tipo de dados} radicale-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30206
msgid "Data type representing the @code{server} section of a @command{radicale} configuration file.  Available @code{radicale-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30208
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{hosts} (default: @code{(list \"localhost:5232\")}) (type: list-of-ip-addresses)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30210
msgid "List of IP addresses that the server will bind to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30211
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-connections} (default: @code{8}) (type: non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30213
msgid "Maximum number of parallel connections.  Set to 0 to disable the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30214
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-content-length} (default: @code{100000000}) (type: non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30216
msgid "Maximum size of the request body in bytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30217
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{timeout} (default: @code{30}) (type: non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30219
msgid "Socket timeout in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30220 guix-git/doc/guix.texi:39405
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ssl?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30222
msgid "Whether to enable transport layer encryption."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30223
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{certificate} (default: @code{\"/etc/ssl/radicale.cert.pem\"}) (type: file-name)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30225
msgid "Path of the SSL certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30226
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{key} (default: @code{\"/etc/ssl/radicale.key.pem\"}) (type: file-name)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30229
msgid "Path to the private key for SSL.  Only effective if @code{ssl?} is @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30230
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{certificate-authority} (default: @code{\"\"}) (type: file-name)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30236
msgid "Path to CA certificate for validating client certificates.  This can be used to secure TCP traffic between Radicale and a reverse proxy.  If you want to authenticate users with client-side certificates, you also have to write an authentication plugin that extracts the username from the certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30241
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{storage} (default: @code{'()}) (type: radicale-storage-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30243
#, fuzzy
msgid "Configuration for storage-related variables."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:30244
#, no-wrap
msgid "{Data Type} radicale-storage-configuration"
msgstr "{Tipo de dados} radicale-storage-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30248
msgid "Data type representing the @code{storage} section of a @command{radicale} configuration file.  Available @code{radicale-storage-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30250
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{type} (default: @code{'multifilesystem}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30253
msgid "Backend used to store data.  Options are @code{multifilesystem} and @code{multifilesystem-nolock}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30254
#, fuzzy, no-wrap
msgid "@code{filesystem-folder} (default: @code{\"/var/lib/radicale/collections\"}) (type: file-name)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30256
msgid "Folder for storing local collections.  Created if not present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30257
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-sync-token-age} (default: @code{2592000}) (type: non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30259
msgid "Delete sync-tokens that are older than the specified time in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30260
#, fuzzy, no-wrap
msgid "@code{hook} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30262
msgid "Command run after changes to storage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30267
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{web-interface?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30269
msgid "Whether to use Radicale's built-in web interface."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30274
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Rspamd Service"
msgstr "Serviços base"

#. type: cindex
#: guix-git/doc/guix.texi:30276
#, no-wrap
msgid "spam"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30278
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rspamd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30281
msgid "This is the type of the @uref{https://rspamd.com/, Rspamd} filtering system whose value should be a @code{rspamd-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30285
#, no-wrap
msgid "{Data Type} rspamd-configuration"
msgstr "{Tipo de dados} rspamd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30287
#, fuzzy
msgid "Available @code{rspamd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:30289
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{rspamd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30291
#, fuzzy
#| msgid "The package data type."
msgid "The package that provides rspamd."
msgstr "O tipo de dados package."

#. type: item
#: guix-git/doc/guix.texi:30292
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{config-file} (default: @code{%default-rspamd-config-file}) (type: file-like)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30296
msgid "File-like object of the configuration file to use.  By default all workers are enabled except fuzzy and they are bound to their usual ports, e.g localhost:11334, localhost:11333 and so on"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30297
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{local.d-files} (default: @code{()}) (type: directory-tree)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30302
msgid "Configuration files in local.d, provided as a list of two element lists where the first element is the filename and the second one is a file-like object.  Settings in these files will be merged with the defaults."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30303
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{override.d-files} (default: @code{()}) (type: directory-tree)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30307
msgid "Configuration files in override.d, provided as a list of two element lists where the first element is the filename and the second one is a file-like object.  Settings in these files will override the defaults."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30308
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{%default-rspamd-account}) (type: user-account)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30310
msgid "The user to run rspamd as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30311
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{%default-rspamd-group}) (type: user-group)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30313
msgid "The group to run rspamd as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30316
#, fuzzy
#| msgid "Produce debugging output."
msgid "Force debug output."
msgstr "Produz uma saída de depuração."

#. type: item
#: guix-git/doc/guix.texi:30317
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{insecure?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30319
#, fuzzy
#| msgid "Programs running with root privileges."
msgid "Ignore running workers as privileged users."
msgstr "Programas sendo executados com privilégios de root."

#. type: item
#: guix-git/doc/guix.texi:30320
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{skip-template?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30322
msgid "Do not apply Jinja templates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30323
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirements} (default: @code{(user-processes loopback)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: cindex
#: guix-git/doc/guix.texi:30337
#, no-wrap
msgid "messaging"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30338
#, no-wrap
msgid "jabber"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30339
#, no-wrap
msgid "XMPP"
msgstr "XMPP"

#. type: Plain text
#: guix-git/doc/guix.texi:30343
msgid "The @code{(gnu services messaging)} module provides Guix service definitions for messaging services.  Currently it provides the following services:"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30344
#, no-wrap
msgid "Prosody Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30346
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "prosody-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30350
msgid "This is the type for the @uref{https://prosody.im, Prosody XMPP communication server}.  Its value must be a @code{prosody-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30365
#, no-wrap
msgid ""
"(service prosody-service-type\n"
"         (prosody-configuration\n"
"          (modules-enabled (cons* \"groups\" \"mam\" %default-modules-enabled))\n"
"          (int-components\n"
"           (list\n"
"            (int-component-configuration\n"
"             (hostname \"conference.example.net\")\n"
"             (plugin \"muc\")\n"
"             (mod-muc (mod-muc-configuration)))))\n"
"          (virtualhosts\n"
"           (list\n"
"            (virtualhost-configuration\n"
"             (domain \"example.net\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30368
msgid "See below for details about @code{prosody-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30374
msgid "By default, Prosody does not need much configuration.  Only one @code{virtualhosts} field is needed: it specifies the domain you wish Prosody to serve."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30377
msgid "You can perform various sanity checks on the generated configuration with the @code{prosodyctl check} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30381
msgid "Prosodyctl will also help you to import certificates from the @code{letsencrypt} directory so that the @code{prosody} user can access them.  See @url{https://prosody.im/doc/letsencrypt}."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:30384
#, no-wrap
msgid "prosodyctl --root cert import /etc/certs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30391
msgid "The available configuration parameters follow.  Each parameter definition is preceded by its type; for example, @samp{string-list foo} indicates that the @code{foo} parameter should be specified as a list of strings.  Types starting with @code{maybe-} denote parameters that won't show up in @code{prosody.cfg.lua} when their value is left unspecified."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30395
msgid "There is also a way to specify the configuration as a string, if you have an old @code{prosody.cfg.lua} file that you want to port over from some other system; see the end for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30398
msgid "The @code{file-object} type designates either a file-like object (@pxref{G-Expressions, file-like objects}) or a file name."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30408
msgid "Available @code{prosody-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30409
#, no-wrap
msgid "{@code{prosody-configuration} parameter} package prosody"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30411
msgid "The Prosody package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30413
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name data-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30417
msgid "Location of the Prosody data storage directory.  See @url{https://prosody.im/doc/configure}.  Defaults to @samp{\"/var/lib/prosody\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30419
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-object-list plugin-paths"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30423
msgid "Additional plugin directories.  They are searched in all the specified paths in order.  See @url{https://prosody.im/doc/plugins_directory}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30425
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name certificates"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30430
msgid "Every virtual host and component needs a certificate so that clients and servers can securely verify its identity.  Prosody will automatically load certificates/keys from the directory specified here.  Defaults to @samp{\"/etc/prosody/certs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30432
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list admins"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30438
msgid "This is a list of accounts that are admins for the server.  Note that you must create the accounts separately.  See @url{https://prosody.im/doc/admins} and @url{https://prosody.im/doc/creating_accounts}.  Example: @code{(admins '(\"user1@@example.com\" \"user2@@example.net\"))} Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30440
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean use-libevent?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30444
msgid "Enable use of libevent for better performance under high load.  See @url{https://prosody.im/doc/libevent}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30446
#, no-wrap
msgid "{@code{prosody-configuration} parameter} module-list modules-enabled"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30452
msgid "This is the list of modules Prosody will load on startup.  It looks for @code{mod_modulename.lua} in the plugins folder, so make sure that exists too.  Documentation on modules can be found at: @url{https://prosody.im/doc/modules}.  Defaults to @samp{'(\"roster\" \"saslauth\" \"tls\" \"dialback\" \"disco\" \"carbons\" \"private\" \"blocklist\" \"vcard\" \"version\" \"uptime\" \"time\" \"ping\" \"pep\" \"register\" \"admin_adhoc\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30454
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list modules-disabled"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30458
msgid "@samp{\"offline\"}, @samp{\"c2s\"} and @samp{\"s2s\"} are auto-loaded, but should you want to disable them then add them to this list.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30460
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-object groups-file"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30465
msgid "Path to a text file where the shared groups are defined.  If this path is empty then @samp{mod_groups} does nothing.  See @url{https://prosody.im/doc/modules/mod_groups}.  Defaults to @samp{\"/var/lib/prosody/sharedgroups.txt\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30467
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean allow-registration?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30471
msgid "Disable account creation by default, for security.  See @url{https://prosody.im/doc/creating_accounts}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30473
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-ssl-configuration ssl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30478
msgid "These are the SSL/TLS-related settings.  Most of them are disabled so to use Prosody's defaults.  If you do not completely understand these options, do not add them to your config, it is easy to lower the security of your server using them.  See @url{https://prosody.im/doc/advanced_ssl_config}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30480
msgid "Available @code{ssl-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30481
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string protocol"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30483
msgid "This determines what handshake to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30485
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30487
msgid "Path to your private key file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30489
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name certificate"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30491
msgid "Path to your certificate file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30493
#, no-wrap
msgid "{@code{ssl-configuration} parameter} file-object capath"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30497
msgid "Path to directory containing root certificates that you wish Prosody to trust when verifying the certificates of remote servers.  Defaults to @samp{\"/etc/ssl/certs\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30499
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-object cafile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30502
msgid "Path to a file containing root certificates that you wish Prosody to trust.  Similar to @code{capath} but with all certificates concatenated together."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30504
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list verify"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30507
msgid "A list of verification options (these mostly map to OpenSSL's @code{set_verify()} flags)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30509
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30513
msgid "A list of general options relating to SSL/TLS@.  These map to OpenSSL's @code{set_options()}.  For a full list of options available in LuaSec, see the LuaSec source."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30515
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-non-negative-integer depth"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30518
msgid "How long a chain of certificate authorities to check when looking for a trusted root certificate."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30520
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string ciphers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30523
msgid "An OpenSSL cipher string.  This selects what ciphers Prosody will offer to clients, and in what order."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30525
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-file-name dhparam"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30529
msgid "A path to a file containing parameters for Diffie-Hellman key exchange.  You can create such a file with: @code{openssl dhparam -out /etc/prosody/certs/dh-2048.pem 2048}"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30531
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string curve"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30534
msgid "Curve for Elliptic curve Diffie-Hellman.  Prosody's default is @samp{\"secp384r1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30536
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string-list verifyext"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30538
msgid "A list of ``extra'' verification options."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30540
#, no-wrap
msgid "{@code{ssl-configuration} parameter} maybe-string password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30542
msgid "Password for encrypted private keys."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30546
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean c2s-require-encryption?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30550
msgid "Whether to force all client-to-server connections to be encrypted or not.  See @url{https://prosody.im/doc/modules/mod_tls}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30552
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list disable-sasl-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30556
msgid "Set of mechanisms that will never be offered.  See @url{https://prosody.im/doc/modules/mod_saslauth}.  Defaults to @samp{'(\"DIGEST-MD5\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30558
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list insecure-sasl-mechanisms"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30562
msgid "Set of mechanisms that will not be offered on unencrypted connections.  See @url{https://prosody.im/doc/modules/mod_saslauth}.  Defaults to @samp{'(\"PLAIN\" \"LOGIN\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30564
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean s2s-require-encryption?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30568
msgid "Whether to force all server-to-server connections to be encrypted or not.  See @url{https://prosody.im/doc/modules/mod_tls}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30570
#, no-wrap
msgid "{@code{prosody-configuration} parameter} boolean s2s-secure-auth?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30576
msgid "Whether to require encryption and certificate authentication.  This provides ideal security, but requires servers you communicate with to support encryption AND present valid, trusted certificates.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30578
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list s2s-insecure-domains"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30584
msgid "Many servers don't support encryption or have invalid or self-signed certificates.  You can list domains here that will not be required to authenticate using certificates.  They will be authenticated using DNS@.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30586
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string-list s2s-secure-domains"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30591
msgid "Even if you leave @code{s2s-secure-auth?} disabled, you can still require valid certificates for some domains by specifying a list here.  See @url{https://prosody.im/doc/s2s#security}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30593
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string authentication"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30601
msgid "Select the authentication backend to use.  The default provider stores passwords in plaintext and uses Prosody's configured data storage to store the authentication data.  If you do not trust your server please see @url{https://prosody.im/doc/modules/mod_auth_internal_hashed} for information about using the hashed backend.  See also @url{https://prosody.im/doc/authentication} Defaults to @samp{\"internal_plain\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30603
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-string log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30607
msgid "Set logging options.  Advanced logging configuration is not yet supported by the Prosody service.  See @url{https://prosody.im/doc/logging}.  Defaults to @samp{\"*syslog\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30609
#, no-wrap
msgid "{@code{prosody-configuration} parameter} file-name pidfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30612
msgid "File to write pid in.  See @url{https://prosody.im/doc/modules/mod_posix}.  Defaults to @samp{\"/var/run/prosody/prosody.pid\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30614
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-non-negative-integer http-max-content-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30616
msgid "Maximum allowed size of the HTTP body (in bytes)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30618
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-string http-external-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30623
msgid "Some modules expose their own URL in various ways.  This URL is built from the protocol, host and port used.  If Prosody sits behind a proxy, the public URL will be @code{http-external-url} instead.  See @url{https://prosody.im/doc/http#external_url}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30625
#, no-wrap
msgid "{@code{prosody-configuration} parameter} virtualhost-configuration-list virtualhosts"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30630
msgid "A host in Prosody is a domain on which user accounts can be created.  For example if you want your users to have addresses like @samp{\"john.smith@@example.com\"} then you need to add a host @samp{\"example.com\"}.  All options in this list will apply only to this host."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:30637
msgid "The name @emph{virtual} host is used in configuration to avoid confusion with the actual physical host that Prosody is installed on.  A single Prosody instance can serve many domains, each one defined as a VirtualHost entry in Prosody's configuration.  Conversely a server that hosts a single domain would have just one VirtualHost entry."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:30639
msgid "See @url{https://prosody.im/doc/configure#virtual_host_settings}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30642
msgid "Available @code{virtualhost-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30644 guix-git/doc/guix.texi:30666
#: guix-git/doc/guix.texi:30719
msgid "all these @code{prosody-configuration} fields: @code{admins}, @code{use-libevent?}, @code{modules-enabled}, @code{modules-disabled}, @code{groups-file}, @code{allow-registration?}, @code{ssl}, @code{c2s-require-encryption?}, @code{disable-sasl-mechanisms}, @code{insecure-sasl-mechanisms}, @code{s2s-require-encryption?}, @code{s2s-secure-auth?}, @code{s2s-insecure-domains}, @code{s2s-secure-domains}, @code{authentication}, @code{log}, @code{http-max-content-size}, @code{http-external-url}, @code{raw-content}, plus:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30644
#, no-wrap
msgid "{@code{virtualhost-configuration} parameter} string domain"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30646
msgid "Domain you wish Prosody to serve."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30650
#, no-wrap
msgid "{@code{prosody-configuration} parameter} int-component-configuration-list int-components"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30655
msgid "Components are extra services on a server which are available to clients, usually on a subdomain of the main server (such as @samp{\"mycomponent.example.com\"}).  Example components might be chatroom servers, user directories, or gateways to other protocols."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30659
msgid "Internal components are implemented with Prosody-specific plugins.  To add an internal component, you simply fill the hostname field, and the plugin you wish to use for the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30662
msgid "See @url{https://prosody.im/doc/components}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30664
msgid "Available @code{int-component-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30666
#, no-wrap
msgid "{@code{int-component-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30668 guix-git/doc/guix.texi:30725
msgid "Hostname of the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30670
#, no-wrap
msgid "{@code{int-component-configuration} parameter} string plugin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30672
msgid "Plugin you wish to use for the component."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30674
#, no-wrap
msgid "{@code{int-component-configuration} parameter} maybe-mod-muc-configuration mod-muc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30677
msgid "Multi-user chat (MUC) is Prosody's module for allowing you to create hosted chatrooms/conferences for XMPP users."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30681
msgid "General information on setting up and using multi-user chatrooms can be found in the ``Chatrooms'' documentation (@url{https://prosody.im/doc/chatrooms}), which you should read if you are new to XMPP chatrooms."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30683
msgid "See also @url{https://prosody.im/doc/modules/mod_muc}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30685
msgid "Available @code{mod-muc-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30686
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30689
msgid "The name to return in service discovery responses.  Defaults to @samp{\"Prosody Chatrooms\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30691
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} string-or-boolean restrict-room-creation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30698
msgid "If @samp{#t}, this will only allow admins to create new chatrooms.  Otherwise anyone can create a room.  The value @samp{\"local\"} restricts room creation to users on the service's parent domain.  E.g.@: @samp{user@@example.com} can create rooms on @samp{rooms.example.com}.  The value @samp{\"admin\"} restricts to service administrators only.  Defaults to @samp{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30700
#, no-wrap
msgid "{@code{mod-muc-configuration} parameter} non-negative-integer max-history-messages"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30704
msgid "Maximum number of history messages that will be sent to the member that has just joined the room.  Defaults to @samp{20}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30710
#, no-wrap
msgid "{@code{prosody-configuration} parameter} ext-component-configuration-list ext-components"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30715
msgid "External components use XEP-0114, which most standalone components support.  To add an external component, you simply fill the hostname field.  See @url{https://prosody.im/doc/components}.  Defaults to @samp{'()}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30717
msgid "Available @code{ext-component-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30719
#, no-wrap
msgid "{@code{ext-component-configuration} parameter} string component-secret"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30721
msgid "Password which the component will use to log in."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30723
#, no-wrap
msgid "{@code{ext-component-configuration} parameter} string hostname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30729
#, no-wrap
msgid "{@code{prosody-configuration} parameter} non-negative-integer-list component-ports"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30732
msgid "Port(s) Prosody listens on for component connections.  Defaults to @samp{'(5347)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30734
#, no-wrap
msgid "{@code{prosody-configuration} parameter} string component-interface"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30737
msgid "Interface Prosody listens on for component connections.  Defaults to @samp{\"127.0.0.1\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30739
#, no-wrap
msgid "{@code{prosody-configuration} parameter} maybe-raw-content raw-content"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30741
msgid "Raw content that will be added to the configuration file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30749
msgid "It could be that you just want to get a @code{prosody.cfg.lua} up and running.  In that case, you can pass an @code{opaque-prosody-configuration} record as the value of @code{prosody-service-type}.  As its name indicates, an opaque configuration does not have easy reflective capabilities.  Available @code{opaque-prosody-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30750
#, no-wrap
msgid "{@code{opaque-prosody-configuration} parameter} package prosody"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30752
msgid "The prosody package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30754
#, no-wrap
msgid "{@code{opaque-prosody-configuration} parameter} string prosody.cfg.lua"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:30756
msgid "The contents of the @code{prosody.cfg.lua} to use."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30760
msgid "For example, if your @code{prosody.cfg.lua} is just the empty string, you could instantiate a prosody service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30765
#, no-wrap
msgid ""
"(service prosody-service-type\n"
"         (opaque-prosody-configuration\n"
"          (prosody.cfg.lua \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30769
#, no-wrap
msgid "BitlBee Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30771 guix-git/doc/guix.texi:30818
#: guix-git/doc/guix.texi:31245 guix-git/doc/guix.texi:31458
#, no-wrap
msgid "IRC (Internet Relay Chat)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30772
#, no-wrap
msgid "IRC gateway"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:30775
msgid "@url{https://bitlbee.org,BitlBee} is a gateway that provides an IRC interface to a variety of messaging protocols such as XMPP."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30776
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "bitlbee-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30780
msgid "This is the service type for the @url{https://bitlbee.org,BitlBee} IRC gateway daemon.  Its value is a @code{bitlbee-configuration} (see below)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30783
msgid "To have BitlBee listen on port 6667 on localhost, add this line to your services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30786
#, no-wrap
msgid "(service bitlbee-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30789
#, no-wrap
msgid "{Data Type} bitlbee-configuration"
msgstr "{Tipo de dados} bitlbee-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30791
msgid "This is the configuration for BitlBee, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30793
#, no-wrap
msgid "@code{interface} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:30794
#, no-wrap
msgid "@code{port} (default: @code{6667})"
msgstr "@code{port} (padrão: @code{6667})"

#. type: table
#: guix-git/doc/guix.texi:30797
msgid "Listen on the network interface corresponding to the IP address specified in @var{interface}, on @var{port}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30801
msgid "When @var{interface} is @code{127.0.0.1}, only local clients can connect; when it is @code{0.0.0.0}, connections can come from any networking interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30802
#, no-wrap
msgid "@code{bitlbee} (default: @code{bitlbee})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30804
msgid "The BitlBee package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30805
#, no-wrap
msgid "@code{plugins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30807
msgid "List of plugin packages to use---e.g., @code{bitlbee-discord}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:30810
msgid "Configuration snippet added as-is to the BitlBee configuration file."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:30813
#, fuzzy, no-wrap
#| msgid "VPN Services"
msgid "ngIRCd service"
msgstr "Serviços VPN"

#. type: cindex
#: guix-git/doc/guix.texi:30815
#, no-wrap
msgid "IRCd, Internet Relay Chat daemon"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:30816
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "IRC daemon service"
msgstr "Serviços base"

#. type: cindex
#: guix-git/doc/guix.texi:30817
#, fuzzy, no-wrap
#| msgid "Kerberos services."
msgid "IRC server service"
msgstr "Serviços Kerberos."

#. type: Plain text
#: guix-git/doc/guix.texi:30823
msgid "@url{https://ngircd.barton.de/, ngIRCd}, is a lightweight @acronym{IRCd, Internet Relay Chat daemon}, which can be used to host your own IRC server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:30824
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ngircd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:30827
#, fuzzy
msgid "The service type for ngIRCd.  Its value is a @code{ngircd-configuration} object, documented below."
msgstr "Gerencie a configuração do sistema operacional."

#. type: defvar
#: guix-git/doc/guix.texi:30830
msgid "In its most simple form, the service can be used with its default configuration, like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30833
#, fuzzy, no-wrap
msgid "(service ngircd-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:30836
msgid "A slightly more complex example configuration could look like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:30848
#, no-wrap
msgid ""
"(service ngircd-service-type\n"
"         (ngircd-configuration\n"
"          (channels\n"
"           (list (ngircd-channel\n"
"                  (name \"#fruits\")\n"
"                  (topic \"All things fruits -- veggies are off-topic\"))))\n"
"          (operators\n"
"           (list (ngircd-operator\n"
"                  (name \"mikan\")\n"
"                  (password \"tomatoes-are-fruits/carrots-are-not\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30856
#, fuzzy, no-wrap
#| msgid "{Data Type} nscd-configuration"
msgid "{Data Type} ngircd-configuration"
msgstr "{Tipo de dados} nscd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:30858
#, fuzzy
msgid "Available @code{ngircd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:30860
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{ngircd} (default: @code{ngircd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30862
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{ngircd} package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:30865
msgid "Turn on debugging messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30866 guix-git/doc/guix.texi:31337
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{(user-processes networking)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: item
#: guix-git/doc/guix.texi:30869
#, fuzzy, no-wrap
msgid "@code{global} (type: ngircd-global)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30871
msgid "A ngircd-global record object used to specify global options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30872
#, fuzzy, no-wrap
msgid "@code{limits} (type: maybe-ngircd-limits)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30874
msgid "The ngircd-limits record object used to specify limits options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30875
#, fuzzy, no-wrap
msgid "@code{options} (type: ngircd-options)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30878
msgid "The ngircd-options record object used to specify optional features and configuration options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30879
#, fuzzy, no-wrap
msgid "@code{ssl} (type: maybe-ngircd-ssl)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30881
msgid "The ngircd-ssl record object used to specify the SSL-related options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30882
#, fuzzy, no-wrap
msgid "@code{operators} (type: maybe-list-of-ngircd-operators)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30884
msgid "A list of ngircd-operator record objects used to specify the operators."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30885
#, fuzzy, no-wrap
msgid "@code{servers} (type: maybe-list-of-ngircd-servers)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30888
msgid "A list of ngircd-server record objects used to specify other remote servers to connect to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30889
#, fuzzy, no-wrap
msgid "@code{channels} (type: maybe-list-of-ngircd-channels)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30892
msgid "A list of ngircd-channels record objects specifying pre-defined channels to be created by the server when starting up."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:30902
#, fuzzy, no-wrap
#| msgid "{Data Type} nscd-cache"
msgid "{Data Type} ngircd-global"
msgstr "{Tipo de dados} nscd-cache"

#. type: deftp
#: guix-git/doc/guix.texi:30904
#, fuzzy
msgid "Available @code{ngircd-global} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:30906 guix-git/doc/guix.texi:38709
#: guix-git/doc/guix.texi:39206
#, fuzzy, no-wrap
msgid "@code{name} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30912
msgid "Server name in the IRC network.  This is an individual name of the IRC server, it is not related to the DNS host name.  It must be unique in the IRC network and must contain at least one dot (@samp{.}) character.  When not set, ngIRCd tries to deduce a valid IRC server name from the local host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30913
#, fuzzy, no-wrap
msgid "@code{admin-info-1} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30915
#, fuzzy
#| msgid "System administration"
msgid "First administrator information."
msgstr "Administração do Sistema"

#. type: item
#: guix-git/doc/guix.texi:30916
#, fuzzy, no-wrap
msgid "@code{admin-info-2} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30918
#, fuzzy
#| msgid "System administration"
msgid "Second administrator information."
msgstr "Administração do Sistema"

#. type: item
#: guix-git/doc/guix.texi:30919
#, fuzzy, no-wrap
msgid "@code{admin-email} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30921
msgid "Email to reach administrators."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30922
#, fuzzy, no-wrap
msgid "@code{help-file} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30924
msgid "File-like containing the ngIRCd help text."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30925
#, fuzzy, no-wrap
msgid "@code{info} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30928
msgid "Info text of the server.  This will be shown by WHOIS and LINKS requests for example."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30929
#, fuzzy, no-wrap
msgid "@code{listen} (default: @code{(\"::\" \"0.0.0.0\")}) (type: list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30932
msgid "A list of IP address on which the server should listen.  By default it listens on all configured IP addresses and interfaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30933
#, fuzzy, no-wrap
msgid "@code{motd-file} (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30936
msgid "Text file with the @i{message of the day} (MOTD).  This message will be shown to all users connecting to the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30937
#, fuzzy, no-wrap
msgid "@code{motd-phrase} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30940
msgid "A simple phrase (<127 chars) to use if you don't want to use a MOTD file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30941
#, fuzzy, no-wrap
msgid "@code{network} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30945
msgid "The name of the IRC network to which this server belongs.  This name is optional, should only contain ASCII characters, and can't contain spaces.  It is only used to inform clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30946
#, fuzzy, no-wrap
msgid "@code{password} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30950
msgid "Global password or all users needed to connect to the server.  By default, no password is required.  PAM must be disabled for this option to have an effect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30951
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/run/ngircd/ngircd.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30953
msgid "The file name where the PID of ngIRCd should be written after it starts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30954
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{ports} (default: @code{(6667)}) (type: list-of-ports)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30957
msgid "Port number(s) on which the server should listen for @emph{unencrypted} connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30958
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{server-uid} (default: @code{\"ngircd\"}) (type: string-or-number)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30960
#, fuzzy
#| msgid "Package management commands."
msgid "The user that the @command{ngircd} command should run as."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:30961
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{server-gid} (default: @code{\"ngircd\"}) (type: string-or-number)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:30963
#, fuzzy
#| msgid "Package management commands."
msgid "The group that the @command{ngircd} command should run as."
msgstr "Comandos de gerenciamento de pacote."

#. type: deftp
#: guix-git/doc/guix.texi:30973
#, fuzzy, no-wrap
#| msgid "{Data Type} dicod-database"
msgid "{Data Type} ngircd-limits"
msgstr "{Tipo de dados} dicod-database"

#. type: deftp
#: guix-git/doc/guix.texi:30975
#, fuzzy
msgid "Available @code{ngircd-limits} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:30977
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{connect-retry} (default: @code{60}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30980
msgid "The number of seconds the server should wait before re-attempting to establish a link to not yet (or no longer) connected servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30981
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-connections} (default: @code{0}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30984
msgid "Maximum number of simultaneous in- and outbound connections the server is allowed to accept.  There is no limit by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30985
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-connections-ip} (default: @code{5}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30989
msgid "Maximum number of simultaneous connections from a single IP address that the server will accept.  This configuration options lowers the risk of denial of service attacks (DoS).  Set to 0 to remove the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30990
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-joins} (default: @code{10}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30993
msgid "Maximum number of channels a user can be member of.  Set to 0 to remove the limit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30994
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-list-size} (default: @code{100}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:30996
msgid "Maximum number of channels returned in response to a LIST command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:30997
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ping-timeout} (default: @code{120}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31000
msgid "Number of seconds of inactivity after which the server will send a PING to the peer to test whether it is alive or not."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31001
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pong-timeout} (default: @code{20}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31004
msgid "If a client fails to answer a PING with a PONG within this amount of seconds, it will be disconnected by the server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31014
#, fuzzy, no-wrap
#| msgid "{Data Type} log-rotation"
msgid "{Data Type} ngircd-options"
msgstr "{Tipo de dados} log-rotation"

#. type: deftp
#: guix-git/doc/guix.texi:31016
#, fuzzy
msgid "Available @code{ngircd-options} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:31018
#, fuzzy, no-wrap
msgid "@code{allowed-channel-types} (default: @code{\"#&+\"}) (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31022
msgid "List of allowed channel types (channel prefixes) for newly created channels on the local server.  By default, all supported channel types are allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31023
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{allow-remote-oper?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31027
msgid "If this option is active, IRC operators connected to remote servers are allowed to control this local server using administrative commands, for example like CONNECT, DIE, SQUIT, etc."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31028
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{connect-ipv4?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31031
msgid "Set to @code{#f} to prevent ngIRCd from connecting to other IRC servers using the IPv4 protocol, allowed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31032
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{connect-ipv6?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31035
msgid "Set to @code{#f} to prevent ngIRCd from connecting to other IRC servers using the IPv6 protocol, allowed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31036
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{dns?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31040
msgid "Set to @code{#f} to disable DNS lookups when clients connect.  If you configure the daemon to connect to other servers, ngIRCd may still perform a DNS lookup if required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31041
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{more-privacy?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31049
msgid "Set this to @code{#t} to have ngIRCd censor user idle time, logon time as well as the PART/QUIT messages (that sometimes used to inform everyone about which client software is being used).  WHOWAS requests are also silently ignored, and NAMES output doesn't list any clients for non-members.  This option is most useful when ngIRCd is being used together with anonymizing software such as TOR or I2P and one does not wish to make it too easy to collect statistics on the users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31050
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{notice-before-registration?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31054
msgid "Normally ngIRCd doesn't send any messages to a client until it is registered.  Enable this option to let the daemon send @samp{NOTICE *} messages to clients while connecting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31055
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{oper-can-use-mode?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31058
msgid "Should IRC Operators be allowed to use the MODE command even if they are not(!) channel-operators?"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31059
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{oper-chan-p-auto-op?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31061
msgid "Should IRC Operators get AutoOp (+o) in persistent (+P) channels?"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31062
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{oper-server-mode?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31068
msgid "If @code{open-can-use-mode?} is @code{#t}, this may lead the compatibility problems with servers that run the ircd-irc2 software.  This option masks mode requests by non-chanops as if they were coming from the server.  Only enable this if you have ircd-irc2 servers in your IRC network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31069
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pam?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31076
msgid "Set to @code{#t} to enable calls to the PAM library at runtime; all users connecting without password are allowed to connect, all passwords given will fail.  Users identified without PAM are registered with a tilde (@samp{~}) prepended to their user name.  This defaults to @code{#f} in Guix because the service runs as an unprivileged user and thus cannot authenticate other users via the @code{pam_unix} PAM module."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31077
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pam-is-optional?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31082
msgid "Set to @code{#t} to make PAM authentication optional, causing clients not sending a password to still be able to connect, but won't become identified and keep the tilder (@samp{~}) character prepended to their supplied user name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31083
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{require-auth-ping?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31087
msgid "Set to @code{#t} to have ngIRCd send an authentication PING when a new client connects, and register this client only after receiving the corresponding PONG reply."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31097
#, fuzzy, no-wrap
#| msgid "{Data Type} ganeti-os"
msgid "{Data Type} ngircd-ssl"
msgstr "{Tipo de dados} ganeti-os"

#. type: deftp
#: guix-git/doc/guix.texi:31099
#, fuzzy
msgid "Available @code{ngircd-ssl} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:31101
#, fuzzy, no-wrap
msgid "@code{cert-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31103
msgid "SSL certificate file of the private server key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31104
#, fuzzy, no-wrap
msgid "@code{key-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31107
msgid "File name of the SSL Server Key to be used for SSL connections, which is required for SSL/TLS support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31108
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{ca-file} (default: @code{\"/etc/ssl/certs/ca-certificates.crt\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31111
msgid "A file listing all the certificates of the trusted Certificate Authorities."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31112
#, fuzzy, no-wrap
msgid "@code{ports} (type: maybe-list-of-ports)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31116
msgid "Like the global configuration's @code{port} option, except that ngIRCd will expect incoming connections to be SSL/TLS encrypted.  Common port numbers for SSL-encrypted IRC are 6669 and 6697."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31117
#, fuzzy, no-wrap
msgid "@code{cipher-list} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31121
msgid "The GnuTLS cipher suites allowed for SSL/TLS connections, a value such as @code{\"SECURE128:-VERS-SSL3.0\"}.  Refer to @samp{man 3 gnutls_priority_init} for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31122
#, fuzzy, no-wrap
msgid "@code{dh-file} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31127
msgid "A file-like containing the Diffie-Hellman parameters, which can be created with GnuTLS via @samp{certtool --generate-dh-params}.  If this file is not present, the Diffie-Hellman parameters will be computed on startup, which may take some time."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31137
#, fuzzy, no-wrap
#| msgid "{Data Type} nscd-configuration"
msgid "{Data Type} ngircd-operator"
msgstr "{Tipo de dados} nscd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31139
#, fuzzy
msgid "Available @code{ngircd-operator} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:31143
msgid "ID of the operator (may be different of the nickname)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31144
#, fuzzy, no-wrap
msgid "@code{password} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31146
msgid "Password of the IRC operator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31147
#, fuzzy, no-wrap
msgid "@code{mask} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31150
msgid "Mask that is to be checked before an /OPER for this account is accepted, for example: @code{\"nick!ident@@*.example.com\"}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31160
#, fuzzy, no-wrap
#| msgid "{Data Type} ntp-server"
msgid "{Data Type} ngircd-server"
msgstr "{Tipo de dados} ntp-server"

#. type: deftp
#: guix-git/doc/guix.texi:31162
#, fuzzy
msgid "Available @code{ngircd-server} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:31166
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "IRC name of the remote server."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:31167 guix-git/doc/guix.texi:31384
#, fuzzy, no-wrap
msgid "@code{host} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31169
msgid "Internet host name (or IP address) of the peer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31170
#, fuzzy, no-wrap
msgid "@code{my-password} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31174
msgid "Own password for this connection.  This password has to be configured as @code{peer-password} on the other server and must not have @samp{:} as first character."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31175
#, fuzzy, no-wrap
msgid "@code{peer-password} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31178
msgid "Foreign password for this connection.  This password has to be configured as @code{my-password} on the other server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31179 guix-git/doc/guix.texi:31379
#, fuzzy, no-wrap
msgid "@code{bind} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31182
msgid "IP address to use as source IP for the outgoing connection.  The default is to let the operating system decide."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31183 guix-git/doc/guix.texi:31387
#: guix-git/doc/guix.texi:36798
#, fuzzy, no-wrap
msgid "@code{port} (type: maybe-port)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31187
msgid "Port of the remote server to which ngIRCd should connect (active).  If no port is assigned to a configured server, the daemon only waits for incoming connections (passive, which is the default)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31188
#, fuzzy, no-wrap
msgid "@code{group} (type: maybe-number)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31190
msgid "Group of this server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31191
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{passive?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31194
msgid "Set to @code{#t} to disable automatic connection even if the port value is specified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31195
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ssl-connect?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31198
msgid "Set to @code{#t} to enforce the use of TLS to connect to the remote server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31199
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ssl-verify?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31205
msgid "Set to @code{#f} to disable the verification of the TLS certificate presented by the remote server.  This can be useful if the remote server uses a self-signed certificate.  Beware that this degrades security by enabling man-in-the-middle attacks, as the @emph{remote site is not verified at all}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31215
#, fuzzy, no-wrap
#| msgid "{Data Type} nscd-cache"
msgid "{Data Type} ngircd-channel"
msgstr "{Tipo de dados} nscd-cache"

#. type: deftp
#: guix-git/doc/guix.texi:31217
#, fuzzy
msgid "Available @code{ngircd-channel} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:31221
msgid "Name of the channel, including channel prefix (\"#\" or \"&\")."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31222
#, fuzzy, no-wrap
msgid "@code{topic} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31224
#, fuzzy
#| msgid "The license of this manual."
msgid "Topic for this channel."
msgstr "A licença deste manual."

#. type: item
#: guix-git/doc/guix.texi:31225
#, fuzzy, no-wrap
msgid "@code{modes} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31230
msgid "Initial channel modes, as used in MODE commands.  Modifying lists (ban list, invite list, exception list) is supported.  If multiple MODE strings are specified, they are evaluated in the order listed (left to right)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31231
#, fuzzy, no-wrap
msgid "@code{key-file} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31235
msgid "Path and file name of a ngIRCd key file containing individual channel keys for different users.  Refer to @samp{man 5 ngircd.conf} for more details."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31243
#, fuzzy, no-wrap
#| msgid "Sound Services"
msgid "Pounce Service"
msgstr "Serviços de som"

#. type: cindex
#: guix-git/doc/guix.texi:31246
#, no-wrap
msgid "bouncer, IRC"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31247
#, no-wrap
msgid "Bounced Network Connection, BNC"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31251
msgid "@url{https://git.causal.agency/pounce/about/, pounce} is a multi-client, TLS-only IRC bouncer.  It maintains a persistent connection to an IRC server, acting as a proxy and buffer for a number of clients."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31252
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pounce-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31256
#, fuzzy
msgid "This is the service type for the pounce IRC bouncer.  Its value is a @code{pounce-configuration} configuration instance, which is documented below."
msgstr "Gerencie a configuração do sistema operacional."

#. type: cindex
#: guix-git/doc/guix.texi:31257
#, no-wrap
msgid "IRC bouncer configuration for Libera.Chat"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31258
#, fuzzy, no-wrap
#| msgid "home configuration"
msgid "Libera.Chat, IRC bouncer configuration"
msgstr "Configuração pessoal"

#. type: defvar
#: guix-git/doc/guix.texi:31273
msgid "The following example configures pounce to act as an IRC bouncer for the @url{https://libera.chat, Libera.Chat} server, using @acronym{CertFP, client certificate fingerprint} authentication to avoid leaking a sensitive password to the publicly readable store.  The equally sensitive TLS certificate file should be created in-place or transferred using a secure means such as SSH, prior to deploying the service.  The service activation will ensure the ownership and permissions of the certificate/key files are set correctly.  In the below example, it is placed at @file{/etc/pounce/libera.pem} on the target machine.  Pounce itself can be used to generate a TLS certificate, using the @samp{pounce -g libera.pem} command, which concatenates both the private key and the public certificate in the specified file name.  For more information regarding CertFP authentication, refer to @samp{man pounce} or the Libera.Chat guide at @url{https://libera.chat/guides/certfp}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31281
#, no-wrap
msgid ""
"(service pounce-service-type\n"
"         (pounce-configuration\n"
"          (host \"irc.libera.chat\")\n"
"          (client-cert \"/etc/pounce/libera.pem\")\n"
"          (nick \"hannah\")\n"
"          (join (list \"#gnu\" \"#guix\" \"#guile\" \"#hurd\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31297
msgid "Once deployed on the target machine, pounce will act as an IRC server listening for TLS connections on the 6697 TCP port of the @samp{localhost} address of that machine.  By default, a self-signed certificate for pounce is created at @file{/var/lib/pounce/.config/pounce/localhost.cert}.  If you plan to expose the bouncer to the public Internet, it is advisable to use a @acronym{CA, Certificate Authority}-signed certificate, as can be obtained using a certificate service (@pxref{Certificate Services}), so that IRC clients can verify the certificate out of the box.  If you instead plan to connect to the bouncer strictly via a secure connection, for example using a @acronym{VPN, Virtual Private Network} or @acronym{SSH, Secure Shell}, then it is acceptable to simply let your IRC client trust the auto-generated, self-signed pounce certificate or even disable TLS certificate verification in your client."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31298
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "IRC bouncer configuration for OFTC"
msgstr "cat $(herd configuration tor)\n"

#. type: cindex
#: guix-git/doc/guix.texi:31299
#, fuzzy, no-wrap
#| msgid "home configuration"
msgid "OFTC, IRC bouncer configuration"
msgstr "Configuração pessoal"

#. type: defvar
#: guix-git/doc/guix.texi:31309
msgid "To connect to a second server, a second pounce instance is needed, taking care to specify the @code{provision} field of its @code{pounce-configuration} to avoid a name clash with the previous service, along with a distinct @code{local-port} and @code{log-file}.  The following example shows how to configure another bouncer, this time for the @url{https://www.oftc.net, OFTC} IRC server.  Like in the previous example, CertFP authentication is used, which can be configured similarly.  For more details about using CertFP with the OFTC IRC server, refer to @url{https://www.oftc.net/NickServ/CertFP/}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31320
#, no-wrap
msgid ""
"(service pounce-service-type\n"
"         (pounce-configuration\n"
"          (shepherd-provision '(pounce-oftc))\n"
"          (local-port 6698)\n"
"          (log-file \"/var/log/pounce-oftc.log\")\n"
"          (host \"irc.oftc.net\")\n"
"          (client-cert \"/etc/pounce/oftc.pem\")\n"
"          (nick \"sena\")\n"
"          (join (list \"#gcc\" \"#glibc\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31327
#, fuzzy, no-wrap
#| msgid "{Data Type} upower-configuration"
msgid "{Data Type} pounce-configuration"
msgstr "{Tipo de dados} upower-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31329
#, fuzzy
msgid "Available @code{pounce-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:31331
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{pounce} (default: @code{pounce}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31333
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{pounce} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31334
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-provision} (default: @code{(pounce)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: item
#: guix-git/doc/guix.texi:31340
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/pounce.log\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31342
#, fuzzy
#| msgid "The GPM package to use."
msgid "The log file name to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31343
#, fuzzy, no-wrap
msgid "@code{verbose?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31345
msgid "When true, log IRC messages to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31346
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{local-host} (default: @code{\"localhost\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31348
#, fuzzy
#| msgid "The right tools."
msgid "The host to bind to."
msgstr "As ferramentas certas."

#. type: item
#: guix-git/doc/guix.texi:31349
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{local-port} (default: @code{6697}) (type: maybe-port)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31351
#, fuzzy
#| msgid "The right tools."
msgid "The port to bind to."
msgstr "As ferramentas certas."

#. type: item
#: guix-git/doc/guix.texi:31352
#, fuzzy, no-wrap
msgid "@code{local-ca} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31357
msgid "Require clients to authenticate using a TLS client certificate either contained in or signed by a certificate in the file loaded from @code{local-ca}, a file name.  The file is reloaded when the SIGUSR1 signal is received."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31358
#, fuzzy, no-wrap
msgid "@code{local-cert} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31364
msgid "File name of the TLS certificate to load.  The file is reloaded when the SIGUSR1 signal is received.  Unless specified, a self-signed certificate is generated at @file{/var/lib/pounce/.config/pounce/@var{host}.pem}, where @var{host} corresponds to the value of the @code{local-host} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31365
#, fuzzy, no-wrap
msgid "@code{local-priv} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31369
msgid "File name of the private TLS key to load.  Unless specified, a key is generated at @file{/var/lib/pounce/.config/pounce/@var{host}.key}, where @var{host} corresponds to the value of the @code{local-host} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31370
#, fuzzy, no-wrap
msgid "@code{local-pass} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31373
msgid "Require the server password pass for clients to connect.  The pass string must be hashed using @samp{pounce -x}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31374
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{size} (default: @code{4096}) (type: maybe-power-of-two)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31378
msgid "Set the number of messages contained in the buffer to @var{size}.  This sets the maximum number of recent messages which can be relayed to a reconnecting client.  The size must be a power of two."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31383
msgid "Host to bind the @emph{source} address to when connecting to the server.  To connect from any address over IPv4 only, use @samp{0.0.0.0}.  To connect from any address over IPv6 only, use @samp{::}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31386
#, fuzzy
#| msgid "The GPM package to use."
msgid "The host name to connect to."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:31389
#, fuzzy
#| msgid "The GPM package to use."
msgid "The port number to connect to."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31390
#, fuzzy, no-wrap
msgid "@code{pass} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31393
msgid "Password to use to log in with the server.  The password must have been hashed via the @samp{pounce -x} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31394
#, fuzzy, no-wrap
msgid "@code{join} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31396
msgid "The list of channels to join."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31397 guix-git/doc/guix.texi:45130
#, fuzzy, no-wrap
msgid "@code{mode} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31399
#, fuzzy
#| msgid "The rottlog service."
msgid "The user mode."
msgstr "O serviço rottlog."

#. type: item
#: guix-git/doc/guix.texi:31400 guix-git/doc/guix.texi:50383
#: guix-git/doc/guix.texi:50414 guix-git/doc/guix.texi:51251
#, fuzzy, no-wrap
msgid "@code{user} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31402
msgid "To set the username.  The default username is the same as the nickname."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31403
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{nick} (default: @code{\"pounce\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31405
msgid "Set nickname to @var{nick}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31406
#, fuzzy, no-wrap
msgid "@code{real} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31408
msgid "Set the real name.  The default is @code{nick}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31409
#, fuzzy, no-wrap
msgid "@code{away} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31412
msgid "The away status to use when no clients are connected and no other away status has been set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31413
#, fuzzy, no-wrap
msgid "@code{quit} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31415
#, fuzzy
#| msgid "Service to mount volumes when logging in."
msgid "The message to use when quitting."
msgstr "Serviço para montar volumes ao efetuar login."

#. type: item
#: guix-git/doc/guix.texi:31416
#, fuzzy, no-wrap
msgid "@code{no-names?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31420
msgid "Do not request @samp{NAMES} for each channel when a client connects.  This avoids already connected clients receiving unsolicited responses but prevents new clients from populating user lists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31421
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{queue-interval} (default: @code{200}) (type: maybe-number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31425
msgid "Set the server send queue interval in milliseconds.  The queue is used to send automated messages from pounce to the server.  Messages from clients are sent to the server directly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31426
#, fuzzy, no-wrap
msgid "@code{trust} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31429
msgid "File name of a certificate to trust.  When used, server name verification is disabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31430
#, fuzzy, no-wrap
msgid "@code{client-cert} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31436
msgid "The file name of the TLS client.  If the private key is in a separate file, it is loaded with @code{client-priv}.  With @code{sasl-external?}, authenticate using SASL EXTERNAL.  Certificates can be generated with @samp{pounce -g}.  For more details, refer to ``Generating Client Certificates'' in @samp{man 1 pounce}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31437
#, fuzzy, no-wrap
msgid "@code{client-priv} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31439
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The file name of the TLS client private key."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:31440
#, fuzzy, no-wrap
msgid "@code{sasl-plain} (type: maybe-pair)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31444
msgid "A pair of the username and password in plain text to authenticate using SASL PLAIN.  Since this method requires the account password in plain text, it is recommended to use CertFP instead with @code{sasl-external}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31445
#, fuzzy, no-wrap
msgid "@code{sasl-external?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31448
msgid "Authenticate using SASL EXTERNAL, also known as CertFP.  The TLS client certificate is loaded from @code{client-cert}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31456
#, no-wrap
msgid "Quassel Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31462
msgid "@url{https://quassel-irc.org/,Quassel} is a distributed IRC client, meaning that one or more clients can attach to and detach from the central core."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31463
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "quassel-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31467
msgid "This is the service type for the @url{https://quassel-irc.org/,Quassel} IRC backend daemon.  Its value is a @code{quassel-configuration} (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31469
#, no-wrap
msgid "{Data Type} quassel-configuration"
msgstr "{Tipo de dados} quassel-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31471
msgid "This is the configuration for Quassel, with the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31473
#, no-wrap
msgid "@code{quassel} (default: @code{quassel})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31475
msgid "The Quassel package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31476
#, no-wrap
msgid "@code{interface} (default: @code{\"::,0.0.0.0\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31477
#, no-wrap
msgid "@code{port} (default: @code{4242})"
msgstr "@code{port} (padrão: @code{4242})"

#. type: table
#: guix-git/doc/guix.texi:31481
msgid "Listen on the network interface(s) corresponding to the IPv4 or IPv6 interfaces specified in the comma delimited @var{interface}, on @var{port}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31482
#, no-wrap
msgid "@code{loglevel} (default: @code{\"Info\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31485
msgid "The level of logging desired.  Accepted values are Debug, Info, Warning and Error."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31488
#, fuzzy, no-wrap
#| msgid "Guix Services"
msgid "Snuik Service"
msgstr "Serviços Guix"

#. type: cindex
#: guix-git/doc/guix.texi:31490 guix-git/doc/guix.texi:51308
#, no-wrap
msgid "irc-bot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31491 guix-git/doc/guix.texi:51309
#, no-wrap
msgid "snuik"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31497
msgid "The @uref{https://gitlab.com/janneke/snuik, Snuik IRC bot} can be run as a daemon to aid talking to users that are currently offline.  With the @code{(gnu services messaging)} service, you can configure it by adding a @code{snuik-service-type} service to the @code{services} field of your operating system declaration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31498
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "snuik-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31501
#, fuzzy
msgid "This is the type of the Snuik service, whose value is a @code{snuik-configuration} object."
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:31504
#, fuzzy
#| msgid "Manage installed software and system configuration."
msgid "Here is an example of a service and its configuration:"
msgstr "Gerencie softwares instalados e configuração do sistema."

#. type: lisp
#: guix-git/doc/guix.texi:31513
#, no-wrap
msgid ""
"(service snuik-service-type\n"
"         (snuik-configuration\n"
"          (password-file \"/var/run/snuik/.password.snuik\")\n"
"          (channels '(\"#bootstrappable\"\n"
"                      \"#dezyne\"\n"
"                      \"#guix-risc-v\"\n"
"                      \"#lilypond\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31515
#, fuzzy, no-wrap
#| msgid "{Data Type} nix-configuration"
msgid "{Data Type} snuik-configuration"
msgstr "{Tipo de dados} nix-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31517
#, fuzzy
msgid "Available @code{snuik-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:31519
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{snuik} (default: @code{snuik}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31521
#, fuzzy
msgid "The Snuik package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31522
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{server} (default: @code{\"irc.libera.chat\"})"
msgstr "@code{user} (padrão: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:31524
#, fuzzy
#| msgid "The GPM package to use."
msgid "The IRC server to connect to."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31525
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{6665}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31527
msgid "Port number used by the IRC server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31528
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{nick} (default: @code{\"snuik\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31530
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The nickname for snuik to use."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:31531
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{password} (default: @code{#f}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31533
#, fuzzy
#| msgid "Service to mount volumes when logging in."
msgid "The password to use when logging in."
msgstr "Serviço para montar volumes ao efetuar login."

#. type: item
#: guix-git/doc/guix.texi:31534
#, fuzzy, no-wrap
#| msgid "@code{password} (default: @code{#f})"
msgid "@code{password-file} (default: @code{\".password.<nick>})"
msgstr "@code{password} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31536
msgid "The file to read the password from to use when logging in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31537
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{channels} (default: @code{'(\"##botchat\")})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31539
msgid "The channels for snuik to join, a list of strings."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31543
msgid "Extra options will be passed to @command{snuik}, please run @command{snuik --help } for more information."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31547
#, fuzzy, no-wrap
#| msgid "Monitoring Services"
msgid "Mosquitto Service"
msgstr "Serviços de monitoramento"

#. type: Plain text
#: guix-git/doc/guix.texi:31553
msgid "@url{https://mosquitto.org/,Mosquitto} is a lightweight message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1.  It is suitable for use on all devices from low power single board computers to full servers."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31554
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mosquitto-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31557
#, fuzzy
msgid "This is the service type for the @url{https://mosquitto.org/,Mosquitto} MQTT broker.  Its value is a @code{mosquitto-configuration} (see below)."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:31559
#, fuzzy, no-wrap
#| msgid "{Data Type} mumi-configuration"
msgid "{Data Type} mosquitto-configuration"
msgstr "{Tipo de dados} mumi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31561
#, fuzzy
#| msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgid "This is the configuration for Mosquitto, with the following fields:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:31563
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{mosquitto})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31565
#, fuzzy
msgid "The Mosquitto package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:31569
msgid "The Mosquitto configuration file as a file-like object or the value @code{#f} to use the default configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31570
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{\"mosquitto\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31572
msgid "Owner of the broker process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31573
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"mosquitto\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31575
msgid "Owner's group of the broker process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31581
#, no-wrap
msgid "telephony, services"
msgstr "telefonia, serviços"

#. type: Plain text
#: guix-git/doc/guix.texi:31585
msgid "The @code{(gnu services telephony)} module contains Guix service definitions for telephony services.  Currently it provides the following services:"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31586
#, no-wrap
msgid "Jami"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31588
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "jami-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31595
msgid "The service type for running Jami as a service.  It takes a @code{jami-configuration} object as a value, documented below.  This section describes how to configure a Jami server that can be used to host video (or audio) conferences, among other uses.  The following example demonstrates how to specify Jami account archives (backups) to be provisioned automatically:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31604
#, no-wrap
msgid ""
"(service jami-service-type\n"
"         (jami-configuration\n"
"          (accounts\n"
"           (list (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-1.gz\"))\n"
"                 (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-2.gz\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31609
msgid "When the accounts field is specified, the Jami account files of the service found under @file{/var/lib/jami} are recreated every time the service starts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31614
msgid "Jami accounts and their corresponding backup archives can be generated using the @code{jami} or @code{jami-gnome} Jami clients.  The accounts should not be password-protected, but it is wise to ensure their files are only readable by @samp{root}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31617
msgid "The next example shows how to declare that only some contacts should be allowed to communicate with a given account:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31629
#, no-wrap
msgid ""
"(service jami-service-type\n"
"         (jami-configuration\n"
"          (accounts\n"
"           (list (jami-account\n"
"                  (archive \"/etc/jami/unencrypted-account-1.gz\")\n"
"                  (peer-discovery? #t)\n"
"                  (rendezvous-point? #t)\n"
"                  (allowed-contacts\n"
"                   '(\"1dbcb0f5f37324228235564b79f2b9737e9a008f\"\n"
"                     \"2dbcb0f5f37324228235564b79f2b9737e9a008f\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31635
msgid "In this mode, only the declared @code{allowed-contacts} can initiate communication with the Jami account.  This can be used, for example, with rendezvous point accounts to create a private video conferencing space."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31638
msgid "To put the system administrator in full control of the conferences hosted on their system, the Jami service supports the following actions:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31650
#, no-wrap
msgid ""
"# herd doc jami list-actions\n"
"(list-accounts\n"
" list-account-details\n"
" list-banned-contacts\n"
" list-contacts\n"
" list-moderators\n"
" add-moderator\n"
" ban-contact\n"
" enable-account\n"
" disable-account)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31657
msgid "The above actions aim to provide the most valuable actions for moderation purposes, not to cover the whole Jami API.  Users wanting to interact with the Jami daemon from Guile may be interested in experimenting with the @code{(gnu build jami-service)} module, which powers the above Shepherd actions."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31663
msgid "The @code{add-moderator} and @code{ban-contact} actions accept a contact @emph{fingerprint} (40 characters long hash) as first argument and an account fingerprint or username as second argument:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31667
#, no-wrap
msgid ""
"# herd add-moderator jami 1dbcb0f5f37324228235564b79f2b9737e9a008f \\\n"
"  f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31671
#, no-wrap
msgid ""
"# herd list-moderators jami\n"
"Moderators for account f3345f2775ddfe07a4b0d95daea111d15fbc1199:\n"
"  - 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31676
msgid "In the case of @code{ban-contact}, the second username argument is optional; when omitted, the account is banned from all Jami accounts:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31679
#, no-wrap
msgid ""
"# herd ban-contact jami 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31683
#, no-wrap
msgid ""
"# herd list-banned-contacts jami\n"
"Banned contacts for account f3345f2775ddfe07a4b0d95daea111d15fbc1199:\n"
"  - 1dbcb0f5f37324228235564b79f2b9737e9a008f\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31687
msgid "Banned contacts are also stripped from their moderation privileges."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31692
msgid "The @code{disable-account} action allows to completely disconnect an account from the network, making it unreachable, while @code{enable-account} does the inverse.  They accept a single account username or fingerprint as first argument:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31695
#, no-wrap
msgid ""
"# herd disable-account jami f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31699
#, no-wrap
msgid ""
"# herd list-accounts jami\n"
"The following Jami accounts are available:\n"
"  - f3345f2775ddfe07a4b0d95daea111d15fbc1199 (dummy) [disabled]\n"
"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31710
msgid "The @code{list-account-details} action prints the detailed parameters of each accounts in the Recutils format, which means the @command{recsel} command can be used to select accounts of interest (@pxref{Selection Expressions,,,recutils, GNU recutils manual}).  Note that period characters (@samp{.}) found in the account parameter keys are mapped to underscores (@samp{_}) in the output, to meet the requirements of the Recutils format.  The following example shows how to print the account fingerprints for all accounts operating in the rendezvous point mode:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:31715
#, no-wrap
msgid ""
"# herd list-account-details jami | \\\n"
"  recsel -p Account.username -e 'Account.rendezVous ~ \"true\"'\n"
"Account_username: f3345f2775ddfe07a4b0d95daea111d15fbc1199\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31718
msgid "The remaining actions should be self-explanatory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31720
msgid "The complete set of available configuration options is detailed below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31725
#, no-wrap
msgid "{Data Type} jami-configuration"
msgstr "{Tipo de dados} jami-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31727
msgid "Available @code{jami-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31729
#, fuzzy, no-wrap
msgid "@code{libjami} (default: @code{libjami}) (type: package)"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31731
#, fuzzy
msgid "The Jami daemon package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:31732
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{dbus} (default: @code{dbus-for-jami}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31734
msgid "The D-Bus package to use to start the required D-Bus session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31735
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{nss-certs} (default: @code{nss-certs}) (type: package)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31737
msgid "The nss-certs package to use to provide TLS certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31738
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enable-logging?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:31740
msgid "Whether to enable logging to syslog."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31743
msgid "Whether to enable debug level messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31744
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{auto-answer?} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31746
msgid "Whether to force automatic answer to incoming calls."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31747
#, no-wrap
msgid "@code{accounts} (type: maybe-jami-account-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31752
msgid "A list of Jami accounts to be (re-)provisioned every time the Jami daemon service starts.  When providing this field, the account directories under @file{/var/lib/jami/} are recreated every time the service starts, ensuring a consistent state."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31758
#, no-wrap
msgid "{Data Type} jami-account"
msgstr "{Tipo de dados} jami-account"

#. type: deftp
#: guix-git/doc/guix.texi:31760
msgid "Available @code{jami-account} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31762
#, no-wrap
msgid "@code{archive} (type: string-or-computed-file)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31768
msgid "The account archive (backup) file name of the account.  This is used to provision the account when the service starts.  The account archive should @emph{not} be encrypted.  It is highly recommended to make it readable only to the @samp{root} user (i.e., not in the store), to guard against leaking the secret key material of the Jami account it contains."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31769
#, no-wrap
msgid "@code{allowed-contacts} (type: maybe-account-fingerprint-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31776
msgid "The list of allowed contacts for the account, entered as their 40 characters long fingerprint.  Messages or calls from accounts not in that list will be rejected.  When left specified, the configuration of the account archive is used as-is with respect to contacts and public inbound calls/messaging allowance, which typically defaults to allow any contact to communicate with the account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31777
#, no-wrap
msgid "@code{moderators} (type: maybe-account-fingerprint-list)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31783
msgid "The list of contacts that should have moderation privileges (to ban, mute, etc.  other users) in rendezvous conferences, entered as their 40 characters long fingerprint.  When left unspecified, the configuration of the account archive is used as-is with respect to moderation, which typically defaults to allow anyone to moderate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31784
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{rendezvous-point?} (type: maybe-boolean)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31788
msgid "Whether the account should operate in the rendezvous mode.  In this mode, all the incoming audio/video calls are mixed into a conference.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31789
#, fuzzy, no-wrap
msgid "@code{peer-discovery?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31795
msgid "Whether peer discovery should be enabled.  Peer discovery is used to discover other OpenDHT nodes on the local network, which can be useful to maintain communication between devices on such network even when the connection to the Internet has been lost.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31796
#, fuzzy, no-wrap
msgid "@code{bootstrap-hostnames} (type: maybe-list-of-strings)"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31800
msgid "A list of hostnames or IPs pointing to OpenDHT nodes, that should be used to initially join the OpenDHT network.  When left unspecified, the value from the account archive prevails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31801
#, fuzzy, no-wrap
msgid "@code{name-server-uri} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31804
msgid "The URI of the name server to use, that can be used to retrieve the account fingerprint for a registered username."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:31809
#, fuzzy, no-wrap
#| msgid "Game servers."
msgid "Mumble server"
msgstr "Servidores de jogos."

#. type: cindex
#: guix-git/doc/guix.texi:31811
#, no-wrap
msgid "Mumble"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31812
#, no-wrap
msgid "Murmur"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:31813
#, no-wrap
msgid "VoIP server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:31816
msgid "This section describes how to set up and run a @uref{https://mumble.info, Mumble} server (formerly known as Murmur)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:31817
#, fuzzy, no-wrap
msgid "mumble-server-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:31821
msgid "This is the service to run a Mumble server.  It takes a @code{mumble-server-configuration} object as its value, defined below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31823
#, no-wrap
msgid "{Data Type} mumble-server-configuration"
msgstr "{Tipo de dados} mumble-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:31826
msgid "The service type for the Mumble server.  An example configuration can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31835
#, no-wrap
msgid ""
"(service mumble-server-service-type\n"
"         (mumble-server-configuration\n"
"          (welcome-text\n"
"            \"Welcome to this Mumble server running on Guix!\")\n"
"          (cert-required? #t) ;disallow text password logins\n"
"          (ssl-cert \"/etc/certs/mumble.example.com/fullchain.pem\")\n"
"          (ssl-key \"/etc/certs/mumble.example.com/privkey.pem\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31840
msgid "After reconfiguring your system, you can manually set the mumble-server @code{SuperUser} password with the command that is printed during the activation phase."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31849
msgid "It is recommended to register a normal Mumble user account and grant it admin or moderator rights.  You can use the @code{mumble} client to login as new normal user, register yourself, and log out.  For the next step login with the name @code{SuperUser} use the @code{SuperUser} password that you set previously, and grant your newly registered mumble user administrator or moderator rights and create some channels."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:31851
msgid "Available @code{mumble-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31853
#, no-wrap
msgid "@code{package} (default: @code{mumble})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31855
msgid "Package that contains @code{bin/mumble-server}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31856
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{\"mumble-server\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31858
msgid "User who will run the Mumble-Server server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31859
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"mumble-server\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31861
msgid "Group of the user who will run the mumble-server server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31862
#, no-wrap
msgid "@code{port} (default: @code{64738})"
msgstr "@code{port} (padrão: @code{64738})"

#. type: table
#: guix-git/doc/guix.texi:31864
msgid "Port on which the server will listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31865
#, no-wrap
msgid "@code{welcome-text} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31867
msgid "Welcome text sent to clients when they connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31868
#, no-wrap
msgid "@code{server-password} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31870
msgid "Password the clients have to enter in order to connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31871
#, no-wrap
msgid "@code{max-users} (default: @code{100})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31873
msgid "Maximum of users that can be connected to the server at once."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31874
#, no-wrap
msgid "@code{max-user-bandwidth} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31876
msgid "Maximum voice traffic a user can send per second."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31877
#, fuzzy, no-wrap
msgid "@code{database-file} (default: @code{\"/var/lib/mumble-server/db.sqlite\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:31880
msgid "File name of the sqlite database.  The service's user will become the owner of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31881
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/mumble-server/mumble-server.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:31884
msgid "File name of the log file.  The service's user will become the owner of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31885
#, no-wrap
msgid "@code{autoban-attempts} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31888
msgid "Maximum number of logins a user can make in @code{autoban-timeframe} without getting auto banned for @code{autoban-time}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31889
#, no-wrap
msgid "@code{autoban-timeframe} (default: @code{120})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31891
msgid "Timeframe for autoban in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31892
#, no-wrap
msgid "@code{autoban-time} (default: @code{300})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31895
msgid "Amount of time in seconds for which a client gets banned when violating the autoban limits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31896
#, no-wrap
msgid "@code{opus-threshold} (default: @code{100})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31899
msgid "Percentage of clients that need to support opus before switching over to opus audio codec."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31900
#, no-wrap
msgid "@code{channel-nesting-limit} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31902
msgid "How deep channels can be nested at maximum."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31903
#, no-wrap
msgid "@code{channelname-regex} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31905
msgid "A string in form of a Qt regular expression that channel names must conform to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31906
#, no-wrap
msgid "@code{username-regex} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31908
msgid "A string in form of a Qt regular expression that user names must conform to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31909
#, no-wrap
msgid "@code{text-message-length} (default: @code{5000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31911
msgid "Maximum size in bytes that a user can send in one text chat message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31912
#, no-wrap
msgid "@code{image-message-length} (default: @code{(* 128 1024)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31914
msgid "Maximum size in bytes that a user can send in one image message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31915
#, no-wrap
msgid "@code{cert-required?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31918
msgid "If it is set to @code{#t} clients that use weak password authentication will not be accepted.  Users must have completed the certificate wizard to join."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31919
#, no-wrap
msgid "@code{remember-channel?} (default: @code{#f})"
msgstr "@code{remember-channel?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31923
msgid "Should mumble-server remember the last channel each user was in when they disconnected and put them into the remembered channel when they rejoin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31924
#, no-wrap
msgid "@code{allow-html?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31926
msgid "Should html be allowed in text messages, user comments, and channel descriptions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31927
#, no-wrap
msgid "@code{allow-ping?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31931
msgid "Setting to true exposes the current user count, the maximum user count, and the server's maximum bandwidth per client to unauthenticated users.  In the Mumble client, this information is shown in the Connect dialog."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31933
msgid "Disabling this setting will prevent public listing of the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31934
#, no-wrap
msgid "@code{bonjour?} (default: @code{#f})"
msgstr "@code{bonjour?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31936
msgid "Should the server advertise itself in the local network through the bonjour protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31937
#, no-wrap
msgid "@code{send-version?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31939
msgid "Should the mumble-server server version be exposed in ping requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31940
#, no-wrap
msgid "@code{log-days} (default: @code{31})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31944
msgid "Mumble also stores logs in the database, which are accessible via RPC.  The default is 31 days of months, but you can set this setting to 0 to keep logs forever, or -1 to disable logging to the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31945
#, no-wrap
msgid "@code{obfuscate-ips?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31947
msgid "Should logged ips be obfuscated to protect the privacy of users."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31948
#, no-wrap
msgid "@code{ssl-cert} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31950
msgid "File name of the SSL/TLS certificate used for encrypted connections."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31953
#, no-wrap
msgid "(ssl-cert \"/etc/certs/example.com/fullchain.pem\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31954
#, no-wrap
msgid "@code{ssl-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31956
msgid "Filepath to the ssl private key used for encrypted connections."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:31958
#, no-wrap
msgid "(ssl-key \"/etc/certs/example.com/privkey.pem\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31960
#, no-wrap
msgid "@code{ssl-dh-params} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31965
msgid "File name of a PEM-encoded file with Diffie-Hellman parameters for the SSL/TLS encryption.  Alternatively you set it to @code{\"@@ffdhe2048\"}, @code{\"@@ffdhe3072\"}, @code{\"@@ffdhe4096\"}, @code{\"@@ffdhe6144\"} or @code{\"@@ffdhe8192\"} to use bundled parameters from RFC 7919."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31966
#, no-wrap
msgid "@code{ssl-ciphers} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31969
msgid "The @code{ssl-ciphers} option chooses the cipher suites to make available for use in SSL/TLS."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31973
msgid "This option is specified using @uref{https://www.openssl.org/docs/apps/ciphers.html#CIPHER-LIST-FORMAT, OpenSSL cipher list notation}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31980
msgid "It is recommended that you try your cipher string using 'openssl ciphers <string>' before setting it here, to get a feel for which cipher suites you will get.  After setting this option, it is recommend that you inspect your Mumble server log to ensure that Mumble is using the cipher suites that you expected it to."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:31984
msgid "Changing this option may impact the backwards compatibility of your Mumble-Server server, and can remove the ability for older Mumble clients to be able to connect to it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31986
#, no-wrap
msgid "@code{public-registration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31989
msgid "Must be a @code{<mumble-server-public-registration-configuration>} record or @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31994
msgid "You can optionally register your server in the public server list that the @code{mumble} client shows on startup.  You cannot register your server if you have set a @code{server-password}, or set @code{allow-ping} to @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:31996
msgid "It might take a few hours until it shows up in the public list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:31997 guix-git/doc/guix.texi:34593
#, no-wrap
msgid "@code{file} (default: @code{#f})"
msgstr "@code{file} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:31999
msgid "Optional alternative override for this configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32002
#, no-wrap
msgid "{Data Type} mumble-server-public-registration-configuration"
msgstr "{Tipo de dados} mumble-server-public-registration-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:32004
msgid "Configuration for public registration of a mumble-server service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32008
msgid "This is a display name for your server.  Not to be confused with the hostname."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:32009 guix-git/doc/guix.texi:43011
#: guix-git/doc/guix.texi:45698
#, no-wrap
msgid "password"
msgstr "password"

#. type: table
#: guix-git/doc/guix.texi:32012
msgid "A password to identify your registration.  Subsequent updates will need the same password.  Don't lose your password."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32016
msgid "This should be a @code{http://} or @code{https://} link to your web site."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32017
#, no-wrap
msgid "@code{hostname} (default: @code{#f})"
msgstr "@code{hostname} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:32020
msgid "By default your server will be listed by its IP address.  If it is set your server will be linked by this host name instead."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:32023
#, no-wrap
msgid "Deprecation notice"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:32028
msgid "Due to historical reasons, all of the above @code{mumble-server-} procedures are also exported with the @code{murmur-} prefix.  It is recommended that you switch to using @code{mumble-server-} going forward."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32035
msgid "The @code{(gnu services file-sharing)} module provides services that assist with transferring files over peer-to-peer file-sharing networks."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32036
#, no-wrap
msgid "Transmission Daemon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32044
msgid "@uref{https://transmissionbt.com/, Transmission} is a flexible BitTorrent client that offers a variety of graphical and command-line interfaces.  A @code{transmission-daemon-service-type} service provides Transmission's headless variant, @command{transmission-daemon}, as a system service, allowing users to share files via BitTorrent even when they are not logged in."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:32045
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "transmission-daemon-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:32049
msgid "The service type for the Transmission Daemon BitTorrent client. Its value must be a @code{transmission-daemon-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32060
#, no-wrap
msgid ""
"(service transmission-daemon-service-type\n"
"         (transmission-daemon-configuration\n"
"          ;; Restrict access to the RPC (\"control\") interface\n"
"          (rpc-authentication-required? #t)\n"
"          (rpc-username \"transmission\")\n"
"          (rpc-password\n"
"           (transmission-password-hash\n"
"            \"transmission\" ; desired password\n"
"            \"uKd1uMs9\"))   ; arbitrary salt value\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32065
#, no-wrap
msgid ""
"          ;; Accept requests from this and other hosts on the\n"
"          ;; local network\n"
"          (rpc-whitelist-enabled? #t)\n"
"          (rpc-whitelist '(\"::1\" \"127.0.0.1\" \"192.168.0.*\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32069
#, no-wrap
msgid ""
"          ;; Limit bandwidth use during work hours\n"
"          (alt-speed-down (* 1024 2)) ;   2 MB/s\n"
"          (alt-speed-up 512)          ; 512 kB/s\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32076
#, no-wrap
msgid ""
"          (alt-speed-time-enabled? #t)\n"
"          (alt-speed-time-day 'weekdays)\n"
"          (alt-speed-time-begin\n"
"           (+ (* 60 8) 30))           ; 8:30 am\n"
"          (alt-speed-time-end\n"
"           (+ (* 60 (+ 12 5)) 30))))  ; 5:30 pm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32089
msgid "Once the service is started, users can interact with the daemon through its Web interface (at @code{http://localhost:9091/}) or by using the @command{transmission-remote} command-line tool, available in the @code{transmission} package.  (Emacs users may want to also consider the @code{emacs-transmission} package.)  Both communicate with the daemon through its remote procedure call (RPC) interface, which by default is available to all users on the system; you may wish to change this by assigning values to the @code{rpc-authentication-required?}, @code{rpc-username} and @code{rpc-password} settings, as shown in the example above and documented further below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32097
msgid "The value for @code{rpc-password} must be a password hash of the type generated and used by Transmission clients.  This can be copied verbatim from an existing @file{settings.json} file, if another Transmission client is already being used.  Otherwise, the @code{transmission-password-hash} and @code{transmission-random-salt} procedures provided by this module can be used to obtain a suitable hash value."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32098
#, no-wrap
msgid "{Procedure} transmission-password-hash password salt"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32102
msgid "Returns a string containing the result of hashing @var{password} together with @var{salt}, in the format recognized by Transmission clients for their @code{rpc-password} configuration setting."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32106
msgid "@var{salt} must be an eight-character string.  The @code{transmission-random-salt} procedure can be used to generate a suitable salt value at random."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:32108
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "{Procedure} transmission-random-salt"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:32112
msgid "Returns a string containing a random, eight-character salt value of the type generated and used by Transmission clients, suitable for passing to the @code{transmission-password-hash} procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32118
msgid "These procedures are accessible from within a Guile REPL started with the @command{guix repl} command (@pxref{Invoking guix repl}).  This is useful for obtaining a random salt value to provide as the second parameter to `transmission-password-hash`, as in this example session:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32124
#, no-wrap
msgid ""
"$ guix repl\n"
"scheme@@(guix-user)> ,use (gnu services file-sharing)\n"
"scheme@@(guix-user)> (transmission-random-salt)\n"
"$1 = \"uKd1uMs9\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32127
msgid "Alternatively, a complete password hash can generated in a single step:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32132
#, no-wrap
msgid ""
"scheme@@(guix-user)> (transmission-password-hash \"transmission\"\n"
"(transmission-random-salt))\n"
"$2 = \"@{c8bbc6d1740cd8dc819a6e25563b67812c1c19c9VtFPfdsX\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32137
msgid "The resulting string can be used as-is for the value of @code{rpc-password}, allowing the password to be kept hidden even in the operating-system configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32146
msgid "Torrent files downloaded by the daemon are directly accessible only to users in the ``transmission'' user group, who receive read-only access to the directory specified by the @code{download-dir} configuration setting (and also the directory specified by @code{incomplete-dir}, if @code{incomplete-dir-enabled?} is @code{#t}).  Downloaded files can be moved to another directory or deleted altogether using @command{transmission-remote} with its @code{--move} and @code{--remove-and-delete} options."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32153
msgid "If the @code{watch-dir-enabled?} setting is set to @code{#t}, users in the ``transmission'' group are able also to place @file{.torrent} files in the directory specified by @code{watch-dir} to have the corresponding torrents added by the daemon.  (The @code{trash-original-torrent-files?} setting controls whether the daemon deletes these files after processing them.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32158
msgid "Some of the daemon's configuration settings can be changed temporarily by @command{transmission-remote} and similar tools. To undo these changes, use the service's @code{reload} action to have the daemon reload its settings from disk:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:32161
#, no-wrap
msgid "# herd reload transmission-daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32165
msgid "The full set of available configuration settings is defined by the @code{transmission-daemon-configuration} data type."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32166
#, no-wrap
msgid "{Data Type} transmission-daemon-configuration"
msgstr "{Tipo de dados} transmission-daemon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:32170
msgid "The data type representing configuration settings for Transmission Daemon.  These correspond directly to the settings recognized by Transmission clients in their @file{settings.json} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32184
msgid "Available @code{transmission-daemon-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32185
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} package transmission"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32187
msgid "The Transmission package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32190
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer stop-wait-period"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32196
msgid "The period, in seconds, to wait when stopping the service for @command{transmission-daemon} to exit before killing its process.  This allows the daemon time to complete its housekeeping and send a final update to trackers as it shuts down.  On slow hosts, or hosts with a slow network connection, this value may need to be increased."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32198 guix-git/doc/guix.texi:32570
#: guix-git/doc/guix.texi:41706 guix-git/doc/guix.texi:41942
#: guix-git/doc/guix.texi:41950 guix-git/doc/guix.texi:41958
msgid "Defaults to @samp{10}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32201
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string download-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32203
msgid "The directory to which torrent files are downloaded."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32205
msgid "Defaults to @samp{\"/var/lib/transmission-daemon/downloads\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32208
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean incomplete-dir-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32213
msgid "If @code{#t}, files will be held in @code{incomplete-dir} while their torrent is being downloaded, then moved to @code{download-dir} once the torrent is complete.  Otherwise, files for all torrents (including those still being downloaded) will be placed in @code{download-dir}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32218
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string incomplete-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32221
msgid "The directory in which files from incompletely downloaded torrents will be held when @code{incomplete-dir-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32223 guix-git/doc/guix.texi:32267
#: guix-git/doc/guix.texi:32480 guix-git/doc/guix.texi:32536
#: guix-git/doc/guix.texi:32710 guix-git/doc/guix.texi:32721
#: guix-git/doc/guix.texi:32794 guix-git/doc/guix.texi:33668
#: guix-git/doc/guix.texi:33711 guix-git/doc/guix.texi:33719
#: guix-git/doc/guix.texi:33727 guix-git/doc/guix.texi:33735
#: guix-git/doc/guix.texi:33744 guix-git/doc/guix.texi:33752
#: guix-git/doc/guix.texi:33759 guix-git/doc/guix.texi:33767
#: guix-git/doc/guix.texi:33775 guix-git/doc/guix.texi:33785
#: guix-git/doc/guix.texi:33792 guix-git/doc/guix.texi:33816
#: guix-git/doc/guix.texi:33824 guix-git/doc/guix.texi:33850
#: guix-git/doc/guix.texi:33859 guix-git/doc/guix.texi:33868
#: guix-git/doc/guix.texi:33877 guix-git/doc/guix.texi:33886
#: guix-git/doc/guix.texi:33895 guix-git/doc/guix.texi:33903
#: guix-git/doc/guix.texi:33911 guix-git/doc/guix.texi:33918
#: guix-git/doc/guix.texi:33926 guix-git/doc/guix.texi:33933
#: guix-git/doc/guix.texi:33941 guix-git/doc/guix.texi:33949
#: guix-git/doc/guix.texi:33958 guix-git/doc/guix.texi:33967
#: guix-git/doc/guix.texi:33975 guix-git/doc/guix.texi:33983
#: guix-git/doc/guix.texi:33991 guix-git/doc/guix.texi:34002
#: guix-git/doc/guix.texi:34012 guix-git/doc/guix.texi:34023
#: guix-git/doc/guix.texi:34032 guix-git/doc/guix.texi:34042
#: guix-git/doc/guix.texi:34050 guix-git/doc/guix.texi:34061
#: guix-git/doc/guix.texi:34070 guix-git/doc/guix.texi:34080
#: guix-git/doc/guix.texi:38153 guix-git/doc/guix.texi:38160
#: guix-git/doc/guix.texi:38167 guix-git/doc/guix.texi:38174
#: guix-git/doc/guix.texi:38181 guix-git/doc/guix.texi:38188
#: guix-git/doc/guix.texi:38196 guix-git/doc/guix.texi:38204
#: guix-git/doc/guix.texi:38211 guix-git/doc/guix.texi:38218
#: guix-git/doc/guix.texi:38225 guix-git/doc/guix.texi:38232
#: guix-git/doc/guix.texi:38262 guix-git/doc/guix.texi:38300
#: guix-git/doc/guix.texi:38307 guix-git/doc/guix.texi:38316
#: guix-git/doc/guix.texi:38338 guix-git/doc/guix.texi:38346
#: guix-git/doc/guix.texi:38353 guix-git/doc/guix.texi:38382
#: guix-git/doc/guix.texi:38389 guix-git/doc/guix.texi:38396
#: guix-git/doc/guix.texi:38403 guix-git/doc/guix.texi:38536
#: guix-git/doc/guix.texi:38556 guix-git/doc/guix.texi:38571
#: guix-git/doc/guix.texi:38578 guix-git/doc/guix.texi:42079
#: guix-git/doc/guix.texi:42087 guix-git/doc/guix.texi:42095
#: guix-git/doc/guix.texi:42103 guix-git/doc/guix.texi:42111
#: guix-git/doc/guix.texi:42119
msgid "Defaults to @samp{disabled}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32226
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} umask umask"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32229
msgid "The file mode creation mask used for downloaded files.  (See the @command{umask} man page for more information.)"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32231
msgid "Defaults to @samp{18}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32234
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rename-partial-files?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32237
msgid "When @code{#t}, ``.part'' is appended to the name of partially downloaded files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32242
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} preallocation-mode preallocation"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32247
msgid "The mode by which space should be preallocated for downloaded files, one of @code{none}, @code{fast} (or @code{sparse}) and @code{full}.  Specifying @code{full} will minimize disk fragmentation at a cost to file-creation speed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32249
msgid "Defaults to @samp{fast}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32252
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean watch-dir-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32257
msgid "If @code{#t}, the directory specified by @code{watch-dir} will be watched for new @file{.torrent} files and the torrents they describe added automatically (and the original files removed, if @code{trash-original-torrent-files?} is @code{#t})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32262
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string watch-dir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32265
msgid "The directory to be watched for @file{.torrent} files indicating new torrents to be added, when @code{watch-dir-enabled} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32270
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean trash-original-torrent-files?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32274
msgid "When @code{#t}, @file{.torrent} files will be deleted from the watch directory once their torrent has been added (see @code{watch-directory-enabled?})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32279
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean speed-limit-down-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32282
msgid "When @code{#t}, the daemon's download speed will be limited to the rate specified by @code{speed-limit-down}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32287
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer speed-limit-down"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32289
msgid "The default global-maximum download speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32294
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean speed-limit-up-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32297
msgid "When @code{#t}, the daemon's upload speed will be limited to the rate specified by @code{speed-limit-up}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32302
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer speed-limit-up"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32304
msgid "The default global-maximum upload speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32309
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean alt-speed-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32315
msgid "When @code{#t}, the alternate speed limits @code{alt-speed-down} and @code{alt-speed-up} are used (in place of @code{speed-limit-down} and @code{speed-limit-up}, if they are enabled) to constrain the daemon's bandwidth usage.  This can be scheduled to occur automatically at certain times during the week; see @code{alt-speed-time-enabled?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32320
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-down"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32322
msgid "The alternate global-maximum download speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32324 guix-git/doc/guix.texi:32331
#: guix-git/doc/guix.texi:32503 guix-git/doc/guix.texi:41713
#: guix-git/doc/guix.texi:41728
msgid "Defaults to @samp{50}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32327
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-up"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32329
msgid "The alternate global-maximum upload speed, in kilobytes per second."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32334
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean alt-speed-time-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32339
msgid "When @code{#t}, the alternate speed limits @code{alt-speed-down} and @code{alt-speed-up} will be enabled automatically during the periods specified by @code{alt-speed-time-day}, @code{alt-speed-time-begin} and @code{alt-time-speed-end}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32344
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} day-list alt-speed-time-day"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32349
msgid "The days of the week on which the alternate-speed schedule should be used, specified either as a list of days (@code{sunday}, @code{monday}, and so on) or using one of the symbols @code{weekdays}, @code{weekends} or @code{all}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32351
msgid "Defaults to @samp{all}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32354
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-time-begin"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32357
msgid "The time of day at which to enable the alternate speed limits, expressed as a number of minutes since midnight."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32359
msgid "Defaults to @samp{540}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32362
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer alt-speed-time-end"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32365
msgid "The time of day at which to disable the alternate speed limits, expressed as a number of minutes since midnight."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32367
msgid "Defaults to @samp{1020}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32370
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string bind-address-ipv4"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32373
msgid "The IP address at which to listen for peer connections, or ``0.0.0.0'' to listen at all available IP addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32375 guix-git/doc/guix.texi:32678
msgid "Defaults to @samp{\"0.0.0.0\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32378
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string bind-address-ipv6"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32381
msgid "The IPv6 address at which to listen for peer connections, or ``::'' to listen at all available IPv6 addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32383
msgid "Defaults to @samp{\"::\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32386
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean peer-port-random-on-start?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32392
msgid "If @code{#t}, when the daemon starts it will select a port at random on which to listen for peer connections, from the range specified (inclusively) by @code{peer-port-random-low} and @code{peer-port-random-high}.  Otherwise, it listens on the port specified by @code{peer-port}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32397
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port-random-low"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32400
msgid "The lowest selectable port number when @code{peer-port-random-on-start?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32402
msgid "Defaults to @samp{49152}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32405
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port-random-high"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32408
msgid "The highest selectable port number when @code{peer-port-random-on-start} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32410
msgid "Defaults to @samp{65535}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32413
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number peer-port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32416
msgid "The port on which to listen for peer connections when @code{peer-port-random-on-start?} is @code{#f}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32418
msgid "Defaults to @samp{51413}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32421
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean port-forwarding-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32425
msgid "If @code{#t}, the daemon will attempt to configure port-forwarding on an upstream gateway automatically using @acronym{UPnP} and @acronym{NAT-PMP}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32430
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} encryption-mode encryption"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32435
msgid "The encryption preference for peer connections, one of @code{prefer-unencrypted-connections}, @code{prefer-encrypted-connections} or @code{require-encrypted-connections}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32437
msgid "Defaults to @samp{prefer-encrypted-connections}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32440
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string peer-congestion-algorithm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32445
msgid "The TCP congestion-control algorithm to use for peer connections, specified using a string recognized by the operating system in calls to @code{setsockopt}.  When left unspecified, the operating-system default is used."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32454
msgid "Note that on GNU/Linux systems, the kernel must be configured to allow processes to use a congestion-control algorithm not in the default set; otherwise, it will deny these requests with ``Operation not permitted''.  To see which algorithms are available on your system and which are currently permitted for use, look at the contents of the files @file{tcp_available_congestion_control} and @file{tcp_allowed_congestion_control} in the @file{/proc/sys/net/ipv4} directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32462
msgid "As an example, to have Transmission Daemon use @uref{http://www-ece.rice.edu/networks/TCP-LP/,the TCP Low Priority congestion-control algorithm}, you'll need to modify your kernel configuration to build in support for the algorithm, then update your operating-system configuration to allow its use by adding a @code{sysctl-service-type} service (or updating the existing one's configuration) with lines like the following:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32469
#, no-wrap
msgid ""
"(service sysctl-service-type\n"
"         (sysctl-configuration\n"
"          (settings\n"
"           (\"net.ipv4.tcp_allowed_congestion_control\" .\n"
"            \"reno cubic lp\"))))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32472
msgid "The Transmission Daemon configuration can then be updated with"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32475
#, no-wrap
msgid "(peer-congestion-algorithm \"lp\")\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32478
msgid "and the system reconfigured to have the changes take effect."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32483
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} tcp-type-of-service peer-socket-tos"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32487
msgid "The type of service to request in outgoing @acronym{TCP} packets, one of @code{default}, @code{low-cost}, @code{throughput}, @code{low-delay} and @code{reliability}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32489
msgid "Defaults to @samp{default}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32492
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-limit-global"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32494
msgid "The global limit on the number of connected peers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32496
msgid "Defaults to @samp{200}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32499
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-limit-per-torrent"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32501
msgid "The per-torrent limit on the number of connected peers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32506
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer upload-slots-per-torrent"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32509
msgid "The maximum number of peers to which the daemon will upload data simultaneously for each torrent."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32511
msgid "Defaults to @samp{14}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32514
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer peer-id-ttl-hours"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32517
msgid "The maximum lifespan, in hours, of the peer ID associated with each public torrent before it is regenerated."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32519
msgid "Defaults to @samp{6}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32522
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean blocklist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32525
msgid "When @code{#t}, the daemon will ignore peers mentioned in the blocklist it has most recently downloaded from @code{blocklist-url}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32530
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string blocklist-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32534
msgid "The URL of a peer blocklist (in @acronym{P2P}-plaintext or eMule @file{.dat} format) to be periodically downloaded and applied when @code{blocklist-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32539
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean download-queue-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32542
msgid "If @code{#t}, the daemon will be limited to downloading at most @code{download-queue-size} non-stalled torrents simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32547
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer download-queue-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32551
msgid "The size of the daemon's download queue, which limits the number of non-stalled torrents it will download at any one time when @code{download-queue-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32556
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean seed-queue-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32559
msgid "If @code{#t}, the daemon will be limited to seeding at most @code{seed-queue-size} non-stalled torrents simultaneously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32564
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer seed-queue-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32568
msgid "The size of the daemon's seed queue, which limits the number of non-stalled torrents it will seed at any one time when @code{seed-queue-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32573
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean queue-stalled-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32578
msgid "When @code{#t}, the daemon will consider torrents for which it has not shared data in the past @code{queue-stalled-minutes} minutes to be stalled and not count them against its @code{download-queue-size} and @code{seed-queue-size} limits."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32583
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer queue-stalled-minutes"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32587
msgid "The maximum period, in minutes, a torrent may be idle before it is considered to be stalled, when @code{queue-stalled-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32592
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean ratio-limit-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32595
msgid "When @code{#t}, a torrent being seeded will automatically be paused once it reaches the ratio specified by @code{ratio-limit}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32600
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-rational ratio-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32603
msgid "The ratio at which a torrent being seeded will be paused, when @code{ratio-limit-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32605
msgid "Defaults to @samp{2.0}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32608
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean idle-seeding-limit-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32611
msgid "When @code{#t}, a torrent being seeded will automatically be paused once it has been idle for @code{idle-seeding-limit} minutes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32616
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer idle-seeding-limit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32620
msgid "The maximum period, in minutes, a torrent being seeded may be idle before it is paused, when @code{idle-seeding-limit-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32625
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean dht-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32629
msgid "Enable @uref{http://bittorrent.org/beps/bep_0005.html,the distributed hash table (@acronym{DHT}) protocol}, which supports the use of trackerless torrents."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32634
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean lpd-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32639
msgid "Enable @uref{https://en.wikipedia.org/wiki/Local_Peer_Discovery,local peer discovery} (@acronym{LPD}), which allows the discovery of peers on the local network and may reduce the amount of data sent over the public Internet."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32644
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean pex-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32648
msgid "Enable @uref{https://en.wikipedia.org/wiki/Peer_exchange,peer exchange} (@acronym{PEX}), which reduces the daemon's reliance on external trackers and may improve its performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32653
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean utp-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32658
msgid "Enable @uref{http://bittorrent.org/beps/bep_0029.html,the micro transport protocol} (@acronym{uTP}), which aims to reduce the impact of BitTorrent traffic on other users of the local network while maintaining full utilization of the available bandwidth."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32663
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32668
msgid "If @code{#t}, enable the remote procedure call (@acronym{RPC})  interface, which allows remote control of the daemon via its Web interface, the @command{transmission-remote} command-line client, and similar tools."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32673
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string rpc-bind-address"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32676
msgid "The IP address at which to listen for @acronym{RPC} connections, or ``0.0.0.0'' to listen at all available IP addresses."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32681
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} port-number rpc-port"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32683
msgid "The port on which to listen for @acronym{RPC} connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32685
msgid "Defaults to @samp{9091}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32688
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string rpc-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32690
msgid "The path prefix to use in the @acronym{RPC}-endpoint @acronym{URL}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32692
msgid "Defaults to @samp{\"/transmission/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32695
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-authentication-required?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32700
msgid "When @code{#t}, clients must authenticate (see @code{rpc-username} and @code{rpc-password}) when using the @acronym{RPC} interface.  Note this has the side effect of disabling host-name whitelisting (see @code{rpc-host-whitelist-enabled?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32705
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-string rpc-username"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32708
msgid "The username required by clients to access the @acronym{RPC} interface when @code{rpc-authentication-required?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32713
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-transmission-password-hash rpc-password"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32719
msgid "The password required by clients to access the @acronym{RPC} interface when @code{rpc-authentication-required?} is @code{#t}.  This must be specified using a password hash in the format recognized by Transmission clients, either copied from an existing @file{settings.json} file or generated using the @code{transmission-password-hash} procedure."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32724
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-whitelist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32727
msgid "When @code{#t}, @acronym{RPC} requests will be accepted only when they originate from an address specified in @code{rpc-whitelist}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32732
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string-list rpc-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32736
msgid "The list of IP and IPv6 addresses from which @acronym{RPC} requests will be accepted when @code{rpc-whitelist-enabled?} is @code{#t}.  Wildcards may be specified using @samp{*}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32738
msgid "Defaults to @samp{'(\"127.0.0.1\" \"::1\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32741
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean rpc-host-whitelist-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32746
msgid "When @code{#t}, @acronym{RPC} requests will be accepted only when they are addressed to a host named in @code{rpc-host-whitelist}.  Note that requests to ``localhost'' or ``localhost.'', or to a numeric address, are always accepted regardless of these settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32749
msgid "Note also this functionality is disabled when @code{rpc-authentication-required?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32754
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} string-list rpc-host-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32757
msgid "The list of host names recognized by the @acronym{RPC} server when @code{rpc-host-whitelist-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32762
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} message-level message-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32766
msgid "The minimum severity level of messages to be logged (to @file{/var/log/transmission.log}) by the daemon, one of @code{none} (no logging), @code{error}, @code{info} and @code{debug}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32771
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean start-added-torrents?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32774
msgid "When @code{#t}, torrents are started as soon as they are added; otherwise, they are added in ``paused'' state."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32779
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean script-torrent-done-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32783
msgid "When @code{#t}, the script specified by @code{script-torrent-done-filename} will be invoked each time a torrent completes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32788
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} maybe-file-object script-torrent-done-filename"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32792
msgid "A file name or file-like object specifying a script to run each time a torrent completes, when @code{script-torrent-done-enabled?} is @code{#t}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32797
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean scrape-paused-torrents-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32800
msgid "When @code{#t}, the daemon will scrape trackers for a torrent even when the torrent is paused."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32805
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} non-negative-integer cache-size-mb"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32809
msgid "The amount of memory, in megabytes, to allocate for the daemon's in-memory cache.  A larger value may increase performance by reducing the frequency of disk I/O."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32811
msgid "Defaults to @samp{4}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32814
#, no-wrap
msgid "{@code{transmission-daemon-configuration} parameter} boolean prefetch-enabled?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:32818
msgid "When @code{#t}, the daemon will try to improve I/O performance by hinting to the operating system which data is likely to be read next from disk to satisfy requests from peers."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32831
#, no-wrap
msgid "Tailon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32835
msgid "@uref{https://tailon.readthedocs.io/, Tailon} is a web application for viewing and searching log files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32838
msgid "The following example will configure the service with default values.  By default, Tailon can be accessed on port 8080 (@code{http://localhost:8080})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32841
#, no-wrap
msgid "(service tailon-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32845
msgid "The following example customises more of the Tailon configuration, adding @command{sed} to the list of allowed commands."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32852
#, no-wrap
msgid ""
"(service tailon-service-type\n"
"         (tailon-configuration\n"
"           (config-file\n"
"             (tailon-configuration-file\n"
"               (allowed-commands '(\"tail\" \"grep\" \"awk\" \"sed\"))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32855
#, no-wrap
msgid "{Data Type} tailon-configuration"
msgstr "{Tipo de dados} tailon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:32858
msgid "Data type representing the configuration of Tailon.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32860
#, no-wrap
msgid "@code{config-file} (default: @code{(tailon-configuration-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32864
msgid "The configuration file to use for Tailon.  This can be set to a @dfn{tailon-configuration-file} record value, or any gexp (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32867
msgid "For example, to instead use a local file, the @code{local-file} function can be used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32872
#, no-wrap
msgid ""
"(service tailon-service-type\n"
"         (tailon-configuration\n"
"           (config-file (local-file \"./my-tailon.conf\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32874
#, no-wrap
msgid "@code{package} (default: @code{tailon})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32876
msgid "The tailon package to use."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32880
#, no-wrap
msgid "{Data Type} tailon-configuration-file"
msgstr "{Tipo de dados} tailon-configuration-file"

#. type: deftp
#: guix-git/doc/guix.texi:32883
msgid "Data type representing the configuration options for Tailon.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32885
#, no-wrap
msgid "@code{files} (default: @code{(list \"/var/log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32890
msgid "List of files to display.  The list can include strings for a single file or directory, or a list, where the first item is the name of a subsection, and the remaining items are the files or directories in that subsection."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32891
#, no-wrap
msgid "@code{bind} (default: @code{\"localhost:8080\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32893
msgid "Address and port to which Tailon should bind on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32894
#, no-wrap
msgid "@code{relative-root} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32896
msgid "URL path to use for Tailon, set to @code{#f} to not use a path."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32897
#, no-wrap
msgid "@code{allow-transfers?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32899
msgid "Allow downloading the log files in the web interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32900
#, no-wrap
msgid "@code{follow-names?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32902
msgid "Allow tailing of not-yet existent files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32903
#, no-wrap
msgid "@code{tail-lines} (default: @code{200})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32905
msgid "Number of lines to read initially from each file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32906
#, no-wrap
msgid "@code{allowed-commands} (default: @code{(list \"tail\" \"grep\" \"awk\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32908
msgid "Commands to allow running.  By default, @code{sed} is disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32911
msgid "Set @code{debug?} to @code{#t} to show debug messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32912
#, no-wrap
msgid "@code{wrap-lines} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32916
msgid "Initial line wrapping state in the web interface.  Set to @code{#t} to initially wrap lines (the default), or to @code{#f} to initially not wrap lines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32917
#, no-wrap
msgid "@code{http-auth} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32921
msgid "HTTP authentication type to use.  Set to @code{#f} to disable authentication (the default).  Supported values are @code{\"digest\"} or @code{\"basic\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32922
#, no-wrap
msgid "@code{users} (default: @code{#f})"
msgstr "@code{users} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:32927
msgid "If HTTP authentication is enabled (see @code{http-auth}), access will be restricted to the credentials provided here.  To configure users, use a list of pairs, where the first element of the pair is the username, and the 2nd element of the pair is the password."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32933
#, no-wrap
msgid ""
"(tailon-configuration-file\n"
"  (http-auth \"basic\")\n"
"  (users     '((\"user1\" . \"password1\")\n"
"               (\"user2\" . \"password2\"))))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32939
#, no-wrap
msgid "Darkstat Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:32940
#, no-wrap
msgid "darkstat"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32943
msgid "Darkstat is a packet sniffer that captures network traffic, calculates statistics about usage, and serves reports over HTTP."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:32944
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "darkstat-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:32949
msgid "This is the service type for the @uref{https://unix4lyfe.org/darkstat/, darkstat} service, its value must be a @code{darkstat-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32954
#, no-wrap
msgid ""
"(service darkstat-service-type\n"
"         (darkstat-configuration\n"
"           (interface \"eno1\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32957
#, no-wrap
msgid "{Data Type} darkstat-configuration"
msgstr "{Tipo de dados} darkstat-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:32959
msgid "Data type representing the configuration of @command{darkstat}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32961
#, no-wrap
msgid "@code{package} (default: @code{darkstat})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32963
msgid "The darkstat package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:32964
#, no-wrap
msgid "interface"
msgstr "interface"

#. type: table
#: guix-git/doc/guix.texi:32966
msgid "Capture traffic on the specified network interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32967
#, no-wrap
msgid "@code{port} (default: @code{\"667\"})"
msgstr "@code{port} (padrão: @code{\"667\"})"

#. type: table
#: guix-git/doc/guix.texi:32969
msgid "Bind the web interface to the specified port."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32972 guix-git/doc/guix.texi:33008
msgid "Bind the web interface to the specified address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:32973
#, no-wrap
msgid "@code{base} (default: @code{\"/\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:32976
msgid "Specify the path of the base URL@.  This can be useful if @command{darkstat} is accessed via a reverse proxy."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:32981 guix-git/doc/guix.texi:32982
#, no-wrap
msgid "prometheus-node-exporter"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:32981
#, no-wrap
msgid "Prometheus Node Exporter Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:32988
msgid "The Prometheus ``node exporter'' makes hardware and operating system statistics provided by the Linux kernel available for the Prometheus monitoring system.  This service should be deployed on all physical nodes and virtual machines, where monitoring these statistics is desirable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:32989
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "prometheus-node-exporter-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:32993
msgid "This is the service type for the @uref{https://github.com/prometheus/node_exporter/, prometheus-node-exporter} service, its value must be a @code{prometheus-node-exporter-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:32996
#, no-wrap
msgid "(service prometheus-node-exporter-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:32999
#, no-wrap
msgid "{Data Type} prometheus-node-exporter-configuration"
msgstr "{Tipo de dados} prometheus-node-exporter-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33001
msgid "Data type representing the configuration of @command{node_exporter}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33003
#, no-wrap
msgid "@code{package} (default: @code{go-github-com-prometheus-node-exporter})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33005
msgid "The prometheus-node-exporter package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33006
#, no-wrap
msgid "@code{web-listen-address} (default: @code{\":9100\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33009
#, no-wrap
msgid "@code{textfile-directory} (default: @code{\"/var/lib/prometheus/node-exporter\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33013
msgid "This directory can be used to export metrics specific to this machine.  Files containing metrics in the text format, with the filename ending in @code{.prom} should be placed in this directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33016
msgid "Extra options to pass to the Prometheus node exporter."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33021 guix-git/doc/guix.texi:33022
#, fuzzy, no-wrap
#| msgid "install"
msgid "vnstat"
msgstr "instalar"

#. type: subsubheading
#: guix-git/doc/guix.texi:33021
#, no-wrap
msgid "vnStat Network Traffic Monitor"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33027
msgid "vnStat is a network traffic monitor that uses interface statistics provided by the kernel rather than traffic sniffing.  This makes it a light resource monitor, regardless of network traffic rate."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33028
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "vnstat-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33031
msgid "This is the service type for the @uref{https://humdi.net/vnstat/,vnStat} daemon and accepts a @code{vnstat-configuration} value."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33033
msgid "The following example will configure the service with default values:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33036
#, fuzzy, no-wrap
msgid "(service vnstat-service-type)\n"
msgstr "(service vnstat-service-type)\n"

#. type: deftp
#: guix-git/doc/guix.texi:33040
#, no-wrap
msgid "{Data Type} vnstat-configuration"
msgstr "{Tipo de dados} vnstat-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33042
#, fuzzy
msgid "Available @code{vnstat-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:33044
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{vnstat}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33046
#, fuzzy
#| msgid "The GPM package to use."
msgid "The vnstat package."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:33047
#, fuzzy, no-wrap
msgid "@code{database-directory} (default: @code{\"/var/lib/vnstat\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33050
msgid "Specifies the directory where the database is to be stored.  A full path must be given and a leading '/' isn't required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33051
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{5-minute-hours} (default: @code{48}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33056
msgid "Data retention duration for the 5 minute resolution entries.  The configuration defines for how many past hours entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33057
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{64bit-interface-counters} (default: @code{-2}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33066
msgid "Select interface counter handling.  Set to @code{1} for defining that all interfaces use 64-bit counters on the kernel side and @code{0} for defining 32-bit counter.  Set to @code{-1} for using the old style logic used in earlier versions where counter values within 32-bits are assumed to be 32-bit and anything larger is assumed to be a 64-bit counter.  This may produce false results if a 64-bit counter is reset within the 32-bits.  Set to @code{-2} for using automatic detection based on available kernel datastructures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33067
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{always-add-new-interfaces?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33074
msgid "Enable or disable automatic creation of new database entries for interfaces not currently in the database even if the database file already exists when the daemon is started.  New database entries will also get created for new interfaces seen while the daemon is running.  Pseudo interfaces @samp{lo}, @samp{lo0} and @samp{sit0} are always excluded from getting added."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33075
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{bandwidth-detection?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33083
msgid "Try to automatically detect @var{max-bandwidth} value for each monitored interface.  Mostly only ethernet interfaces support this feature.  @var{max-bandwidth} will be used as fallback value if detection fails.  Any interface specific @var{max-BW} configuration will disable the detection for the specified interface.  In Linux, the detection is disabled for tun interfaces due to the Linux kernel always reporting 10 Mbit regardless of the used real interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33084
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{bandwidth-detection-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33089
msgid "How often in minutes interface specific detection of @var{max-bandwidth} is done for detecting possible changes when @var{bandwidth-detection} is enabled.  Can be disabled by setting to @code{0}.  Value range: @samp{0}..@samp{30}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33090
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{boot-variation} (default: @code{15}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33093
msgid "Time in seconds how much the boot time reported by system kernel can variate between updates.  Value range: @samp{0}..@samp{300}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33094
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{check-disk-space?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33097
msgid "Enable or disable the availability check of at least some free disk space before a database write."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33098
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{create-directories?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33101
msgid "Enable or disable the creation of directories when a configured path doesn't exist.  This includes @var{database-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33102
#, fuzzy, no-wrap
msgid "@code{daemon-group} (type: maybe-user-group)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33105
msgid "Specify the group to which the daemon process should switch during startup.  Set to @code{%unset-value} to disable group switching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33106
#, fuzzy, no-wrap
msgid "@code{daemon-user} (type: maybe-user-account)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33109
msgid "Specify the user to which the daemon process should switch during startup.  Set to @code{%unset-value} to disable user switching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33110
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{daily-days} (default: @code{62}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33115
msgid "Data retention duration for the one day resolution entries.  The configuration defines for how many past days entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33116
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{database-synchronous} (default: @code{-1}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33127
msgid "Change the setting of the SQLite \"synchronous\" flag which controls how much care is taken to ensure disk writes have fully completed when writing data to the database before continuing other actions.  Higher values take extra steps to ensure data safety at the cost of slower performance.  A value of @code{0} will result in all handling being left to the filesystem itself.  Set to @code{-1} to select the default value according to database mode controlled by @var{database-write-ahead-logging} setting.  See SQLite documentation for more details regarding values from @code{1} to @code{3}.  Value range: @samp{-1}..@samp{3}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33128
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{database-write-ahead-logging?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33132
msgid "Enable or disable SQLite Write-Ahead Logging mode for the database.  See SQLite documentation for more details and note that support for read-only operations isn't available in older SQLite versions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33133
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{hourly-days} (default: @code{4}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33138
msgid "Data retention duration for the one hour resolution entries.  The configuration defines for how many past days entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33139 guix-git/doc/guix.texi:39107
#: guix-git/doc/guix.texi:44392 guix-git/doc/guix.texi:45274
#: guix-git/doc/guix.texi:51239
#, fuzzy, no-wrap
msgid "@code{log-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33142
msgid "Specify log file path and name to be used if @var{use-logging} is set to @code{1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33143
#, fuzzy, no-wrap
msgid "@code{max-bandwidth} (type: maybe-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33148
msgid "Maximum bandwidth for all interfaces.  If the interface specific traffic exceeds the given value then the data is assumed to be invalid and rejected.  Set to 0 in order to disable the feature.  Value range: @samp{0}..@samp{50000}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33149
#, fuzzy, no-wrap
msgid "@code{max-bw} (type: maybe-alist)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33153
msgid "Same as @var{max-bandwidth} but can be used for setting individual limits for selected interfaces.  This is an association list of interfaces as strings to integer values.  For example,"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33156
#, no-wrap
msgid ""
"(max-bw `((\"eth0\" .  15000)\n"
"          (\"ppp0\" .  10000)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33159
msgid "@var{bandwidth-detection} is disabled on an interface specific level for each @var{max-bw} configuration.  Value range: @samp{0}..@samp{50000}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33160
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{monthly-months} (default: @code{25}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33165
msgid "Data retention duration for the one month resolution entries.  The configuration defines for how many past months entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33166
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{month-rotate} (default: @code{1}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33173
msgid "Day of month that months are expected to change.  Usually set to 1 but can be set to alternative values for example for tracking monthly billed traffic where the billing period doesn't start on the first day.  For example, if set to 7, days of February up to and including the 6th will count for January.  Changing this option will not cause existing data to be recalculated.  Value range: @samp{1}..@samp{28}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33174
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{month-rotate-affects-years?} (default: @code{#f}) (type: maybe-boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33177
msgid "Enable or disable @var{month-rotate} also affecting yearly data.  Applicable only when @var{month-rotate} has a value greater than one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33178
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{offline-save-interval} (default: @code{30}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33182
msgid "How often in minutes cached interface data is saved to file when all monitored interfaces are offline.  Value range: @var{save-interval}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33183
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/vnstatd.pid\"}) (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33185
msgid "Specify pid file path and name to be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33186
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{poll-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33189
msgid "How often in seconds interfaces are checked for status changes.  Value range: @samp{2}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33190
#, fuzzy, no-wrap
msgid "@code{rescan-database-on-save?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33195
msgid "Automatically discover added interfaces from the database and start monitoring.  The rescan is done every @var{save-interval} or @var{offline-save-interval} minutes depending on the current activity state."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33196
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{save-interval} (default: @code{5}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33199
msgid "How often in minutes cached interface data is saved to file.  Value range: ( @var{update-interval} / 60 )..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33200
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{save-on-status-change?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33204
msgid "Enable or disable the additional saving to file of cached interface data when the availability of an interface changes, i.e., when an interface goes offline or comes online."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33205
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{time-sync-wait} (default: @code{5}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33211
msgid "How many minutes to wait during daemon startup for system clock to sync if most recent database update appears to be in the future.  This may be needed in systems without a real-time clock (RTC) which require some time after boot to query and set the correct time.  @code{0} = wait disabled.  Value range: @samp{0}..@samp{60}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33212
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{top-day-entries} (default: @code{20}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33217
msgid "Data retention duration for the top day entries.  The configuration defines how many of the past top day entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33218
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{trafficless-entries?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33221
msgid "Create database entries even when there is no traffic during the entry's time period."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33222
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{update-file-owner?} (default: @code{#t}) (type: maybe-boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33231
msgid "Enable or disable the update of file ownership during daemon process startup.  During daemon startup, only database, log and pid files will be modified if the user or group change feature ( @var{daemon-user} or @var{daemon-group} ) is enabled and the files don't match the requested user or group.  During manual database creation, this option will cause file ownership to be inherited from the database directory if the directory already exists.  This option only has effect when the process is started as root or via sudo."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33232
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{update-interval} (default: @code{20}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33235
msgid "How often in seconds the interface data is updated.  Value range: @var{poll-interval}..@samp{300}"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33236
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{use-logging} (default: @code{2}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33239
msgid "Enable or disable logging.  Accepted values are: @code{0} = disabled, @code{1} = logfile and @code{2} = syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33240
#, fuzzy, no-wrap
msgid "@code{use-utc?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33246
msgid "Enable or disable using UTC as timezone in the database for all entries.  When enabled, all entries added to the database will use UTC regardless of the configured system timezone.  When disabled, the configured system timezone will be used.  Changing this setting will not result in already existing data to be modified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33247
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{yearly-years} (default: @code{-1}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33252
msgid "Data retention duration for the one year resolution entries.  The configuration defines for how many past years entries will be stored.  Set to @code{-1} for unlimited entries or to @code{0} to disable the data collection of this resolution."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33257
#, no-wrap
msgid "Zabbix server"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33258
#, no-wrap
msgid "zabbix zabbix-server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33263
msgid "Zabbix is a high performance monitoring system that can collect data from a variety of sources and provide the results in a web-based interface.  Alerting and reporting is built-in, as well as @dfn{templates} for common operating system metrics such as network utilization, CPU load, and disk space consumption."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33270
msgid "This service provides the central Zabbix monitoring service; you also need @ref{zabbix-front-end,@code{zabbix-front-end-service-type}} to configure Zabbix and display results, and optionally @ref{zabbix-agent, @code{zabbix-agent-service-type}} on machines that should be monitored (other data sources are supported, such as @ref{prometheus-node-exporter, Prometheus Node Exporter})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33271
#, fuzzy, no-wrap
msgid "zabbix-server-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33274
msgid "This is the service type for the Zabbix server service.  Its value must be a @code{zabbix-server-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33278
#, no-wrap
msgid "{Data Type} zabbix-server-configuration"
msgstr "{Tipo de dados} zabbix-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33280
msgid "Available @code{zabbix-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33282 guix-git/doc/guix.texi:33445
#, fuzzy, no-wrap
msgid "@code{zabbix-server} (default: @code{zabbix-server}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33284
msgid "The zabbix-server package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33285 guix-git/doc/guix.texi:33371
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{\"zabbix\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33287
msgid "User who will run the Zabbix server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33288 guix-git/doc/guix.texi:33374
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{\"zabbix\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33290
msgid "Group who will run the Zabbix server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33291
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{db-host} (default: @code{\"127.0.0.1\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33293 guix-git/doc/guix.texi:33455
msgid "Database host name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33294 guix-git/doc/guix.texi:33459
#, fuzzy, no-wrap
msgid "@code{db-name} (default: @code{\"zabbix\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33296 guix-git/doc/guix.texi:33461
msgid "Database name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33297 guix-git/doc/guix.texi:33462
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{db-user} (default: @code{\"zabbix\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33299 guix-git/doc/guix.texi:33464
msgid "Database user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33300 guix-git/doc/guix.texi:33465
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{db-password} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33303
msgid "Database password.  Please, use @code{include-files} with @code{DBPassword=SECRET} inside a specified file instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33304 guix-git/doc/guix.texi:33456
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{db-port} (default: @code{5432}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33306 guix-git/doc/guix.texi:33458
msgid "Database port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33307 guix-git/doc/guix.texi:33381
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{log-type} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33309 guix-git/doc/guix.texi:33383
msgid "Specifies where log messages are written to:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33312 guix-git/doc/guix.texi:33387
#, no-wrap
msgid "@code{system} - syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33314
#, no-wrap
msgid "@code{file} - file specified with @code{log-file} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33316 guix-git/doc/guix.texi:33391
#, no-wrap
msgid "@code{console} - standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33320
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/zabbix/server.log\"}) (type: string)"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:33322 guix-git/doc/guix.texi:33397
msgid "Log file name for @code{log-type} @code{file} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33323
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/zabbix/zabbix_server.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33325 guix-git/doc/guix.texi:33400
msgid "Name of PID file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33326
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{ssl-ca-location} (default: @code{\"/etc/ssl/certs/ca-certificates.crt\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33329
msgid "The location of certificate authority (CA) files for SSL server certificate verification."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33330
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{ssl-cert-location} (default: @code{\"/etc/ssl/certs\"}) (type: string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33332
msgid "Location of SSL client certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33333 guix-git/doc/guix.texi:33411
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-options} (default: @code{\"\"}) (type: extra-options)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33335 guix-git/doc/guix.texi:33413
msgid "Extra options will be appended to Zabbix server configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33336 guix-git/doc/guix.texi:33414
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{include-files} (default: @code{'()}) (type: include-files)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33339 guix-git/doc/guix.texi:33417
msgid "You may include individual files or all files in a directory in the configuration file."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:33348
msgid "zabbix-agent"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33348
#, no-wrap
msgid "Zabbix agent"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33349
#, no-wrap
msgid "zabbix zabbix-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33356
msgid "The Zabbix agent gathers information about the running system for the Zabbix monitoring server.  It has a variety of built-in checks, and can be extended with custom @uref{https://www.zabbix.com/documentation/current/en/manual/config/items/userparameters, @dfn{user parameters}}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33357
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "zabbix-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33360
msgid "This is the service type for the Zabbix agent service.  Its value must be a @code{zabbix-agent-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33364
#, no-wrap
msgid "{Data Type} zabbix-agent-configuration"
msgstr "{Tipo de dados} zabbix-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33366
msgid "Available @code{zabbix-agent-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33368
#, fuzzy, no-wrap
msgid "@code{zabbix-agent} (default: @code{zabbix-agentd}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33370
msgid "The zabbix-agent package."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33373
msgid "User who will run the Zabbix agent."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33376
msgid "Group who will run the Zabbix agent."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33377
#, fuzzy, no-wrap
msgid "@code{hostname} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33380
msgid "Unique, case sensitive hostname which is required for active checks and must match hostname as configured on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33388
#, no-wrap
msgid "@code{file} - file specified with"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33390
#, fuzzy
#| msgid "@code{log-file} (default: @code{#f})"
msgid "@code{log-file} parameter."
msgstr "@code{log-file} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:33395
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/zabbix/agent.log\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:33398
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/zabbix/zabbix_agent.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:33401
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{server} (default: @code{'(\"127.0.0.1\")}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33405
msgid "List of IP addresses, optionally in CIDR notation, or hostnames of Zabbix servers and Zabbix proxies.  Incoming connections will be accepted only from the hosts listed here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33406
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{server-active} (default: @code{'(\"127.0.0.1\")}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33410
msgid "List of IP:port (or hostname:port) pairs of Zabbix servers and Zabbix proxies for active checks.  If port is not specified, default port is used.  If this parameter is not specified, active checks are disabled."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:33426
msgid "zabbix-front-end"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33426
#, no-wrap
msgid "Zabbix front-end"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33427
#, no-wrap
msgid "zabbix zabbix-front-end"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33433
msgid "The Zabbix front-end provides a web interface to Zabbix.  It does not need to run on the same machine as the Zabbix server.  This service works by extending the @ref{PHP-FPM} and @ref{NGINX} services with the configuration necessary for loading the Zabbix user interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33434
#, fuzzy, no-wrap
msgid "zabbix-front-end-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33437
msgid "This is the service type for the Zabbix web frontend.  Its value must be a @code{zabbix-front-end-configuration} record, shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33441
#, no-wrap
msgid "{Data Type} zabbix-front-end-configuration"
msgstr "{Tipo de dados} zabbix-front-end-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33443
msgid "Available @code{zabbix-front-end-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33447
#, fuzzy
#| msgid "The GPM package to use."
msgid "The Zabbix server package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:33448
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{nginx} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33452
msgid "List of @ref{nginx-server-configuration,@code{nginx-server-configuration}} blocks for the Zabbix front-end.  When empty, a default that listens on port 80 is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33453
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{db-host} (default: @code{\"localhost\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33467
msgid "Database password.  Please, use @code{db-secret-file} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33468
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{db-secret-file} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:33472
msgid "Secret file which will be appended to @file{zabbix.conf.php} file.  This file contains credentials for use by Zabbix front-end.  You are expected to create it manually."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33473
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{zabbix-host} (default: @code{\"localhost\"}) (type: string)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33475
msgid "Zabbix server hostname."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33476
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{zabbix-port} (default: @code{10051}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:33478
msgid "Zabbix server port."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33488
#, no-wrap
msgid "Kerberos"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33492
msgid "The @code{(gnu services kerberos)} module provides services relating to the authentication protocol @dfn{Kerberos}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33493
#, no-wrap
msgid "Krb5 Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33500
msgid "Programs using a Kerberos client library normally expect a configuration file in @file{/etc/krb5.conf}.  This service generates such a file from a definition provided in the operating system declaration.  It does not cause any daemon to be started."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33504
msgid "No ``keytab'' files are provided by this service---you must explicitly create them.  This service is known to work with the MIT client library, @code{mit-krb5}.  Other implementations have not been tested."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33505
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "krb5-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33507
msgid "A service type for Kerberos 5 clients."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33511
msgid "Here is an example of its use:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33525
#, no-wrap
msgid ""
"(service krb5-service-type\n"
"         (krb5-configuration\n"
"          (default-realm \"EXAMPLE.COM\")\n"
"          (allow-weak-crypto? #t)\n"
"          (realms (list\n"
"                   (krb5-realm\n"
"                    (name \"EXAMPLE.COM\")\n"
"                    (admin-server \"groucho.example.com\")\n"
"                    (kdc \"karl.example.com\"))\n"
"                   (krb5-realm\n"
"                    (name \"ARGRX.EDU\")\n"
"                    (admin-server \"kerb-admin.argrx.edu\")\n"
"                    (kdc \"keys.argrx.edu\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33529
msgid "This example provides a Kerberos@tie{}5 client configuration which:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33530
#, no-wrap
msgid "Recognizes two realms, @i{viz:} ``EXAMPLE.COM'' and ``ARGRX.EDU'', both"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33532
msgid "of which have distinct administration servers and key distribution centers;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33532
#, no-wrap
msgid "Will default to the realm ``EXAMPLE.COM'' if the realm is not explicitly"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:33534
msgid "specified by clients;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33534
#, no-wrap
msgid "Accepts services which only support encryption types known to be weak."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33542
msgid "The @code{krb5-realm} and @code{krb5-configuration} types have many fields.  Only the most commonly used ones are described here.  For a full list, and more detailed explanation of each, see the MIT @uref{https://web.mit.edu/kerberos/krb5-devel/doc/admin/conf_files/krb5_conf.html,,krb5.conf} documentation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33544
#, no-wrap
msgid "{Data Type} krb5-realm"
msgstr "{Tipo de dados} krb5-realm"

#. type: cindex
#: guix-git/doc/guix.texi:33545
#, no-wrap
msgid "realm, kerberos"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33551
msgid "This field is a string identifying the name of the realm.  A common convention is to use the fully qualified DNS name of your organization, converted to upper case."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33552
#, no-wrap
msgid "admin-server"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33555
msgid "This field is a string identifying the host where the administration server is running."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33556
#, no-wrap
msgid "kdc"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33559
msgid "This field is a string identifying the key distribution center for the realm."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33562
#, no-wrap
msgid "{Data Type} krb5-configuration"
msgstr "{Tipo de dados} krb5-configuration"

#. type: item
#: guix-git/doc/guix.texi:33565
#, no-wrap
msgid "@code{allow-weak-crypto?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33568
msgid "If this flag is @code{#t} then services which only offer encryption algorithms known to be weak will be accepted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33569
#, no-wrap
msgid "@code{default-realm} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33576
msgid "This field should be a string identifying the default Kerberos realm for the client.  You should set this field to the name of your Kerberos realm.  If this value is @code{#f} then a realm must be specified with every Kerberos principal when invoking programs such as @command{kinit}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:33577
#, no-wrap
msgid "realms"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33582
msgid "This should be a non-empty list of @code{krb5-realm} objects, which clients may access.  Normally, one of them will have a @code{name} field matching the @code{default-realm} field."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:33586
#, no-wrap
msgid "PAM krb5 Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33587
#, no-wrap
msgid "pam-krb5"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33593
msgid "The @code{pam-krb5} service allows for login authentication and password management via Kerberos.  You will need this service if you want PAM enabled applications to authenticate users using Kerberos."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:33594
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pam-krb5-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:33596
msgid "A service type for the Kerberos 5 PAM module."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:33598
#, no-wrap
msgid "{Data Type} pam-krb5-configuration"
msgstr "{Tipo de dados} pam-krb5-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:33601
msgid "Data type representing the configuration of the Kerberos 5 PAM module.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33602
#, no-wrap
msgid "@code{pam-krb5} (default: @code{pam-krb5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33604
msgid "The pam-krb5 package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:33605
#, no-wrap
msgid "@code{minimum-uid} (default: @code{1000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:33608
msgid "The smallest user ID for which Kerberos authentications should be attempted.  Local accounts with lower values will silently fail to authenticate."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33614
#, no-wrap
msgid "LDAP"
msgstr "LDAP"

#. type: subsubheading
#: guix-git/doc/guix.texi:33616
#, no-wrap
msgid "Authentication against LDAP with nslcd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:33617
#, no-wrap
msgid "nslcd, LDAP service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33624
msgid "The @code{(gnu services authentication)} module provides the @code{nslcd-service-type}, which can be used to authenticate against an LDAP server.  In addition to configuring the service itself, you may want to add @code{ldap} as a name service to the Name Service Switch. @xref{Name Service Switch} for detailed information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33628
msgid "Here is a simple operating system declaration with a default configuration of the @code{nslcd-service-type} and a Name Service Switch configuration that consults the @code{ldap} name service last:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:33651
#, no-wrap
msgid ""
"(use-service-modules authentication)\n"
"(use-modules (gnu system nss))\n"
"...\n"
"(operating-system\n"
"  ...\n"
"  (services\n"
"    (cons*\n"
"      (service nslcd-service-type)\n"
"      (service dhcp-client-service-type)\n"
"      %base-services))\n"
"  (name-service-switch\n"
"   (let ((services (list (name-service (name \"db\"))\n"
"                         (name-service (name \"files\"))\n"
"                         (name-service (name \"ldap\")))))\n"
"     (name-service-switch\n"
"      (inherit %mdns-host-lookup-nss)\n"
"      (password services)\n"
"      (shadow   services)\n"
"      (group    services)\n"
"      (netgroup services)\n"
"      (gshadow  services)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:33656
msgid "Available @code{nslcd-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33657
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} package nss-pam-ldapd"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33659
msgid "The @code{nss-pam-ldapd} package to use."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33662
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number threads"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33666
msgid "The number of threads to start that can handle requests and perform LDAP queries.  Each thread opens a separate connection to the LDAP server.  The default is to start 5 threads."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33671
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33673
msgid "This specifies the user id with which the daemon should be run."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33675 guix-git/doc/guix.texi:33682
msgid "Defaults to @samp{\"nslcd\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33678
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string gid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33680
msgid "This specifies the group id with which the daemon should be run."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33685
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} log-option log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33693
msgid "This option controls the way logging is done via a list containing SCHEME and LEVEL@.  The SCHEME argument may either be the symbols @samp{none} or @samp{syslog}, or an absolute file name.  The LEVEL argument is optional and specifies the log level.  The log level may be one of the following symbols: @samp{crit}, @samp{error}, @samp{warning}, @samp{notice}, @samp{info} or @samp{debug}.  All messages with the specified log level or higher are logged."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33695
msgid "Defaults to @samp{'(\"/var/log/nslcd\" info)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33698
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list uri"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33701
msgid "The list of LDAP server URIs.  Normally, only the first server will be used with the following servers as fall-back."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33703
msgid "Defaults to @samp{'(\"ldap://localhost:389/\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33706
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string ldap-version"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33709
msgid "The version of the LDAP protocol to use.  The default is to use the maximum version supported by the LDAP library."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33714
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string binddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33717
msgid "Specifies the distinguished name with which to bind to the directory server for lookups.  The default is to bind anonymously."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33722
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string bindpw"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33725
msgid "Specifies the credentials with which to bind.  This option is only applicable when used with binddn."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33730
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string rootpwmoddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33733
msgid "Specifies the distinguished name to use when the root user tries to modify a user's password using the PAM module."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33738
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string rootpwmodpw"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33742
msgid "Specifies the credentials with which to bind if the root user tries to change a user's password.  This option is only applicable when used with rootpwmoddn"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33747
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-mech"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33750
msgid "Specifies the SASL mechanism to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33755
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-realm"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33757
msgid "Specifies the SASL realm to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33762
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-authcid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33765
msgid "Specifies the authentication identity to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33770
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string sasl-authzid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33773
msgid "Specifies the authorization identity to be used when performing SASL authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33778
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean sasl-canonicalize?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33783
msgid "Determines whether the LDAP server host name should be canonicalised.  If this is enabled the LDAP library will do a reverse host name lookup.  By default, it is left up to the LDAP library whether this check is performed or not."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33788
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string krb5-ccname"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33790
msgid "Set the name for the GSS-API Kerberos credentials cache."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33795
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} string base"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33797
msgid "The directory search base."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33799
msgid "Defaults to @samp{\"dc=example,dc=com\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33802
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} scope-option scope"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33806
msgid "Specifies the search scope (subtree, onelevel, base or children).  The default scope is subtree; base scope is almost never useful for name service lookups; children scope is not supported on all servers."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33808
msgid "Defaults to @samp{'(subtree)}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33811
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-deref-option deref"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33814
msgid "Specifies the policy for dereferencing aliases.  The default policy is to never dereference aliases."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33819
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean referrals"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33822
msgid "Specifies whether automatic referral chasing should be enabled.  The default behaviour is to chase referrals."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33827
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list-of-map-entries maps"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33832
msgid "This option allows for custom attributes to be looked up instead of the default RFC 2307 attributes.  It is a list of maps, each consisting of the name of a map, the RFC 2307 attribute to match and the query expression for the attribute as it is available in the directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33837
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list-of-filter-entries filters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33840
msgid "A list of filters consisting of the name of a map to which the filter applies and an LDAP search filter expression."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33845
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number bind-timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33848
msgid "Specifies the time limit in seconds to use when connecting to the directory server.  The default value is 10 seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33853
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33857
msgid "Specifies the time limit (in seconds) to wait for a response from the LDAP server.  A value of zero, which is the default, is to wait indefinitely for searches to be completed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33862
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number idle-timelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33866
msgid "Specifies the period if inactivity (in seconds) after which the con‐ nection to the LDAP server will be closed.  The default is not to time out connections."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33871
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number reconnect-sleeptime"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33875
msgid "Specifies the number of seconds to sleep when connecting to all LDAP servers fails.  By default one second is waited between the first failure and the first retry."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33880
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number reconnect-retrytime"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33884
msgid "Specifies the time after which the LDAP server is considered to be permanently unavailable.  Once this time is reached retries will be done only once per this time period.  The default value is 10 seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33889
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-ssl-option ssl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33893
msgid "Specifies whether to use SSL/TLS or not (the default is not to).  If 'start-tls is specified then StartTLS is used rather than raw LDAP over SSL."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33898
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-tls-reqcert-option tls-reqcert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33901
msgid "Specifies what checks to perform on a server-supplied certificate.  The meaning of the values is described in the ldap.conf(5) manual page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33906
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cacertdir"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33909
msgid "Specifies the directory containing X.509 certificates for peer authen‐ tication.  This parameter is ignored when using GnuTLS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33914
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cacertfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33916
msgid "Specifies the path to the X.509 certificate for peer authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33921
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-randfile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33924
msgid "Specifies the path to an entropy source.  This parameter is ignored when using GnuTLS."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33929
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-ciphers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33931
msgid "Specifies the ciphers to use for TLS as a string."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33936
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-cert"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33939
msgid "Specifies the path to the file containing the local certificate for client TLS authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33944
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string tls-key"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33947
msgid "Specifies the path to the file containing the private key for client TLS authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33952
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number pagesize"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33956
msgid "Set this to a number greater than 0 to request paged results from the LDAP server in accordance with RFC2696.  The default (0) is to not request paged results."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33961
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-ignore-users-option nss-initgroups-ignoreusers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33965
msgid "This option prevents group membership lookups through LDAP for the specified users.  Alternatively, the value 'all-local may be used.  With that value nslcd builds a full list of non-LDAP users on startup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33970
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-min-uid"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33973
msgid "This option ensures that LDAP users with a numeric user id lower than the specified value are ignored."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33978
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-uid-offset"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33981
msgid "This option specifies an offset that is added to all LDAP numeric user ids.  This can be used to avoid user id collisions with local users."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33986
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-number nss-gid-offset"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33989
msgid "This option specifies an offset that is added to all LDAP numeric group ids.  This can be used to avoid user id collisions with local groups."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:33994
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-nested-groups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34000
msgid "If this option is set, the member attribute of a group may point to another group.  Members of nested groups are also returned in the higher level group and parent groups are returned when finding groups for a specific user.  The default is not to perform extra searches for nested groups."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34005
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-getgrent-skipmembers"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34010
msgid "If this option is set, the group member list is not retrieved when looking up groups.  Lookups for finding which groups a user belongs to will remain functional so the user will likely still get the correct groups assigned on login."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34015
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean nss-disable-enumeration"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34021
msgid "If this option is set, functions which cause all user/group entries to be loaded from the directory will not succeed in doing so.  This can dramatically reduce LDAP server load in situations where there are a great number of users and/or groups.  This option is not recommended for most configurations."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34026
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string validnames"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34030
msgid "This option can be used to specify how user and group names are verified within the system.  This pattern is used to check all user and group names that are requested and returned from LDAP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34035
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean ignorecase"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34040
msgid "This specifies whether or not to perform searches using case-insensitive matching.  Enabling this could open up the system to authorization bypass vulnerabilities and introduce nscd cache poisoning vulnerabilities which allow denial of service."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34045
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-boolean pam-authc-ppolicy"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34048
msgid "This option specifies whether password policy controls are requested and handled from the LDAP server when performing user authentication."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34053
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-authc-search"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34059
msgid "By default nslcd performs an LDAP search with the user's credentials after BIND (authentication) to ensure that the BIND operation was successful.  The default search is a simple check to see if the user's DN exists.  A search filter can be specified that will be used instead.  It should return at least one entry."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34064
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-authz-search"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34068
msgid "This option allows flexible fine tuning of the authorisation check that should be performed.  The search filter specified is executed and if any entries match, access is granted, otherwise access is denied."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34073
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} maybe-string pam-password-prohibit-message"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34078
msgid "If this option is set password modification using pam_ldap will be denied and the specified message will be presented to the user instead.  The message can be used to direct the user to an alternative means of changing their password."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34083
#, no-wrap
msgid "{@code{nslcd-configuration} parameter} list pam-services"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:34085
msgid "List of pam service names for which LDAP authentication should suffice."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34093
#, no-wrap
msgid "LDAP Directory Server"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34094
#, no-wrap
msgid "LDAP, server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34099
msgid "The @code{(gnu services ldap)} module provides the @code{directory-server-service-type}, which can be used to create and launch an LDAP server instance."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34102
#, fuzzy
msgid "Here is an example configuration of the @code{directory-server-service-type}:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: lisp
#: guix-git/doc/guix.texi:34105
#, fuzzy, no-wrap
#| msgid ""
#| "(use-package-modules guile emacs)\n"
#| "\n"
msgid ""
"(use-service-modules ldap)\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:34117
#, no-wrap
msgid ""
"...\n"
"(operating-system\n"
"  ...\n"
"  (services\n"
"    (cons\n"
"      (service directory-server-service-type\n"
"               (directory-server-instance-configuration\n"
"                (slapd\n"
"                 (slapd-configuration\n"
"                  (root-password \"@{PBKDF2_SHA256@}AAAgAG@dots{}ABSOLUTELYSECRET\")))))\n"
"      %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34121
msgid "The root password should be generated with the @command{pwdhash} utility that is provided by the @code{389-ds-base} package."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34126
msgid "Note that changes to the directory server configuration will not be applied to existing instances.  You will need to back up and restore server data manually.  Only new directory server instances will be created upon system reconfiguration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34128
#, no-wrap
msgid "{Data Type} directory-server-instance-configuration"
msgstr "{Tipo de dados} directory-server-instance-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34130
#, fuzzy
msgid "Available @code{directory-server-instance-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:34132
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{389-ds-base}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34134
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{389-ds-base} package."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:34135
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{config-version} (default: @code{2}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34138
msgid "Sets the format version of the configuration file.  To use the INF file with @command{dscreate}, this parameter must be 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34139
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{full-machine-name} (default: @code{\"localhost\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34141
msgid "Sets the fully qualified hostname (FQDN) of this system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34142
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{selinux} (default: @code{#false}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34146
msgid "Enables SELinux detection and integration during the installation of this instance.  If set to @code{#true}, @command{dscreate} auto-detects whether SELinux is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34147
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{strict-host-checking} (default: @code{#true}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34152
msgid "Sets whether the server verifies the forward and reverse record set in the @code{full-machine-name} parameter.  When installing this instance with GSSAPI authentication behind a load balancer, set this parameter to @code{#false}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34153
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{systemd} (default: @code{#false}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34156
msgid "Enables systemd platform features.  If set to @code{#true}, @command{dscreate} auto-detects whether systemd is installed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34157
#, fuzzy, no-wrap
msgid "@code{slapd} (type: slapd-configuration)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:34159
#, fuzzy
#| msgid "Configuring the boot loader."
msgid "Configuration of slapd."
msgstr "Configurando o \"bootloader\"."

#. type: deftp
#: guix-git/doc/guix.texi:34160
#, no-wrap
msgid "{Data Type} slapd-configuration"
msgstr "{Tipo de dados} slapd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34162
#, fuzzy
msgid "Available @code{slapd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:34164
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{instance-name} (default: @code{\"localhost\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34168
msgid "Sets the name of the instance.  You can refer to this value in other parameters of this INF file using the @code{@{instance_name@}} variable.  Note that this name cannot be changed after the installation!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34169
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{\"dirsrv\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34172
msgid "Sets the user name the ns-slapd process will use after the service started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34173
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{\"dirsrv\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34176
msgid "Sets the group name the ns-slapd process will use after the service started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34177
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{389}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34179
msgid "Sets the TCP port the instance uses for LDAP connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34180
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{secure-port} (default: @code{636}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34183
msgid "Sets the TCP port the instance uses for TLS-secured LDAP connections (LDAPS)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34184
#, fuzzy, no-wrap
msgid "@code{root-dn} (default: @code{\"cn=Directory Manager\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34187
msgid "Sets the @dfn{Distinquished Name} (DN) of the administrator account for this instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34188
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{root-password} (default: @code{\"@{invalid@}YOU-SHOULD-CHANGE-THIS\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34195
msgid "Sets the password of the account specified in the @code{root-dn} parameter.  You can either set this parameter to a plain text password @command{dscreate} hashes during the installation or to a \"@{algorithm@}hash\" string generated by the @command{pwdhash} utility.  Note that setting a plain text password can be a security risk if unprivileged users can read this INF file!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34196
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{self-sign-cert} (default: @code{#true}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34202
msgid "Sets whether the setup creates a self-signed certificate and enables TLS encryption during the installation.  This is not suitable for production, but it enables administrators to use TLS right after the installation.  You can replace the self-signed certificate with a certificate issued by a certificate authority."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34203
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{self-sign-cert-valid-months} (default: @code{24}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34206
msgid "Set the number of months the issued self-signed certificate will be valid."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34207
#, fuzzy, no-wrap
msgid "@code{backup-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/bak\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34209
msgid "Set the backup directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34210
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{cert-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34213
msgid "Sets the directory of the instance's Network Security Services (NSS)  database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34214
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{config-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34216
#, fuzzy
msgid "Sets the configuration directory of the instance."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:34217
#, fuzzy, no-wrap
msgid "@code{db-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/db\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34219
msgid "Sets the database directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34220
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{initconfig-dir} (default: @code{\"/etc/dirsrv/registry\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34222
#, fuzzy
#| msgid "Manage the operating system configuration."
msgid "Sets the directory of the operating system's rc configuration directory."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:34223
#, fuzzy, no-wrap
msgid "@code{ldif-dir} (default: @code{\"/var/lib/dirsrv/slapd-@{instance_name@}/ldif\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34225
msgid "Sets the LDIF export and import directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34226
#, fuzzy, no-wrap
msgid "@code{lock-dir} (default: @code{\"/var/lock/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34228
msgid "Sets the lock directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34229
#, fuzzy, no-wrap
msgid "@code{log-dir} (default: @code{\"/var/log/dirsrv/slapd-@{instance_name@}\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34231
msgid "Sets the log directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34232
#, fuzzy, no-wrap
msgid "@code{run-dir} (default: @code{\"/run/dirsrv\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34234
msgid "Sets PID directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34235
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{schema-dir} (default: @code{\"/etc/dirsrv/slapd-@{instance_name@}/schema\"}) (type: string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34237
msgid "Sets schema directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34238
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{tmp-dir} (default: @code{\"/tmp\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34240
msgid "Sets the temporary directory of the instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34243
#, fuzzy, no-wrap
msgid "@code{backend-userroot} (type: backend-userroot-configuration)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:34245
#, fuzzy
#| msgid "Configuring the boot loader."
msgid "Configuration of the userroot backend."
msgstr "Configurando o \"bootloader\"."

#. type: deftp
#: guix-git/doc/guix.texi:34246
#, no-wrap
msgid "{Data Type} backend-userroot-configuration"
msgstr "{Tipo de dados} backend-userroot-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34248
#, fuzzy
msgid "Available @code{backend-userroot-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:34250
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{create-suffix-entry?} (default: @code{#false}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34253
msgid "Set this parameter to @code{#true} to create a generic root node entry for the suffix in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34254
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{require-index?} (default: @code{#false}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34257
msgid "Set this parameter to @code{#true} to refuse unindexed searches in this database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34258
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{sample-entries} (default: @code{\"no\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:34263
msgid "Set this parameter to @code{\"yes\"} to add latest version of sample entries to this database.  Or, use @code{\"001003006\"} to use the 1.3.6 version sample entries.  Use this option, for example, to create a database for testing purposes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34264
#, fuzzy, no-wrap
msgid "@code{suffix} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34269
msgid "Sets the root suffix stored in this database.  If you do not set the suffix attribute the install process will not create the backend/suffix.  You can also create multiple backends/suffixes by duplicating this section."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34279
#, no-wrap
msgid "web"
msgstr "web"

#. type: cindex
#: guix-git/doc/guix.texi:34280
#, no-wrap
msgid "www"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34281
#, no-wrap
msgid "HTTP"
msgstr "HTTP"

#. type: Plain text
#: guix-git/doc/guix.texi:34284
msgid "The @code{(gnu services web)} module provides the Apache HTTP Server, the nginx web server, and also a fastcgi wrapper daemon."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34285
#, no-wrap
msgid "Apache HTTP Server"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34287
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "httpd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:34291
msgid "Service type for the @uref{https://httpd.apache.org/,Apache HTTP} server (@dfn{httpd}).  The value for this service type is a @code{httpd-configuration} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34293 guix-git/doc/guix.texi:34475
msgid "A simple example configuration is given below."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34301
#, no-wrap
msgid ""
"(service httpd-service-type\n"
"         (httpd-configuration\n"
"           (config\n"
"             (httpd-config-file\n"
"               (server-name \"www.example.com\")\n"
"               (document-root \"/srv/http/www.example.com\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34305
msgid "Other services can also extend the @code{httpd-service-type} to add to the configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34314
#, no-wrap
msgid ""
"(simple-service 'www.example.com-server httpd-service-type\n"
"                (list\n"
"                  (httpd-virtualhost\n"
"                    \"*:80\"\n"
"                    (list (string-join '(\"ServerName www.example.com\"\n"
"                                         \"DocumentRoot /srv/http/www.example.com\")\n"
"                                       \"\\n\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34320
msgid "The details for the @code{httpd-configuration}, @code{httpd-module}, @code{httpd-config-file} and @code{httpd-virtualhost} record types are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34321
#, no-wrap
msgid "{Data Type} httpd-configuration"
msgstr "{Tipo de dados} httpd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34323
msgid "This data type represents the configuration for the httpd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34325
#, no-wrap
msgid "@code{package} (default: @code{httpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34327
msgid "The httpd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34328 guix-git/doc/guix.texi:34417
#, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34330
msgid "The pid file used by the shepherd-service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34331
#, no-wrap
msgid "@code{config} (default: @code{(httpd-config-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34336
msgid "The configuration file to use with the httpd service.  The default value is a @code{httpd-config-file} record, but this can also be a different G-expression that generates a file, for example a @code{plain-file}.  A file outside of the store can also be specified through a string."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34340
#, no-wrap
msgid "{Data Type} httpd-module"
msgstr "{Tipo de dados} httpd-module"

#. type: deftp
#: guix-git/doc/guix.texi:34342
msgid "This data type represents a module for the httpd service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34346
msgid "The name of the module."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34352
msgid "The file for the module.  This can be relative to the httpd package being used, the absolute location of a file, or a G-expression for a file within the store, for example @code{(file-append mod-wsgi \"/modules/mod_wsgi.so\")}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34356
#, no-wrap
msgid "%default-httpd-modules"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34358
msgid "A default list of @code{httpd-module} objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34360
#, no-wrap
msgid "{Data Type} httpd-config-file"
msgstr "{Tipo de dados} httpd-config-file"

#. type: deftp
#: guix-git/doc/guix.texi:34362
msgid "This data type represents a configuration file for the httpd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34364
#, no-wrap
msgid "@code{modules} (default: @code{%default-httpd-modules})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34367
msgid "The modules to load.  Additional modules can be added here, or loaded by additional configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34370
msgid "For example, in order to handle requests for PHP files, you can use Apache’s @code{mod_proxy_fcgi} module along with @code{php-fpm-service-type}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34392
#, no-wrap
msgid ""
"(service httpd-service-type\n"
"         (httpd-configuration\n"
"          (config\n"
"           (httpd-config-file\n"
"            (modules (cons*\n"
"                      (httpd-module\n"
"                       (name \"proxy_module\")\n"
"                       (file \"modules/mod_proxy.so\"))\n"
"                      (httpd-module\n"
"                       (name \"proxy_fcgi_module\")\n"
"                       (file \"modules/mod_proxy_fcgi.so\"))\n"
"                      %default-httpd-modules))\n"
"            (extra-config (list \"\\\n"
"<FilesMatch \\\\.php$>\n"
"    SetHandler \\\"proxy:unix:/var/run/php-fpm.sock|fcgi://localhost/\\\"\n"
"</FilesMatch>\"))))))\n"
"(service php-fpm-service-type\n"
"         (php-fpm-configuration\n"
"          (socket \"/var/run/php-fpm.sock\")\n"
"          (socket-group \"httpd\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34394
#, no-wrap
msgid "@code{server-root} (default: @code{httpd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34398
msgid "The @code{ServerRoot} in the configuration file, defaults to the httpd package.  Directives including @code{Include} and @code{LoadModule} are taken as relative to the server root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34399
#, no-wrap
msgid "@code{server-name} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34403
msgid "The @code{ServerName} in the configuration file, used to specify the request scheme, hostname and port that the server uses to identify itself."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34407
msgid "This doesn't need to be set in the server config, and can be specified in virtual hosts.  The default is @code{#f} to not specify a @code{ServerName}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34408
#, no-wrap
msgid "@code{document-root} (default: @code{\"/srv/http\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34410
msgid "The @code{DocumentRoot} from which files will be served."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34411
#, no-wrap
msgid "@code{listen} (default: @code{'(\"80\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34416
msgid "The list of values for the @code{Listen} directives in the config file.  The value should be a list of strings, when each string can specify the port number to listen on, and optionally the IP address and protocol to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34421
msgid "The @code{PidFile} to use.  This should match the @code{pid-file} set in the @code{httpd-configuration} so that the Shepherd service is configured correctly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34422
#, no-wrap
msgid "@code{error-log} (default: @code{\"/var/log/httpd/error_log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34424
msgid "The @code{ErrorLog} to which the server will log errors."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34425 guix-git/doc/guix.texi:35104
#, no-wrap
msgid "@code{user} (default: @code{\"httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34427
msgid "The @code{User} which the server will answer requests as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34428
#, no-wrap
msgid "@code{group} (default: @code{\"httpd\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34430
msgid "The @code{Group} which the server will answer requests as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34431
#, no-wrap
msgid "@code{extra-config} (default: @code{(list \"TypesConfig etc/httpd/mime.types\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34434
msgid "A flat list of strings and G-expressions which will be added to the end of the configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34437
msgid "Any values which the service is extended with will be appended to this list."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34441
#, no-wrap
msgid "{Data Type} httpd-virtualhost"
msgstr "{Tipo de dados} httpd-virtualhost"

#. type: deftp
#: guix-git/doc/guix.texi:34443
msgid "This data type represents a virtualhost configuration block for the httpd service."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34445
msgid "These should be added to the extra-config for the httpd-service."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34454
#, no-wrap
msgid ""
"(simple-service 'www.example.com-server httpd-service-type\n"
"                (list\n"
"                  (httpd-virtualhost\n"
"                    \"*:80\"\n"
"                    (list (string-join '(\"ServerName www.example.com\"\n"
"                                          \"DocumentRoot /srv/http/www.example.com\")\n"
"                                       \"\\n\")))))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34457
#, no-wrap
msgid "addresses-and-ports"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34459
msgid "The addresses and ports for the @code{VirtualHost} directive."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34460
#, no-wrap
msgid "contents"
msgstr "contents"

#. type: table
#: guix-git/doc/guix.texi:34463
msgid "The contents of the @code{VirtualHost} directive, this should be a list of strings and G-expressions."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34468
#, no-wrap
msgid "NGINX"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34470
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "nginx-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:34473
msgid "Service type for the @uref{https://nginx.org/,NGinx} web server.  The value for this service type is a @code{<nginx-configuration>} record."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34483 guix-git/doc/guix.texi:34559
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"           (server-blocks\n"
"             (list (nginx-server-configuration\n"
"                     (server-name '(\"www.example.com\"))\n"
"                     (root \"/srv/http/www.example.com\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34488
msgid "In addition to adding server blocks to the service configuration directly, this service can be extended by other services to add server blocks, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34494
#, no-wrap
msgid ""
"(simple-service 'my-extra-server nginx-service-type\n"
"                (list (nginx-server-configuration\n"
"                        (root \"/srv/http/extra-website\")\n"
"                        (try-files (list \"$uri\" \"$uri/index.html\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34505
msgid "At startup, @command{nginx} has not yet read its configuration file, so it uses a default file to log error messages.  If it fails to load its configuration file, that is where error messages are logged.  After the configuration file is loaded, the default error log file changes as per configuration.  In our case, startup error messages can be found in @file{/var/run/nginx/logs/error.log}, and after configuration in @file{/var/log/nginx/error.log}.  The second location can be changed with the @var{log-directory} configuration option."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34506
#, no-wrap
msgid "{Data Type} nginx-configuration"
msgstr "{Tipo de dados} nginx-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34510
msgid "This data type represents the configuration for NGinx.  Some configuration can be done through this and the other provided record types, or alternatively, a config file can be provided."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34512
#, no-wrap
msgid "@code{nginx} (default: @code{nginx})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34514
msgid "The nginx package to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34518
msgid "This is a list of symbols naming Shepherd services the nginx service will depend on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34522
msgid "This is useful if you would like @command{nginx} to be started after a back-end web server or a logging service such as Anonip has been started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34523
#, no-wrap
msgid "@code{log-directory} (default: @code{\"/var/log/nginx\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34525
msgid "The directory to which NGinx will write log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34526
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{log-format} (default: @code{'combined}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34530
msgid "Logging format for the access log. Nginx defaults to the httpd-like format named @code{'combined}.  Other formats can be defined using @code{log-formats}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34531
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{log-formats} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:34534
msgid "A list of additional @dfn{log formats} to define, the elements should be of type @code{<nginx-log-format-configuration>}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34535
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log-level} (default: @code{'error}) (type: symbol)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34539
msgid "Logging level for the error log, which can be any of the following values: @code{'debug}, @code{'info}, @code{'notice}, @code{'warn}, @code{'error}, @code{'crit}, @code{'alert}, or @code{'emerg}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34540
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/nginx\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34543
msgid "The directory in which NGinx will create a pid file, and write temporary files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34544
#, no-wrap
msgid "@code{server-blocks} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34548
msgid "A list of @dfn{server blocks} to create in the generated configuration file, the elements should be of type @code{<nginx-server-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34552
msgid "The following example would setup NGinx to serve @code{www.example.com} from the @code{/srv/http/www.example.com} directory, without using HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34561
#, no-wrap
msgid "@code{upstream-blocks} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34565
msgid "A list of @dfn{upstream blocks} to create in the generated configuration file, the elements should be of type @code{<nginx-upstream-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34572
msgid "Configuring upstreams through the @code{upstream-blocks} can be useful when combined with @code{locations} in the @code{<nginx-server-configuration>} records.  The following example creates a server configuration with one location configuration, that will proxy requests to a upstream configuration, which will handle requests with two servers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34591
#, no-wrap
msgid ""
"(service\n"
"  nginx-service-type\n"
"  (nginx-configuration\n"
"    (server-blocks\n"
"      (list (nginx-server-configuration\n"
"              (server-name '(\"www.example.com\"))\n"
"              (root \"/srv/http/www.example.com\")\n"
"              (locations\n"
"                (list\n"
"                  (nginx-location-configuration\n"
"                  (uri \"/path1\")\n"
"                  (body '(\"proxy_pass http://server-proxy;\"))))))))\n"
"    (upstream-blocks\n"
"      (list (nginx-upstream-configuration\n"
"              (name \"server-proxy\")\n"
"              (servers (list \"server1.example.com\"\n"
"                             \"server2.example.com\")))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34599
msgid "If a configuration @var{file} is provided, this will be used, rather than generating a configuration file from the provided @code{log-directory}, @code{run-directory}, @code{server-blocks} and @code{upstream-blocks}.  For proper operation, these arguments should match what is in @var{file} to ensure that the directories are created when the service is activated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34603
msgid "This can be useful if you have an existing configuration file, or it's not possible to do what is required through the other parts of the nginx-configuration record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34604
#, no-wrap
msgid "@code{server-names-hash-bucket-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34607
msgid "Bucket size for the server names hash tables, defaults to @code{#f} to use the size of the processors cache line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34608
#, no-wrap
msgid "@code{server-names-hash-bucket-max-size} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34610
msgid "Maximum bucket size for the server names hash tables."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34614
msgid "List of nginx dynamic modules to load.  This should be a list of file names of loadable modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34622
#, no-wrap
msgid ""
"(modules\n"
" (list\n"
"  (file-append nginx-accept-language-module \"\\\n"
"/etc/nginx/modules/ngx_http_accept_language_module.so\")\n"
"  (file-append nginx-lua-module \"\\\n"
"/etc/nginx/modules/ngx_http_lua_module.so\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34624
#, no-wrap
msgid "@code{lua-package-path} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34627
msgid "List of nginx lua packages to load.  This should be a list of package names of loadable lua modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34634
#, no-wrap
msgid ""
"(lua-package-path (list lua-resty-core\n"
"                        lua-resty-lrucache\n"
"                        lua-resty-signal\n"
"                        lua-tablepool\n"
"                        lua-resty-shell))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34636
#, no-wrap
msgid "@code{lua-package-cpath} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34639
msgid "List of nginx lua C packages to load.  This should be a list of package names of loadable lua C modules, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34642
#, no-wrap
msgid "(lua-package-cpath (list lua-resty-signal))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34644
#, no-wrap
msgid "@code{global-directives} (default: @code{'((events . ()))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34647
msgid "Association list of global directives for the top level of the nginx configuration.  Values may themselves be association lists."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34653
#, no-wrap
msgid ""
"(global-directives\n"
" `((worker_processes . 16)\n"
"   (pcre_jit . on)\n"
"   (events . ((worker_connections . 1024)))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34661
msgid "Additional content to be appended to the @code{http} block.  Can either be a value that can be lowered into a string or a list of such values.  In the former case, it is inserted directly.  In the latter, it is prefixed with indentation and suffixed with a newline.  Nested lists are flattened into one line."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34666 guix-git/doc/guix.texi:34777
#, no-wrap
msgid ""
"(extra-content \"include /etc/nginx/custom-config.conf;\")\n"
"(extra-content `(\"include /etc/nginx/custom-config.conf;\"\n"
"                 (\"include \" ,%custom-config.conf \";\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34671
#, fuzzy, no-wrap
#| msgid "{Data Type} nginx-location-configuration"
msgid "{Data Type} nginx-log-format-configuration"
msgstr "{Tipo de dados} nginx-location-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34674
#, fuzzy
#| msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgid "Data type representing the configuration of a custom Nginx log format.  This type has the following parameters:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:34676
#, fuzzy, no-wrap
msgid "@code{name} (type: symbol)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34678
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name of the log format as a symbol."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:34679
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{escape} (default: @code{'default}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34682
msgid "The mode used to escape values of variables in the format.  The supported values are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34684
#, no-wrap
msgid "@code{'default}, to escape all characters outside of the ASCII"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:34686
msgid "printable range."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34686
#, no-wrap
msgid "@code{'json}, to escape all characters invalid in JSON strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34687
#, no-wrap
msgid "@code{'none}, to disable escaping."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34690
#, fuzzy, no-wrap
msgid "@code{format} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34692
msgid "The format as accepted by the @code{log_format} directive."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:34697
msgid "nginx-server-configuration"
msgstr "nginx-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34697
#, no-wrap
msgid "{Data Type} nginx-server-configuration"
msgstr "{Tipo de dados} nginx-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34700
msgid "Data type representing the configuration of an nginx server block.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34702
#, no-wrap
msgid "@code{listen} (default: @code{'(\"80\" \"443 ssl\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34707
msgid "Each @code{listen} directive sets the address and port for IP, or the path for a UNIX-domain socket on which the server will accept requests.  Both address and port, or only address or only port can be specified.  An address may also be a hostname, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34710
#, no-wrap
msgid "'(\"127.0.0.1:8000\" \"127.0.0.1\" \"8000\" \"*:8000\" \"localhost:8000\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34712
#, no-wrap
msgid "@code{server-name} (default: @code{(list 'default)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34715
msgid "A list of server names this server represents. @code{'default} represents the default server for connections matching no other server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34716
#, no-wrap
msgid "@code{root} (default: @code{\"/srv/http\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34718
msgid "Root of the website nginx will serve."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34719
#, no-wrap
msgid "@code{locations} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34723
msgid "A list of @dfn{nginx-location-configuration} or @dfn{nginx-named-location-configuration} records to use within this server block."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34724
#, no-wrap
msgid "@code{index} (default: @code{(list \"index.html\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34727
msgid "Index files to look for when clients ask for a directory.  If it cannot be found, Nginx will send the list of files in the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34728
#, no-wrap
msgid "@code{try-files} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34731
msgid "A list of files whose existence is checked in the specified order.  @code{nginx} will use the first file it finds to process the request."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34732
#, no-wrap
msgid "@code{ssl-certificate} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34735
msgid "Where to find the certificate for secure connections.  Set it to @code{#f} if you don't have a certificate or you don't want to use HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34736
#, no-wrap
msgid "@code{ssl-certificate-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34739
msgid "Where to find the private key for secure connections.  Set it to @code{#f} if you don't have a key or you don't want to use HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34740
#, no-wrap
msgid "@code{server-tokens?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34742
msgid "Whether the server should add its configuration to response."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34743
#, no-wrap
msgid "@code{raw-content} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34747
msgid "A list of strings or file-like objects to be appended to the server block.  Each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34751
#, no-wrap
msgid "{Data Type} nginx-upstream-configuration"
msgstr "{Tipo de dados} nginx-upstream-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34754
msgid "Data type representing the configuration of an nginx @code{upstream} block.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34758
msgid "Name for this group of servers."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34759
#, no-wrap
msgid "servers"
msgstr "servers"

#. type: table
#: guix-git/doc/guix.texi:34766
msgid "Specify the addresses of the servers in the group.  The address can be specified as a IP address (e.g.@: @samp{127.0.0.1}), domain name (e.g.@: @samp{backend1.example.com}) or a path to a UNIX socket using the prefix @samp{unix:}.  For addresses using an IP address or domain name, the default port is 80, and a different port can be specified explicitly."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34767
#, fuzzy, no-wrap
#| msgid "contents"
msgid "extra-content"
msgstr "conteúdo"

#. type: table
#: guix-git/doc/guix.texi:34772
msgid "Additional content to be appended to the upstream block.  Can be a string or file-like object or list of thereof.  In case of list, each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34782
#, no-wrap
msgid "{Data Type} nginx-location-configuration"
msgstr "{Tipo de dados} nginx-location-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34785
msgid "Data type representing the configuration of an nginx @code{location} block.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34789
msgid "URI which this location block matches."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:34791
msgid "nginx-location-configuration body"
msgstr "nginx-location-configuration body"

#. type: code{#1}
#: guix-git/doc/guix.texi:34791 guix-git/doc/guix.texi:34814
#, no-wrap
msgid "body"
msgstr "body"

#. type: table
#: guix-git/doc/guix.texi:34795
msgid "Body of the location block, specified as a list of strings or file-like objects.  Each item is prefixed with indentation and suffixed with a new line.  Nested lists are flattened."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34800
msgid "For example, to pass requests to a upstream server group defined using an @code{nginx-upstream-configuration} block, the following directive would be specified in the body @samp{(list \"proxy_pass http://upstream-name;\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34804
#, no-wrap
msgid "{Data Type} nginx-named-location-configuration"
msgstr "{Tipo de dados} nginx-named-location-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34809
msgid "Data type representing the configuration of an nginx named location block.  Named location blocks are used for request redirection, and not used for regular request processing.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34813
msgid "Name to identify this location block."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34819
msgid "@xref{nginx-location-configuration body}, as the body for named location blocks can be used in a similar way to the @code{nginx-location-configuration body}.  One restriction is that the body of a named location block cannot contain location blocks."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:34823
#, no-wrap
msgid "Varnish Cache"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34824
#, no-wrap
msgid "Varnish"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34829
msgid "Varnish is a fast cache server that sits in between web applications and end users.  It proxies requests from clients and caches the accessed URLs such that multiple requests for the same resource only creates one request to the back-end."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34830
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "varnish-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:34832
msgid "Service type for the Varnish daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34834
#, no-wrap
msgid "{Data Type} varnish-configuration"
msgstr "{Tipo de dados} varnish-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34837
msgid "Data type representing the @code{varnish} service configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34839
#, no-wrap
msgid "@code{package} (default: @code{varnish})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34841
msgid "The Varnish package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34842
#, no-wrap
msgid "@code{name} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34847
msgid "A name for this Varnish instance.  Varnish will create a directory in @file{/var/varnish/} with this name and keep temporary files there.  If the name starts with a forward slash, it is interpreted as an absolute directory name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34850
msgid "Pass the @code{-n} argument to other Varnish programs to connect to the named instance, e.g.@: @command{varnishncsa -n default}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34851
#, no-wrap
msgid "@code{backend} (default: @code{\"localhost:8080\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34853
msgid "The backend to use.  This option has no effect if @code{vcl} is set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34854
#, no-wrap
msgid "@code{vcl} (default: #f)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34859
msgid "The @dfn{VCL} (Varnish Configuration Language) program to run.  If this is @code{#f}, Varnish will proxy @code{backend} using the default configuration.  Otherwise this must be a file-like object with valid VCL syntax."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34863
msgid "For example, to mirror @url{https://www.gnu.org,www.gnu.org} with VCL you can do something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34869
#, no-wrap
msgid ""
"(define %gnu-mirror\n"
"  (plain-file \"gnu.vcl\"\n"
"              \"vcl 4.1;\n"
"backend gnu @{ .host = \\\"www.gnu.org\\\"; @}\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34877
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (service varnish-service-type\n"
"                           (varnish-configuration\n"
"                            (listen '(\":80\"))\n"
"                            (vcl %gnu-mirror)))\n"
"                  %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34881
msgid "The configuration of an already running Varnish instance can be inspected and changed using the @command{varnishadm} program."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34885
msgid "Consult the @url{https://varnish-cache.org/docs/,Varnish User Guide} and @url{https://book.varnish-software.com/4.0/,Varnish Book} for comprehensive documentation on Varnish and its configuration language."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34886
#, no-wrap
msgid "@code{listen} (default: @code{'(\"localhost:80\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34888
msgid "List of addresses Varnish will listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34889
#, no-wrap
msgid "@code{storage} (default: @code{'(\"malloc,128m\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34891
msgid "List of storage backends that will be available in VCL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34892
#, no-wrap
msgid "@code{parameters} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34894
msgid "List of run-time parameters in the form @code{'((\"parameter\" . \"value\"))}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34897
msgid "Additional arguments to pass to the @command{varnishd} process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34901 guix-git/doc/guix.texi:34902
#, fuzzy, no-wrap
#| msgid "search"
msgid "Whoogle Search"
msgstr "pesquisa"

#. type: Plain text
#: guix-git/doc/guix.texi:34909
msgid "@uref{https://github.com/benbusby/whoogle-search, Whoogle Search} is a self-hosted, ad-free, privacy-respecting meta search engine that collects and displays Google search results.  By default, you can configure it by adding this line to the @code{services} field of your operating system declaration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34912
#, fuzzy, no-wrap
msgid "(service whoogle-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:34917
msgid "As a result, Whoogle Search runs as local Web server, which you can access by opening @indicateurl{http://localhost:5000} in your browser.  The configuration reference is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34918
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "whoogle-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:34921
msgid "Service type for Whoogle Search.  Its value must be a @code{whoogle-configuration} record---see below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34923
#, no-wrap
msgid "{Data Type} whoogle-configuration"
msgstr "{Tipo de dados} whoogle-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34925
#, fuzzy
msgid "Data type representing Whoogle Search service configuration."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:34927
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{whoogle-search})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34929
#, fuzzy
msgid "The Whoogle Search package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:34930 guix-git/doc/guix.texi:43099
#: guix-git/doc/guix.texi:43196
#, no-wrap
msgid "@code{host} (default: @code{\"127.0.0.1\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34932
msgid "The host address to run Whoogle on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34933 guix-git/doc/guix.texi:35487
#, no-wrap
msgid "@code{port} (default: @code{5000})"
msgstr "@code{port} (padrão: @code{5000})"

#. type: table
#: guix-git/doc/guix.texi:34935
msgid "The port where Whoogle will be exposed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34936 guix-git/doc/guix.texi:44081
#: guix-git/doc/guix.texi:44134
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{environment-variables} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:34941
msgid "A list of strings with the environment variables to configure Whoogle.  You can consult @uref{https://github.com/benbusby/whoogle-search/blob/main/whoogle.template.env, its environment variables template} for the list of available options."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:34945 guix-git/doc/guix.texi:34946
#, no-wrap
msgid "Patchwork"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34949
msgid "Patchwork is a patch tracking system.  It can collect patches sent to a mailing list, and display them in a web interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:34950
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "patchwork-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:34952
msgid "Service type for Patchwork."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34956
msgid "The following example is an example of a minimal service for Patchwork, for the @code{patchwork.example.com} domain."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:34976
#, no-wrap
msgid ""
"(service patchwork-service-type\n"
"         (patchwork-configuration\n"
"          (domain \"patchwork.example.com\")\n"
"          (settings-module\n"
"           (patchwork-settings-module\n"
"            (allowed-hosts (list domain))\n"
"            (default-from-email \"patchwork@@patchwork.example.com\")))\n"
"          (getmail-retriever-config\n"
"           (getmail-retriever-configuration\n"
"            (type \"SimpleIMAPSSLRetriever\")\n"
"            (server \"imap.example.com\")\n"
"            (port 993)\n"
"            (username \"patchwork\")\n"
"            (password-command\n"
"             (list (file-append coreutils \"/bin/cat\")\n"
"                   \"/etc/getmail-patchwork-imap-password\"))\n"
"            (extra-parameters\n"
"            '((mailboxes . (\"Patches\"))))))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34982
msgid "There are three records for configuring the Patchwork service.  The @code{<patchwork-configuration>} relates to the configuration for Patchwork within the HTTPD service."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34986
msgid "The @code{settings-module} field within the @code{<patchwork-configuration>} record can be populated with the @code{<patchwork-settings-module>} record, which describes a settings module that is generated within the Guix store."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:34990
msgid "For the @code{database-configuration} field within the @code{<patchwork-settings-module>}, the @code{<patchwork-database-configuration>} must be used."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:34991
#, no-wrap
msgid "{Data Type} patchwork-configuration"
msgstr "{Tipo de dados} patchwork-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:34994
msgid "Data type representing the Patchwork service configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:34996
#, no-wrap
msgid "@code{patchwork} (default: @code{patchwork})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:34998
msgid "The Patchwork package to use."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:34999
#, no-wrap
msgid "domain"
msgstr "domain"

#. type: table
#: guix-git/doc/guix.texi:35002
msgid "The domain to use for Patchwork, this is used in the HTTPD service virtual host."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35003
#, no-wrap
msgid "settings-module"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35009
msgid "The settings module to use for Patchwork.  As a Django application, Patchwork is configured with a Python module containing the settings.  This can either be an instance of the @code{<patchwork-settings-module>} record, any other record that represents the settings in the store, or a directory outside of the store."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35010
#, no-wrap
msgid "@code{static-path}  (default: @code{\"/static/\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35012
msgid "The path under which the HTTPD service should serve the static files."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35013
#, no-wrap
msgid "getmail-retriever-config"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35017
msgid "The getmail-retriever-configuration record value to use with Patchwork.  Getmail will be configured with this value, the messages will be delivered to Patchwork."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35021
#, no-wrap
msgid "{Data Type} patchwork-settings-module"
msgstr "{Tipo de dados} patchwork-settings-module"

#. type: deftp
#: guix-git/doc/guix.texi:35026
msgid "Data type representing a settings module for Patchwork.  Some of these settings relate directly to Patchwork, but others relate to Django, the web framework used by Patchwork, or the Django Rest Framework library.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35028
#, no-wrap
msgid "@code{database-configuration} (default: @code{(patchwork-database-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35031
msgid "The database connection settings used for Patchwork.  See the @code{<patchwork-database-configuration>} record type for more information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35032
#, no-wrap
msgid "@code{secret-key-file} (default: @code{\"/etc/patchwork/django-secret-key\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35035
msgid "Patchwork, as a Django web application uses a secret key for cryptographically signing values.  This file should contain a unique unpredictable value."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35038
msgid "If this file does not exist, it will be created and populated with a random value by the patchwork-setup shepherd service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35040
msgid "This setting relates to Django."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35041
#, no-wrap
msgid "allowed-hosts"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35044
msgid "A list of valid hosts for this Patchwork service.  This should at least include the domain specified in the @code{<patchwork-configuration>} record."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35046 guix-git/doc/guix.texi:35060
#: guix-git/doc/guix.texi:35066 guix-git/doc/guix.texi:35072
msgid "This is a Django setting."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35047
#, no-wrap
msgid "default-from-email"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35049
msgid "The email address from which Patchwork should send email by default."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35051 guix-git/doc/guix.texi:35077
#: guix-git/doc/guix.texi:35082 guix-git/doc/guix.texi:35087
msgid "This is a Patchwork setting."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35052
#, no-wrap
msgid "@code{static-url} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35055
msgid "The URL to use when serving static assets.  It can be part of a URL, or a full URL, but must end in a @code{/}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35058
msgid "If the default value is used, the @code{static-path} value from the @code{<patchwork-configuration>} record will be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35061
#, no-wrap
msgid "@code{admins} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35064
msgid "Email addresses to send the details of errors that occur.  Each value should be a list containing two elements, the name and then the email address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35070
msgid "Whether to run Patchwork in debug mode.  If set to @code{#t}, detailed error messages will be shown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35073
#, no-wrap
msgid "@code{enable-rest-api?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35075
msgid "Whether to enable the Patchwork REST API."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35078
#, no-wrap
msgid "@code{enable-xmlrpc?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35080
msgid "Whether to enable the XML RPC API."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35083
#, no-wrap
msgid "@code{force-https-links?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35085
msgid "Whether to use HTTPS links on Patchwork pages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35090
msgid "Extra code to place at the end of the Patchwork settings module."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35094
#, no-wrap
msgid "{Data Type} patchwork-database-configuration"
msgstr "{Tipo de dados} patchwork-database-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35096
msgid "Data type representing the database configuration for Patchwork."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35098
#, no-wrap
msgid "@code{engine} (default: @code{\"django.db.backends.postgresql_psycopg2\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35100
msgid "The database engine to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35101
#, no-wrap
msgid "@code{name} (default: @code{\"patchwork\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35103
msgid "The name of the database to use."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35106
msgid "The user to connect to the database as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35107
#, no-wrap
msgid "@code{password} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35109
msgid "The password to use when connecting to the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35110
#, no-wrap
msgid "@code{host} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35112
msgid "The host to make the database connection to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35113
#, no-wrap
msgid "@code{port} (default: @code{\"\"})"
msgstr "@code{port} (padrão: @code{\"\"})"

#. type: table
#: guix-git/doc/guix.texi:35115
msgid "The port on which to connect to the database."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35119
#, no-wrap
msgid "Mumi"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35121
#, no-wrap
msgid "Mumi, Debbugs Web interface"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35122
#, no-wrap
msgid "Debbugs, Mumi Web interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35127
msgid "@uref{https://codeberg.org/guix/mumi, Mumi} is a Web interface to the Debbugs bug tracker, by default for @uref{https://bugs.gnu.org, the GNU instance}.  Mumi is a Web server, but it also fetches and indexes mail retrieved from Debbugs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35128
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mumi-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35130
msgid "This is the service type for Mumi."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35132
#, no-wrap
msgid "{Data Type} mumi-configuration"
msgstr "{Tipo de dados} mumi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35135
msgid "Data type representing the Mumi service configuration.  This type has the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35137
#, no-wrap
msgid "@code{mumi} (default: @code{mumi})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35139
msgid "The Mumi package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35140
#, no-wrap
msgid "@code{mailer?} (default: @code{#true})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35142
msgid "Whether to enable or disable the mailer component."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35143
#, no-wrap
msgid "sender"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35145
msgid "The email address used as the sender for comments."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35146
#, no-wrap
msgid "smtp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35151
msgid "A URI to configure the SMTP settings for Mailutils.  This could be something like @code{sendmail:///path/to/bin/msmtp} or any other URI supported by Mailutils.  @xref{SMTP Mailboxes, SMTP Mailboxes,, mailutils, GNU@tie{}Mailutils}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35155
msgid "List of @code{<mumi-package-configuration>} objects representing packages configured on Mumi."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35159
#, fuzzy, no-wrap
#| msgid "{Data Type} mumi-configuration"
msgid "{Data Type} mumi-package-configuration"
msgstr "{Tipo de dados} mumi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35162
#, fuzzy
#| msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgid "Data type representing the configuration of a package on Mumi.  This type has the following fields:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: table
#: guix-git/doc/guix.texi:35166
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Name of the package."
msgstr "O nome de host da máquina remota."

#. type: code{#1}
#: guix-git/doc/guix.texi:35167
#, fuzzy, no-wrap
#| msgid "name"
msgid "display-name"
msgstr "name"

#. type: table
#: guix-git/doc/guix.texi:35169
msgid "Display name used for this package in the web interface."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35170
#, fuzzy, no-wrap
#| msgid "packages"
msgid "debbugs-packages"
msgstr "pacotes"

#. type: table
#: guix-git/doc/guix.texi:35172
msgid "List of Debbugs packages this package refers to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35173
#, no-wrap
msgid "bug-email-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35175
msgid "Email address to send bug reports to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35176
#, no-wrap
msgid "patch-email-address"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35179
msgid "Email address to send patches to, if that is different from @code{bug-email-address}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35180
#, fuzzy, no-wrap
#| msgid "files"
msgid "file-tags"
msgstr "files"

#. type: table
#: guix-git/doc/guix.texi:35185
msgid "Association list mapping tags to filename regular expressions. Keys are tag names, and values are lists of regular expressions.  For each entry of the association list, the tag is applied if a filename referred to in a patch matches any of the regular expressions."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35190
#, no-wrap
msgid "FastCGI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35191
#, no-wrap
msgid "fastcgi"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35192
#, no-wrap
msgid "fcgiwrap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35199
msgid "FastCGI is an interface between the front-end and the back-end of a web service.  It is a somewhat legacy facility; new web services should generally just talk HTTP between the front-end and the back-end.  However there are a number of back-end services such as PHP or the optimized HTTP Git repository access that use FastCGI, so we have support for it in Guix."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35206
msgid "To use FastCGI, you configure the front-end web server (e.g., nginx) to dispatch some subset of its requests to the fastcgi backend, which listens on a local TCP or UNIX socket.  There is an intermediary @code{fcgiwrap} program that sits between the actual backend process and the web server.  The front-end indicates which backend program to run, passing that information to the @code{fcgiwrap} process."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35207
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "fcgiwrap-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35209
msgid "A service type for the @code{fcgiwrap} FastCGI proxy."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35211
#, no-wrap
msgid "{Data Type} fcgiwrap-configuration"
msgstr "{Tipo de dados} fcgiwrap-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35214
msgid "Data type representing the configuration of the @code{fcgiwrap} service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35215
#, no-wrap
msgid "@code{package} (default: @code{fcgiwrap})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35217
msgid "The fcgiwrap package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35218
#, no-wrap
msgid "@code{socket} (default: @code{tcp:127.0.0.1:9000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35224
msgid "The socket on which the @code{fcgiwrap} process should listen, as a string.  Valid @var{socket} values include @code{unix:@var{/path/to/unix/socket}}, @code{tcp:@var{dot.ted.qu.ad}:@var{port}} and @code{tcp6:[@var{ipv6_addr}]:port}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35225
#, no-wrap
msgid "@code{user} (default: @code{fcgiwrap})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:35226
#, no-wrap
msgid "@code{group} (default: @code{fcgiwrap})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35231
msgid "The user and group names, as strings, under which to run the @code{fcgiwrap} process.  The @code{fastcgi} service will ensure that if the user asks for the specific user or group names @code{fcgiwrap} that the corresponding user and/or group is present on the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35238
msgid "It is possible to configure a FastCGI-backed web service to pass HTTP authentication information from the front-end to the back-end, and to allow @code{fcgiwrap} to run the back-end process as a corresponding local user.  To enable this capability on the back-end, run @code{fcgiwrap} as the @code{root} user and group.  Note that this capability also has to be configured on the front-end as well."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35242
#, no-wrap
msgid "PHP-FPM"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35243
#, no-wrap
msgid "php-fpm"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35246
msgid "PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35248
msgid "These features include:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35249
#, no-wrap
msgid "Adaptive process spawning"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35250
#, no-wrap
msgid "Basic statistics (similar to Apache's mod_status)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35251
#, no-wrap
msgid "Advanced process management with graceful stop/start"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35252
#, no-wrap
msgid "Ability to start workers with different uid/gid/chroot/environment"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:35254
msgid "and different php.ini (replaces safe_mode)"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35254
#, no-wrap
msgid "Stdout & stderr logging"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35255
#, no-wrap
msgid "Emergency restart in case of accidental opcode cache destruction"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35256
#, no-wrap
msgid "Accelerated upload support"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35257
#, no-wrap
msgid "Support for a \"slowlog\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35258
#, no-wrap
msgid "Enhancements to FastCGI, such as fastcgi_finish_request() -"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:35261
msgid "a special function to finish request & flush all data while continuing to do something time-consuming (video converting, stats processing, etc.)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35263
msgid "...@: and much more."
msgstr "...@: e muito mais."

#. type: defvar
#: guix-git/doc/guix.texi:35264
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "php-fpm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35266
msgid "A Service type for @code{php-fpm}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35268
#, no-wrap
msgid "{Data Type} php-fpm-configuration"
msgstr "{Tipo de dados} php-fpm-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35270
msgid "Data Type for php-fpm service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35271
#, no-wrap
msgid "@code{php} (default: @code{php})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35273
msgid "The php package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35273
#, no-wrap
msgid "@code{socket} (default: @code{(string-append \"/var/run/php\" (version-major (package-version php)) \"-fpm.sock\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35275
msgid "The address on which to accept FastCGI requests.  Valid syntaxes are:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35276
#, no-wrap
msgid "\"ip.add.re.ss:port\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35278
msgid "Listen on a TCP socket to a specific address on a specific port."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35278
#, no-wrap
msgid "\"port\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35280
msgid "Listen on a TCP socket to all addresses on a specific port."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35280
#, no-wrap
msgid "\"/path/to/unix/socket\""
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35282
msgid "Listen on a unix socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35284
#, no-wrap
msgid "@code{user} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35286
msgid "User who will own the php worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35286
#, no-wrap
msgid "@code{group} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35288
msgid "Group of the worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35288
#, no-wrap
msgid "@code{socket-user} (default: @code{php-fpm})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35290
msgid "User who can speak to the php-fpm socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35290
#, no-wrap
msgid "@code{socket-group} (default: @code{nginx})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35292
msgid "Group that can speak to the php-fpm socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35292
#, no-wrap
msgid "@code{pid-file} (default: @code{(string-append \"/var/run/php\" (version-major (package-version php)) \"-fpm.pid\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35295
msgid "The process id of the php-fpm process is written to this file once the service has started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35295
#, no-wrap
msgid "@code{log-file} (default: @code{(string-append \"/var/log/php\" (version-major (package-version php)) \"-fpm.log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35297
msgid "Log for the php-fpm master process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35297
#, no-wrap
msgid "@code{process-manager} (default: @code{(php-fpm-dynamic-process-manager-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35300
msgid "Detailed settings for the php-fpm process manager.  Must be one of:"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35301
#, no-wrap
msgid "<php-fpm-dynamic-process-manager-configuration>"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35302
#, no-wrap
msgid "<php-fpm-static-process-manager-configuration>"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:35303
#, no-wrap
msgid "<php-fpm-on-demand-process-manager-configuration>"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35305
#, no-wrap
msgid "@code{display-errors} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35310
msgid "Determines whether php errors and warning should be sent to clients and displayed in their browsers.  This is useful for local php development, but a security risk for public sites, as error messages can reveal passwords and personal data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35310
#, no-wrap
msgid "@code{timezone} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35312
msgid "Specifies @code{php_admin_value[date.timezone]} parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35312
#, no-wrap
msgid "@code{workers-logfile} (default @code{(string-append \"/var/log/php\" (version-major (package-version php)) \"-fpm.www.log\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35315
msgid "This file will log the @code{stderr} outputs of php worker processes.  Can be set to @code{#f} to disable logging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35315
#, no-wrap
msgid "@code{file} (default @code{#f})"
msgstr "@code{file} (padrão @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35318
msgid "An optional override of the whole configuration.  You can use the @code{mixed-text-file} function or an absolute filepath for it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35318
#, no-wrap
msgid "@code{php-ini-file} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35322
msgid "An optional override of the default php settings.  It may be any ``file-like'' object (@pxref{G-Expressions, file-like objects}).  You can use the @code{mixed-text-file} function or an absolute filepath for it."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35326
msgid "For local development it is useful to set a higher timeout and memory limit for spawned php processes.  This be accomplished with the following operating system configuration snippet:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35331
#, no-wrap
msgid ""
"(define %local-php-ini\n"
"  (plain-file \"php.ini\"\n"
"              \"memory_limit = 2G\n"
"max_execution_time = 1800\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35338
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (cons (service php-fpm-service-type\n"
"                           (php-fpm-configuration\n"
"                            (php-ini-file %local-php-ini)))\n"
"                  %base-services)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35343
msgid "Consult the @url{https://www.php.net/manual/en/ini.core.php,core php.ini directives} for comprehensive documentation on the acceptable @file{php.ini} directives."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35346
#, no-wrap
msgid "{Data type} php-fpm-dynamic-process-manager-configuration"
msgstr "{Tipo de dados} php-fpm-dynamic-process-manager-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35350
msgid "Data Type for the @code{dynamic} php-fpm process manager.  With the @code{dynamic} process manager, spare worker processes are kept around based on its configured limits."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35351 guix-git/doc/guix.texi:35367
#: guix-git/doc/guix.texi:35377
#, no-wrap
msgid "@code{max-children} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35353 guix-git/doc/guix.texi:35369
#: guix-git/doc/guix.texi:35379
msgid "Maximum of worker processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35353
#, no-wrap
msgid "@code{start-servers} (default: @code{2})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35355
msgid "How many worker processes should be started on start-up."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35355
#, no-wrap
msgid "@code{min-spare-servers} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35357
msgid "How many spare worker processes should be kept around at minimum."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35357
#, no-wrap
msgid "@code{max-spare-servers} (default: @code{3})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35359
msgid "How many spare worker processes should be kept around at maximum."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35362
#, no-wrap
msgid "{Data type} php-fpm-static-process-manager-configuration"
msgstr "{Tipo de dados} php-fpm-static-process-manager-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35366
msgid "Data Type for the @code{static} php-fpm process manager.  With the @code{static} process manager, an unchanging number of worker processes are created."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35372
#, no-wrap
msgid "{Data type} php-fpm-on-demand-process-manager-configuration"
msgstr "{Tipo de dados} php-fpm-on-demand-process-manager-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35376
msgid "Data Type for the @code{on-demand} php-fpm process manager.  With the @code{on-demand} process manager, worker processes are only created as requests arrive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35379
#, no-wrap
msgid "@code{process-idle-timeout} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35381
msgid "The time in seconds after which a process with no requests is killed."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35385
#, no-wrap
msgid "{Procedure} nginx-php-location [#:nginx-package nginx] @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35389
msgid "[socket (string-append \"/var/run/php\" @ (version-major (package-version php)) \"-fpm.sock\")] A helper function to quickly add php to an @code{nginx-server-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35392
msgid "A simple services setup for nginx with php can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35405
#, no-wrap
msgid ""
"(services (cons* (service dhcp-client-service-type)\n"
"                 (service php-fpm-service-type)\n"
"                 (service nginx-service-type\n"
"                          (nginx-server-configuration\n"
"                           (server-name '(\"example.com\"))\n"
"                           (root \"/srv/http/\")\n"
"                           (locations\n"
"                            (list (nginx-php-location)))\n"
"                           (listen '(\"80\"))\n"
"                           (ssl-certificate #f)\n"
"                           (ssl-certificate-key #f)))\n"
"                 %base-services))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35407
#, no-wrap
msgid "cat-avatar-generator"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35411
msgid "The cat avatar generator is a simple service to demonstrate the use of php-fpm in @code{Nginx}.  It is used to generate cat avatar from a seed, for instance the hash of a user's email address."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35412
#, no-wrap
msgid "{Procedure} cat-avatar-generator-service @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:35420
msgid "[#:cache-dir \"/var/cache/cat-avatar-generator\"] @ [#:package cat-avatar-generator] @ [#:configuration (nginx-server-configuration)] Returns an nginx-server-configuration that inherits @code{configuration}.  It extends the nginx configuration to add a server block that serves @code{package}, a version of cat-avatar-generator.  During execution, cat-avatar-generator will be able to use @code{cache-dir} as its cache directory."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35423
msgid "A simple setup for cat-avatar-generator can look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35430
#, no-wrap
msgid ""
"(services (cons* (cat-avatar-generator-service\n"
"                  #:configuration\n"
"                  (nginx-server-configuration\n"
"                    (server-name '(\"example.com\"))))\n"
"                 ...\n"
"                 %base-services))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35432
#, no-wrap
msgid "Hpcguix-web"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35434
#, no-wrap
msgid "hpcguix-web"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35439
msgid "The @uref{https://github.com/UMCUGenetics/hpcguix-web/, hpcguix-web} program is a customizable web interface to browse Guix packages, initially designed for users of high-performance computing (HPC)  clusters."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35440
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hpcguix-web-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35442
msgid "The service type for @code{hpcguix-web}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35444
#, no-wrap
msgid "{Data Type} hpcguix-web-configuration"
msgstr "{Tipo de dados} hpcguix-web-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35446
msgid "Data type for the hpcguix-web service configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35448
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{specs} (default: @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35452
msgid "Either @code{#f} or a gexp (@pxref{G-Expressions}) specifying the hpcguix-web service configuration as an @code{hpcguix-web-configuration} record.  The main fields of that record type are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35454
#, no-wrap
msgid "@code{title-prefix} (default: @code{\"hpcguix | \"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35456
msgid "The page title prefix."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35457
#, no-wrap
msgid "@code{guix-command} (default: @code{\"guix\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35459
msgid "The @command{guix} command to use in examples that appear on HTML pages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35460
#, no-wrap
msgid "@code{package-filter-proc} (default: @code{(const #t)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35462
msgid "A procedure specifying how to filter packages that are displayed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35463
#, no-wrap
msgid "@code{package-page-extension-proc} (default: @code{(const '())})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35465
msgid "Extension package for @code{hpcguix-web}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35466
#, no-wrap
msgid "@code{menu} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35468
msgid "Additional entry in page @code{menu}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35469
#, no-wrap
msgid "@code{channels} (default: @code{%default-channels})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35471
msgid "List of channels from which the package list is built (@pxref{Channels})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35472
#, no-wrap
msgid "@code{package-list-expiration} (default: @code{(* 12 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35475
msgid "The expiration time, in seconds, after which the package list is rebuilt from the latest instances of the given channels."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35480
msgid "See the hpcguix-web repository for a @uref{https://github.com/UMCUGenetics/hpcguix-web/blob/master/hpcweb-configuration.scm, complete example}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35481
#, no-wrap
msgid "@code{package} (default: @code{hpcguix-web})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35483
msgid "The hpcguix-web package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35484
#, fuzzy, no-wrap
msgid "@code{address} (default: @code{\"127.0.0.1\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:35486
msgid "The IP address to listen to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35489
msgid "The port number to listen to."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35493
msgid "A typical hpcguix-web service declaration looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35501
#, no-wrap
msgid ""
"(service hpcguix-web-service-type\n"
"         (hpcguix-web-configuration\n"
"          (specs\n"
"           #~(hpcweb-configuration\n"
"              (title-prefix \"Guix-HPC - \")\n"
"              (menu '((\"/about\" \"ABOUT\")))))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:35508
msgid "The hpcguix-web service periodically updates the package list it publishes by pulling channels from Git.  To that end, it needs to access X.509 certificates so that it can authenticate Git servers when communicating over HTTPS, and it assumes that @file{/etc/ssl/certs} contains those certificates."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:35512
msgid "A certificate package, @code{nss-certs}, is provided by default as part of @code{%base-packages}.  @ref{X.509 Certificates}, for more information on X.509 certificates."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35514 guix-git/doc/guix.texi:35516
#, no-wrap
msgid "gmnisrv"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35519
msgid "The @uref{https://git.sr.ht/~sircmpwn/gmnisrv, gmnisrv} program is a simple @uref{https://gemini.circumlunar.space/, Gemini} protocol server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35520
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gmnisrv-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35523
msgid "This is the type of the gmnisrv service, whose value should be a @code{gmnisrv-configuration} object, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35528
#, no-wrap
msgid ""
"(service gmnisrv-service-type\n"
"         (gmnisrv-configuration\n"
"           (config-file (local-file \"./my-gmnisrv.ini\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35531
#, no-wrap
msgid "{Data Type} gmnisrv-configuration"
msgstr "{Tipo de dados} gmnisrv-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35533
msgid "Data type representing the configuration of gmnisrv."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35535
#, no-wrap
msgid "@code{package} (default: @var{gmnisrv})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35537
msgid "Package object of the gmnisrv server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35538
#, no-wrap
msgid "@code{config-file} (default: @code{%default-gmnisrv-config-file})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35544
msgid "File-like object of the gmnisrv configuration file to use.  The default configuration listens on port 1965 and serves files from @file{/srv/gemini}.  Certificates are stored in @file{/var/lib/gemini/certs}.  For more information, run @command{man gmnisrv} and @command{man gmnisrv.ini}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35548
#, no-wrap
msgid "Agate"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35550
#, no-wrap
msgid "agate"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35555
msgid "The @uref{gemini://qwertqwefsday.eu/agate.gmi, Agate} (@uref{https://github.com/mbrubeck/agate, GitHub page over HTTPS})  program is a simple @uref{https://gemini.circumlunar.space/, Gemini} protocol server written in Rust."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35556
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "agate-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35559
msgid "This is the type of the agate service, whose value should be an @code{agate-service-type} object, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35565
#, no-wrap
msgid ""
"(service agate-service-type\n"
"\t (agate-configuration\n"
"\t   (content \"/srv/gemini\")\n"
"\t   (certificates \"/srv/gemini-certs\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35570
msgid "The example above represents the minimal tweaking necessary to get Agate up and running.  Specifying the path to the certificate and key directory is always necessary, as the Gemini protocol requires TLS by default."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35577
msgid "If the specified @code{certificates} path is writable by Agate, and contains no valid pre-generated key and certificate, Agate will try to generate them on the first start.  In this case you should pass at least one hostname using the @code{hostnames} option.  If the specified directory is read-only, key and certificate should be pre-generated by the user."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35580
msgid "To obtain a certificate and a key in DER format, you could, for example, use OpenSSL, running commands similar to the following example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:35586
#, no-wrap
msgid ""
"openssl genpkey -out key.der -outform DER -algorithm RSA \\\n"
"    -pkeyopt rsa_keygen_bits:4096\n"
"openssl req -x509 -key key.der -outform DER -days 3650 -out cert.der \\\n"
"    -subj \"/CN=example.com\"\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35591
msgid "Of course, you'll have to replace @i{example.com} with your own domain name, and then point the Agate configuration towards the path of the directory with the generated key and certificate using the @code{certificates} option."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35594
#, no-wrap
msgid "{Data Type} agate-configuration"
msgstr "{Tipo de dados} agate-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35596
msgid "Data type representing the configuration of Agate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35598
#, no-wrap
msgid "@code{package} (default: @code{agate})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35600
msgid "The package object of the Agate server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35601
#, no-wrap
msgid "@code{content} (default: @file{\"/srv/gemini\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35603
msgid "The directory from which Agate will serve files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35604
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{certificates} (default: @file{\"/srv/gemini-certs\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35606
msgid "Root of the certificate directory. Must be filled in with a value from the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35607
#, fuzzy, no-wrap
msgid "@code{addresses} (default: @code{'(\"[::]:1965\" \"0.0.0.0:1965\")})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:35609
msgid "A list of the addresses to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35610
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{hostnames} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:35614
msgid "Virtual hosts for the Gemini server. If multiple values are specified, corresponding directory names should be present in the @code{content} directory. Optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35615
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{languages} (default: @code{#f})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35617
msgid "RFC 4646 language code(s) for text/gemini documents.  Optional."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35618
#, fuzzy, no-wrap
#| msgid "@code{nsec3?} (default: @code{#f})"
msgid "@code{only-tls13?} (default: @code{#f})"
msgstr "@code{nsec3?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35620
msgid "Set to @code{#t} to disable support for TLSv1.2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35621
#, no-wrap
msgid "@code{serve-secret?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35624
msgid "Set to @code{#t} to serve secret files (files/directories starting with a dot)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35625
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{central-configuration?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35628
msgid "Set to @code{#t} to look for the .meta configuration file in the @code{content} root directory and will ignore @code{.meta} files in other directories"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35629
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{ed25519?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35632
msgid "Set to @code{#t} to generate keys using the Ed25519 signature algorithm instead of the default ECDSA."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35633
#, fuzzy, no-wrap
#| msgid "@code{check?} (default: @code{#t})"
msgid "@code{skip-port-check?} (default: @code{#f})"
msgstr "@code{check?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:35635
msgid "Set to @code{#t} to skip URL port check even when a @code{hostname} is specified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35636
#, no-wrap
msgid "@code{log-ip?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35638
msgid "Whether or not to output IP addresses when logging."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35639
#, no-wrap
msgid "@code{user} (default: @code{\"agate\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35641
msgid "Owner of the @code{agate} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35642
#, no-wrap
msgid "@code{group} (default: @code{\"agate\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35644
msgid "Owner's group of the @code{agate} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35645
#, no-wrap
msgid "@code{log-file} (default: @file{\"/var/log/agate.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35647
msgid "The file which should store the logging output of Agate."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35654
#, no-wrap
msgid "Web"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35655
#, no-wrap
msgid "HTTP, HTTPS"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35656
#, no-wrap
msgid "Let's Encrypt"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35657
#, no-wrap
msgid "TLS certificates"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35664
msgid "The @code{(gnu services certbot)} module provides a service to automatically obtain a valid TLS certificate from the Let's Encrypt certificate authority.  These certificates can then be used to serve content securely over HTTPS or other TLS-based protocols, with the knowledge that the client will be able to verify the server's authenticity."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35676
msgid "@url{https://letsencrypt.org/, Let's Encrypt} provides the @code{certbot} tool to automate the certification process.  This tool first securely generates a key on the server.  It then makes a request to the Let's Encrypt certificate authority (CA) to sign the key.  The CA checks that the request originates from the host in question by using a challenge-response protocol, requiring the server to provide its response over HTTP@.  If that protocol completes successfully, the CA signs the key, resulting in a certificate.  That certificate is valid for a limited period of time, and therefore to continue to provide TLS services, the server needs to periodically ask the CA to renew its signature."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35683
msgid "The certbot service automates this process: the initial key generation, the initial certification request to the Let's Encrypt service, the web server challenge/response integration, writing the certificate to disk, the automated periodic renewals, and the deployment tasks associated with the renewal (e.g.@: reloading services, copying keys with different permissions)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35689
msgid "Certbot is run twice a day, at a random minute within the hour.  It won't do anything until your certificates are due for renewal or revoked, but running it regularly would give your service a chance of staying online in case a Let's Encrypt-initiated revocation happened for some reason."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35693
msgid "By using this service, you agree to the ACME Subscriber Agreement, which can be found there: @url{https://acme-v02.api.letsencrypt.org/directory}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35694
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "certbot-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35697
msgid "A service type for the @code{certbot} Let's Encrypt client.  Its value must be a @code{certbot-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35708
#, no-wrap
msgid ""
"(service certbot-service-type\n"
"         (certbot-configuration\n"
"          (email \"foo@@example.net\")\n"
"          (certificates\n"
"           (list\n"
"            (certificate-configuration\n"
"             (domains '(\"example.net\" \"www.example.net\")))\n"
"            (certificate-configuration\n"
"             (domains '(\"bar.example.net\")))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35711
msgid "See below for details about @code{certbot-configuration}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35713
#, no-wrap
msgid "{Data Type} certbot-configuration"
msgstr "{Tipo de dados} certbot-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35716
msgid "Data type representing the configuration of the @code{certbot} service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35718
#, no-wrap
msgid "@code{package} (default: @code{certbot})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35720
msgid "The certbot package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35721
#, no-wrap
msgid "@code{webroot} (default: @code{/var/www})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35724
msgid "The directory from which to serve the Let's Encrypt challenge/response files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35725
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{certificates} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:35729
msgid "A list of @code{certificates-configuration}s for which to generate certificates and request signatures.  Each certificate has a @code{name} and several @code{domains}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35730
#, no-wrap
msgid "@code{email} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35734
msgid "Optional email address used for registration and recovery contact.  Setting this is encouraged as it allows you to receive important notifications about the account and issued certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35735 guix-git/doc/guix.texi:37823
#, no-wrap
msgid "@code{server} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35738
msgid "Optional URL of ACME server.  Setting this overrides certbot's default, which is the Let's Encrypt server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35739
#, no-wrap
msgid "@code{rsa-key-size} (default: @code{2048})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35741
msgid "Size of the RSA key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35742
#, no-wrap
msgid "@code{default-location} (default: @i{see below})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35751
msgid "The default @code{nginx-location-configuration}.  Because @code{certbot} needs to be able to serve challenges and responses, it needs to be able to run a web server.  It does so by extending the @code{nginx} web service with an @code{nginx-server-configuration} listening on the @var{domains} on port 80, and which has a @code{nginx-location-configuration} for the @code{/.well-known/} URI path subspace used by Let's Encrypt.  @xref{Web Services}, for more on these nginx configuration data types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35755
msgid "Requests to other URL paths will be matched by the @code{default-location}, which if present is added to all @code{nginx-server-configuration}s."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35759
msgid "By default, the @code{default-location} will issue a redirect from @code{http://@var{domain}/...} to @code{https://@var{domain}/...}, leaving you to define what to serve on your site via @code{https}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35761
msgid "Pass @code{#f} to not issue a default location."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35764
#, no-wrap
msgid "{Data Type} certificate-configuration"
msgstr "{Tipo de dados} certificate-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35767
msgid "Data type representing the configuration of a certificate.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35769
#, no-wrap
msgid "@code{name} (default: @i{see below})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35773
msgid "This name is used by Certbot for housekeeping and in file paths; it doesn't affect the content of the certificate itself.  To see certificate names, run @code{certbot certificates}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35775
msgid "Its default is the first provided domain."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35776
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{domains} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:35779
msgid "The first domain provided will be the subject CN of the certificate, and all domains will be Subject Alternative Names on the certificate."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35780
#, no-wrap
msgid "@code{challenge} (default: @code{#f})"
msgstr "@code{challenge} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35787
msgid "The challenge type that has to be run by certbot.  If @code{#f} is specified, default to the HTTP challenge.  If a value is specified, defaults to the manual plugin (see @code{authentication-hook}, @code{cleanup-hook} and the documentation at @url{https://certbot.eff.org/docs/using.html#hooks}), and gives Let's Encrypt permission to log the public IP address of the requesting machine."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35788
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{csr} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35795
msgid "File name of Certificate Signing Request (CSR) in DER or PEM format.  If @code{#f} is specified, this argument will not be passed to certbot.  If a value is specified, certbot will use it to obtain a certificate, instead of using a self-generated CSR.  The domain-name(s) mentioned in @code{domains}, must be consistent with the domain-name(s) mentioned in CSR file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35796
#, no-wrap
msgid "@code{authentication-hook} (default: @code{#f})"
msgstr "@code{authentication-hook} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35802
msgid "Command to be run in a shell once for each certificate challenge to be answered.  For this command, the shell variable @code{$CERTBOT_DOMAIN} will contain the domain being authenticated, @code{$CERTBOT_VALIDATION} contains the validation string and @code{$CERTBOT_TOKEN} contains the file name of the resource requested when performing an HTTP-01 challenge."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35803
#, no-wrap
msgid "@code{cleanup-hook} (default: @code{#f})"
msgstr "@code{cleanup-hook} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35809
msgid "Command to be run in a shell once for each certificate challenge that have been answered by the @code{authentication-hook}.  For this command, the shell variables available in the @code{authentication-hook} script are still available, and additionally @code{$CERTBOT_AUTH_OUTPUT} will contain the standard output of the @code{authentication-hook} script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35810
#, no-wrap
msgid "@code{deploy-hook} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35818
msgid "Command to be run in a shell once for each successfully issued certificate.  For this command, the shell variable @code{$RENEWED_LINEAGE} will point to the config live subdirectory (for example, @samp{\"/etc/letsencrypt/live/example.com\"}) containing the new certificates and keys; the shell variable @code{$RENEWED_DOMAINS} will contain a space-delimited list of renewed certificate domains (for example, @samp{\"example.com www.example.com\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35819
#, fuzzy, no-wrap
#| msgid "@code{deny?} (default: @code{#f})"
msgid "@code{dry-run?} (default: @code{#f})"
msgstr "@code{deny?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35829
msgid "Communicate with the ACME server but do not update certificates nor trigger @code{deploy-hook}.  This is useful as a temporary setting to test the challenge procedure, especially the @code{authentication-hook} and @code{cleanup-hook} while working on them.  It's also a good idea to use the Let's Encrypt staging server at @url{https://acme-staging-v02.api.letsencrypt.org/directory} while testing, which allows for higher rate limits, but with which @code{certbot} will helpfully refuse to update certificates and recommend the @code{dry-run?} option.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35837
#, no-wrap
msgid ""
"(define %authentication-hook\n"
"  (program-file \"authentication-hook\"\n"
"    #~(let ((domain (getenv \"CERTBOT_DOMAIN\"))\n"
"            (token (getenv \"CERTBOT_TOKEN\")))\n"
"        (format #t \"Hey, can you authenticate ~a with ~a for me?\"\n"
"                domain token))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35841
#, no-wrap
msgid ""
"(define %cleanup-hook\n"
"  (program-file \"authentication-hook\"\n"
"    #~(display \"Bye\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35852
#, no-wrap
msgid ""
"(service certbot-service-type\n"
"         (certbot-configuration\n"
"          (server \"https://acme-staging-v02.api.letsencrypt.org/directory\")\n"
"          (certificates\n"
"           (list\n"
"            (certificate-configuration\n"
"              (dry-run? #t)\n"
"              (authentication-hook %authentication-hook)\n"
"              (cleanup-hook %cleanup-hook)\n"
"              (domains '(\"example.net\" \"www.example.net\")))))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35854
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{start-self-signed?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:35859
msgid "Whether to generate an initial self-signed certificate during system activation.  This option is particularly useful to allow @code{nginx} to start before @code{certbot} has run, because @code{certbot} relies on @code{nginx} running to perform HTTP challenges."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35866
msgid "For each @code{certificate-configuration}, the certificate is saved to @code{/etc/certs/@var{name}/fullchain.pem} and the key is saved to @code{/etc/certs/@var{name}/privkey.pem}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35868
#, no-wrap
msgid "DNS (domain name system)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:35869
#, no-wrap
msgid "domain name system (DNS)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35877
msgid "The @code{(gnu services dns)} module provides services related to the @dfn{domain name system} (DNS).  It provides a server service for hosting an @emph{authoritative} DNS server for multiple zones, slave or master.  This service uses @uref{https://www.knot-dns.cz/, Knot DNS}.  And also a caching and forwarding DNS server for the LAN, which uses @uref{http://www.thekelleys.org.uk/dnsmasq/doc.html, dnsmasq}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:35878
#, no-wrap
msgid "Knot Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:35882
msgid "An example configuration of an authoritative server for two zones, one master and one slave, is:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35889
#, no-wrap
msgid ""
"(define-zone-entries example.org.zone\n"
";; Name TTL Class Type Data\n"
"  (\"@@\"  \"\"  \"IN\"  \"A\"  \"127.0.0.1\")\n"
"  (\"@@\"  \"\"  \"IN\"  \"NS\" \"ns\")\n"
"  (\"ns\" \"\"  \"IN\"  \"A\"  \"127.0.0.1\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35896
#, no-wrap
msgid ""
"(define master-zone\n"
"  (knot-zone-configuration\n"
"    (domain \"example.org\")\n"
"    (zone (zone-file\n"
"            (origin \"example.org\")\n"
"            (entries example.org.zone)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35902
#, no-wrap
msgid ""
"(define slave-zone\n"
"  (knot-zone-configuration\n"
"    (domain \"plop.org\")\n"
"    (dnssec-policy \"default\")\n"
"    (master (list \"plop-master\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35907
#, no-wrap
msgid ""
"(define plop-master\n"
"  (knot-remote-configuration\n"
"    (id \"plop-master\")\n"
"    (address (list \"208.76.58.171\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:35916
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (cons* (service knot-service-type\n"
"                     (knot-configuration\n"
"                       (remotes (list plop-master))\n"
"                       (zones (list master-zone slave-zone))))\n"
"                   ;; ...\n"
"                   %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35918
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "knot-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:35920
msgid "This is the type for the Knot DNS server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35928
msgid "Knot DNS is an authoritative DNS server, meaning that it can serve multiple zones, that is to say domain names you would buy from a registrar.  This server is not a resolver, meaning that it can only resolve names for which it is authoritative.  This server can be configured to serve zones as a master server or a slave server as a per-zone basis.  Slave zones will get their data from masters, and will serve it as an authoritative server.  From the point of view of a resolver, there is no difference between master and slave."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:35930
msgid "The following data types are used to configure the Knot DNS server:"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35932
#, no-wrap
msgid "{Data Type} knot-key-configuration"
msgstr "{Tipo de dados} knot-key-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35935
msgid "Data type representing a key.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35937 guix-git/doc/guix.texi:35957
#: guix-git/doc/guix.texi:36072 guix-git/doc/guix.texi:36098
#: guix-git/doc/guix.texi:36133
#, no-wrap
msgid "@code{id} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35940 guix-git/doc/guix.texi:35960
msgid "An identifier for other configuration fields to refer to this key.  IDs must be unique and must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35941
#, no-wrap
msgid "@code{algorithm} (default: @code{#f})"
msgstr "@code{algorithm} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35945
msgid "The algorithm to use.  Choose between @code{#f}, @code{'hmac-md5}, @code{'hmac-sha1}, @code{'hmac-sha224}, @code{'hmac-sha256}, @code{'hmac-sha384} and @code{'hmac-sha512}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35946
#, no-wrap
msgid "@code{secret} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35948
msgid "The secret key itself."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35952
#, no-wrap
msgid "{Data Type} knot-acl-configuration"
msgstr "{Tipo de dados} knot-acl-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:35955
msgid "Data type representing an Access Control List (ACL) configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35961 guix-git/doc/guix.texi:36076
#, no-wrap
msgid "@code{address} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35965
msgid "An ordered list of IP addresses, network subnets, or network ranges represented with strings.  The query must match one of them.  Empty value means that address match is not required."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35966
#, no-wrap
msgid "@code{key} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35970
msgid "An ordered list of references to keys represented with strings.  The string must match a key ID defined in a @code{knot-key-configuration}.  No key means that a key is not require to match that ACL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35971
#, no-wrap
msgid "@code{action} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35975
msgid "An ordered list of actions that are permitted or forbidden by this ACL@.  Possible values are lists of zero or more elements from @code{'transfer}, @code{'notify} and @code{'update}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35976
#, no-wrap
msgid "@code{deny?} (default: @code{#f})"
msgstr "@code{deny?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:35979
msgid "When true, the ACL defines restrictions.  Listed actions are forbidden.  When false, listed actions are allowed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:35983
#, no-wrap
msgid "{Data Type} zone-entry"
msgstr "{Tipo de dados} zone-entry"

#. type: deftp
#: guix-git/doc/guix.texi:35986
msgid "Data type representing a record entry in a zone file.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35988
#, no-wrap
msgid "@code{name} (default: @code{\"@@\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35994
msgid "The name of the record.  @code{\"@@\"} refers to the origin of the zone.  Names are relative to the origin of the zone.  For example, in the @code{example.org} zone, @code{\"ns.example.org\"} actually refers to @code{ns.example.org.example.org}.  Names ending with a dot are absolute, which means that @code{\"ns.example.org.\"} refers to @code{ns.example.org}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35995
#, no-wrap
msgid "@code{ttl} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:35997
msgid "The Time-To-Live (TTL) of this record.  If not set, the default TTL is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:35998
#, no-wrap
msgid "@code{class} (default: @code{\"IN\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36001
msgid "The class of the record.  Knot currently supports only @code{\"IN\"} and partially @code{\"CH\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36002
#, no-wrap
msgid "@code{type} (default: @code{\"A\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36006
msgid "The type of the record.  Common types include A (IPv4 address), AAAA (IPv6 address), NS (Name Server) and MX (Mail eXchange).  Many other types are defined."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36007
#, no-wrap
msgid "@code{data} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36011
msgid "The data contained in the record.  For instance an IP address associated with an A record, or a domain name associated with an NS record.  Remember that domain names are relative to the origin unless they end with a dot."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36015
#, no-wrap
msgid "{Data Type} zone-file"
msgstr "{Tipo de dados} zone-file"

#. type: deftp
#: guix-git/doc/guix.texi:36018
msgid "Data type representing the content of a zone file.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36027
msgid "The list of entries.  The SOA record is taken care of, so you don't need to put it in the list of entries.  This list should probably contain an entry for your primary authoritative DNS server.  Other than using a list of entries directly, you can use @code{define-zone-entries} to define a object containing the list of entries more easily, that you can later pass to the @code{entries} field of the @code{zone-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36028
#, no-wrap
msgid "@code{origin} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36030
msgid "The name of your zone.  This parameter cannot be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36031
#, no-wrap
msgid "@code{ns} (default: @code{\"ns\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36036
msgid "The domain of your primary authoritative DNS server.  The name is relative to the origin, unless it ends with a dot.  It is mandatory that this primary DNS server corresponds to an NS record in the zone and that it is associated to an IP address in the list of entries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36037
#, no-wrap
msgid "@code{mail} (default: @code{\"hostmaster\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36040
msgid "An email address people can contact you at, as the owner of the zone.  This is translated as @code{<mail>@@<origin>}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36041
#, no-wrap
msgid "@code{serial} (default: @code{1})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36045
msgid "The serial number of the zone.  As this is used to keep track of changes by both slaves and resolvers, it is mandatory that it @emph{never} decreases.  Always increment it when you make a change in your zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36046
#, no-wrap
msgid "@code{refresh} (default: @code{(* 2 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36050
msgid "The frequency at which slaves will do a zone transfer.  This value is a number of seconds.  It can be computed by multiplications or with @code{(string->duration)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36051
#, no-wrap
msgid "@code{retry} (default: @code{(* 15 60)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36054
msgid "The period after which a slave will retry to contact its master when it fails to do so a first time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36055
#, no-wrap
msgid "@code{expiry} (default: @code{(* 14 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36059
msgid "Default TTL of records.  Existing records are considered correct for at most this amount of time.  After this period, resolvers will invalidate their cache and check again that it still exists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36060
#, no-wrap
msgid "@code{nx} (default: @code{3600})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36063
msgid "Default TTL of inexistent records.  This delay is usually short because you want your new domains to reach everyone quickly."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36067
#, no-wrap
msgid "{Data Type} knot-remote-configuration"
msgstr "{Tipo de dados} knot-remote-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36070
msgid "Data type representing a remote configuration.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36075
msgid "An identifier for other configuration fields to refer to this remote.  IDs must be unique and must not be empty."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36080
msgid "An ordered list of destination IP addresses.  Addresses are tried in sequence.  An optional port can be given with the @@ separator.  For instance: @code{(list \"1.2.3.4\" \"2.3.4.5@@53\")}.  Default port is 53."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36081
#, no-wrap
msgid "@code{via} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36085
msgid "An ordered list of source IP addresses.  An empty list will have Knot choose an appropriate source IP@.  An optional port can be given with the @@ separator.  The default is to choose at random."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36086
#, no-wrap
msgid "@code{key} (default: @code{#f})"
msgstr "@code{key} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36089
msgid "A reference to a key, that is a string containing the identifier of a key defined in a @code{knot-key-configuration} field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36093
#, no-wrap
msgid "{Data Type} knot-keystore-configuration"
msgstr "{Tipo de dados} knot-keystore-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36096
msgid "Data type representing a keystore to hold dnssec keys.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36100
msgid "The id of the keystore.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36101
#, no-wrap
msgid "@code{backend} (default: @code{'pem})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36103
msgid "The backend to store the keys in.  Can be @code{'pem} or @code{'pkcs11}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36104
#, no-wrap
msgid "@code{config} (default: @code{\"/var/lib/knot/keys/keys\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36108
msgid "The configuration string of the backend.  An example for the PKCS#11 is: @code{\"pkcs11:token=knot;pin-value=1234 /gnu/store/.../lib/pkcs11/libsofthsm2.so\"}.  For the pem backend, the string represents a path in the file system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36112
#, no-wrap
msgid "{Data Type} knot-policy-configuration"
msgstr "{Tipo de dados} knot-policy-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36116
msgid "Data type representing a dnssec policy.  Knot DNS is able to automatically sign your zones.  It can either generate and manage your keys automatically or use keys that you generate."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36123
msgid "Dnssec is usually implemented using two keys: a Key Signing Key (KSK) that is used to sign the second, and a Zone Signing Key (ZSK) that is used to sign the zone.  In order to be trusted, the KSK needs to be present in the parent zone (usually a top-level domain).  If your registrar supports dnssec, you will have to send them your KSK's hash so they can add a DS record in their zone.  This is not automated and need to be done each time you change your KSK."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36129
msgid "The policy also defines the lifetime of keys.  Usually, ZSK can be changed easily and use weaker cryptographic functions (they use lower parameters) in order to sign records quickly, so they are changed often.  The KSK however requires manual interaction with the registrar, so they are changed less often and use stronger parameters because they sign only one record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36131
msgid "This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36135
msgid "The id of the policy.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36136
#, no-wrap
msgid "@code{keystore} (default: @code{\"default\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36141
msgid "A reference to a keystore, that is a string containing the identifier of a keystore defined in a @code{knot-keystore-configuration} field.  The @code{\"default\"} identifier means the default keystore (a kasp database that was setup by this service)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36142
#, no-wrap
msgid "@code{manual?} (default: @code{#f})"
msgstr "@code{manual?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36144
msgid "Whether the key management is manual or automatic."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36145
#, no-wrap
msgid "@code{single-type-signing?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36147
msgid "When @code{#t}, use the Single-Type Signing Scheme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36148
#, no-wrap
msgid "@code{algorithm} (default: @code{\"ecdsap256sha256\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36150
msgid "An algorithm of signing keys and issued signatures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36151
#, no-wrap
msgid "@code{ksk-size} (default: @code{256})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36154
msgid "The length of the KSK@.  Note that this value is correct for the default algorithm, but would be unsecure for other algorithms."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36155
#, no-wrap
msgid "@code{zsk-size} (default: @code{256})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36158
msgid "The length of the ZSK@.  Note that this value is correct for the default algorithm, but would be unsecure for other algorithms."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36159
#, no-wrap
msgid "@code{dnskey-ttl} (default: @code{'default})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36162
msgid "The TTL value for DNSKEY records added into zone apex.  The special @code{'default} value means same as the zone SOA TTL."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36163
#, no-wrap
msgid "@code{zsk-lifetime} (default: @code{(* 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36165
msgid "The period between ZSK publication and the next rollover initiation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36166
#, no-wrap
msgid "@code{propagation-delay} (default: @code{(* 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36169
msgid "An extra delay added for each key rollover step.  This value should be high enough to cover propagation of data from the master server to all slaves."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36170
#, no-wrap
msgid "@code{rrsig-lifetime} (default: @code{(* 14 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36172
msgid "A validity period of newly issued signatures."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36173
#, no-wrap
msgid "@code{rrsig-refresh} (default: @code{(* 7 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36175
msgid "A period how long before a signature expiration the signature will be refreshed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36176
#, no-wrap
msgid "@code{nsec3?} (default: @code{#f})"
msgstr "@code{nsec3?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36178
msgid "When @code{#t}, NSEC3 will be used instead of NSEC."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36179
#, no-wrap
msgid "@code{nsec3-iterations} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36181
msgid "The number of additional times the hashing is performed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36182
#, no-wrap
msgid "@code{nsec3-salt-length} (default: @code{8})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36185
msgid "The length of a salt field in octets, which is appended to the original owner name before hashing."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36186
#, no-wrap
msgid "@code{nsec3-salt-lifetime} (default: @code{(* 30 24 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36188
msgid "The validity period of newly issued salt field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36192
#, no-wrap
msgid "{Data Type} knot-zone-configuration"
msgstr "{Tipo de dados} knot-zone-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36195
msgid "Data type representing a zone served by Knot.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36197
#, no-wrap
msgid "@code{domain} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36199
msgid "The domain served by this configuration.  It must not be empty."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36200
#, no-wrap
msgid "@code{file} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36203
msgid "The file where this zone is saved.  This parameter is ignored by master zones.  Empty means default location that depends on the domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36204
#, no-wrap
msgid "@code{zone} (default: @code{(zone-file)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36207
msgid "The content of the zone file.  This parameter is ignored by slave zones.  It must contain a zone-file record."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36208
#, no-wrap
msgid "@code{master} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36211
msgid "A list of master remotes.  When empty, this zone is a master.  When set, this zone is a slave.  This is a list of remotes identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36212
#, no-wrap
msgid "@code{ddns-master} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36215
msgid "The main master.  When empty, it defaults to the first master in the list of masters."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36216
#, no-wrap
msgid "@code{notify} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36218
msgid "A list of slave remote identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36219
#, no-wrap
msgid "@code{acl} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36221
msgid "A list of acl identifiers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36222
#, no-wrap
msgid "@code{semantic-checks?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36224
msgid "When set, this adds more semantic checks to the zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36225
#, no-wrap
msgid "@code{zonefile-sync} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36228
msgid "The delay between a modification in memory and on disk.  0 means immediate synchronization."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36229
#, no-wrap
msgid "@code{zonefile-load} (default: @code{#f})"
msgstr "@code{zonefile-load} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36232
msgid "The way the zone file contents are applied during zone load.  Possible values are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36234
#, no-wrap
msgid "@code{#f} for using the default value from Knot,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36235
#, no-wrap
msgid "@code{'none} for not using the zone file at all,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36236
#, no-wrap
msgid "@code{'difference} for computing the difference between already available"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36238
msgid "contents and zone contents and applying it to the current zone contents,"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36238
#, no-wrap
msgid "@code{'difference-no-serial} for the same as @code{'difference}, but"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36241
msgid "ignoring the SOA serial in the zone file, while the server takes care of it automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36241
#, no-wrap
msgid "@code{'whole} for loading zone contents from the zone file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36244
#, no-wrap
msgid "@code{journal-content} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36249
msgid "The way the journal is used to store zone and its changes.  Possible values are @code{'none} to not use it at all, @code{'changes} to store changes and @code{'all} to store contents.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36250
#, no-wrap
msgid "@code{max-journal-usage} (default: @code{#f})"
msgstr "@code{max-journal-usage} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36253
msgid "The maximum size for the journal on disk.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36254
#, no-wrap
msgid "@code{max-journal-depth} (default: @code{#f})"
msgstr "@code{max-journal-depth} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36257
msgid "The maximum size of the history.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36258
#, no-wrap
msgid "@code{max-zone-size} (default: @code{#f})"
msgstr "@code{max-zone-size} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36262
msgid "The maximum size of the zone file.  This limit is enforced for incoming transfer and updates.  @code{#f} does not set this option, so the default value from Knot is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36263
#, no-wrap
msgid "@code{dnssec-policy} (default: @code{#f})"
msgstr "@code{dnssec-policy} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36267
msgid "A reference to a @code{knot-policy-configuration} record, or the special name @code{\"default\"}.  If the value is @code{#f}, there is no dnssec signing on this zone."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36268
#, no-wrap
msgid "@code{serial-policy} (default: @code{'increment})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36270
msgid "A policy between @code{'increment} and @code{'unixtime}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36274
#, no-wrap
msgid "{Data Type} knot-configuration"
msgstr "{Tipo de dados} knot-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36277
msgid "Data type representing the Knot configuration.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36279
#, no-wrap
msgid "@code{knot} (default: @code{knot})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36281
msgid "The Knot package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36282
#, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/knot\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36284
msgid "The run directory.  This directory will be used for pid file and sockets."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36285
#, no-wrap
msgid "@code{includes} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36288
msgid "A list of strings or file-like objects denoting other files that must be included at the top of the configuration file."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36289
#, no-wrap
msgid "secrets, Knot service"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36295
msgid "This can be used to manage secrets out-of-band.  For example, secret keys may be stored in an out-of-band file not managed by Guix, and thus not visible in @file{/gnu/store}---e.g., you could store secret key configuration in @file{/etc/knot/secrets.conf} and add this file to the @code{includes} list."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36300
msgid "One can generate a secret tsig key (for nsupdate and zone transfers with the keymgr command from the knot package.  Note that the package is not automatically installed by the service.  The following example shows how to generate a new tsig key:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36304
#, no-wrap
msgid ""
"keymgr -t mysecret > /etc/knot/secrets.conf\n"
"chmod 600 /etc/knot/secrets.conf\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36310
msgid "Also note that the generated key will be named @var{mysecret}, so it is the name that needs to be used in the @var{key} field of the @code{knot-acl-configuration} record and in other places that need to refer to that key."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36312
msgid "It can also be used to add configuration not supported by this interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36313
#, no-wrap
msgid "@code{listen-v4} (default: @code{\"0.0.0.0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36315 guix-git/doc/guix.texi:36318
msgid "An ip address on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36316
#, no-wrap
msgid "@code{listen-v6} (default: @code{\"::\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36319
#, no-wrap
msgid "@code{listen-port} (default: @code{53})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36321
msgid "A port on which to listen."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36322
#, no-wrap
msgid "@code{keys} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36324
msgid "The list of knot-key-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36325
#, no-wrap
msgid "@code{acls} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36327
msgid "The list of knot-acl-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36328
#, no-wrap
msgid "@code{remotes} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36330
msgid "The list of knot-remote-configuration used by this configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36331
#, no-wrap
msgid "@code{zones} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36333
msgid "The list of knot-zone-configuration used by this configuration."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36337
#, no-wrap
msgid "Knot Resolver Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36339
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "knot-resolver-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36342
msgid "This is the type of the knot resolver service, whose value should be a @code{knot-resolver-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36352
#, no-wrap
msgid ""
"(service knot-resolver-service-type\n"
"         (knot-resolver-configuration\n"
"           (kresd-config-file (plain-file \"kresd.conf\" \"\n"
"net.listen('192.168.0.1', 5353)\n"
"user('knot-resolver', 'knot-resolver')\n"
"modules = @{ 'hints > iterate', 'stats', 'predict' @}\n"
"cache.size = 100 * MB\n"
"\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36355
msgid "For more information, refer its @url{https://knot-resolver.readthedocs.io/en/stable/config-overview.html, manual}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36357
#, no-wrap
msgid "{Data Type} knot-resolver-configuration"
msgstr "{Tipo de dados} knot-resolver-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36359
msgid "Data type representing the configuration of knot-resolver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36361
#, no-wrap
msgid "@code{package} (default: @var{knot-resolver})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36363
msgid "Package object of the knot DNS resolver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36364
#, no-wrap
msgid "@code{kresd-config-file} (default: %kresd.conf)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36367
msgid "File-like object of the kresd configuration file to use, by default it will listen on @code{127.0.0.1} and @code{::1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36368
#, no-wrap
msgid "@code{garbage-collection-interval} (default: 1000)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36370
msgid "Number of milliseconds for @code{kres-cache-gc} to periodically trim the cache."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36375
#, no-wrap
msgid "Dnsmasq Service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36377
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dnsmasq-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36380
msgid "This is the type of the dnsmasq service, whose value should be a @code{dnsmasq-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36386
#, no-wrap
msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"           (no-resolv? #t)\n"
"           (servers '(\"192.168.1.1\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36389
#, fuzzy
#| msgid "guix-publish-service-type"
msgid "@code{dnsmasq-service-type} provides two actions:"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:36391
#, no-wrap
msgid "reload"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36394
msgid "Send a @code{SIGHUP} signal to @command{dnsmasq} to clear cache and reload hosts files which triggers the following actions:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36398
msgid "Clear the DNS cache"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36400
msgid "Reload @file{/etc/hosts} and @file{/etc/ethers}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36404
msgid "Reload files specified by @option{--dhcp-hostsfile}, @option{--dhcp-hostsdir}, @option{--dhcp-optsfile}, @option{--dhcp-optsdir}, @option{--addn-hosts}, or @option{--hostsdir}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36406
msgid "Execute DHCP lease change scripts for all existing leases"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36409
msgid "Reread @file{/etc/resolv.conf} (only if @option{--no-poll} is configured)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:36414
msgid "The @code{SIGHUP} signal does not trigger a reload of the main configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36417 guix-git/doc/guix.texi:36437
#, fuzzy
#| msgid "Examples:"
msgid "Example usage:"
msgstr "Exemplos:"

#. type: example
#: guix-git/doc/guix.texi:36419
#, no-wrap
msgid "herd reload dnsmasq\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36421
#, fuzzy, no-wrap
#| msgid "--stats"
msgid "stats"
msgstr "--stats"

#. type: table
#: guix-git/doc/guix.texi:36424
msgid "When @command{dnsmasq} receives a @code{SIGUSR1} signal, it writes statistics to the system log including:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36428
msgid "Cache size and number of evicted entries"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36430
msgid "Cache hits, misses, and authoritative queries answered"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36432
msgid "For each upstream server: queries sent and errors received"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:36434
msgid "TCP connection fork statistics."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36439
#, fuzzy, no-wrap
#| msgid "herd start ssh-daemon\n"
msgid "herd stats dnsmasq\n"
msgstr "herd start ssh-daemon\n"

#. type: deftp
#: guix-git/doc/guix.texi:36444
#, no-wrap
msgid "{Data Type} dnsmasq-configuration"
msgstr "{Tipo de dados} dnsmasq-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36446
msgid "Data type representing the configuration of dnsmasq."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36448
#, no-wrap
msgid "@code{package} (default: @var{dnsmasq})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36450
msgid "Package object of the dnsmasq server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36451
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-provision} (default: @code{'(dnsmasq)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: itemx
#: guix-git/doc/guix.texi:36452
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{'(user-processes networking)})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:36456
msgid "This option can be used to provide a list of Shepherd service names (symbols) provided by this service.  You might want to change the default value if you intend to run several @command{dnsmasq} instances."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36459
msgid "Likewise, @code{shepherd-requirement} is a list of Shepherd service names (symbols) that this service will depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36460
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/run/dnsmasq.pid\"})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36462
msgid "Specify an alternate path for dnsmasq to record its process-id in."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36463
#, no-wrap
msgid "@code{no-hosts?} (default: @code{#f})"
msgstr "@code{no-hosts?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36465
msgid "When true, don't read the hostnames in /etc/hosts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36466
#, no-wrap
msgid "@code{port} (default: @code{53})"
msgstr "@code{port} (padrão: @code{53})"

#. type: table
#: guix-git/doc/guix.texi:36469
msgid "The port to listen on.  Setting this to zero completely disables DNS responses, leaving only DHCP and/or TFTP functions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36470
#, no-wrap
msgid "@code{local-service?} (default: @code{#t})"
msgstr "@code{local-service?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36473
msgid "Accept DNS queries only from hosts whose address is on a local subnet, ie a subnet for which an interface exists on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36474
#, no-wrap
msgid "@code{listen-addresses} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36476
msgid "Listen on the given IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36477
#, no-wrap
msgid "@code{resolv-file} (default: @code{\"/etc/resolv.conf\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36479
msgid "The file to read the IP address of the upstream nameservers from."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36480
#, no-wrap
msgid "@code{no-resolv?} (default: @code{#f})"
msgstr "@code{no-resolv?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36482
msgid "When true, don't read @var{resolv-file}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36483
#, fuzzy, no-wrap
#| msgid "@code{poll-batteries?} (default: @code{#t})"
msgid "@code{forward-private-reverse-lookup?} (default: @code{#t})"
msgstr "@code{poll-batteries?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36486
msgid "When false, all reverse lookups for private IP ranges are answered with \"no such domain\" rather than being forwarded upstream."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36487
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{query-servers-in-order?} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36490
msgid "When true, dnsmasq queries the servers in the same order as they appear in @var{servers}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36491
#, no-wrap
msgid "@code{servers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36493
msgid "Specify IP address of upstream servers directly."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36494
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{servers-file} (default: @code{#f})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36497
msgid "Specify file containing upstream servers. This file is re-read when dnsmasq receives SIGHUP.  Could be either a string or a file-like object."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36498
#, no-wrap
msgid "@code{addresses} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36502
msgid "For each entry, specify an IP address to return for any host in the given domains.  Queries in the domains are never forwarded and always replied to with the specified IP address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36504
msgid "This is useful for redirecting hosts locally, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36513
#, no-wrap
msgid ""
"(service dnsmasq-service-type\n"
"         (dnsmasq-configuration\n"
"           (addresses\n"
"             '(; Redirect to a local web-server.\n"
"               \"/example.org/127.0.0.1\"\n"
"               ; Redirect subdomain to a specific IP.\n"
"               \"/subdomain.example.org/192.168.1.42\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36516
msgid "Note that rules in @file{/etc/hosts} take precedence over this."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36517
#, no-wrap
msgid "@code{cache-size} (default: @code{150})"
msgstr "@code{cache-size} (padrão: @code{150})"

#. type: table
#: guix-git/doc/guix.texi:36520
msgid "Set the size of dnsmasq's cache.  Setting the cache size to zero disables caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36521
#, no-wrap
msgid "@code{negative-cache?} (default: @code{#t})"
msgstr "@code{negative-cache?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36523
msgid "When false, disable negative caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36524
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{cpe-id} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36527
msgid "If set, add a CPE (Customer-Premises Equipment) identifier to DNS queries which are forwarded upstream."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36528
#, no-wrap
msgid "@code{tftp-enable?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36530
msgid "Whether to enable the built-in TFTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36531
#, no-wrap
msgid "@code{tftp-no-fail?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36533
msgid "If true, does not fail dnsmasq if the TFTP server could not start up."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36534
#, no-wrap
msgid "@code{tftp-single-port?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36536
msgid "Whether to use only one single port for TFTP."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36537
#, no-wrap
msgid "@code{tftp-secure?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36539
msgid "If true, only files owned by the user running the dnsmasq process are accessible."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36543
msgid "If dnsmasq is being run as root, different rules apply: @code{tftp-secure?} has no effect, but only files which have the world-readable bit set are accessible."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36544
#, no-wrap
msgid "@code{tftp-max} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36546
msgid "If set, sets the maximal number of concurrent connections allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36547
#, no-wrap
msgid "@code{tftp-mtu} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36549
msgid "If set, sets the MTU for TFTP packets to that value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36550
#, no-wrap
msgid "@code{tftp-no-blocksize?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36552
msgid "If true, stops the TFTP server from negotiating the blocksize with a client."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36553
#, no-wrap
msgid "@code{tftp-lowercase?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36555
msgid "Whether to convert all filenames in TFTP requests to lowercase."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36556
#, no-wrap
msgid "@code{tftp-port-range} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36559
msgid "If set, fixes the dynamical ports (one per client) to the given range (@code{\"<start>,<end>\"})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36560
#, no-wrap
msgid "@code{tftp-root} (default: @code{/var/empty,lo})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36567
msgid "Look for files to transfer using TFTP relative to the given directory.  When this is set, TFTP paths which include @samp{..} are rejected, to stop clients getting outside the specified root.  Absolute paths (starting with @samp{/}) are allowed, but they must be within the TFTP-root.  If the optional interface argument is given, the directory is only used for TFTP requests via that interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36568
#, no-wrap
msgid "@code{tftp-unique-root} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36573
msgid "If set, add the IP or hardware address of the TFTP client as a path component on the end of the TFTP-root.  Only valid if a TFTP root is set and the directory exists.  Defaults to adding IP address (in standard dotted-quad format)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36582
msgid "For instance, if @option{--tftp-root} is @samp{/tftp} and client @samp{1.2.3.4} requests file @file{myfile} then the effective path will be @file{/tftp/1.2.3.4/myfile} if @file{/tftp/1.2.3.4} exists or @file{/tftp/myfile} otherwise.  When @samp{=mac} is specified it will append the MAC address instead, using lowercase zero padded digits separated by dashes, e.g.: @samp{01-02-03-04-aa-bb}.  Note that resolving MAC addresses is only possible if the client is in the local network or obtained a DHCP lease from dnsmasq."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36583
#, fuzzy, no-wrap
#| msgid "@code{properties} (default: @code{'()})"
msgid "@code{conf-file} (default: @code{'()})"
msgstr "@code{properties} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:36586
msgid "File names of configuration files to use.  Strings and file-like objects are accepted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36587
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{conf-dir} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36592
msgid "Read all the files in the given directory as configuration files.  Support for @command{dnsmasq} field extensions is not implemented; users can use @code{computed-file} to build a directory of files instead.  The configuration files are loaded in alphabetical order of file name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36596
msgid "This option provides an ``escape hatch'' for the user to provide arbitrary command-line arguments to @command{dnsmasq} as a list of strings."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36600
#, fuzzy, no-wrap
#| msgid "Sound Services"
msgid "Unbound Service"
msgstr "Serviços de som"

#. type: defvar
#: guix-git/doc/guix.texi:36602
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "unbound-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36606
msgid "This is the type of the service to run @uref{https://www.unbound.net, Unbound}, a validating, recursive, and caching DNS resolver.  Its value must be a @code{unbound-configuration} object as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36617
#, no-wrap
msgid ""
"(service unbound-service-type\n"
"         (unbound-configuration\n"
"          (forward-zone\n"
"           (list\n"
"            (unbound-zone\n"
"             (name \".\")\n"
"             (forward-addr '(\"149.112.112.112#dns.quad9.net\"\n"
"                             \"2620:fe::9#dns.quad9.net\"))\n"
"             (forward-tls-upstream #t))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36620
#, fuzzy, no-wrap
#| msgid "{Data Type} anonip-configuration"
msgid "{Data Type} unbound-configuration"
msgstr "{Tipo de dados} anonip-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36622
#, fuzzy
msgid "Available @code{unbound-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:36624
#, fuzzy, no-wrap
msgid "@code{server} (type: unbound-server)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36626
#, fuzzy
#| msgid "Service type for the QEMU guest agent service."
msgid "General options for the Unbound server."
msgstr "Tipo de serviço para o serviço de agente convidado QEMU."

#. type: item
#: guix-git/doc/guix.texi:36627
#, fuzzy, no-wrap
msgid "@code{remote-control} (type: unbound-remote)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36629
#, fuzzy
#| msgid "remote access to the daemon"
msgid "Remote control options for the daemon."
msgstr "acesso remoto ao daemon"

#. type: item
#: guix-git/doc/guix.texi:36630
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{forward-zone} (default: @code{()}) (type: list-of-unbound-zone)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36632
msgid "A zone for which queries should be forwarded to another resolver."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36635
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Raw content to add to the configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: deftp
#: guix-git/doc/guix.texi:36639
#, fuzzy, no-wrap
#| msgid "{Data Type} ntp-server"
msgid "{Data Type} unbound-server"
msgstr "{Tipo de dados} ntp-server"

#. type: deftp
#: guix-git/doc/guix.texi:36641
#, fuzzy
msgid "Available @code{unbound-server} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:36643
#, fuzzy, no-wrap
msgid "@code{interface} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36645
msgid "Interfaces listened on for queries from clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36646
#, fuzzy, no-wrap
msgid "@code{hide-version} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36648
msgid "Refuse the version.server and version.bind queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36649
#, fuzzy, no-wrap
msgid "@code{hide-identity} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36651
msgid "Refuse the id.server and hostname.bind queries."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36652
#, fuzzy, no-wrap
msgid "@code{tls-cert-bundle} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36654
msgid "Certificate bundle file, used for DNS over TLS."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36657 guix-git/doc/guix.texi:36673
#: guix-git/doc/guix.texi:36692
msgid "An association list of options to append."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36661
#, fuzzy, no-wrap
#| msgid "{Data Type} grub-theme"
msgid "{Data Type} unbound-remote"
msgstr "{Tipo de dados} grub-theme"

#. type: deftp
#: guix-git/doc/guix.texi:36663
#, fuzzy
msgid "Available @code{unbound-remote} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:36665
#, fuzzy, no-wrap
msgid "@code{control-enable} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36667
msgid "Enable remote control."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36668
#, fuzzy, no-wrap
msgid "@code{control-interface} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36670
msgid "IP address or local socket path to listen on for remote control."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36677
#, fuzzy, no-wrap
#| msgid "{Data Type} image"
msgid "{Data Type} unbound-zone"
msgstr "{Tipo de dados} image"

#. type: deftp
#: guix-git/doc/guix.texi:36679
#, fuzzy
msgid "Available @code{unbound-zone} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:36683
#, fuzzy
#| msgid "Derivations"
msgid "Zone name."
msgstr "Derivações"

#. type: item
#: guix-git/doc/guix.texi:36684
#, fuzzy, no-wrap
msgid "@code{forward-addr} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36686
msgid "IP address of server to forward to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36687
#, fuzzy, no-wrap
msgid "@code{forward-tls-upstream} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36689
msgid "Whether the queries to this forwarder use TLS for transport."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36698
#, no-wrap
msgid "VNC (virtual network computing)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36699
#, no-wrap
msgid "XDMCP (x display manager control protocol)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36708
msgid "The @code{(gnu services vnc)} module provides services related to @dfn{Virtual Network Computing} (VNC), which makes it possible to locally use graphical Xorg applications running on a remote machine.  Combined with a graphical manager that supports the @dfn{X Display Manager Control Protocol}, such as GDM (@pxref{gdm}) or LightDM (@pxref{lightdm}), it is possible to remote an entire desktop for a multi-user environment."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36709
#, no-wrap
msgid "Xvnc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36714
msgid "Xvnc is a VNC server that spawns its own X window server; which means it can run on headless servers.  The Xvnc implementations provided by the @code{tigervnc-server} and @code{turbovnc} aim to be fast and efficient."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36715
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "xvnc-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36721
msgid "The @code{xvnc-service-type} service can be configured via the @code{xvnc-configuration} record, documented below.  A second virtual display could be made available on a remote machine via the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36726
#, no-wrap
msgid ""
"(service xvnc-service-type\n"
"         (xvnc-configuration (display-number 10)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36731
msgid "As a demonstration, the @command{xclock} command could then be started on the remote machine on display number 10, and it could be displayed locally via the @command{vncviewer} command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36737
#, no-wrap
msgid ""
"# Start xclock on the remote machine.\n"
"ssh -L5910:localhost:5910 @var{your-host} -- guix shell xclock \\\n"
"    -- env DISPLAY=:10 xclock\n"
"# Access it via VNC.\n"
"guix shell tigervnc-client -- vncviewer localhost:5910\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36742
msgid "The following configuration combines XDMCP and Inetd to allow multiple users to concurrently use the remote system and login graphically via the GDM display manager:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:36758
#, no-wrap
msgid ""
"(operating-system\n"
"  [...]\n"
"  (services (cons*\n"
"             [...]\n"
"             (service xvnc-service-type (xvnc-configuration\n"
"                                         (display-number 5)\n"
"                                         (localhost? #f)\n"
"                                         (xdmcp? #t)\n"
"                                         (inetd? #t)))\n"
"             (modify-services %desktop-services\n"
"               (gdm-service-type config => (gdm-configuration\n"
"                                            (inherit config)\n"
"                                            (auto-suspend? #f)\n"
"                                            (xdmcp? #t)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36763
msgid "A remote user could then connect to it by using the @command{vncviewer} command or a compatible VNC client and start a desktop session of their choosing:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:36765
#, no-wrap
msgid "vncviewer remote-host:5905\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:36775
msgid "Unless your machine is in a controlled environment, for security reasons, the @code{localhost?} configuration of the @code{xvnc-configuration} record should be left to its default @code{#t} value and exposed via a secure means such as an SSH port forward.  The XDMCP port, UDP 177 should also be blocked from the outside by a firewall, as it is not a secure protocol and can expose login credentials in clear."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36780
#, no-wrap
msgid "{Data Type} xvnc-configuration"
msgstr "{Tipo de dados} xvnc-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36782
msgid "Available @code{xvnc-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36784
#, fuzzy, no-wrap
msgid "@code{xvnc} (default: @code{tigervnc-server}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36786
msgid "The package that provides the Xvnc binary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36787
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{display-number} (default: @code{0}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36790
msgid "The display number used by Xvnc.  You should set this to a number not already used a Xorg server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36791
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{geometry} (default: @code{\"1024x768\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36793
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The size of the desktop to be created."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:36794
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{depth} (default: @code{24}) (type: color-depth)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36797
msgid "The pixel depth in bits of the desktop to be created.  Accepted values are 16, 24 or 32."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36801
msgid "The port on which to listen for connections from viewers.  When left unspecified, it defaults to 5900 plus the display number."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36802
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ipv4?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36804
msgid "Use IPv4 for incoming and outgoing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36805
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ipv6?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36807
msgid "Use IPv6 for incoming and outgoing connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36808
#, fuzzy, no-wrap
msgid "@code{password-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36811
msgid "The password file to use, if any.  Refer to vncpasswd(1) to learn how to generate such a file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:36818
msgid "Query the XDMCP server for a session.  This enables users to log in a desktop session from the login manager screen.  For a multiple users scenario, you'll want to enable the @code{inetd?} option as well, so that each connection to the VNC server is handled separately rather than shared."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36819
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{inetd?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36821
msgid "Use an Inetd-style service, which runs the Xvnc server on demand."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36822
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{frame-rate} (default: @code{60}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36824
msgid "The maximum number of updates per second sent to each client."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36825
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{security-types} (default: @code{'(\"None\")}) (type: security-types)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36831
msgid "The allowed security schemes to use for incoming connections.  The default is \"None\", which is safe given that Xvnc is configured to authenticate the user via the display manager, and only for local connections.  Accepted values are any of the following: (\"None\" \"VncAuth\" \"Plain\" \"TLSNone\" \"TLSVnc\" \"TLSPlain\" \"X509None\" \"X509Vnc\")"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36832
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{localhost?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36836
msgid "Only allow connections from the same machine.  It is set to #true by default for security, which means SSH or another secure means should be used to expose the remote port."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36837
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log-level} (default: @code{30}) (type: log-level)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36840
msgid "The log level, a number between 0 and 100, 100 meaning most verbose output.  The log messages are output to syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36841
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-options} (default: @code{'()}) (type: strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36844
msgid "This can be used to provide extra Xvnc options not exposed via this <xvnc-configuration> record."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36852
#, no-wrap
msgid "VPN (virtual private network)"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:36853
#, no-wrap
msgid "virtual private network (VPN)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36857
msgid "The @code{(gnu services vpn)} module provides services related to @dfn{virtual private networks} (VPNs)."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36858
#, no-wrap
msgid "Bitmask"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36860
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "bitmask-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36865
msgid "A service type for the @uref{https://bitmask.net, Bitmask} VPN client.  It makes the client available in the system and loads its polkit policy.  Please note that the client expects an active polkit-agent, which is either run by your desktop-environment or should be run manually."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:36867
#, no-wrap
msgid "OpenVPN"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:36873
msgid "It provides a @emph{client} service for your machine to connect to a VPN, and a @emph{server} service for your machine to host a VPN@.  Both @code{openvpn-client-service-type} and @code{openvpn-server-service-type} can be run simultaneously."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36874
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "openvpn-client-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36876
msgid "Type of the service that runs @command{openvpn}, a VPN daemon, as a client."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36879
msgid "The value for this service is a @code{<openvpn-client-configuration>} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36881
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "openvpn-server-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:36883
msgid "Type of the service that runs @command{openvpn}, a VPN daemon, as a server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:36886
msgid "The value for this service is a @code{<openvpn-server-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36890
#, no-wrap
msgid "{Data Type} openvpn-client-configuration"
msgstr "{Tipo de dados} openvpn-client-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36892
msgid "Available @code{openvpn-client-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36894 guix-git/doc/guix.texi:36982
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{openvpn} (default: @code{openvpn}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36896 guix-git/doc/guix.texi:36984
msgid "The OpenVPN package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36897 guix-git/doc/guix.texi:36985
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/openvpn/openvpn.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36899 guix-git/doc/guix.texi:36987
msgid "The OpenVPN pid file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36900 guix-git/doc/guix.texi:36988
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{proto} (default: @code{udp}) (type: proto)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36903 guix-git/doc/guix.texi:36991
msgid "The protocol (UDP or TCP) used to open a channel between clients and servers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36904 guix-git/doc/guix.texi:36992
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{dev} (default: @code{tun}) (type: dev)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36906 guix-git/doc/guix.texi:36994
msgid "The device type used to represent the VPN connection."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36907 guix-git/doc/guix.texi:36995
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{ca} (default: @code{\"/etc/openvpn/ca.crt\"}) (type: maybe-string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36909 guix-git/doc/guix.texi:36997
msgid "The certificate authority to check connections against."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36910 guix-git/doc/guix.texi:36998
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{cert} (default: @code{\"/etc/openvpn/client.crt\"}) (type: maybe-string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36913 guix-git/doc/guix.texi:37001
msgid "The certificate of the machine the daemon is running on.  It should be signed by the authority given in @code{ca}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36914 guix-git/doc/guix.texi:37002
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{key} (default: @code{\"/etc/openvpn/client.key\"}) (type: maybe-string)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36917 guix-git/doc/guix.texi:37005
msgid "The key of the machine the daemon is running on.  It must be the key whose certificate is @code{cert}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36918 guix-git/doc/guix.texi:37006
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{comp-lzo?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36920 guix-git/doc/guix.texi:37008
msgid "Whether to use the lzo compression algorithm."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36921 guix-git/doc/guix.texi:37009
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{persist-key?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36923 guix-git/doc/guix.texi:37011
msgid "Don't re-read key files across SIGUSR1 or --ping-restart."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36924 guix-git/doc/guix.texi:37012
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{persist-tun?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36927 guix-git/doc/guix.texi:37015
msgid "Don't close and reopen TUN/TAP device or run up/down scripts across SIGUSR1 or --ping-restart restarts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36928 guix-git/doc/guix.texi:37016
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{fast-io?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36931 guix-git/doc/guix.texi:37019
msgid "(Experimental) Optimize TUN/TAP/UDP I/O writes by avoiding a call to poll/epoll/select prior to the write operation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36932 guix-git/doc/guix.texi:37020
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{verbosity} (default: @code{3}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36934 guix-git/doc/guix.texi:37022
msgid "Verbosity level."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36935
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{tls-auth} (default: @code{#f}) (type: tls-auth-client)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36938 guix-git/doc/guix.texi:37026
msgid "Add an additional layer of HMAC authentication on top of the TLS control channel to protect against DoS attacks."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36939
#, fuzzy, no-wrap
msgid "@code{auth-user-pass} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36943
msgid "Authenticate with server using username/password.  The option is a file containing username/password on 2 lines.  Do not use a file-like object as it would be added to the store and readable by any user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36944
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{verify-key-usage?} (default: @code{#t}) (type: key-usage)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:36946
msgid "Whether to check the server certificate has server usage extension."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36947
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{bind?} (default: @code{#f}) (type: bind)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36949
msgid "Bind to a specific local port number."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36950
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{resolv-retry?} (default: @code{#t}) (type: resolv-retry)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36952
msgid "Retry resolving server address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36953
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{remote} (default: @code{'()}) (type: openvpn-remote-list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36955
msgid "A list of remote servers to connect to."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36956
#, no-wrap
msgid "{Data Type} openvpn-remote-configuration"
msgstr "{Tipo de dados} openvpn-remote-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36958
msgid "Available @code{openvpn-remote-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:36960
#, fuzzy, no-wrap
msgid "@code{name} (default: @code{\"my-server\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36962
msgid "Server name."
msgstr "Nome do servidor."

#. type: item
#: guix-git/doc/guix.texi:36963 guix-git/doc/guix.texi:37027
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{1194}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:36965
msgid "Port number the server listens to."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:36978
#, no-wrap
msgid "{Data Type} openvpn-server-configuration"
msgstr "{Tipo de dados} openvpn-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:36980
msgid "Available @code{openvpn-server-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37023
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{tls-auth} (default: @code{#f}) (type: tls-auth-server)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37029
msgid "Specifies the port number on which the server listens."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37030
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{server} (default: @code{\"10.8.0.0 255.255.255.0\"}) (type: ip-mask)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37032
msgid "An ip and mask specifying the subnet inside the virtual network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37033
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{server-ipv6} (default: @code{#f}) (type: cidr6)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37035
msgid "A CIDR notation specifying the IPv6 subnet inside the virtual network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37036
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{dh} (default: @code{\"/etc/openvpn/dh2048.pem\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37038
msgid "The Diffie-Hellman parameters file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37039
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{ifconfig-pool-persist} (default: @code{\"/etc/openvpn/ipp.txt\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37041
msgid "The file that records client IPs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37042
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{redirect-gateway?} (default: @code{#f}) (type: gateway)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37044
msgid "When true, the server will act as a gateway for its clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37045
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{client-to-client?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37047
msgid "When true, clients are allowed to talk to each other inside the VPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37048
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{keepalive} (default: @code{(10 120)}) (type: keepalive)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37054
msgid "Causes ping-like messages to be sent back and forth over the link so that each side knows when the other side has gone down.  @code{keepalive} requires a pair.  The first element is the period of the ping sending, and the second element is the timeout before considering the other side down."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37055
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-clients} (default: @code{100}) (type: number)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37057
msgid "The maximum number of clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37058
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{status} (default: @code{\"/var/run/openvpn/status\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37061
msgid "The status file.  This file shows a small report on current connection.  It is truncated and rewritten every minute."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37062
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{client-config-dir} (default: @code{'()}) (type: openvpn-ccd-list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37064
msgid "The list of configuration for some clients."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:37071
#, no-wrap
msgid "strongSwan"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37075
msgid "Currently, the strongSwan service only provides legacy-style configuration with @file{ipsec.conf} and @file{ipsec.secrets} files."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37076
#, fuzzy, no-wrap
msgid "strongswan-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37080
msgid "A service type for configuring strongSwan for IPsec @acronym{VPN, Virtual Private Networking}.  Its value must be a @code{strongswan-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37086
#, no-wrap
msgid ""
"(service strongswan-service-type\n"
"         (strongswan-configuration\n"
"          (ipsec-conf \"/etc/ipsec.conf\")\n"
"          (ipsec-secrets \"/etc/ipsec.secrets\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37090
#, no-wrap
msgid "{Data Type} strongswan-configuration"
msgstr "{Tipo de dados} strongswan-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37092
#, fuzzy
msgid "Data type representing the configuration of the StrongSwan service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: code{#1}
#: guix-git/doc/guix.texi:37094
#, no-wrap
msgid "strongswan"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37096
msgid "The strongSwan package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37097
#, fuzzy, no-wrap
#| msgid "@code{nsec3?} (default: @code{#f})"
msgid "@code{ipsec-conf} (default: @code{#f})"
msgstr "@code{nsec3?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37100
msgid "The file name of your @file{ipsec.conf}.  If not @code{#f}, then this and @code{ipsec-secrets} must both be strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37101
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{ipsec-secrets} (default @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37104
msgid "The file name of your @file{ipsec.secrets}.  If not @code{#f}, then this and @code{ipsec-conf} must both be strings."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37108
#, no-wrap
msgid "Wireguard"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37110
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "wireguard-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37113
msgid "A service type for a Wireguard tunnel interface.  Its value must be a @code{wireguard-configuration} record as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37124
#, no-wrap
msgid ""
"(service wireguard-service-type\n"
"         (wireguard-configuration\n"
"          (peers\n"
"           (list\n"
"            (wireguard-peer\n"
"             (name \"my-peer\")\n"
"             (endpoint \"my.wireguard.com:51820\")\n"
"             (public-key \"hzpKg9X1yqu1axN6iJp0mWf6BZGo8m1wteKwtTmDGF4=\")\n"
"             (allowed-ips '(\"10.0.0.2/32\")))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37128
#, no-wrap
msgid "{Data Type} wireguard-configuration"
msgstr "{Tipo de dados} wireguard-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37130
msgid "Data type representing the configuration of the Wireguard service."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37132
#, no-wrap
msgid "wireguard"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37134
msgid "The wireguard package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37135
#, no-wrap
msgid "@code{interface} (default: @code{\"wg0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37137
msgid "The interface name for the VPN."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37138
#, no-wrap
msgid "@code{addresses} (default: @code{'(\"10.0.0.1/32\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37141
msgid "List of strings or G-expressions which represent the IP addresses to be assigned to the above interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37142
#, no-wrap
msgid "@code{port} (default: @code{51820})"
msgstr "@code{port} (padrão: @code{51820})"

#. type: table
#: guix-git/doc/guix.texi:37144
msgid "The port on which to listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37145
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{dns} (default: @code{'())})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37148
msgid "List of strings or G-expressions which represent the DNS server(s) to announce to VPN clients via DHCP."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37149
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{monitor-ips?} (default: @code{#f})"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: cindex
#: guix-git/doc/guix.texi:37150
#, no-wrap
msgid "Dynamic IP, with Wireguard"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37151
#, no-wrap
msgid "dyndns, usage with Wireguard"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37157
msgid "Whether to monitor the resolved Internet addresses (IPs) of the endpoints of the configured peers, resetting the peer endpoints using an IP address that no longer correspond to their freshly resolved host name.  Set this to @code{#t} if one or more endpoints use host names provided by a dynamic DNS service to keep the sessions alive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37158
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{monitor-ips-interval} (default: @code{\"*/5 * * * *\"})"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37162
msgid "This is the monitoring schedule, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37163
#, no-wrap
msgid "@code{private-key} (default: @code{\"/etc/wireguard/private.key\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37168
msgid "The private key file for the interface.  It is automatically generated if the file does not exist.  If this field is @code{#f}, a private key is not automatically created and the path is not serialized to the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37169
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{bootstrap-private-key?} (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37172
msgid "Whether or not the private key should be generated automatically if it does not exist."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37177
msgid "Setting this to @code{#f} allows one to set the private key using command substitution.  One example shown in the @code{wg-quick(8)} manual is retrieving a private key using @code{password-store}.  This can be achieved with the following code:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37185
#, no-wrap
msgid ""
"(wireguard-configuration\n"
" (private-key\n"
"  #~(string-append \"<(\"\n"
"                   #$(file-append password-store \"/bin/pass\")\n"
"                   ;; Wireguard replaces %i with the interface name.\n"
"                   \" WireGuard/private-keys/%i)\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37188
#, no-wrap
msgid "@code{peers} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37191
msgid "The authorized peers on this interface.  This is a list of @var{wireguard-peer} records."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37192
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{pre-up} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37195
msgid "List of strings or G-expressions.  These are script snippets which will be executed before setting up the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37196
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{post-up} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37199
msgid "List of strings or G-expressions.  These are script snippets which will be executed after setting up the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37200
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{pre-down} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37203
msgid "List of strings or G-expressions.  These are script snippets which will be executed before tearing down the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37204
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{post-down} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37207
msgid "List of strings or G-expressions.  These are script snippets which will be executed after tearing down the interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37208 guix-git/doc/guix.texi:39100
#: guix-git/doc/guix.texi:39350
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-requirement} (default: @code{'()}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37211 guix-git/doc/guix.texi:39103
msgid "A list of symbols naming Shepherd services that this service will depend on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37212
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{table} (default: @code{\"auto\"})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37217
msgid "The routing table to which routes are added, as a string.  There are two special values: @code{\"off\"} that disables the creation of routes altogether, and @code{\"auto\"} (the default) that adds routes to the default table and enables special handling of default routes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37218
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{auto-start?} (default: @code{#t\"})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37223
msgid "Whether the Wireguard network should be started automatically by the Shepherd.  If it is @code{#f} the service has to be started manually with @code{herd start wireguard-$interface} (for example: @code{herd start wireguard-wg0})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37227
#, no-wrap
msgid "{Data Type} wireguard-peer"
msgstr "{Tipo de dados} wireguard-peer"

#. type: deftp
#: guix-git/doc/guix.texi:37229
msgid "Data type representing a Wireguard peer attached to a given interface."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37233
msgid "The peer name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37234
#, no-wrap
msgid "@code{endpoint} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37237
msgid "The optional endpoint for the peer, such as @code{\"demo.wireguard.com:51820\"}."
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:37238 guix-git/doc/guix.texi:37802
#: guix-git/doc/guix.texi:37839 guix-git/doc/guix.texi:45699
#, no-wrap
msgid "public-key"
msgstr "public-key"

#. type: table
#: guix-git/doc/guix.texi:37240
msgid "The peer public-key represented as a base64 string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37241
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{preshared-key} (default: @code{#f})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37244
msgid "An optional pre-shared key file for this peer that can be either a string or a G-expression.  The given file will not be autogenerated."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37245
#, no-wrap
msgid "allowed-ips"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37248
msgid "A list of IP addresses from which incoming traffic for this peer is allowed and to which incoming traffic for this peer is directed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37249
#, fuzzy, no-wrap
#| msgid "@code{key} (default: @code{#f})"
msgid "@code{keep-alive} (default: @code{#f})"
msgstr "@code{key} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37254
msgid "An optional time interval in seconds.  A packet will be sent to the server endpoint once per time interval.  This helps receiving incoming connections from this peer when you are behind a NAT or a firewall."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37260
#, no-wrap
msgid "NFS"
msgstr "NFS"

#. type: Plain text
#: guix-git/doc/guix.texi:37265
msgid "The @code{(gnu services nfs)} module provides the following services, which are most commonly used in relation to mounting or exporting directory trees as @dfn{network file systems} (NFS)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37269
msgid "While it is possible to use the individual components that together make up a Network File System service, we recommended to configure an NFS server with the @code{nfs-service-type}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37270
#, no-wrap
msgid "NFS Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37271
#, no-wrap
msgid "NFS, server"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37276
msgid "The NFS service takes care of setting up all NFS component services, kernel configuration file systems, and installs configuration files in the locations that NFS expects."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37277
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "nfs-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37279
msgid "A service type for a complete NFS server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37281
#, no-wrap
msgid "{Data Type} nfs-configuration"
msgstr "{Tipo de dados} nfs-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37284
msgid "This data type represents the configuration of the NFS service and all of its subsystems."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37286
msgid "It has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37287 guix-git/doc/guix.texi:37412
#: guix-git/doc/guix.texi:37437
#, no-wrap
msgid "@code{nfs-utils} (default: @code{nfs-utils})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37289
msgid "The nfs-utils package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37290
#, no-wrap
msgid "@code{nfs-versions} (default: @code{'(\"4.2\" \"4.1\" \"4.0\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37293
msgid "If a list of string values is provided, the @command{rpc.nfsd} daemon will be limited to supporting the given versions of the NFS protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37294
#, no-wrap
msgid "@code{exports} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37299
msgid "This is a list of directories the NFS server should export.  Each entry is a list consisting of two elements: a directory name and a string containing all options.  This is an example in which the directory @file{/export} is served to all NFS clients as a read-only share:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37305
#, no-wrap
msgid ""
"(nfs-configuration\n"
" (exports\n"
"  '((\"/export\"\n"
"     \"*(ro,insecure,no_subtree_check,crossmnt,fsid=0)\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37307
#, no-wrap
msgid "@code{rpcmountd-port} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37309
msgid "The network port that the @command{rpc.mountd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37310
#, no-wrap
msgid "@code{rpcstatd-port} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37312
msgid "The network port that the @command{rpc.statd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37313 guix-git/doc/guix.texi:37361
#, no-wrap
msgid "@code{rpcbind} (default: @code{rpcbind})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37315 guix-git/doc/guix.texi:37363
msgid "The rpcbind package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37316
#, no-wrap
msgid "@code{idmap-domain} (default: @code{\"localdomain\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37318
msgid "The local NFSv4 domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37319
#, no-wrap
msgid "@code{nfsd-port} (default: @code{2049})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37321
msgid "The network port that the @command{nfsd} daemon should use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37322
#, no-wrap
msgid "@code{nfsd-threads} (default: @code{8})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37324
msgid "The number of threads used by the @command{nfsd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37325
#, no-wrap
msgid "@code{nfsd-tcp?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37327
msgid "Whether the @command{nfsd} daemon should listen on a TCP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37328
#, no-wrap
msgid "@code{nfsd-udp?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37330
msgid "Whether the @command{nfsd} daemon should listen on a UDP socket."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37331 guix-git/doc/guix.texi:37415
#: guix-git/doc/guix.texi:37440
#, no-wrap
msgid "@code{pipefs-directory} (default: @code{\"/var/lib/nfs/rpc_pipefs\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37333 guix-git/doc/guix.texi:37417
#: guix-git/doc/guix.texi:37442
msgid "The directory where the pipefs file system is mounted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37334
#, no-wrap
msgid "@code{debug} (default: @code{'()\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37338
msgid "A list of subsystems for which debugging output should be enabled.  This is a list of symbols.  Any of these symbols are valid: @code{nfsd}, @code{nfs}, @code{rpc}, @code{idmap}, @code{statd}, or @code{mountd}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37343
msgid "If you don't need a complete NFS service or prefer to build it yourself you can use the individual component services that are documented below."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37344
#, no-wrap
msgid "RPC Bind Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37345
#, no-wrap
msgid "rpcbind"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37351
msgid "The RPC Bind service provides a facility to map program numbers into universal addresses.  Many NFS related services use this facility.  Hence it is automatically started when a dependent service starts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37352
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rpcbind-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37354
msgid "A service type for the RPC portmapper daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37357
#, no-wrap
msgid "{Data Type} rpcbind-configuration"
msgstr "{Tipo de dados} rpcbind-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37360
msgid "Data type representing the configuration of the RPC Bind Service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37364
#, no-wrap
msgid "@code{warm-start?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37368
msgid "If this parameter is @code{#t}, then the daemon will read a state file on startup thus reloading state information saved by a previous instance."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37372
#, no-wrap
msgid "Pipefs Pseudo File System"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37373
#, no-wrap
msgid "pipefs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37374
#, no-wrap
msgid "rpc_pipefs"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37378
msgid "The pipefs file system is used to transfer NFS related data between the kernel and user space programs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37379
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pipefs-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37381
msgid "A service type for the pipefs pseudo file system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37383
#, no-wrap
msgid "{Data Type} pipefs-configuration"
msgstr "{Tipo de dados} pipefs-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37386
msgid "Data type representing the configuration of the pipefs pseudo file system service.  This type has the following parameters:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37387
#, no-wrap
msgid "@code{mount-point} (default: @code{\"/var/lib/nfs/rpc_pipefs\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37389
msgid "The directory to which the file system is to be attached."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37393
#, no-wrap
msgid "GSS Daemon Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37394
#, no-wrap
msgid "GSSD"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37395
#, no-wrap
msgid "GSS"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37396
#, no-wrap
msgid "global security system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37403
msgid "The @dfn{global security system} (GSS) daemon provides strong security for RPC based protocols.  Before exchanging RPC requests an RPC client must establish a security context.  Typically this is done using the Kerberos command @command{kinit} or automatically at login time using PAM services (@pxref{Kerberos Services})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37404
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "gss-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37406
msgid "A service type for the Global Security System (GSS) daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37408
#, no-wrap
msgid "{Data Type} gss-configuration"
msgstr "{Tipo de dados} gss-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37411
msgid "Data type representing the configuration of the GSS daemon service.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37414
msgid "The package in which the @command{rpc.gssd} command is to be found."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37422
#, no-wrap
msgid "IDMAP Daemon Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37423
#, no-wrap
msgid "idmapd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37424
#, no-wrap
msgid "name mapper"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37428
msgid "The idmap daemon service provides mapping between user IDs and user names.  Typically it is required in order to access file systems mounted via NFSv4."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37429
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "idmap-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37431
msgid "A service type for the Identity Mapper (IDMAP) daemon."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37433
#, no-wrap
msgid "{Data Type} idmap-configuration"
msgstr "{Tipo de dados} idmap-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37436
msgid "Data type representing the configuration of the IDMAP daemon service.  This type has the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37439
msgid "The package in which the @command{rpc.idmapd} command is to be found."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37443 guix-git/doc/guix.texi:37586
#, no-wrap
msgid "@code{domain} (default: @code{#f})"
msgstr "@code{domain} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37447
msgid "The local NFSv4 domain name.  This must be a string or @code{#f}.  If it is @code{#f} then the daemon will use the host's fully qualified domain name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37448
#, no-wrap
msgid "@code{verbosity} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37450
msgid "The verbosity level of the daemon."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37457 guix-git/doc/guix.texi:37463
#, no-wrap
msgid "Samba"
msgstr "Samba"

#. type: cindex
#: guix-git/doc/guix.texi:37458
#, no-wrap
msgid "SMB"
msgstr "SMB"

#. type: Plain text
#: guix-git/doc/guix.texi:37462
msgid "The @code{(gnu services samba)} module provides service definitions for Samba as well as additional helper services.  Currently it provides the following services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37470
msgid "@uref{https://www.samba.org, Samba} provides network shares for folders and printers using the SMB/CIFS protocol commonly used on Windows.  It can also act as an Active Directory Domain Controller (AD DC) for other hosts in an heterougenious network with different types of Computer systems."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37471
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "samba-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37476
msgid "The service type to enable the samba services @code{samba}, @code{nmbd}, @code{smbd} and @code{winbindd}.  By default this service type does not run any of the Samba daemons; they must be enabled individually."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37480
msgid "Below is a basic example that configures a simple, anonymous (unauthenticated) Samba file share exposing the @file{/public} directory."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:37485
msgid "The @file{/public} directory and its contents must be world readable/writable, so you'll want to run @samp{chmod -R 777 /public} on it."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:37487
#, fuzzy, no-wrap
#| msgid "isolation"
msgid "Caution"
msgstr "isolação"

#. type: quotation
#: guix-git/doc/guix.texi:37491
msgid "Such a Samba configuration should only be used in controlled environments, and you should not share any private files using it, as anyone connecting to your network would be able to access them."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37500
#, no-wrap
msgid ""
"(service samba-service-type (samba-configuration\n"
"                             (enable-smbd? #t)\n"
"                             (config-file (plain-file \"smb.conf\" \"\\\n"
"[global]\n"
"map to guest = Bad User\n"
"logging = syslog@@1\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37507
#, no-wrap
msgid ""
"[public]\n"
"browsable = yes\n"
"path = /public\n"
"read only = no\n"
"guest ok = yes\n"
"guest only = yes\\n\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37511
#, no-wrap
msgid "{Data Type} samba-service-configuration"
msgstr "{Tipo de dados} samba-service-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37513
#, fuzzy
msgid "Configuration record for the Samba suite."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:37515
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{samba})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37517
#, fuzzy
msgid "The samba package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:37521
msgid "The config file to use.  To learn about its syntax, run @samp{man smb.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37522
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{enable-samba?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37524
msgid "Enable the @code{samba} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37525
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{enable-smbd?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37527
msgid "Enable the @code{smbd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37528
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{enable-nmbd?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37530
msgid "Enable the @code{nmbd} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37531
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{enable-winbindd?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37533
msgid "Enable the @code{winbindd} daemon."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37537
#, fuzzy, no-wrap
#| msgid "Web Services"
msgid "wsdd, Web service discovery daemon"
msgstr "Serviços Web"

#. type: subsubheading
#: guix-git/doc/guix.texi:37538
#, no-wrap
msgid "Web Service Discovery Daemon"
msgstr "Daemon de Descoberta de Serviço da Web"

#. type: Plain text
#: guix-git/doc/guix.texi:37546
msgid "The @acronym{WSDD, Web Service Discovery daemon} implements the @uref{http://docs.oasis-open.org/ws-dd/discovery/1.1/os/wsdd-discovery-1.1-spec-os.html, Web Services Dynamic Discovery} protocol that enables host discovery over Multicast DNS, similar to what Avahi does.  It is a drop-in replacement for SMB hosts that have had SMBv1 disabled for security reasons."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37547
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "wsdd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37551
msgid "Service type for the WSD host daemon.  The value for this service type is a @code{wsdd-configuration} record.  The details for the @code{wsdd-configuration} record type are given below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37553
#, no-wrap
msgid "{Data Type} wsdd-configuration"
msgstr "{Tipo de dados} wsdd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37555
#, fuzzy
msgid "This data type represents the configuration for the wsdd service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:37558
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{wsdd})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37560
#, fuzzy
#| msgid "The GPM package to use."
msgid "The wsdd package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:37561
#, fuzzy, no-wrap
#| msgid "@code{ipv4?} (default: @code{#t})"
msgid "@code{ipv4only?} (default: @code{#f})"
msgstr "@code{ipv4?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37563
msgid "Only listen to IPv4 addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37564
#, fuzzy, no-wrap
#| msgid "@code{ipv6?} (default: @code{#t})"
msgid "@code{ipv6only} (default: @code{#f})"
msgstr "@code{ipv6?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37567
msgid "Only listen to IPv6 addresses.  Please note: Activating both options is not possible, since there would be no IP versions to listen to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37572
msgid "Chroot into a separate directory to prevent access to other directories.  This is to increase security in case there is a vulnerability in @command{wsdd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37573
#, fuzzy, no-wrap
#| msgid "@code{host} (default: @code{#f})"
msgid "@code{hop-limit} (default: @code{1})"
msgstr "@code{host} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37576
msgid "Limit to the level of hops for multicast packets.  The default is @var{1} which should prevent packets from leaving the local network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37577
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{interface} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37581
msgid "Limit to the given list of interfaces to listen to.  By default wsdd will listen to all interfaces.  Except the loopback interface is never used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37582
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{uuid-device} (default: @code{#f})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37585
msgid "The WSD protocol requires a device to have a UUID.  Set this to manually assign the service a UUID."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37588
msgid "Notify this host is a member of an Active Directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37593
msgid "Manually set the hostname rather than letting @command{wsdd} inherit this host's hostname.  Only the host name part of a possible FQDN will be used in the default case."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37594
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{preserve-case?} (default: @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37598
msgid "By default @command{wsdd} will convert the hostname in workgroup to all uppercase.  The opposite is true for hostnames in domains.  Setting this parameter will preserve case."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37599
#, fuzzy, no-wrap
#| msgid "@code{group} (default: @var{git})"
msgid "@code{workgroup} (default: @var{\"WORKGROUP\"})"
msgstr "@code{group} (default: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:37602
msgid "Change the name of the workgroup.  By default @command{wsdd} reports this host being member of a workgroup."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37613
msgid "@uref{https://guix.gnu.org/cuirass/, Cuirass} is a continuous integration tool for Guix.  It can be used both for development and for providing substitutes to others (@pxref{Substitutes})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37615
msgid "The @code{(gnu services cuirass)} module provides the following service."
msgstr ""

#. type: defvr
#: guix-git/doc/guix.texi:37616
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "{Procedure} cuirass-service-type"
msgstr "guix-publish-service-type"

#. type: defvr
#: guix-git/doc/guix.texi:37619
msgid "The type of the Cuirass service.  Its value must be a @code{cuirass-configuration} object, as described below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37624
msgid "To add build jobs, you have to set the @code{specifications} field of the configuration.  For instance, the following example will build all the packages provided by the @code{my-channel} channel."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37635
#, no-wrap
msgid ""
"(define %cuirass-specs\n"
"  #~(list (specification\n"
"           (name 'my-channel)\n"
"           (build '(channels my-channel))\n"
"           (channels\n"
"            (cons (channel\n"
"                   (name 'my-channel)\n"
"                   (url \"https://my-channel.git\"))\n"
"                  %default-channels)))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37639 guix-git/doc/guix.texi:37653
#, no-wrap
msgid ""
"(service cuirass-service-type\n"
"         (cuirass-configuration\n"
"          (specifications %cuirass-specs)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37643
msgid "To build the @code{linux-libre} package defined by the default Guix channel, one can use the following configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37649
#, no-wrap
msgid ""
"(define %cuirass-specs\n"
"  #~(list (specification\n"
"           (name 'my-linux)\n"
"           (build '(packages \"linux-libre\")))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37658
msgid "The other configuration possibilities, as well as the specification record itself are described in the Cuirass manual (@pxref{Specifications,,, cuirass, Cuirass})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37662
msgid "While information related to build jobs is located directly in the specifications, global settings for the @command{cuirass} process are accessible in other @code{cuirass-configuration} fields."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37663
#, no-wrap
msgid "{Data Type} cuirass-configuration"
msgstr "{Tipo de dados} cuirass-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37665
msgid "Data type representing the configuration of Cuirass."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37667 guix-git/doc/guix.texi:37817
#, no-wrap
msgid "@code{cuirass} (default: @code{cuirass})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37669 guix-git/doc/guix.texi:37819
msgid "The Cuirass package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37670
#, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37672 guix-git/doc/guix.texi:37785
#: guix-git/doc/guix.texi:37832
msgid "Location of the log file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37673
#, no-wrap
msgid "@code{web-log-file} (default: @code{\"/var/log/cuirass-web.log\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37675
msgid "Location of the log file used by the web interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37676
#, no-wrap
msgid "@code{cache-directory} (default: @code{\"/var/cache/cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37678
msgid "Location of the repository cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37679
#, no-wrap
msgid "@code{user} (default: @code{\"cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37681
msgid "Owner of the @code{cuirass} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37682
#, no-wrap
msgid "@code{group} (default: @code{\"cuirass\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37684
msgid "Owner's group of the @code{cuirass} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37685
#, no-wrap
msgid "@code{interval} (default: @code{60})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37688
msgid "Number of seconds between the poll of the repositories followed by the Cuirass jobs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37689
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{15000})"
msgid "@code{ttl} (default: @code{2592000})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:37691
msgid "Duration to keep build results' GC roots alive, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37692
#, fuzzy, no-wrap
msgid "@code{build-expiry} (default: 4 months)"
msgstr "@code{porta} (default: @code{53})"

#. type: table
#: guix-git/doc/guix.texi:37695
msgid "Duration in seconds after which pending builds are canceled.  This helps ensure that the backlog does not grow indefinitely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37696
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{threads} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37698
msgid "Number of kernel threads to use for Cuirass. The default value should be appropriate for most cases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37699
#, fuzzy, no-wrap
msgid "@code{parameters} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37702
msgid "Read parameters from the given @var{parameters} file.  The supported parameters are described here (@pxref{Parameters,,, cuirass, Cuirass})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37703
#, fuzzy, no-wrap
msgid "@code{remote-server} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37706
msgid "A @code{cuirass-remote-server-configuration} record to use the build remote mechanism or @code{#f} to use the default build mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37707
#, no-wrap
msgid "@code{database} (default: @code{\"dbname=cuirass host=/var/run/postgresql\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37712
msgid "Use @var{database} as the database containing the jobs and the past build results. Since Cuirass uses PostgreSQL as a database engine, @var{database} must be a string such as @code{\"dbname=cuirass host=localhost\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37713
#, no-wrap
msgid "@code{port} (default: @code{8081})"
msgstr "@code{port} (padrão: @code{8081})"

#. type: table
#: guix-git/doc/guix.texi:37715
msgid "Port number used by the HTTP server."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37719
msgid "Listen on the network interface for @var{host}.  The default is to accept connections from localhost."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37720
#, no-wrap
msgid "@code{specifications} (default: @code{#~'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37724
msgid "A gexp (@pxref{G-Expressions}) that evaluates to a list of specifications records.  The specification record is described in the Cuirass manual (@pxref{Specifications,,, cuirass, Cuirass})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37725 guix-git/doc/guix.texi:48204
#, no-wrap
msgid "@code{one-shot?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37727
msgid "Only evaluate specifications and build derivations once."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37728
#, no-wrap
msgid "@code{fallback?} (default: @code{#f})"
msgstr "@code{fallback?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37731
msgid "When substituting a pre-built binary fails, fall back to building packages locally."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37734
msgid "Extra options to pass when running the @code{cuirass register} process."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37735
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{web-extra-options} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37737
msgid "Extra options to pass when running the @code{cuirass web} process."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37741
#, fuzzy, no-wrap
msgid "remote build"
msgstr "compilações reproduzíveis"

#. type: subsubheading
#: guix-git/doc/guix.texi:37742
#, no-wrap
msgid "Cuirass remote building"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37745
msgid "Cuirass supports two mechanisms to build derivations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37747
#, fuzzy, no-wrap
msgid "Using the local Guix daemon."
msgstr "Executando o daemon de compilação."

#. type: itemize
#: guix-git/doc/guix.texi:37751
msgid "This is the default build mechanism.  Once the build jobs are evaluated, they are sent to the local Guix daemon.  Cuirass then listens to the Guix daemon output to detect the various build events."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37752
#, fuzzy, no-wrap
msgid "Using the remote build mechanism."
msgstr "Preparando o ambiente de compilação isolado."

#. type: itemize
#: guix-git/doc/guix.texi:37756
msgid "The build jobs are not submitted to the local Guix daemon.  Instead, a remote server dispatches build requests to the connect remote workers, according to the build priorities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37763
msgid "To enable this build mode a @code{cuirass-remote-server-configuration} record must be passed as @code{remote-server} argument of the @code{cuirass-configuration} record.  The @code{cuirass-remote-server-configuration} record is described below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37768
msgid "This build mode scales way better than the default build mode.  This is the build mode that is used on the GNU Guix build farm at @url{https://ci.guix.gnu.org}.  It should be preferred when using Cuirass to build large amount of packages."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37769
#, no-wrap
msgid "{Data Type} cuirass-remote-server-configuration"
msgstr "{Tipo de dados} cuirass-remote-server-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37771
msgid "Data type representing the configuration of the Cuirass remote-server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37773
#, fuzzy, no-wrap
msgid "@code{backend-port} (default: @code{5555})"
msgstr "@code{porta} (default: @code{53})"

#. type: table
#: guix-git/doc/guix.texi:37776
msgid "The TCP port for communicating with @code{remote-worker} processes using ZMQ.  It defaults to @code{5555}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37777
#, fuzzy, no-wrap
msgid "@code{log-port} (default: @code{5556})"
msgstr "@code{porta} (default: @code{53})"

#. type: table
#: guix-git/doc/guix.texi:37779
msgid "The TCP port of the log server.  It defaults to @code{5556}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37780
#, fuzzy, no-wrap
msgid "@code{publish-port} (default: @code{5557})"
msgstr "@code{publish?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37782
msgid "The TCP port of the publish server.  It defaults to @code{5557}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37783
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-server.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: item
#: guix-git/doc/guix.texi:37786
#, fuzzy, no-wrap
msgid "@code{cache} (default: @code{\"/var/cache/cuirass/remote\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:37788
msgid "Use @var{cache} directory to cache build log files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37789
#, fuzzy, no-wrap
msgid "@code{log-expiry} (default: 6 months)"
msgstr "@code{porta} (default: @code{53})"

#. type: table
#: guix-git/doc/guix.texi:37792
msgid "The duration in seconds after which build logs collected by @command{cuirass remote-worker} may be deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37793
#, fuzzy, no-wrap
msgid "@code{trigger-url} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37796
msgid "Once a substitute is successfully fetched, trigger substitute baking at @var{trigger-url}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37801
msgid "If set to false, do not start a publish server and ignore the @code{publish-port} argument.  This can be useful if there is already a standalone publish server standing next to the remote server."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37803 guix-git/doc/guix.texi:37840
#, no-wrap
msgid "private-key"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37812
msgid "At least one remote worker must also be started on any machine of the local network to actually perform the builds and report their status."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37813
#, no-wrap
msgid "{Data Type} cuirass-remote-worker-configuration"
msgstr "{Tipo de dados} cuirass-remote-worker-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37815
msgid "Data type representing the configuration of the Cuirass remote-worker."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37820
#, fuzzy, no-wrap
msgid "@code{workers} (default: @code{1})"
msgstr "@code{workers} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37822
msgid "Start @var{workers} parallel workers."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37826
msgid "Do not use Avahi discovery and connect to the given @code{server} IP address instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37827 guix-git/doc/guix.texi:40236
#, no-wrap
msgid "@code{systems} (default: @code{(list (%current-system))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:37829
msgid "Only request builds for the given @var{systems}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37830
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/cuirass-remote-worker.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: item
#: guix-git/doc/guix.texi:37833
#, fuzzy, no-wrap
msgid "@code{publish-port} (default: @code{5558})"
msgstr "@code{publish?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:37835
msgid "The TCP port of the publish server.  It defaults to @code{5558}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37847
#, no-wrap
msgid "Laminar"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37852
msgid "@uref{https://laminar.ohwg.net/, Laminar} is a lightweight and modular Continuous Integration service.  It doesn't have a configuration web UI instead uses version-controllable configuration files and scripts."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37855
msgid "Laminar encourages the use of existing tools such as bash and cron instead of reinventing them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37856
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "laminar-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37859
msgid "The type of the Laminar service.  Its value must be a @code{laminar-configuration} object, as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37863
msgid "All configuration values have defaults, a minimal configuration to get Laminar running is shown below. By default, the web interface is available on port 8080."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37866
#, no-wrap
msgid "(service laminar-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:37869
#, no-wrap
msgid "{Data Type} laminar-configuration"
msgstr "{Tipo de dados} laminar-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37871
#, fuzzy
msgid "Data type representing the configuration of Laminar."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:37873
#, fuzzy, no-wrap
msgid "@code{laminar} (default: @code{laminar})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37875
#, fuzzy
msgid "The Laminar package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:37876
#, fuzzy, no-wrap
msgid "@code{home-directory} (default: @code{\"/var/lib/laminar\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:37878
msgid "The directory for job configurations and run directories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37879
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{supplementary-groups} (default: @code{()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37881
msgid "Supplementary groups for the Laminar user account."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37882
#, fuzzy, no-wrap
msgid "@code{bind-http} (default: @code{\"*:8080\"})"
msgstr "@code{porta} (default: @code{\"6600\"})"

#. type: table
#: guix-git/doc/guix.texi:37885
msgid "The interface/port or unix socket on which laminard should listen for incoming connections to the web frontend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37886
#, fuzzy, no-wrap
msgid "@code{bind-rpc} (default: @code{\"unix-abstract:laminar\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:37889
msgid "The interface/port or unix socket on which laminard should listen for incoming commands such as build triggers."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37890
#, fuzzy, no-wrap
msgid "@code{title} (default: @code{\"Laminar\"})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37892
msgid "The page title to show in the web frontend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37893
#, fuzzy, no-wrap
msgid "@code{keep-rundirs} (default: @code{0})"
msgstr "@code{workers} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37897
msgid "Set to an integer defining how many rundirs to keep per job.  The lowest-numbered ones will be deleted.  The default is 0, meaning all run dirs will be immediately deleted."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37898
#, fuzzy, no-wrap
msgid "@code{archive-url} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37901
msgid "The web frontend served by laminard will use this URL to form links to artefacts archived jobs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37902
#, fuzzy, no-wrap
msgid "@code{base-url} (default: @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37904
msgid "Base URL to use for links to laminar itself."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:37908
#, no-wrap
msgid "Forgejo Runner"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:37910
#, fuzzy, no-wrap
#| msgid "continuous integration"
msgid "continuous integration, Forgejo"
msgstr "integração contínua"

#. type: cindex
#: guix-git/doc/guix.texi:37911
#, fuzzy, no-wrap
#| msgid "continuous integration"
msgid "Forgejo, continuous integration"
msgstr "integração contínua"

#. type: Plain text
#: guix-git/doc/guix.texi:37916
msgid "The @code{(gnu services ci)} also provides a service for @uref{https://code.forgejo.org/forgejo/runner, Forgejo Runner}, a daemon that connects to an instance of the @uref{https://forgejo.org, Forgejo code collaboration tool} and runs jobs for continuous integration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37919
msgid "A minimal configuration mostly with default values that can be added to the @code{services} field of your operating system looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:37925
#, no-wrap
msgid ""
"(service forgejo-runner-service-type\n"
"         (forgejo-runner-configuration\n"
"          (name \"my-runner\")\n"
"          (labels '(\"guix\" \"linux\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37930
msgid "This provides a @code{forgejo-runner} Shepherd service.  That service will initially fail to start; you will have to manually @dfn{register} the runner against the Forgejo server by running a command like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:37933
#, no-wrap
msgid "herd register forgejo-runner @var{url} @var{token}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37937
#, fuzzy
#| msgid "The available options are as follows:"
msgid "... where the arguments are as follows:"
msgstr "As opções disponíveis são as seguintes:"

#. type: table
#: guix-git/doc/guix.texi:37942
msgid "the URL of the Forgejo server---e.g., @indicateurl{https://codeberg.org};"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:37942 guix-git/doc/guix.texi:43044
#, no-wrap
msgid "token"
msgstr "token"

#. type: table
#: guix-git/doc/guix.texi:37946
msgid "an access token @uref{https://forgejo.org/docs/latest/admin/runner-installation/#standard-registration, provided by the Forgejo server}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37949
msgid "Once registration has succeeded, you can start the runner:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:37953
#, no-wrap
msgid ""
"herd enable forgejo-runner\n"
"herd start forgejo-runner\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37960
msgid "The runner then receives orders from the Forgejo server to execute @dfn{actions}.  Actions are commands and workflows specified by YAML files in the @file{.forgejo/workflows} directory of source code repositories---see @uref{https://forgejo.org/docs/v7.0/user/actions/, the Forgejo Action documentation} for more info."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:37964
msgid "Note that at the moment @code{forgejo-runner-service-type} lets you run only one runner.  Details about the configuration of this service follow."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:37965
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "forgejo-runner-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:37968
#, fuzzy
msgid "This is the service type for Forgejo Runner.  Its value must be a @code{forgejo-runner-configuration} record, documented below."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:37970
#, fuzzy, no-wrap
#| msgid "{Data Type} upower-configuration"
msgid "{Data Type} forgejo-runner-configuration"
msgstr "{Tipo de dados} upower-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:37973
#, fuzzy
#| msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgid "This data type represents the configuration of an instance of @code{forgejo-runner-service-type}.  It contains the following fields:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:37975
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{forgejo-runner})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37977
#, fuzzy
#| msgid "The GPM package to use."
msgid "The Forgejo Runner package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:37978
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{#~(gethostname)})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37981
msgid "Name of the runner as will be shown in the runner management interface of Forgejo."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37982
#, fuzzy, no-wrap
#| msgid "@code{patches} (default: @code{'()})"
msgid "@code{labels} (default: @code{'(\"guix\")})"
msgstr "@code{patches} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:37987
msgid "List of @uref{https://forgejo.org/docs/latest/admin/actions/#choosing-labels, labels} representing the type of environment the runner provides and that actions may refer to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37988
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{capacity} (default: @code{1})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37990
msgid "Number of tasks to be executed concurrently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37991
#, fuzzy, no-wrap
#| msgid "@code{port} (default: @code{3306})"
msgid "@code{timeout} (default: @code{(* 3 3600)})"
msgstr "@code{porta} (default: @code{3306})"

#. type: table
#: guix-git/doc/guix.texi:37993
msgid "Maximum duration of a job, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37994
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{fetch-timeout} (default: @code{5})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:37997
msgid "Maximum duration for fetching the job from the Forgejo server, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:37998
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{fetch-interval} (default: @code{2})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38000
msgid "Interval (in seconds) for fetching the job from the Forgejo server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38001
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{report-interval} (default: @code{1})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38004
msgid "Interval (in seconds) for reporting the job status and log to the Forgejo server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38005
#, fuzzy, no-wrap
msgid "@code{data-directory} (default: @code{\"/var/lib/forgejo-runner\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:38008
msgid "Directory where @command{forgejo-runner} will store persistent data such as its configuration and access token."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38009
#, fuzzy, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/forgejo-runner\"})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38011
msgid "Directory where @command{forgejo-runner} stores cached data."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38018
#, no-wrap
msgid "power-profiles-daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38019
#, no-wrap
msgid "Power Profiles Daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38024
msgid "The @code{(gnu services pm)} module provides a Guix service definition for the Linux Power Profiles Daemon, which makes power profiles handling available over D-Bus."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38027
msgid "The available profiles consist of the default @samp{balanced} mode, a @samp{power-saver} mode and on supported systems a @samp{performance} mode."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:38031
msgid "The @code{power-profiles-daemon} conflicts with other power management tools like @code{tlp}. Using both together is not recommended."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38033
#, fuzzy, no-wrap
msgid "power-profiles-daemon-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:38037
msgid "This is the service type for the @uref{https://gitlab.freedesktop.org/upower/power-profiles-daemon/, Power Profiles Daemon}.  The value for this service is a @code{power-profiles-daemon-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38040
msgid "To enable the Power Profiles Daemon with default configuration add this line to your services:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38043
#, fuzzy, no-wrap
msgid "(service power-profiles-daemon-service-type)\n"
msgstr "(service file-database-service-type)\n"

#. type: deftp
#: guix-git/doc/guix.texi:38046
#, no-wrap
msgid "{Data Type} power-profiles-daemon-configuration"
msgstr "{Tipo de dados} power-profiles-daemon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:38048
#, fuzzy
msgid "Data type representing the configuration of @code{power-profiles-daemon-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:38050
#, fuzzy, no-wrap
msgid "@code{power-profiles-daemon} (default: @code{power-profiles-daemon}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38052
#, fuzzy
#| msgid "Package Modules"
msgid "Package object of power-profiles-daemon."
msgstr "Módulos de pacote"

#. type: cindex
#: guix-git/doc/guix.texi:38057
#, no-wrap
msgid "tlp"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38058
#, no-wrap
msgid "power management with TLP"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38059
#, no-wrap
msgid "TLP daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38063
msgid "The @code{(gnu services pm)} module provides a Guix service definition for the Linux power management tool TLP."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38069
msgid "TLP enables various powersaving modes in userspace and kernel.  Contrary to @code{upower-service}, it is not a passive, monitoring tool, as it will apply custom settings each time a new power source is detected.  More information can be found at @uref{https://linrunner.de/en/tlp/tlp.html, TLP home page}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38070
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "tlp-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:38074
msgid "The service type for the TLP tool.  The default settings are optimised for battery life on most systems, but you can tweak them to your heart's content by adding a valid @code{tlp-configuration}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38079
#, no-wrap
msgid ""
"(service tlp-service-type\n"
"         (tlp-configuration\n"
"          (cpu-scaling-governor-on-ac (list \"performance\"))\n"
"          (sched-powersave-on-bat? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38087
msgid "Each parameter definition is preceded by its type; for example, @samp{boolean foo} indicates that the @code{foo} parameter should be specified as a boolean.  Types starting with @code{maybe-} denote parameters that won't show up in TLP config file when their value is left unset, or is explicitly set to the @code{%unset-value} value."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38097
msgid "Available @code{tlp-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38098
#, no-wrap
msgid "{@code{tlp-configuration} parameter} package tlp"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38100
msgid "The TLP package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38103
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean tlp-enable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38105
msgid "Set to true if you wish to enable TLP."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38110
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string tlp-default-mode"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38113
msgid "Default mode when no power supply can be detected.  Alternatives are AC and BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38115
msgid "Defaults to @samp{\"AC\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38118
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer disk-idle-secs-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38121
msgid "Number of seconds Linux kernel has to wait after the disk goes idle, before syncing on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38126
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer disk-idle-secs-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38128
msgid "Same as @code{disk-idle-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38130
msgid "Defaults to @samp{2}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38133
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer max-lost-work-secs-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38135
msgid "Dirty pages flushing periodicity, expressed in seconds."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38137 guix-git/doc/guix.texi:38360
#: guix-git/doc/guix.texi:41419 guix-git/doc/guix.texi:41427
msgid "Defaults to @samp{15}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38140
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer max-lost-work-secs-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38142
msgid "Same as @code{max-lost-work-secs-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38144
msgid "Defaults to @samp{60}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38147
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list cpu-scaling-governor-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38151
msgid "CPU frequency scaling governor on AC mode.  With intel_pstate driver, alternatives are powersave and performance.  With acpi-cpufreq driver, alternatives are ondemand, powersave, performance and conservative."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38156
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list cpu-scaling-governor-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38158
msgid "Same as @code{cpu-scaling-governor-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38163
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-min-freq-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38165
msgid "Set the min available frequency for the scaling governor on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38170
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-max-freq-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38172
msgid "Set the max available frequency for the scaling governor on AC."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38177
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-min-freq-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38179
msgid "Set the min available frequency for the scaling governor on BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38184
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-scaling-max-freq-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38186
msgid "Set the max available frequency for the scaling governor on BAT."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38191
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-min-perf-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38194
msgid "Limit the min P-state to control the power dissipation of the CPU, in AC mode.  Values are stated as a percentage of the available performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38199
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-max-perf-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38202
msgid "Limit the max P-state to control the power dissipation of the CPU, in AC mode.  Values are stated as a percentage of the available performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38207
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-min-perf-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38209
msgid "Same as @code{cpu-min-perf-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38214
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer cpu-max-perf-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38216
msgid "Same as @code{cpu-max-perf-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38221
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean cpu-boost-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38223
msgid "Enable CPU turbo boost feature on AC mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38228
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean cpu-boost-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38230
msgid "Same as @code{cpu-boost-on-ac?} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38235
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean sched-powersave-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38238
msgid "Allow Linux kernel to minimize the number of CPU cores/hyper-threads used under light load conditions."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38243
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean sched-powersave-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38245
msgid "Same as @code{sched-powersave-on-ac?} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38250
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean nmi-watchdog?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38252
msgid "Enable Linux kernel NMI watchdog."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38257
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string phc-controls"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38260
msgid "For Linux kernels with PHC patch applied, change CPU voltages.  An example value would be @samp{\"F:V F:V F:V F:V\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38265
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string energy-perf-policy-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38268
msgid "Set CPU performance versus energy saving policy on AC@.  Alternatives are performance, normal, powersave."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38270 guix-git/doc/guix.texi:38368
#: guix-git/doc/guix.texi:38426
msgid "Defaults to @samp{\"performance\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38273
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string energy-perf-policy-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38275
msgid "Same as @code{energy-perf-policy-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38277 guix-git/doc/guix.texi:38375
msgid "Defaults to @samp{\"powersave\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38280
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disks-devices"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38282
msgid "Hard disk devices."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38285
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disk-apm-level-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38287
msgid "Hard disk advanced power management level."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38290
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list disk-apm-level-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38292
msgid "Same as @code{disk-apm-bat} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38295
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-spindown-timeout-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38298
msgid "Hard disk spin down timeout.  One value has to be specified for each declared hard disk."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38303
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-spindown-timeout-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38305
msgid "Same as @code{disk-spindown-timeout-on-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38310
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list disk-iosched"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38314
msgid "Select IO scheduler for disk devices.  One value has to be specified for each declared hard disk.  Example alternatives are cfq, deadline and noop."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38319
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string sata-linkpwr-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38322
msgid "SATA aggressive link power management (ALPM) level.  Alternatives are min_power, medium_power, max_performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38324
msgid "Defaults to @samp{\"max_performance\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38327
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string sata-linkpwr-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38329
msgid "Same as @code{sata-linkpwr-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38331
msgid "Defaults to @samp{\"min_power\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38334
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string sata-linkpwr-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38336
msgid "Exclude specified SATA host devices for link power management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38341
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-on-off-boolean ahci-runtime-pm-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38344
msgid "Enable Runtime Power Management for AHCI controller and disks on AC mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38349
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-on-off-boolean ahci-runtime-pm-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38351
msgid "Same as @code{ahci-runtime-pm-on-ac} on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38356
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer ahci-runtime-pm-timeout"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38358
msgid "Seconds of inactivity before disk is suspended."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38363
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string pcie-aspm-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38366
msgid "PCI Express Active State Power Management level.  Alternatives are default, performance, powersave."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38371
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string pcie-aspm-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38373
msgid "Same as @code{pcie-aspm-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38378
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer start-charge-thresh-bat0"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38380
msgid "Percentage when battery 0 should begin charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38385
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer stop-charge-thresh-bat0"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38387
msgid "Percentage when battery 0 should stop charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38392
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer start-charge-thresh-bat1"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38394
msgid "Percentage when battery 1 should begin charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38399
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-non-negative-integer stop-charge-thresh-bat1"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38401
msgid "Percentage when battery 1 should stop charging.  Only supported on some laptops."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38406
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-power-profile-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38409
msgid "Radeon graphics clock speed level.  Alternatives are low, mid, high, auto, default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38411
msgid "Defaults to @samp{\"high\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38414
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-power-profile-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38416
msgid "Same as @code{radeon-power-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38418
msgid "Defaults to @samp{\"low\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38421
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-state-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38424
msgid "Radeon dynamic power management method (DPM).  Alternatives are battery, performance."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38429
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-state-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38431
msgid "Same as @code{radeon-dpm-state-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38433
msgid "Defaults to @samp{\"battery\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38436
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-perf-level-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38438
msgid "Radeon DPM performance level.  Alternatives are auto, low, high."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38440 guix-git/doc/guix.texi:38447
#: guix-git/doc/guix.texi:38521
msgid "Defaults to @samp{\"auto\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38443
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string radeon-dpm-perf-level-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38445
msgid "Same as @code{radeon-dpm-perf-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38450
#, no-wrap
msgid "{@code{tlp-configuration} parameter} on-off-boolean wifi-pwr-on-ac?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38452
msgid "Wifi power saving mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38457
#, no-wrap
msgid "{@code{tlp-configuration} parameter} on-off-boolean wifi-pwr-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38459
msgid "Same as @code{wifi-power-ac?} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38464
#, no-wrap
msgid "{@code{tlp-configuration} parameter} y-n-boolean wol-disable?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38466
msgid "Disable wake on LAN."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38471
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer sound-power-save-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38474
msgid "Timeout duration in seconds before activating audio power saving on Intel HDA and AC97 devices.  A value of 0 disables power saving."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38479
#, no-wrap
msgid "{@code{tlp-configuration} parameter} non-negative-integer sound-power-save-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38481
msgid "Same as @code{sound-powersave-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38486
#, no-wrap
msgid "{@code{tlp-configuration} parameter} y-n-boolean sound-power-save-controller?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38488
msgid "Disable controller in powersaving mode on Intel HDA devices."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38493
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean bay-poweroff-on-bat?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38497
msgid "Enable optical drive in UltraBay/MediaBay on BAT mode.  Drive can be powered on again by releasing (and reinserting) the eject lever or by pressing the disc eject button on newer models."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38502
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string bay-device"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38504
msgid "Name of the optical drive device to power off."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38506
msgid "Defaults to @samp{\"sr0\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38509
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string runtime-pm-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38512
msgid "Runtime Power Management for PCI(e) bus devices.  Alternatives are on and auto."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38514
msgid "Defaults to @samp{\"on\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38517
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string runtime-pm-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38519
msgid "Same as @code{runtime-pm-ac} but on BAT mode."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38524
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean runtime-pm-all?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38527
msgid "Runtime Power Management for all PCI(e) bus devices, except blacklisted ones."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38532
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-space-separated-string-list runtime-pm-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38534
msgid "Exclude specified PCI(e) device addresses from Runtime Power Management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38539
#, no-wrap
msgid "{@code{tlp-configuration} parameter} space-separated-string-list runtime-pm-driver-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38542
msgid "Exclude PCI(e) devices assigned to the specified drivers from Runtime Power Management."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38545
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean usb-autosuspend?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38547
msgid "Enable USB autosuspend feature."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38552
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string usb-blacklist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38554
msgid "Exclude specified devices from USB autosuspend."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38559
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean usb-blacklist-wwan?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38561
msgid "Exclude WWAN devices from USB autosuspend."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38566
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-string usb-whitelist"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38569
msgid "Include specified devices into USB autosuspend, even if they are already excluded by the driver or via @code{usb-blacklist-wwan?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38574
#, no-wrap
msgid "{@code{tlp-configuration} parameter} maybe-boolean usb-autosuspend-disable-on-shutdown?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38576
msgid "Enable USB autosuspend before shutdown."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38581
#, no-wrap
msgid "{@code{tlp-configuration} parameter} boolean restore-device-state-on-startup?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38584
msgid "Restore radio device state (bluetooth, wifi, wwan) from previous shutdown on system startup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38589
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string cpu-energy-perf-policy-on-ac"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38593
msgid "Set CPU energy/performance policy when on AC mode.  Possible values, in order of increasing power saving, are performance, balance_performance, default, balance_power and power."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38596
#, no-wrap
msgid "{@code{tlp-configuration} parameter} string cpu-energy-perf-policy-on-bat"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38600
msgid "Set CPU energy/performance policy when on BAT mode.  Possible values, in order of increasing power saving, are performance, balance_performance, default, balance_power and power."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38603
#, no-wrap
msgid "thermald"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38604
#, no-wrap
msgid "CPU frequency scaling with thermald"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38605
#, no-wrap
msgid "Thermald daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38609
msgid "The @code{(gnu services pm)} module provides an interface to thermald, a CPU frequency scaling service which helps prevent overheating."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38610
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "thermald-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:38615
msgid "This is the service type for @uref{https://01.org/linux-thermal-daemon/, thermald}, the Linux Thermal Daemon, which is responsible for controlling the thermal state of processors and preventing overheating."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38617
#, no-wrap
msgid "{Data Type} thermald-configuration"
msgstr "{Tipo de dados} thermald-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:38619
msgid "Data type representing the configuration of @code{thermald-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38621
#, fuzzy, no-wrap
#| msgid "@code{deny?} (default: @code{#f})"
msgid "@code{adaptive?} (default: @code{#f})"
msgstr "@code{deny?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38624
msgid "Use @acronym{DPTF, Dynamic Power and Thermal Framework} adaptive tables when present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38625
#, no-wrap
msgid "@code{ignore-cpuid-check?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38627
msgid "Ignore cpuid check for supported CPU models."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38628
#, no-wrap
msgid "@code{thermald} (default: @var{thermald})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38630
msgid "Package object of thermald."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:38631 guix-git/doc/guix.texi:38633
#, no-wrap
msgid "PowerTOP"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:38632
#, no-wrap
msgid "power consumption tuning with PowerTOP"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38639
msgid "The @code{(gnu services pm)} module also provides a service definition for @uref{https://01.org/powertop/, PowerTOP}, a power consumption analysis and tuning tool.  When started, it tunes Linux kernel settings to reduce power consumption."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38640
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "powertop-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:38643
msgid "The service type for PowerTOP.  No configuration is necessary.  When the service starts, it executes @code{powertop --auto-tune}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38646
#, fuzzy, no-wrap
msgid "(service powertop-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: table
#: guix-git/doc/guix.texi:38650
#, fuzzy
msgid "Available @code{powertop-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: deftypevr
#: guix-git/doc/guix.texi:38651
#, no-wrap
msgid "{@code{powertop-configuration} parameter} package powertop"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:38654
msgid "The PowerTOP package.  Defaults to @code{powertop} in the @code{(gnu packages linux)} module"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:38666
msgid "The @code{(gnu services power)} module provides a service definition for @uref{http://www.apcupsd.org/, apcupsd}, a utility to interact with @acronym{APC, APC by Schneider Electric or formerly American Power Conversion Corporation} @acronym{UPS, Uninterruptible Power Supply} devices.  Apcupsd also works with some @acronym{OEM, Original Equipment Manufacturer}-branded products manufactured by APC."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38667
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "apcupsd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:38673
msgid "The service type for apcupsd.  For USB UPSes no configuration is necessary, however tweaking some fields to better suit your needs might be desirable.  The defaults are taken from the upstream configuration and they are not very conservative (for example, the default @code{battery-level} of 5% may be considered too low by some)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:38676
msgid "The default event handlers do send emails, read more in @ref{apcupsd-event-handlers}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:38679
#, fuzzy, no-wrap
msgid "(service apcupsd-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: deftp
#: guix-git/doc/guix.texi:38682
#, fuzzy, no-wrap
#| msgid "{Data Type} pcscd-configuration"
msgid "{Data Type} apcupsd-configuration"
msgstr "{Tipo de dados} pcscd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:38685
#, fuzzy
msgid "Available @code{apcupsd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:38687
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{apcupsd} (default: @code{apcupsd}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38689
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{apcupsd} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:38690
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-service-name} (default: @code{apcupsd}) (type: symbol)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:38693
msgid "The name of the shepherd service.  You can add the service multiple times with different names to manage multiple UPSes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38694 guix-git/doc/guix.texi:44397
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{auto-start?} (default: @code{#t}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38696
#, fuzzy
msgid "Should the shepherd service auto-start?"
msgstr "guix-publish-service-type"

#. type: item
#: guix-git/doc/guix.texi:38697
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/apcupsd.pid\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38699
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The file name of the pid file."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:38700
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{debug-level} (default: @code{0}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38704
msgid "The logging verbosity.  Bigger number means more logs.  The source code uses up to @code{300} as debug level value, so a value of @code{999} seems reasonable to enable all the logs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38705
#, fuzzy, no-wrap
msgid "@code{run-dir} (default: @code{\"/var/run/apcupsd\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38708
msgid "The directory containing runtime information.  You need to change this if you desire to run multiple instances of the daemon."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38713
msgid "Use this to give your UPS a name in log files and such.  This is particularly useful if you have multiple UPSes.  This does not set the EEPROM.  It should be 8 characters or less."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38714
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{cable} (default: @code{usb}) (type: enum-cable)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38718
msgid "The type of a cable connecting the UPS to your computer.  Possible generic choices are @code{'simple}, @code{'smart}, @code{'ether} and @code{'usb}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38725
msgid "Alternatively, a specific cable model number may be used: @code{'940-0119A}, @code{'940-0127A}, @code{'940-0128A}, @code{'940-0020B}, @code{'940-0020C}, @code{'940-0023A}, @code{'940-0024B}, @code{'940-0024C}, @code{'940-1524C}, @code{'940-0024G}, @code{'940-0095A}, @code{'940-0095B}, @code{'940-0095C}, @code{'940-0625A}, @code{'M-04-02-2000}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38726
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{type} (default: @code{usb}) (type: enum-type)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38728
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The type of the UPS you have."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:38730 guix-git/doc/guix.texi:38769
#, no-wrap
msgid "apcsmart"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38733
msgid "Newer serial character device, appropriate for SmartUPS models using a serial cable (not an USB)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38734 guix-git/doc/guix.texi:38772
#, no-wrap
msgid "usb"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38736
msgid "Most new UPSes are an USB."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38737 guix-git/doc/guix.texi:38776
#, fuzzy, no-wrap
#| msgid "etc"
msgid "net"
msgstr "etc"

#. type: table
#: guix-git/doc/guix.texi:38741
msgid "Network link to a master apcupsd through apcupsd's Network Information Server.  This is used if the UPS powering your computer is connected to a different computer for monitoring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38742 guix-git/doc/guix.texi:38779
#, no-wrap
msgid "snmp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38744
msgid "SNMP network link to an SNMP-enabled UPS device."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38745 guix-git/doc/guix.texi:38787
#, no-wrap
msgid "netsnmp"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38749
msgid "Same as the SNMP above but requires use of the net-snmp library.  Unless you have a specific need for this old driver, you should use the @code{'snmp} instead."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38750 guix-git/doc/guix.texi:38790
#, no-wrap
msgid "dumb"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38752
msgid "An old serial character device for use with simple-signaling UPSes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38753 guix-git/doc/guix.texi:38793
#, no-wrap
msgid "pcnet"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38756
msgid "A PowerChute Network Shutdown protocol which can be used as an alternative to an SNMP with the AP9617 family of smart slot cards."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38757 guix-git/doc/guix.texi:38801
#, no-wrap
msgid "modbus"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38760
msgid "A serial device for use with newest SmartUPS models supporting the MODBUS protocol."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38763
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{device} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38767
msgid "For USB UPSes, usually you want to set this to an empty string (the default).  For other UPS types, you must specify an appropriate port or address."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38771 guix-git/doc/guix.texi:38792
msgid "Set to the appropriate @file{/dev/tty**} device."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38775
msgid "A null string setting enables auto-detection, which is the best choice for most installations."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38778
msgid "Set to @code{@var{hostname}:@var{port}}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38786
msgid "Set to @code{@var{hostname}:@var{port}:@var{vendor}:@var{community}}.  The @var{hostname} is the ip address or hostname of the UPS on the network.  The @var{vendor} can be can be \"APC\" or \"APC_NOTRAP\".  \"APC_NOTRAP\" will disable SNMP trap catching; you usually want \"APC\".  The @var{port} is usually 161.  The @var{community} is usually \"private\"."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38789
msgid "Same as the @code{'snmp}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38800
msgid "Set to @code{@var{ipaddr}:@var{username}:@var{passphrase}:@var{port}}.  The @var{ipaddr} is the IP address of the UPS management card.  The @var{username} and the @var{passphrase} are the credentials for which the card has been configured.  The @var{port} is the port number on which to listen for messages from the UPS, normally 3052.  If this parameter is empty or missing, the default of 3052 will be used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38804
msgid "Set to the appropriate @file{/dev/tty**} device.  You can also leave it empty for MODBUS over USB or set to the serial number of the UPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38807
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{poll-time} (default: @code{60}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38813
msgid "The interval (in seconds) at which apcupsd polls the UPS for status.  This setting applies both to directly-attached UPSes (apcsmart, usb, dumb) and networked UPSes (net, snmp).  Lowering this setting will improve the apcupsd's responsiveness to certain events at the cost of higher CPU utilization."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38814
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{on-batery-delay} (default: @code{6}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38819
msgid "The time in seconds from when a power failure is detected until we react to it with an onbattery event.  The @code{'powerout} event will be triggered immediately when a power failure is detected.  However, the @code{'onbattery} event will be trigger only after this delay."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38820
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{battery-level} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38824
msgid "If during a power failure, the remaining battery percentage (as reported by the UPS) is below or equal to this value, the apcupsd will initiate a system shutdown."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:38829 guix-git/doc/guix.texi:38840
#: guix-git/doc/guix.texi:38851
msgid "@code{battery-level}, @code{remaining-minutes}, and @code{timeout} work in a conjunction, so the first that occurs will cause the initation of a shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38831
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{remaining-minutes} (default: @code{3}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38835
msgid "If during a power failure, the remaining runtime in minutes (as calculated internally by the UPS) is below or equal to this value, apcupsd will initiate a system shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38842
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{timeout} (default: @code{0}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38846
msgid "If during a power failure, the UPS has run on batteries for this many seconds or longer, apcupsd will initiate a system shutdown.  The value of 0 disables this timer."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38853
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{annoy-interval} (default: @code{300}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38856
msgid "The time in seconds between annoying users (via the @code{'annoyme} event) to sign off prior to system shutdown.  0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38857
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{annoy-delay} (default: @code{60}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38860
msgid "The initial delay in seconds after a power failure before warning users to get off the system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38861
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{no-logon} (default: @code{disable}) (type: enum-no-logon)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38864
msgid "The condition which determines when users are prevented from logging in during a power failure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38865
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{kill-delay} (default: @code{0}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38870
msgid "If this is non-zero, the apcupsd will continue running after a shutdown has been requested, and after the specified time in seconds attempt to kill the power.  This is for use on systems where apcupsd cannot regain control after a shutdown."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38871
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{net-server} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38873
msgid "If enabled, a network information server process will be started."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38874
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{net-server-ip} (default: @code{\"127.0.0.1\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38877
msgid "An IP address on which the NIS server will listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38878
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{net-server-port} (default: @code{3551}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38880
msgid "An IP port on which the NIS server will listen for incoming connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38881
#, fuzzy, no-wrap
msgid "@code{net-server-events-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38884
msgid "If you want the last few EVENTS to be available over the network by the network information server, you must set this to a file name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38885
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{net-server-events-file-max-size} (default: @code{10}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38887
msgid "The maximum size of the events file in kilobytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38888
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{class} (default: @code{standalone}) (type: enum-class)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:38890
msgid "Normally standalone unless you share an UPS using an APC ShareUPS card."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38891
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{mode} (default: @code{disable}) (type: enum-mode)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38893
msgid "Normally disable unless you share an UPS using an APC ShareUPS card."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38894
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{stat-time} (default: @code{0}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38897
msgid "The time interval in seconds between writing the status file, 0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38898
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log-stats} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38900
msgid "Also write the stats as a logs.  This generates a lot of output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38901
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{data-time} (default: @code{0}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38904
msgid "The time interval in seconds between writing the data records to the log file, 0 disables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38905
#, fuzzy, no-wrap
msgid "@code{facility} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38907
msgid "The logging facility for the syslog."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38908
#, fuzzy, no-wrap
msgid "@code{event-handlers} (type: apcupsd-event-handlers)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38910
msgid "Handlers for events produced by apcupsd."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:38915
msgid "apcupsd-event-handlers"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38915
#, fuzzy, no-wrap
#| msgid "{Data Type} dicod-handler"
msgid "{Data Type} apcupsd-event-handlers"
msgstr "{Tipo de dados} dicod-handler"

#. type: deftp
#: guix-git/doc/guix.texi:38918
msgid "For a description of the events please refer to @samp{man 8 apccontrol}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38922
msgid "Each handler shall be a gexp.  It is spliced into the control script for the daemon.  In addition to the standard Guile programming environment, the following procedures and variables are also available:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38924
#, fuzzy, no-wrap
#| msgid "config"
msgid "conf"
msgstr "config"

#. type: table
#: guix-git/doc/guix.texi:38926
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Variable containing the file name of the configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: item
#: guix-git/doc/guix.texi:38927
#, no-wrap
msgid "powerfail-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38929
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Variable containing the file name of the powerfail file."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:38930
#, fuzzy, no-wrap
#| msgid "mpd"
msgid "cmd"
msgstr "mpd"

#. type: table
#: guix-git/doc/guix.texi:38932
msgid "The event currently being handled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38935
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "The name of the UPS as specified in the configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: item
#: guix-git/doc/guix.texi:38936
#, no-wrap
msgid "connected?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38941
msgid "Is @code{#t} if @command{apcupsd} is connected to the UPS via a serial port (or a USB port).  In most configurations, this will be the case.  In the case of a Slave machine where apcupsd is not directly connected to the UPS, this value will be @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38942
#, no-wrap
msgid "powered?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38946
msgid "Is @code{#t} if the computer on which @command{apcupsd} is running is powered by the UPS and @code{#f} if not.  At the moment, this value is unimplemented and always @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38947
#, no-wrap
msgid "(err @var{fmt} @var{args...})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38949
msgid "Wrapper around @code{format} outputting to @code{(current-error-port)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38950
#, no-wrap
msgid "(wall @var{fmt} @var{args...})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38952
msgid "Wrapper around @code{format} outputting via @command{wall}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38953
#, fuzzy, no-wrap
#| msgid "(append @var{package}@dots{})"
msgid "(apcupsd @var{args...})"
msgstr "(append @var{pacote}@dots{})"

#. type: table
#: guix-git/doc/guix.texi:38956
msgid "Call @command{apcupsd} while passing the correct configuration file and all the arguments."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38957
#, no-wrap
msgid "(mail-to-root @var{subject} @var{body})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:38961
msgid "Send an email to the local administrator.  This procedure assumes the @command{sendmail} is located at @command{/run/privileged/bin/sendmail} (as would be the case with @code{opensmtpd-service-type})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:38965
#, fuzzy
msgid "Available @code{apcupsd-event-handlers} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:38967
#, fuzzy, no-wrap
msgid "@code{modules} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38969
msgid "Additional modules to import into the generated handler script."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38970
#, fuzzy, no-wrap
msgid "@code{killpower} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38972
msgid "The handler for the killpower event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38973
#, fuzzy, no-wrap
msgid "@code{commfailure} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38975 guix-git/doc/guix.texi:38978
msgid "The handler for the commfailure event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38976
#, fuzzy, no-wrap
msgid "@code{commok} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:38979
#, fuzzy, no-wrap
msgid "@code{powerout} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38981
msgid "The handler for the powerout event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38982
#, fuzzy, no-wrap
msgid "@code{onbattery} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38984
msgid "The handler for the onbattery event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38985
#, fuzzy, no-wrap
msgid "@code{offbattery} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38987
msgid "The handler for the offbattery event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38988
#, fuzzy, no-wrap
msgid "@code{mainsback} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38990
msgid "The handler for the mainsback event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38991
#, fuzzy, no-wrap
msgid "@code{failing} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38993
msgid "The handler for the failing event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:38994
#, fuzzy, no-wrap
msgid "@code{timeout} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38996
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The handler for the timeout event."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:38997
#, fuzzy, no-wrap
msgid "@code{loadlimit} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:38999
msgid "The handler for the loadlimit event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39000
#, fuzzy, no-wrap
msgid "@code{runlimit} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39002
msgid "The handler for the runlimit event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39003
#, fuzzy, no-wrap
msgid "@code{doreboot} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39005
msgid "The handler for the doreboot event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39006
#, fuzzy, no-wrap
msgid "@code{doshutdown} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39008
msgid "The handler for the doshutdown event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39009
#, fuzzy, no-wrap
msgid "@code{annoyme} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39011
msgid "The handler for the annoyme event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39012
#, fuzzy, no-wrap
msgid "@code{emergency} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39014
msgid "The handler for the emergency event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39015
#, fuzzy, no-wrap
msgid "@code{changeme} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39017
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The handler for the changeme event."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:39018
#, fuzzy, no-wrap
msgid "@code{remotedown} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39020
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The handler for the remotedown event."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:39021
#, fuzzy, no-wrap
msgid "@code{startselftest} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39023
msgid "The handler for the startselftest event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39024
#, fuzzy, no-wrap
msgid "@code{endselftest} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39026
msgid "The handler for the endselftest event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39027
#, fuzzy, no-wrap
msgid "@code{battdetach} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39029
msgid "The handler for the battdetach event."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39030
#, fuzzy, no-wrap
msgid "@code{battattach} (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39032
msgid "The handler for the battattach event."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39041
msgid "The @code{(gnu services audio)} module provides a service to start MPD (the Music Player Daemon)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39042
#, no-wrap
msgid "mpd"
msgstr "mpd"

#. type: subsubheading
#: guix-git/doc/guix.texi:39043
#, no-wrap
msgid "Music Player Daemon"
msgstr "Daemon do reprodutor de música"

#. type: Plain text
#: guix-git/doc/guix.texi:39048
msgid "The Music Player Daemon (MPD) is a service that can play music while being controlled from the local machine or over the network by a variety of clients."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39056
msgid "The following example shows the simplest configuration to locally expose, via PulseAudio, a music collection kept at @file{/srv/music}, with @command{mpd} running as the default @samp{mpd} user.  This user will spawn its own PulseAudio daemon, which may compete for the sound card access with that of your own user.  In this configuration, you may have to stop the playback of your user audio applications to hear MPD's output and vice-versa."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39061
#, no-wrap
msgid ""
"(service mpd-service-type\n"
"         (mpd-configuration\n"
"          (music-directory \"/srv/music\")))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:39068
msgid "The music directory must be readable to the MPD user, by default, @samp{mpd}.  Permission problems will be reported via @samp{Permission denied} errors in the MPD logs, which appear in @file{/var/log/messages} by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39072
msgid "Most MPD clients will trigger a database update upon connecting, but you can also use the @code{update} action do to so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:39075
#, no-wrap
msgid "herd update mpd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39079
msgid "All the MPD configuration fields are documented below, and a more complex example follows."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39080
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mpd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:39082
msgid "The service type for @command{mpd}"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39085
#, no-wrap
msgid "{Data Type} mpd-configuration"
msgstr "{Tipo de dados} mpd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:39087
#, fuzzy
msgid "Available @code{mpd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:39089
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{mpd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39091
#, fuzzy
#| msgid "The GPM package to use."
msgid "The MPD package."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:39092
#, fuzzy, no-wrap
msgid "@code{user} (type: user-account)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39094
msgid "The user to run mpd as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39095
#, fuzzy, no-wrap
msgid "@code{group} (type: user-group)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39097
msgid "The group to run mpd as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39099
msgid "The default @code{%mpd-group} is a system group with name ``mpd''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39104
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{environment-variables} (default: @code{'(\"PULSE_CLIENTCONFIG=/etc/pulse/client.conf\" \"PULSE_CONFIG=/etc/pulse/daemon.conf\")}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39106
#, fuzzy
#| msgid "Preparing the isolated build environment."
msgid "A list of strings specifying environment variables."
msgstr "Declarando o Ambiente Doméstico"

#. type: table
#: guix-git/doc/guix.texi:39111
msgid "The location of the log file.  Unless specified, logs are sent to the local syslog daemon.  Alternatively, a log file name can be specified, for example @file{/var/log/mpd.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39112
#, fuzzy, no-wrap
msgid "@code{log-level} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39116
msgid "Suppress any messages below this threshold.  The available values, in decreasing order of verbosity, are: @code{verbose}, @code{info}, @code{notice}, @code{warning} and @code{error}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39117
#, fuzzy, no-wrap
msgid "@code{music-directory} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39119 guix-git/doc/guix.texi:39122
msgid "The directory to scan for music files."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39120
#, fuzzy, no-wrap
msgid "@code{music-dir} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:39123
#, fuzzy, no-wrap
msgid "@code{playlist-directory} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39125 guix-git/doc/guix.texi:39128
msgid "The directory to store playlists."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39126
#, fuzzy, no-wrap
msgid "@code{playlist-dir} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:39129
#, fuzzy, no-wrap
msgid "@code{db-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39132
msgid "The location of the music database.  When left unspecified, @file{~/.cache/db} is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39133
#, fuzzy, no-wrap
msgid "@code{state-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39135
msgid "The location of the file that stores current MPD's state."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39136
#, fuzzy, no-wrap
msgid "@code{sticker-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39138
msgid "The location of the sticker database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39139
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{default-port} (default: @code{6600}) (type: maybe-port)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39141
msgid "The default port to run mpd on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39142
#, fuzzy, no-wrap
msgid "@code{endpoints} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39148
msgid "The addresses that mpd will bind to.  A port different from @var{default-port} may be specified, e.g.  @code{localhost:6602} and IPv6 addresses must be enclosed in square brackets when a different port is used.  To use a Unix domain socket, an absolute path or a path starting with @code{~} can be specified here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39149
#, fuzzy, no-wrap
msgid "@code{address} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39152
msgid "The address that mpd will bind to.  To use a Unix domain socket, an absolute path can be specified here."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39153
#, fuzzy, no-wrap
msgid "@code{database} (type: maybe-mpd-plugin)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39155
#, fuzzy
msgid "MPD database plugin configuration."
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:39156
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{partitions} (default: @code{'()}) (type: list-of-mpd-partition)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39158
#, fuzzy
#| msgid "Derivations"
msgid "List of MPD \"partitions\"."
msgstr "Derivações"

#. type: item
#: guix-git/doc/guix.texi:39159
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{neighbors} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39161
msgid "List of MPD neighbor plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39162
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{inputs} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39164
msgid "List of MPD input plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39165
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{archive-plugins} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39167
msgid "List of MPD archive plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39168
#, fuzzy, no-wrap
msgid "@code{auto-update?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39171
msgid "Whether to automatically update the music database when files are changed in the @var{music-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39172
#, fuzzy, no-wrap
msgid "@code{input-cache-size} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39174
msgid "MPD input cache size."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39175
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{decoders} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39177
msgid "List of MPD decoder plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39178
#, fuzzy, no-wrap
msgid "@code{resampler} (type: maybe-mpd-plugin)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39180
#, fuzzy
#| msgid "git configuration"
msgid "MPD resampler plugin configuration."
msgstr "Configuração do git"

#. type: item
#: guix-git/doc/guix.texi:39181
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{filters} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39183
msgid "List of MPD filter plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39184
#, fuzzy, no-wrap
msgid "@code{outputs} (type: list-of-mpd-plugin-or-output)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:39187
msgid "The audio outputs that MPD can use.  By default this is a single output using pulseaudio."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39188
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{playlist-plugins} (default: @code{'()}) (type: list-of-mpd-plugin)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39190
msgid "List of MPD playlist plugin configurations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39191 guix-git/doc/guix.texi:39212
#: guix-git/doc/guix.texi:39228 guix-git/doc/guix.texi:39284
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-options} (default: @code{'()}) (type: alist)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39194
msgid "An association list of option symbols/strings to string values to be appended to the configuration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39199
#, no-wrap
msgid "{Data Type} mpd-plugin"
msgstr "{Tipo de dados} mpd-plugin"

#. type: deftp
#: guix-git/doc/guix.texi:39201
#, fuzzy
msgid "Data type representing a @command{mpd} plugin."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:39203
#, fuzzy, no-wrap
msgid "@code{plugin} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39205
msgid "Plugin name."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39208
msgid "Name."
msgstr "Nome."

#. type: item
#: guix-git/doc/guix.texi:39209
#, fuzzy, no-wrap
msgid "@code{enabled?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39211
msgid "Whether the plugin is enabled/disabled."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39217
msgid "An association list of option symbols/strings to string values to be appended to the plugin configuration.  See @uref{https://mpd.readthedocs.io/en/latest/plugins.html,MPD plugin reference} for available options."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39221
#, no-wrap
msgid "{Data Type} mpd-partition"
msgstr "{Tipo de dados} mpd-partition"

#. type: deftp
#: guix-git/doc/guix.texi:39223
#, fuzzy
msgid "Data type representing a @command{mpd} partition."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:39227
#, fuzzy
#| msgid "Derivations"
msgid "Partition name."
msgstr "Derivações"

#. type: table
#: guix-git/doc/guix.texi:39233
msgid "An association list of option symbols/strings to string values to be appended to the partition configuration.  See @uref{https://mpd.readthedocs.io/en/latest/user.html#configuring-partitions,Configuring Partitions} for available options."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39238
#, no-wrap
msgid "{Data Type} mpd-output"
msgstr "{Tipo de dados} mpd-output"

#. type: deftp
#: guix-git/doc/guix.texi:39240
#, fuzzy
msgid "Available @code{mpd-output} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:39242
#, fuzzy, no-wrap
msgid "@code{name} (default: @code{\"MPD\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39244
msgid "The name of the audio output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39245
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{type} (default: @code{\"pulse\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39247
msgid "The type of audio output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39248 guix-git/doc/guix.texi:45032
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enabled?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39253
msgid "Specifies whether this audio output is enabled when MPD is started.  By default, all audio outputs are enabled.  This is just the default setting when there is no state file; with a state file, the previous state is restored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39254
#, fuzzy, no-wrap
msgid "@code{format} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39258
msgid "Force a specific audio format on output.  See @uref{https://mpd.readthedocs.io/en/latest/user.html#audio-output-format,Global Audio Format} for a more detailed description."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39259
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{tags?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39263
msgid "If set to @code{#f}, then MPD will not send tags to this output.  This is only useful for output plugins that can receive tags, for example the @code{httpd} output plugin."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39264
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{always-on?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39268
msgid "If set to @code{#t}, then MPD attempts to keep this audio output always open.  This may be useful for streaming servers, when you don’t want to disconnect all listeners even when playback is accidentally stopped."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39269
#, fuzzy, no-wrap
msgid "@code{mixer-type} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39276
msgid "This field accepts a string that specifies which mixer should be used for this audio output: the @code{hardware} mixer, the @code{software} mixer, the @code{null} mixer (allows setting the volume, but with no effect; this can be used as a trick to implement an external mixer External Mixer) or no mixer (@code{none}).  When left unspecified, a @code{hardware} mixer is used for devices that support it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39277
#, fuzzy, no-wrap
msgid "@code{replay-gain-handler} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39283
msgid "This field accepts a string that specifies how @uref{https://mpd.readthedocs.io/en/latest/user.html#replay-gain,Replay Gain} is to be applied.  @code{software} uses an internal software volume control, @code{mixer} uses the configured (hardware) mixer control and @code{none} disables replay gain on this audio output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39287
msgid "An association list of option symbols/strings to string values to be appended to the audio output configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39294
msgid "The following example shows a configuration of @command{mpd} that configures some of its plugins and provides a HTTP audio streaming output."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39318
#, no-wrap
msgid ""
"(service mpd-service-type\n"
"         (mpd-configuration\n"
"           (outputs\n"
"             (list (mpd-output\n"
"                     (name \"streaming\")\n"
"                     (type \"httpd\")\n"
"                     (mixer-type 'null)\n"
"                     (extra-options\n"
"                      `((encoder . \"vorbis\")\n"
"                        (port    . \"8080\"))))))\n"
"           (decoders\n"
"             (list (mpd-plugin\n"
"                     (plugin \"mikmod\")\n"
"                     (enabled? #f))\n"
"                   (mpd-plugin\n"
"                     (plugin \"openmpt\")\n"
"                     (enabled? #t)\n"
"                     (extra-options `((repeat-count . -1)\n"
"                                      (interpolation-filter . 1))))))\n"
"           (resampler (mpd-plugin\n"
"                        (plugin \"libsamplerate\")\n"
"                        (extra-options `((type . 0)))))))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39320
#, no-wrap
msgid "myMPD"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39322
#, fuzzy, no-wrap
#| msgid "user interfaces"
msgid "MPD, web interface"
msgstr "interfaces de usuário"

#. type: cindex
#: guix-git/doc/guix.texi:39323
#, fuzzy, no-wrap
#| msgid "Mail Services"
msgid "myMPD service"
msgstr "Serviços de correio"

#. type: Plain text
#: guix-git/doc/guix.texi:39327
msgid "@uref{https://jcorporation.github.io/myMPD/, myMPD} is a web server frontend for MPD that provides a mobile friendly web client for MPD."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39330
msgid "The following example shows a myMPD instance listening on port 80, with album cover caching disabled."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39336
#, no-wrap
msgid ""
"(service mympd-service-type\n"
"         (mympd-configuration\n"
"          (port 80)\n"
"          (covercache-ttl 0)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39338
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "mympd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:39340
msgid "The service type for @command{mympd}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39343
#, no-wrap
msgid "{Data Type} mympd-configuration"
msgstr "{Tipo de dados} mympd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:39345
#, fuzzy
msgid "Available @code{mympd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:39347
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{mympd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39349
msgid "The package object of the myMPD server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39354
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{%mympd-user}) (type: user-account)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39356
msgid "Owner of the @command{mympd} process."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39359
msgid "The default @code{%mympd-user} is a system user with the name ``mympd'', who is a part of the group @var{group} (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39360
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{%mympd-group}) (type: user-group)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39362
msgid "Owner group of the @command{mympd} process."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39364
msgid "The default @code{%mympd-group} is a system group with name ``mympd''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39364
#, fuzzy, no-wrap
msgid "@code{work-directory} (default: @code{\"/var/lib/mympd\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39366
msgid "Where myMPD will store its data."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39367
#, fuzzy, no-wrap
msgid "@code{cache-directory} (default: @code{\"/var/cache/mympd\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39369
msgid "Where myMPD will store its cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39370
#, fuzzy, no-wrap
msgid "@code{acl} (type: maybe-mympd-ip-acl)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39372
msgid "ACL to access the myMPD webserver."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39373
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{covercache-ttl} (default: @code{31}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39375
msgid "How long to keep cached covers, @code{0} disables cover caching."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39376
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{http?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39378
msgid "HTTP support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39379
#, fuzzy, no-wrap
msgid "@code{host} (default: @code{\"[::]\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39381
msgid "Host name to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39382
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{80}) (type: maybe-port)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39384
msgid "HTTP port to listen on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39385
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log-level} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39388
msgid "How much detail to include in logs, possible values: @code{0} to @code{7}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39389
#, fuzzy, no-wrap
msgid "@code{log-to} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39393
msgid "Where to send logs.  Unless specified, the service logs to the local syslog service under the @samp{daemon} facility.  Alternatively, a log file name can be specified, for example @file{/var/log/mympd.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39394
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{lualibs} (default: @code{\"all\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39397
msgid "See @uref{https://jcorporation.github.io/myMPD/scripting/#lua-standard-libraries}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39398
#, fuzzy, no-wrap
msgid "@code{uri} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39401
msgid "Override URI to myMPD.  See @uref{https://github.com/jcorporation/myMPD/issues/950}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39402
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{script-acl} (default: @code{(mympd-ip-acl (allow '(\"127.0.0.1\")))}) (type: maybe-mympd-ip-acl)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39404
msgid "ACL to access the myMPD script backend."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39407
msgid "SSL/TLS support."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39408
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ssl-port} (default: @code{443}) (type: maybe-port)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39410
msgid "Port to listen for HTTPS."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39411
#, fuzzy, no-wrap
msgid "@code{ssl-cert} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39413
msgid "Path to PEM encoded X.509 SSL/TLS certificate (public key)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39414
#, fuzzy, no-wrap
msgid "@code{ssl-key} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39416
msgid "Path to PEM encoded SSL/TLS private key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39417
#, fuzzy, no-wrap
msgid "@code{pin-hash} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39420
msgid "SHA-256 hashed pin used by myMPD to control settings access by prompting a pin from the user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39421
#, fuzzy, no-wrap
msgid "@code{save-caches?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39423
msgid "Whether to preserve caches between service restarts."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39429
#, no-wrap
msgid "{Data Type} mympd-ip-acl"
msgstr "{Tipo de dados} mympd-ip-acl"

#. type: deftp
#: guix-git/doc/guix.texi:39431
#, fuzzy
msgid "Available @code{mympd-ip-acl} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:39433
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{allow} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39435
msgid "Allowed IP addresses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39436
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{deny} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39438
msgid "Disallowed IP addresses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39449
msgid "The @code{(gnu services virtualization)} module provides services for the libvirt and virtlog daemons, as well as other virtualization-related services."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39450
#, no-wrap
msgid "Libvirt daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39457
msgid "@code{libvirtd} is the server side daemon component of the libvirt virtualization management system.  This daemon runs on host servers and performs required management tasks for virtualized guests.  To connect to the libvirt daemon as an unprivileged user, it must be added to the @samp{libvirt} group, as shown in the example below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39458
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "libvirt-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:39461
msgid "This is the type of the @uref{https://libvirt.org, libvirt daemon}.  Its value must be a @code{libvirt-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39472
#, no-wrap
msgid ""
"(users (cons (user-account\n"
"              (name \"user\")\n"
"              (group \"users\")\n"
"              (supplementary-groups '(\"libvirt\"\n"
"                                      \"audio\" \"video\" \"wheel\")))\n"
"             %base-user-accounts))\n"
"(service libvirt-service-type\n"
"         (libvirt-configuration\n"
"          (tls-port \"16555\")))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39478
#, fuzzy, no-wrap
#| msgid "{Data Type} lirc-configuration"
msgid "{Data Type} libvirt-configuration"
msgstr "{Tipo de dados} lirc-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:39480
msgid "Available @code{libvirt-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39482
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{libvirt} (default: @code{libvirt}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: deftypevr
#: guix-git/doc/guix.texi:39484 guix-git/doc/guix.texi:39768
msgid "Libvirt package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39485
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{qemu} (default: @code{qemu}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39487 guix-git/doc/guix.texi:39951
#: guix-git/doc/guix.texi:40009 guix-git/doc/guix.texi:40378
msgid "The QEMU package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39488
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{firmwares} (default: @code{(ovmf-x86-64)}) (type: list-of-file-likes)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39492
msgid "List of UEFI/BIOS firmware packages to make available.  Each firmware package should contain a @file{share/qemu/firmware/@var{NAME}.json} QEMU firmware metadata file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39493
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{listen-tls?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39497
msgid "Flag listening for secure TLS connections on the public TCP/IP port.  must set @code{listen} for this to have any effect.  It is necessary to setup a CA and issue server certificates before using this capability."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39498
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{listen-tcp?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39504
msgid "Listen for unencrypted TCP connections on the public TCP/IP port.  must set @code{listen} for this to have any effect.  Using the TCP socket requires SASL authentication by default.  Only SASL mechanisms which support data encryption are allowed.  This is DIGEST_MD5 and GSSAPI (Kerberos5)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39505
#, fuzzy, no-wrap
msgid "@code{tls-port} (default: @code{\"16514\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39508
msgid "Port for accepting secure TLS connections This can be a port number, or service name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39509
#, fuzzy, no-wrap
msgid "@code{tcp-port} (default: @code{\"16509\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39512
msgid "Port for accepting insecure TCP connections This can be a port number, or service name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39513
#, fuzzy, no-wrap
msgid "@code{listen-addr} (default: @code{\"0.0.0.0\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39515
msgid "IP address or hostname used for client connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39516
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{mdns-adv?} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39518
msgid "Flag toggling mDNS advertisement of the libvirt service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39519
#, fuzzy, no-wrap
msgid "@code{mdns-name} (default: @code{\"Virtualization Host terra\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39522
msgid "Default mDNS advertisement name.  This must be unique on the immediate broadcast network."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39523
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{unix-sock-group} (default: @code{\"libvirt\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39526
msgid "UNIX domain socket group ownership.  This can be used to allow a trusted set of users access to management capabilities without becoming root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39527
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{unix-sock-ro-perms} (default: @code{\"0777\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39530
msgid "UNIX socket permissions for the R/O socket.  This is used for monitoring VM status only."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39531
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{unix-sock-rw-perms} (default: @code{\"0770\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39535
msgid "UNIX socket permissions for the R/W socket.  Default allows only root.  If PolicyKit is enabled on the socket, the default will change to allow everyone (e.g., @code{\"0777\"})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39536
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{unix-sock-admin-perms} (default: @code{\"0777\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39540
msgid "UNIX socket permissions for the admin socket.  Default allows only owner (root), do not change it unless you are sure to whom you are exposing the access to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39541
#, fuzzy, no-wrap
msgid "@code{unix-sock-dir} (default: @code{\"/var/run/libvirt\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39543
msgid "The directory in which sockets will be found/created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39544
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{auth-unix-ro} (default: @code{\"polkit\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39547
msgid "Authentication scheme for UNIX read-only sockets.  By default socket permissions allow anyone to connect."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39548
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{auth-unix-rw} (default: @code{\"polkit\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39552
msgid "Authentication scheme for UNIX read-write sockets.  By default socket permissions only allow root.  If PolicyKit support was compiled into libvirt, the default will be to use 'polkit' auth."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39553
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{auth-tcp} (default: @code{\"sasl\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39557
msgid "Authentication scheme for TCP sockets.  If you don't enable SASL, then all TCP traffic is cleartext.  Don't do this outside of a development/test scenario."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39558
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{auth-tls} (default: @code{\"none\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39563
msgid "Authentication scheme for TLS sockets.  TLS sockets already have encryption provided by the TLS layer, and limited authentication is done by certificates.  It is possible to make use of any SASL authentication mechanism as well, by using @code{\"sasl\"} for this option"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39564
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{access-drivers} (default: @code{()}) (type: optional-list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39567
msgid "API access control scheme.  By default an authenticated user is allowed access to all APIs.  Access drivers can place restrictions on this."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39568
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{key-file} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39571
msgid "Server key file path.  If set to an empty string, then no private key is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39572
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{cert-file} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39575
msgid "Server key file path.  If set to an empty string, then no certificate is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39576
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{ca-file} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39579
msgid "Server key file path.  If set to an empty string, then no CA certificate is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39580
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{crl-file} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39583
msgid "Certificate revocation list path.  If set to an empty string, then no CRL is loaded."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39584
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{tls-no-sanity-cert} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39588
msgid "Disable verification of our own server certificates.  When @command{libvirtd} starts it performs some sanity checks against its own certificates."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39589
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{tls-no-verify-cert} (default: @code{#f}) (type: boolean)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39593
msgid "Disable verification of client certificates.  Client certificate verification is the primary authentication mechanism.  Any client which does not present a certificate signed by the CA will be rejected."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39594
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{tls-allowed-dn-list} (default: @code{()}) (type: optional-list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39596
msgid "Whitelist of allowed x509 Distinguished Name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39597
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{sasl-allowed-usernames} (default: @code{()}) (type: optional-list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39600
msgid "Whitelist of allowed SASL usernames.  The format for username depends on the SASL authentication mechanism."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39601
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{tls-priority} (default: @code{\"NORMAL\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39605
msgid "Override the compile time default TLS priority string.  The default is usually \"NORMAL\" unless overridden at build time.  Only set this if it is desired for libvirt to deviate from the global default settings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39606
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-clients} (default: @code{5000}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: deftypevr
#: guix-git/doc/guix.texi:39609 guix-git/doc/guix.texi:39870
msgid "Maximum number of concurrent client connections to allow over all sockets combined."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39610
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-queued-clients} (default: @code{1000}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39614
msgid "Maximum length of queue of connections waiting to be accepted by the daemon.  Note, that some protocols supporting re-transmission may obey this so that a later reattempt at connection succeeds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39615
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-anonymous-clients} (default: @code{20}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39618
msgid "Maximum length of queue of accepted but not yet authenticated clients.  Set this to zero to turn this feature off."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39619
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{min-workers} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39621
msgid "Number of workers to start up initially."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39622
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-workers} (default: @code{20}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39627
msgid "Maximum number of worker threads.  If the number of active clients exceeds @code{min-workers}, then more threads are spawned, up to @code{max_workers} limit.  Typically you'd want @code{max_workers} to equal maximum number of clients allowed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39628
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{prio-workers} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39632
msgid "Number of priority workers.  If all workers from above pool are stuck, some calls marked as high priority (notably domainDestroy) can be executed in this pool."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39633
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-requests} (default: @code{20}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39635
msgid "Total global limit on concurrent RPC calls."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39636
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-client-requests} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39640
msgid "Limit on concurrent requests from a single client connection.  To avoid one client monopolizing the server this should be a small fraction of the global max_requests and max_workers parameter."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39641
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-min-workers} (default: @code{1}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39643
msgid "Same as @code{min-workers} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39644
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-max-workers} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39646
msgid "Same as @code{max-workers} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39647
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-max-clients} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39649
msgid "Same as @code{max-clients} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39650
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-max-queued-clients} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39652
msgid "Same as @code{max-queued-clients} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39653
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-max-client-requests} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39655
msgid "Same as @code{max-client-requests} but for the admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39656
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log-level} (default: @code{3}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39664
msgid "Semi-deprecated option for the logging level: using the @code{log-filters} option instead is recommend, as it provides finer control.  The log level can be set to @code{4} for errors, @code{3} for warnings, @code{2} for information or @code{1} for debug.  Note that since @code{log-filters} and @code{log-outputs} take precedence over this option, you will need to also adjust their logging levels to avoid filtering out messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39665
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{log-filters} (default: @code{\"3:remote 4:event\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39681
msgid "Logging filters.  A filter allows selecting a different logging level for a given category of logs.  The format for a filter is either @samp{@var{x}:@var{name}} or @samp{@var{x}:+@var{name}}, where name is a string which is matched against the category given in the @code{VIR_LOG_INIT()} at the top of each libvirt source file, e.g., @samp{\"remote\"}, @samp{\"qemu\"}, or @samp{\"util.json\"}.  @var{name} can be a substring of the full category name, in order to match multiple similar categories.  The optional @samp{+} prefix tells libvirt to log stack traces for each message matching @var{name}.  @var{x} is the log level value used to filter the associated message category.  @var{x} can be set to @samp{4} for errors, @samp{3} for warnings, @samp{2} for information, or @samp{1} for debug.  Multiple filters can be defined in a single filters statement, as space-separated values.  Since @code{log-outputs} also include a level filter, you may need to also adjust its value to see all the filtered messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39682
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{log-outputs} (default: @code{\"3:syslog:libvirtd\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39693
msgid "Logging outputs.  An output is one of the places to save logging information.  The format for an output has the form @code{\"@var{x}:var@{output@}\"}, where @var{output} can be @samp{stderr}, @samp{syslog:@var{name}}, where @var{name} is the syslog @code{ident} value to use, or @samp{file:@var{file_name}}, where @var{file_name} is the file name of the file to output to.  @var{x} is the minimal level, which acts as a filter.  @var{x} can be set to @var{x} can be set to @samp{4} for errors, @samp{3} for warnings, @samp{2} for information, or @samp{1} for debug.  Multiple filters can be defined in a single filters statement, as space-separated values."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39694
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{audit-level} (default: @code{1}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39698
msgid "Modify the behavior of the auditing subsystem.  @samp{0} disables all auditing, samp@{1@} enables auditing only if enabled on thehost and @samp{2} enables auditing but exits if it is disabled on the host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39699
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{audit-logging} (default: @code{#f}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39701
msgid "Send audit messages via libvirt logging infrastructure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39702
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{host-uuid} (default: @code{\"\"}) (type: optional-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:39704
msgid "Host UUID.  UUID must not have all digits be the same."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39705
#, fuzzy, no-wrap
msgid "@code{host-uuid-source} (default: @code{\"smbios\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39710
msgid "Source to read host UUID.  Use @code{\"smbios\"} to fetch the UUID via @code{dmidecode -s system-uuid}, or @code{\"machine-id\"} to fetch the UUID from @code{/etc/machine-id}.  If @code{dmidecode} does not provide a valid UUID a temporary UUID will be generated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39711
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{keepalive-interval} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39716
msgid "A keepalive message is sent to a client after @code{keepalive_interval} seconds of inactivity to check if the client is still responding.  If set to @code{-1}, libvirtd won't send keepalive requests; however clients can still send them and the daemon will send responses."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39717
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{keepalive-count} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39726
msgid "Maximum number of keepalive messages that are allowed to be sent to the client without getting any response before the connection is considered broken.  In other words, the connection is automatically closed approximately after @samp{keepalive_interval * (keepalive_count + 1)} seconds since the last message received from the client.  When @code{keepalive-count} is set to @code{0}, connections will be automatically closed after @code{keepalive-interval} seconds of inactivity without sending any keepalive messages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39727
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-keepalive-interval} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39729 guix-git/doc/guix.texi:39732
msgid "Same as above but for admin interface."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39730
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{admin-keepalive-count} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:39733
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ovs-timeout} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:39737
msgid "Timeout for Open vSwitch calls.  The @code{ovs-vsctl} utility is used for the configuration and its timeout option is set by default to 5 seconds to avoid potential infinite waits blocking libvirt."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39745
#, no-wrap
msgid "Virtlog daemon"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39748
msgid "The virtlogd service is a server side daemon component of libvirt that is used to manage logs from virtual machine consoles."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39754
msgid "This daemon is not used directly by libvirt client applications, rather it is called on their behalf by @code{libvirtd}.  By maintaining the logs in a standalone daemon, the main @code{libvirtd} daemon can be restarted without risk of losing logs.  The @code{virtlogd} daemon has the ability to re-exec()  itself upon receiving @code{SIGUSR1}, to allow live upgrades without downtime."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39755
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "virtlog-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:39758
msgid "This is the type of the virtlog daemon.  Its value must be a @code{virtlog-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39763
#, no-wrap
msgid ""
"(service virtlog-service-type\n"
"         (virtlog-configuration\n"
"          (max-clients 1000)))\n"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39766
#, no-wrap
msgid "{@code{libvirt} parameter} package libvirt"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39770
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer log-level"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39772
msgid "Logging level.  4 errors, 3 warnings, 2 information, 1 debug."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39774
msgid "Defaults to @samp{3}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39777
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} string log-filters"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39779
msgid "Logging filters."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39782
msgid "A filter allows to select a different logging level for a given category of logs The format for a filter is one of:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39786
msgid "x:name"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39789
msgid "x:+name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39799
msgid "where @code{name} is a string which is matched against the category given in the @code{VIR_LOG_INIT()} at the top of each libvirt source file, e.g., \"remote\", \"qemu\", or \"util.json\" (the name in the filter can be a substring of the full category name, in order to match multiple similar categories), the optional \"+\" prefix tells libvirt to log stack trace for each message matching name, and @code{x} is the minimal level where matching messages should be logged:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39803 guix-git/doc/guix.texi:39848
msgid "1: DEBUG"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39806 guix-git/doc/guix.texi:39851
msgid "2: INFO"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39809 guix-git/doc/guix.texi:39854
msgid "3: WARNING"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:39812 guix-git/doc/guix.texi:39857
msgid "4: ERROR"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39817
msgid "Multiple filters can be defined in a single filters statement, they just need to be separated by spaces."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39819
msgid "Defaults to @samp{\"3:remote 4:event\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39822
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} string log-outputs"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39824
msgid "Logging outputs."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39827
msgid "An output is one of the places to save logging information The format for an output can be:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39829
#, no-wrap
msgid "x:stderr"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39831
msgid "output goes to stderr"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39832
#, no-wrap
msgid "x:syslog:name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39834
msgid "use syslog for the output and use the given name as the ident"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39835
#, no-wrap
msgid "x:file:file_path"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39837
msgid "output to a file, with the given filepath"
msgstr "saída para um arquivo, com o caminho de arquivo dado"

#. type: item
#: guix-git/doc/guix.texi:39838
#, no-wrap
msgid "x:journald"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39840
msgid "output to journald logging system"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39844
msgid "In all case the x prefix is the minimal level, acting as a filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39862
msgid "Multiple outputs can be defined, they just need to be separated by spaces."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39864
msgid "Defaults to @samp{\"3:stderr\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39867
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-clients"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39872
msgid "Defaults to @samp{1024}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39875
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39877
msgid "Maximum file size before rolling over."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39879
msgid "Defaults to @samp{2MB}"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39882
#, no-wrap
msgid "{@code{virtlog-configuration} parameter} integer max-backups"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39884
msgid "Maximum number of backup files to keep."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:39886
msgid "Defaults to @samp{3}"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:39890
msgid "transparent-emulation-qemu"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39890
#, no-wrap
msgid "Transparent Emulation with QEMU"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:39892 guix-git/doc/guix.texi:39972
#, no-wrap
msgid "emulation"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:39893
#, no-wrap
msgid "binfmt_misc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39901
msgid "@code{qemu-binfmt-service-type} provides support for transparent emulation of program binaries built for different architectures---e.g., it allows you to transparently execute an ARMv7 program on an x86_64 machine.  It achieves this by combining the @uref{https://www.qemu.org, QEMU} emulator and the @code{binfmt_misc} feature of the kernel Linux.  This feature only allows you to emulate GNU/Linux on a different architecture, but see below for GNU/Hurd support."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39902
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "qemu-binfmt-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:39907
msgid "This is the type of the QEMU/binfmt service for transparent emulation.  Its value must be a @code{qemu-binfmt-configuration} object, which specifies the QEMU package to use as well as the architecture we want to emulated:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39912
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\" \"aarch64\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39918
msgid "In this example, we enable transparent emulation for the ARM and aarch64 platforms.  Running @code{herd stop qemu-binfmt} turns it off, and running @code{herd start qemu-binfmt} turns it back on (@pxref{Invoking herd, the @command{herd} command,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:39920
#, no-wrap
msgid "{Data Type} qemu-binfmt-configuration"
msgstr "{Tipo de dados} qemu-binfmt-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:39922
msgid "This is the configuration for the @code{qemu-binfmt} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39924
#, no-wrap
msgid "@code{platforms} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39927
msgid "The list of emulated QEMU platforms.  Each item must be a @dfn{platform object} as returned by @code{lookup-qemu-platforms} (see below)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39930
msgid "For example, let's suppose you're on an x86_64 machine and you have this service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:39935
#, no-wrap
msgid ""
"(service qemu-binfmt-service-type\n"
"         (qemu-binfmt-configuration\n"
"           (platforms (lookup-qemu-platforms \"arm\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39938
msgid "You can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:39941
#, no-wrap
msgid "guix build -s armhf-linux inkscape\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:39948
msgid "and it will build Inkscape for ARMv7 @emph{as if it were a native build}, transparently using QEMU to emulate the ARMv7 CPU@.  Pretty handy if you'd like to test a package build for an architecture you don't have access to!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:39949
#, no-wrap
msgid "@code{qemu} (default: @code{qemu})"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39954
#, no-wrap
msgid "{Procedure} lookup-qemu-platforms platforms@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39959
msgid "Return the list of QEMU platform objects corresponding to @var{platforms}@dots{}.  @var{platforms} must be a list of strings corresponding to platform names, such as @code{\"arm\"}, @code{\"sparc\"}, @code{\"mips64el\"}, and so on."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39961
#, no-wrap
msgid "{Procedure} qemu-platform? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39963
msgid "Return true if @var{obj} is a platform object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39965
#, no-wrap
msgid "{Procedure} qemu-platform-name platform"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:39967
msgid "Return the name of @var{platform}---a string such as @code{\"arm\"}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:39970
#, no-wrap
msgid "QEMU Guest Agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39978
msgid "The QEMU guest agent provides control over the emulated system to the host.  The @code{qemu-guest-agent} service runs the agent on Guix guests.  To control the agent from the host, open a socket by invoking QEMU with the following arguments:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:39985
#, no-wrap
msgid ""
"qemu-system-x86_64 \\\n"
"\t-chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga0 \\\n"
"\t-device virtio-serial \\\n"
"\t-device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0 \\\n"
"\t...\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39989
msgid "This creates a socket at @file{/tmp/qga.sock} on the host.  Once the guest agent is running, you can issue commands with @code{socat}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:39994
#, no-wrap
msgid ""
"$ guix shell socat -- socat unix-connect:/tmp/qga.sock stdio\n"
"@{\"execute\": \"guest-get-host-name\"@}\n"
"@{\"return\": @{\"host-name\": \"guix\"@}@}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:39998
msgid "See @url{https://wiki.qemu.org/Features/GuestAgent,QEMU guest agent documentation} for more options and commands."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:39999
#, fuzzy, no-wrap
msgid "qemu-guest-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40001
msgid "Service type for the QEMU guest agent service."
msgstr "Tipo de serviço para o serviço de agente convidado QEMU."

#. type: deftp
#: guix-git/doc/guix.texi:40003
#, no-wrap
msgid "{Data Type} qemu-guest-agent-configuration"
msgstr "{Tipo de dados} qemu-guest-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40005
#, fuzzy
msgid "Configuration for the @code{qemu-guest-agent} service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:40007 guix-git/doc/guix.texi:40209
#: guix-git/doc/guix.texi:40376
#, no-wrap
msgid "@code{qemu} (default: @code{qemu-minimal})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40010
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{device} (default: @code{\"\"})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40013
msgid "File name of the device or socket the agent uses to communicate with the host.  If empty, QEMU uses a default file name."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40016
#, no-wrap
msgid "Xen Guest Agent"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40018
#, no-wrap
msgid "Xen"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40019
#, no-wrap
msgid "Xen guest agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40023
msgid "The Xen guest agent allows a Xen host to control the emulated system.  The @code{xe-guest-utilities} service runs the agent on Guix guests."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40025
msgid "@url{https://github.com/xenserver/xe-guest-utilities, xe-guest-utilities} collects information about the running virtualized guest. This includes:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40028
#, fuzzy
#| msgid "git configuration"
msgid "static information"
msgstr "Configuração do git"

#. type: itemize
#: guix-git/doc/guix.texi:40031
#, fuzzy
#| msgid "operating-system"
msgid "The operating system running"
msgstr "operating-system"

#. type: itemize
#: guix-git/doc/guix.texi:40033
msgid "The Linux kernel version"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40037
#, fuzzy
#| msgid "git configuration"
msgid "dynamic information"
msgstr "Configuração do git"

#. type: itemize
#: guix-git/doc/guix.texi:40040
msgid "Network interfaces (devices) being added/removed"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40042
msgid "Network connections being unplugged/plugged-in"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40044
msgid "CPUs being added or removed"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40046
msgid "The guest migrating, being paused/resumed, etc."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40050
#, fuzzy
#| msgid "package transformations"
msgid "ephemeral information"
msgstr "transformações de pacotes"

#. type: itemize
#: guix-git/doc/guix.texi:40053
msgid "The amount of memory currently in-use and free"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:40055
msgid "The amount of disk-space used"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40062
msgid "The default Linux-libre kernel that Guix ships already enables the necessary paravirtualization features for a guest.  There is nothing you need to do for the guest to support Xen's paravirtualization features."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40066
msgid "The guest utilities are used to have the guest report information @emph{back} to the virtualizing host and support tasks that require cooperation between host and guest, like CPU hotplugging."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40068
#, fuzzy, no-wrap
msgid "xe-guest-utilities-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40070
#, fuzzy
#| msgid "Service type for the QEMU guest agent service."
msgid "Service type for the Xen guest utilities service."
msgstr "Tipo de serviço para o serviço de agente convidado QEMU."

#. type: deftp
#: guix-git/doc/guix.texi:40072
#, fuzzy, no-wrap
#| msgid "{Data Type} gitolite-configuration"
msgid "{Data Type} xe-guest-utilities-configuration"
msgstr "{Tipo de dados} gitolite-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40074
#, fuzzy
msgid "Configuration for the @code{xe-guest-utilities} service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:40076
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{xe-guest-utilities})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40078
#, fuzzy
msgid "The Xen guest utilities package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:40079
#, fuzzy, no-wrap
msgid "@code{pid-file} (default: @code{\"/var/run/xe-daemon.pid\"})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40081
msgid "Name of the file holding the PID of @code{xe-deamon}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40082
#, fuzzy, no-wrap
msgid "@code{log-file} (default: @code{\"/var/log/xe-guest-utilities.log\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:40084
msgid "Name of the @code{xe-guest-utilities} log file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40093
msgid "@code{xe-guest-utilities} is the standard guest utilities used for Xen guests.  More recently the Xen Project has been working to develop @code{xen-guest-agent}, a modern drop-in replacement for @code{xe-guest-utilities}.  While they nearly have feature-parity, @code{xen-guest-agent} currently lacks some of the features of its predecessor, namely disk metrics and ``PV drivers version''."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40094
#, fuzzy, no-wrap
msgid "xen-guest-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40096
#, fuzzy
#| msgid "Service type for the QEMU guest agent service."
msgid "Service type for the Xen guest agent service."
msgstr "Tipo de serviço para o serviço de agente convidado QEMU."

#. type: deftp
#: guix-git/doc/guix.texi:40098
#, fuzzy, no-wrap
#| msgid "{Data Type} qemu-guest-agent-configuration"
msgid "{Data Type} xen-guest-agent-configuration"
msgstr "{Tipo de dados} qemu-guest-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40100
#, fuzzy
msgid "Configuration for the @code{xen-guest-agent} service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:40102
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{xen-guest-agent})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40104
#, fuzzy
msgid "The Xen guest agent package to use."
msgstr "O pacote GPM a ser usado."

#. type: quotation
#: guix-git/doc/guix.texi:40109
msgid "@code{xe-guest-utilities} and @code{xen-guest-agent} are mutually exclusive."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:40113
#, fuzzy
#| msgid "build"
msgid "build-vm"
msgstr "build"

#. type: subsubheading
#: guix-git/doc/guix.texi:40113
#, fuzzy, no-wrap
#| msgid "Additional Build Options"
msgid "Virtual Build Machines"
msgstr "Opções de compilação adicional"

#. type: cindex
#: guix-git/doc/guix.texi:40115
#, fuzzy, no-wrap
#| msgid "{Data Type} build-machine"
msgid "virtual build machines"
msgstr "build-machine {Data Type}"

#. type: cindex
#: guix-git/doc/guix.texi:40116
#, fuzzy, no-wrap
#| msgid "build"
msgid "build VMs"
msgstr "build"

#. type: cindex
#: guix-git/doc/guix.texi:40117
#, fuzzy, no-wrap
#| msgid "offloading"
msgid "VMs, for offloading"
msgstr "descarregamento"

#. type: Plain text
#: guix-git/doc/guix.texi:40122
msgid "@dfn{Virtual build machines} or ``build VMs'' let you offload builds to a fully controlled environment.  ``How can it be more controlled than regular builds? And why would it be useful?'', you ask.  Good questions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40132
msgid "Builds spawned by @code{guix-daemon} indeed run in a controlled environment; specifically the daemon spawns build processes in separate namespaces and in a chroot, such as that build processes only see their declared dependencies and a well-defined subset of the file system tree (@pxref{Build Environment Setup}, for details).  A few aspects of the environments are not controlled though: the operating system kernel, the CPU model, and the date.  Most of the time, these aspects have no impact on the build process: the level of isolation @code{guix-daemon} provides is ``good enough''."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40133
#, no-wrap
msgid "time traps"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40143
msgid "However, there are occasionally cases where those aspects @emph{do} influence the build process.  A typical example is @dfn{time traps}: build processes that stop working after a certain date@footnote{The most widespread example of time traps is test suites that involve checking the expiration date of a certificate.  Such tests exists in TLS implementations such as OpenSSL and GnuTLS, but also in high-level software such as Python.}.  Another one is software that optimizes for the CPU microarchitecture it is built on or, worse, bugs that manifest only on specific CPUs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40146
msgid "To address that, @code{virtual-build-machine-service-type} lets you add a virtual build machine on your system, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40149
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgid ""
"(use-modules (gnu services virtualization))\n"
"\n"
msgstr ""
"(use-modules (gnu packages version-control))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:40154
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services (append (list (service virtual-build-machine-service-type))\n"
"                    %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40159
msgid "By default, you have to explicitly start the build machine when you need it, at which point builds may be offloaded to it (@pxref{Daemon Offload Setup}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40162
#, no-wrap
msgid "herd start build-vm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40170
msgid "With the default setting shown above, the build VM runs with its clock set to a date several years in the past, and on a CPU model that corresponds to that date---a model possibly older than that of your machine.  This lets you rebuild today software from the past that would otherwise fail to build due to a time trap or other issues in its build process.  You can view the VM's config like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40173
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "herd configuration build-vm\n"
msgstr "Configuração do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:40176
msgid "You can configure the build VM, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40184
#, no-wrap
msgid ""
"(service virtual-build-machine-service-type\n"
"         (virtual-build-machine\n"
"          (cpu \"Westmere\")\n"
"          (cpu-count 8)\n"
"          (memory-size (* 1 1024))\n"
"          (auto-start? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40187
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "The available options are shown below."
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: defvar
#: guix-git/doc/guix.texi:40188
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "virtual-build-machine-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40192
msgid "This is the service type to run @dfn{virtual build machines}.  Virtual build machines are configured so that builds are offloaded to them when they are running."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40194
#, no-wrap
msgid "{Data Type} virtual-build-machine"
msgstr "{Tipo de dados} virtual-build-machine"

#. type: deftp
#: guix-git/doc/guix.texi:40197
#, fuzzy
#| msgid "This data type represents the configuration of anonip.  It has the following parameters:"
msgid "This is the data type specifying the configuration of a build machine.  It contains the fields below:"
msgstr "Este tipo de dado representa a configuração do anonip. Ele possui os seguintes parâmetros:"

#. type: item
#: guix-git/doc/guix.texi:40199
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{'build-vm})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40202
msgid "The name of this build VM.  It is used to construct the name of its Shepherd service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40203 guix-git/doc/guix.texi:46722
#, no-wrap
msgid "image"
msgstr "image"

#. type: table
#: guix-git/doc/guix.texi:40208
msgid "The image of the virtual machine (@pxref{System Images}).  This notably specifies the virtual disk size and the operating system running into it (@pxref{operating-system Reference}).  The default value is a minimal operating system image."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40211
#, fuzzy
#| msgid "The GPM package to use."
msgid "The QEMU package to run the image."
msgstr "O pacote GPM a ser usado."

#. type: code{#1}
#: guix-git/doc/guix.texi:40212
#, no-wrap
msgid "cpu"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40214
msgid "The CPU model being emulated as a string denoting a model known to QEMU."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40217
msgid "The default value is a model that matches @code{date} (see below).  To see what CPU models are available, run, for example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40220
#, no-wrap
msgid "qemu-system-x86_64 -cpu help\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40222
#, fuzzy, no-wrap
#| msgid "@code{mount?} (default: @code{#t})"
msgid "@code{cpu-count} (default: @code{4})"
msgstr "@code{mount?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:40224
#, fuzzy
#| msgid "The number of builds that may run in parallel on the machine."
msgid "The number of CPUs emulated by the virtual machine."
msgstr "O número de compilações que podem ser executadas paralelamente na máquina."

#. type: item
#: guix-git/doc/guix.texi:40225
#, fuzzy, no-wrap
#| msgid "@code{cache-size} (default: @code{150})"
msgid "@code{memory-size} (default: @code{2048})"
msgstr "@code{cache-size} (default: @code{150})"

#. type: table
#: guix-git/doc/guix.texi:40227
msgid "Size in mebibytes (MiB) of the virtual machine's main memory (RAM)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40228
#, fuzzy, no-wrap
#| msgid "@code{cache} (default: @code{#f})"
msgid "@code{date} (default: a few years ago)"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40231
msgid "Date inside the virtual machine when it starts; this must be a SRFI-19 date object (@pxref{SRFI-19 Date,,, guile, GNU Guile Reference Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40232
#, fuzzy, no-wrap
#| msgid "@code{x11-forwarding?} (default: @code{#f})"
msgid "@code{port-forwardings} (default: 11022 and 11004)"
msgstr "@code{x11-forwarding?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40235
msgid "TCP ports of the virtual machine forwarded to the host.  By default, the SSH and secrets ports are forwarded into the host."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40239
msgid "List of system types supported by the build VM---e.g., @code{\"x86_64-linux\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40240
#, fuzzy, no-wrap
#| msgid "@code{manual?} (default: @code{#f})"
msgid "@code{auto-start?} (default: @code{#f})"
msgstr "@code{manual?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40242
msgid "Whether to start the virtual machine when the system boots."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40247
msgid "In the next section, you'll find a variant on this theme: GNU/Hurd virtual machines!"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:40249
msgid "hurd-vm"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40249
#, no-wrap
msgid "The Hurd in a Virtual Machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40252
#, no-wrap
msgid "the Hurd"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40253
#, no-wrap
msgid "childhurd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40261
msgid "Service @code{hurd-vm} provides support for running GNU/Hurd in a virtual machine (VM), a so-called @dfn{childhurd}.  This service is meant to be used on GNU/Linux and the given GNU/Hurd operating system configuration is cross-compiled.  The virtual machine is a Shepherd service that can be referred to by the names @code{hurd-vm} and @code{childhurd} and be controlled with commands such as:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40265
#, no-wrap
msgid ""
"herd start hurd-vm\n"
"herd stop childhurd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40269
msgid "When the service is running, you can view its console by connecting to it with a VNC client, for example with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40272
#, no-wrap
msgid "guix shell tigervnc-client -- vncviewer localhost:5900\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40282
msgid "The default configuration (see @code{hurd-vm-configuration} below)  spawns a secure shell (SSH) server in your GNU/Hurd system, which QEMU (the virtual machine emulator) redirects to port 10022 on the host.  By default, the service enables @dfn{offloading} such that the host @code{guix-daemon} automatically offloads GNU/Hurd builds to the childhurd (@pxref{Daemon Offload Setup}).  This is what happens when running a command like the following one, where @code{i586-gnu} is the system type of 32-bit GNU/Hurd:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40285
#, no-wrap
msgid "guix build emacs-minimal -s i586-gnu\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40294
msgid "The childhurd is volatile and stateless: it starts with a fresh root file system every time you restart it.  By default though, all the files under @file{/etc/childhurd} on the host are copied as is to the root file system of the childhurd when it boots.  This allows you to initialize ``secrets'' inside the VM: SSH host keys, authorized substitute keys, and so on---see the explanation of @code{secret-root} below."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40301
msgid "You will probably find it useful to create an account for you in the GNU/Hurd virtual machine and to authorize logins with your SSH key.  To do that, you can define the GNU/Hurd system in the usual way (@pxref{Using the Configuration System}), and then pass that operating system as the @code{os} field of @code{hurd-vm-configuration}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40307
#, no-wrap
msgid ""
"(define childhurd-os\n"
"  ;; Definition of my GNU/Hurd system, derived from the default one.\n"
"  (operating-system\n"
"    (inherit %hurd-vm-operating-system)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40315
#, no-wrap
msgid ""
"    ;; Add a user account.\n"
"    (users (cons (user-account\n"
"                  (name \"charlie\")\n"
"                  (comment \"This is me!\")\n"
"                  (group \"users\")\n"
"                  (supplementary-groups '(\"wheel\"))) ;for 'sudo'\n"
"                 %base-user-accounts))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40331
#, no-wrap
msgid ""
"    (services\n"
"     ;; Modify the SSH configuration to allow login as \"root\"\n"
"     ;; and as \"charlie\" using public key authentication.\n"
"     (modify-services (operating-system-user-services\n"
"                       %hurd-vm-operating-system)\n"
"       (openssh-service-type\n"
"        config => (openssh-configuration\n"
"                   (inherit config)\n"
"                   (authorized-keys\n"
"                    `((\"root\"\n"
"                       ,(local-file\n"
"                         \"/home/charlie/.ssh/id_rsa.pub\"))\n"
"                      (\"charlie\"\n"
"                       ,(local-file\n"
"                         \"/home/charlie/.ssh/id_rsa.pub\"))))))))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40341
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    ;; Add the 'hurd-vm' service, configured to use the\n"
"    ;; operating system configuration above.\n"
"    (append (list (service hurd-vm-service-type\n"
"                           (hurd-vm-configuration\n"
"                             (os %childhurd-os))))\n"
"            %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40345
msgid "That's it! The remainder of this section provides the reference of the service configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40346
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hurd-vm-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40352
msgid "This is the type of the Hurd in a Virtual Machine service.  Its value must be a @code{hurd-vm-configuration} object, which specifies the operating system (@pxref{operating-system Reference}) and the disk size for the Hurd Virtual Machine, the QEMU package to use as well as the options for running it."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40360
#, no-wrap
msgid ""
"(service hurd-vm-service-type\n"
"         (hurd-vm-configuration\n"
"          (disk-size (* 5000 (expt 2 20))) ;5G\n"
"          (memory-size 1024)))             ;1024MiB\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40364
msgid "would create a disk image big enough to build GNU@tie{}Hello, with some extra memory."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40366
#, no-wrap
msgid "{Data Type} hurd-vm-configuration"
msgstr "{Tipo de dados} hurd-vm-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40369
msgid "The data type representing the configuration for @code{hurd-vm-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40371
#, no-wrap
msgid "@code{os} (default: @var{%hurd-vm-operating-system})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40375
msgid "The operating system to instantiate.  This default is bare-bones with a permissive OpenSSH secure shell daemon listening on port 2222 (@pxref{Networking Services, @code{openssh-service-type}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40379
#, no-wrap
msgid "@code{image} (default: @var{hurd-vm-disk-image})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40382
msgid "The image object representing the disk image of this virtual machine (@pxref{System Images})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40383
#, no-wrap
msgid "@code{disk-size} (default: @code{'guess})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40385
msgid "The size of the disk image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40386
#, no-wrap
msgid "@code{memory-size} (default: @code{512})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40388
msgid "The memory size of the Virtual Machine in mebibytes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40389
#, no-wrap
msgid "@code{options} (default: @code{'(\"--snapshot\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40391
msgid "The extra options for running QEMU."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40396
msgid "If set, a non-zero positive integer used to parameterize Childhurd instances.  It is appended to the service's name, e.g. @code{childhurd1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40397
#, no-wrap
msgid "@code{net-options} (default: @var{hurd-vm-net-options})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40399
msgid "The procedure used to produce the list of QEMU networking options."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40401
msgid "By default, it produces"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40409
#, no-wrap
msgid ""
"'(\"--device\" \"rtl8139,netdev=net0\"\n"
"  \"--netdev\" (string-append\n"
"              \"user,id=net0,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{secrets-port}-:1004,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{ssh-port}-:2222,\"\n"
"              \"hostfwd=tcp:127.0.0.1:@var{vnc-port}-:5900\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40412
msgid "with forwarded ports:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40417
#, no-wrap
msgid ""
"@var{secrets-port}: @code{(+ 11004 (* 1000 @var{ID}))}\n"
"@var{ssh-port}: @code{(+ 10022 (* 1000 @var{ID}))}\n"
"@var{vnc-port}: @code{(+ 15900 (* 1000 @var{ID}))}\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40419
#, no-wrap
msgid "childhurd, offloading"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40420
#, no-wrap
msgid "Hurd, offloading"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40421
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{offloading?} (default: @code{#t})"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:40423
msgid "Whether to automatically set up offloading of builds to the childhurd."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40427
msgid "When enabled, this lets you run GNU/Hurd builds on the host and have them transparently offloaded to the VM, for instance when running a command like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40430
#, no-wrap
msgid "guix build coreutils -s i586-gnu\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40433
msgid "This option automatically sets up offloading like so:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40440
msgid "Authorizing the childhurd's key on the host so that the host accepts build results coming from the childhurd, which can be done like so (@pxref{Invoking guix archive, @command{guix archive --authorize}}, for more on that)."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40444
msgid "Creating a user account called @code{offloading} dedicated to offloading in the childhurd."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40448
msgid "Creating an SSH key pair on the host and making it an authorized key of the @code{offloading} account in the childhurd."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:40452
msgid "Adding the childhurd to @file{/etc/guix/machines.scm} (@pxref{Daemon Offload Setup})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40454
#, no-wrap
msgid "@code{secret-root} (default: @file{/etc/childhurd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40459
msgid "The root directory with out-of-band secrets to be installed into the childhurd once it runs.  Childhurds are volatile which means that on every startup, secrets such as the SSH host keys and Guix signing key are recreated."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40463
msgid "If the @file{/etc/childhurd} directory does not exist, the @code{secret-service} running in the Childhurd will be sent an empty list of secrets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40466
msgid "By default, the service automatically populates @file{/etc/childhurd} with the following non-volatile secrets, unless they already exist:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:40476
#, no-wrap
msgid ""
"/etc/childhurd/etc/guix/acl\n"
"/etc/childhurd/etc/guix/signing-key.pub\n"
"/etc/childhurd/etc/guix/signing-key.sec\n"
"/etc/childhurd/etc/ssh/authorized_keys.d/offloading\n"
"/etc/childhurd/etc/ssh/ssh_host_ed25519_key\n"
"/etc/childhurd/etc/ssh/ssh_host_ecdsa_key\n"
"/etc/childhurd/etc/ssh/ssh_host_ed25519_key.pub\n"
"/etc/childhurd/etc/ssh/ssh_host_ecdsa_key.pub\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40485
msgid "Note that by default the VM image is volatile, i.e., once stopped the contents are lost.  If you want a stateful image instead, override the configuration's @code{image} and @code{options} without the @code{--snapshot} flag using something along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40491
#, no-wrap
msgid ""
"(service hurd-vm-service-type\n"
"         (hurd-vm-configuration\n"
"          (image   (const \"/out/of/store/writable/hurd.img\"))\n"
"          (options '())))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:40493
#, no-wrap
msgid "Ganeti"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:40495
#, no-wrap
msgid "ganeti"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:40502
msgid "This service is considered experimental.  Configuration options may be changed in a backwards-incompatible manner, and not all features have been thorougly tested.  Users of this service are encouraged to share their experience at @email{guix-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40512
msgid "Ganeti is a virtual machine management system.  It is designed to keep virtual machines running on a cluster of servers even in the event of hardware failures, and to make maintenance and recovery tasks easy.  It consists of multiple services which are described later in this section.  In addition to the Ganeti service, you will need the OpenSSH service (@pxref{Networking Services, @code{openssh-service-type}}), and update the @file{/etc/hosts} file (@pxref{Service Reference, @code{hosts-service-type}}) with the cluster name and address (or use a DNS server)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40517
msgid "All nodes participating in a Ganeti cluster should have the same Ganeti and @file{/etc/hosts} configuration.  Here is an example configuration for a Ganeti cluster node that supports multiple storage backends, and installs the @code{debootstrap} and @code{guix} @dfn{OS providers}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40524
#, no-wrap
msgid ""
"(use-package-modules virtualization)\n"
"(use-service-modules base ganeti networking ssh)\n"
"(operating-system\n"
"  ;; @dots{}\n"
"  (host-name \"node1\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40545
#, no-wrap
msgid ""
"  ;; Install QEMU so we can use KVM-based instances, and LVM, DRBD and Ceph\n"
"  ;; in order to use the \"plain\", \"drbd\" and \"rbd\" storage backends.\n"
"  (packages (append (map specification->package\n"
"                         '(\"qemu\" \"lvm2\" \"drbd-utils\" \"ceph\"\n"
"                           ;; Add the debootstrap and guix OS providers.\n"
"                           \"ganeti-instance-guix\" \"ganeti-instance-debootstrap\"))\n"
"                    %base-packages))\n"
"  (services\n"
"   (append (list (service static-networking-service-type\n"
"                          (list (static-networking\n"
"                                 (addresses\n"
"                                  (list (network-address\n"
"                                         (device \"eth0\")\n"
"                                         (value \"192.168.1.201/24\"))))\n"
"                                 (routes\n"
"                                  (list (network-route\n"
"                                         (destination \"default\")\n"
"                                         (gateway \"192.168.1.254\"))))\n"
"                                 (name-servers '(\"192.168.1.252\"\n"
"                                                 \"192.168.1.253\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40550
#, no-wrap
msgid ""
"                 ;; Ganeti uses SSH to communicate between nodes.\n"
"                 (service openssh-service-type\n"
"                          (openssh-configuration\n"
"                           (permit-root-login 'prohibit-password)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40558
#, no-wrap
msgid ""
"                 (simple-service 'ganeti-hosts-entries hosts-service-type\n"
"                                 (list\n"
"                                   (host \"192.168.1.200\" \"ganeti.example.com\")\n"
"                                   (host \"192.168.1.201\" \"node1.example.com\"\n"
"                                         '(\"node1\"))\n"
"                                   (host \"192.168.1.202\" \"node2.example.com\"\n"
"                                         '(\"node2\"))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40568
#, no-wrap
msgid ""
"                 (service ganeti-service-type\n"
"                          (ganeti-configuration\n"
"                           ;; This list specifies allowed file system paths\n"
"                           ;; for storing virtual machine images.\n"
"                           (file-storage-paths '(\"/srv/ganeti/file-storage\"))\n"
"                           ;; This variable configures a single \"variant\" for\n"
"                           ;; both Debootstrap and Guix that works with KVM.\n"
"                           (os %default-ganeti-os))))\n"
"           %base-services)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40576
msgid "Users are advised to read the @url{https://docs.ganeti.org/docs/ganeti/3.0/html/admin.html,Ganeti administrators guide} to learn about the various cluster options and day-to-day operations.  There is also a @url{https://guix.gnu.org/blog/2020/running-a-ganeti-cluster-on-guix/,blog post} describing how to configure and initialize a small cluster."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40577
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40580
msgid "This is a service type that includes all the various services that Ganeti nodes should run."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40585
msgid "Its value is a @code{ganeti-configuration} object that defines the package to use for CLI operations, as well as configuration for the various daemons.  Allowed file storage paths and available guest operating systems are also configured through this data type."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40587
#, no-wrap
msgid "{Data Type} ganeti-configuration"
msgstr "{Tipo de dados} ganeti-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40589
msgid "The @code{ganeti} service takes the following configuration options:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40591 guix-git/doc/guix.texi:40841
#: guix-git/doc/guix.texi:40891 guix-git/doc/guix.texi:40921
#: guix-git/doc/guix.texi:40948 guix-git/doc/guix.texi:40980
#: guix-git/doc/guix.texi:41033 guix-git/doc/guix.texi:41053
#: guix-git/doc/guix.texi:41079 guix-git/doc/guix.texi:41112
#: guix-git/doc/guix.texi:41155
#, no-wrap
msgid "@code{ganeti} (default: @code{ganeti})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40596
msgid "The @code{ganeti} package to use.  It will be installed to the system profile and make @command{gnt-cluster}, @command{gnt-instance}, etc available.  Note that the value specified here does not affect the other services as each refer to a specific @code{ganeti} package (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40597
#, no-wrap
msgid "@code{noded-configuration} (default: @code{(ganeti-noded-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40598
#, no-wrap
msgid "@code{confd-configuration} (default: @code{(ganeti-confd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40599
#, no-wrap
msgid "@code{wconfd-configuration} (default: @code{(ganeti-wconfd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40600
#, no-wrap
msgid "@code{luxid-configuration} (default: @code{(ganeti-luxid-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40601
#, no-wrap
msgid "@code{rapi-configuration} (default: @code{(ganeti-rapi-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40602
#, no-wrap
msgid "@code{kvmd-configuration} (default: @code{(ganeti-kvmd-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40603
#, no-wrap
msgid "@code{mond-configuration} (default: @code{(ganeti-mond-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40604
#, no-wrap
msgid "@code{metad-configuration} (default: @code{(ganeti-metad-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40605
#, no-wrap
msgid "@code{watcher-configuration} (default: @code{(ganeti-watcher-configuration)})"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:40606
#, no-wrap
msgid "@code{cleaner-configuration} (default: @code{(ganeti-cleaner-configuration)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40611
msgid "These options control the various daemons and cron jobs that are distributed with Ganeti.  The possible values for these are described in detail below.  To override a setting, you must use the configuration type for that service:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40621
#, no-wrap
msgid ""
"(service ganeti-service-type\n"
"         (ganeti-configuration\n"
"          (rapi-configuration\n"
"           (ganeti-rapi-configuration\n"
"            (interface \"eth1\"))))\n"
"          (watcher-configuration\n"
"           (ganeti-watcher-configuration\n"
"            (rapi-ip \"10.0.0.1\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40623
#, no-wrap
msgid "@code{file-storage-paths} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40625
msgid "List of allowed directories for file storage backend."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40626
#, fuzzy, no-wrap
#| msgid "@code{host} (default: @code{#f})"
msgid "@code{hooks} (default: @code{#f})"
msgstr "@code{host} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40629
msgid "When set, this should be a file-like object containing a directory with @url{https://docs.ganeti.org/docs/ganeti/3.0/html/hooks.html,cluster execution hooks}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40630
#, no-wrap
msgid "@code{os} (default: @code{%default-ganeti-os})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40632
msgid "List of @code{<ganeti-os>} records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40636
msgid "In essence @code{ganeti-service-type} is shorthand for declaring each service individually:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40647
#, no-wrap
msgid ""
"(service ganeti-noded-service-type)\n"
"(service ganeti-confd-service-type)\n"
"(service ganeti-wconfd-service-type)\n"
"(service ganeti-luxid-service-type)\n"
"(service ganeti-kvmd-service-type)\n"
"(service ganeti-mond-service-type)\n"
"(service ganeti-metad-service-type)\n"
"(service ganeti-watcher-service-type)\n"
"(service ganeti-cleaner-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40651
msgid "Plus a service extension for @code{etc-service-type} that configures the file storage backend and OS variants."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40654
#, no-wrap
msgid "{Data Type} ganeti-os"
msgstr "{Tipo de dados} ganeti-os"

#. type: deftp
#: guix-git/doc/guix.texi:40657
msgid "This data type is suitable for passing to the @code{os} parameter of @code{ganeti-configuration}.  It takes the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40663
msgid "The name for this OS provider.  It is only used to specify where the configuration ends up.  Setting it to ``debootstrap'' will create @file{/etc/ganeti/instance-debootstrap}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40664
#, fuzzy, no-wrap
#| msgid "@code{extend} (default: @code{#f})"
msgid "@code{extension} (default: @code{#f})"
msgstr "@code{extend} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:40667
msgid "The file extension for variants of this OS type.  For example @file{.conf} or @file{.scm}.  It will be appended to the variant file name if set."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40668
#, no-wrap
msgid "@code{variants} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40672
msgid "This must be either a list of @code{ganeti-os-variant} objects for this OS, or a ``file-like'' object (@pxref{G-Expressions, file-like objects})  representing the variants directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40676
msgid "To use the Guix OS provider with variant definitions residing in a local directory instead of declaring individual variants (see @var{guix-variants} below), you can do:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40682
#, no-wrap
msgid ""
"(ganeti-os\n"
" (name \"guix\")\n"
" (variants (local-file \"ganeti-guix-variants\"\n"
"                       #:recursive? #true)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40688
msgid "Note that you will need to maintain the @file{variants.list} file (see @code{@url{https://docs.ganeti.org/docs/ganeti/3.0/man/ganeti-os-interface.html, ganeti-os-interface(7)}})  manually in this case."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40692
#, no-wrap
msgid "{Data Type} ganeti-os-variant"
msgstr "{Tipo de dados} ganeti-os-variant"

#. type: deftp
#: guix-git/doc/guix.texi:40695
msgid "This is the data type for a Ganeti OS variant.  It takes the following parameters:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40699
msgid "The name of this variant."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:40700
#, no-wrap
msgid "configuration"
msgstr "configuration"

#. type: table
#: guix-git/doc/guix.texi:40702
msgid "A configuration file for this variant."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40705
#, no-wrap
msgid "%default-debootstrap-hooks"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40707
msgid "This variable contains hooks to configure networking and the GRUB bootloader."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40709
#, no-wrap
msgid "%default-debootstrap-extra-pkgs"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40711
msgid "This variable contains a list of packages suitable for a fully-virtualized guest."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40713
#, no-wrap
msgid "{Data Type} debootstrap-configuration"
msgstr "{Tipo de dados} debootstrap-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40716
msgid "This data type creates configuration files suitable for the debootstrap OS provider."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40718
#, no-wrap
msgid "@code{hooks} (default: @code{%default-debootstrap-hooks})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40722
msgid "When not @code{#f}, this must be a G-expression that specifies a directory with scripts that will run when the OS is installed.  It can also be a list of @code{(name . file-like)} pairs.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40725
#, no-wrap
msgid "`((99-hello-world . ,(plain-file \"#!/bin/sh\\necho Hello, World\")))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40730
msgid "That will create a directory with one executable named @code{99-hello-world} and run it every time this variant is installed.  If set to @code{#f}, hooks in @file{/etc/ganeti/instance-debootstrap/hooks} will be used, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40730
#, no-wrap
msgid "@code{proxy} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40732
msgid "Optional HTTP proxy to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40732 guix-git/doc/guix.texi:43199
#, no-wrap
msgid "@code{mirror} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40735
msgid "The Debian mirror.  Typically something like @code{http://ftp.no.debian.org/debian}.  The default varies depending on the distribution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40735
#, no-wrap
msgid "@code{arch} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40738
msgid "The dpkg architecture.  Set to @code{armhf} to debootstrap an ARMv7 instance on an AArch64 host.  Default is to use the current system architecture."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40738
#, no-wrap
msgid "@code{suite} (default: @code{\"stable\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40741
msgid "When set, this must be a Debian distribution ``suite'' such as @code{buster} or @code{focal}.  If set to @code{#f}, the default for the OS provider is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40741
#, no-wrap
msgid "@code{extra-pkgs} (default: @code{%default-debootstrap-extra-pkgs})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40744
msgid "List of extra packages that will get installed by dpkg in addition to the minimal system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40744
#, no-wrap
msgid "@code{components} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40747
msgid "When set, must be a list of Debian repository ``components''.  For example @code{'(\"main\" \"contrib\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40747
#, no-wrap
msgid "@code{generate-cache?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40749
msgid "Whether to automatically cache the generated debootstrap archive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40749
#, no-wrap
msgid "@code{clean-cache} (default: @code{14})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40752
msgid "Discard the cache after this amount of days.  Use @code{#f} to never clear the cache."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40752
#, no-wrap
msgid "@code{partition-style} (default: @code{'msdos})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40755
msgid "The type of partition to create.  When set, it must be one of @code{'msdos}, @code{'none} or a string."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40755
#, no-wrap
msgid "@code{partition-alignment} (default: @code{2048})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40757
msgid "Alignment of the partition in sectors."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40760
#, fuzzy, no-wrap
#| msgid "Instantiating a system configuration."
msgid "{Procedure} debootstrap-variant name configuration"
msgstr "Inicializando uma configuração de sistema."

#. type: deffn
#: guix-git/doc/guix.texi:40763
msgid "This is a helper procedure that creates a @code{ganeti-os-variant} record.  It takes two parameters: a name and a @code{debootstrap-configuration} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40765
#, no-wrap
msgid "{Procedure} debootstrap-os variants@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40768
msgid "This is a helper procedure that creates a @code{ganeti-os} record.  It takes a list of variants created with @code{debootstrap-variant}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40770
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "{Procedure} guix-variant name configuration"
msgstr "Configuração do git"

#. type: deffn
#: guix-git/doc/guix.texi:40775
msgid "This is a helper procedure that creates a @code{ganeti-os-variant} record for use with the Guix OS provider.  It takes a name and a G-expression that returns a ``file-like'' (@pxref{G-Expressions, file-like objects}) object containing a Guix System configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40777
#, no-wrap
msgid "{Procedure} guix-os variants@dots{}"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:40780
msgid "This is a helper procedure that creates a @code{ganeti-os} record.  It takes a list of variants produced by @code{guix-variant}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40782
#, no-wrap
msgid "%default-debootstrap-variants"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40786
msgid "This is a convenience variable to make the debootstrap provider work ``out of the box'' without users having to declare variants manually.  It contains a single debootstrap variant with the default configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40791
#, no-wrap
msgid ""
"(list (debootstrap-variant\n"
"       \"default\"\n"
"       (debootstrap-configuration)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40794
#, no-wrap
msgid "%default-guix-variants"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40798
msgid "This is a convenience variable to make the Guix OS provider work without additional configuration.  It creates a virtual machine that has an SSH server, a serial console, and authorizes the Ganeti hosts SSH keys."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40804
#, no-wrap
msgid ""
"(list (guix-variant\n"
"       \"default\"\n"
"       (file-append ganeti-instance-guix\n"
"                    \"/share/doc/ganeti-instance-guix/examples/dynamic.scm\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40810
msgid "Users can implement support for OS providers unbeknownst to Guix by extending the @code{ganeti-os} and @code{ganeti-os-variant} records appropriately.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:40819
#, no-wrap
msgid ""
"(ganeti-os\n"
" (name \"custom\")\n"
" (extension \".conf\")\n"
" (variants\n"
"  (list (ganeti-os-variant\n"
"         (name \"foo\")\n"
"         (configuration (plain-file \"bar\" \"this is fine\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40824
msgid "That creates @file{/etc/ganeti/instance-custom/variants/foo.conf} which points to a file in the store with contents @code{this is fine}.  It also creates @file{/etc/ganeti/instance-custom/variants/variants.list} with contents @code{foo}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40827
msgid "Obviously this may not work for all OS providers out there.  If you find the interface limiting, please reach out to @email{guix-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:40830
msgid "The rest of this section documents the various services that are included by @code{ganeti-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40831
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-noded-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40835
msgid "@command{ganeti-noded} is the daemon responsible for node-specific functions within the Ganeti system.  The value of this service must be a @code{ganeti-noded-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40837
#, no-wrap
msgid "{Data Type} ganeti-noded-configuration"
msgstr "{Tipo de dados} ganeti-noded-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40839
msgid "This is the configuration for the @code{ganeti-noded} service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40843 guix-git/doc/guix.texi:40893
#: guix-git/doc/guix.texi:40923 guix-git/doc/guix.texi:40950
#: guix-git/doc/guix.texi:40982 guix-git/doc/guix.texi:41035
#: guix-git/doc/guix.texi:41055 guix-git/doc/guix.texi:41081
#: guix-git/doc/guix.texi:41114
msgid "The @code{ganeti} package to use for this service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40844
#, no-wrap
msgid "@code{port} (default: @code{1811})"
msgstr "@code{port} (padrão: @code{1811})"

#. type: table
#: guix-git/doc/guix.texi:40846
msgid "The TCP port on which the node daemon listens for network requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40847 guix-git/doc/guix.texi:40897
#: guix-git/doc/guix.texi:40989 guix-git/doc/guix.texi:41059
#, no-wrap
msgid "@code{address} (default: @code{\"0.0.0.0\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40850
msgid "The network address that the daemon will bind to.  The default address means bind to all available addresses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40854
msgid "When this is set, it must be a specific network interface (e.g.@: @code{eth0})  that the daemon will bind to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40855 guix-git/doc/guix.texi:40997
#, no-wrap
msgid "@code{max-clients} (default: @code{20})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40859
msgid "This sets a limit on the maximum number of simultaneous client connections that the daemon will handle.  Connections above this count are accepted, but no responses will be sent until enough connections have closed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40860 guix-git/doc/guix.texi:41002
#, no-wrap
msgid "@code{ssl?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40864
msgid "Whether to use SSL/TLS to encrypt network communications.  The certificate is automatically provisioned by the cluster and can be rotated with @command{gnt-cluster renew-crypto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40865 guix-git/doc/guix.texi:41005
#, no-wrap
msgid "@code{ssl-key} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40867 guix-git/doc/guix.texi:41007
msgid "This can be used to provide a specific encryption key for TLS communications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40868 guix-git/doc/guix.texi:41008
#, no-wrap
msgid "@code{ssl-cert} (default: @file{\"/var/lib/ganeti/server.pem\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40870 guix-git/doc/guix.texi:41010
msgid "This can be used to provide a specific certificate for TLS communications."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40874 guix-git/doc/guix.texi:41014
msgid "When true, the daemon performs additional logging for debugging purposes.  Note that this will leak encryption details to the log files, use with caution."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40878
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-confd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40884
msgid "@command{ganeti-confd} answers queries related to the configuration of a Ganeti cluster.  The purpose of this daemon is to have a highly available and fast way to query cluster configuration values.  It is automatically active on all @dfn{master candidates}.  The value of this service must be a @code{ganeti-confd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40887
#, no-wrap
msgid "{Data Type} ganeti-confd-configuration"
msgstr "{Tipo de dados} ganeti-confd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40889
msgid "This is the configuration for the @code{ganeti-confd} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40894
#, no-wrap
msgid "@code{port} (default: @code{1814})"
msgstr "@code{port} (padrão: @code{1814})"

#. type: table
#: guix-git/doc/guix.texi:40896
msgid "The UDP port on which to listen for network requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40899
msgid "Network address that the daemon will bind to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40902 guix-git/doc/guix.texi:40931
#: guix-git/doc/guix.texi:40958 guix-git/doc/guix.texi:41038
#: guix-git/doc/guix.texi:41065 guix-git/doc/guix.texi:41091
msgid "When true, the daemon performs additional logging for debugging purposes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40906
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-wconfd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40912
msgid "@command{ganeti-wconfd} is the daemon that has authoritative knowledge about the cluster configuration and is the only entity that can accept changes to it.  All jobs that need to modify the configuration will do so by sending appropriate requests to this daemon.  It only runs on the @dfn{master node} and will automatically disable itself on other nodes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40915
msgid "The value of this service must be a @code{ganeti-wconfd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40917
#, no-wrap
msgid "{Data Type} ganeti-wconfd-configuration"
msgstr "{Tipo de dados} ganeti-wconfd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40919
msgid "This is the configuration for the @code{ganeti-wconfd} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40924 guix-git/doc/guix.texi:40951
#, no-wrap
msgid "@code{no-voting?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40928
msgid "The daemon will refuse to start if the majority of cluster nodes does not agree that it is running on the master node.  Set to @code{#t} to start even if a quorum can not be reached (dangerous, use with caution)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40935
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-luxid-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40940
msgid "@command{ganeti-luxid} is a daemon used to answer queries related to the configuration and the current live state of a Ganeti cluster.  Additionally, it is the authoritative daemon for the Ganeti job queue.  Jobs can be submitted via this daemon and it schedules and starts them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40942
msgid "It takes a @code{ganeti-luxid-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40944
#, no-wrap
msgid "{Data Type} ganeti-luxid-configuration"
msgstr "{Tipo de dados} ganeti-luxid-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40946
#, fuzzy
msgid "This is the configuration for the @code{ganeti-luxid} service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:40955
msgid "The daemon will refuse to start if it cannot verify that the majority of cluster nodes believes that it is running on the master node.  Set to @code{#t} to ignore such checks and start anyway (this can be dangerous)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40962
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-rapi-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:40966
msgid "@command{ganeti-rapi} provides a remote API for Ganeti clusters.  It runs on the master node and can be used to perform cluster actions programmatically via a JSON-based RPC protocol."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40972
msgid "Most query operations are allowed without authentication (unless @var{require-authentication?} is set), whereas write operations require explicit authorization via the @file{/var/lib/ganeti/rapi/users} file.  See the @url{https://docs.ganeti.org/docs/ganeti/3.0/html/rapi.html, Ganeti Remote API documentation} for more information."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:40974
msgid "The value of this service must be a @code{ganeti-rapi-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:40976
#, no-wrap
msgid "{Data Type} ganeti-rapi-configuration"
msgstr "{Tipo de dados} ganeti-rapi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:40978
msgid "This is the configuration for the @code{ganeti-rapi} service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40983
#, no-wrap
msgid "@code{require-authentication?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40985
msgid "Whether to require authentication even for read-only operations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:40986
#, no-wrap
msgid "@code{port} (default: @code{5080})"
msgstr "@code{port} (padrão: @code{5080})"

#. type: table
#: guix-git/doc/guix.texi:40988
msgid "The TCP port on which to listen to API requests."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40992
msgid "The network address that the service will bind to.  By default it listens on all configured addresses."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:40996
msgid "When set, it must specify a specific network interface such as @code{eth0} that the daemon will bind to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41001
msgid "The maximum number of simultaneous client requests to handle.  Further connections are allowed, but no responses are sent until enough connections have closed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41004
msgid "Whether to use SSL/TLS encryption on the RAPI port."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41018
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-kvmd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41026
msgid "@command{ganeti-kvmd} is responsible for determining whether a given KVM instance was shut down by an administrator or a user.  Normally Ganeti will restart an instance that was not stopped through Ganeti itself.  If the cluster option @code{user_shutdown} is true, this daemon monitors the @code{QMP} socket provided by QEMU and listens for shutdown events, and marks the instance as @dfn{USER_down} instead of @dfn{ERROR_down} when it shuts down gracefully by itself."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41028
msgid "It takes a @code{ganeti-kvmd-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41030
#, no-wrap
msgid "{Data Type} ganeti-kvmd-configuration"
msgstr "{Tipo de dados} ganeti-kvmd-configuration"

#. type: defvar
#: guix-git/doc/guix.texi:41042
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-mond-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41046
msgid "@command{ganeti-mond} is an optional daemon that provides Ganeti monitoring functionality.  It is responsible for running data collectors and publish the collected information through a HTTP interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41048
msgid "It takes a @code{ganeti-mond-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41050
#, no-wrap
msgid "{Data Type} ganeti-mond-configuration"
msgstr "{Tipo de dados} ganeti-mond-configuration"

#. type: item
#: guix-git/doc/guix.texi:41056
#, no-wrap
msgid "@code{port} (default: @code{1815})"
msgstr "@code{port} (padrão: @code{1815})"

#. type: table
#: guix-git/doc/guix.texi:41058 guix-git/doc/guix.texi:41084
msgid "The port on which the daemon will listen."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41062
msgid "The network address that the daemon will bind to.  By default it binds to all available interfaces."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41069
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-metad-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41072
msgid "@command{ganeti-metad} is an optional daemon that can be used to provide information about the cluster to instances or OS install scripts."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41074
msgid "It takes a @code{ganeti-metad-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41076
#, no-wrap
msgid "{Data Type} ganeti-metad-configuration"
msgstr "{Tipo de dados} ganeti-metad-configuration"

#. type: table
#: guix-git/doc/guix.texi:41088
msgid "If set, the daemon will bind to this address only.  If left unset, the behavior depends on the cluster configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41095
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-watcher-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41103
msgid "@command{ganeti-watcher} is a script designed to run periodically and ensure the health of a cluster.  It will automatically restart instances that have stopped without Ganeti's consent, and repairs DRBD links in case a node has rebooted.  It also archives old cluster jobs and restarts Ganeti daemons that are not running.  If the cluster parameter @code{ensure_node_health} is set, the watcher will also shutdown instances and DRBD devices if the node it is running on is declared offline by known master candidates."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41105
msgid "It can be paused on all nodes with @command{gnt-cluster watcher pause}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41107
msgid "The service takes a @code{ganeti-watcher-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41109
#, no-wrap
msgid "{Data Type} ganeti-watcher-configuration"
msgstr "{Tipo de dados} ganeti-watcher-configuration"

#. type: item
#: guix-git/doc/guix.texi:41115
#, fuzzy, no-wrap
msgid "@code{schedule} (default: @code{\"*/5 * * * *\"})"
msgstr "@code{porta} (default: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:41120
msgid "When to run the script, expressed either as a string in traditional cron syntax or as a gexp representing a Shepherd calendar event (@pxref{Timers,,, shepherd, The GNU Shepherd Manual}).  The default is every five minutes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41121
#, no-wrap
msgid "@code{rapi-ip} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41124
msgid "This option needs to be specified only if the RAPI daemon is configured to use a particular interface or address.  By default the cluster address is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41125
#, no-wrap
msgid "@code{job-age} (default: @code{(* 6 3600)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41128
msgid "Archive cluster jobs older than this age, specified in seconds.  The default is 6 hours.  This keeps @command{gnt-job list} manageable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41129
#, no-wrap
msgid "@code{verify-disks?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41133
msgid "If this is @code{#f}, the watcher will not try to repair broken DRBD links automatically.  Administrators will need to use @command{gnt-cluster verify-disks} manually instead."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41136
msgid "When @code{#t}, the script performs additional logging for debugging purposes."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41140
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "ganeti-cleaner-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41148
msgid "@command{ganeti-cleaner} is a script designed to run periodically and remove old files from the cluster.  This service type controls two @dfn{cron jobs}: one intended for the master node that permanently purges old cluster jobs, and one intended for every node that removes expired X509 certificates, keys, and outdated @command{ganeti-watcher} information.  Like all Ganeti services, it is safe to include even on non-master nodes as it will disable itself as necessary."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41150
msgid "It takes a @code{ganeti-cleaner-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41152
#, no-wrap
msgid "{Data Type} ganeti-cleaner-configuration"
msgstr "{Tipo de dados} ganeti-cleaner-configuration"

#. type: table
#: guix-git/doc/guix.texi:41157
msgid "The @code{ganeti} package to use for the @command{gnt-cleaner} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41158
#, no-wrap
msgid "@code{master-schedule} (default: @code{\"45 1 * * *\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41161
msgid "How often to run the master cleaning job.  The default is once per day, at 01:45:00."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41162
#, no-wrap
msgid "@code{node-schedule} (default: @code{\"45 2 * * *\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41165
msgid "How often to run the node cleaning job.  The default is once per day, at 02:45:00."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41179
msgid "The @code{(gnu services version-control)} module provides a service to allow remote access to local Git repositories.  There are three options: the @code{git-daemon-service-type}, which provides access to repositories via the @code{git://} unsecured TCP-based protocol, extending the @code{nginx} web server to proxy some requests to @code{git-http-backend}, or providing a web interface with @code{cgit-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41180
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "git-daemon-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:41183
msgid "Type for a service that runs @command{git daemon}, a simple TCP server to expose repositories over the Git protocol for anonymous access."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:41188
msgid "The value for this service type is a @code{<git-daemon-configuration>} record, by default it allows read-only access to exported@footnote{By creating the magic file @file{git-daemon-export-ok} in the repository directory.} repositories under @file{/srv/git}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41190
#, no-wrap
msgid "{Data Type} git-daemon-configuration"
msgstr "{Tipo de dados} git-daemon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:41192
#, fuzzy
msgid "Data type representing the configuration for @code{git-daemon-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:41194
#, no-wrap
msgid "@code{package} (default: @code{git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41196 guix-git/doc/guix.texi:41256
msgid "Package object of the Git distributed version control system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41197 guix-git/doc/guix.texi:41260
#, no-wrap
msgid "@code{export-all?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41200
msgid "Whether to allow access for all Git repositories, even if they do not have the @file{git-daemon-export-ok} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41201
#, no-wrap
msgid "@code{base-path} (default: @file{/srv/git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41207
msgid "Whether to remap all the path requests as relative to the given path.  If you run @command{git daemon} with @code{(base-path \"/srv/git\")} on @samp{example.com}, then if you later try to pull @indicateurl{git://example.com/hello.git}, git daemon will interpret the path as @file{/srv/git/hello.git}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41208
#, no-wrap
msgid "@code{user-path} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41216
msgid "Whether to allow @code{~user} notation to be used in requests.  When specified with empty string, requests to @indicateurl{git://host/~alice/foo} is taken as a request to access @code{foo} repository in the home directory of user @code{alice}.  If @code{(user-path \"@var{path}\")} is specified, the same request is taken as a request to access @file{@var{path}/foo} repository in the home directory of user @code{alice}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41217
#, no-wrap
msgid "@code{listen} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41220
msgid "Whether to listen on specific IP addresses or hostnames, defaults to all."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41221
#, no-wrap
msgid "@code{port} (default: @code{#f})"
msgstr "@code{port} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:41223
msgid "Whether to listen on an alternative port, which defaults to 9418."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41224
#, no-wrap
msgid "@code{whitelist} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41226
msgid "If not empty, only allow access to this list of directories."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41230
msgid "Extra options that will be passed to @command{git daemon}.@footnote{Run @command{man git-daemon} for more information.}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41244
msgid "The @code{git://} protocol lacks authentication.  When you pull from a repository fetched via @code{git://}, you don't know whether the data you receive was modified or is even coming from the specified host, and your connection is subject to eavesdropping.  It's better to use an authenticated and encrypted transport, such as @code{https}.  Although Git allows you to serve repositories using unsophisticated file-based web servers, there is a faster protocol implemented by the @code{git-http-backend} program.  This program is the back-end of a proper Git web service.  It is designed to sit behind a FastCGI proxy.  @xref{Web Services}, for more on running the necessary @code{fcgiwrap} daemon."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41247
msgid "Guix has a separate configuration data type for serving Git repositories over HTTP."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:41248
#, no-wrap
msgid "{Data Type} git-http-configuration"
msgstr "{Tipo de dados} git-http-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:41252
msgid "Data type representing the configuration for a future @code{git-http-service-type}; can currently be used to configure Nginx through @code{git-http-nginx-location-configuration}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41254
#, no-wrap
msgid "@code{package} (default: @var{git})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41257
#, no-wrap
msgid "@code{git-root} (default: @file{/srv/git})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41259
msgid "Directory containing the Git repositories to expose to the world."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41263
msgid "Whether to expose access for all Git repositories in @var{git-root}, even if they do not have the @file{git-daemon-export-ok} file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41264
#, no-wrap
msgid "@code{uri-path} (default: @samp{/git/})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41269
msgid "Path prefix for Git access.  With the default @samp{/git/} prefix, this will map @indicateurl{http://@var{server}/git/@var{repo}.git} to @file{/srv/git/@var{repo}.git}.  Requests whose URI paths do not begin with this prefix are not passed on to this Git instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:41270
#, no-wrap
msgid "@code{fcgiwrap-socket} (default: @code{127.0.0.1:9000})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:41273
msgid "The socket on which the @code{fcgiwrap} daemon is listening.  @xref{Web Services}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41280
msgid "There is no @code{git-http-service-type}, currently; instead you can create an @code{nginx-location-configuration} from a @code{git-http-configuration} and then add that location to a web server."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:41281
#, fuzzy, no-wrap
#| msgid "nginx-location-configuration body"
msgid "{Procedure} git-http-nginx-location-configuration @"
msgstr "nginx-location-configuration body"

#. type: deffn
#: guix-git/doc/guix.texi:41286
msgid "[config=(git-http-configuration)] Compute an @code{nginx-location-configuration} that corresponds to the given Git http configuration.  An example nginx service definition to serve the default @file{/srv/git} over HTTPS might be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41303
#, no-wrap
msgid ""
"(service nginx-service-type\n"
"         (nginx-configuration\n"
"          (server-blocks\n"
"           (list\n"
"            (nginx-server-configuration\n"
"             (listen '(\"443 ssl\"))\n"
"             (server-name \"git.my-host.org\")\n"
"             (ssl-certificate\n"
"              \"/etc/certs/git.my-host.org/fullchain.pem\")\n"
"             (ssl-certificate-key\n"
"              \"/etc/certs/git.my-host.org/privkey.pem\")\n"
"             (locations\n"
"              (list\n"
"               (git-http-nginx-location-configuration\n"
"                (git-http-configuration (uri-path \"/\"))))))))))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:41310
msgid "This example assumes that you are using Let's Encrypt to get your TLS certificate.  @xref{Certificate Services}.  The default @code{certbot} service will redirect all HTTP traffic on @code{git.my-host.org} to HTTPS@.  You will also need to add an @code{fcgiwrap} proxy to your system services.  @xref{Web Services}."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:41312
#, no-wrap
msgid "Cgit Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:41314
#, no-wrap
msgid "Cgit service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:41315
#, no-wrap
msgid "Git, web interface"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41318
msgid "@uref{https://git.zx2c4.com/cgit/, Cgit} is a web frontend for Git repositories written in C."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41321
msgid "The following example will configure the service with default values.  By default, Cgit can be accessed on port 80 (@code{http://localhost:80})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:41324
#, no-wrap
msgid "(service cgit-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41328
msgid "The @code{file-object} type designates either a file-like object (@pxref{G-Expressions, file-like objects}) or a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:41332
msgid "Available @code{cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41333
#, no-wrap
msgid "{@code{cgit-configuration} parameter} package package"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41335
msgid "The CGIT package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41338
#, no-wrap
msgid "{@code{cgit-configuration} parameter} nginx-server-configuration-list nginx"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41340
msgid "NGINX configuration."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41343
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object about-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41346
msgid "Specifies a command which will be invoked to format the content of about pages (both top-level and for each repository)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41351
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string agefile"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41354
msgid "Specifies a path, relative to each repository path, which can be used to specify the date and time of the youngest commit in the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41359
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object auth-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41362
msgid "Specifies a command that will be invoked for authenticating repository access."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41367
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string branch-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41370
msgid "Flag which, when set to @samp{age}, enables date ordering in the branch ref list, and when set @samp{name} enables ordering by branch name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41372
msgid "Defaults to @samp{\"name\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41375
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string cache-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41377
msgid "Path used to store the cgit cache entries."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41379
msgid "Defaults to @samp{\"/var/cache/cgit\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41382
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-static-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41385
msgid "Number which specifies the time-to-live, in minutes, for the cached version of repository pages accessed with a fixed SHA1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41387 guix-git/doc/guix.texi:41831
msgid "Defaults to @samp{-1}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41390
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-dynamic-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41393
msgid "Number which specifies the time-to-live, in minutes, for the cached version of repository pages accessed without a fixed SHA1."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41398
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-repo-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41401
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository summary page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41406
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-root-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41409
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41414
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-scanrc-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41417
msgid "Number which specifies the time-to-live, in minutes, for the result of scanning a path for Git repositories."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41422
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-about-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41425
msgid "Number which specifies the time-to-live, in minutes, for the cached version of the repository about page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41430
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-snapshot-ttl"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41433
msgid "Number which specifies the time-to-live, in minutes, for the cached version of snapshots."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41438
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer cache-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41441
msgid "The maximum number of entries in the cgit cache.  When set to @samp{0}, caching is disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41446
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean case-sensitive-sort?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41448
msgid "Sort items in the repo list case sensitively."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41453
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list clone-prefix"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41456
msgid "List of common prefixes which, when combined with a repository URL, generates valid clone URLs for the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41461
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list clone-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41463
msgid "List of @code{clone-url} templates."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41468
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object commit-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41470
msgid "Command which will be invoked to format commit messages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41475
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string commit-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41479 guix-git/doc/guix.texi:42038
msgid "Flag which, when set to @samp{date}, enables strict date ordering in the commit log, and when set to @samp{topo} enables strict topological ordering."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41481
msgid "Defaults to @samp{\"git log\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41484
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object css"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41486
msgid "URL which specifies the css document to include in all cgit pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41488
msgid "Defaults to @samp{\"/share/cgit/cgit.css\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41491
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object email-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41495
msgid "Specifies a command which will be invoked to format names and email address of committers, authors, and taggers, as represented in various places throughout the cgit interface."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41500
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean embedded?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41503
msgid "Flag which, when set to @samp{#t}, will make cgit generate a HTML fragment suitable for embedding in other HTML pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41508
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-commit-graph?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41512
msgid "Flag which, when set to @samp{#t}, will make cgit print an ASCII-art commit history graph to the left of the commit messages in the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41517
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-filter-overrides?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41520
msgid "Flag which, when set to @samp{#t}, allows all filter settings to be overridden in repository-specific cgitrc files."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41525
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-follow-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41528
msgid "Flag which, when set to @samp{#t}, allows users to follow a file in the log view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41533
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-http-clone?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41536
msgid "If set to @samp{#t}, cgit will act as an dumb HTTP endpoint for Git clones."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41541
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-index-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41544
msgid "Flag which, when set to @samp{#t}, will make cgit generate extra links \"summary\", \"commit\", \"tree\" for each repo in the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41549
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-index-owner?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41552
msgid "Flag which, when set to @samp{#t}, will make cgit display the owner of each repo in the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41557
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-log-filecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41560
msgid "Flag which, when set to @samp{#t}, will make cgit print the number of modified files for each commit on the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41565
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-log-linecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41568
msgid "Flag which, when set to @samp{#t}, will make cgit print the number of added and removed lines for each commit on the repository log page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41573
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-remote-branches?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41576 guix-git/doc/guix.texi:42101
msgid "Flag which, when set to @code{#t}, will make cgit display remote branches in the summary and refs views."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41581
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-subject-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41585
msgid "Flag which, when set to @code{1}, will make cgit use the subject of the parent commit as link text when generating links to parent commits in commit view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41590
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-html-serving?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41594
msgid "Flag which, when set to @samp{#t}, will make cgit use the subject of the parent commit as link text when generating links to parent commits in commit view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41599
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-tree-linenumbers?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41602
msgid "Flag which, when set to @samp{#t}, will make cgit generate linenumber links for plaintext blobs printed in the tree view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41607
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean enable-git-config?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41610
msgid "Flag which, when set to @samp{#f}, will allow cgit to use Git config to set any repo specific settings."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41615
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object favicon"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41617
msgid "URL used as link to a shortcut icon for cgit."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41619
msgid "Defaults to @samp{\"/favicon.ico\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41622
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string footer"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41626
msgid "The content of the file specified with this option will be included verbatim at the bottom of all pages (i.e.@: it replaces the standard \"generated by...\"@: message)."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41631
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string head-include"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41634
msgid "The content of the file specified with this option will be included verbatim in the HTML HEAD section on all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41639
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41642
msgid "The content of the file specified with this option will be included verbatim at the top of all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41647
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object include"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41650
msgid "Name of a configfile to include before the rest of the current config- file is parsed."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41655
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string index-header"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41658
msgid "The content of the file specified with this option will be included verbatim above the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41663
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string index-info"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41666
msgid "The content of the file specified with this option will be included verbatim below the heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41671
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean local-time?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41674
msgid "Flag which, if set to @samp{#t}, makes cgit print commit and tag times in the servers timezone."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41679
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object logo"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41682
msgid "URL which specifies the source of an image which will be used as a logo on all cgit pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41684
msgid "Defaults to @samp{\"/share/cgit/cgit.png\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41687
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string logo-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41689 guix-git/doc/guix.texi:42147
msgid "URL loaded when clicking on the cgit logo image."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41694
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object owner-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41697
msgid "Command which will be invoked to format the Owner column of the main page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41702
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-atom-items"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41704
msgid "Number of items to display in atom feeds view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41709
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-commit-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41711
msgid "Number of entries to list per page in \"log\" view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41716
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-message-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41718
msgid "Number of commit message characters to display in \"log\" view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41720 guix-git/doc/guix.texi:41736
msgid "Defaults to @samp{80}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41723
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-repo-count"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41726
msgid "Specifies the number of entries to list per page on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41731
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-repodesc-length"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41734
msgid "Specifies the maximum number of repo description characters to display on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41739
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer max-blob-size"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41741
msgid "Specifies the maximum size of a blob to display HTML for in KBytes."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41746
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string max-stats"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41749
msgid "Maximum statistics period.  Valid values are @samp{week},@samp{month}, @samp{quarter} and @samp{year}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41754
#, no-wrap
msgid "{@code{cgit-configuration} parameter} mimetype-alist mimetype"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41756
msgid "Mimetype for the specified filename extension."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41760
msgid "Defaults to @samp{'((gif \"image/gif\") (html \"text/html\") (jpg \"image/jpeg\") (jpeg \"image/jpeg\") (pdf \"application/pdf\") (png \"image/png\") (svg \"image/svg+xml\"))}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41763
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object mimetype-file"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41765
msgid "Specifies the file to use for automatic mimetype lookup."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41770
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string module-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41773
msgid "Text which will be used as the formatstring for a hyperlink when a submodule is printed in a directory listing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41778
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean nocache?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41780
msgid "If set to the value @samp{#t} caching will be disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41785
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean noplainemail?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41788
msgid "If set to @samp{#t} showing full author email addresses will be disabled."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41793
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean noheader?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41796
msgid "Flag which, when set to @samp{#t}, will make cgit omit the standard header on all pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41801
#, no-wrap
msgid "{@code{cgit-configuration} parameter} project-list project-list"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41805
msgid "A list of subdirectories inside of @code{repository-directory}, relative to it, that should loaded as Git repositories.  An empty list means that all subdirectories will be loaded."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41810
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41813
msgid "Text which will be used as default @code{repository-cgit-configuration} @code{readme}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41818
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean remove-suffix?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41822
msgid "If set to @code{#t} and @code{repository-directory} is enabled, if any repositories are found with a suffix of @code{.git}, this suffix will be removed for the URL and name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41827
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer renamelimit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41829
msgid "Maximum number of files to consider when detecting renames."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41834
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string repository-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41836
msgid "The way in which repositories in each section are sorted."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41841
#, no-wrap
msgid "{@code{cgit-configuration} parameter} robots-list robots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41843
msgid "Text used as content for the @code{robots} meta-tag."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41845
msgid "Defaults to @samp{'(\"noindex\" \"nofollow\")}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41848
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-desc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41850
msgid "Text printed below the heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41852
msgid "Defaults to @samp{\"a fast webinterface for the git dscm\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41855
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41858
msgid "The content of the file specified with this option will be included verbatim below the ``about'' link on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41863
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string root-title"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41865
msgid "Text printed as heading on the repository index page."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41870
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean scan-hidden-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41876
msgid "If set to @samp{#t} and repository-directory is enabled, repository-directory will recurse into directories whose name starts with a period.  Otherwise, repository-directory will stay away from such directories, considered as ``hidden''.  Note that this does not apply to the @file{.git} directory in non-bare repos."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41881
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list snapshots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41884
msgid "Text which specifies the default set of snapshot formats that cgit generates links for."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41889
#, no-wrap
msgid "{@code{cgit-configuration} parameter} repository-directory repository-directory"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41892
msgid "Name of the directory to scan for repositories (represents @code{scan-path})."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41894
msgid "Defaults to @samp{\"/srv/git\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41897
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string section"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41900 guix-git/doc/guix.texi:42216
msgid "The name of the current repository section - all repositories defined after this option will inherit the current section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41905
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string section-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41908
msgid "Flag which, when set to @samp{1}, will sort the sections on the repository listing by name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41913
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer section-from-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41916
msgid "A number which, if defined prior to repository-directory, specifies how many path elements from each repo path to use as a default section name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41921
#, no-wrap
msgid "{@code{cgit-configuration} parameter} boolean side-by-side-diffs?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41924
msgid "If set to @samp{#t} shows side-by-side diffs instead of unidiffs per default."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41929
#, no-wrap
msgid "{@code{cgit-configuration} parameter} file-object source-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41932
msgid "Specifies a command which will be invoked to format plaintext blobs in the tree view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41937
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-branches"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41940
msgid "Specifies the number of branches to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41945
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-log"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41948
msgid "Specifies the number of log entries to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41953
#, no-wrap
msgid "{@code{cgit-configuration} parameter} integer summary-tags"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41956
msgid "Specifies the number of tags to display in the repository ``summary'' view."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41961
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string strict-export"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41964
msgid "Filename which, if specified, needs to be present within the repository for cgit to allow access to that repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41969
#, no-wrap
msgid "{@code{cgit-configuration} parameter} string virtual-root"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41971
msgid "URL which, if specified, will be used as root for all cgit links."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41973
msgid "Defaults to @samp{\"/\"}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41976
#, no-wrap
msgid "{@code{cgit-configuration} parameter} repository-cgit-configuration-list repositories"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41978
#, fuzzy
msgid "A list of @code{repository-cgit-configuration} records."
msgstr "build-machine {Data Type}"

#. type: deftypevr
#: guix-git/doc/guix.texi:41982
msgid "Available @code{repository-cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41983
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list snapshots"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41986
msgid "A mask of snapshot formats for this repo that cgit generates links for, restricted by the global @code{snapshots} setting."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41991
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object source-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41993
msgid "Override the default @code{source-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:41998
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42000
msgid "The relative URL used to access the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42005
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object about-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42007
msgid "Override the default @code{about-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42012
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string branch-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42015
msgid "Flag which, when set to @samp{age}, enables date ordering in the branch ref list, and when set to @samp{name} enables ordering by branch name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42020
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list clone-url"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42022
msgid "A list of URLs which can be used to clone repo."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42027
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object commit-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42029
msgid "Override the default @code{commit-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42034
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string commit-sort"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42043
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string defbranch"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42048
msgid "The name of the default branch for this repository.  If no such branch exists in the repository, the first branch name (when sorted) is used as default instead.  By default branch pointed to by HEAD, or ``master'' if there is no suitable HEAD."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42053
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string desc"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42055
msgid "The value to show as repository description."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42060
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string homepage"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42062
msgid "The value to show as repository homepage."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42067
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object email-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42069
msgid "Override the default @code{email-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42074
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-commit-graph?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42077
msgid "A flag which can be used to disable the global setting @code{enable-commit-graph?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42082
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-log-filecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42085
msgid "A flag which can be used to disable the global setting @code{enable-log-filecount?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42090
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-log-linecount?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42093
msgid "A flag which can be used to disable the global setting @code{enable-log-linecount?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42098
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-remote-branches?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42106
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-subject-links?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42109
msgid "A flag which can be used to override the global setting @code{enable-subject-links?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42114
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} maybe-repo-boolean enable-html-serving?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42117
msgid "A flag which can be used to override the global setting @code{enable-html-serving?}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42122
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-boolean hide?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42125
msgid "Flag which, when set to @code{#t}, hides the repository from the repository index."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42130
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-boolean ignore?"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42132
msgid "Flag which, when set to @samp{#t}, ignores the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42137
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object logo"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42140
msgid "URL which specifies the source of an image which will be used as a logo on this repo’s pages."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42145
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string logo-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42152
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-file-object owner-filter"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42154
msgid "Override the default @code{owner-filter}."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42159
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string module-link"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42163
msgid "Text which will be used as the formatstring for a hyperlink when a submodule is printed in a directory listing.  The arguments for the formatstring are the path and SHA1 of the submodule commit."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42168
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} module-link-path module-link-path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42172
msgid "Text which will be used as the formatstring for a hyperlink when a submodule with the specified subdirectory path is printed in a directory listing."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42177
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string max-stats"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42179
msgid "Override the default maximum statistics period."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42184
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string name"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42186
msgid "The value to show as repository name."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42191
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string owner"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42193
msgid "A value used to identify the owner of the repository."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42198
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string path"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42200
msgid "An absolute path to the repository directory."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42205
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string readme"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42208
msgid "A path (relative to repo) which specifies a file to include verbatim as the ``About'' page for this repo."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42213
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-string section"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42221
#, no-wrap
msgid "{@code{repository-cgit-configuration} parameter} repo-list extra-options"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42223 guix-git/doc/guix.texi:42232
msgid "Extra options will be appended to cgitrc file."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42230
#, no-wrap
msgid "{@code{cgit-configuration} parameter} list extra-options"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42244
msgid "However, it could be that you just want to get a @code{cgitrc} up and running.  In that case, you can pass an @code{opaque-cgit-configuration} as a record to @code{cgit-service-type}.  As its name indicates, an opaque configuration does not have easy reflective capabilities."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42246
msgid "Available @code{opaque-cgit-configuration} fields are:"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42247
#, no-wrap
msgid "{@code{opaque-cgit-configuration} parameter} package cgit"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42249
msgid "The cgit package."
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42251
#, no-wrap
msgid "{@code{opaque-cgit-configuration} parameter} string string"
msgstr ""

#. type: deftypevr
#: guix-git/doc/guix.texi:42253
msgid "The contents of the @code{cgitrc}, as a string."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42257
msgid "For example, if your @code{cgitrc} is just the empty string, you could instantiate a cgit service like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42262
#, no-wrap
msgid ""
"(service cgit-service-type\n"
"         (opaque-cgit-configuration\n"
"          (cgitrc \"\")))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42264
#, no-wrap
msgid "Gitolite Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42266
#, no-wrap
msgid "Gitolite service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42267
#, no-wrap
msgid "Git, hosting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42270
msgid "@uref{https://gitolite.com/gitolite/, Gitolite} is a tool for hosting Git repositories on a central server."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42273
msgid "Gitolite can handle multiple repositories and users, and supports flexible configuration of the permissions for the users on the repositories."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42276
msgid "The following example will configure Gitolite using the default @code{git} user, and the provided SSH public key."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42283
#, no-wrap
msgid ""
"(service gitolite-service-type\n"
"         (gitolite-configuration\n"
"           (admin-pubkey (plain-file\n"
"                           \"yourname.pub\"\n"
"                           \"ssh-rsa AAAA... guix@@example.com\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42288
msgid "Gitolite is configured through a special admin repository which you can clone, for example, if you setup Gitolite on @code{example.com}, you would run the following command to clone the admin repository."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42291
#, no-wrap
msgid "git clone git@@example.com:gitolite-admin\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42297
msgid "When the Gitolite service is activated, the provided @code{admin-pubkey} will be inserted in to the @file{keydir} directory in the gitolite-admin repository.  If this results in a change in the repository, it will be committed using the message ``gitolite setup by GNU Guix''."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42298
#, no-wrap
msgid "{Data Type} gitolite-configuration"
msgstr "{Tipo de dados} gitolite-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42300
msgid "Data type representing the configuration for @code{gitolite-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42302
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{gitolite})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42308
msgid "Gitolite package to use.  There are optional Gitolite dependencies that are not included in the default package, such as Redis and git-annex.  These features can be made available by using the @code{make-gitolite} procedure in the @code{(gnu packages version-control}) module to produce a variant of Gitolite with the desired additional dependencies."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42311
msgid "The following code returns a package in which the Redis and git-annex programs can be invoked by Gitolite's scripts:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42317
#, no-wrap
msgid ""
"(use-modules (gnu packages databases)\n"
"             (gnu packages haskell-apps)\n"
"             (gnu packages version-control))\n"
"(make-gitolite (list redis git-annex))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42319
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{\"git\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42322
msgid "User to use for Gitolite.  This will be user that you use when accessing Gitolite over SSH."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42323
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"git\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42325
msgid "Group to use for Gitolite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42326
#, fuzzy, no-wrap
msgid "@code{home-directory} (default: @code{\"/var/lib/gitolite\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:42328
msgid "Directory in which to store the Gitolite configuration and repositories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42329
#, fuzzy, no-wrap
#| msgid "@code{rc-file} (default: @var{(gitolite-rc-file)})"
msgid "@code{rc-file} (default: @code{(gitolite-rc-file)})"
msgstr "@code{rc-file} (padrão: @var{(gitolite-rc-file)})"

#. type: table
#: guix-git/doc/guix.texi:42332
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}), representing the configuration for Gitolite."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42333
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{git-config} (default: @code{(gitolite-git-configuration)})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:42336
#, fuzzy
#| msgid "A list of file names, origins, or file-like objects (@pxref{G-Expressions, file-like objects}) pointing to patches to be applied to the source."
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}), representing the git configuration for Gitolite."
msgstr "Uma lista de nomes de arquivos, origens ou objetos tipo arquivo (@pxref{G-Expressions, objetos tipo arquivo}) apontando para remendos a serem aplicados à origem."

#. type: code{#1}
#: guix-git/doc/guix.texi:42337
#, no-wrap
msgid "admin-pubkey"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42341
msgid "A ``file-like'' object (@pxref{G-Expressions, file-like objects}) used to setup Gitolite.  This will be inserted in to the @file{keydir} directory within the gitolite-admin repository."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42343
msgid "To specify the SSH key as a string, use the @code{plain-file} function."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42346
#, no-wrap
msgid "(plain-file \"yourname.pub\" \"ssh-rsa AAAA... guix@@example.com\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42349
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The file has to have @file{.pub} extension."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:42350
#, fuzzy, no-wrap
#| msgid "@code{file-name} (default: @code{#f})"
msgid "@code{admin-name} (default: @code{#f})"
msgstr "@code{file-name} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42354
msgid "Usually the key name is derived by taking a base name of the @code{admin-pubkey}.  The resulting file name is the name of the gitolite user.  You can use this field to override the automatic name."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42358
#, no-wrap
msgid "{Data Type} gitolite-rc-file"
msgstr "{Tipo de dados} gitolite-rc-file"

#. type: deftp
#: guix-git/doc/guix.texi:42360
msgid "Data type representing the Gitolite RC file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42362
#, no-wrap
msgid "@code{umask} (default: @code{#o0077})"
msgstr "@code{umask} (padrão: @code{#o0077})"

#. type: table
#: guix-git/doc/guix.texi:42365
msgid "This controls the permissions Gitolite sets on the repositories and their contents."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42369
msgid "A value like @code{#o0027} will give read access to the group used by Gitolite (by default: @code{git}).  This is necessary when using Gitolite with software like cgit or gitweb."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42370
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{local-code} (default: @code{\"$rc@{GL_ADMIN_BASE@}/local\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42373
msgid "Allows you to add your own non-core programs, or even override the shipped ones with your own."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42378
msgid "Please supply the FULL path to this variable. By default, directory called \"local\" in your gitolite clone is used, providing the benefits of versioning them as well as making changes to them without having to log on to the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42379
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{unsafe-pattern} (default: @code{#f})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42384
msgid "An optional Perl regular expression for catching unsafe configurations in the configuration file.  See @uref{https://gitolite.com/gitolite/git-config.html#compensating-for-unsafe_patt, Gitolite's documentation} for more information."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42391
msgid "When the value is not @code{#f}, it should be a string containing a Perl regular expression, such as @samp{\"[`~#\\$\\&()|;<>]\"}, which is the default value used by gitolite.  It rejects any special character in configuration that might be interpreted by a shell, which is useful when sharing the administration burden with other people that do not otherwise have shell access on the server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42392
#, no-wrap
msgid "@code{git-config-keys} (default: @code{\"\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42395
msgid "Gitolite allows you to set git config values using the @samp{config} keyword.  This setting allows control over the config keys to accept."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42396
#, fuzzy, no-wrap
#| msgid "@code{log-file} (default: @code{#f})"
msgid "@code{log-extra} (default: @code{#f})"
msgstr "@code{log-file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42398
msgid "Whether gitolite should log extra details."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42402
msgid "For historical reasons, this field defaults to @code{#f}.  The default value from gitolite however is @code{1} (written as @code{#t} in this configuration)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42406
msgid "The host name of this gitolite instance.  It is used by the mirroring feature."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42407
#, no-wrap
msgid "@code{roles} (default: @code{'((\"READERS\" . 1) (\"WRITERS\" . ))})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42409
msgid "Set the role names allowed to be used by users running the perms command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42410
#, no-wrap
msgid "@code{enable} (default: @code{'(\"help\" \"desc\" \"info\" \"perms\" \"writable\" \"ssh-authkeys\" \"git-config\" \"daemon\" \"gitweb\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42412
msgid "This setting controls the commands and features to enable within Gitolite."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42415
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Extra content to add verbatim into the @code{%RC} hash."
msgstr "Inicializando uma configuração pessoal."

#. type: deftp
#: guix-git/doc/guix.texi:42419
#, fuzzy, no-wrap
#| msgid "{Data Type} gitolite-configuration"
msgid "{Data Type} gitolite-git-configuration"
msgstr "{Tipo de dados} gitolite-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42421
#, fuzzy
msgid "Data type representing the git configuration file for gitolite."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:42423
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{\"GNU GNU\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42426
msgid "User name used for commits (e.g. during setting up the admin repository)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42427
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{email} (default: @code{\"guix@@localhost\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42429
msgid "Email used for commits (e.g. during setting up the admin repository)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42430
#, fuzzy, no-wrap
#| msgid "@code{fallback?} (default: @code{#f})"
msgid "@code{default-branch} (default: @code{#f})"
msgstr "@code{fallback?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42433
msgid "If true, set the @code{init.defaultBranch} option to that value.  Common values are @code{\"master\"} and @code{\"main\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42434
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{receive-fsck-objects} (default: @code{#f})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:42436
msgid "If it is set to true, git-receive-pack will check all received objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42439
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Extra content to add verbatim into the git configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: subsubheading
#: guix-git/doc/guix.texi:42443
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Gitile Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:42445
#, no-wrap
msgid "Gitile service"
msgstr "Serviço Gitile"

#. type: cindex
#: guix-git/doc/guix.texi:42446
#, no-wrap
msgid "Git, forge"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42449
msgid "@uref{https://git.lepiller.eu/gitile, Gitile} is a Git forge for viewing public git repository contents from a web browser."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42455
msgid "Gitile works best in collaboration with Gitolite, and will serve the public repositories from Gitolite by default.  The service should listen only on a local port, and a webserver should be configured to serve static resources.  The gitile service provides an easy way to extend the Nginx service for that purpose (@pxref{NGINX})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42459
msgid "The following example will configure Gitile to serve repositories from a custom location, with some default messages for the home page and the footers."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42482
#, no-wrap
msgid ""
"(service gitile-service-type\n"
"         (gitile-configuration\n"
"           (repositories \"/srv/git\")\n"
"           (base-git-url \"https://myweb.site/git\")\n"
"           (index-title \"My git repositories\")\n"
"           (intro '((p \"This is all my public work!\")))\n"
"           (footer '((p \"This is the end\")))\n"
"           (nginx\n"
"             (nginx-server-configuration\n"
"               (ssl-certificate\n"
"                 \"/etc/certs/myweb.site/fullchain.pem\")\n"
"               (ssl-certificate-key\n"
"                 \"/etc/certs/myweb.site/privkey.pem\")\n"
"               (listen '(\"443 ssl http2\" \"[::]:443 ssl http2\"))\n"
"               (locations\n"
"                 (list\n"
"                   ;; Allow for https anonymous fetch on /git/ urls.\n"
"                   (git-http-nginx-location-configuration\n"
"                     (git-http-configuration\n"
"                       (uri-path \"/git/\")\n"
"                       (git-root \"/var/lib/gitolite/repositories\")))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42491
msgid "In addition to the configuration record, you should configure your git repositories to contain some optional information.  First, your public repositories need to contain the @file{git-daemon-export-ok} magic file that allows Git to export the repository.  Gitile uses the presence of this file to detect public repositories it should make accessible.  To do so with Gitolite for instance, modify your @file{conf/gitolite.conf} to include this in the repositories you want to make public:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42495
#, no-wrap
msgid ""
"repo foo\n"
"    R = daemon\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42501
msgid "In addition, Gitile can read the repository configuration to display more information on the repository.  Gitile uses the gitweb namespace for its configuration.  As an example, you can use the following in your @file{conf/gitolite.conf}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42508
#, no-wrap
msgid ""
"repo foo\n"
"    R = daemon\n"
"    desc = A long description, optionally with <i>HTML</i>, shown on the index page\n"
"    config gitweb.name = The Foo Project\n"
"    config gitweb.synopsis = A short description, shown on the main page of the project\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42514
msgid "Do not forget to commit and push these changes once you are satisfied.  You may need to change your gitolite configuration to allow the previous configuration options to be set.  One way to do that is to add the following service definition:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42526
#, no-wrap
msgid ""
"(service gitolite-service-type\n"
"          (gitolite-configuration\n"
"            (admin-pubkey (local-file \"key.pub\"))\n"
"            (rc-file\n"
"              (gitolite-rc-file\n"
"                (umask #o0027)\n"
"                ;; Allow to set any configuration key\n"
"                (git-config-keys \".*\")\n"
"                ;; Allow any text as a valid configuration value\n"
"                (unsafe-patt \"^$\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42528
#, no-wrap
msgid "{Data Type} gitile-configuration"
msgstr "{Tipo de dados} gitile-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42530
#, fuzzy
msgid "Data type representing the configuration for @code{gitile-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:42532
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{package} (default: @var{gitile})"
msgstr "@code{user} (default: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:42534
#, fuzzy
#| msgid "The GPM package to use."
msgid "Gitile package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:42537
msgid "The host on which gitile is listening."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42538
#, no-wrap
msgid "@code{port} (default: @code{8080})"
msgstr "@code{port} (padrão: @code{8080})"

#. type: table
#: guix-git/doc/guix.texi:42540
msgid "The port on which gitile is listening."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42541
#, fuzzy, no-wrap
msgid "@code{database} (default: @code{\"/var/lib/gitile/gitile-db.sql\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:42543
#, fuzzy
#| msgid "The license of this manual."
msgid "The location of the database."
msgstr "A licença deste manual."

#. type: item
#: guix-git/doc/guix.texi:42544
#, fuzzy, no-wrap
msgid "@code{repositories} (default: @code{\"/var/lib/gitolite/repositories\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:42548
msgid "The location of the repositories.  Note that only public repositories will be shown by Gitile.  To make a repository public, add an empty @file{git-daemon-export-ok} file at the root of that repository."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42549
#, no-wrap
msgid "base-git-url"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42551
msgid "The base git url that will be used to show clone commands."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42552
#, fuzzy, no-wrap
msgid "@code{index-title} (default: @code{\"Index\"})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42554
msgid "The page title for the index page that lists all the available repositories."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42555
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{intro} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:42558
msgid "The intro content, as a list of sxml expressions.  This is shown above the list of repositories, on the index page."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42559
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{footer} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:42562
msgid "The footer content, as a list of sxml expressions.  This is shown on every page served by Gitile."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42563
#, no-wrap
msgid "nginx"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42566
msgid "An nginx server block that will be extended and used as a reverse proxy by Gitile to serve its pages, and as a normal web server to serve its assets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42570
msgid "You can use this block to add more custom URLs to your domain, such as a @code{/git/} URL for anonymous clones, or serving any other files you would like to serve."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42577
#, fuzzy, no-wrap
#| msgid "Sound Services"
msgid "Joycond service"
msgstr "Serviços de som"

#. type: cindex
#: guix-git/doc/guix.texi:42578
#, no-wrap
msgid "joycond"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42579
#, no-wrap
msgid "nintendo controllers"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42583
msgid "The joycond service allows the pairing of Nintendo joycon game controllers over Bluetooth. (@pxref{Desktop Services} for setting up Bluetooth.)"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42584
#, no-wrap
msgid "{Data Type} joycond-configuration"
msgstr "{Tipo de dados} joycond-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42586
#, fuzzy
msgid "Data type representing the configuration of @command{joycond}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:42588
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{joycond})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42590
#, fuzzy
#| msgid "The GPM package to use."
msgid "The joycond package to use."
msgstr "O pacote GPM a ser usado."

#. type: defvar
#: guix-git/doc/guix.texi:42593
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "joycond-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42598
msgid "Service type for the joycond service.  It also extends the @code{udev-service-type} with the @code{joycond} package (provided via the @code{joycond-configuration} configuration), so that joycond controllers can be detected and used by an unprivileged user."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42600
#, no-wrap
msgid "The Battle for Wesnoth Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42601
#, no-wrap
msgid "wesnothd"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42605
msgid "@uref{https://wesnoth.org, The Battle for Wesnoth} is a fantasy, turn based tactical strategy game, with several single player campaigns, and multiplayer games (both networked and local)."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42606
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "wesnothd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42610
msgid "Service type for the wesnothd service.  Its value must be a @code{wesnothd-configuration} object.  To run wesnothd in the default configuration, instantiate it as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42613
#, no-wrap
msgid "(service wesnothd-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42616
#, no-wrap
msgid "{Data Type} wesnothd-configuration"
msgstr "{Tipo de dados} wesnothd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42618
msgid "Data type representing the configuration of @command{wesnothd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42620
#, no-wrap
msgid "@code{package} (default: @code{wesnoth-server})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42622
msgid "The wesnoth server package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42623
#, no-wrap
msgid "@code{port} (default: @code{15000})"
msgstr "@code{port} (padrão: @code{15000})"

#. type: table
#: guix-git/doc/guix.texi:42625 guix-git/doc/guix.texi:43195
msgid "The port to bind the server to."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:42631
#, no-wrap
msgid "pam-mount"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42636
msgid "The @code{(gnu services pam-mount)} module provides a service allowing users to mount volumes when they log in.  It should be able to mount any volume format supported by the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42637
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pam-mount-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42639
msgid "Service type for PAM Mount support."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42641
#, no-wrap
msgid "{Data Type} pam-mount-configuration"
msgstr "{Tipo de dados} pam-mount-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42643
msgid "Data type representing the configuration of PAM Mount."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42647
#, no-wrap
msgid "rules"
msgstr "rules"

#. type: table
#: guix-git/doc/guix.texi:42650
msgid "The configuration rules that will be used to generate @file{/etc/security/pam_mount.conf.xml}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42654
msgid "The configuration rules are SXML elements (@pxref{SXML,,, guile, GNU Guile Reference Manual}), and the default ones don't mount anything for anyone at login:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42669
#, no-wrap
msgid ""
"`((debug (@@ (enable \"0\")))\n"
"  (mntoptions (@@ (allow ,(string-join\n"
"                          '(\"nosuid\" \"nodev\" \"loop\"\n"
"                            \"encryption\" \"fsck\" \"nonempty\"\n"
"                            \"allow_root\" \"allow_other\")\n"
"                          \",\"))))\n"
"  (mntoptions (@@ (require \"nosuid,nodev\")))\n"
"  (logout (@@ (wait \"0\")\n"
"             (hup \"0\")\n"
"             (term \"no\")\n"
"             (kill \"no\")))\n"
"  (mkmountpoint (@@ (enable \"1\")\n"
"                   (remove \"true\"))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42675
msgid "Some @code{volume} elements must be added to automatically mount volumes at login.  Here's an example allowing the user @code{alice} to mount her encrypted @env{HOME} directory and allowing the user @code{bob} to mount the partition where he stores his data:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42700
#, no-wrap
msgid ""
"(define pam-mount-rules\n"
"`((debug (@@ (enable \"0\")))\n"
"            (volume (@@ (user \"alice\")\n"
"                       (fstype \"crypt\")\n"
"                       (path \"/dev/sda2\")\n"
"                       (mountpoint \"/home/alice\")))\n"
"            (volume (@@ (user \"bob\")\n"
"                       (fstype \"auto\")\n"
"                       (path \"/dev/sdb3\")\n"
"                       (mountpoint \"/home/bob/data\")\n"
"                       (options \"defaults,autodefrag,compress\")))\n"
"            (mntoptions (@@ (allow ,(string-join\n"
"                                    '(\"nosuid\" \"nodev\" \"loop\"\n"
"                                      \"encryption\" \"fsck\" \"nonempty\"\n"
"                                      \"allow_root\" \"allow_other\")\n"
"                                    \",\"))))\n"
"            (mntoptions (@@ (require \"nosuid,nodev\")))\n"
"            (logout (@@ (wait \"0\")\n"
"                       (hup \"0\")\n"
"                       (term \"no\")\n"
"                       (kill \"no\")))\n"
"            (mkmountpoint (@@ (enable \"1\")\n"
"                             (remove \"true\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42704
#, no-wrap
msgid ""
"(service pam-mount-service-type\n"
"         (pam-mount-configuration\n"
"           (rules pam-mount-rules)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42708
msgid "The complete list of possible options can be found in the man page for @uref{http://pam-mount.sourceforge.net/pam_mount.conf.5.html, pam_mount.conf}."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:42711
#, fuzzy, no-wrap
#| msgid "Monitoring Services"
msgid "PAM Mount Volume Service"
msgstr "Serviços de monitoramento"

#. type: cindex
#: guix-git/doc/guix.texi:42712
#, no-wrap
msgid "pam volume mounting"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42719
msgid "PAM mount volumes are automatically mounted at login by the PAM login service according to a set of per-volume rules.  Because they are mounted by PAM the password entered during login may be used directly to mount authenticated volumes, such as @code{cifs}, using the same credentials."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42722
msgid "These volumes will be added in addition to any volumes directly specified in @code{pam-mount-rules}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42726
msgid "Here is an example of a rule which will mount a remote CIFS share from @file{//remote-server/share} into a sub-directory of @file{/shares} named after the user logging in:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:42736
#, no-wrap
msgid ""
"(simple-service 'pam-mount-remote-share pam-mount-volume-service-type\n"
"                (list (pam-mount-volume\n"
"                       (secondary-group \"users\")\n"
"                       (file-system-type \"cifs\")\n"
"                       (server \"remote-server\")\n"
"                       (file-name \"share\")\n"
"                       (mount-point \"/shares/%(USER)\")\n"
"                       (options \"nosuid,nodev,seal,cifsacl\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42738
#, no-wrap
msgid "{Data Type} pam-mount-volume-service-type"
msgstr "{Tipo de dados} pam-mount-volume-service-type"

#. type: deftp
#: guix-git/doc/guix.texi:42743
msgid "Configuration for a single volume to be mounted.  Any fields not specified will be omitted from the run-time PAM configuration.  See @uref{http://pam-mount.sourceforge.net/pam_mount.conf.5.html, the man page} for the default values when unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42745
#, fuzzy, no-wrap
msgid "@code{user-name} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42747
msgid "Mount the volume for the given user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42748
#, fuzzy, no-wrap
msgid "@code{user-id} (type: maybe-integer-or-range)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42752
msgid "Mount the volume for the user with this ID.  This field may also be specified as a pair of @code{(start . end)} indicating a range of user IDs for whom to mount the volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42753
#, fuzzy, no-wrap
msgid "@code{primary-group} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42755
msgid "Mount the volume for users with this primary group name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42756
#, fuzzy, no-wrap
msgid "@code{group-id} (type: maybe-integer-or-range)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42760
msgid "Mount the volume for the users with this primary group ID.  This field may also be specified as a cons cell of @code{(start . end)} indicating a range of group ids for whom to mount the volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42761
#, fuzzy, no-wrap
msgid "@code{secondary-group} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42764
msgid "Mount the volume for users who are members of this group as either a primary or secondary group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42765
#, fuzzy, no-wrap
msgid "@code{file-system-type} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42767
msgid "The file system type for the volume being mounted (e.g., @code{cifs})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42768
#, fuzzy, no-wrap
msgid "@code{no-mount-as-root?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42772
msgid "Whether or not to mount the volume with root privileges.  This is normally disabled, but may be enabled for mounts of type @code{fuse}, or other user-level mounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42773
#, fuzzy, no-wrap
msgid "@code{server} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42775
msgid "The name of the remote server to mount the volume from, when necessary."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42776
#, fuzzy, no-wrap
msgid "@code{file-name} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42779
msgid "The location of the volume, either local or remote, depending on the @code{file-system-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42780
#, fuzzy, no-wrap
msgid "@code{mount-point} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42785
msgid "Where to mount the volume in the local file-system.  This may be set to @file{~} to indicate the home directory of the user logging in.  If this field is omitted then @file{/etc/fstab} is consulted for the mount destination."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42786
#, fuzzy, no-wrap
msgid "@code{options} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42788
msgid "The options to be passed as-is to the underlying mount program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42789
#, fuzzy, no-wrap
msgid "@code{ssh?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42792
msgid "Enable this option to pass the login password to SSH for use with mounts involving SSH (e.g., @code{sshfs})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42793
#, fuzzy, no-wrap
msgid "@code{cipher} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42796
msgid "Cryptsetup cipher name for the volume.  To be used with the @code{crypt} @code{file-system-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42797
#, fuzzy, no-wrap
msgid "@code{file-system-key-cipher} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42799
msgid "Cipher name used by the target volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42800
#, fuzzy, no-wrap
msgid "@code{file-system-key-hash} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42802
msgid "SSL hash name used by the target volume."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42803
#, fuzzy, no-wrap
msgid "@code{file-system-key-file-name} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42805
msgid "File name of the file system key for the target volume."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42813
#, no-wrap
msgid "Build Farm Front-End (BFFE)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42817
msgid "The @uref{https://git.cbaines.net/guix/bffe/,Build Farm Front-End} assists with building Guix packages in bulk.  It's responsible for submitting builds and displaying the status of the build farm."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42818
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "bffe-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42821
msgid "Service type for the Build Farm Front-End.  Its value must be a @code{bffe-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42823
#, no-wrap
msgid "{Data Type} bffe-configuration"
msgstr "{Tipo de dados} bffe-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42825
#, fuzzy
msgid "Data type representing the configuration of the Build Farm Front-End."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:42827
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{bffe})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42829
#, fuzzy
msgid "The Build Farm Front-End package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:42830
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{\"bffe\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42832 guix-git/doc/guix.texi:42902
#: guix-git/doc/guix.texi:42958 guix-git/doc/guix.texi:43092
#: guix-git/doc/guix.texi:43189
msgid "The system user to run the service as."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42833
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"bffe\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42835 guix-git/doc/guix.texi:42905
#: guix-git/doc/guix.texi:43095 guix-git/doc/guix.texi:43192
msgid "The system group to run the service as."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42839
msgid "A list of arguments to the Build Farm Front-End.  These are passed to the @code{run-bffe-service} procedure when starting the service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42844
msgid "For example, the following value directs the Build Farm Front-End to submit builds for derivations available from @code{data.guix.gnu.org} to the Build Coordinator instance assumed to be running on the same machine."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:42863
#, no-wrap
msgid ""
"(list\n"
" #:build\n"
" (list\n"
"  (build-from-guix-data-service\n"
"   (data-service-url \"https://data.guix.gnu.org\")\n"
"   (build-coordinator-url \"http://127.0.0.1:8746\")\n"
"   (branches '(\"master\"))\n"
"   (systems '(\"x86_64-linux\" \"i686-linux\"))\n"
"   (systems-and-targets\n"
"    (map (lambda (target)\n"
"           (cons \"x86_64-linux\" target))\n"
"         '(\"aarch64-linux-gnu\"\n"
"           \"i586-pc-gnu\")))))\n"
" #:web-server-args\n"
" '(#:event-source \"https://example.com\"\n"
"   #:controller-args\n"
"   (#:title \"example.com build farm\")))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42865 guix-git/doc/guix.texi:42938
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{extra-environment-variables} (default: @var{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42867 guix-git/doc/guix.texi:42940
#: guix-git/doc/guix.texi:43282
msgid "Extra environment variables to set via the shepherd service."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:42871
#, no-wrap
msgid "Guix Build Coordinator"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42877
msgid "The @uref{https://git.cbaines.net/guix/build-coordinator/,Guix Build Coordinator} aids in distributing derivation builds among machines running an @dfn{agent}.  The build daemon is still used to build the derivations, but the Guix Build Coordinator manages allocating builds and working with the results."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42883
msgid "The Guix Build Coordinator consists of one @dfn{coordinator}, and one or more connected @dfn{agent} processes.  The coordinator process handles clients submitting builds, and allocating builds to agents.  The agent processes talk to a build daemon to actually perform the builds, then send the results back to the coordinator."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:42887
msgid "There is a script to run the coordinator component of the Guix Build Coordinator, but the Guix service uses a custom Guile script instead, to provide better integration with G-expressions used in the configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42888
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "guix-build-coordinator-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42891
msgid "Service type for the Guix Build Coordinator.  Its value must be a @code{guix-build-coordinator-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42893
#, no-wrap
msgid "{Data Type} guix-build-coordinator-configuration"
msgstr "{Tipo de dados} guix-build-coordinator-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42895
msgid "Data type representing the configuration of the Guix Build Coordinator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42897
#, no-wrap
msgid "@code{package} (default: @code{guix-build-coordinator})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42899 guix-git/doc/guix.texi:42955
msgid "The Guix Build Coordinator package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42900
#, no-wrap
msgid "@code{user} (default: @code{\"guix-build-coordinator\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42903
#, no-wrap
msgid "@code{group} (default: @code{\"guix-build-coordinator\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42906
#, no-wrap
msgid "@code{database-uri-string} (default: @code{\"sqlite:///var/lib/guix-build-coordinator/guix_build_coordinator.db\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42908
msgid "The URI to use for the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42909
#, no-wrap
msgid "@code{agent-communication-uri} (default: @code{\"http://0.0.0.0:8745\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42911
msgid "The URI describing how to listen to requests from agent processes."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42912
#, no-wrap
msgid "@code{client-communication-uri} (default: @code{\"http://127.0.0.1:8746\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42916
msgid "The URI describing how to listen to requests from clients.  The client API allows submitting builds and currently isn't authenticated, so take care when configuring this value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42917
#, no-wrap
msgid "@code{allocation-strategy} (default: @code{#~basic-build-allocation-strategy})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42921
msgid "A G-expression for the allocation strategy to be used.  This is a procedure that takes the datastore as an argument and populates the allocation plan in the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42922
#, no-wrap
msgid "@code{hooks} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42925
msgid "An association list of hooks.  These provide a way to execute arbitrary code upon certain events, like a build result being processed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42926
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{parallel-hooks} (default: @var{'()})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:42930
msgid "Hooks can be configured to run in parallel.  This parameter is an association list of hooks to do in parallel, where the key is the symbol for the hook and the value is the number of threads to run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42931
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{listen-repl} (default: @var{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:42934
msgid "Port or filename to spawn a REPL listening on, pass @code{#t} to listen on the default port or @code{#f} to disable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42935
#, no-wrap
msgid "@code{guile} (default: @code{guile-3.0-latest})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42937
msgid "The Guile package with which to run the Guix Build Coordinator."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:42944
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "guix-build-coordinator-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:42947
msgid "Service type for a Guix Build Coordinator agent.  Its value must be a @code{guix-build-coordinator-agent-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:42949
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-configuration"
msgstr "{Tipo de dados} guix-build-coordinator-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:42951
msgid "Data type representing the configuration a Guix Build Coordinator agent."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42953
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{guix-build-coordinator/agent-only})"
msgstr "@code{cache} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:42956
#, no-wrap
msgid "@code{user} (default: @code{\"guix-build-coordinator-agent\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42959
#, no-wrap
msgid "@code{coordinator} (default: @code{\"http://localhost:8745\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42961
msgid "The URI to use when connecting to the coordinator."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:42962
#, no-wrap
msgid "authentication"
msgstr "authentication"

#. type: table
#: guix-git/doc/guix.texi:42965
msgid "Record describing how this agent should authenticate with the coordinator.  Possible record types are described below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42966
#, no-wrap
msgid "@code{systems} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42969
msgid "The systems for which this agent should fetch builds.  The agent process will use the current system it's running on as the default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42970
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{max-parallel-builds} (default: @code{#f})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:42972
msgid "The number of builds to perform in parallel."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42973
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{max-parallel-uploads} (default: @code{#f})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:42975
#, fuzzy
#| msgid "The number of builds that may run in parallel on the machine."
msgid "The number of uploads to perform in parallel."
msgstr "O número de compilações que podem ser executadas paralelamente na máquina."

#. type: item
#: guix-git/doc/guix.texi:42976
#, fuzzy, no-wrap
#| msgid "@code{parallel-builds} (default: @code{1})"
msgid "@code{max-allocated-builds} (default: @code{#f})"
msgstr "@code{parallel-builds} (padrão: @code{1})"

#. type: table
#: guix-git/doc/guix.texi:42978
#, fuzzy
#| msgid "The number of builds that may run in parallel on the machine."
msgid "The maximum number of builds this agent can be allocated."
msgstr "O número de compilações que podem ser executadas paralelamente na máquina."

#. type: item
#: guix-git/doc/guix.texi:42979
#, fuzzy, no-wrap
#| msgid "@code{max-journal-usage} (default: @code{#f})"
msgid "@code{max-1min-load-average} (default: @code{#f})"
msgstr "@code{max-journal-usage} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:42983
msgid "Load average value to look at when considering starting new builds, if the 1 minute load average exceeds this value, the agent will wait before starting new builds."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42987
msgid "This will be unspecified if the value is @code{#f}, and the agent will use the number of cores reported by the system as the max 1 minute load average."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42988
#, no-wrap
msgid "@code{derivation-substitute-urls} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42991
msgid "URLs from which to attempt to fetch substitutes for derivations, if the derivations aren't already available."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42992
#, no-wrap
msgid "@code{non-derivation-substitute-urls} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42995
msgid "URLs from which to attempt to fetch substitutes for build inputs, if the input store items aren't already available."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:42996 guix-git/doc/guix.texi:43111
#, no-wrap
msgid "@code{extra-options} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:42998
#, fuzzy
msgid "Extra command line options for @code{guix-build-coordinator-agent}."
msgstr "@code{cache} (default: @code{#f})"

#. type: deftp
#: guix-git/doc/guix.texi:43001
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-password-auth"
msgstr "{Tipo de dados} guix-build-coordinator-agent-password-auth"

#. type: deftp
#: guix-git/doc/guix.texi:43004
msgid "Data type representing an agent authenticating with a coordinator via a UUID and password."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43010 guix-git/doc/guix.texi:43026
msgid "The UUID of the agent.  This should be generated by the coordinator process, stored in the coordinator database, and used by the intended agent."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43013
msgid "The password to use when connecting to the coordinator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43017
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-password-file-auth"
msgstr "{Tipo de dados} guix-build-coordinator-agent-password-file-auth"

#. type: deftp
#: guix-git/doc/guix.texi:43020
msgid "Data type representing an agent authenticating with a coordinator via a UUID and password read from a file."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43027
#, no-wrap
msgid "password-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43030
msgid "A file containing the password to use when connecting to the coordinator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43034
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth"
msgstr "{Tipo de dados} guix-build-coordinator-agent-dynamic-auth"

#. type: deftp
#: guix-git/doc/guix.texi:43037
msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token and agent name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43039 guix-git/doc/guix.texi:43056
#, no-wrap
msgid "agent-name"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43043 guix-git/doc/guix.texi:43060
msgid "Name of an agent, this is used to match up to an existing entry in the database if there is one.  When no existing entry is found, a new entry is automatically added."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43047
msgid "Dynamic auth token, this is created and stored in the coordinator database, and is used by the agent to authenticate."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43051
#, no-wrap
msgid "{Data Type} guix-build-coordinator-agent-dynamic-auth-with-file"
msgstr "{Tipo de dados} guix-build-coordinator-agent-dynamic-auth-with-file"

#. type: deftp
#: guix-git/doc/guix.texi:43054
msgid "Data type representing an agent authenticating with a coordinator via a dynamic auth token read from a file and agent name."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43061
#, no-wrap
msgid "token-file"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43064
msgid "File containing the dynamic auth token, this is created and stored in the coordinator database, and is used by the agent to authenticate."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43068
#, no-wrap
msgid "Guix Data Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43072
msgid "The @uref{http://data.guix.gnu.org,Guix Data Service} processes, stores and provides data about GNU Guix.  This includes information about packages, derivations and lint warnings."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43075
msgid "The data is stored in a PostgreSQL database, and available through a web interface."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43076
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "guix-data-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43081
msgid "Service type for the Guix Data Service.  Its value must be a @code{guix-data-service-configuration} object.  The service optionally extends the getmail service, as the guix-commits mailing list is used to find out about changes in the Guix git repository."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43083
#, no-wrap
msgid "{Data Type} guix-data-service-configuration"
msgstr "{Tipo de dados} guix-data-service-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43085 guix-git/doc/guix.texi:43182
msgid "Data type representing the configuration of the Guix Data Service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43087
#, no-wrap
msgid "@code{package} (default: @code{guix-data-service})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43089
msgid "The Guix Data Service package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43090
#, no-wrap
msgid "@code{user} (default: @code{\"guix-data-service\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43093
#, no-wrap
msgid "@code{group} (default: @code{\"guix-data-service\"})"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43096
#, no-wrap
msgid "@code{port} (default: @code{8765})"
msgstr "@code{port} (padrão: @code{8765})"

#. type: table
#: guix-git/doc/guix.texi:43098
msgid "The port to bind the web service to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43101
msgid "The host to bind the web service to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43102
#, no-wrap
msgid "@code{getmail-idle-mailboxes} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43105
msgid "If set, this is the list of mailboxes that the getmail service will be configured to listen to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43106
#, no-wrap
msgid "@code{commits-getmail-retriever-configuration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43110
msgid "If set, this is the @code{getmail-retriever-configuration} object with which to configure getmail to fetch mail from the guix-commits mailing list."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43113
msgid "Extra command line options for @code{guix-data-service}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43114
#, no-wrap
msgid "@code{extra-process-jobs-options} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43116
msgid "Extra command line options for @code{guix-data-service-process-jobs}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43117
#, fuzzy, no-wrap
#| msgid "@code{admin-pubkey} (default: @var{#f})"
msgid "@code{git-repositories} (default: @var{#f})"
msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#. type: table
#: guix-git/doc/guix.texi:43119
msgid "List of git-repository information to insert into the database."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43120
#, fuzzy, no-wrap
#| msgid "@code{user} (default: @var{git})"
msgid "@code{build-servers} (default: @var{#f})"
msgstr "@code{user} (padrão: @var{git})"

#. type: table
#: guix-git/doc/guix.texi:43122
msgid "List of build-server information to insert into the database."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43127 guix-git/doc/guix.texi:43141
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "guix-home-service-type"
msgstr "guix-publish-service-type"

#. type: subsubheading
#: guix-git/doc/guix.texi:43127
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Guix Home Service"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:43135
msgid "The Guix Home service is a way to let Guix System deploy the home environment of one or more users (@pxref{Home Configuration}, for more on Guix Home).  That way, the system configuration embeds declarations of the home environment of those users and can be used to deploy everything consistently at once, saving users the need to run @command{guix home reconfigure} independently."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43140
msgid "@command{guix home} can operate on the home environment configured for current user via this service, but its effect won't last beyond the next system activation.  This can be used for quick testing and may avoid the need of keeping a separate home configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43146
msgid "Service type for the Guix Home service.  Its value must be a list of lists containing user and home environment pairs.  The key of each pair is a string representing the user to deploy the configuration under and the value is a home-environment configuration."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43149
#, fuzzy, no-wrap
#| msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
msgid ""
"(use-modules (gnu home))\n"
"\n"
msgstr ""
"(use-modules (gnu packages base))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:43153
#, no-wrap
msgid ""
"(define my-home\n"
"  (home-environment\n"
"    @dots{}))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43158
#, no-wrap
msgid ""
"(operating-system\n"
"  (services (append (list (service guix-home-service-type\n"
"                                   `((\"alice\" ,my-home))))\n"
"                    %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43162
msgid "This service can be extended by other services to add additional home environments, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43166
#, no-wrap
msgid ""
"(simple-service 'my-extra-home guix-home-service-type\n"
"                `((\"bob\" ,my-extra-home)))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43169
#, no-wrap
msgid "Nar Herder"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43172
msgid "The @uref{https://git.cbaines.net/guix/nar-herder/about/,Nar Herder} is a utility for managing a collection of nars."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43173
#, fuzzy, no-wrap
msgid "nar-herder-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43178
msgid "Service type for the Guix Data Service.  Its value must be a @code{nar-herder-configuration} object.  The service optionally extends the getmail service, as the guix-commits mailing list is used to find out about changes in the Guix git repository."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43180
#, no-wrap
msgid "{Data Type} nar-herder-configuration"
msgstr "{Tipo de dados} nar-herder-configuration"

#. type: item
#: guix-git/doc/guix.texi:43184
#, fuzzy, no-wrap
msgid "@code{package} (default: @code{nar-herder})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43186
#, fuzzy
msgid "The Nar Herder package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:43187
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{\"nar-herder\"})"
msgstr "@code{users} (default: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:43190
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{\"nar-herder\"})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: item
#: guix-git/doc/guix.texi:43193
#, no-wrap
msgid "@code{port} (default: @code{8734})"
msgstr "@code{port} (padrão: @code{8734})"

#. type: table
#: guix-git/doc/guix.texi:43198
msgid "The host to bind the server to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43203
msgid "Optional URL of the other Nar Herder instance which should be mirrored.  This means that this Nar Herder instance will download it's database, and keep it up to date."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43204
#, fuzzy, no-wrap
msgid "@code{database} (default: @code{\"/var/lib/nar-herder/nar_herder.db\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:43209
msgid "Location for the database.  If this Nar Herder instance is mirroring another, the database will be downloaded if it doesn't exist.  If this Nar Herder instance isn't mirroring another, an empty database will be created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43210
#, fuzzy, no-wrap
msgid "@code{database-dump} (default: @code{\"/var/lib/nar-herder/nar_herder_dump.db\"})"
msgstr "@code{daemon-socket} (padrão: @code{\"/var/guix/daemon-socket/socket\"})"

#. type: table
#: guix-git/doc/guix.texi:43214
msgid "Location of the database dump.  This is created and regularly updated by taking a copy of the database.  This is the version of the database that is available to download."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43215
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{storage} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43217
msgid "Optional location in which to store nars."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43218
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{storage-limit} (default: @code{\"none\"})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:43221
msgid "Limit in bytes for the nars stored in the storage location.  This can also be set to ``none'' so that there is no limit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43224
msgid "When the storage location exceeds this size, nars are removed according to the nar removal criteria."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43225
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{storage-nar-removal-criteria} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:43228
msgid "Criteria used to remove nars from the storage location.  These are used in conjunction with the storage limit."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43233
msgid "When the storage location exceeds the storage limit size, nars will be checked against the nar removal criteria and if any of the criteria match, they will be removed.  This will continue until the storage location is below the storage limit size."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43237
msgid "Each criteria is specified by a string, then an equals sign, then another string. Currently, only one criteria is supported, checking if a nar is stored on another Nar Herder instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43245
msgid "This allows the user's Guix to keep substitute information in cache for @var{ttl}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43246 guix-git/doc/guix.texi:43314
#, fuzzy, no-wrap
#| msgid "@code{ttl} (default: @code{#f})"
msgid "@code{new-ttl} (default: @code{#f})"
msgstr "@code{ttl} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43250
msgid "If specified, this will override the @code{ttl} setting when used for the @code{Cache-Control} headers, but this value will be used when scheduling the removal of nars."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43253
msgid "Use this setting when the TTL is being reduced to avoid removing nars while clients still have cached narinfos."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43260
#, fuzzy, no-wrap
#| msgid "@code{log-level} (default: @code{'info})"
msgid "@code{log-level} (default: @code{'DEBUG})"
msgstr "@code{log-level} (default: @code{'info})"

#. type: table
#: guix-git/doc/guix.texi:43263
msgid "Log level to use, specify a log level like @code{'INFO} to stop logging individual requests."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43264
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{cached-compressions} (default: @code{'()})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:43268
msgid "Activate generating cached nars with different compression details from the stored nars.  This is a list of nar-herder-cached-compression-configuration records."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43269
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{min-uses} (default: @code{3})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43272
msgid "When cached-compressions are enabled, generate cached nars when at least this number of requests are made for a nar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43273
#, fuzzy, no-wrap
msgid "@code{workers} (default: @code{2})"
msgstr "@code{workers} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43275
msgid "Number of cached nars to generate at a time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43276
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{nar-source} (default: @code{#f})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43279
msgid "Location to fetch nars from when computing cached compressions.  By default, the storage location will be used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43280
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{extra-environment-variables} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: deftp
#: guix-git/doc/guix.texi:43286
#, no-wrap
msgid "{Data Type} nar-herder-cached-compression-configuration"
msgstr "{Tipo de dados} nar-herder-cached-compression-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43288
#, fuzzy
msgid "Data type representing the cached compression configuration."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:43292
msgid "Type of compression to use, e.g. @code{'zstd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43295
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Level of the compression to use."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:43296
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{directory} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43299
msgid "Location to store the cached nars.  If unspecified, they will be stored in /var/cache/nar-herder/nar/TYPE."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43300
#, fuzzy, no-wrap
#| msgid "@code{max-zone-size} (default: @code{#f})"
msgid "@code{directory-max-size} (default: @code{#f})"
msgstr "@code{max-zone-size} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43302
msgid "Maximum size in bytes of the directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43303
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{unused-removal-duration} (default: @code{#f})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43306
msgid "If a cached nar isn't used for @code{unused-removal-duration}, it will be scheduled for removal."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43309
msgid "@var{unused-removal-duration} must denote a duration: @code{5d} means 5 days, @code{1m} means 1 month, and so on."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43313
msgid "If specified this overrides the @code{ttl} used for narinfos when this cached compression is available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43317
msgid "As with the @code{new-ttl} option for @code{nar-herder-configuration}, this value will override the @code{ttl} when used for narinfo requests."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43324
#, no-wrap
msgid "oom"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43325
#, no-wrap
msgid "out of memory killer"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43326
#, no-wrap
msgid "earlyoom"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43327
#, no-wrap
msgid "early out of memory daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43328
#, no-wrap
msgid "Early OOM Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43335
msgid "@uref{https://github.com/rfjakob/earlyoom,Early OOM}, also known as Earlyoom, is a minimalist out of memory (OOM) daemon that runs in user space and provides a more responsive and configurable alternative to the in-kernel OOM killer.  It is useful to prevent the system from becoming unresponsive when it runs out of memory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43336
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "earlyoom-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43341
msgid "The service type for running @command{earlyoom}, the Early OOM daemon.  Its value must be a @code{earlyoom-configuration} object, described below.  The service can be instantiated in its default configuration with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43344
#, no-wrap
msgid "(service earlyoom-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43347
#, no-wrap
msgid "{Data Type} earlyoom-configuration"
msgstr "{Tipo de dados} earlyoom-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43349
msgid "This is the configuration record for the @code{earlyoom-service-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43351
#, no-wrap
msgid "@code{earlyoom} (default: @var{earlyoom})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43353
msgid "The Earlyoom package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43354
#, no-wrap
msgid "@code{minimum-available-memory} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43356
msgid "The threshold for the minimum @emph{available} memory, in percentages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43357
#, no-wrap
msgid "@code{minimum-free-swap} (default: @code{10})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43359
msgid "The threshold for the minimum free swap memory, in percentages."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43360
#, no-wrap
msgid "@code{prefer-regexp} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43363
msgid "A regular expression (as a string) to match the names of the processes that should be preferably killed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43364
#, no-wrap
msgid "@code{avoid-regexp} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43367
msgid "A regular expression (as a string) to match the names of the processes that should @emph{not} be killed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43368
#, no-wrap
msgid "@code{memory-report-interval} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43371
msgid "The interval in seconds at which a memory report is printed.  It is disabled by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43372
#, no-wrap
msgid "@code{ignore-positive-oom-score-adj?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43375
msgid "A boolean indicating whether the positive adjustments set in @file{/proc/*/oom_score_adj} should be ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43376
#, no-wrap
msgid "@code{show-debug-messages?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43379
msgid "A boolean indicating whether debug messages should be printed.  The logs are saved at @file{/var/log/earlyoom.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43380
#, no-wrap
msgid "@code{send-notification-command} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43383
msgid "This can be used to provide a custom command used for sending notifications."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43386
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "fstrim Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:43387
#, fuzzy, no-wrap
#| msgid "Gitile service"
msgid "fstrim service"
msgstr "Serviço Gitile"

#. type: cindex
#: guix-git/doc/guix.texi:43388
#, no-wrap
msgid "solid state drives, periodic trim"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43389
#, no-wrap
msgid "solid state drives, trim"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43393
msgid "The command @command{fstrim} can be used to discard (or @dfn{trim})  unused blocks on a mounted file system."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43402
msgid "Running @command{fstrim} frequently, or even using @command{mount -o discard}, might negatively affect the lifetime of poor-quality SSD devices.  For most desktop and server systems a sufficient trimming frequency is once a week.  Note that not all devices support a queued trim, so each trim command incurs a performance penalty on whatever else might be trying to use the disk at the time."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43404
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "fstrim-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43408
msgid "Type for a service that periodically runs @command{fstrim}, whose value must be an @code{<fstrim-configuration>} object.  The service can be instantiated in its default configuration with:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43411
#, fuzzy, no-wrap
msgid "(service fstrim-service-type)\n"
msgstr "(service fstrim-service-type)\n"

#. type: deftp
#: guix-git/doc/guix.texi:43416
#, no-wrap
msgid "{Data Type} fstrim-configuration"
msgstr "{Tipo de dados} fstrim-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43418
#, fuzzy
msgid "Available @code{fstrim-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:43420
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{util-linux}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43422
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @command{fstrim} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:43423
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{schedule} (default: @code{\"0 0 * * 0\"}) (type: Shepherd calendar event)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43428
msgid "Schedule for launching @command{fstrim}, expressed as a string in traditional cron syntax or as a gexp evaluating to a Shepherd calendar event (@pxref{Timers,,, shepherd,The GNU Shepherd Manual}).  By default this is set to run weekly on Sunday at 00:00."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43429
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{listed-in} (default: @code{'(\"/etc/fstab\" \"/proc/self/mountinfo\")}) (type: maybe-list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43434
msgid "List of files in fstab or kernel mountinfo format.  All missing or empty files are silently ignored.  The evaluation of the list @emph{stops} after the first non-empty file.  File systems with @code{X-fstrim.notrim} mount option in fstab are skipped."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43435
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{verbose?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43437
msgid "Verbose execution."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43438
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{quiet-unsupported?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43440
msgid "Suppress error messages if trim operation (ioctl) is unsupported."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43441
#, fuzzy, no-wrap
msgid "@code{extra-arguments} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43444
msgid "Extra options to append to @command{fstrim} (run @samp{man fstrim} for more information)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43452
#, no-wrap
msgid "modprobe"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43453
#, no-wrap
msgid "kernel module loader"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43454
#, no-wrap
msgid "Kernel Module Loader Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43460
msgid "The kernel module loader service allows one to load loadable kernel modules at boot.  This is especially useful for modules that don't autoload and need to be manually loaded, as is the case with @code{ddcci}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43461
#, fuzzy, no-wrap
msgid "kernel-module-loader-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43467
msgid "The service type for loading loadable kernel modules at boot with @command{modprobe}.  Its value must be a list of strings representing module names.  For example loading the drivers provided by @code{ddcci-driver-linux}, in debugging mode by passing some module parameters, can be done as follow:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43472
#, no-wrap
msgid ""
"(use-modules (gnu) (gnu services))\n"
"(use-package-modules linux)\n"
"(use-service-modules linux)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43476
#, no-wrap
msgid ""
"(define ddcci-config\n"
"  (plain-file \"ddcci.conf\"\n"
"              \"options ddcci dyndbg delay=120\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43486
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  (services (cons* (service kernel-module-loader-service-type\n"
"                            '(\"ddcci\" \"ddcci_backlight\"))\n"
"                   (simple-service 'ddcci-config etc-service-type\n"
"                                   (list `(\"modprobe.d/ddcci.conf\"\n"
"                                           ,ddcci-config)))\n"
"                   %base-services))\n"
"  (kernel-loadable-modules (list ddcci-driver-linux)))\n"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43489
#, fuzzy, no-wrap
#| msgid "Certificate Services"
msgid "Cachefilesd Service"
msgstr "Serviços de certificado"

#. type: cindex
#: guix-git/doc/guix.texi:43491
#, fuzzy, no-wrap
#| msgid "--cache-failures"
msgid "cachefilesd"
msgstr "--cache-failures"

#. type: cindex
#: guix-git/doc/guix.texi:43492
#, no-wrap
msgid "fscache, file system caching (Linux)"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43496
msgid "The Cachefilesd service starts a daemon that caches network file system data locally.  It is especially useful for NFS and AFS shares, where it reduces latencies for repeated access when reading files."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43498
msgid "The daemon can be configured as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43503
#, no-wrap
msgid ""
"(service cachefilesd-service-type\n"
"         (cachefilesd-configuration\n"
"           (cache-directory \"/var/cache/fscache\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43505
#, fuzzy, no-wrap
msgid "cachefilesd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43509
msgid "The service type for starting @command{cachefilesd}.  The value for this service type is a @code{cachefilesd-configuration}, whose only required field is @var{cache-directory}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43513
#, no-wrap
msgid "{Data Type} cachefilesd-configuration"
msgstr "{Tipo de dados} cachefilesd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43515
#, fuzzy
msgid "Available @code{cachefilesd-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:43517
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{cachefilesd} (default: @code{cachefilesd}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43519
#, fuzzy
msgid "The cachefilesd package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:43520
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{debug-output?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43522
#, fuzzy
#| msgid "Produce debugging output."
msgid "Print debugging output to stderr."
msgstr "Produz uma saída de depuração."

#. type: item
#: guix-git/doc/guix.texi:43523
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{use-syslog?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43525
msgid "Log to syslog facility instead of stdout."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43526
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{scan?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43528
msgid "Scan for cacheable objects."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43529
#, fuzzy, no-wrap
msgid "@code{cache-directory} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43531
msgid "Location of the cache directory."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43532
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{cache-name} (default: @code{\"CacheFiles\"}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43534
msgid "Name of cache (keep unique)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43535
#, fuzzy, no-wrap
msgid "@code{security-context} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43537
msgid "SELinux security context."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43538
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pause-culling-for-block-percentage} (default: @code{7}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43540
msgid "Pause culling when available blocks exceed this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43541
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pause-culling-for-file-percentage} (default: @code{7}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43543
msgid "Pause culling when available files exceed this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43544
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{resume-culling-for-block-percentage} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43546
msgid "Start culling when available blocks drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43547
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{resume-culling-for-file-percentage} (default: @code{5}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43549
msgid "Start culling when available files drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43550
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pause-caching-for-block-percentage} (default: @code{1}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43553
msgid "Pause further allocations when available blocks drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43554
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{pause-caching-for-file-percentage} (default: @code{1}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43557
msgid "Pause further allocations when available files drop below this percentage."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43558
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{log2-table-size} (default: @code{12}) (type: maybe-non-negative-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43560
msgid "Size of tables holding cullable objects in logarithm of base 2."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43561
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{cull?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43563
msgid "Create free space by culling (consumes system load)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43564
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{trace-function-entry-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43566
msgid "Trace function entry in the kernel module (for debugging)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43567
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{trace-function-exit-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43569
msgid "Trace function exit in the kernel module (for debugging)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43570
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{trace-internal-checkpoints-in-kernel-module?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43572
msgid "Trace internal checkpoints in the kernel module (for debugging)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43577
#, fuzzy, no-wrap
#| msgid "daemon"
msgid "rasdaemon"
msgstr "daemon"

#. type: cindex
#: guix-git/doc/guix.texi:43578
#, no-wrap
msgid "Platform Reliability, Availability and Serviceability daemon"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43579
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Rasdaemon Service"
msgstr "Serviços base"

#. type: Plain text
#: guix-git/doc/guix.texi:43584
msgid "The Rasdaemon service provides a daemon which monitors platform @acronym{RAS, Reliability@comma{} Availability@comma{} and Serviceability} reports from Linux kernel trace events, logging them to syslogd."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43587
msgid "Reliability, Availability and Serviceability is a concept used on servers meant to measure their robustness."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43590
msgid "@strong{Relability} is the probability that a system will produce correct outputs:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43592
#, no-wrap
msgid "Generally measured as Mean Time Between Failures (MTBF), and"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43593
#, no-wrap
msgid "Enhanced by features that help to avoid, detect and repair hardware"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:43595
msgid "faults"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43599
msgid "@strong{Availability} is the probability that a system is operational at a given time:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43601
#, no-wrap
msgid "Generally measured as a percentage of downtime per a period of time, and"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43602
#, no-wrap
msgid "Often uses mechanisms to detect and correct hardware faults in runtime."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43607
msgid "@strong{Serviceability} is the simplicity and speed with which a system can be repaired or maintained:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43609
#, no-wrap
msgid "Generally measured on Mean Time Between Repair (MTBR)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43614
msgid "Among the monitoring measures, the most usual ones include:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43616
#, no-wrap
msgid "CPU – detect errors at instruction execution and at L1/L2/L3 caches;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43617
#, no-wrap
msgid "Memory – add error correction logic (ECC) to detect and correct errors;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43618
#, no-wrap
msgid "I/O – add CRC checksums for transferred data;"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43619
#, no-wrap
msgid "Storage – RAID, journal file systems, checksums, Self-Monitoring,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:43621
msgid "Analysis and Reporting Technology (SMART)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43627
msgid "By monitoring the number of occurrences of error detections, it is possible to identify if the probability of hardware errors is increasing, and, on such case, do a preventive maintenance to replace a degraded component while those errors are correctable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43631
msgid "For detailed information about the types of error events gathered and how to make sense of them, see the kernel administrator's guide at @url{https://www.kernel.org/doc/html/latest/admin-guide/ras.html}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43632
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rasdaemon-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43635
msgid "Service type for the @command{rasdaemon} service.  It accepts a @code{rasdaemon-configuration} object.  Instantiating like"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43638
#, no-wrap
msgid "(service rasdaemon-service-type)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43642
msgid "will load with a default configuration, which monitors all events and logs to syslogd."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43644
#, no-wrap
msgid "{Data Type} rasdaemon-configuration"
msgstr "{Tipo de dados} rasdaemon-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43646
#, fuzzy
msgid "The data type representing the configuration of @command{rasdaemon}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:43648
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{record?} (default: @code{#f})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43653
msgid "A boolean indicating whether to record the events in an SQLite database.  This provides a more structured access to the information contained in the log file.  The database location is hard-coded to @file{/var/lib/rasdaemon/ras-mc_event.db}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43657
#, no-wrap
msgid "zram"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43658
#, no-wrap
msgid "compressed swap"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43659
#, no-wrap
msgid "Compressed RAM-based block devices"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43660
#, no-wrap
msgid "Zram Device Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43666
msgid "The Zram device service provides a compressed swap device in system memory.  The Linux Kernel documentation has more information about @uref{https://www.kernel.org/doc/html/latest/admin-guide/blockdev/zram.html,zram} devices."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43667
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "zram-device-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43671
msgid "This service creates the zram block device, formats it as swap and enables it as a swap device.  The service's value is a @code{zram-device-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43672
#, no-wrap
msgid "{Data Type} zram-device-configuration"
msgstr "{Tipo de dados} zram-device-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43675
msgid "This is the data type representing the configuration for the zram-device service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43677
#, no-wrap
msgid "@code{size} (default @code{\"1G\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43681
msgid "This is the amount of space you wish to provide for the zram device.  It accepts a string and can be a number of bytes or use a suffix, eg.: @code{\"512M\"} or @code{1024000}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43681
#, no-wrap
msgid "@code{compression-algorithm} (default @code{'lzo})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43685
msgid "This is the compression algorithm you wish to use.  It is difficult to list all the possible compression options, but common ones supported by Guix's Linux Libre Kernel include @code{'lzo}, @code{'lz4} and @code{'zstd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43685
#, no-wrap
msgid "@code{memory-limit} (default @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43692
msgid "This is the maximum amount of memory which the zram device can use.  Setting it to '0' disables the limit.  While it is generally expected that compression will be 2:1, it is possible that uncompressable data can be written to swap and this is a method to limit how much memory can be used.  It accepts a string and can be a number of bytes or use a suffix, eg.: @code{\"2G\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43692
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{priority} (default @code{#f})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43697
msgid "This is the priority of the swap device created from the zram device.  @xref{Swap Space} for a description of swap priorities.  You might want to set a specific priority for the zram device, otherwise it could end up not being used much for the reasons described there."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43705
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hurd-console-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43707
msgid "This service starts the fancy @code{VGA} console client on the Hurd."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43709
msgid "The service's value is a @code{hurd-console-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43711
#, no-wrap
msgid "{Data Type} hurd-console-configuration"
msgstr "{Tipo de dados} hurd-console-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43714
msgid "This is the data type representing the configuration for the hurd-console-service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43716 guix-git/doc/guix.texi:43732
#, no-wrap
msgid "@code{hurd} (default: @var{hurd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43718 guix-git/doc/guix.texi:43734
msgid "The Hurd package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43721
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "hurd-getty-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43723
msgid "This service starts a tty using the Hurd @code{getty} program."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43725
msgid "The service's value is a @code{hurd-getty-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43727
#, no-wrap
msgid "{Data Type} hurd-getty-configuration"
msgstr "{Tipo de dados} hurd-getty-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43730
msgid "This is the data type representing the configuration for the hurd-getty-service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43737
msgid "The name of the console this Getty runs on---e.g., @code{\"tty1\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43738
#, no-wrap
msgid "@code{baud-rate} (default: @code{38400})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43740
msgid "An integer specifying the baud rate of the tty."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43747
#, no-wrap
msgid "fingerprint"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43748
#, no-wrap
msgid "Fingerprint Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43752
msgid "The @code{(gnu services authentication)} module provides a DBus service to read and identify fingerprints via a fingerprint sensor."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43753
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "fprintd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43756
msgid "The service type for @command{fprintd}, which provides the fingerprint reading capability."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43759
#, no-wrap
msgid "(service fprintd-service-type)\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43762
#, no-wrap
msgid "sysctl"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43763
#, no-wrap
msgid "System Control Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43767
msgid "The @code{(gnu services sysctl)} provides a service to configure kernel parameters at boot."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43768
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "sysctl-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43772
msgid "The service type for @command{sysctl}, which modifies kernel parameters under @file{/proc/sys/}.  To enable IPv4 forwarding, it can be instantiated as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43777
#, no-wrap
msgid ""
"(service sysctl-service-type\n"
"         (sysctl-configuration\n"
"           (settings '((\"net.ipv4.ip_forward\" . \"1\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43784
msgid "Since @code{sysctl-service-type} is used in the default lists of services, @code{%base-services} and @code{%desktop-services}, you can use @code{modify-services} to change its configuration and add the kernel parameters that you want (@pxref{Service Reference, @code{modify-services}})."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43791
#, no-wrap
msgid ""
"(modify-services %base-services\n"
"  (sysctl-service-type config =>\n"
"                       (sysctl-configuration\n"
"                         (settings (append '((\"net.ipv4.ip_forward\" . \"1\"))\n"
"                                           %default-sysctl-settings)))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43795
#, no-wrap
msgid "{Data Type} sysctl-configuration"
msgstr "{Tipo de dados} sysctl-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43797
msgid "The data type representing the configuration of @command{sysctl}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43799
#, no-wrap
msgid "@code{sysctl} (default: @code{(file-append procps \"/sbin/sysctl\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43801
msgid "The @command{sysctl} executable to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43802
#, fuzzy, no-wrap
msgid "@code{settings} (default: @code{%default-sysctl-settings})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43804
msgid "An association list specifies kernel parameters and their values."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43807
#, no-wrap
msgid "%default-sysctl-settings"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43810
msgid "An association list specifying the default @command{sysctl} parameters on Guix System."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43812
#, no-wrap
msgid "pcscd"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43813
#, no-wrap
msgid "PC/SC Smart Card Daemon Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43820
msgid "The @code{(gnu services security-token)} module provides the following service to run @command{pcscd}, the PC/SC Smart Card Daemon.  @command{pcscd} is the daemon program for pcsc-lite and the MuscleCard framework.  It is a resource manager that coordinates communications with smart card readers, smart cards and cryptographic tokens that are connected to the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43821
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "pcscd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43825
msgid "Service type for the @command{pcscd} service.  Its value must be a @code{pcscd-configuration} object.  To run pcscd in the default configuration, instantiate it as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:43828
#, no-wrap
msgid "(service pcscd-service-type)\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43831
#, no-wrap
msgid "{Data Type} pcscd-configuration"
msgstr "{Tipo de dados} pcscd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43833
msgid "The data type representing the configuration of @command{pcscd}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43835
#, no-wrap
msgid "@code{pcsc-lite} (default: @code{pcsc-lite})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43837
msgid "The pcsc-lite package that provides pcscd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43837
#, no-wrap
msgid "@code{usb-drivers} (default: @code{(list ccid)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43840
msgid "List of packages that provide USB drivers to pcscd.  Drivers are expected to be under @file{pcsc/drivers} in the store directory of the package."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43843
#, no-wrap
msgid "LIRC"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43844
#, fuzzy, no-wrap
#| msgid "VPN Services"
msgid "LIRC Service"
msgstr "Serviços VPN"

#. type: Plain text
#: guix-git/doc/guix.texi:43847
msgid "The @code{(gnu services lirc)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43848
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "lirc-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43851
msgid "Type for a service that runs @url{http://www.lirc.org, LIRC}, a daemon that decodes infrared signals from remote controls."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43853
msgid "The value for this service is a @code{<lirc-configuration>} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43855
#, no-wrap
msgid "{Data Type} lirc-configuration"
msgstr "{Tipo de dados} lirc-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43857
#, fuzzy
msgid "Data type representing the configuration of @command{lircd}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:43859
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{lirc} (default: @code{lirc}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43861
#, fuzzy
#| msgid "Package management commands."
msgid "Package object for @command{lirc}."
msgstr "Comandos de gerenciamento de pacote."

#. type: item
#: guix-git/doc/guix.texi:43862
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{device} (default: @code{#f}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: itemx
#: guix-git/doc/guix.texi:43863
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{driver} (default: @code{#f}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: itemx
#: guix-git/doc/guix.texi:43864
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{config-file} (default: @code{#f}) (type: string-or-file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43866
msgid "TODO.  See @command{lircd} manual for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43867
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-options} (default: @code{'()}) (type: list-of-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:43869
msgid "Additional command-line options to pass to @command{lircd}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43876
#, no-wrap
msgid "SPICE"
msgstr "SPICE"

#. type: subsubheading
#: guix-git/doc/guix.texi:43877
#, fuzzy, no-wrap
#| msgid "DNS Services"
msgid "SPICE Service"
msgstr "Serviços DNS"

#. type: Plain text
#: guix-git/doc/guix.texi:43880
msgid "The @code{(gnu services spice)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43881
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "spice-vdagent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43885
msgid "Type of the service that runs @url{https://www.spice-space.org, VDAGENT}, a daemon that enables sharing the clipboard with a vm and setting the guest display resolution when the graphical console window resizes."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43887
#, no-wrap
msgid "{Data Type} spice-vdagent-configuration"
msgstr "{Tipo de dados} spice-vdagent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43890
#, fuzzy
msgid "Data type representing the configuration of @code{spice-vdagent-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:43892
#, fuzzy, no-wrap
msgid "@code{spice-vdagent} (default: @code{spice-vdagent}) (type: file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:43894
msgid "Package object for VDAGENT."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43898
#, no-wrap
msgid "inputattach"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43899
#, no-wrap
msgid "inputattach Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43901
#, no-wrap
msgid "tablet input, for Xorg"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43902
#, no-wrap
msgid "touchscreen input, for Xorg"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:43906
msgid "The @uref{https://linuxwacom.github.io/, inputattach} service allows you to use input devices such as Wacom tablets, touchscreens, or joysticks with the Xorg display server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43907
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "inputattach-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43910
msgid "Type of a service that runs @command{inputattach} on a device and dispatches events from it."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43912
#, no-wrap
msgid "{Data Type} inputattach-configuration"
msgstr "{Tipo de dados} inputattach-configuration"

#. type: item
#: guix-git/doc/guix.texi:43914
#, no-wrap
msgid "@code{device-type} (default: @code{\"wacom\"})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43917
msgid "The type of device to connect to.  Run @command{inputattach --help}, from the @code{inputattach} package, to see the list of supported device types."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43918
#, no-wrap
msgid "@code{device} (default: @code{\"/dev/ttyS0\"})"
msgstr "@code{device} (padrão: @code{\"/dev/ttyS0\"})"

#. type: table
#: guix-git/doc/guix.texi:43920
msgid "The device file to connect to the device."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43924
msgid "Baud rate to use for the serial connection.  Should be a number or @code{#f}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43927
msgid "If true, this must be the name of a file to log messages to."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:43930 guix-git/doc/guix.texi:52286
#, no-wrap
msgid "Dictionary Service"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:43931
#, no-wrap
msgid "dictionary"
msgstr "dicionário"

#. type: Plain text
#: guix-git/doc/guix.texi:43934
msgid "The @code{(gnu services dict)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43935
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "dicod-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:43938 guix-git/doc/guix.texi:52294
msgid "This is the type of the service that runs the @command{dicod} daemon, an implementation of DICT server (@pxref{Dicod,,, dico, GNU Dico Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:43942 guix-git/doc/guix.texi:52298
msgid "You can add @command{open localhost} to your @file{~/.dico} file to make @code{localhost} the default server for @command{dico} client (@pxref{Initialization File,,, dico, GNU Dico Manual})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:43947
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Miscellaneous Home Services, @code{home-dicod-service-type}})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43950
#, no-wrap
msgid "{Data Type} dicod-configuration"
msgstr "{Tipo de dados} dicod-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:43952
msgid "Data type representing the configuration of dicod."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43954
#, no-wrap
msgid "@code{dico} (default: @var{dico})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43956
msgid "Package object of the GNU Dico dictionary server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43957
#, no-wrap
msgid "@code{interfaces} (default: @var{'(\"localhost\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43961
msgid "This is the list of IP addresses and ports and possibly socket file names to listen to (@pxref{Server Settings, @code{listen} directive,, dico, GNU Dico Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43962
#, no-wrap
msgid "@code{handlers} (default: @var{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43964
msgid "List of @code{<dicod-handler>} objects denoting handlers (module instances)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43965
#, no-wrap
msgid "@code{databases} (default: @var{(list %dicod-database:gcide)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43967
msgid "List of @code{<dicod-database>} objects denoting dictionaries to be served."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43970
#, no-wrap
msgid "{Data Type} dicod-handler"
msgstr "{Tipo de dados} dicod-handler"

#. type: deftp
#: guix-git/doc/guix.texi:43972
msgid "Data type representing a dictionary handler (module instance)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43976
msgid "Name of the handler (module instance)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43977
#, no-wrap
msgid "@code{module} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43981
msgid "Name of the dicod module of the handler (instance).  If it is @code{#f}, the module has the same name as the handler.  (@pxref{Modules,,, dico, GNU Dico Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43984
msgid "List of strings or gexps representing the arguments for the module handler"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:43987
#, no-wrap
msgid "{Data Type} dicod-database"
msgstr "{Tipo de dados} dicod-database"

#. type: deftp
#: guix-git/doc/guix.texi:43989
msgid "Data type representing a dictionary database."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43993
msgid "Name of the database, will be used in DICT commands."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:43994
#, no-wrap
msgid "handler"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:43997
msgid "Name of the dicod handler (module instance) used by this database (@pxref{Handlers,,, dico, GNU Dico Manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:43998
#, no-wrap
msgid "@code{complex?} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44001
msgid "Whether the database configuration complex.  The complex configuration will need a corresponding @code{<dicod-handler>} object, otherwise not."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44005
msgid "List of strings or gexps representing the arguments for the database (@pxref{Databases,,, dico, GNU Dico Manual})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44008
#, no-wrap
msgid "%dicod-database:gcide"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44011
msgid "A @code{<dicod-database>} object serving the GNU Collaborative International Dictionary of English using the @code{gcide} package."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:44013
#, no-wrap
msgid "{Procedure} dicod-freedict-database dictionary-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:44019
msgid "Returns a record of type @code{dicod-database} for purpose of configuring a database for the FreeDict multilingual dictionary named by @var{dictionary-name}, a string such as @code{\"kur-eng\"} for the Kurdish-to-English dictionary, into a service of type @code{dicod-service-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44021
#, no-wrap
msgid "%dicod-databases:freedict"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44026
msgid "A relatively large list of records of type @code{dicod-database}, made available for users who wish to configure all the FreeDict multilingual dictionaries provided by the @code{freedict-dictionaries} package into a service of type @code{dicod-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44032
msgid "The following is an example @code{dicod-service-type} configuration, extending a @command{dicod} daemon serving databases for the wordnet and gcide dictionaries, as well as a selection of FreeDict multilingual dictionaries."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44051
#, no-wrap
msgid ""
"(service dicod-service-type\n"
"         (dicod-configuration\n"
"          (handlers (list\n"
"                     (dicod-handler\n"
"                      (name \"wordnet\")\n"
"                      (module \"wordnet\")\n"
"                      (options\n"
"                       (list #~(string-append \"wnhome=\" #$wordnet))))))\n"
"          (databases (cons*\n"
"                      (dicod-database\n"
"                       (name \"wordnet\")\n"
"                       (complex? #t)\n"
"                       (handler \"wordnet\"))\n"
"                      %dicod-database:gcide\n"
"                      (map\n"
"                       dicod-freedict-database\n"
"                       '(\"fra-eng\" \"eng-fra\" \"eng-spa\" \"spa-eng\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44053
#, no-wrap
msgid "Docker"
msgstr "Docker"

#. type: subsubheading
#: guix-git/doc/guix.texi:44054
#, no-wrap
msgid "Docker Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44057
msgid "The @code{(gnu services docker)} module provides the following services."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44058
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix size}"
msgid "containerd, container runtime"
msgstr "Invocando @command{guix size}"

#. type: defvar
#: guix-git/doc/guix.texi:44059
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "containerd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44067
msgid "This service type operates containerd @url{https://containerd.io,containerd}, a daemon responsible for overseeing the entire container lifecycle on its host system. This includes image handling, storage management, container execution, supervision, low-level storage operations, network connections, and more."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44070
#, no-wrap
msgid "{Data Type} containerd-configuration"
msgstr "{Tipo de dados} containerd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44072
#, fuzzy
msgid "This is the data type representing the configuration of containerd."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:44075
#, fuzzy, no-wrap
msgid "@code{containerd} (default: @code{containerd})"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44077
#, fuzzy
msgid "The containerd daemon package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:44078 guix-git/doc/guix.texi:44128
#, no-wrap
msgid "@code{debug?} (default @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44080 guix-git/doc/guix.texi:44130
msgid "Enable or disable debug output."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44083
msgid "List of environment variables to set for @command{containerd}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44086 guix-git/doc/guix.texi:44139
msgid "This must be a list of strings where each string has the form @samp{@var{key}=@var{value}} as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44090
#, no-wrap
msgid ""
"(list \"HTTP_PROXY=socks5://127.0.0.1:9150\"\n"
"      \"HTTPS_PROXY=socks5://127.0.0.1:9150\")\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44095
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "docker-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44100
msgid "This is the type of the service that runs @url{https://www.docker.com,Docker}, a daemon that can execute application bundles (sometimes referred to as ``containers'') in isolated environments."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44105
msgid "The @code{containerd-service-type} service need to be added to a system configuration, otherwise a message about not any service provides @code{containerd} will be displayed during @code{guix system reconfigure}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44108
#, no-wrap
msgid "{Data Type} docker-configuration"
msgstr "{Tipo de dados} docker-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44110
msgid "This is the data type representing the configuration of Docker and Containerd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44113
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{docker} (default: @code{docker})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:44115
msgid "The Docker daemon package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44116
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{docker-cli} (default: @code{docker-cli})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:44118
msgid "The Docker client package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44119
#, no-wrap
msgid "@code{containerd} (default: @var{containerd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44121
#, fuzzy
msgid "This field is deprecated in favor of @code{containerd-service-type} service."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:44122
#, no-wrap
msgid "@code{proxy} (default @var{docker-libnetwork-cmd-proxy})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44124
msgid "The Docker user-land networking proxy package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44125
#, no-wrap
msgid "@code{enable-proxy?} (default @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44127
msgid "Enable or disable the use of the Docker user-land networking proxy."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44131
#, no-wrap
msgid "@code{enable-iptables?} (default @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44133
msgid "Enable or disable the addition of iptables rules."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44136
msgid "List of environment variables to set for @command{dockerd}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44143
#, no-wrap
msgid ""
"(list \"LANGUAGE=eo:ca:eu\"\n"
"      \"TMPDIR=/tmp/dockerd\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44145
#, fuzzy, no-wrap
msgid "@code{config-file} (type: maybe-file-like)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44147
msgid "JSON configuration file pass to @command{dockerd}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44151
#, no-wrap
msgid "Singularity, container service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44152
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "singularity-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44157
msgid "This is the type of the service that allows you to run @url{https://www.sylabs.io/singularity/, Singularity}, a Docker-style tool to create and run application bundles (aka. ``containers'').  The value for this service is the Singularity package to use."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44161
msgid "The service does not install a daemon; instead, it installs helper programs as setuid-root (@pxref{Privileged Programs}) such that unprivileged users can invoke @command{singularity run} and similar commands."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44163
#, no-wrap
msgid "Rootless Podman"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44164
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Rootless Podman Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:44166
#, no-wrap
msgid "rootless podman, container management tool"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44167
#, no-wrap
msgid "podman, rootless"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44168
#, fuzzy, no-wrap
#| msgid "Package management commands."
msgid "container management, podman"
msgstr "Comandos de gerenciamento de pacote."

#. type: Plain text
#: guix-git/doc/guix.texi:44170
#, fuzzy
#| msgid "The @code{(guix inferior)} module provides the following procedures to open an inferior:"
msgid "The @code{(gnu services containers)} module provides the following service."
msgstr "O módulo @code{(guix inferior)} fornece os seguintes procedimentos para abrir um inferior:"

#. type: defvar
#: guix-git/doc/guix.texi:44172
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rootless-podman-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44175
msgid "This is the service type for @url{https://podman.io, Podman} is a container management tool."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44182
msgid "In addition to providing a drop-in replacement for Docker, Podman offers the ability to run containers in ``root-less'' mode, meaning that regular users can deploy containers without elevated privileges.  It does so mainly by leveraging two Linux kernel features: unprivileged user namespaces, and subordinate user and group IDs (@pxref{subordinate-user-group-ids, the subordinate user and group ID service})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44185
msgid "The @code{rootless-podman-service-type} sets up the system to allow unprivileged users to run @command{podman} commands:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44189
#, fuzzy, no-wrap
#| msgid ""
#| "(use-package-modules guile emacs)\n"
#| "\n"
msgid ""
"(use-service-modules containers networking @dots{})\n"
"(use-modules (gnu system accounts))  ;for 'subid-range'\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:44196
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (users (cons (user-account\n"
"                (name \"alice\")\n"
"                (comment \"Bob's sister\")\n"
"                (group \"users\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44211
#, no-wrap
msgid ""
"                ;; Adding the account to the \"cgroup\" group\n"
"                ;; makes it possible to run podman commands.\n"
"                (supplementary-groups '(\"cgroup\" \"wheel\"\n"
"                                        \"audio\" \"video\")))\n"
"               %base-user-accounts))\n"
"  (services\n"
"    (append (list (service iptables-service-type)\n"
"                  (service rootless-podman-service-type\n"
"                           (rootless-podman-configuration\n"
"                             (subgids\n"
"                               (list (subid-range (name \"alice\"))))\n"
"                             (subuids\n"
"                               (list (subid-range (name \"alice\")))))))\n"
"            %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44216
msgid "The @code{iptables-service-type} is required for Podman to be able to setup its own networks.  Due to the change in user groups and file systems it is recommended to reboot (or at least logout), before trying to run Podman commands."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44218
msgid "To test your installation you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:44227
#, no-wrap
msgid ""
"$ podman run -it --rm docker.io/alpine cat /etc/*release*\n"
"NAME=\"Alpine Linux\"\n"
"ID=alpine\n"
"VERSION_ID=3.20.2\n"
"PRETTY_NAME=\"Alpine Linux v3.20\"\n"
"HOME_URL=\"https://alpinelinux.org/\"\n"
"BUG_REPORT_URL=\"https://gitlab.alpinelinux.org/alpine/aports/-/issues\"\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44233
#, fuzzy, no-wrap
#| msgid "{Data Type} rottlog-configuration"
msgid "{Data Type} rootless-podman-configuration"
msgstr "{Tipo de dados} rottlog-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44235
#, fuzzy
msgid "Available @code{rootless-podman-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:44237
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{podman} (default: @code{podman}) (type: package-or-#f)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44240
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The Podman package that will be installed in the system profile.  Pass @code{#f} to not install Podman."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:44241
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group-name} (default: @code{\"cgroup\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44244
msgid "The name of the group that will own /sys/fs/cgroup resources.  Users that want to use rootless Podman have to be in this group."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44245
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{containers-registries} (type: lowerable)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44248
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/registries.conf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44249
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{containers-storage} (type: lowerable)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44252
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/storage.conf} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44253
#, fuzzy, no-wrap
msgid "@code{containers-policy} (type: lowerable)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44256
msgid "A string or a gexp evaluating to the path of Podman's @code{containers/policy.json} configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44257
#, fuzzy, no-wrap
msgid "@code{pam-limits} (type: list-of-pam-limits-entries)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44259
msgid "The PAM limits to be set for rootless Podman."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44260
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{subgids} (default: @code{()}) (type: list-of-subid-ranges)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44263
msgid "A list of subid ranges representing the subgids that will be available for each configured user."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44264
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{subuids} (default: @code{()}) (type: list-of-subid-ranges)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44267
msgid "A list of subid ranges representing the subuids that will be available for each configured user."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44275
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "OCI-backed, Shepherd services"
msgstr "Serviços de Shepherd"

#. type: subsubheading
#: guix-git/doc/guix.texi:44276
#, fuzzy, no-wrap
#| msgid "NFS related services."
msgid "OCI backed services"
msgstr "Serviços relacionados a NFS."

#. type: Plain text
#: guix-git/doc/guix.texi:44284
msgid "Should you wish to manage your Docker containers with the same consistent interface you use for your other Shepherd services, @var{oci-container-service-type} is the tool to use: given an @acronym{Open Container Initiative, OCI} container image, it will run it in a Shepherd service.  One example where this is useful: it lets you run services that are available as Docker/OCI images but not yet packaged for Guix."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44285
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "oci-container-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44289
msgid "This is a thin wrapper around Docker's CLI that executes OCI images backed processes as Shepherd Services."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44315
#, no-wrap
msgid ""
"(service oci-container-service-type\n"
"         (list\n"
"          (oci-container-configuration\n"
"           (network \"host\")\n"
"           (image\n"
"            (oci-image\n"
"             (repository \"guile\")\n"
"             (tag \"3\")\n"
"             (value (specifications->manifest '(\"guile\")))\n"
"             (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                             #:max-layers 2))))\n"
"           (entrypoint \"/bin/guile\")\n"
"           (command\n"
"            '(\"-c\" \"(display \\\"hello!\\n\\\")\")))\n"
"          (oci-container-configuration\n"
"           (image \"prom/prometheus\")\n"
"           (ports\n"
"             '((\"9000\" . \"9000\")\n"
"               (\"9090\" . \"9090\"))))\n"
"          (oci-container-configuration\n"
"           (image \"grafana/grafana:10.0.1\")\n"
"           (network \"host\")\n"
"           (volumes\n"
"             '(\"/var/lib/grafana:/var/lib/grafana\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44328
msgid "In this example three different Shepherd services are going to be added to the system.  Each @code{oci-container-configuration} record translates to a @code{docker run} invocation and its fields directly map to options.  You can refer to the @url{https://docs.docker.com/engine/reference/commandline/run,upstream} documentation for the semantics of each value.  If the images are not found, they will be @url{https://docs.docker.com/engine/reference/commandline/pull/,pulled}.  The services with @code{(network \"host\")} are going to be attached to the host network and are supposed to behave like native processes with regard to networking."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44333
#, no-wrap
msgid "{Data Type} oci-container-configuration"
msgstr "{Tipo de dados} oci-container-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44335
#, fuzzy
msgid "Available @code{oci-container-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:44337
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{\"oci-container\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44339
msgid "The user under whose authority docker commands will be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44340
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{\"docker\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44342
msgid "The group under whose authority docker commands will be run."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44343
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{command} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44345
msgid "Overwrite the default command (@code{CMD}) of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44346
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{entrypoint} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44348
msgid "Overwrite the default entrypoint (@code{ENTRYPOINT}) of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44349
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{host-environment} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44357
msgid "Set environment variables in the host environment where @command{docker run} is invoked.  This is especially useful to pass secrets from the host to the container without having them on the @command{docker run}'s command line: by setting the @code{MYSQL_PASSWORD} on the host and by passing @code{--env MYSQL_PASSWORD} through the @code{extra-arguments} field, it is possible to securely set values in the container environment.  This field's value can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44361
#, no-wrap
msgid ""
"(list '(\"LANGUAGE\\\" . \"eo:ca:eu\")\n"
"      \"JAVA_HOME=/opt/java\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44365
msgid "Pair members can be strings, gexps or file-like objects. Strings are passed directly to @code{make-forkexec-constructor}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44366
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{environment} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44368
msgid "Set environment variables. This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44372
#, no-wrap
msgid ""
"(list '(\"LANGUAGE\" . \"eo:ca:eu\")\n"
"      \"JAVA_HOME=/opt/java\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44378
msgid "Pair members can be strings, gexps or file-like objects.  Strings are passed directly to the Docker CLI.  You can refer to the @uref{https://docs.docker.com/engine/reference/commandline/run/#env,upstream} documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44379
#, fuzzy, no-wrap
msgid "@code{image} (type: string-or-oci-image)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44384
msgid "The image used to build the container.  It can be a string or an @code{oci-image} record.  Strings are resolved by the Docker Engine, and follow the usual format @code{myregistry.local:5000/testing/test-image:tag}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44385
#, fuzzy, no-wrap
msgid "@code{provision} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44387
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Set the name of the provisioned Shepherd service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:44388
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{requirement} (default: @code{'()}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:44391
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Set additional Shepherd services dependencies to the provisioned Shepherd service."
msgstr "O nome de host da máquina remota."

#. type: table
#: guix-git/doc/guix.texi:44396
msgid "When @code{log-file} is set, it names the file to which the service's standard output and standard error are redirected.  @code{log-file} is created if it does not exist, otherwise it is appended to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44400
msgid "Whether this service should be started automatically by the Shepherd.  If it is @code{#f}, the service has to be started manually with @command{herd start}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44401
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{respawn?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44404
msgid "Whether to have Shepherd restart the service when it stops, for instance when the underlying process dies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44405
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{shepherd-actions} (default: @code{'()}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:44408
msgid "This is a list of @code{shepherd-action} records defining actions supported by the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44409
#, fuzzy, no-wrap
msgid "@code{network} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44411
msgid "Set a Docker network for the spawned container."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44412
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{ports} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44415
msgid "Set the port or port ranges to expose from the spawned container.  This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44419
#, no-wrap
msgid ""
"(list '(\"8080\" . \"80\")\n"
"      \"10443:443\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44425
msgid "Pair members can be strings, gexps or file-like objects.  Strings are passed directly to the Docker CLI.  You can refer to the @uref{https://docs.docker.com/engine/reference/commandline/run/#publish,upstream} documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44426
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{volumes} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44429
msgid "Set volume mappings for the spawned container.  This can be a list of pairs or strings, even mixed:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44433
#, no-wrap
msgid ""
"(list '(\"/root/data/grafana\" . \"/var/lib/grafana\")\n"
"      \"/gnu/store:/gnu/store\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44439
msgid "Pair members can be strings, gexps or file-like objects.  Strings are passed directly to the Docker CLI.  You can refer to the @uref{https://docs.docker.com/engine/reference/commandline/run/#volume,upstream} documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44440
#, fuzzy, no-wrap
msgid "@code{container-user} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44444
msgid "Set the current user inside the spawned container.  You can refer to the @url{https://docs.docker.com/engine/reference/run/#user,upstream} documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44445
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{workdir} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44450
msgid "Set the current working directory for the spawned Shepherd service.  You can refer to the @url{https://docs.docker.com/engine/reference/run/#workdir,upstream} documentation for semantics."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44451
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-arguments} (default: @code{'()}) (type: list)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44454
msgid "A list of strings, gexps or file-like objects that will be directly passed to the @command{docker run} invocation."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44464
#, no-wrap
msgid "{Data Type} oci-image"
msgstr "{Tipo de dados} oci-image"

#. type: deftp
#: guix-git/doc/guix.texi:44466
#, fuzzy
msgid "Available @code{oci-image} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:44468 guix-git/doc/guix.texi:45289
#, fuzzy, no-wrap
msgid "@code{repository} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44471
msgid "A string like @code{myregistry.local:5000/testing/test-image} that names the OCI image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44472
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{tag} (default: @code{\"latest\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44474
msgid "A string representing the OCI image tag.  Defaults to @code{latest}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44475
#, fuzzy, no-wrap
msgid "@code{value} (type: oci-lowerable-image)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44479
msgid "A @code{manifest} or @code{operating-system} record that will be lowered into an OCI compatible tarball.  Otherwise this field's value can be a gexp or a file-like object that evaluates to an OCI compatible tarball."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44480
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{pack-options} (default: @code{'()}) (type: list)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44484
msgid "An optional set of keyword arguments that will be passed to the @code{docker-image} procedure from @code{guix scripts pack}.  They can be used to replicate @command{guix pack} behavior:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44493
#, no-wrap
msgid ""
"(oci-image\n"
"  (repository \"guile\")\n"
"  (tag \"3\")\n"
"  (value\n"
"    (specifications->manifest '(\"guile\")))\n"
"  (pack-options '(#:symlinks ((\"/bin/guile\" -> \"bin/guile\"))\n"
"                  #:max-layers 2)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44497
msgid "If the @code{value} field is an @code{operating-system} record, this field's value will be ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44498
#, fuzzy, no-wrap
msgid "@code{system} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44500
msgid "Attempt to build for a given system, e.g.@: \"i686-linux\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44501
#, fuzzy, no-wrap
msgid "@code{target} (default: @code{\"\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44503
msgid "Attempt to cross-build for a given triple, e.g.@: \"aarch64-linux-gnu\""
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44504
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{grafts?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44506
msgid "Whether to allow grafting or not in the pack build."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:44515
msgid "subordinate-user-group-ids"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44515
#, no-wrap
msgid "subordinate user and group IDs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44516
#, no-wrap
msgid "subid, subordinate user and group IDs"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44517
#, no-wrap
msgid "Subordinate User and Group ID Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44527
msgid "Among the virtualization facilities implemented by the Linux kernel is the concept of @dfn{subordinate IDs}.  Subordinate IDs allow for mapping user and group IDs inside process namespaces to user and group IDs of the host system.  Subordinate user ID ranges (subuids) allow users to map virtual user IDs inside containers to the user ID of an unprivileged user of the host system.  Subordinate group ID ranges (subgids), instead map virtual group IDs to the group ID of an unprivileged user on the host system.  You can access @code{subuid(5)} and @code{subgid(5)} Linux man pages for more details."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44532
msgid "The @code{(gnu system shadow)} module exposes the @code{subids-service-type}, its configuration record @code{subids-configuration} and its extension record @code{subids-extension}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44535
msgid "With @code{subids-service-type}, subuids and subgids ranges can be reserved for users that desire so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44540 guix-git/doc/guix.texi:44593
#, no-wrap
msgid ""
"(use-modules (gnu system shadow)     ;for 'subids-service-type'\n"
"             (gnu system accounts)   ;for 'subid-range'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44556
#, fuzzy, no-wrap
#| msgid ""
#| "(operating-system\n"
#| "  ;; @dots{}\n"
#| "  (services\n"
#| "    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
#| "    ;; with the list of services you're actually using.\n"
#| "    (modify-services %desktop-services\n"
#| "      (guix-service-type config =>\n"
#| "                        (guix-configuration\n"
#| "                          (inherit config)\n"
#| "                          (substitute-urls\n"
#| "                            (append (list \"https://guix.example.org\")\n"
#| "                                    %default-substitute-urls))\n"
#| "                          (authorized-keys\n"
#| "                            (append (list (local-file \"./key.pub\"))\n"
#| "                                    %default-authorized-guix-keys)))))))\n"
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    (list\n"
"      (simple-service 'alice-bob-subids\n"
"                      subids-service-type\n"
"                      (subids-extension\n"
"                        (subgids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))))\n"
"                        (subuids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))\n"
"                          (subid-range (name \"bob\")\n"
"                                       (start 100700)))))))))\n"
msgstr ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"  ;; Suponha que estamos começando com '%desktop-services'. Substitua-o\n"
"  ;; pela lista de serviços que você está realmente usando.\n"
"  (modify-services %desktop-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        (substitute-urls\n"
"                         (append (list \"https://guix.example.org\")\n"
"                                 %default-substitute-urls))\n"
"                        (authorized-keys\n"
"                         (append (list (local-file \"./key.pub\"))\n"
"                                 %default-authorized-guix-keys)))))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:44565
msgid "Users (definitely other services), usually, are supposed to extend the service instead of adding subids directly to @code{subids-configuration}, unless the want to change the default behavior for root.  With default settings the @code{subids-service-type} adds, if it's not already there, a configuration for the root account to both @file{/etc/subuid} and @file{/etc/subgid}, possibly starting at the minimum possible subid.  Otherwise the root subuids and subgids ranges are fitted wherever possible."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44567
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "The above configuration will yield the following:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: example
#: guix-git/doc/guix.texi:44576
#, no-wrap
msgid ""
"# cat /etc/subgid\n"
"root:100000:65536\n"
"alice:165536:65536\n"
"# cat /etc/subuid\n"
"root:100000:700\n"
"bob:100700:65536\n"
"alice:166236:65536\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44580
#, fuzzy, no-wrap
#| msgid "{Data Type} gss-configuration"
msgid "{Data Type} subids-configuration"
msgstr "{Tipo de dados} gss-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44588
msgid "With default settings the @code{subids-service-type} adds, if it's not already there, a configuration for the root account to both @file{/etc/subuid} and @file{/etc/subgid}, possibly starting at the minimum possible subid.  To disable the default behavior and provide your own definition for the root subid ranges you can set to @code{#f} the @code{add-root?} field:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44620
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (services\n"
"    (list\n"
"      (service subids-service-type\n"
"               (subids-configuration\n"
"                (add-root? #f)\n"
"                (subgids\n"
"                  (subid-range (name \"root\")\n"
"                               (start 120000)\n"
"                               (count 100)))\n"
"                (subuids\n"
"                  (subid-range (name \"root\")\n"
"                               (start 120000)\n"
"                               (count 100)))))\n"
"      (simple-service 'alice-bob-subids\n"
"                      subids-service-type\n"
"                      (subids-extension\n"
"                        (subgids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))))\n"
"                        (subuids\n"
"                         (list\n"
"                          (subid-range (name \"alice\"))\n"
"                          (subid-range (name \"bob\")\n"
"                                       (start 100700)))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44623
#, fuzzy
msgid "Available @code{subids-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:44625
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{add-root?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44627
msgid "Whether to automatically configure subuids and subgids for root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44628 guix-git/doc/guix.texi:44654
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{subgids} (default: @code{'()}) (type: list-of-subid-ranges)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44633
msgid "The list of @code{subid-range}s that will be serialized to @code{/etc/subgid}.  If a range doesn't specify a start it will be fitted based on its number of requested subids.  If a range doesn't specify a count the default size of 65536 will be assumed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44634 guix-git/doc/guix.texi:44659
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{subuids} (default: @code{'()}) (type: list-of-subid-ranges)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44639
msgid "The list of @code{subid-range}s that will be serialized to @code{/etc/subuid}.  If a range doesn't specify a start it will be fitted based on its number of requested subids.  If a range doesn't specify a count the default size of 65536 will be assumed."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44648
#, fuzzy, no-wrap
#| msgid "{Data Type} guix-extension"
msgid "{Data Type} subids-extension"
msgstr "{Tipo de dados} guix-extension"

#. type: deftp
#: guix-git/doc/guix.texi:44651
#, fuzzy
msgid "Available @code{subids-extension} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:44658
msgid "The list of @code{subid-range}s that will be appended to @code{subids-configuration-subgids}.  Entries with the same name are deduplicated upon merging."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44663
msgid "The list of @code{subid-range}s that will be appended to @code{subids-configuration-subuids}.  Entries with the same name are deduplicated upon merging."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44672
#, fuzzy, no-wrap
#| msgid "{Data Type} image"
msgid "{Data Type} subid-range"
msgstr "{Tipo de dados} image"

#. type: deftp
#: guix-git/doc/guix.texi:44676
#, fuzzy
msgid "The @code{subid-range} record is defined at @code{(gnu system accounts)}.  Available fields are:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:44681
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name of the user or group that will own this range."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:44682
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{start} (default: @code{#f}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44685
msgid "The first requested subid.  When false the first available subid with enough contiguous subids will be assigned."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44686
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{count} (default: @code{#f}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44689
msgid "The number of total allocated subids.  When #f the default of 65536 will be assumed ."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44696
#, no-wrap
msgid "Audit"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44697
#, no-wrap
msgid "Auditd Service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44700
msgid "The @code{(gnu services auditd)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44701
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "auditd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44706
msgid "This is the type of the service that runs @url{https://people.redhat.com/sgrubb/audit/,auditd}, a daemon that tracks security-relevant information on your system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44708
msgid "Examples of things that can be tracked:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44712
msgid "File accesses"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44714
msgid "System calls"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44716
msgid "Invoked commands"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44718
msgid "Failed login attempts"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44720
msgid "Firewall filtering"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:44722
msgid "Network access"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44733
msgid "@command{auditctl} from the @code{audit} package can be used in order to add or remove events to be tracked (until the next reboot).  In order to permanently track events, put the command line arguments of auditctl into a file called @code{audit.rules} in the configuration directory (see below).  @command{aureport} from the @code{audit} package can be used in order to view a report of all recorded events.  The audit daemon by default logs into the file @file{/var/log/audit.log}."
msgstr "@command{auditctl} do pacote @code{audit} pode ser usado para adicionar ou remover eventos a serem rastreaddos (até o próximo reinício). A fim de rastrear permanentemente eventos, ponha os argumentos de linha de comando do auditctl num arquivo chamado @code{audit.rules} no diretório de configurações (veja abaixo). @command{aureport} do pacote @code{audit} pode ser usado para visualizar um relatório de todos os eventos gravados. O daemon audit por padrão, produz logs no arquivo @file{/var/log/audit.log}."

#. type: deftp
#: guix-git/doc/guix.texi:44736
#, no-wrap
msgid "{Data Type} auditd-configuration"
msgstr "{Tipo de dados} auditd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44738
msgid "This is the data type representing the configuration of auditd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44741
#, no-wrap
msgid "@code{audit} (default: @code{audit})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44743
msgid "The audit package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44744
#, no-wrap
msgid "@code{configuration-directory} (default: @code{%default-auditd-configuration-directory})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44748
msgid "The directory containing the configuration file for the audit package, which must be named @code{auditd.conf}, and optionally some audit rules to instantiate on startup."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44752
#, no-wrap
msgid "rshiny"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44753
#, no-wrap
msgid "R-Shiny service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44756
msgid "The @code{(gnu services science)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44757
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "rshiny-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44762
msgid "This is a type of service which is used to run a webapp created with @code{r-shiny}.  This service sets the @env{R_LIBS_USER} environment variable and runs the provided script to call @code{runApp}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44763
#, no-wrap
msgid "{Data Type} rshiny-configuration"
msgstr "{Tipo de dados} rshiny-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44765
msgid "This is the data type representing the configuration of rshiny."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44768
#, no-wrap
msgid "@code{package} (default: @code{r-shiny})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44770
msgid "The package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44771
#, fuzzy, no-wrap
#| msgid "@code{uid} (default: @code{#f})"
msgid "@code{binary} (default @code{\"rshiny\"})"
msgstr "@code{uid} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44774
msgid "The name of the binary or shell script located at @code{package/bin/} to run when the service is run."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44776
msgid "The common way to create this file is as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44793
#, no-wrap
msgid ""
"@dots{}\n"
"(let* ((out       (assoc-ref %outputs \"out\"))\n"
"       (targetdir (string-append out \"/share/\" ,name))\n"
"       (app       (string-append out \"/bin/\" ,name))\n"
"       (Rbin      (search-input-file %build-inputs \"/bin/Rscript\")))\n"
"  ;; @dots{}\n"
"  (mkdir-p (string-append out \"/bin\"))\n"
"  (call-with-output-file app\n"
"    (lambda (port)\n"
"      (format port\n"
"\"#!~a\n"
"library(shiny)\n"
"setwd(\\\"~a\\\")\n"
"runApp(launch.browser=0, port=4202)~%\\n\"\n"
"      Rbin targetdir))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44799
#, no-wrap
msgid "Nix"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44800
#, no-wrap
msgid "Nix service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44803
msgid "The @code{(gnu services nix)} module provides the following service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44804
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "nix-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44809
msgid "This is the type of the service that runs build daemon of the @url{https://nixos.org/nix/, Nix} package manager.  Here is an example showing how to use it:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44814
#, no-wrap
msgid ""
"(use-modules (gnu))\n"
"(use-service-modules nix)\n"
"(use-package-modules package-management)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44819
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (packages (append (list nix)\n"
"                    %base-packages))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44822
#, no-wrap
msgid ""
"  (services (append (list (service nix-service-type))\n"
"                    %base-services)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44825
msgid "After @command{guix system reconfigure} configure Nix for your user:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44827
#, no-wrap
msgid "Add a Nix channel and update it.  See"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:44831
msgid "@url{https://wiki.nixos.org/wiki/Nix_channels, Nix channels} for more information about the available channels.  If you would like to use the unstable Nix channel you can do this by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:44835
#, no-wrap
msgid ""
"$ nix-channel --add https://nixos.org/channels/nixpkgs-unstable\n"
"$ nix-channel --update\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44837
#, no-wrap
msgid "Create your Nix profile directory:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:44842
#, no-wrap
msgid ""
"$ sudo mkdir -p /nix/var/nix/profiles/per-user/$USER\n"
"$ sudo chown $USER:root /nix/var/nix/profiles/per-user/$USER\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44844
#, no-wrap
msgid "Create a symlink to your profile and activate Nix profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:44849
#, no-wrap
msgid ""
"$ ln -s \"/nix/var/nix/profiles/per-user/$USER/profile\" ~/.nix-profile\n"
"$ source /run/current-system/profile/etc/profile.d/nix.sh\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44855
#, no-wrap
msgid "{Data Type} nix-configuration"
msgstr "{Tipo de dados} nix-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44857
msgid "This data type represents the configuration of the Nix daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44859
#, no-wrap
msgid "@code{nix} (default: @code{nix})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44861
msgid "The Nix package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44862
#, no-wrap
msgid "@code{sandbox} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44864
msgid "Specifies whether builds are sandboxed by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44865
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{build-directory} (default: @code{\"/tmp\"})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44869
msgid "The directory where build directory are stored during builds.  This is useful to change if, for example, the default location does not have enough space to hold build trees for big packages."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44873
msgid "This is similar to setting the @env{TMPDIR} environment variable for @command{guix-daemon}.  @ref{Build Environment Setup, @env{TMPDIR}}, for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44874
#, no-wrap
msgid "@code{build-sandbox-items} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44877
msgid "This is a list of strings or objects appended to the @code{build-sandbox-items} field of the configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44885
msgid "Extra command line options for @code{nix-service-type}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:44888
#, no-wrap
msgid "Fail2Ban"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:44889
#, fuzzy, no-wrap
#| msgid "Mail Services"
msgid "Fail2Ban service"
msgstr "Serviços de correio"

#. type: Plain text
#: guix-git/doc/guix.texi:44895
msgid "@uref{http://www.fail2ban.org/, @code{fail2ban}} scans log files (e.g. @code{/var/log/apache/error_log}) and bans IP addresses that show malicious signs -- repeated password failures, attempts to make use of exploits, etc."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44898
msgid "@code{fail2ban-service-type} service type is provided by the @code{(gnu services security)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44901
msgid "This service type runs the @code{fail2ban} daemon.  It can be configured in various ways, which are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44903
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "Basic configuration"
msgstr "Configuração do git"

#. type: table
#: guix-git/doc/guix.texi:44906
msgid "The basic parameters of the Fail2Ban service can be configured via its @code{fail2ban} configuration, which is documented below."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44907
#, no-wrap
msgid "User-specified jail extensions"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44910
msgid "The @code{fail2ban-jail-service} function can be used to add new Fail2Ban jails."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44911
#, no-wrap
msgid "Shepherd extension mechanism"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:44914
msgid "Service developers can extend the @code{fail2ban-service-type} service type itself via the usual service extension mechanism."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:44916
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "fail2ban-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:44920
msgid "This is the type of the service that runs @code{fail2ban} daemon.  Below is an example of a basic, explicit configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44935
#, no-wrap
msgid ""
"(append\n"
" (list\n"
"  (service fail2ban-service-type\n"
"           (fail2ban-configuration\n"
"            (extra-jails\n"
"             (list\n"
"              (fail2ban-jail-configuration\n"
"               (name \"sshd\")\n"
"               (enabled? #t))))))\n"
"  ;; There is no implicit dependency on an actual SSH\n"
"  ;; service, so you need to provide one.\n"
"  (service openssh-service-type))\n"
" %base-services)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:44938
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "{Procedure} fail2ban-jail-service svc-type jail"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:44941
msgid "Extend @var{svc-type}, a @code{<service-type>} object with @var{jail}, a @code{fail2ban-jail-configuration} object."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:44957
#, no-wrap
msgid ""
"(append\n"
" (list\n"
"  (service\n"
"   ;; The 'fail2ban-jail-service' procedure can extend any service type\n"
"   ;; with a fail2ban jail.  This removes the requirement to explicitly\n"
"   ;; extend services with fail2ban-service-type.\n"
"   (fail2ban-jail-service\n"
"    openssh-service-type\n"
"    (fail2ban-jail-configuration\n"
"     (name \"sshd\")\n"
"     (enabled? #t)))\n"
"   (openssh-configuration ...))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:44962
msgid "Below is the reference for the different @code{jail-service-type} configuration records."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44967
#, no-wrap
msgid "{Data Type} fail2ban-configuration"
msgstr "{Tipo de dados} fail2ban-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44969
msgid "Available @code{fail2ban-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44971
#, fuzzy, no-wrap
msgid "@code{fail2ban} (default: @code{fail2ban}) (type: package)"
msgstr "@code{tmpdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44975
msgid "The @code{fail2ban} package to use.  It is used for both binaries and as base default configuration that is to be extended with @code{<fail2ban-jail-configuration>} objects."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44976
#, fuzzy, no-wrap
msgid "@code{run-directory} (default: @code{\"/var/run/fail2ban\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44978
msgid "The state directory for the @code{fail2ban} daemon."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44979
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{jails} (default: @code{'()}) (type: list-of-fail2ban-jail-configurations)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44982
msgid "Instances of @code{<fail2ban-jail-configuration>} collected from extensions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44983
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-jails} (default: @code{'()}) (type: list-of-fail2ban-jail-configurations)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:44985
msgid "Instances of @code{<fail2ban-jail-configuration>} explicitly provided."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44986 guix-git/doc/guix.texi:45115
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{extra-content} (default: @code{'()}) (type: text-config)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:44989
msgid "Extra raw content to add to the end of the @file{jail.local} file, provided as a list of file-like objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:44994
#, no-wrap
msgid "{Data Type} fail2ban-ignore-cache-configuration"
msgstr "{Tipo de dados} fail2ban-ignore-cache-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:44996
msgid "Available @code{fail2ban-ignore-cache-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:44998
#, fuzzy, no-wrap
msgid "@code{key} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45000
msgid "Cache key."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45001
#, fuzzy, no-wrap
msgid "@code{max-count} (type: integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45003
msgid "Cache size."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45004
#, fuzzy, no-wrap
msgid "@code{max-time} (type: integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45006
msgid "Cache time."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45011
#, no-wrap
msgid "{Data Type} fail2ban-jail-action-configuration"
msgstr "{Tipo de dados} fail2ban-jail-action-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45013
msgid "Available @code{fail2ban-jail-action-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45017
msgid "Action name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45018
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{arguments} (default: @code{'()}) (type: list-of-arguments)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45020
msgid "Action arguments."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45025
#, no-wrap
msgid "{Data Type} fail2ban-jail-configuration"
msgstr "{Tipo de dados} fail2ban-jail-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45027
msgid "Available @code{fail2ban-jail-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45031
msgid "Required name of this jail configuration."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45034
msgid "Whether this jail is enabled."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45035
#, fuzzy, no-wrap
msgid "@code{backend} (type: maybe-symbol)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45039
msgid "Backend to use to detect changes in the @code{log-path}.  The default is 'auto.  To consult the defaults of the jail configuration, refer to the @file{/etc/fail2ban/jail.conf} file of the @code{fail2ban} package."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45040
#, fuzzy, no-wrap
msgid "@code{max-retry} (type: maybe-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45043
msgid "The number of failures before a host gets banned (e.g.  @code{(max-retry 5)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45044
#, fuzzy, no-wrap
msgid "@code{max-matches} (type: maybe-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45047
msgid "The number of matches stored in ticket (resolvable via tag @code{<matches>}) in action."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45048
#, fuzzy, no-wrap
msgid "@code{find-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45055
msgid "The time window during which the maximum retry count must be reached for an IP address to be banned.  A host is banned if it has generated @code{max-retry} during the last @code{find-time} seconds (e.g.  @code{(find-time \"10m\")}).  It can be provided in seconds or using Fail2Ban's \"time abbreviation format\", as described in @command{man 5 jail.conf}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45056
#, fuzzy, no-wrap
msgid "@code{ban-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45059
msgid "The duration, in seconds or time abbreviated format, that a ban should last.  (e.g.  @code{(ban-time \"10m\")})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45060
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{ban-time-increment?} (type: maybe-boolean)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45063
msgid "Whether to consider past bans to compute increases to the default ban time of a specific IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45064
#, fuzzy, no-wrap
msgid "@code{ban-time-factor} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45066
msgid "The coefficient to use to compute an exponentially growing ban time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45067
#, fuzzy, no-wrap
msgid "@code{ban-time-formula} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45069
msgid "This is the formula used to calculate the next value of a ban time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45070
#, fuzzy, no-wrap
msgid "@code{ban-time-multipliers} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45072
msgid "Used to calculate next value of ban time instead of formula."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45073
#, fuzzy, no-wrap
msgid "@code{ban-time-max-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45075
msgid "The maximum number of seconds a ban should last."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45076
#, fuzzy, no-wrap
msgid "@code{ban-time-rnd-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45080
msgid "The maximum number of seconds a randomized ban time should last.  This can be useful to stop ``clever'' botnets calculating the exact time an IP address can be unbanned again."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45081
#, fuzzy, no-wrap
msgid "@code{ban-time-overall-jails?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45085
msgid "When true, it specifies the search of an IP address in the database should be made across all jails.  Otherwise, only the current jail of the ban IP address is considered."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45086
#, fuzzy, no-wrap
msgid "@code{ignore-self?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45088
msgid "Never ban the local machine's own IP address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45089
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{ignore-ip} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45093
msgid "A list of IP addresses, CIDR masks or DNS hosts to ignore.  @code{fail2ban} will not ban a host which matches an address in this list."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45094
#, no-wrap
msgid "@code{ignore-cache} (type: maybe-fail2ban-ignore-cache-configuration)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45096
msgid "Provide cache parameters for the ignore failure check."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45097
#, fuzzy, no-wrap
msgid "@code{filter} (type: maybe-fail2ban-jail-filter-configuration)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45101
msgid "The filter to use by the jail, specified via a @code{<fail2ban-jail-filter-configuration>} object.  By default, jails have names matching their filter name."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45102
#, fuzzy, no-wrap
msgid "@code{log-time-zone} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45104
msgid "The default time zone for log lines that do not have one."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45105
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{log-encoding} (type: maybe-symbol)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45108
msgid "The encoding of the log files handled by the jail.  Possible values are: @code{'ascii}, @code{'utf-8} and @code{'auto}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45109
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{log-path} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45111
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The file names of the log files to be monitored."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:45112
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{action} (default: @code{'()}) (type: list-of-fail2ban-jail-actions)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45114
msgid "A list of @code{<fail2ban-jail-action-configuration>}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45118
#, fuzzy
#| msgid "Instantiating a system configuration."
msgid "Extra content for the jail configuration, provided as a list of file-like objects."
msgstr "Inicializando uma configuração de sistema."

#. type: deftp
#: guix-git/doc/guix.texi:45123
#, no-wrap
msgid "{Data Type} fail2ban-jail-filter-configuration"
msgstr "{Tipo de dados} fail2ban-jail-filter-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45125
msgid "Available @code{fail2ban-jail-filter-configuration} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45129
#, fuzzy
#| msgid "user interfaces"
msgid "Filter to use."
msgstr "interfaces de usuário"

#. type: table
#: guix-git/doc/guix.texi:45132
msgid "Mode for filter."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45139
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "resize-file-system"
msgstr "--list-transitive"

#. type: subsubheading
#: guix-git/doc/guix.texi:45140
#, fuzzy, no-wrap
#| msgid "System Services"
msgid "Resize File System Service"
msgstr "Serviços do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:45146
msgid "This service type lets you resize a live file system during boot, which can be convenient if a Guix image is flashed on an SD Card (e.g. for an embedded device) or uploaded to a VPS.  In both cases the medium the image will reside upon may be larger than the image you want to produce."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45148
msgid "For an embedded device booting from an SD card you may use something like:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45154
#, no-wrap
msgid ""
"(service resize-file-system-service-type\n"
"         (resize-file-system-configuration\n"
"          (file-system\n"
"           (file-system (device (file-system-label \"root\"))\n"
"                        (type \"ext4\")))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:45161
msgid "Be extra cautious to use the correct device and type.  The service has little error handling of its own and relies on the underlying tools.  Wrong use could end in loss of data or the corruption of the operating system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45166
msgid "Partitions and file systems are grown to the maximum size available.  File systems can only grow when they are on the last partition on a device and have empty space available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45169
msgid "This service supports the ext2, ext3, ext4, btrfs, and bcachefs file systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45172
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{file-system} (type: file-system)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45176
msgid "The file-system object to resize (@pxref{File Systems}).  This object must have the @code{device} and @code{type} fields set.  Other fields are ignored."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45177
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{cloud-utils} (default: @code{cloud-utils}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45180
msgid "The cloud-utils package to use.  This package is used for the @code{growpart} command."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45181
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{e2fsprogs} (default: @code{e2fsprogs}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45184
msgid "The e2fsprogs package to use, used for resizing ext2, ext3, and ext4 file systems."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45185
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{btrfs-progs} (default: @code{btrfs-progs}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45187
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The btrfs-progs package to use, used for resizing the btrfs file system."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:45188
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{bcachefs-tools} (default: @code{bcachefs-tools}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45190
msgid "The bcachefs-tools package to use, used for resizing the bcachefs file system."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45193
#, no-wrap
msgid "Backup"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:45194 guix-git/doc/guix.texi:50862
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Backup Services"
msgstr "Serviços base"

#. type: Plain text
#: guix-git/doc/guix.texi:45198
msgid "The @code{(gnu services backup)} module offers services for backing up file system trees.  For now, it provides the @code{restic-backup-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45203
msgid "With @code{restic-backup-service-type}, you can periodically back up directories and files with @uref{https://restic.net/, Restic}, which supports end-to-end encryption and deduplication.  Consider the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45207
#, no-wrap
msgid ""
"(use-service-modules backup @dots{}) ;for 'restic-backup-service-type'\n"
"(use-package-modules sync @dots{})   ;for 'rclone'\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45229
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (packages (append (list rclone)    ;for use by restic\n"
"                    %base-packages))\n"
"  (services\n"
"    (list\n"
"      (service restic-backup-service-type\n"
"               (restic-backup-configuration\n"
"                 (jobs\n"
"                   (list (restic-backup-job\n"
"                           (name \"remote-ftp\")\n"
"                           (repository \"rclone:remote-ftp:backup/restic\")\n"
"                           (password-file \"/root/.restic\")\n"
"                           ;; Every day at 23.\n"
"                           (schedule \"0 23 * * *\")\n"
"                           (files '(\"/root/.restic\"\n"
"                                    \"/root/.config/rclone\"\n"
"                                    \"/etc/ssh/ssh_host_rsa_key\"\n"
"                                    \"/etc/ssh/ssh_host_rsa_key.pub\"\n"
"                                    \"/etc/guix/signing-key.pub\"\n"
"                                    \"/etc/guix/signing-key.sec\"))))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45235
msgid "Each @code{restic-backup-job} translates to a Shepherd timer which sets the @env{RESTIC_PASSWORD} environment variable by reading the first line of @code{password-file} and runs @command{restic backup}, creating backups using rclone of all the files listed in the @code{files} field."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45238
msgid "The @code{restic-backup-service-type} provides the ability to instantaneously trigger a backup with the @code{trigger} Shepherd action:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45241
#, no-wrap
msgid "sudo herd trigger remote-ftp\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45245
#, no-wrap
msgid "{Data Type} restic-backup-configuration"
msgstr "{Tipo de dados} restic-backup-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45247
#, fuzzy
msgid "Available @code{restic-backup-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:45249
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{jobs} (default: @code{'()}) (type: list-of-restic-backup-jobs)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45251
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The list of backup jobs for the current system."
msgstr "O nome de host da máquina remota."

#. type: deftp
#: guix-git/doc/guix.texi:45261
#, no-wrap
msgid "{Data Type} restic-backup-job"
msgstr "{Tipo de dados} restic-backup-job"

#. type: deftp
#: guix-git/doc/guix.texi:45263
#, fuzzy
msgid "Available @code{restic-backup-job} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:45265
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{restic} (default: @code{restic}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45267
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The restic package to be used for the current job."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:45268
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{user} (default: @code{\"root\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45270
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The user used for running the current job."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:45271
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{group} (default: @code{\"root\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45273
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The group used for running the current job."
msgstr "O nome de host da máquina remota."

#. type: table
#: guix-git/doc/guix.texi:45279
msgid "The file system path to the log file for this job.  By default the file will have be @file{/var/log/restic-backup/@var{job-name}.log}, where @var{job-name} is the name defined in the @code{name} field.  For Guix Home services it defaults to @file{$XDG_STATE_HOME/shepherd/restic-backup/@var{job-name}.log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45280
#, fuzzy, no-wrap
msgid "@code{max-duration} (type: maybe-number)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45283
msgid "The maximum duration in seconds that a job may last.  Past @code{max-duration} seconds, the job is forcefully terminated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45284
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{wait-for-termination?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45288
msgid "Wait until the job has finished before considering executing it again; otherwise, perform it strictly on every occurrence of event, at the risk of having multiple instances running concurrently."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45291
#, fuzzy
#| msgid "Other posible tools that do the job."
msgid "The restic repository target of this job."
msgstr "Outras ferramentas possíveis que fazem o trabalho."

#. type: table
#: guix-git/doc/guix.texi:45294
msgid "A string denoting a name for this job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45295
#, fuzzy, no-wrap
msgid "@code{password-file} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45299
msgid "Name of the password file, readable by the configured @code{user}, that will be used to set the @env{RESTIC_PASSWORD} environment variable for the current job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45300
#, fuzzy, no-wrap
msgid "@code{schedule} (type: gexp-or-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45304
msgid "A string or a gexp representing the frequency of the backup.  Gexp must evaluate to @code{calendar-event} records or to strings.  Strings must contain Vixie cron date lines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45305
#, fuzzy, no-wrap
msgid "@code{requirement} (type: maybe-list-of-symbols)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45309
msgid "The list of Shepherd services that this backup job depends upon.  When unset it defaults to @code{'()}, for Guix Home.  Otherwise to @code{'(user-processes file-systems)}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45310
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{files} (default: @code{'()}) (type: list-of-lowerables)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45313
msgid "The list of files or directories to be backed up.  It must be a list of values that can be lowered to strings."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45316
msgid "Whether to enable verbose output for the current backup job."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45317
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{extra-flags} (default: @code{'()}) (type: list-of-lowerables)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45321
msgid "A list of values that are lowered to strings.  These will be passed as command-line arguments to the current job @command{restic backup} invocation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45328
#, no-wrap
msgid "DLNA/UPnP"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:45329
#, fuzzy, no-wrap
#| msgid "LDAP Services"
msgid "DLNA/UPnP Services"
msgstr "Serviços LDAP"

#. type: Plain text
#: guix-git/doc/guix.texi:45336
msgid "The @code{(gnu services upnp)} module offers services related to @acronym{UPnP, Universal Plug and Play} and @acronym{DLNA, Digital Living Network Alliance}, networking protocols that can be used for media streaming and device interoperability within a local network.  For now, this module provides the @code{readymedia-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45343
msgid "@uref{https://minidlna.sourceforge.net/, ReadyMedia} (formerly known as MiniDLNA) is a DLNA/UPnP-AV media server.  The project's daemon, @code{minidlnad}, can serve media files (audio, pictures, and video) to DLNA/UPnP-AV clients available on the network.  @code{readymedia-service-type} is a Guix service that wraps around ReadyMedia's @code{minidlnad}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45345
#, fuzzy
#| msgid "git configuration"
msgid "Consider the following configuration:"
msgstr "Configuração do git"

#. type: lisp
#: guix-git/doc/guix.texi:45347
#, fuzzy, no-wrap
#| msgid ""
#| "(use-package-modules guile emacs)\n"
#| "\n"
msgid ""
"(use-service-modules upnp @dots{})\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:45364
#, no-wrap
msgid ""
"(operating-system\n"
"  @dots{}\n"
"  (services\n"
"   (list (service readymedia-service-type\n"
"                  (readymedia-configuration\n"
"                   (media-directories\n"
"                    (list (readymedia-media-directory\n"
"                           (path \"/media/audio\")\n"
"                           (types '(A)))\n"
"                          (readymedia-media-directory\n"
"                           (path \"/media/video\")\n"
"                           (types '(V)))\n"
"                          (readymedia-media-directory\n"
"                           (path \"/media/misc\"))))\n"
"                   (extra-config '((\"notify_interval\" . \"60\")))))\n"
"         @dots{})))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45370
msgid "This sets up the ReadyMedia daemon to serve files from the media folders specified in @code{media-directories}.  The @code{media-directories} field is mandatory.  All other fields (such as network ports and the server name) come with a predefined default and can be omitted."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:45375
msgid "This service is also available for Guix Home, where it runs directly with your user privileges (@pxref{Miscellaneous Home Services, @code{home-readymedia-service-type}})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45379
#, no-wrap
msgid "{Data Type} readymedia-configuration"
msgstr "{Tipo de dados} readymedia-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45381
#, fuzzy
msgid "Available @code{readymedia-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:45383
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{readymedia} (default: @code{readymedia}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45385
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The ReadyMedia package to be used for the service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:45386
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{friendly-name} (default: @code{#f}) (type: maybe-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45388
msgid "A custom name that will be displayed on connected clients."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45389
#, fuzzy, no-wrap
msgid "@code{media-directories} (type: list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45392
msgid "The list of media folders to serve content from.  Each item is a @code{readymedia-media-directory}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45393
#, fuzzy, no-wrap
msgid "@code{cache-directory} (default: @code{\"/var/cache/readymedia\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45397
msgid "A folder for ReadyMedia's cache files.  If not existing already, the folder will be created as part of the service activation and the ReadyMedia user will be assigned ownership."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45398
#, fuzzy, no-wrap
msgid "@code{log-directory} (default: @code{\"/var/log/readymedia\"}) (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45402
msgid "A folder for ReadyMedia's log files.  If not existing already, the folder will be created as part of the service activation and the ReadyMedia user will be assigned ownership."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45403
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{port} (default: @code{#f}) (type: maybe-integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45405
msgid "A custom port that the service will be listening on."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45406
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-config} (default: @code{'()}) (type: alist)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45408
msgid "An association list of further options, as accepted by ReadyMedia."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45416
#, no-wrap
msgid "{Data Type} readymedia-media-directory"
msgstr "{Tipo de dados} readymedia-media-directory"

#. type: deftp
#: guix-git/doc/guix.texi:45420
msgid "A @code{media-directories} entry includes a folder @code{path} and, optionally, the @code{types} of media files included within the folder."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45422
#, fuzzy, no-wrap
msgid "@code{path} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45424
#, fuzzy
#| msgid "Log Rotation"
msgid "The media folder location."
msgstr "Rotação de log"

#. type: item
#: guix-git/doc/guix.texi:45425
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{types} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45430
msgid "A list indicating the types of file included in the media folder.  Valid values are combinations of individual media types, i.e. symbol @code{A} for audio, @code{P} for pictures, @code{V} for video.  An empty list means that no type is specified."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45439
#, fuzzy, no-wrap
#| msgid "Setuid Programs"
msgid "privileged programs"
msgstr "Programas setuid"

#. type: cindex
#: guix-git/doc/guix.texi:45440
#, no-wrap
msgid "setuid programs"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45441
#, fuzzy, no-wrap
#| msgid "Setuid Programs"
msgid "setgid programs"
msgstr "Programas setuid"

#. type: cindex
#: guix-git/doc/guix.texi:45442
#, no-wrap
msgid "capabilities, POSIX"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45443
#, no-wrap
msgid "setcap"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45453
msgid "Some programs need to run with elevated privileges, even when they are launched by unprivileged users.  A notorious example is the @command{passwd} program, which users can run to change their password, and which needs to access the @file{/etc/passwd} and @file{/etc/shadow} files---something normally restricted to root, for obvious security reasons.  To address that, @command{passwd} should be @dfn{setuid-root}, meaning that it always runs with root privileges (@pxref{How Change Persona,,, libc, The GNU C Library Reference Manual}, for more info about the setuid mechanism)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45460
msgid "The store itself @emph{cannot} contain privileged programs: that would be a security issue since any user on the system can write derivations that populate the store (@pxref{The Store}).  Thus, a different mechanism is used: instead of directly granting permissions to files that are in the store, we let the system administrator @emph{declare} which programs should be entrusted with these additional privileges."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45467
msgid "The @code{privileged-programs} field of an @code{operating-system} declaration contains a list of @code{<privileged-program>} denoting the names of programs to have a setuid or setgid bit set (@pxref{Using the Configuration System}).  For instance, the @command{mount.nfs} program, which is part of the nfs-utils package, with a setuid root can be designated like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45472
#, no-wrap
msgid ""
"(privileged-program\n"
"  (program (file-append nfs-utils \"/sbin/mount.nfs\"))\n"
"  (setuid? #t))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45477
msgid "And then, to make @command{mount.nfs} setuid on your system, add the previous example to your operating system declaration by appending it to @code{%default-privileged-programs} like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45486
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; Some fields omitted...\n"
"  (privileged-programs\n"
"    (append (list (privileged-program\n"
"                    (program (file-append nfs-utils \"/sbin/mount.nfs\"))\n"
"                    (setuid? #t)))\n"
"            %default-privileged-programs)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45488
#, no-wrap
msgid "{Data Type} privileged-program"
msgstr "{Tipo de dados} privileged-program"

#. type: deftp
#: guix-git/doc/guix.texi:45490
#, fuzzy
msgid "This data type represents a program with special privileges, such as setuid"
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:45494
msgid "A file-like object to which all given privileges should apply."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45495
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{setuid?} (default: @code{#f})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:45497
msgid "Whether to set user setuid bit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45498
#, fuzzy, no-wrap
#| msgid "@code{id} (default: @code{#f})"
msgid "@code{setgid?} (default: @code{#f})"
msgstr "@code{id} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45500
msgid "Whether to set group setgid bit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45501
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{user} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45504
msgid "UID (integer) or user name (string) for the user owner of the program, defaults to root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45505
#, fuzzy, no-wrap
#| msgid "@code{hangup?} (default: @code{#f})"
msgid "@code{group} (default: @code{0})"
msgstr "@code{hangup?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45508
msgid "GID (integer) group name (string) for the group owner of the program, defaults to root."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45509
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{capabilities} (default: @code{#f})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:45513
msgid "A string representing the program's POSIX capabilities, as described by the @code{cap_to_text(3)} man page from the libcap package, or @code{#f} to make no changes."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45519
msgid "A default set of privileged programs is defined by the @code{%default-privileged-programs} variable of the @code{(gnu system)} module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45520
#, fuzzy, no-wrap
msgid "{Scheme Variable} %default-privileged-programs"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:45523
msgid "A list of @code{<privileged-program>} denoting common programs with elevated privileges."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45526
msgid "The list includes commands such as @command{passwd}, @command{ping}, @command{su}, and @command{sudo}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45532
msgid "Under the hood, the actual privileged programs are created in the @file{/run/privileged/bin} directory at system activation time.  The files in this directory refer to the ``real'' binaries, which are in the store."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45536
#, no-wrap
msgid "HTTPS, certificates"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45537
#, no-wrap
msgid "X.509 certificates"
msgstr "Certificados X.509"

#. type: cindex
#: guix-git/doc/guix.texi:45538
#, no-wrap
msgid "TLS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45545
msgid "Web servers available over HTTPS (that is, HTTP over the transport-layer security mechanism, TLS) send client programs an @dfn{X.509 certificate} that the client can then use to @emph{authenticate} the server.  To do that, clients verify that the server's certificate is signed by a so-called @dfn{certificate authority} (CA).  But to verify the CA's signature, clients must have first acquired the CA's certificate."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45549
msgid "Web browsers such as GNU@tie{}IceCat include their own set of CA certificates, such that they are able to verify CA signatures out-of-the-box."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45553
msgid "However, most other programs that can talk HTTPS---@command{wget}, @command{git}, @command{w3m}, etc.---need to be told where CA certificates can be found."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45561
msgid "For users of Guix System, this is done by adding a package that provides certificates to the @code{packages} field of the @code{operating-system} declaration (@pxref{operating-system Reference}).  Guix includes one such package, @code{nss-certs}, which is a set of CA certificates provided as part of Mozilla's Network Security Services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45566
msgid "This package is part of @code{%base-packages}, so there is no need to explicitly add it.  The @file{/etc/ssl/certs} directory, which is where most applications and libraries look for certificates by default, points to the certificates installed globally."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45576
msgid "Unprivileged users, including users of Guix on a foreign distro, can also install their own certificate package in their profile.  A number of environment variables need to be defined so that applications and libraries know where to find them.  Namely, the OpenSSL library honors the @env{SSL_CERT_DIR} and @env{SSL_CERT_FILE} variables.  Some applications add their own environment variables; for instance, the Git version control system honors the certificate bundle pointed to by the @env{GIT_SSL_CAINFO} environment variable.  Thus, you would typically run something like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45582
#, no-wrap
msgid ""
"guix install nss-certs\n"
"export SSL_CERT_DIR=\"$HOME/.guix-profile/etc/ssl/certs\"\n"
"export SSL_CERT_FILE=\"$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt\"\n"
"export GIT_SSL_CAINFO=\"$SSL_CERT_FILE\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45587
msgid "As another example, R requires the @env{CURL_CA_BUNDLE} environment variable to point to a certificate bundle, so you would have to run something like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:45591
#, no-wrap
msgid ""
"guix install nss-certs\n"
"export CURL_CA_BUNDLE=\"$HOME/.guix-profile/etc/ssl/certs/ca-certificates.crt\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45595
msgid "For other applications you may want to look up the required environment variable in the relevant documentation."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45600
#, no-wrap
msgid "name service switch"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45601
#, no-wrap
msgid "NSS"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45610
msgid "The @code{(gnu system nss)} module provides bindings to the configuration file of the libc @dfn{name service switch} or @dfn{NSS} (@pxref{NSS Configuration File,,, libc, The GNU C Library Reference Manual}).  In a nutshell, the NSS is a mechanism that allows libc to be extended with new ``name'' lookup methods for system databases, which includes host names, service names, user accounts, and more (@pxref{Name Service Switch, System Databases and Name Service Switch,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45617
msgid "The NSS configuration specifies, for each system database, which lookup method is to be used, and how the various methods are chained together---for instance, under which circumstances NSS should try the next method in the list.  The NSS configuration is given in the @code{name-service-switch} field of @code{operating-system} declarations (@pxref{operating-system Reference, @code{name-service-switch}})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45618
#, no-wrap
msgid "nss-mdns"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45619
#, no-wrap
msgid ".local, host name lookup"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45624
msgid "As an example, the declaration below configures the NSS to use the @uref{https://0pointer.de/lennart/projects/nss-mdns/, @code{nss-mdns} back-end}, which supports host name lookups over multicast DNS (mDNS)  for host names ending in @code{.local}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45628
#, no-wrap
msgid ""
"(name-service-switch\n"
"   (hosts (list %files    ;first, check /etc/hosts\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45633
#, no-wrap
msgid ""
"                ;; If the above did not succeed, try\n"
"                ;; with 'mdns_minimal'.\n"
"                (name-service\n"
"                  (name \"mdns_minimal\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45639
#, no-wrap
msgid ""
"                  ;; 'mdns_minimal' is authoritative for\n"
"                  ;; '.local'.  When it returns \"not found\",\n"
"                  ;; no need to try the next methods.\n"
"                  (reaction (lookup-specification\n"
"                             (not-found => return))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45643
#, no-wrap
msgid ""
"                ;; Then fall back to DNS.\n"
"                (name-service\n"
"                  (name \"dns\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45647
#, no-wrap
msgid ""
"                ;; Finally, try with the \"full\" 'mdns'.\n"
"                (name-service\n"
"                  (name \"mdns\")))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45652
msgid "Do not worry: the @code{%mdns-host-lookup-nss} variable (see below)  contains this configuration, so you will not have to type it if all you want is to have @code{.local} host lookup working."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45660
msgid "Note that, in this case, in addition to setting the @code{name-service-switch} of the @code{operating-system} declaration, you also need to use @code{avahi-service-type} (@pxref{Networking Services, @code{avahi-service-type}}), or @code{%desktop-services}, which includes it (@pxref{Desktop Services}).  Doing this makes @code{nss-mdns} accessible to the name service cache daemon (@pxref{Base Services, @code{nscd-service}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45663
msgid "For convenience, the following variables provide typical NSS configurations."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45664
#, no-wrap
msgid "%default-nss"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45667
msgid "This is the default name service switch configuration, a @code{name-service-switch} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45669
#, no-wrap
msgid "%mdns-host-lookup-nss"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45672
msgid "This is the name service switch configuration with support for host name lookup over multicast DNS (mDNS) for host names ending in @code{.local}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45682
msgid "The reference for name service switch configuration is given below.  It is a direct mapping of the configuration file format of the C library , so please refer to the C library manual for more information (@pxref{NSS Configuration File,,, libc, The GNU C Library Reference Manual}).  Compared to the configuration file format of libc NSS, it has the advantage not only of adding this warm parenthetic feel that we like, but also static checks: you will know about syntax errors and typos as soon as you run @command{guix system}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45683
#, no-wrap
msgid "{Data Type} name-service-switch"
msgstr "{Tipo de dados} name-service-switch"

#. type: deftp
#: guix-git/doc/guix.texi:45688
msgid "This is the data type representation the configuration of libc's name service switch (NSS).  Each field below represents one of the supported system databases."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45690
#, no-wrap
msgid "aliases"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45691
#, no-wrap
msgid "ethers"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45693
#, no-wrap
msgid "gshadow"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45694
#, no-wrap
msgid "hosts"
msgstr "hosts"

#. type: itemx
#: guix-git/doc/guix.texi:45695
#, no-wrap
msgid "initgroups"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45696
#, no-wrap
msgid "netgroup"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45697
#, no-wrap
msgid "networks"
msgstr "networks"

#. type: itemx
#: guix-git/doc/guix.texi:45700
#, no-wrap
msgid "rpc"
msgstr ""

#. type: itemx
#: guix-git/doc/guix.texi:45702
#, no-wrap
msgid "shadow"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45705
msgid "The system databases handled by the NSS@.  Each of these fields must be a list of @code{<name-service>} objects (see below)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45708
#, no-wrap
msgid "{Data Type} name-service"
msgstr "{Tipo de dados} name-service"

#. type: deftp
#: guix-git/doc/guix.texi:45712
msgid "This is the data type representing an actual name service and the associated lookup action."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45717
msgid "A string denoting the name service (@pxref{Services in the NSS configuration,,, libc, The GNU C Library Reference Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45722
msgid "Note that name services listed here must be visible to nscd.  This is achieved by passing the @code{#:name-services} argument to @code{nscd-service} the list of packages providing the needed name services (@pxref{Base Services, @code{nscd-service}})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45723
#, no-wrap
msgid "reaction"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45727
msgid "An action specified using the @code{lookup-specification} macro (@pxref{Actions in the NSS configuration,,, libc, The GNU C Library Reference Manual}).  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45731
#, no-wrap
msgid ""
"(lookup-specification (unavailable => continue)\n"
"                      (success => return))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45745
msgid "For bootstrapping purposes, the Linux-Libre kernel is passed an @dfn{initial RAM disk}, or @dfn{initrd}.  An initrd contains a temporary root file system as well as an initialization script.  The latter is responsible for mounting the real root file system, and for loading any kernel modules that may be needed to achieve that."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45754
msgid "The @code{initrd-modules} field of an @code{operating-system} declaration allows you to specify Linux-libre kernel modules that must be available in the initrd.  In particular, this is where you would list modules needed to actually drive the hard disk where your root partition is---although the default value of @code{initrd-modules} should cover most use cases.  For example, assuming you need the @code{megaraid_sas} module in addition to the default modules to be able to access your root file system, you would write:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45759
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; @dots{}\n"
"  (initrd-modules (cons \"megaraid_sas\" %base-initrd-modules)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45761
#, no-wrap
msgid "%base-initrd-modules"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:45763
msgid "This is the list of kernel modules included in the initrd by default."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45771
msgid "Furthermore, if you need lower-level customization, the @code{initrd} field of an @code{operating-system} declaration allows you to specify which initrd you would like to use.  The @code{(gnu system linux-initrd)} module provides three ways to build an initrd: the high-level @code{base-initrd} procedure and the low-level @code{raw-initrd} and @code{expression->initrd} procedures."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45776
msgid "The @code{base-initrd} procedure is intended to cover most common uses.  For example, if you want to add a bunch of kernel modules to be loaded at boot time, you can define the @code{initrd} field of the operating system declaration like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:45784
#, no-wrap
msgid ""
"(initrd (lambda (file-systems . rest)\n"
"          ;; Create a standard initrd but set up networking\n"
"          ;; with the parameters QEMU expects by default.\n"
"          (apply base-initrd file-systems\n"
"                 #:qemu-networking? #t\n"
"                 rest)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45789
msgid "The @code{base-initrd} procedure also handles common use cases that involves using the system as a QEMU guest, or as a ``live'' system with volatile root file system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45796
msgid "The @code{base-initrd} procedure is built from @code{raw-initrd} procedure.  Unlike @code{base-initrd}, @code{raw-initrd} doesn't do anything high-level, such as trying to guess which kernel modules and packages should be included to the initrd.  An example use of @code{raw-initrd} is when a user has a custom Linux kernel configuration and default kernel modules included by @code{base-initrd} are not available."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45801
msgid "The initial RAM disk produced by @code{base-initrd} or @code{raw-initrd} honors several options passed on the Linux kernel command line (that is, arguments passed @i{via} the @code{linux} command of GRUB, or the @code{-append} option of QEMU), notably:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45803
#, fuzzy, no-wrap
#| msgid "--load=@var{file}"
msgid "gnu.load=@var{boot}"
msgstr "--load=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:45806
msgid "Tell the initial RAM disk to load @var{boot}, a file containing a Scheme program, once it has mounted the root file system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45810
msgid "Guix uses this option to yield control to a boot program that runs the service activation programs and then spawns the GNU@tie{}Shepherd, the initialization system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45811
#, fuzzy, no-wrap
#| msgid "--root=@var{file}"
msgid "root=@var{root}"
msgstr "--root=@var{arquivo}"

#. type: table
#: guix-git/doc/guix.texi:45816
msgid "Mount @var{root} as the root file system.  @var{root} can be a device name like @code{/dev/sda1}, a file system label, or a file system UUID.  When unspecified, the device name from the root file system of the operating system declaration is used."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45817
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "rootfstype=@var{type}"
msgstr "-t @var{tipo}"

#. type: table
#: guix-git/doc/guix.texi:45821
msgid "Set the type of the root file system.  It overrides the @code{type} field of the root file system specified via the @code{operating-system} declaration, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45822
#, fuzzy, no-wrap
#| msgid "guix package @var{options}\n"
msgid "rootflags=@var{options}"
msgstr "rootflags=@var{options}"

#. type: table
#: guix-git/doc/guix.texi:45826
msgid "Set the mount @emph{options} of the root file system.  It overrides the @code{options} field of the root file system specified via the @code{operating-system} declaration, if any."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45827
#, no-wrap
msgid "fsck.mode=@var{mode}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45833
msgid "Whether to check the @var{root} file system for errors before mounting it.  @var{mode} is one of @code{skip} (never check), @code{force} (always check), or @code{auto} to respect the root @code{<file-system>} object's @code{check?} setting (@pxref{File Systems}) and run a full scan only if the file system was not cleanly shut down."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45836
msgid "@code{auto} is the default if this option is not present or if @var{mode} is not one of the above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45837
#, no-wrap
msgid "fsck.repair=@var{level}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45842
msgid "The level of repairs to perform automatically if errors are found in the @var{root} file system.  @var{level} is one of @code{no} (do not write to @var{root} at all if possible), @code{yes} (repair as much as possible), or @code{preen} to repair problems considered safe to repair automatically."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45845
msgid "@code{preen} is the default if this option is not present or if @var{level} is not one of the above."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45846
#, fuzzy, no-wrap
#| msgid "-s @var{system}"
msgid "gnu.system=@var{system}"
msgstr "-s @var{sistema}"

#. type: table
#: guix-git/doc/guix.texi:45849
msgid "Have @file{/run/booted-system} and @file{/run/current-system} point to @var{system}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45850
#, no-wrap
msgid "modprobe.blacklist=@var{modules}@dots{}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45851
#, no-wrap
msgid "module, black-listing"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45852
#, no-wrap
msgid "black list, of kernel modules"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45857
msgid "Instruct the initial RAM disk as well as the @command{modprobe} command (from the kmod package) to refuse to load @var{modules}.  @var{modules} must be a comma-separated list of module names---e.g., @code{usbkbd,9pnet}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:45858
#, no-wrap
msgid "gnu.repl"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45864
msgid "Start a read-eval-print loop (REPL) from the initial RAM disk before it tries to load kernel modules and to mount the root file system.  Our marketing team calls it @dfn{boot-to-Guile}.  The Schemer in you will love it.  @xref{Using Guile Interactively,,, guile, GNU Guile Reference Manual}, for more information on Guile's REPL."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45870
msgid "Now that you know all the features that initial RAM disks produced by @code{base-initrd} and @code{raw-initrd} provide, here is how to use it and customize it further."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45873
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "{Procedure} raw-initrd file-systems @"
msgstr "--list-transitive"

#. type: deffn
#: guix-git/doc/guix.texi:45889
msgid "[#:linux-modules '()] [#:pre-mount #t] [#:mapped-devices '()] @ [#:keyboard-layout #f] [#:helper-packages '()] @ [#:qemu-networking? #f] [#:volatile-root? #f] Return a derivation that builds a raw initrd.  @var{file-systems} is a list of file systems to be mounted by the initrd, possibly in addition to the root file system specified on the kernel command line via @option{root}.  @var{linux-modules} is a list of kernel modules to be loaded at boot time.  @var{mapped-devices} is a list of device mappings to realize before @var{file-systems} are mounted (@pxref{Mapped Devices}).  @var{pre-mount} is a G-expression to evaluate before realizing @var{mapped-devices}.  @var{helper-packages} is a list of packages to be copied in the initrd.  It may include @code{e2fsck/static} or other packages needed by the initrd to check the root file system."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45895 guix-git/doc/guix.texi:45919
msgid "When true, @var{keyboard-layout} is a @code{<keyboard-layout>} record denoting the desired console keyboard layout.  This is done before @var{mapped-devices} are set up and before @var{file-systems} are mounted such that, should the user need to enter a passphrase or use the REPL, this happens using the intended keyboard layout."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45899
msgid "When @var{qemu-networking?} is true, set up networking with the standard QEMU parameters.  When @var{virtio?} is true, load additional modules so that the initrd can be used as a QEMU guest with para-virtualized I/O drivers."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45902
msgid "When @var{volatile-root?} is true, the root file system is writable but any changes to it are lost."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45904
#, fuzzy, no-wrap
#| msgid "--list-transitive"
msgid "{Procedure} base-initrd file-systems @"
msgstr "--list-transitive"

#. type: deffn
#: guix-git/doc/guix.texi:45913
msgid "[#:mapped-devices '()] [#:keyboard-layout #f] @ [#:qemu-networking? #f] [#:volatile-root? #f] @ [#:linux-modules '()] Return as a file-like object a generic initrd, with kernel modules taken from @var{linux}.  @var{file-systems} is a list of file-systems to be mounted by the initrd, possibly in addition to the root file system specified on the kernel command line via @option{root}.  @var{mapped-devices} is a list of device mappings to realize before @var{file-systems} are mounted."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45921
msgid "@var{qemu-networking?} and @var{volatile-root?} behaves as in @code{raw-initrd}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45926
msgid "The initrd is automatically populated with all the kernel modules necessary for @var{file-systems} and for the given options.  Additional kernel modules can be listed in @var{linux-modules}.  They will be added to the initrd, and loaded at boot time in the order in which they appear."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45933
msgid "Needless to say, the initrds we produce and use embed a statically-linked Guile, and the initialization program is a Guile program.  That gives a lot of flexibility.  The @code{expression->initrd} procedure builds such an initrd, given the program to run in that initrd."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45934
#, no-wrap
msgid "{Procedure} expression->initrd exp @"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:45940
msgid "[#:guile %guile-static-initrd] [#:name \"guile-initrd\"] Return as a file-like object a Linux initrd (a gzipped cpio archive)  containing @var{guile} and that evaluates @var{exp}, a G-expression, upon booting.  All the derivations referenced by @var{exp} are automatically copied to the initrd."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45946
#, no-wrap
msgid "boot loader"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45953
msgid "The operating system supports multiple bootloaders.  The bootloader is configured using @code{bootloader-configuration} declaration.  All the fields of this structure are bootloader agnostic except for one field, @code{bootloader} that indicates the bootloader to be configured and installed."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:45958
msgid "Some of the bootloaders do not honor every field of @code{bootloader-configuration}.  For instance, the extlinux bootloader does not support themes and thus ignores the @code{theme} field."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:45959
#, no-wrap
msgid "{Data Type} bootloader-configuration"
msgstr "{Tipo de dados} bootloader-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:45961
msgid "The type of a bootloader configuration declaration."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45965
#, no-wrap
msgid "EFI, bootloader"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45966
#, no-wrap
msgid "UEFI, bootloader"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45967
#, no-wrap
msgid "BIOS, bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45973
msgid "The bootloader to use, as a @code{bootloader} object.  For now @code{grub-bootloader}, @code{grub-efi-bootloader}, @code{grub-efi-removable-bootloader}, @code{grub-efi-netboot-bootloader}, @code{grub-efi-netboot-removable-bootloader}, @code{extlinux-bootloader} and @code{u-boot-bootloader} are supported."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45974
#, no-wrap
msgid "ARM, bootloaders"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:45975
#, no-wrap
msgid "AArch64, bootloaders"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45980
msgid "Available bootloaders are described in @code{(gnu bootloader @dots{})} modules.  In particular, @code{(gnu bootloader u-boot)} contains definitions of bootloaders for a wide range of ARM and AArch64 systems, using the @uref{https://www.denx.de/wiki/U-Boot/, U-Boot bootloader}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45984
msgid "@code{grub-bootloader} allows you to boot in particular Intel-based machines in ``legacy'' BIOS mode."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45990
msgid "@code{grub-efi-bootloader} allows to boot on modern systems using the @dfn{Unified Extensible Firmware Interface} (UEFI).  This is what you should use if the installation image contains a @file{/sys/firmware/efi} directory when you boot it on your system."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:45991
#, no-wrap
msgid "grub-efi-removable-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:45998
msgid "@code{grub-efi-removable-bootloader} allows you to boot your system from removable media by writing the GRUB file to the UEFI-specification location of @file{/EFI/BOOT/BOOTX64.efi} of the boot directory, usually @file{/boot/efi}.  This is also useful for some UEFI firmwares that ``forget'' their configuration from their non-volatile storage. Like @code{grub-efi-bootloader}, this can only be used if the @file{/sys/firmware/efi} directory is available."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46003 guix-git/doc/guix.texi:46077
msgid "This @emph{will} overwrite the GRUB file from any other operating systems that also place their GRUB file in the UEFI-specification location; making them unbootable."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:46005
#, no-wrap
msgid "grub-efi-netboot-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46009
msgid "@code{grub-efi-netboot-bootloader} allows you to boot your system over network through TFTP@.  In combination with an NFS root file system this allows you to build a diskless Guix system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46016
msgid "The installation of the @code{grub-efi-netboot-bootloader} generates the content of the TFTP root directory at @code{targets} (@pxref{Bootloader Configuration, @code{targets}}) below the sub-directory @file{efi/Guix}, to be served by a TFTP server.  You may want to mount your TFTP server directories onto the @code{targets} to move the required files to the TFTP server automatically during installation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46025
msgid "If you plan to use an NFS root file system as well (actually if you mount the store from an NFS share), then the TFTP server needs to serve the file @file{/boot/grub/grub.cfg} and other files from the store (like GRUBs background image, the kernel (@pxref{operating-system Reference, @code{kernel}}) and the initrd (@pxref{operating-system Reference, @code{initrd}})), too.  All these files from the store will be accessed by GRUB through TFTP with their normal store path, for example as @file{tftp://tftp-server/gnu/store/…-initrd/initrd.cpio.gz}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46034
msgid "Two symlinks are created to make this possible.  For each target in the @code{targets} field, the first symlink is @samp{target}@file{/efi/Guix/boot/grub/grub.cfg} pointing to @file{../../../boot/grub/grub.cfg}, where @samp{target} may be @file{/boot}.  In this case the link is not leaving the served TFTP root directory, but otherwise it does.  The second link is @samp{target}@file{/gnu/store} and points to @file{../gnu/store}.  This link is leaving the served TFTP root directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46040
msgid "The assumption behind all this is that you have an NFS server exporting the root file system for your Guix system, and additionally a TFTP server exporting your @code{targets} directories—usually a single @file{/boot}—from that same root file system for your Guix system.  In this constellation the symlinks will work."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46045
msgid "For other constellations you will have to program your own bootloader installer, which then takes care to make necessary files from the store accessible through TFTP, for example by copying them into the TFTP root directory for your @code{targets}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46051
msgid "It is important to note that symlinks pointing outside the TFTP root directory may need to be allowed in the configuration of your TFTP server.  Further the store link exposes the whole store through TFTP@.  Both points need to be considered carefully for security aspects.  It is advised to disable any TFTP write access!"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46054
msgid "Please note, that this bootloader will not modify the ‘UEFI Boot Manager’ of the system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46059
msgid "Beside the @code{grub-efi-netboot-bootloader}, the already mentioned TFTP and NFS servers, you also need a properly configured DHCP server to make the booting over netboot possible.  For all this we can currently only recommend you to look for instructions about @acronym{PXE, Preboot eXecution Environment}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46066
msgid "If a local EFI System Partition (ESP) or a similar partition with a FAT file system is mounted in @code{targets}, then symlinks cannot be created.  In this case everything will be prepared for booting from local storage, matching the behavior of @code{grub-efi-bootloader}, with the difference that all GRUB binaries are copied to @code{targets}, necessary for booting over the network."
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:46067
#, no-wrap
msgid "grub-efi-netboot-removable-bootloader"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46072
msgid "@code{grub-efi-netboot-removable-bootloader} is identical to @code{grub-efi-netboot-bootloader} with the exception that the sub-directory @file{efi/boot} will be used instead of @file{efi/Guix} to comply with the UEFI specification for removable media."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46082
msgid "This is a list of strings denoting the targets onto which to install the bootloader."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46093
msgid "The interpretation of targets depends on the bootloader in question.  For @code{grub-bootloader}, for example, they should be device names understood by the bootloader @command{installer} command, such as @code{/dev/sda} or @code{(hd0)} (@pxref{Invoking grub-install,,, grub, GNU GRUB Manual}).  For @code{grub-efi-bootloader} and @code{grub-efi-removable-bootloader} they should be mount points of the EFI file system, usually @file{/boot/efi}.  For @code{grub-efi-netboot-bootloader}, @code{targets} should be the mount points corresponding to TFTP root directories served by your TFTP server."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46094
#, fuzzy, no-wrap
msgid "@code{menu-entries} (default: @code{'()})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:46098
msgid "A possibly empty list of @code{menu-entry} objects (see below), denoting entries to appear in the bootloader menu, in addition to the current system entry and the entry pointing to previous system generations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46099
#, no-wrap
msgid "@code{default-entry} (default: @code{0})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46102
msgid "The index of the default boot menu entry.  Index 0 is for the entry of the current system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46103
#, no-wrap
msgid "@code{timeout} (default: @code{5})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46106
msgid "The number of seconds to wait for keyboard input before booting.  Set to 0 to boot immediately, and to -1 to wait indefinitely."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46107
#, no-wrap
msgid "keyboard layout, for the bootloader"
msgstr "disposição do teclado, para o carregador de inicialização"

#. type: table
#: guix-git/doc/guix.texi:46111
msgid "If this is @code{#f}, the bootloader's menu (if any) uses the default keyboard layout, usually US@tie{}English (``qwerty'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46114
msgid "Otherwise, this must be a @code{keyboard-layout} object (@pxref{Keyboard Layout})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46118
msgid "This option is currently ignored by bootloaders other than @code{grub} and @code{grub-efi}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46120
#, no-wrap
msgid "@code{theme} (default: @var{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46124
msgid "The bootloader theme object describing the theme to use.  If no theme is provided, some bootloaders might use a default theme, that's true for GRUB."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46125
#, no-wrap
msgid "@code{terminal-outputs} (default: @code{'(gfxterm)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46132
msgid "The output terminals used for the bootloader boot menu, as a list of symbols.  GRUB accepts the values: @code{console}, @code{serial}, @code{serial_@{0-3@}}, @code{gfxterm}, @code{vga_text}, @code{mda_text}, @code{morse}, and @code{pkmodem}.  This field corresponds to the GRUB variable @code{GRUB_TERMINAL_OUTPUT} (@pxref{Simple configuration,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46133
#, no-wrap
msgid "@code{terminal-inputs} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46141
msgid "The input terminals used for the bootloader boot menu, as a list of symbols.  For GRUB, the default is the native platform terminal as determined at run-time.  GRUB accepts the values: @code{console}, @code{serial}, @code{serial_@{0-3@}}, @code{at_keyboard}, and @code{usb_keyboard}.  This field corresponds to the GRUB variable @code{GRUB_TERMINAL_INPUT} (@pxref{Simple configuration,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46142
#, no-wrap
msgid "@code{serial-unit} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46146
msgid "The serial unit used by the bootloader, as an integer from 0 to 3.  For GRUB, it is chosen at run-time; currently GRUB chooses 0, which corresponds to COM1 (@pxref{Serial terminal,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46147
#, no-wrap
msgid "@code{serial-speed} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46151
msgid "The speed of the serial interface, as an integer.  For GRUB, the default value is chosen at run-time; currently GRUB chooses 9600@tie{}bps (@pxref{Serial terminal,,, grub,GNU GRUB manual})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46152
#, fuzzy, no-wrap
#| msgid "@code{device} (default: @code{#f})"
msgid "@code{device-tree-support?} (default: @code{#t})"
msgstr "@code{device} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:46155
msgid "Whether to support Linux @uref{https://en.wikipedia.org/wiki/Devicetree, device tree} files loading."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46160
msgid "This option in enabled by default.  In some cases involving the @code{u-boot} bootloader, where the device tree has already been loaded in RAM, it can be handy to disable the option by setting it to @code{#f}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46161
#, fuzzy, no-wrap
#| msgid "@code{extend} (default: @code{#f})"
msgid "@code{extra-initrd} (default: @code{#f})"
msgstr "@code{extend} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:46165
msgid "File name of an additional initrd to load during the boot.  It may or may not point to a file in the store, but the main use case is for out-of-store files containing secrets."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46173
msgid "In order to be able to provide decryption keys for the LUKS device, they need to be available in the initial ram disk.  However they cannot be stored inside the usual initrd, since it is stored in the store and being a world-readable (as files in the store are) is not a desired property for a initrd containing decryption keys.  You can therefore use this field to instruct GRUB to also load a manually created initrd not stored in the store."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46176
msgid "For any use case not involving secrets, you should use regular initrd (@pxref{operating-system Reference, @code{initrd}}) instead."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46178
msgid "Suitable image can be created for example like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46182
#, no-wrap
msgid ""
"echo /key-file.bin | cpio -oH newc >/key-file.cpio\n"
"chmod 0000 /key-file.cpio\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46185
msgid "After it is created, you can use it in this manner:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46202
#, no-wrap
msgid ""
";; Operating system with encrypted boot partition\n"
"(operating-system\n"
"  ...\n"
"  (bootloader (bootloader-configuration\n"
"               (bootloader grub-efi-bootloader)\n"
"               (targets '(\"/boot/efi\"))\n"
"               ;; Load the initrd with a key file\n"
"               (extra-initrd \"/key-file.cpio\")))\n"
"  (mapped-devices\n"
"   (list (mapped-device\n"
"          (source (uuid \"12345678-1234-1234-1234-123456789abc\"))\n"
"          (target \"my-root\")\n"
"          (type (luks-device-mapping-with-options\n"
"                 ;; And use it to unlock the root device\n"
"                 #:key-file \"/key-file.bin\"))))))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46207
msgid "Be careful when using this option, since pointing to a file that is not readable by the grub while booting will cause the boot to fail and require a manual edit of the initrd line in the grub menu."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46209
msgid "Currently only supported by GRUB."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46213
#, no-wrap
msgid "dual boot"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46214
#, no-wrap
msgid "boot menu"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46220
msgid "Should you want to list additional boot menu entries @i{via} the @code{menu-entries} field above, you will need to create them with the @code{menu-entry} form.  For example, imagine you want to be able to boot another distro (hard to imagine!), you can define a menu entry along these lines:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46227
#, no-wrap
msgid ""
"(menu-entry\n"
"  (label \"The Other Distro\")\n"
"  (linux \"/boot/old/vmlinux-2.6.32\")\n"
"  (linux-arguments '(\"root=/dev/sda2\"))\n"
"  (initrd \"/boot/old/initrd\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46230
msgid "Details below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46231
#, no-wrap
msgid "{Data Type} menu-entry"
msgstr "{Tipo de dados} menu-entry"

#. type: deftp
#: guix-git/doc/guix.texi:46233
msgid "The type of an entry in the bootloader menu."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46238
msgid "The label to show in the menu---e.g., @code{\"GNU\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46239
#, no-wrap
msgid "@code{linux} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46241
msgid "The Linux kernel image to boot, for example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46244
#, no-wrap
msgid "(file-append linux-libre \"/bzImage\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46249
msgid "For GRUB, it is also possible to specify a device explicitly in the file path using GRUB's device naming convention (@pxref{Naming convention,,, grub, GNU GRUB manual}), for example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46252
#, no-wrap
msgid "\"(hd0,msdos1)/boot/vmlinuz\"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46256
msgid "If the device is specified explicitly as above, then the @code{device} field is ignored entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46257
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{linux-arguments} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:46260
msgid "The list of extra Linux kernel command-line arguments---e.g., @code{'(\"console=ttyS0\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46261
#, no-wrap
msgid "@code{initrd} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46264
msgid "A G-Expression or string denoting the file name of the initial RAM disk to use (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46268
msgid "The device where the kernel and initrd are to be found---i.e., for GRUB, @dfn{root} for this menu entry (@pxref{root,,, grub, GNU GRUB manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46274
msgid "This may be a file system label (a string), a file system UUID (a bytevector, @pxref{File Systems}), or @code{#f}, in which case the bootloader will search the device containing the file specified by the @code{linux} field (@pxref{search,,, grub, GNU GRUB manual}).  It must @emph{not} be an OS device name such as @file{/dev/sda1}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46275
#, no-wrap
msgid "@code{multiboot-kernel} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46279
msgid "The kernel to boot in Multiboot-mode (@pxref{multiboot,,, grub, GNU GRUB manual}).  When this field is set, a Multiboot menu-entry is generated.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46282
#, no-wrap
msgid "(file-append mach \"/boot/gnumach\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46284
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{multiboot-arguments} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:46286
msgid "The list of extra command-line arguments for the multiboot-kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46289
msgid "For example, when running in QEMU it can be useful to use a text-based console (use options @option{--nographic} @option{--serial mon:stdio}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46292
#, no-wrap
msgid "'(\"console=com0\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46298
msgid "To use the new and still experimental @uref{https://darnassus.sceen.net/~hurd-web/rump_kernel/, rumpdisk user-level disk driver} instead of GNU@tie{}Mach's in-kernel IDE driver, set @code{kernel-arguments} to:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46301
#, no-wrap
msgid "'(\"noide\")\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46304
msgid "Of course, these options can be combined:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46307
#, no-wrap
msgid "'(\"console=com0\" \"noide\")\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46309
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{multiboot-modules} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:46311
msgid "The list of commands for loading Multiboot modules.  For example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46317
#, no-wrap
msgid ""
"(list (list (file-append hurd \"/hurd/ext2fs.static\") \"ext2fs\"\n"
"             @dots{})\n"
"      (list (file-append libc \"/lib/ld.so.1\") \"exec\"\n"
"             @dots{}))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46319
#, fuzzy, no-wrap
#| msgid "@code{node} (default: @code{#f})"
msgid "@code{chain-loader} (default: @code{#f})"
msgstr "@code{node} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:46324
msgid "A string that can be accepted by @code{grub}'s @code{chainloader} directive. This has no effect if either @code{linux} or @code{multiboot-kernel} fields are specified. The following is an example of chainloading a different GNU/Linux system."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46335
#, no-wrap
msgid ""
"(bootloader\n"
" (bootloader-configuration\n"
"  ;; @dots{}\n"
"  (menu-entries\n"
"   (list\n"
"    (menu-entry\n"
"     (label \"GNU/Linux\")\n"
"     (device (uuid \"1C31-A17C\" 'fat))\n"
"     (chain-loader \"/EFI/GNULinux/grubx64.efi\"))))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46340 guix-git/doc/guix.texi:46400
#, no-wrap
msgid "HDPI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46341 guix-git/doc/guix.texi:46401
#, no-wrap
msgid "HiDPI"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46342 guix-git/doc/guix.texi:46402
#, no-wrap
msgid "resolution"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46346
msgid "For now only GRUB has theme support.  GRUB themes are created using the @code{grub-theme} form, which is not fully documented yet."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:46347
#, no-wrap
msgid "{Data Type} grub-theme"
msgstr "{Tipo de dados} grub-theme"

#. type: deftp
#: guix-git/doc/guix.texi:46349
msgid "Data type representing the configuration of the GRUB theme."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46351
#, no-wrap
msgid "@code{gfxmode} (default: @code{'(\"auto\")})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46354
msgid "The GRUB @code{gfxmode} to set (a list of screen resolution strings, @pxref{gfxmode,,, grub, GNU GRUB manual})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46357
#, no-wrap
msgid "{Procedure} grub-theme"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46361
msgid "Return the default GRUB theme used by the operating system if no @code{theme} field is specified in @code{bootloader-configuration} record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:46364
msgid "It comes with a fancy background image displaying the GNU and Guix logos."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46368
msgid "For example, to override the default resolution, you may use something like"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:46376
#, no-wrap
msgid ""
"(bootloader\n"
" (bootloader-configuration\n"
" ;; @dots{}\n"
" (theme (grub-theme\n"
"         (inherit (grub-theme))\n"
"         (gfxmode '(\"1024x786x32\" \"auto\"))))))\n"
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:46379
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix size}"
msgid "Invoking @command{guix system}"
msgstr "Invocando @command{guix size}"

#. type: command{#1}
#: guix-git/doc/guix.texi:46381
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "guix system"
msgstr "guix system vm"

#. type: Plain text
#: guix-git/doc/guix.texi:46385
msgid "Once you have written an operating system declaration as seen in the previous section, it can be @dfn{instantiated} using the @command{guix system} command.  The synopsis is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46388
#, no-wrap
msgid "guix system @var{options}@dots{} @var{action} @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46394
msgid "@var{file} must be the name of a file containing an @code{operating-system} declaration.  @var{action} specifies how the operating system is instantiated.  Currently the following values are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46396 guix-git/doc/guix.texi:52375
#, no-wrap
msgid "search"
msgstr "search"

#. type: table
#: guix-git/doc/guix.texi:46399
msgid "Display available service type definitions that match the given regular expressions, sorted by relevance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46421
#, no-wrap
msgid ""
"$ guix system search console\n"
"name: console-fonts\n"
"location: gnu/services/base.scm:806:2\n"
"extends: shepherd-root\n"
"description: Install the given fonts on the specified ttys (fonts are per\n"
"+ virtual console on GNU/Linux).  The value of this service is a list of\n"
"+ tty/font pairs.  The font can be the name of a font provided by the `kbd'\n"
"+ package or any valid argument to `setfont', as in this example:\n"
"+\n"
"+      '((\"tty1\" . \"LatGrkCyr-8x16\")\n"
"+        (\"tty2\" . (file-append\n"
"+                      font-tamzen\n"
"+                      \"/share/kbd/consolefonts/TamzenForPowerline10x20.psf\"))\n"
"+        (\"tty3\" . (file-append\n"
"+                      font-terminus\n"
"+                      \"/share/consolefonts/ter-132n\"))) ; for HDPI\n"
"relevance: 9\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46427
#, no-wrap
msgid ""
"name: mingetty\n"
"location: gnu/services/base.scm:1190:2\n"
"extends: shepherd-root\n"
"description: Provide console login using the `mingetty' program.\n"
"relevance: 2\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46434
#, no-wrap
msgid ""
"name: login\n"
"location: gnu/services/base.scm:860:2\n"
"extends: pam\n"
"description: Provide a console log-in service as specified by its\n"
"+ configuration value, a `login-configuration' object.\n"
"relevance: 2\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46436 guix-git/doc/guix.texi:52411
#, no-wrap
msgid "@dots{}\n"
msgstr "@dots{}\n"

#. type: table
#: guix-git/doc/guix.texi:46441
msgid "As for @command{guix package --search}, the result is written in @code{recutils} format, which makes it easy to filter the output (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46442 guix-git/doc/guix.texi:52460
#, no-wrap
msgid "service type definition, editing"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46443 guix-git/doc/guix.texi:52461
#, fuzzy, no-wrap
#| msgid "Adding new service definitions."
msgid "editing, service type definition"
msgstr "Adicionando novas definições de serviço."

#. type: item
#: guix-git/doc/guix.texi:46444 guix-git/doc/guix.texi:52462
#, no-wrap
msgid "edit"
msgstr "edit"

#. type: table
#: guix-git/doc/guix.texi:46446
msgid "Edit or view the definition of the given service types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46450
msgid "For example, the command below opens your editor, as specified by the @env{EDITOR} environment variable, on the definition of the @code{openssh} service type:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46453
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "guix system edit openssh\n"
msgstr "guix system edit openssh\n"

#. type: item
#: guix-git/doc/guix.texi:46455 guix-git/doc/guix.texi:52473
#, no-wrap
msgid "reconfigure"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46460
msgid "Build the operating system described in @var{file}, activate it, and switch to it@footnote{This action (and the related actions @code{switch-generation} and @code{roll-back}) are usable only on systems already running Guix System.}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46468
msgid "It is highly recommended to run @command{guix pull} once before you run @command{guix system reconfigure} for the first time (@pxref{Invoking guix pull}).  Failing to do that you would see an older version of Guix once @command{reconfigure} has completed."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46476
msgid "This effects all the configuration specified in @var{file}: user accounts, system services, global package list, privileged programs, etc.  The command starts system services specified in @var{file} that are not currently running; if a service is currently running this command will arrange for it to be upgraded the next time it is stopped (e.g.@: by @code{herd stop X} or @code{herd restart X})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46482
msgid "This command creates a new generation whose number is one greater than the current generation (as reported by @command{guix system list-generations}).  If that generation already exists, it will be overwritten.  This behavior mirrors that of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46487
msgid "It adds a bootloader menu entry for the new OS configuration, ---unless @option{--no-bootloader} is passed.  For GRUB, it moves entries for older configurations to a submenu, allowing you to choose an older system generation at boot time should you need it."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46488
#, no-wrap
msgid "kexec, for fast reboots"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46489
#, no-wrap
msgid "rebooting @i{via} Linux kexec"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46496
msgid "On Linux, @command{guix system reconfigure} also loads the new system for fast reboot @i{via} kexec: running @command{reboot --kexec} will boot the new system by directly executing its kernel, thus bypassing the BIOS initialization phase and bootloader (@pxref{Invoking reboot,,, shepherd, The GNU Shepherd Manual}).  You can avoid this behavior by passing the @option{--no-kexec} option."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46497 guix-git/doc/guix.texi:46859
#: guix-git/doc/guix.texi:48084
#, no-wrap
msgid "provenance tracking, of the operating system"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46502
msgid "Upon completion, the new system is deployed under @file{/run/current-system}.  This directory contains @dfn{provenance meta-data}: the list of channels in use (@pxref{Channels}) and @var{file} itself, when available.  You can view it by running:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46511
msgid "This information is useful should you later want to inspect how this particular generation was built.  In fact, assuming @var{file} is self-contained, you can later rebuild generation @var{n} of your operating system with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46517
#, no-wrap
msgid ""
"guix time-machine \\\n"
"  -C /var/guix/profiles/system-@var{n}-link/channels.scm -- \\\n"
"  system reconfigure \\\n"
"  /var/guix/profiles/system-@var{n}-link/configuration.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46523
msgid "You can think of it as some sort of built-in version control! Your system is not just a binary artifact: @emph{it carries its own source}.  @xref{Service Reference, @code{provenance-service-type}}, for more information on provenance tracking."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46529
msgid "By default, @command{reconfigure} @emph{prevents you from downgrading your system}, which could (re)introduce security vulnerabilities and also cause problems with ``stateful'' services such as database management systems.  You can override that behavior by passing @option{--allow-downgrades}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46530 guix-git/doc/guix.texi:52533
#, no-wrap
msgid "switch-generation"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46539
msgid "Switch to an existing system generation.  This action atomically switches the system profile to the specified system generation.  It also rearranges the system's existing bootloader menu entries.  It makes the menu entry for the specified system generation the default, and it moves the entries for the other generations to a submenu, if supported by the bootloader being used.  The next time the system boots, it will use the specified system generation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46543
msgid "The bootloader itself is not being reinstalled when using this command.  Thus, the installed bootloader is used with an updated configuration file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46547
msgid "The target generation can be specified explicitly by its generation number.  For example, the following invocation would switch to system generation 7:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46550
#, no-wrap
msgid "guix system switch-generation 7\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46558 guix-git/doc/guix.texi:52552
msgid "The target generation can also be specified relative to the current generation with the form @code{+N} or @code{-N}, where @code{+3} means ``3 generations ahead of the current generation,'' and @code{-1} means ``1 generation prior to the current generation.'' When specifying a negative value such as @code{-1}, you must precede it with @code{--} to prevent it from being parsed as an option.  For example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46561
#, no-wrap
msgid "guix system switch-generation -- -1\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46569
msgid "Currently, the effect of invoking this action is @emph{only} to switch the system profile to an existing generation and rearrange the bootloader menu entries.  To actually start using the target system generation, you must reboot after running this action.  In the future, it will be updated to do the same things as @command{reconfigure}, like activating and deactivating services."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46571 guix-git/doc/guix.texi:52558
msgid "This action will fail if the specified generation does not exist."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46572 guix-git/doc/guix.texi:52559
#, no-wrap
msgid "roll-back"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46578
msgid "Switch to the preceding system generation.  The next time the system boots, it will use the preceding system generation.  This is the inverse of @command{reconfigure}, and it is exactly the same as invoking @command{switch-generation} with an argument of @code{-1}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46582
msgid "Currently, as with @command{switch-generation}, you must reboot after running this action to actually start using the preceding system generation."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46583 guix-git/doc/guix.texi:52565
#, no-wrap
msgid "delete-generations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46584
#, no-wrap
msgid "deleting system generations"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46585 guix-git/doc/guix.texi:52567
#, no-wrap
msgid "saving space"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46589
msgid "Delete system generations, making them candidates for garbage collection (@pxref{Invoking guix gc}, for information on how to run the ``garbage collector'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46593
msgid "This works in the same way as @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}).  With no arguments, all system generations but the current one are deleted:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46596
#, no-wrap
msgid "guix system delete-generations\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46600
msgid "You can also select the generations you want to delete.  The example below deletes all the system generations that are more than two months old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46603
#, no-wrap
msgid "guix system delete-generations 2m\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46608
msgid "Running this command automatically reinstalls the bootloader with an updated list of menu entries---e.g., the ``old generations'' sub-menu in GRUB no longer lists the generations that have been deleted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46613
msgid "Build the derivation of the operating system, which includes all the configuration files and programs needed to boot and run the system.  This action does not actually install anything."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46614
#, no-wrap
msgid "init"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46618
msgid "Populate the given directory with all the files necessary to run the operating system specified in @var{file}.  This is useful for first-time installations of Guix System.  For instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46621
#, no-wrap
msgid "guix system init my-os-config.scm /mnt\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46628
msgid "copies to @file{/mnt} all the store items required by the configuration specified in @file{my-os-config.scm}.  This includes configuration files, packages, and so on.  It also creates other essential files needed for the system to operate correctly---e.g., the @file{/etc}, @file{/var}, and @file{/run} directories, and the @file{/bin/sh} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46632
msgid "This command also installs bootloader on the targets specified in @file{my-os-config}, unless the @option{--no-bootloader} option was passed."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46633
#, fuzzy, no-wrap
#| msgid "install"
msgid "installer"
msgstr "install"

#. type: table
#: guix-git/doc/guix.texi:46639
msgid "Run the installer.  Usually the installer is built as an @file{iso} image, copied to a USB Stick or DVD, and booted from (@ref{USB Stick and DVD Installation}).  If your machine already runs Guix and you still want to run the installer, e.g., for testing purposes, you can skip the step of creating an @file{iso} and run for instance:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46642
#, fuzzy, no-wrap
#| msgid "Guix System, installation"
msgid "guix system installer --dry-run\n"
msgstr "Guix System, instalação"

#. type: quotation
#: guix-git/doc/guix.texi:46648
msgid "If you do not use @option{--dry-run} then you need to run as root.  Be @emph{very careful} when running the installer as root, it can cause data loss or render your system unbootable!"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46650
#, no-wrap
msgid "vm"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46651 guix-git/doc/guix.texi:47445
#, no-wrap
msgid "virtual machine"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46652
#, no-wrap
msgid "VM"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:46656
msgid "guix system vm"
msgstr "guix system vm"

#. type: table
#: guix-git/doc/guix.texi:46656
msgid "Build a virtual machine (VM) that contains the operating system declared in @var{file}, and return a script to run that VM."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46664
msgid "The @code{vm} action and others below can use KVM support in the Linux-libre kernel.  Specifically, if the machine has hardware virtualization support, the corresponding KVM kernel module should be loaded, and the @file{/dev/kvm} device node must exist and be readable and writable by the user and by the build users of the daemon (@pxref{Build Environment Setup})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46669
msgid "Arguments given to the script are passed to QEMU as in the example below, which enables networking and requests 1@tie{}GiB of RAM for the emulated machine:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46672
#, no-wrap
msgid "$ /gnu/store/@dots{}-run-vm.sh -m 1024 -smp 2 -nic user,model=virtio-net-pci\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46675
msgid "It's possible to combine the two steps into one:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46678
#, no-wrap
msgid "$ $(guix system vm my-config.scm) -m 1024 -smp 2 -nic user,model=virtio-net-pci\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46681
msgid "The VM shares its store with the host system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46686
msgid "By default, the root file system of the VM is mounted volatile; the @option{--persistent} option can be provided to make it persistent instead.  In that case, the VM disk-image file will be copied from the store to the @env{TMPDIR} directory to make it writable."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46691
msgid "Additional file systems can be shared between the host and the VM using the @option{--share} and @option{--expose} command-line options: the former specifies a directory to be shared with write access, while the latter provides read-only access to the shared directory."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46695
msgid "The example below creates a VM in which the user's home directory is accessible read-only, and where the @file{/exchange} directory is a read-write mapping of @file{$HOME/tmp} on the host:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46699
#, no-wrap
msgid ""
"guix system vm my-config.scm \\\n"
"   --expose=$HOME --share=$HOME/tmp=/exchange\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46704
msgid "On GNU/Linux, the default is to boot directly to the kernel; this has the advantage of requiring only a very tiny root disk image since the store of the host can then be mounted."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46709
msgid "The @option{--full-boot} option forces a complete boot sequence, starting with the bootloader.  This requires more disk space since a root image containing at least the kernel, initrd, and bootloader data files must be created."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46712
msgid "The @option{--image-size} option can be used to specify the size of the image."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46719
msgid "The @option{--no-graphic} option will instruct @command{guix system} to spawn a headless VM that will use the invoking tty for IO.  Among other things, this enables copy-pasting, and scrollback.  Use the @kbd{ctrl-a} prefix to issue QEMU commands; e.g.@: @kbd{ctrl-a h} prints a help, @kbd{ctrl-a x} quits the VM, and @kbd{ctrl-a c} switches between the QEMU monitor and the VM."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46720
#, no-wrap
msgid "System images, creation in various formats"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46721
#, no-wrap
msgid "Creating system images in various formats"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46723
#, no-wrap
msgid "image, creating disk images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46735
msgid "The @code{image} command can produce various image types.  The image type can be selected using the @option{--image-type} option.  It defaults to @code{mbr-hybrid-raw}.  When its value is @code{iso9660}, the @option{--label} option can be used to specify a volume ID with @code{image}.  By default, the root file system of a disk image is mounted non-volatile; the @option{--volatile} option can be provided to make it volatile instead.  When using @code{image}, the bootloader installed on the generated image is taken from the provided @code{operating-system} definition.  The following example demonstrates how to generate an image that uses the @code{grub-efi-bootloader} bootloader and boot it with QEMU:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46743
#, no-wrap
msgid ""
"image=$(guix system image --image-type=qcow2 \\\n"
"        gnu/system/examples/lightweight-desktop.tmpl)\n"
"cp $image /tmp/my-image.qcow2\n"
"chmod +w /tmp/my-image.qcow2\n"
"qemu-system-x86_64 -enable-kvm -hda /tmp/my-image.qcow2 -m 1000 \\\n"
"                   -bios $(guix build ovmf-x86-64)/share/firmware/ovmf_x64.bin\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46749
msgid "When using the @code{mbr-hybrid-raw} image type, a raw disk image is produced; it can be copied as is to a USB stick, for instance.  Assuming @code{/dev/sdc} is the device corresponding to a USB stick, one can copy the image to it using the following command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46752
#, no-wrap
msgid "# dd if=$(guix system image my-os.scm) of=/dev/sdc status=progress\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46756
msgid "The @code{--list-image-types} command lists all the available image types."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46757
#, no-wrap
msgid "creating virtual machine images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46766
msgid "When using the @code{qcow2} image type, the returned image is in qcow2 format, which the QEMU emulator can efficiently use. @xref{Running Guix in a VM}, for more information on how to run the image in a virtual machine.  The @code{grub-bootloader} bootloader is always used independently of what is declared in the @code{operating-system} file passed as argument.  This is to make it easier to work with QEMU, which uses the SeaBIOS BIOS by default, expecting a bootloader to be installed in the Master Boot Record (MBR)."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46767
#, no-wrap
msgid "docker-image, creating docker images"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46773
msgid "When using the @code{docker} image type, a Docker image is produced.  Guix builds the image from scratch, not from a pre-existing Docker base image.  As a result, it contains @emph{exactly} what you define in the operating system configuration file.  You can then load the image and launch a Docker container using commands like the following:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46778
#, no-wrap
msgid ""
"image_id=\"$(docker load < guix-system-docker-image.tar.gz)\"\n"
"container_id=\"$(docker create $image_id)\"\n"
"docker start $container_id\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46785
msgid "This command starts a new Docker container from the specified image.  It will boot the Guix system in the usual manner, which means it will start any services you have defined in the operating system configuration.  You can get an interactive shell running in the container using @command{docker exec}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46788
#, no-wrap
msgid "docker exec -ti $container_id /run/current-system/profile/bin/bash --login\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46795
msgid "Depending on what you run in the Docker container, it may be necessary to give the container additional permissions.  For example, if you intend to build software using Guix inside of the Docker container, you may need to pass the @option{--privileged} option to @code{docker create}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46799
msgid "Last, the @option{--network} option applies to @command{guix system docker-image}: it produces an image where network is supposedly shared with the host, and thus without services like nscd or NetworkManager."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46807
msgid "Return a script to run the operating system declared in @var{file} within a container.  Containers are a set of lightweight isolation mechanisms provided by the kernel Linux-libre.  Containers are substantially less resource-demanding than full virtual machines since the kernel, shared objects, and other resources can be shared with the host system; this also means they provide thinner isolation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46811
msgid "Currently, the script must be run as root in order to support more than a single user and group.  The container shares its store with the host system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46815
msgid "As with the @code{vm} action (@pxref{guix system vm}), additional file systems to be shared between the host and container can be specified using the @option{--share} and @option{--expose} options:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46819
#, no-wrap
msgid ""
"guix system container my-config.scm \\\n"
"   --expose=$HOME --share=$HOME/tmp=/exchange\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46824
msgid "The @option{--share} and @option{--expose} options can also be passed to the generated script to bind-mount additional directories into the container."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46827
msgid "This option requires Linux-libre 3.19 or newer."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46834 guix-git/doc/guix.texi:52676
msgid "@var{options} can contain any of the common build options (@pxref{Common Build Options}).  In addition, @var{options} can contain one of the following:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46843
msgid "Consider the operating-system @var{expr} evaluates to.  This is an alternative to specifying a file which evaluates to an operating system.  This is used to generate the Guix system installer @pxref{Building the Installation Image})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46848
msgid "Attempt to build for @var{system} instead of the host system type.  This works as per @command{guix build} (@pxref{Invoking guix build})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46858
msgid "Return the derivation file name of the given operating system without building anything."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46867
msgid "As discussed above, @command{guix system init} and @command{guix system reconfigure} always save provenance information @i{via} a dedicated service (@pxref{Service Reference, @code{provenance-service-type}}).  However, other commands don't do that by default.  If you wish to, say, create a virtual machine image that contains provenance information, you can run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:46870
#, no-wrap
msgid "guix system image -t qcow2 --save-provenance config.scm\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46877
msgid "That way, the resulting image will effectively ``embed its own source'' in the form of meta-data in @file{/run/current-system}.  With that information, one can rebuild the image to make sure it really contains what it pretends to contain; or they could use that to derive a variant of the image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46878
#, no-wrap
msgid "--image-type=@var{type}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46881
msgid "For the @code{image} action, create an image with given @var{type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46884
msgid "When this option is omitted, @command{guix system} uses the @code{mbr-hybrid-raw} image type."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46885
#, no-wrap
msgid "ISO-9660 format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46886
#, no-wrap
msgid "CD image format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46887
#, no-wrap
msgid "DVD image format"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46890
msgid "@option{--image-type=iso9660} produces an ISO-9660 image, suitable for burning on CDs and DVDs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46891
#, no-wrap
msgid "--image-size=@var{size}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46896
msgid "For the @code{image} action, create an image of the given @var{size}.  @var{size} may be a number of bytes, or it may include a unit as a suffix (@pxref{Block size, size specifications,, coreutils, GNU Coreutils})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46900
msgid "When this option is omitted, @command{guix system} computes an estimate of the image size as a function of the size of the system declared in @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46905
msgid "For the @code{container} action, allow containers to access the host network, that is, do not create a network namespace."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46911
#, no-wrap
msgid "--skip-checks"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46913
msgid "Skip pre-installation safety checks."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46920
msgid "By default, @command{guix system init} and @command{guix system reconfigure} perform safety checks: they make sure the file systems that appear in the @code{operating-system} declaration actually exist (@pxref{File Systems}), and that any Linux kernel modules that may be needed at boot time are listed in @code{initrd-modules} (@pxref{Initial RAM Disk}).  Passing this option skips these tests altogether."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46923
msgid "Instruct @command{guix system reconfigure} to allow system downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46931
msgid "By default, @command{reconfigure} prevents you from downgrading your system.  It achieves that by comparing the provenance info of your system (shown by @command{guix system describe}) with that of your @command{guix} command (shown by @command{guix describe}).  If the commits for @command{guix} are not descendants of those used for your system, @command{guix system reconfigure} errors out.  Passing @option{--allow-downgrades} allows you to bypass these checks."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46937
#, no-wrap
msgid "on-error"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46938
#, no-wrap
msgid "on-error strategy"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:46939
#, no-wrap
msgid "error strategy"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46940
#, no-wrap
msgid "--on-error=@var{strategy}"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46943
msgid "Apply @var{strategy} when an error occurs when reading @var{file}.  @var{strategy} may be one of the following:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46945
#, no-wrap
msgid "nothing-special"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46947
msgid "Report the error concisely and exit.  This is the default strategy."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46948
#, no-wrap
msgid "backtrace"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46950
msgid "Likewise, but also display a backtrace."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46951
#, no-wrap
msgid "debug"
msgstr "debug"

#. type: table
#: guix-git/doc/guix.texi:46957
msgid "Report the error and enter Guile's debugger.  From there, you can run commands such as @code{,bt} to get a backtrace, @code{,locals} to display local variable values, and more generally inspect the state of the program.  @xref{Debug Commands,,, guile, GNU Guile Reference Manual}, for a list of available debugging commands."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:46964
msgid "Once you have built, configured, re-configured, and re-re-configured your Guix installation, you may find it useful to list the operating system generations available on disk---and that you can choose from the bootloader boot menu:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46967 guix-git/doc/guix.texi:52592
#, no-wrap
msgid "describe"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46970
msgid "Describe the running system generation: its file name, the kernel and bootloader used, etc., as well as provenance information when available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46977
msgid "The @code{--list-installed} flag is available, with the same syntax that is used in @command{guix package --list-installed} (@pxref{Invoking guix package}).  When the flag is used, the description will include a list of packages that are currently installed in the system profile, with optional filtering based on a regular expression."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46984
msgid "The @emph{running} system generation---referred to by @file{/run/current-system}---is not necessarily the @emph{current} system generation---referred to by @file{/var/guix/profiles/system}: it differs when, for instance, you chose from the bootloader menu to boot an older generation."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:46988
msgid "It can also differ from the @emph{booted} system generation---referred to by @file{/run/booted-system}---for instance because you reconfigured the system in the meantime."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:46990 guix-git/doc/guix.texi:52607
#, no-wrap
msgid "list-generations"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:46995
msgid "List a summary of each generation of the operating system available on disk, in a human-readable way.  This is similar to the @option{--list-generations} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47000 guix-git/doc/guix.texi:52617
msgid "Optionally, one can specify a pattern, with the same syntax that is used in @command{guix package --list-generations}, to restrict the list of generations displayed.  For instance, the following command displays generations that are up to 10 days old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47003
#, no-wrap
msgid "$ guix system list-generations 10d\n"
msgstr "$ guix system list-generations 10d\n"

#. type: table
#: guix-git/doc/guix.texi:47009
msgid "The @code{--list-installed} flag may also be specified, with the same syntax that is used in @command{guix package --list-installed}.  This may be helpful if trying to determine when a package was added to the system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47015
msgid "The @command{guix system} command has even more to offer! The following sub-commands allow you to visualize how your system services relate to each other:"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:47017
msgid "system-extension-graph"
msgstr "system-extension-graph"

#. type: item
#: guix-git/doc/guix.texi:47019 guix-git/doc/guix.texi:52647
#, no-wrap
msgid "extension-graph"
msgstr "extension-graph"

#. type: table
#: guix-git/doc/guix.texi:47026
msgid "Emit to standard output the @dfn{service extension graph} of the operating system defined in @var{file} (@pxref{Service Composition}, for more information on service extensions).  By default the output is in Dot/Graphviz format, but you can choose a different format with @option{--graph-backend}, as with @command{guix graph} (@pxref{Invoking guix graph, @option{--backend}}):"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47028 guix-git/doc/guix.texi:52656
msgid "The command:"
msgstr "O comando:"

#. type: example
#: guix-git/doc/guix.texi:47031
#, no-wrap
msgid "$ guix system extension-graph @var{file} | xdot -\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47034 guix-git/doc/guix.texi:52662
msgid "shows the extension relations among services."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47037
msgid "The @command{dot} program is provided by the @code{graphviz} package."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:47040
msgid "system-shepherd-graph"
msgstr "system-shepherd-graph"

#. type: item
#: guix-git/doc/guix.texi:47040 guix-git/doc/guix.texi:52664
#, no-wrap
msgid "shepherd-graph"
msgstr "shepherd-graph"

#. type: table
#: guix-git/doc/guix.texi:47045
msgid "Emit to standard output the @dfn{dependency graph} of shepherd services of the operating system defined in @var{file}.  @xref{Shepherd Services}, for more information and for an example graph."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47048 guix-git/doc/guix.texi:52671
msgid "Again, the default output format is Dot/Graphviz, but you can pass @option{--graph-backend} to select a different one."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:47052
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix repl}"
msgid "Invoking @command{guix deploy}"
msgstr "Invocando @command{guix repl}"

#. type: command{#1}
#: guix-git/doc/guix.texi:47054
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "guix deploy"
msgstr "guix deploy"

#. type: Plain text
#: guix-git/doc/guix.texi:47061
msgid "We've already seen @code{operating-system} declarations used to manage a machine's configuration locally.  Suppose you need to configure multiple machines, though---perhaps you're managing a service on the web that's comprised of several servers.  @command{guix deploy} enables you to use those same @code{operating-system} declarations to manage multiple remote hosts at once as a logical ``deployment''."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47066
msgid "The functionality described in this section is still under development and is subject to change.  Get in touch with us on @email{guix-devel@@gnu.org}!"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47070
#, no-wrap
msgid "guix deploy @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47074
msgid "Such an invocation will deploy the machines that the code within @var{file} evaluates to.  As an example, @var{file} might contain a definition like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47081
#, no-wrap
msgid ""
";; This is a Guix deployment of a \"bare bones\" setup, with\n"
";; no X11 display server, to a machine with an SSH daemon\n"
";; listening on localhost:2222. A configuration such as this\n"
";; may be appropriate for virtual machine with ports\n"
";; forwarded to the host's loopback interface.\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47084
#, no-wrap
msgid ""
"(use-service-modules networking ssh)\n"
"(use-package-modules bootloaders)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47105
#, no-wrap
msgid ""
"(define %system\n"
"  (operating-system\n"
"   (host-name \"gnu-deployed\")\n"
"   (timezone \"Etc/UTC\")\n"
"   (bootloader (bootloader-configuration\n"
"                (bootloader grub-bootloader)\n"
"                (targets '(\"/dev/vda\"))\n"
"                (terminal-outputs '(console))))\n"
"   (file-systems (cons (file-system\n"
"                        (mount-point \"/\")\n"
"                        (device \"/dev/vda1\")\n"
"                        (type \"ext4\"))\n"
"                       %base-file-systems))\n"
"   (services\n"
"    (append (list (service dhcp-client-service-type)\n"
"                  (service openssh-service-type\n"
"                           (openssh-configuration\n"
"                            (permit-root-login #t)\n"
"                            (allow-empty-passwords? #t))))\n"
"            %base-services))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47115
#, no-wrap
msgid ""
"(list (machine\n"
"       (operating-system %system)\n"
"       (environment managed-host-environment-type)\n"
"       (configuration (machine-ssh-configuration\n"
"                       (host-name \"localhost\")\n"
"                       (system \"x86_64-linux\")\n"
"                       (user \"alice\")\n"
"                       (identity \"./id_rsa\")\n"
"                       (port 2222)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47128
msgid "The file should evaluate to a list of @var{machine} objects.  This example, upon being deployed, will create a new generation on the remote system realizing the @code{operating-system} declaration @code{%system}.  @code{environment} and @code{configuration} specify how the machine should be provisioned---that is, how the computing resources should be created and managed.  The above example does not create any resources, as a @code{'managed-host} is a machine that is already running the Guix system and available over the network.  This is a particularly simple case; a more complex deployment may involve, for example, starting virtual machines through a Virtual Private Server (VPS) provider.  In such a case, a different @var{environment} type would be used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47133
msgid "Do note that you first need to generate a key pair on the coordinator machine to allow the daemon to export signed archives of files from the store (@pxref{Invoking guix archive}), though this step is automatic on Guix System:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47141
msgid "Each target machine must authorize the key of the master machine so that it accepts store items it receives from the coordinator:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47144
#, no-wrap
msgid "# guix archive --authorize < coordinator-public-key.txt\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47155
msgid "@code{user}, in this example, specifies the name of the user account to log in as to perform the deployment.  Its default value is @code{root}, but root login over SSH may be forbidden in some cases.  To work around this, @command{guix deploy} can log in as an unprivileged user and employ @code{sudo} to escalate privileges.  This will only work if @code{sudo} is currently installed on the remote and can be invoked non-interactively as @code{user}.  That is, the line in @code{sudoers} granting @code{user} the ability to use @code{sudo} must contain the @code{NOPASSWD} tag.  This can be accomplished with the following operating system configuration snippet:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47159
#, no-wrap
msgid ""
"(use-modules ...\n"
"             (gnu system))               ;for %sudoers-specification\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47161
#, no-wrap
msgid ""
"(define %user \"username\")\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47169
#, no-wrap
msgid ""
"(operating-system\n"
"  ...\n"
"  (sudoers-file\n"
"     (plain-file \"sudoers\"\n"
"                 (string-append (plain-file-content %sudoers-specification)\n"
"                                (format #f \"~a ALL = NOPASSWD: ALL~%\"\n"
"                                        %user)))))\n"
"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47174
msgid "For more information regarding the format of the @file{sudoers} file, consult @command{man sudoers}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47179
msgid "Once you've deployed a system on a set of machines, you may find it useful to run a command on all of them.  The @option{--execute} or @option{-x} option lets you do that; the example below runs @command{uname -a} on all the machines listed in the deployment file:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47182
#, no-wrap
msgid "guix deploy @var{file} -x -- uname -a\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47186
msgid "One thing you may often need to do after deployment is restart specific services on all the machines, which you can do like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47189
#, no-wrap
msgid "guix deploy @var{file} -x -- herd restart @var{service}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47193
msgid "The @command{guix deploy -x} command returns zero if and only if the command succeeded on all the machines."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47197
msgid "You may also wish to roll back configurations on machines to a previous generation.  You can do that using the @option{--roll-back} or @option{-r} option like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47200
#, fuzzy, no-wrap
#| msgid "guix package --roll-back\n"
msgid "guix deploy --roll-back @var{file}\n"
msgstr "guix package --roll-back\n"

#. type: Plain text
#: guix-git/doc/guix.texi:47206
msgid "Below are the data types you need to know about when writing a deployment file."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47207
#, no-wrap
msgid "{Data Type} machine"
msgstr "{Tipo de dados} machine"

#. type: deftp
#: guix-git/doc/guix.texi:47210
msgid "This is the data type representing a single machine in a heterogeneous Guix deployment."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47214
msgid "The object of the operating system configuration to deploy."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47215
#, no-wrap
msgid "environment"
msgstr "environment"

#. type: table
#: guix-git/doc/guix.texi:47217
msgid "An @code{environment-type} describing how the machine should be provisioned."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47218
#, no-wrap
msgid "@code{configuration} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47223
msgid "An object describing the configuration for the machine's @code{environment}.  If the @code{environment} has a default configuration, @code{#f} may be used.  If @code{#f} is used for an environment with no default configuration, however, an error will be thrown."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47226
#, no-wrap
msgid "{Data Type} machine-ssh-configuration"
msgstr "{Tipo de dados} machine-ssh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:47229
msgid "This is the data type representing the SSH client parameters for a machine with an @code{environment} of @code{managed-host-environment-type}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47232 guix-git/doc/guix.texi:47317
#, no-wrap
msgid "@code{build-locally?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47234
msgid "If false, system derivations will be built on the machine being deployed to."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47234 guix-git/doc/guix.texi:52794
#, no-wrap
msgid "system"
msgstr "system"

#. type: table
#: guix-git/doc/guix.texi:47237
msgid "The system type describing the architecture of the machine being deployed to---e.g., @code{\"x86_64-linux\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47237 guix-git/doc/guix.texi:47312
#, no-wrap
msgid "@code{authorize?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47240
msgid "If true, the coordinator's signing key will be added to the remote's ACL keyring."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47242
#, no-wrap
msgid "@code{identity} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47245
msgid "If specified, the path to the SSH private key to use to authenticate with the remote host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47246
#, no-wrap
msgid "@code{host-key} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47248
msgid "This should be the SSH host key of the machine, which looks like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47251
#, no-wrap
msgid "ssh-ed25519 AAAAC3Nz@dots{} root@@example.org\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47256
msgid "When @code{host-key} is @code{#f}, the server is authenticated against the @file{~/.ssh/known_hosts} file, just like the OpenSSH @command{ssh} client does."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47257 guix-git/doc/guix.texi:47309
#, no-wrap
msgid "@code{allow-downgrades?} (default: @code{#f})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47259 guix-git/doc/guix.texi:47311
msgid "Whether to allow potential downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47267
msgid "Like @command{guix system reconfigure}, @command{guix deploy} compares the channel commits currently deployed on the remote host (as returned by @command{guix system describe}) to those currently in use (as returned by @command{guix describe}) to determine whether commits currently in use are descendants of those deployed.  When this is not the case and @code{allow-downgrades?} is false, it raises an error.  This ensures you do not accidentally downgrade remote machines."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47268
#, fuzzy, no-wrap
#| msgid "@code{check?} (default: @code{#t})"
msgid "@code{safety-checks?} (default: @code{#t})"
msgstr "@code{check?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:47274
msgid "Whether to perform ``safety checks'' before deployment.  This includes verifying that devices and file systems referred to in the operating system configuration actually exist on the target machine, and making sure that Linux modules required to access storage devices at boot time are listed in the @code{initrd-modules} field of the operating system."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47277
msgid "These safety checks ensure that you do not inadvertently deploy a system that would fail to boot.  Be careful before turning them off!"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47280
#, no-wrap
msgid "{Data Type} digital-ocean-configuration"
msgstr "{Tipo de dados} digital-ocean-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:47283
msgid "This is the data type describing the Droplet that should be created for a machine with an @code{environment} of @code{digital-ocean-environment-type}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47285
#, no-wrap
msgid "ssh-key"
msgstr "ssh-key"

#. type: table
#: guix-git/doc/guix.texi:47288
msgid "The path to the SSH private key to use to authenticate with the remote host.  In the future, this field may not exist."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47288
#, no-wrap
msgid "tags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47291
msgid "A list of string ``tags'' that uniquely identify the machine.  Must be given such that no two machines in the deployment have the same set of tags."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47291
#, no-wrap
msgid "region"
msgstr "region"

#. type: table
#: guix-git/doc/guix.texi:47293
msgid "A Digital Ocean region slug, such as @code{\"nyc3\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47295
msgid "A Digital Ocean size slug, such as @code{\"s-1vcpu-1gb\"}"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47295
#, no-wrap
msgid "enable-ipv6?"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47297
msgid "Whether or not the droplet should be created with IPv6 networking."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47300
#, fuzzy, no-wrap
#| msgid "{Data Type} tor-configuration"
msgid "{Data Type} hetzner-configuration"
msgstr "{Tipo de dados} tor-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:47306
msgid "This is the data type describing the server that should be created for a machine with an @code{environment} of @code{hetzner-environment-type}. It allows you to configure deployment to a @acronym{VPS, virtual private server} hosted by @uref{https://www.hetzner.com, Hetzner}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47316
msgid "If true, the public signing key @code{\"/etc/guix/signing-key.pub\"} of the machine that invokes @command{guix deploy} will be added to the operating system ACL keyring of the target machine."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47325
msgid "If true, system derivations will be built on the machine that invokes @command{guix deploy}, otherwise derivations are build on the target machine.  Set this to @code{#f} if the machine you are deploying from has a different architecture than the target machine and you can't build derivations for the target architecture by other means, like offloading (@pxref{Daemon Offload Setup}) or emulation (@pxref{transparent-emulation-qemu, Transparent Emulation with QEMU})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47326
#, fuzzy, no-wrap
#| msgid "@code{remote?} (default: @code{#f})"
msgid "@code{delete?} (default: @code{#t})"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47330
msgid "If true, the server will be deleted when an error happens in the provisioning phase. If false, the server will be kept in order to debug any issues."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47331
#, fuzzy, no-wrap
#| msgid "@code{ipv4?} (default: @code{#t})"
msgid "@code{ipv4} (default: @code{#t})"
msgstr "@code{ipv4?} (default: @code{#t})"

#. type: itemx
#: guix-git/doc/guix.texi:47332
#, fuzzy, no-wrap
#| msgid "@code{ipv6?} (default: @code{#t})"
msgid "@code{ipv6} (default: @code{#t})"
msgstr "@code{ipv6?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:47336
msgid "When false, no public IP address is attached.  Specify the name of an existing primary ip to attach it to the machine.  Other values would create a new address automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47337
#, fuzzy, no-wrap
#| msgid "@code{patches} (default: @code{'()})"
msgid "@code{labels} (default: @code{'()})"
msgstr "@code{patches} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:47342
msgid "A user defined alist of key/value pairs attached to the SSH key and the server on the Hetzner API.  Keys and values must be strings, e.g. @code{'((\"environment\" . \"development\"))}.  For more information, see @uref{https://docs.hetzner.cloud/#labels, Labels}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47343
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{location} (default: @code{\"fsn1\"})"
msgstr "@code{options} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47348
msgid "The name of a @uref{https://docs.hetzner.com/cloud/general/locations, location} to create the server in.  For example, @code{\"fsn1\"} corresponds to the Hetzner site in Falkenstein, Germany, while @code{\"sin\"} corresponds to its site in Singapore."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47349
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{server-type} (default: @code{\"cx42\"})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47359
msgid "The name of the @uref{https://docs.hetzner.com/cloud/servers/overview#server-types, server type} this virtual server should be created with.  For example, @code{\"cx42\"} corresponds to a x86_64 server that has 8 VCPUs, 16 GB of memory and 160 GB of storage, while @code{\"cax31\"} to the AArch64 equivalent.  Other server types and their current prices can be found @uref{https://www.hetzner.com/cloud/#pricing, here}.  The @code{\"cpx11\"} server type is currently not supported, since its rescue system is too small to bootstrap a Guix system from."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47360
#, fuzzy, no-wrap
#| msgid "@code{key} (default: @code{#f})"
msgid "@code{ssh-key} (default: @code{#f})"
msgstr "@code{key} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47363
msgid "If specified, the file name of the SSH private key to use to authenticate with the remote host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47364
#, fuzzy, no-wrap
#| msgid "@code{dnssec-policy} (default: @code{#f})"
msgid "@code{ssh-public-key} (default: extracted from @code{ssh-key})"
msgstr "@code{dnssec-policy} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47368
msgid "If specified, either a public key as returned by @code{string->public-key} or the path to the SSH public key to use to authenticate with the remote host."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47374
msgid "When deploying a machine for the first time, the following steps are taken to provision a server for the machine on the @uref{https://www.hetzner.com/cloud, Hetzner Cloud} service:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:47379
msgid "Create the SSH key of the machine on the Hetzner API."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:47382
msgid "Create a server for the machine on the Hetzner API."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:47386
msgid "Format the root partition of the disk using the file system of the machine's operating system.  Supported file systems are btrfs and ext4."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:47392
msgid "Install a minimal Guix operating system on the server using the @uref{https://docs.hetzner.com/cloud/servers/getting-started/rescue-system, rescue mode}.  This minimal system is used to install the machine's operating system, after rebooting."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:47396
msgid "Reboot the server and apply the machine's operating system on the server."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47401
msgid "Once the server has been provisioned and SSH is available, deployment continues by delegating it to the @code{managed-host-environment-type}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47408
msgid "Servers on the Hetzner Cloud service can be provisioned on the AArch64 architecture using UEFI boot mode, or on the x86_64 architecture using BIOS boot mode.  The @code{(gnu machine hetzner)} module exports the @code{%hetzner-os-arm} and @code{%hetzner-os-x86} operating systems that are compatible with those two architectures, and can be used as a base for defining your custom operating system."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47415
msgid "The following example shows the definition of two machines that are deployed on the Hetzner Cloud service.  The first one uses the @code{%hetzner-os-arm} operating system to run a server with 16 shared vCPUs and 32 GB of RAM on the @code{aarch64} architecture, the second one uses the @code{%hetzner-os-x86} operating system on a server with 16 shared vCPUs and 32 GB of RAM on the @code{x86_64} architecture."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47419
#, fuzzy, no-wrap
#| msgid ""
#| "(use-modules (gnu packages package-management)\n"
#| "             (guix channels))\n"
#| "\n"
msgid ""
"(use-modules (gnu machine)\n"
"             (gnu machine hetzner))\n"
"\n"
msgstr ""
"(use-modules (gnu packages package-management)\n"
"             (guix channels))\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:47432
#, no-wrap
msgid ""
"(list (machine\n"
"       (operating-system %hetzner-os-arm)\n"
"       (environment hetzner-environment-type)\n"
"       (configuration (hetzner-configuration\n"
"                       (server-type \"cax41\")\n"
"                       (ssh-key \"/home/charlie/.ssh/id_rsa\"))))\n"
"      (machine\n"
"       (operating-system %hetzner-os-x86)\n"
"       (environment hetzner-environment-type)\n"
"       (configuration (hetzner-configuration\n"
"                       (server-type \"cpx51\")\n"
"                       (ssh-public-key \"/home/charlie/.ssh/id_rsa.pub\")))))\n"
msgstr ""

#. type: vindex
#: guix-git/doc/guix.texi:47434
#, no-wrap
msgid "GUIX_HETZNER_API_TOKEN"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47439
msgid "Passing this file to @command{guix deploy} with the environment variable @env{GUIX_HETZNER_API_TOKEN} set to a valid Hetzner @uref{https://docs.hetzner.com/cloud/api/getting-started/generating-api-token, API key} should provision two machines for you."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:47443
#, no-wrap
msgid "Running Guix in a Virtual Machine"
msgstr "Usando o Guix em uma Máquina Virtual"

#. type: Plain text
#: guix-git/doc/guix.texi:47451
msgid "To run Guix in a virtual machine (VM), one can use the pre-built Guix VM image distributed at @url{@value{BASE-URL}/guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2}.  This image is a compressed image in QCOW format.  You can pass it to an emulator such as @uref{https://qemu.org/, QEMU} (see below for details)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47458
msgid "This image boots the Xfce graphical environment and it contains some commonly used tools.  You can install more software in the image by running @command{guix package} in a terminal (@pxref{Invoking guix package}).  You can also reconfigure the system based on its initial configuration file available as @file{/run/current-system/configuration.scm} (@pxref{Using the Configuration System})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47461
msgid "Instead of using this pre-built image, one can also build their own image using @command{guix system image} (@pxref{Invoking guix system})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47462
#, no-wrap
msgid "QEMU"
msgstr "QEMU"

#. type: Plain text
#: guix-git/doc/guix.texi:47469
msgid "If you built your own image, you must copy it out of the store (@pxref{The Store}) and give yourself permission to write to the copy before you can use it.  When invoking QEMU, you must choose a system emulator that is suitable for your hardware platform.  Here is a minimal QEMU invocation that will boot the result of @command{guix system image -t qcow2} on x86_64 hardware:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47476
#, no-wrap
msgid ""
"$ qemu-system-x86_64 \\\n"
"   -nic user,model=virtio-net-pci \\\n"
"   -enable-kvm -m 2048 \\\n"
"   -device virtio-blk,drive=myhd \\\n"
"   -drive if=none,file=guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2,id=myhd\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47479
msgid "Here is what each of these options means:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47481
#, no-wrap
msgid "qemu-system-x86_64"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47484
msgid "This specifies the hardware platform to emulate.  This should match the host."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47485
#, no-wrap
msgid "-nic user,model=virtio-net-pci"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47493
msgid "Enable the unprivileged user-mode network stack.  The guest OS can access the host but not vice versa.  This is the simplest way to get the guest OS online.  @code{model} specifies which network device to emulate: @code{virtio-net-pci} is a special device made for virtualized operating systems and recommended for most uses.  Assuming your hardware platform is x86_64, you can get a list of available NIC models by running @command{qemu-system-x86_64 -nic model=help}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47494
#, no-wrap
msgid "-enable-kvm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47498
msgid "If your system has hardware virtualization extensions, enabling the virtual machine support (KVM) of the Linux kernel will make things run faster."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47500
#, no-wrap
msgid "-m 2048"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47503
msgid "RAM available to the guest OS, in mebibytes.  Defaults to 128@tie{}MiB, which may be insufficient for some operations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47504
#, no-wrap
msgid "-device virtio-blk,drive=myhd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47509
msgid "Create a @code{virtio-blk} drive called ``myhd''.  @code{virtio-blk} is a ``paravirtualization'' mechanism for block devices that allows QEMU to achieve better performance than if it were emulating a complete disk drive.  See the QEMU and KVM documentation for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47510
#, no-wrap
msgid "-drive if=none,file=/tmp/qemu-image,id=myhd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47514
msgid "Use our QCOW image, the @file{guix-system-vm-image-@value{VERSION}.x86_64-linux.qcow2} file, as the backing store of the ``myhd'' drive."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47524
msgid "The default @command{run-vm.sh} script that is returned by an invocation of @command{guix system vm} does not add a @command{-nic user} flag by default.  To get network access from within the vm add the @code{(dhcp-client-service)} to your system definition and start the VM using @command{$(guix system vm config.scm) -nic user}.  An important caveat of using @command{-nic user} for networking is that @command{ping} will not work, because it uses the ICMP protocol.  You'll have to use a different command to check for network connectivity, for example @command{guix download}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:47525
#, no-wrap
msgid "Connecting Through SSH"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47533
msgid "To enable SSH inside a VM you need to add an SSH server like @code{openssh-service-type} to your VM (@pxref{Networking Services, @code{openssh-service-type}}).  In addition you need to forward the SSH port, 22 by default, to the host.  You can do this with"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47536
#, no-wrap
msgid "$(guix system vm config.scm) -nic user,model=virtio-net-pci,hostfwd=tcp::10022-:22\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47539
msgid "To connect to the VM you can run"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47542
#, no-wrap
msgid "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p 10022 localhost\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47549
msgid "The @command{-p} tells @command{ssh} the port you want to connect to.  @command{-o UserKnownHostsFile=/dev/null} prevents @command{ssh} from complaining every time you modify your @command{config.scm} file and the @command{-o StrictHostKeyChecking=no} prevents you from having to allow a connection to an unknown host every time you connect."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:47555
msgid "If you find the above @samp{hostfwd} example not to be working (e.g., your SSH client hangs attempting to connect to the mapped port of your VM), make sure that your Guix System VM has networking support, such as by using the @code{dhcp-client-service-type} service type."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:47557
#, no-wrap
msgid "Using @command{virt-viewer} with Spice"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47563
msgid "As an alternative to the default @command{qemu} graphical client you can use the @command{remote-viewer} from the @command{virt-viewer} package.  To connect pass the @command{-spice port=5930,disable-ticketing} flag to @command{qemu}.  See previous section for further information on how to do this."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47566
msgid "Spice also allows you to do some nice stuff like share your clipboard with your VM@.  To enable that you'll also have to pass the following flags to @command{qemu}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47572
#, no-wrap
msgid ""
"-device virtio-serial-pci,id=virtio-serial0,max_ports=16,bus=pci.0,addr=0x5\n"
"-chardev spicevmc,name=vdagent,id=vdagent\n"
"-device virtserialport,nr=1,bus=virtio-serial0.0,chardev=vdagent,\\\n"
"name=com.redhat.spice.0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47576
msgid "You'll also need to add the @code{(spice-vdagent-service)} to your system definition (@pxref{Miscellaneous Services, Spice service})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47583
msgid "The previous sections show the available services and how one can combine them in an @code{operating-system} declaration.  But how do we define them in the first place? And what is a service anyway?"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47596
#, no-wrap
msgid "daemons"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47609
msgid "Here we define a @dfn{service} as, broadly, something that extends the functionality of the operating system.  Often a service is a process---a @dfn{daemon}---started when the system boots: a secure shell server, a Web server, the Guix build daemon, etc.  Sometimes a service is a daemon whose execution can be triggered by another daemon---e.g., an FTP server started by @command{inetd} or a D-Bus service activated by @command{dbus-daemon}.  Occasionally, a service does not map to a daemon.  For instance, the ``account'' service collects user accounts and makes sure they exist when the system runs; the ``udev'' service collects device management rules and makes them available to the eudev daemon; the @file{/etc} service populates the @file{/etc} directory of the system."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47610
#, no-wrap
msgid "service extensions"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47622
msgid "Guix system services are connected by @dfn{extensions}.  For instance, the secure shell service @emph{extends} the Shepherd---the initialization system, running as PID@tie{}1---by giving it the command lines to start and stop the secure shell daemon (@pxref{Networking Services, @code{openssh-service-type}}); the UPower service extends the D-Bus service by passing it its @file{.service} specification, and extends the udev service by passing it device management rules (@pxref{Desktop Services, @code{upower-service}}); the Guix daemon service extends the Shepherd by passing it the command lines to start and stop the daemon, and extends the account service by passing it a list of required build user accounts (@pxref{Base Services})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47626
msgid "All in all, services and their ``extends'' relations form a directed acyclic graph (DAG).  If we represent services as boxes and extensions as arrows, a typical system might provide something like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47628
msgid "@image{images/service-graph,,5in,Typical service extension graph.}"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47629
#, no-wrap
msgid "system service"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47637
msgid "At the bottom, we see the @dfn{system service}, which produces the directory containing everything to run and boot the system, as returned by the @command{guix system build} command.  @xref{Service Reference}, to learn about the other service types shown here.  @xref{system-extension-graph, the @command{guix system extension-graph} command}, for information on how to generate this representation for a particular operating system definition."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:47638
#, no-wrap
msgid "service types"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47644
msgid "Technically, developers can define @dfn{service types} to express these relations.  There can be any number of services of a given type on the system---for instance, a system running two instances of the GNU secure shell server (lsh) has two instances of @code{lsh-service-type}, with different parameters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47647
msgid "The following section describes the programming interface for service types and services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47654
msgid "A @dfn{service type} is a node in the DAG described above.  Let us start with a simple example, the service type for the Guix build daemon (@pxref{Invoking guix-daemon}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47664
#, no-wrap
msgid ""
"(define guix-service-type\n"
"  (service-type\n"
"   (name 'guix)\n"
"   (extensions\n"
"    (list (service-extension shepherd-root-service-type guix-shepherd-service)\n"
"          (service-extension account-service-type guix-accounts)\n"
"          (service-extension activation-service-type guix-activation)))\n"
"   (default-value (guix-configuration))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47668
msgid "It defines three things:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:47672
msgid "A name, whose sole purpose is to make inspection and debugging easier."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:47677
msgid "A list of @dfn{service extensions}, where each extension designates the target service type and a procedure that, given the parameters of the service, returns a list of objects to extend the service of that type."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:47680
msgid "Every service type has at least one service extension.  The only exception is the @dfn{boot service type}, which is the ultimate service."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:47683
msgid "Optionally, a default value for instances of this type."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47686
msgid "In this example, @code{guix-service-type} extends three services:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:47688 guix-git/doc/guix.texi:48399
#, no-wrap
msgid "shepherd-root-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47693
msgid "The @code{guix-shepherd-service} procedure defines how the Shepherd service is extended.  Namely, it returns a @code{<shepherd-service>} object that defines how @command{guix-daemon} is started and stopped (@pxref{Shepherd Services})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47694
#, no-wrap
msgid "account-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47699
msgid "This extension for this service is computed by @code{guix-accounts}, which returns a list of @code{user-group} and @code{user-account} objects representing the build user accounts (@pxref{Invoking guix-daemon})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47700
#, no-wrap
msgid "activation-service-type"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47704
msgid "Here @code{guix-activation} is a procedure that returns a gexp, which is a code snippet to run at ``activation time''---e.g., when the service is booted."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47707
msgid "A service of this type is instantiated like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47713
#, no-wrap
msgid ""
"(service guix-service-type\n"
"         (guix-configuration\n"
"           (build-accounts 5)\n"
"           (extra-options '(\"--gc-keep-derivations\"))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47721
msgid "The second argument to the @code{service} form is a value representing the parameters of this specific service instance.  @xref{guix-configuration-type, @code{guix-configuration}}, for information about the @code{guix-configuration} data type.  When the value is omitted, the default value specified by @code{guix-service-type} is used:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47724
#, no-wrap
msgid "(service guix-service-type)\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47728
msgid "@code{guix-service-type} is quite simple because it extends other services but is not extensible itself."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47732
msgid "The service type for an @emph{extensible} service looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47739
#, no-wrap
msgid ""
"(define udev-service-type\n"
"  (service-type (name 'udev)\n"
"                (extensions\n"
"                 (list (service-extension shepherd-root-service-type\n"
"                                          udev-shepherd-service)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47746
#, no-wrap
msgid ""
"                (compose concatenate)       ;concatenate the list of rules\n"
"                (extend (lambda (config rules)\n"
"                          (udev-configuration\n"
"                           (inherit config)\n"
"                           (rules (append (udev-configuration-rules config)\n"
"                                          rules)))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47752
msgid "This is the service type for the @uref{https://github.com/eudev-project/eudev, eudev device management daemon}.  Compared to the previous example, in addition to an extension of @code{shepherd-root-service-type}, we see two new fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47754
#, no-wrap
msgid "compose"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47757
msgid "This is the procedure to @dfn{compose} the list of extensions to services of this type."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47760
msgid "Services can extend the udev service by passing it lists of rules; we compose those extensions simply by concatenating them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47761
#, no-wrap
msgid "extend"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47764
msgid "This procedure defines how the value of the service is @dfn{extended} with the composition of the extensions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47769
msgid "Udev extensions are composed into a list of rules, but the udev service value is itself a @code{<udev-configuration>} record.  So here, we extend that record by appending the list of rules it contains to the list of contributed rules."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47775
msgid "This is a string giving an overview of the service type.  The string can contain Texinfo markup (@pxref{Overview,,, texinfo, GNU Texinfo}).  The @command{guix system search} command searches these strings and displays them (@pxref{Invoking guix system})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47780
msgid "There can be only one instance of an extensible service type such as @code{udev-service-type}.  If there were more, the @code{service-extension} specifications would be ambiguous."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47783
msgid "Still here? The next section provides a reference of the programming interface for services."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47791
msgid "We have seen an overview of service types (@pxref{Service Types and Services}).  This section provides a reference on how to manipulate services and service types.  This interface is provided by the @code{(gnu services)} module."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47792
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "{Procedure} service type [value]"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:47796
msgid "Return a new service of @var{type}, a @code{<service-type>} object (see below).  @var{value} can be any object; it represents the parameters of this particular service instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47800
msgid "When @var{value} is omitted, the default value specified by @var{type} is used; if @var{type} does not specify a default value, an error is raised."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47802
msgid "For instance, this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47805
#, no-wrap
msgid "(service openssh-service-type)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47809
msgid "is equivalent to this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47813
#, no-wrap
msgid ""
"(service openssh-service-type\n"
"         (openssh-configuration))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47817
msgid "In both cases the result is an instance of @code{openssh-service-type} with the default configuration."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47819
#, fuzzy, no-wrap
#| msgid "Services"
msgid "{Procedure} service? obj"
msgstr "Serviços"

#. type: deffn
#: guix-git/doc/guix.texi:47821
msgid "Return true if @var{obj} is a service."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47823
#, fuzzy, no-wrap
#| msgid "Service Types and Services"
msgid "{Procedure} service-kind service"
msgstr "Tipos de Service e Serviços"

#. type: deffn
#: guix-git/doc/guix.texi:47825
msgid "Return the type of @var{service}---i.e., a @code{<service-type>} object."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47827
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "{Procedure} service-value service"
msgstr "guix-publish-service-type"

#. type: deffn
#: guix-git/doc/guix.texi:47830
msgid "Return the value associated with @var{service}.  It represents its parameters."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47833
msgid "Here is an example of how a service is created and manipulated:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47842
#, no-wrap
msgid ""
"(define s\n"
"  (service nginx-service-type\n"
"           (nginx-configuration\n"
"            (nginx nginx)\n"
"            (log-directory log-directory)\n"
"            (run-directory run-directory)\n"
"            (file config-file))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47845
#, no-wrap
msgid ""
"(service? s)\n"
"@result{} #t\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47848
#, no-wrap
msgid ""
"(eq? (service-kind s) nginx-service-type)\n"
"@result{} #t\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47858
msgid "The @code{modify-services} form provides a handy way to change the parameters of some of the services of a list such as @code{%base-services} (@pxref{Base Services, @code{%base-services}}).  It evaluates to a list of services.  Of course, you could always use standard list combinators such as @code{map} and @code{fold} to do that (@pxref{SRFI-1, List Library,, guile, GNU Guile Reference Manual}); @code{modify-services} simply provides a more concise form for this common pattern."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47859
#, no-wrap
msgid "modify-services services @"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47861
msgid "(type variable => body) @dots{}"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47864
msgid "Modify the services listed in @var{services} according to the given clauses.  Each clause has the form:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:47867
#, no-wrap
msgid "(@var{type} @var{variable} => @var{body})\n"
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47874
msgid "where @var{type} is a service type---e.g., @code{guix-service-type}---and @var{variable} is an identifier that is bound within the @var{body} to the service parameters---e.g., a @code{guix-configuration} instance---of the original service of that @var{type}."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47881
msgid "The @var{body} should evaluate to the new service parameters, which will be used to configure the new service.  This new service will replace the original in the resulting list.  Because a service's service parameters are created using @code{define-record-type*}, you can write a succinct @var{body} that evaluates to the new service parameters by using the @code{inherit} feature that @code{define-record-type*} provides."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47883
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "Clauses can also have the following form:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: lisp
#: guix-git/doc/guix.texi:47886
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "(delete @var{type})\n"
msgstr "(delete @var{type})\n"

#. type: defspec
#: guix-git/doc/guix.texi:47890
msgid "Such a clause removes all services of the given @var{type} from @var{services}."
msgstr ""

#. type: defspec
#: guix-git/doc/guix.texi:47892
msgid "@xref{Using the Configuration System}, for example usage."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47899
msgid "Next comes the programming interface for service types.  This is something you want to know when writing new service definitions, but not necessarily when simply looking for ways to customize your @code{operating-system} declaration."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47900
#, no-wrap
msgid "{Data Type} service-type"
msgstr "{Tipo de dados} service-type"

#. type: cindex
#: guix-git/doc/guix.texi:47901
#, no-wrap
msgid "service type"
msgstr "tipo de serviço"

#. type: deftp
#: guix-git/doc/guix.texi:47904
msgid "This is the representation of a @dfn{service type} (@pxref{Service Types and Services})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47908
msgid "This is a symbol, used only to simplify inspection and debugging."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:47909
#, no-wrap
msgid "extensions"
msgstr "extensions"

#. type: table
#: guix-git/doc/guix.texi:47911
msgid "A non-empty list of @code{<service-extension>} objects (see below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47912
#, no-wrap
msgid "@code{compose} (default: @code{#f})"
msgstr "@code{compose} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47916
msgid "If this is @code{#f}, then the service type denotes services that cannot be extended---i.e., services that do not receive ``values'' from other services."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47920
msgid "Otherwise, it must be a one-argument procedure.  The procedure is called by @code{fold-services} and is passed a list of values collected from extensions.  It may return any single value."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47921
#, no-wrap
msgid "@code{extend} (default: @code{#f})"
msgstr "@code{extend} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:47923
msgid "If this is @code{#f}, services of this type cannot be extended."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47929
msgid "Otherwise, it must be a two-argument procedure: @code{fold-services} calls it, passing it the initial value of the service as the first argument and the result of applying @code{compose} to the extension values as the second argument.  It must return a value that is a valid parameter value for the service instance."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47935
msgid "This is a string, possibly using Texinfo markup, describing in a couple of sentences what the service is about.  This string allows users to find about the service through @command{guix system search} (@pxref{Invoking guix system})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:47936
#, no-wrap
msgid "@code{default-value} (default: @code{&no-default-value})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47939
msgid "The default value associated for instances of this service type.  This allows users to use the @code{service} form without its second argument:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47942
#, no-wrap
msgid "(service @var{type})\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:47946
msgid "The returned service in this case has the default value specified by @var{type}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:47949
msgid "@xref{Service Types and Services}, for examples."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47951
#, no-wrap
msgid "{Procedure} service-extension target-type compute"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47956
msgid "Return a new extension for services of type @var{target-type}.  @var{compute} must be a one-argument procedure: @code{fold-services} calls it, passing it the value associated with the service that provides the extension; it must return a valid value for the target service."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47958
#, no-wrap
msgid "{Procedure} service-extension? obj"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47960
msgid "Return true if @var{obj} is a service extension."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47966
msgid "Occasionally, you might want to simply extend an existing service.  This involves creating a new service type and specifying the extension of interest, which can be verbose; the @code{simple-service} procedure provides a shorthand for this."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47967
#, no-wrap
msgid "{Procedure} simple-service name target value"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47971
msgid "Return a service that extends @var{target} with @var{value}.  This works by creating a singleton service type @var{name}, of which the returned service is an instance."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47974
msgid "For example, this extends mcron (@pxref{Scheduled Job Execution}) with an additional job:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:47978
#, no-wrap
msgid ""
"(simple-service 'my-mcron-job mcron-service-type\n"
"                #~(job '(next-hour (3)) \"guix gc -F 2G\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47988
msgid "At the core of the service abstraction lies the @code{fold-services} procedure, which is responsible for ``compiling'' a list of services down to a single directory that contains everything needed to boot and run the system---the directory shown by the @command{guix system build} command (@pxref{Invoking guix system}).  In essence, it propagates service extensions down the service graph, updating each node parameters on the way, until it reaches the root node."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47989
#, no-wrap
msgid "{Procedure} fold-services services [#:target-type system-service-type]"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:47992
msgid "Fold @var{services} by propagating their extensions down to the root of type @var{target-type}; return the root service adjusted accordingly."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:47996
msgid "Lastly, the @code{(gnu services)} module also defines several essential service types, some of which are listed below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:47997
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "system-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48000
msgid "This is the root of the service graph.  It produces the system directory as returned by the @command{guix system build} command."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48002
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "boot-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48005
msgid "The type of the ``boot service'', which produces the @dfn{boot script}.  The boot script is what the initial RAM disk runs when booting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48007
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "etc-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48011
msgid "The type of the @file{/etc} service.  This service is used to create files under @file{/etc} and can be extended by passing it name/file tuples such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48014
#, no-wrap
msgid "(list `(\"issue\" ,(plain-file \"issue\" \"Welcome!\\n\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48018
msgid "In this example, the effect would be to add an @file{/etc/issue} file pointing to the given file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48020
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "etc-profile-d-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48029
msgid "The type of the @file{/etc/profile.d} service.  This service is used to create files under @file{/etc/profile.d}.  It takes as value a list of file-like objects, as can be produced with @code{local-file}, @code{plain-file}, etc.  Note that provided files whose file names do not end with @file{.sh} are @emph{not} added to @file{/etc/profile.d/} and are silently dropped.  Package objects can also be provided directly to have their @file{etc/profile.d/*.sh} prefixed files added.  A simple usage may look like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48033
#, no-wrap
msgid ""
"(simple-service 'my-important-profile-file etc-profile-d-service-type\n"
"                (list (plain-file \"youppi.sh\" \"HOW_IMPORTANT=very\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48036
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "etc-bashrc-d-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48048
msgid "The type of the @file{/etc/bashrc.d} service.  This service is used to create files under @file{/etc/bashrc.d}.  It takes as value a list of file-like objects, as can be produced with @code{local-file}, @code{plain-file}, etc.  Note that provided files whose file names do not end with @file{.sh} are @emph{not} added to @file{/etc/profile.d/} and are silently dropped.  The default value is made available via the @var{%default-etc-bashrc-d-files} variable for users to extended.  Package objects can also be provided directly to have their @file{etc/bashrc.d/*.sh} prefixed files added.  Since the service is part @code{%base-services}, it can be extended via @code{simple-service} like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48051 guix-git/doc/guix.texi:48067
#, fuzzy, no-wrap
#| msgid ""
#| "(use-package-modules guile emacs)\n"
#| "\n"
msgid ""
"(use-package-modules gnome)     ;for the `vte' package\n"
"\n"
msgstr ""
"(use-package-modules guile emacs)\n"
"\n"

#. type: example
#: guix-git/doc/guix.texi:48054
#, no-wrap
msgid ""
"(simple-service 'vte-integration etc-bashrc-d-service-type\n"
"                (list (file-append vte \"/etc/profile.d/vte.sh\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48057
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "vte-integration-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48064
msgid "This services adds the @file{/etc/bashrc.d/vte.sh} to your system, which improves the Bash and Zsh experience when using VTE-powered terminal emulators.  This causes for example the current directory to be displayed in the terminal emulator's tab title, and the current directory to be preserved when creating a new tab, among other features.  The value of the service is the @code{vte} package to use."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48069
#, fuzzy, no-wrap
msgid "(service vte-integration-service-type vte)\n"
msgstr "(service vnstat-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:48072
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "privileged-program-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48076
msgid "Type for the ``privileged-program service''.  This service collects lists of executable file names, passed as gexps, and adds them to the set of privileged programs on the system (@pxref{Privileged Programs})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48078
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "profile-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48082
msgid "Type of the service that populates the @dfn{system profile}---i.e., the programs under @file{/run/current-system/profile}.  Other services can extend it by passing it lists of packages to add to the system profile."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48086
#, no-wrap
msgid "provenance-service-type"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48090
msgid "This is the type of the service that records @dfn{provenance meta-data} in the system itself.  It creates several files under @file{/run/current-system}:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48092
#, no-wrap
msgid "channels.scm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48097
msgid "This is a ``channel file'' that can be passed to @command{guix pull -C} or @command{guix time-machine -C}, and which describes the channels used to build the system, if that information was available (@pxref{Channels})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48098
#, no-wrap
msgid "configuration.scm"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48103
msgid "This is the file that was passed as the value for this @code{provenance-service-type} service.  By default, @command{guix system reconfigure} automatically passes the OS configuration file it received on the command line."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48104
#, no-wrap
msgid "provenance"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48107
msgid "This contains the same information as the two other files but in a format that is more readily processable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48111
msgid "In general, these two pieces of information (channels and configuration file) are enough to reproduce the operating system ``from source''."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48112
#, no-wrap
msgid "Caveats"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48119
msgid "This information is necessary to rebuild your operating system, but it is not always sufficient.  In particular, @file{configuration.scm} itself is insufficient if it is not self-contained---if it refers to external Guile modules or to extra files.  If you want @file{configuration.scm} to be self-contained, we recommend that modules or files it refers to be part of a channel."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:48127
msgid "Besides, provenance meta-data is ``silent'' in the sense that it does not change the bits contained in your system, @emph{except for the meta-data bits themselves}.  Two different OS configurations or sets of channels can lead to the same system, bit-for-bit; when @code{provenance-service-type} is used, these two systems will have different meta-data and thus different store file names, which makes comparison less trivial."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48132
msgid "This service is automatically added to your operating system configuration when you use @command{guix system reconfigure}, @command{guix system init}, or @command{guix deploy}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48134
#, fuzzy, no-wrap
msgid "linux-loadable-module-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48138
msgid "Type of the service that collects lists of packages containing kernel-loadable modules, and adds them to the set of kernel-loadable modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48141
msgid "This service type is intended to be extended by other service types, such as below:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48147
#, no-wrap
msgid ""
"(simple-service 'installing-module\n"
"                linux-loadable-module-service-type\n"
"                (list module-to-install-1\n"
"                      module-to-install-2))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48151
msgid "This does not actually load modules at bootup, only adds it to the kernel profile so that it @emph{can} be loaded by other means."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48156
#, no-wrap
msgid "shepherd services"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48157
#, no-wrap
msgid "PID 1"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48158
#, no-wrap
msgid "init system"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48164
msgid "The @code{(gnu services shepherd)} module provides a way to define services managed by the GNU@tie{}Shepherd, which is the initialization system---the first process that is started when the system boots, also known as PID@tie{}1 (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48170
msgid "Services in the Shepherd can depend on each other.  For instance, the SSH daemon may need to be started after the syslog daemon has been started, which in turn can only happen once all the file systems have been mounted.  The simple operating system defined earlier (@pxref{Using the Configuration System}) results in a service graph like this:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48172
msgid "@image{images/shepherd-graph,,5in,Typical shepherd service graph.}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48176
msgid "You can actually generate such a graph for any operating system definition using the @command{guix system shepherd-graph} command (@pxref{system-shepherd-graph, @command{guix system shepherd-graph}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48180
msgid "The @code{%shepherd-root-service} is a service object representing PID@tie{}1, of type @code{shepherd-root-service-type}; it can be extended by passing it lists of @code{<shepherd-service>} objects."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48181
#, no-wrap
msgid "{Data Type} shepherd-service"
msgstr "{Tipo de dados} shepherd-service"

#. type: deftp
#: guix-git/doc/guix.texi:48183
msgid "The data type representing a service managed by the Shepherd."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:48185
#, no-wrap
msgid "provision"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48187
msgid "This is a list of symbols denoting what the service provides."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48192
msgid "These are the names that may be passed to @command{herd start}, @command{herd status}, and similar commands (@pxref{Invoking herd,,, shepherd, The GNU Shepherd Manual}).  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48193
#, no-wrap
msgid "@code{requirement} (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48195
msgid "List of symbols denoting the Shepherd services this one depends on."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48196
#, fuzzy, no-wrap
msgid "@code{user-processes} Shepherd service"
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:48202
msgid "With very few exceptions, services that start a daemon must depend at least on the @code{user-processes} service; this ensures that these daemons are started after all the file systems have been mounted and that, during shutdown, they are stopped before attempting to terminate remaining user processes."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48203
#, no-wrap
msgid "one-shot services, for the Shepherd"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48208
msgid "Whether this service is @dfn{one-shot}.  One-shot services stop immediately after their @code{start} action has completed.  @xref{Slots of services,,, shepherd, The GNU Shepherd Manual}, for more info."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48209
#, no-wrap
msgid "@code{respawn?} (default: @code{#t})"
msgstr "@code{respawn?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:48212
msgid "Whether to restart the service when it stops, for instance when the underlying process dies."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48213
#, fuzzy, no-wrap
#| msgid "@code{respawn?} (default: @code{#t})"
msgid "@code{respawn-limit} (default: @code{#f})"
msgstr "@code{respawn?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:48217
msgid "Set a limit on how many times and how frequently a service may be restarted by Shepherd before it is disabled.  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for details."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48218
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{respawn-delay} (default: @code{#f})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48221
msgid "When true, this is the delay in seconds before restarting a failed service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48222
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{start} (default: @code{#~(const #t)})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: itemx
#: guix-git/doc/guix.texi:48223
#, no-wrap
msgid "@code{stop} (default: @code{#~(const #f)})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48229
msgid "The @code{start} and @code{stop} fields refer to the Shepherd's facilities to start and stop processes (@pxref{Service De- and Constructors,,, shepherd, The GNU Shepherd Manual}).  They are given as G-expressions that get expanded in the Shepherd configuration file (@pxref{G-Expressions})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48230
#, no-wrap
msgid "@code{actions} (default: @code{'()})"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48231
#, no-wrap
msgid "actions, of Shepherd services"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48236
msgid "This is a list of @code{shepherd-action} objects (see below) defining @dfn{actions} supported by the service, in addition to the standard @code{start} and @code{stop} actions.  Actions listed here become available as @command{herd} sub-commands:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48239
#, no-wrap
msgid "herd @var{action} @var{service} [@var{arguments}@dots{}]\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48241
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{free-form} (default: @code{#f})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48247
msgid "When set, this field replaces the @code{start}, @code{stop}, and @code{actions} fields.  It is meant to be used when the service definition comes from some other source, typically the service collection provided by the Shepherd proper (@pxref{Service Collection,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48248
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "REPL service, for shepherd"
msgstr "Serviços de Shepherd"

#. type: table
#: guix-git/doc/guix.texi:48252
msgid "For example, the snippet below defines a service for the Shepherd's built-in @acronym{REPL, read-eval-print loop} service (@pxref{REPL Service,,, shepherd, The GNU Shepherd Manual}):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48258
#, no-wrap
msgid ""
"(shepherd-service\n"
"  (provision '(repl))\n"
"  (modules '((shepherd service repl)))\n"
"  (free-form #~(repl-service)))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48264
msgid "In this case, the service object is returned by the @code{repl-service} procedure of the Shepherd, so all the @code{free-form} G-expression does is call that procedure.  Note that the @code{provision} field must be consistent with the actual service provision."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48265
#, no-wrap
msgid "@code{auto-start?} (default: @code{#t})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48268
msgid "Whether this service should be started automatically by the Shepherd.  If it is @code{#f} the service has to be started manually with @code{herd start}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48271
msgid "A documentation string, as shown when running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48274
#, no-wrap
msgid "herd doc @var{service-name}\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48278
msgid "where @var{service-name} is one of the symbols in @code{provision} (@pxref{Invoking herd,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48282
msgid "This is the list of modules that must be in scope when @code{start} and @code{stop} are evaluated."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48290
msgid "The example below defines a Shepherd service that spawns @command{syslogd}, the system logger from the GNU Networking Utilities (@pxref{syslogd invocation, @command{syslogd},, inetutils, GNU Inetutils}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48302
#, no-wrap
msgid ""
"(let ((config (plain-file \"syslogd.conf\" \"@dots{}\")))\n"
"  (shepherd-service\n"
"    (documentation \"Run the syslog daemon (syslogd).\")\n"
"    (provision '(syslogd))\n"
"    (requirement '(user-processes))\n"
"    (start #~(make-forkexec-constructor\n"
"               (list #$(file-append inetutils \"/libexec/syslogd\")\n"
"                     \"--rcfile\" #$config)\n"
"               #:pid-file \"/var/run/syslog.pid\"))\n"
"    (stop #~(make-kill-destructor))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48317
msgid "Key elements in this example are the @code{start} and @code{stop} fields: they are @dfn{staged} code snippets that use the @code{make-forkexec-constructor} procedure provided by the Shepherd and its dual, @code{make-kill-destructor} (@pxref{Service De- and Constructors,,, shepherd, The GNU Shepherd Manual}).  The @code{start} field will have @command{shepherd} spawn @command{syslogd} with the given option; note that we pass @code{config} after @option{--rcfile}, which is a configuration file declared above (contents of this file are omitted).  Likewise, the @code{stop} field tells how this service is to be stopped; in this case, it is stopped by making the @code{kill} system call on its PID@.  Code staging is achieved using G-expressions: @code{#~} stages code, while @code{#$} ``escapes'' back to host code (@pxref{G-Expressions})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48318
#, no-wrap
msgid "{Data Type} shepherd-action"
msgstr "{Tipo de dados} shepherd-action"

#. type: deftp
#: guix-git/doc/guix.texi:48321
msgid "This is the data type that defines additional actions implemented by a Shepherd service (see above)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48325
msgid "Symbol naming the action."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48328
msgid "This is a documentation string for the action.  It can be viewed by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48331
#, no-wrap
msgid "herd doc @var{service} action @var{action}\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48333
#, no-wrap
msgid "procedure"
msgstr "procedure"

#. type: table
#: guix-git/doc/guix.texi:48337
msgid "This should be a gexp that evaluates to a procedure of at least one argument, which is the ``running value'' of the service (@pxref{Slots of services,,, shepherd, The GNU Shepherd Manual})."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48341
msgid "The following example defines an action called @code{say-hello} that kindly greets the user:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48350
#, no-wrap
msgid ""
"(shepherd-action\n"
"  (name 'say-hello)\n"
"  (documentation \"Say hi!\")\n"
"  (procedure #~(lambda (running . args)\n"
"                 (format #t \"Hello, friend! arguments: ~s\\n\"\n"
"                         args)\n"
"                 #t)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48353
msgid "Assuming this action is added to the @code{example} service, then you can do:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48359
#, no-wrap
msgid ""
"# herd say-hello example\n"
"Hello, friend! arguments: ()\n"
"# herd say-hello example a b c\n"
"Hello, friend! arguments: (\"a\" \"b\" \"c\")\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48364
msgid "This, as you can see, is a fairly sophisticated way to say hello.  @xref{Defining Services,,, shepherd, The GNU Shepherd Manual}, for more info on actions."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48366
#, fuzzy, no-wrap
msgid "configuration file, of Shepherd services"
msgstr "Gerencie a configuração do sistema operacional."

#. type: deffn
#: guix-git/doc/guix.texi:48367
#, fuzzy, no-wrap
msgid "{Procedure} shepherd-configuration-action"
msgstr "build-machine {Data Type}"

#. type: deffn
#: guix-git/doc/guix.texi:48370
msgid "Return a @code{configuration} action to display @var{file}, which should be the name of the service's configuration file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48374
msgid "It can be useful to equip services with that action.  For example, the service for the Tor anonymous router (@pxref{Networking Services, @code{tor-service-type}}) is defined roughly like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48380
#, no-wrap
msgid ""
"(let ((torrc (plain-file \"torrc\" @dots{})))\n"
"  (shepherd-service\n"
"    (provision '(tor))\n"
"    (requirement '(user-processes loopback syslogd))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48387
#, no-wrap
msgid ""
"    (start #~(make-forkexec-constructor\n"
"              (list #$(file-append tor \"/bin/tor\") \"-f\" #$torrc)\n"
"              #:user \"tor\" #:group \"tor\"))\n"
"    (stop #~(make-kill-destructor))\n"
"    (actions (list (shepherd-configuration-action torrc)))\n"
"    (documentation \"Run the Tor anonymous network overlay.\")))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48391
msgid "Thanks to this action, administrators can inspect the configuration file passed to @command{tor} with this shell command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48394
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "cat $(herd configuration tor)\n"
msgstr "cat $(herd configuration tor)\n"

#. type: deffn
#: guix-git/doc/guix.texi:48397
msgid "This can come in as a handy debugging tool!"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48401
msgid "The service type for the Shepherd ``root service''---i.e., PID@tie{}1."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48406
msgid "This is the service type that extensions target when they want to create shepherd services (@pxref{Service Types and Services}, for an example).  Each extension must pass a list of @code{<shepherd-service>}.  Its value must be a @code{shepherd-configuration}, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:48408
#, no-wrap
msgid "{Data Type} shepherd-configuration"
msgstr "{Tipo de dados} shepherd-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:48410 guix-git/doc/guix.texi:50136
msgid "This data type represents the Shepherd's configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48412 guix-git/doc/guix.texi:50138
#, no-wrap
msgid "shepherd (default: @code{shepherd})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48414 guix-git/doc/guix.texi:50140
msgid "The Shepherd package to use."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48415 guix-git/doc/guix.texi:50151
#, no-wrap
msgid "services (default: @code{'()})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48419 guix-git/doc/guix.texi:50155
msgid "A list of @code{<shepherd-service>} to start.  You should probably use the service extension mechanism instead (@pxref{Shepherd Services})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48424
msgid "The following example specifies the Shepherd package for the operating system:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48439
#, no-wrap
msgid ""
"(operating-system\n"
"  ;; ...\n"
"  (services (append (list openssh-service-type))\n"
"            ;; ...\n"
"            %desktop-services)\n"
"  ;; ...\n"
"  ;; Use own Shepherd package.\n"
"  (essential-services\n"
"   (modify-services (operating-system-default-essential-services\n"
"                     this-operating-system)\n"
"     (shepherd-root-service-type config => (shepherd-configuration\n"
"                                            (inherit config)\n"
"                                            (shepherd my-shepherd))))))\n"
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:48442
#, fuzzy
#| msgid "Shepherd Services"
msgid "shepherd-transient-timer-services"
msgstr "Serviços de Shepherd"

#. type: cindex
#: guix-git/doc/guix.texi:48442
#, no-wrap
msgid "@code{transient} service, Shepherd"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48443
#, fuzzy, no-wrap
msgid "shepherd-transient-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48447
msgid "This service type represents the Shepherd's @code{transient} service, which lets you spawn commands in the background and interact with them as regular Shepherd services; it is similar to @command{systemd-run}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48451
msgid "For example, the command below spawns @command{rsync} in the background, in an environment where the @env{SSH_AUTH_SOCK} environment variable has the given value:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48455
#, no-wrap
msgid ""
"herd spawn transient -E SSH_AUTH_SOCK=$SSH_AUTH_SOCK -- \\\n"
"  rsync -e ssh -vur . backup.example.org:\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48459
msgid "@xref{Transient Service Maker,,, shepherd, The GNU Shepherd Manual}, for more info on the @code{transient} service."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48461
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "@code{timer} service, Shepherd"
msgstr "Serviços de Shepherd"

#. type: defvar
#: guix-git/doc/guix.texi:48462
#, fuzzy, no-wrap
msgid "shepherd-timer-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48466
msgid "This is the service type representing the Shepherd's @code{timer} service, which lets you schedule the execution of commands, similar to the venerable @command{at} command.  Here is an example:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48469
#, no-wrap
msgid "herd schedule timer at 07:00 -- mpg123 Music/alarm.mp3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48473
msgid "@xref{Timer Service,,, shepherd, The GNU Shepherd Manual}, for more info on the @code{timer} service."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:48476
#, fuzzy
#| msgid "operating-system"
msgid "shepherd-system-log"
msgstr "sistema operacional"

#. type: cindex
#: guix-git/doc/guix.texi:48476
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "system log service, from Shepherd"
msgstr "Serviços de Shepherd"

#. type: cindex
#: guix-git/doc/guix.texi:48477
#, no-wrap
msgid "syslogd, Shepherd system log service"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48478
#, fuzzy, no-wrap
msgid "shepherd-system-log-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:48483
msgid "This service implements a @dfn{system log}, reading messages applications send to @file{/dev/log} and writing them to files or terminals according to user-defined rules.  It provides functionality traditionally implemented by @command{syslogd} programs."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48486
#, fuzzy
msgid "The value of services of this type must be a @code{system-log-configuration} record, as described below."
msgstr "build-machine {Data Type}"

#. type: defvar
#: guix-git/doc/guix.texi:48488
#, fuzzy
#| msgid "Core services such as @code{home-files-service-type}."
msgid "This service is part of @code{%base-services} (@pxref{Base Services})."
msgstr "Serviços principais como @code{home-files-service-type}."

#. type: deftp
#: guix-git/doc/guix.texi:48492
#, fuzzy, no-wrap
#| msgid "{Data Type} syslog-configuration"
msgid "{Data Type} system-log-configuration"
msgstr "{Tipo de dados} syslog-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:48494
#, fuzzy
msgid "Available @code{system-log-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:48496
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{provision} (default: @code{'(system-log syslogd)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:48498
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The name(s) of the system log service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:48499
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{requirement} (default: @code{'(root-file-system)}) (type: list-of-symbols)"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:48501
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "Dependencies of the system log service."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:48502
#, fuzzy, no-wrap
msgid "@code{kernel-log-file} (type: gexp-or-string-or-false)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48504
msgid "File from which kernel messages are read, @file{/dev/kmsg} by default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48505
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{message-destination} (default: @code{#f}) (type: gexp-or-false)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48511
msgid "This gexp must evaluate to a procedure that, when passed a log message, returns the list of files to write it to; @code{#f} is equivalent to using @code{(default-message-destination-procedure)}.  @xref{System Log Service,,,shepherd,The GNU Shepherd Manual}, for information on how to write that procedure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48512
#, fuzzy, no-wrap
msgid "@code{date-format} (type: gexp-or-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48518
msgid "String or string-valued gexp specifying how to format timestamps in log files.  It must be a valid string for @code{strftime} (@pxref{Time,,, guile,GNU Guile Reference Manual}), including delimiting space---e.g., @code{\"%c \"} for a format identical to that of traditional syslogd implementations."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48519
#, fuzzy, no-wrap
msgid "@code{history-size} (type: gexp-or-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48522
msgid "Number of logging messages kept in memory for the purposes of making them available to @command{herd status system-log}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:48523
#, fuzzy, no-wrap
msgid "@code{max-silent-time} (type: gexp-or-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:48526
msgid "Time after which a mark is written to log files if nothing was logged during that time frame."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:48534
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "%shepherd-root-service"
msgstr "Serviços de Shepherd"

#. type: defvar
#: guix-git/doc/guix.texi:48536
msgid "This service represents PID@tie{}1."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48540
#, fuzzy, no-wrap
#| msgid "System Configuration"
msgid "complex configurations"
msgstr "Configuração do sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:48545
msgid "Some programs might have rather complex configuration files or formats, and to make it easier to create Scheme bindings for these configuration files, you can use the utilities defined in the @code{(gnu services configuration)} module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48552
msgid "The main utility is the @code{define-configuration} macro, a helper used to define a Scheme record type (@pxref{Record Overview,,, guile, GNU Guile Reference Manual}).  The fields from this Scheme record can be serialized using @dfn{serializers}, which are procedures that take some kind of Scheme value and translates them into another Scheme value or @ref{G-Expressions}."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48553
#, no-wrap
msgid "define-configuration name clause1 clause2 @dots{}"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48556
msgid "Create a record type named @code{@var{name}} that contains the fields found in the clauses."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48558
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "A clause has the following form:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: example
#: guix-git/doc/guix.texi:48565
#, no-wrap
msgid ""
"(@var{field-name}\n"
" @var{type-decl}\n"
" @var{documentation}\n"
" @var{option*}\n"
" @dots{})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48569
msgid "@var{field-name} is an identifier that denotes the name of the field in the generated record."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48572
msgid "@var{type-decl} is either @code{@var{type}} for fields that require a value to be set or @code{(@var{type} @var{default-value})} otherwise."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48580
msgid "@var{type} is the type of the value corresponding to @var{field-name}; since Guile is untyped, a predicate procedure---@code{@var{type}?}---will be called on the value corresponding to the field to ensure that the value is of the correct type.  This means that if say, @var{type} is @code{package}, then a procedure named @code{package?} will be applied on the value to make sure that it is indeed a @code{<package>} object."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48584
msgid "@var{default-value} is the default value corresponding to the field; if none is specified, the user is forced to provide a value when creating an object of the record type."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48589
msgid "@var{documentation} is a string formatted with Texinfo syntax which should provide a description of what setting this field does."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48591
#, fuzzy
#| msgid "Packages are currently available on the following platforms:"
msgid "@var{option*} is one of the following subclauses:"
msgstr "Os pacotes estão atualmente disponíveis nas seguintes plataformas:"

#. type: code{#1}
#: guix-git/doc/guix.texi:48593
#, no-wrap
msgid "empty-serializer"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48595
msgid "Exclude this field from serialization."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:48596
#, fuzzy, no-wrap
#| msgid "--profile=@var{profile}"
msgid "(serializer @var{serializer})"
msgstr "--profile=@var{perfil}"

#. type: table
#: guix-git/doc/guix.texi:48603
msgid "@var{serializer} is the name of a procedure which takes two arguments, the first is the name of the field, and the second is the value corresponding to the field.  The procedure should return a string or @ref{G-Expressions} that represents the content that will be serialized to the configuration file.  If none is specified, a procedure of the name @code{serialize-@var{type}} will be used."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48605
msgid "An example of a simple serializer procedure:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48609
#, no-wrap
msgid ""
"(define (serialize-boolean field-name value)\n"
"  (let ((value (if value \"true\" \"false\")))\n"
"    #~(string-append '#$field-name \" = \" #$value)))\n"
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:48611
#, no-wrap
msgid "(sanitizer @var{sanitizer})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48616
msgid "@var{sanitizer} is a procedure which takes one argument, a user-supplied value, and returns a ``sanitized'' value for the field.  If no sanitizer is specified, a default sanitizer is used, which raises an error if the value is not of type @var{type}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:48619
msgid "An example of a sanitizer for a field that accepts both strings and symbols looks like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48624
#, no-wrap
msgid ""
"(define (sanitize-foo value)\n"
"  (cond ((string? value) value)\n"
"        ((symbol? value) (symbol->string value))\n"
"        (else (error \"bad value\"))))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48636
msgid "In some cases multiple different configuration records might be defined in the same file, but their serializers for the same type might have to be different, because they have different configuration formats.  For example, the @code{serialize-boolean} procedure for the Getmail service would have to be different from the one for the Transmission service.  To make it easier to deal with this situation, one can specify a serializer prefix by using the @code{prefix} literal in the @code{define-configuration} form.  This means that one doesn't have to manually specify a custom @var{serializer} for every field."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48640
#, no-wrap
msgid ""
"(define (foo-serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48643
#, no-wrap
msgid ""
"(define (bar-serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48649
#, no-wrap
msgid ""
"(define-configuration foo-configuration\n"
"  (label\n"
"   string\n"
"   \"The name of label.\")\n"
"  (prefix foo-))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48655
#, no-wrap
msgid ""
"(define-configuration bar-configuration\n"
"  (ip-address\n"
"   string\n"
"   \"The IPv4 address for this device.\")\n"
"  (prefix bar-))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48661
msgid "However, in some cases you might not want to serialize any of the values of the record, to do this, you can use the @code{no-serialization} literal.  There is also the @code{define-configuration/no-serialization} macro which is a shorthand of this."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48669
#, no-wrap
msgid ""
";; Nothing will be serialized to disk.\n"
"(define-configuration foo-configuration\n"
"  (field\n"
"   (string \"test\")\n"
"   \"Some documentation.\")\n"
"  (no-serialization))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48675
#, no-wrap
msgid ""
";; The same thing as above.\n"
"(define-configuration/no-serialization bar-configuration\n"
"  (field\n"
"   (string \"test\")\n"
"   \"Some documentation.\"))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48678
#, fuzzy, no-wrap
msgid "define-maybe type"
msgstr "guix-publish-service-type"

#. type: defmac
#: guix-git/doc/guix.texi:48683
msgid "Sometimes a field should not be serialized if the user doesn’t specify a value.  To achieve this, you can use the @code{define-maybe} macro to define a ``maybe type''; if the value of a maybe type is left unset, or is set to the @code{%unset-value} value, then it will not be serialized."
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48690
msgid "When defining a ``maybe type'', the corresponding serializer for the regular type will be used by default.  For example, a field of type @code{maybe-string} will be serialized using the @code{serialize-string} procedure by default, you can of course change this by specifying a custom serializer procedure.  Likewise, the type of the value would have to be a string, or left unspecified."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48693
#, no-wrap
msgid ""
"(define-maybe string)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48696
#, no-wrap
msgid ""
"(define (serialize-string field-name value)\n"
"  @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48703
#, no-wrap
msgid ""
"(define-configuration baz-configuration\n"
"  (name\n"
"   ;; If set to a string, the `serialize-string' procedure will be used\n"
"   ;; to serialize the string.  Otherwise this field is not serialized.\n"
"   maybe-string\n"
"   \"The name of this module.\"))\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48707
msgid "Like with @code{define-configuration}, one can set a prefix for the serializer name by using the @code{prefix} literal."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48711
#, no-wrap
msgid ""
"(define-maybe integer\n"
"  (prefix baz-))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48714
#, no-wrap
msgid ""
"(define (baz-serialize-integer field-name value)\n"
"  @dots{})\n"
msgstr ""

#. type: defmac
#: guix-git/doc/guix.texi:48721
msgid "There is also the @code{no-serialization} literal, which when set means that no serializer will be defined for the ``maybe type'', regardless of whether its value is set or not.  @code{define-maybe/no-serialization} is a shorthand for specifying the @code{no-serialization} literal."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48724
#, no-wrap
msgid ""
"(define-maybe/no-serialization symbol)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48729
#, no-wrap
msgid ""
"(define-configuration/no-serialization test-configuration\n"
"  (mode\n"
"   maybe-symbol\n"
"   \"Docstring.\"))\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48732
#, fuzzy, no-wrap
#| msgid "packages->manifest"
msgid "{Procedure} maybe-value-set? value"
msgstr "packages->manifest"

#. type: deffn
#: guix-git/doc/guix.texi:48735
msgid "Predicate to check whether a user explicitly specified the value of a maybe field."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48737
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "{Procedure} serialize-configuration configuration fields"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: deffn
#: guix-git/doc/guix.texi:48742
msgid "Return a G-expression that contains the values corresponding to the @var{fields} of @var{configuration}, a record that has been generated by @code{define-configuration}.  The G-expression can then be serialized to disk by using something like @code{mixed-text-file}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48747
msgid "Once you have defined a configuration record, you will most likely also want to document it so that other people know to use it.  To help with that, there are two procedures, both of which are documented below."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48748
#, no-wrap
msgid "{Procedure} generate-documentation documentation documentation-name"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48754
msgid "Generate a Texinfo fragment from the docstrings in @var{documentation}, a list of @code{(@var{label} @var{fields} @var{sub-documentation} ...)}.  @var{label} should be a symbol and should be the name of the configuration record.  @var{fields} should be a list of all the fields available for the configuration record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48761
msgid "@var{sub-documentation} is a @code{(@var{field-name} @var{configuration-name})} tuple.  @var{field-name} is the name of the field which takes another configuration record as its value, and @var{configuration-name} is the name of that configuration record.  The same value may be used for multiple @var{field-name}s, in case a field accepts different types of configurations."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48768
msgid "@var{sub-documentation} is only needed if there are nested configuration records.  For example, the @code{getmail-configuration} record (@pxref{Mail Services}) accepts a @code{getmail-configuration-file} record in one of its @code{rcfile} field, therefore documentation for @code{getmail-configuration-file} is nested in @code{getmail-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48775
#, no-wrap
msgid ""
"(generate-documentation\n"
"  `((getmail-configuration ,getmail-configuration-fields\n"
"     (rcfile getmail-configuration-file))\n"
"    @dots{})\n"
"  'getmail-configuration)\n"
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48779
msgid "@var{documentation-name} should be a symbol and should be the name of the configuration record."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:48782
#, fuzzy, no-wrap
#| msgid "nginx-location-configuration body"
msgid "{Procedure} configuration->documentation configuration-symbol"
msgstr "nginx-location-configuration body"

#. type: deffn
#: guix-git/doc/guix.texi:48788
msgid "Take @var{configuration-symbol}, the symbol corresponding to the name used when defining a configuration record with @code{define-configuration}, and print the Texinfo documentation of its fields.  This is useful if there aren’t any nested configuration records since it only prints the documentation for the top-level fields."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48796
msgid "As of right now, there is no automated way to generate documentation for configuration records and put them in the manual.  Instead, every time you make a change to the docstrings of a configuration record, you have to manually call @code{generate-documentation} or @code{configuration->documentation}, and paste the output into the @file{doc/guix.texi} file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48800
msgid "Below is an example of a record type created using @code{define-configuration} and friends."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48807
#, no-wrap
msgid ""
"(use-modules (gnu services)\n"
"             (guix gexp)\n"
"             (gnu services configuration)\n"
"             (srfi srfi-26)\n"
"             (srfi srfi-1))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48815
#, no-wrap
msgid ""
";; Turn field names, which are Scheme symbols into strings\n"
"(define (uglify-field-name field-name)\n"
"  (let ((str (symbol->string field-name)))\n"
"    ;; field? -> is-field\n"
"    (if (string-suffix? \"?\" str)\n"
"        (string-append \"is-\" (string-drop-right str 1))\n"
"        str)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48818
#, no-wrap
msgid ""
"(define (serialize-string field-name value)\n"
"  #~(string-append #$(uglify-field-name field-name) \" = \" #$value \"\\n\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48821
#, no-wrap
msgid ""
"(define (serialize-integer field-name value)\n"
"  (serialize-string field-name (number->string value)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48824
#, no-wrap
msgid ""
"(define (serialize-boolean field-name value)\n"
"  (serialize-string field-name (if value \"true\" \"false\")))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48827
#, no-wrap
msgid ""
"(define (serialize-contact-name field-name value)\n"
"  #~(string-append \"\\n[\" #$value \"]\\n\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48830
#, no-wrap
msgid ""
"(define (list-of-contact-configurations? lst)\n"
"  (every contact-configuration? lst))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48835
#, no-wrap
msgid ""
"(define (serialize-list-of-contact-configurations field-name value)\n"
"  #~(string-append #$@@(map (cut serialize-configuration <>\n"
"                                contact-configuration-fields)\n"
"                           value)))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48842
#, no-wrap
msgid ""
"(define (serialize-contacts-list-configuration configuration)\n"
"  (mixed-text-file\n"
"   \"contactrc\"\n"
"   #~(string-append \"[Owner]\\n\"\n"
"                    #$(serialize-configuration\n"
"                       configuration contacts-list-configuration-fields))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48845
#, no-wrap
msgid ""
"(define-maybe integer)\n"
"(define-maybe string)\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48860
#, no-wrap
msgid ""
"(define-configuration contact-configuration\n"
"  (name\n"
"   string\n"
"   \"The name of the contact.\"\n"
"   serialize-contact-name)\n"
"  (phone-number\n"
"   maybe-integer\n"
"   \"The person's phone number.\")\n"
"  (email\n"
"   maybe-string\n"
"   \"The person's email address.\")\n"
"  (married?\n"
"   boolean\n"
"   \"Whether the person is married.\"))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48872
#, no-wrap
msgid ""
"(define-configuration contacts-list-configuration\n"
"  (name\n"
"   string\n"
"   \"The name of the owner of this contact list.\")\n"
"  (email\n"
"   string\n"
"   \"The owner's email address.\")\n"
"  (contacts\n"
"   (list-of-contact-configurations '())\n"
"   \"A list of @@code@{contact-configuration@} records which contain\n"
"information about all your contacts.\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48875
msgid "A contacts list configuration could then be created like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:48891
#, no-wrap
msgid ""
"(define my-contacts\n"
"  (contacts-list-configuration\n"
"   (name \"Alice\")\n"
"   (email \"alice@@example.org\")\n"
"   (contacts\n"
"    (list (contact-configuration\n"
"           (name \"Bob\")\n"
"           (phone-number 1234)\n"
"           (email \"bob@@gnu.org\")\n"
"           (married? #f))\n"
"          (contact-configuration\n"
"           (name \"Charlie\")\n"
"           (phone-number 0000)\n"
"           (married? #t))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48895
msgid "After serializing the configuration to disk, the resulting file would look like this:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48900
#, no-wrap
msgid ""
"[owner]\n"
"name = Alice\n"
"email = alice@@example.org\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48905
#, no-wrap
msgid ""
"[Bob]\n"
"phone-number = 1234\n"
"email = bob@@gnu.org\n"
"is-married = false\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48909
#, no-wrap
msgid ""
"[Charlie]\n"
"phone-number = 0\n"
"is-married = true\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48913
#, fuzzy, no-wrap
#| msgid "Invoking guix system"
msgid "troubleshooting, Guix System"
msgstr "Invocando guix system"

#. type: cindex
#: guix-git/doc/guix.texi:48914
#, fuzzy, no-wrap
#| msgid "guix system vm"
msgid "guix system troubleshooting"
msgstr "guix system vm"

#. type: Plain text
#: guix-git/doc/guix.texi:48926
msgid "Guix System allows rebooting into a previous generation should the last one be malfunctioning, which makes it quite robust against being broken irreversibly.  This feature depends on GRUB being correctly functioning though, which means that if for whatever reasons your GRUB installation becomes corrupted during a system reconfiguration, you may not be able to easily boot into a previous generation.  A technique that can be used in this case is to @i{chroot} into your broken system and reconfigure it from there.  Such technique is explained below."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:48927
#, fuzzy, no-wrap
#| msgid "Invoking guix system"
msgid "chroot, guix system"
msgstr "Invocando guix system"

#. type: cindex
#: guix-git/doc/guix.texi:48928
#, fuzzy, no-wrap
#| msgid "Invoking guix system"
msgid "chrooting, guix system"
msgstr "Invocando guix system"

#. type: cindex
#: guix-git/doc/guix.texi:48929
#, no-wrap
msgid "repairing GRUB, via chroot"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:48942
msgid "This section details how to @i{chroot} to an already installed Guix System with the aim of reconfiguring it, for example to fix a broken GRUB installation.  The process is similar to how it would be done on other GNU/Linux systems, but there are some Guix System particularities such as the daemon and profiles that make it worthy of explaining here."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48951
msgid "Obtain a bootable image of Guix System.  It is recommended the latest development snapshot so the kernel and the tools used are at least as as new as those of your installed system; it can be retrieved from the @url{https://ci.guix.gnu.org/search/latest/ISO-9660?query=spec:images+status:success+system:x86_64-linux+image.iso, https://ci.guix.gnu.org} URL.  Follow the @pxref{USB Stick and DVD Installation} section for copying it to a bootable media."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48960
msgid "Boot the image, and proceed with the graphical text-based installer until your network is configured.  Alternatively, you could configure the network manually by following the @ref{manual-installation-networking} section.  If you get the error @samp{RTNETLINK answers: Operation not possible due to RF-kill}, try @samp{rfkill list} followed by @samp{rfkill unblock 0}, where @samp{0} is your device identifier (ID)."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48966
msgid "Switch to a virtual console (tty) if you haven't already by pressing simultaneously the @kbd{Control + Alt + F4} keys.  Mount your file system at @file{/mnt}.  Assuming your root partition is @file{/dev/sda2}, you would do:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48969
#, no-wrap
msgid "mount /dev/sda2 /mnt\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48973
msgid "Mount special block devices and Linux-specific directories:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48978
#, no-wrap
msgid ""
"mount --rbind /proc /mnt/proc\n"
"mount --rbind /sys /mnt/sys\n"
"mount --rbind /dev /mnt/dev\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48982
msgid "If your system is EFI-based, you must also mount the ESP partition.  Assuming it is @file{/dev/sda1}, you can do so with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48985
#, no-wrap
msgid "mount /dev/sda1 /mnt/boot/efi\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48989
msgid "Enter your system via chroot:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:48992
#, no-wrap
msgid "chroot /mnt /bin/sh\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:48998
msgid "Source the system profile as well as your @var{user} profile to setup the environment, where @var{user} is the user name used for the Guix System you are attempting to repair:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49002
#, no-wrap
msgid ""
"source /var/guix/profiles/system/profile/etc/profile\n"
"source /home/@var{user}/.guix-profile/etc/profile\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49006
msgid "To ensure you are working with the Guix revision you normally would as your normal user, also source your current Guix profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49009
#, no-wrap
msgid "source /home/@var{user}/.config/guix/current/etc/profile\n"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49013
msgid "Start a minimal @command{guix-daemon} in the background:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49016
#, fuzzy, no-wrap
#| msgid "# guix-daemon --build-users-group=guixbuild\n"
msgid "guix-daemon --build-users-group=guixbuild --disable-chroot &\n"
msgstr "# guix-daemon --build-users-group=guixbuild\n"

#. type: enumerate
#: guix-git/doc/guix.texi:49020
msgid "Edit your Guix System configuration if needed, then reconfigure with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49023
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix system reconfigure your-config.scm\n"
msgstr "$ guix system list-generations 10d\n"

#. type: enumerate
#: guix-git/doc/guix.texi:49027
msgid "Finally, you should be good to reboot the system to test your fix."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49032
#, no-wrap
msgid "home configuration"
msgstr "Configuração pessoal"

#. type: Plain text
#: guix-git/doc/guix.texi:49044
msgid "Guix supports declarative configuration of @dfn{home environments} by utilizing the configuration mechanism described in the previous chapter (@pxref{Defining Services}), but for user's dotfiles and packages.  It works both on Guix System and foreign distros and allows users to declare all the packages and services that should be installed and configured for the user.  Once a user has written a file containing a @code{home-environment} record, such a configuration can be @dfn{instantiated} by an unprivileged user with the @command{guix home} command (@pxref{Invoking guix home})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49055
msgid "The user's home environment usually consists of three basic parts: software, configuration, and state.  Software in mainstream distros are usually installed system-wide, but with GNU Guix most software packages can be installed on a per-user basis without needing root privileges, and are thus considered part of the user’s @dfn{home environment}.  Packages on their own are not very useful in many cases, because often they require some additional configuration, usually config files that reside in @env{XDG_CONFIG_HOME} (@file{~/.config} by default) or other directories.  Everything else can be considered state, like media files, application databases, and logs."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49058
msgid "Using Guix for managing home environments provides a number of advantages:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49061
#, no-wrap
msgid "All software can be configured in one language (Guile Scheme),"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49064
msgid "this gives users the ability to share values between configurations of different programs."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49065
#, no-wrap
msgid "A well-defined home environment is self-contained and can be"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49068
msgid "created in a declarative and reproducible way---there is no need to grab external binaries or manually edit some configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49069
#, no-wrap
msgid "After every @command{guix home reconfigure} invocation, a new home"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49073
msgid "environment generation will be created.  This means that users can rollback to a previous home environment generation so they don’t have to worry about breaking their configuration."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49074
#, no-wrap
msgid "It is possible to manage stateful data with Guix Home, this"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:49079
msgid "includes the ability to automatically clone Git repositories on the initial setup of the machine, and periodically running commands like @command{rsync} to sync data with another host.  This functionality is still in an experimental stage, though."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49096
msgid "The home environment is configured by providing a @code{home-environment} declaration in a file that can be passed to the @command{guix home} command (@pxref{Invoking guix home}).  The easiest way to get started is by generating an initial configuration with @command{guix home import}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49099
#, no-wrap
msgid "guix home import ~/src/guix-config\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49107
msgid "The @command{guix home import} command reads some of the ``dot files'' such as @file{~/.bashrc} found in your home directory and copies them to the given directory, @file{~/src/guix-config} in this case; it also reads the contents of your profile, @file{~/.guix-profile}, and, based on that, it populates @file{~/src/guix-config/home-configuration.scm} with a Home configuration that resembles your current configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49113
msgid "A simple setup can include Bash and a custom text configuration, like in the example below.  Don't be afraid to declare home environment parts, which overlaps with your current dot files: before installing any configuration files, Guix Home will back up existing config files to a separate place in the home directory."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49119
msgid "It is highly recommended that you manage your shell or shells with Guix Home, because it will make sure that all the necessary scripts are sourced by the shell configuration file.  Otherwise you will need to do it manually. (@pxref{Configuring the Shell})."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:49121
#, fuzzy, no-wrap
#| msgid "build environment"
msgid "home-environment"
msgstr "ambiente de compilação"

#. type: vindex
#: guix-git/doc/guix.texi:49122
#, fuzzy, no-wrap
#| msgid "home services"
msgid "%base-home-services"
msgstr "serviços pessoais"

#. type: include
#: guix-git/doc/guix.texi:49124
#, fuzzy, no-wrap
#| msgid "os-config-bare-bones.texi"
msgid "he-config-bare-bones.scm"
msgstr "os-config-bare-bones.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:49131
msgid "The @code{packages} field should be self-explanatory, it will install the list of packages into the user's profile.  The most important field is @code{services}, it contains a list of @dfn{home services}, which are the basic building blocks of a home environment."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49139
msgid "There is no daemon (at least not necessarily) related to a home service, a home service is just an element that is used to declare part of home environment and extend other parts of it.  The extension mechanism discussed in the previous chapter (@pxref{Defining Services}) should not be confused with Shepherd services (@pxref{Shepherd Services}).  Using this extension mechanism and some Scheme code that glues things together gives the user the freedom to declare their own, very custom, home environments."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49140 guix-git/doc/guix.texi:52417
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix size}"
msgid "container, for @command{guix home}"
msgstr "Invocando @command{guix size}"

#. type: Plain text
#: guix-git/doc/guix.texi:49143
msgid "Once the configuration looks good, you can first test it in a throw-away ``container'':"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49146 guix-git/doc/guix.texi:52427
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home container config.scm\n"
msgstr "$ guix system list-generations 10d\n"

#. type: Plain text
#: guix-git/doc/guix.texi:49154
msgid "The command above spawns a shell where your home environment is running.  The shell runs in a container, meaning it's isolated from the rest of the system, so it's a good way to try out your configuration---you can see if configuration bits are missing or misbehaving, if daemons get started, and so on.  Once you exit that shell, you're back to the prompt of your original shell ``in the real world''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49157
msgid "Once you have a configuration file that suits your needs, you can reconfigure your home by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49160
#, no-wrap
msgid "guix home reconfigure config.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49164
msgid "This ``builds'' your home environment and creates @file{~/.guix-home} pointing to it.  Voilà!"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49171
msgid "Make sure the operating system has elogind, systemd, or a similar mechanism to create the XDG run-time directory and has the @env{XDG_RUNTIME_DIR} variable set.  Failing that, the @file{on-first-login} script will not execute anything, and processes like user Shepherd and its descendants will not start."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49178
msgid "If you're using Guix System, you can embed your home configuration in your system configuration such that @command{guix system reconfigure} will deploy both the system @emph{and} your home at once! @xref{guix-home-service-type, @code{guix-home-service-type}}, for how to do that."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49183
msgid "This section is safe to skip if your shell or shells are managed by Guix Home.  Otherwise, read it carefully."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49190
msgid "There are a few scripts that must be evaluated by a login shell to activate the home environment.  The shell startup files only read by login shells often have @code{profile} suffix.  For more information about login shells see @ref{Invoking Bash,,, bash, The GNU Bash Reference Manual} and see @ref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49197
msgid "The first script that needs to be sourced is @file{setup-environment}, which sets all the necessary environment variables (including variables declared by the user) and the second one is @file{on-first-login}, which starts Shepherd for the current user and performs actions declared by other home services that extends @code{home-run-on-first-login-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49200
msgid "Guix Home will always create @file{~/.profile}, which contains the following lines:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49205
#, no-wrap
msgid ""
"HOME_ENVIRONMENT=$HOME/.guix-home\n"
". $HOME_ENVIRONMENT/setup-environment\n"
"$HOME_ENVIRONMENT/on-first-login\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49215
msgid "This makes POSIX compliant login shells activate the home environment.  However, in most cases this file won't be read by most modern shells, because they are run in non POSIX mode by default and have their own @file{*profile} startup files.  For example Bash will prefer @file{~/.bash_profile} in case it exists and only if it doesn't will it fallback to @file{~/.profile}.  Zsh (if no additional options are specified) will ignore @file{~/.profile}, even if @file{~/.zprofile} doesn't exist."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49220
msgid "To make your shell respect @file{~/.profile}, add @code{. ~/.profile} or @code{source ~/.profile} to the startup file for the login shell.  In case of Bash, it is @file{~/.bash_profile}, and in case of Zsh, it is @file{~/.zprofile}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49224
msgid "This step is only required if your shell is @emph{not} managed by Guix Home.  Otherwise, everything will be done automatically."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49228
#, no-wrap
msgid "home services"
msgstr "serviços pessoais"

#. type: Plain text
#: guix-git/doc/guix.texi:49237
msgid "A @dfn{home service} is not necessarily something that has a daemon and is managed by Shepherd (@pxref{Jump Start,,, shepherd, The GNU Shepherd Manual}), in most cases it doesn't.  It's a simple building block of the home environment, often declaring a set of packages to be installed in the home environment profile, a set of config files to be symlinked into @env{XDG_CONFIG_HOME} (@file{~/.config} by default), and environment variables to be set by a login shell."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49245
msgid "There is a service extension mechanism (@pxref{Service Composition})  which allows home services to extend other home services and utilize capabilities they provide; for example: declare mcron jobs (@pxref{Top,,, mcron, GNU@tie{}Mcron}) by extending @ref{Mcron Home Service}; declare daemons by extending @ref{Shepherd Home Service}; add commands, which will be invoked on by the Bash by extending @ref{Shells Home Services, @code{home-bash-service-type}}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49256
msgid "A good way to discover available home services is using the @command{guix home search} command (@pxref{Invoking guix home}).  After the required home services are found, include its module with the @code{use-modules} form (@pxref{use-modules,, Using Guile Modules, guile, The GNU Guile Reference Manual}), or the @code{#:use-modules} directive (@pxref{define-module,, Creating Guile Modules, guile, The GNU Guile Reference Manual}) and declare a home service using the @code{service} function, or extend a service type by declaring a new service with the @code{simple-service} procedure from @code{(gnu services)}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49285
msgid "There are a few essential home services defined in @code{(gnu home services)}, they are mostly for internal use and are required to build a home environment, but some of them will be useful for the end user."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49286
#, no-wrap
msgid "environment variables"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49288
#, fuzzy, no-wrap
msgid "home-environment-variables-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49293
msgid "The service of this type will be instantiated by every home environment automatically by default, there is no need to define it, but someone may want to extend it with a list of pairs to set some environment variables."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49297
#, no-wrap
msgid ""
"(list (\"ENV_VAR1\" . \"value1\")\n"
"      (\"ENV_VAR2\" . \"value2\"))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49302
msgid "The easiest way to extend a service type, without defining a new service type is to use the @code{simple-service} helper from @code{(gnu services)}."
msgstr ""

#. type: findex
#: guix-git/doc/guix.texi:49303
#, no-wrap
msgid "literal-string"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49312
#, no-wrap
msgid ""
"(simple-service 'some-useful-env-vars-service\n"
"\t\thome-environment-variables-service-type\n"
"\t\t`((\"LESSHISTFILE\" . \"$XDG_CACHE_HOME/.lesshst\")\n"
"                  (\"SHELL\" . ,(file-append zsh \"/bin/zsh\"))\n"
"                  (\"USELESS_VAR\" . #f)\n"
"                  (\"_JAVA_AWT_WM_NONREPARENTING\" . #t)\n"
"                  (\"LITERAL_VALUE\" . ,(literal-string \"$@{abc@}\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49317
msgid "If you include such a service in you home environment definition, it will add the following content to the @file{setup-environment} script (which is expected to be sourced by the login shell):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49323
#, no-wrap
msgid ""
"export LESSHISTFILE=\"$XDG_CACHE_HOME/.lesshst\"\n"
"export SHELL=\"/gnu/store/2hsg15n644f0glrcbkb1kqknmmqdar03-zsh-5.8/bin/zsh\"\n"
"export _JAVA_AWT_WM_NONREPARENTING\n"
"export LITERAL_VALUE='$@{abc@}'\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49329
msgid "Notice that @code{literal-string} above lets us declare that a value is to be interpreted as a @dfn{literal string}, meaning that ``special characters'' such as the dollar sign will not be interpreted by the shell."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49335
msgid "Make sure that module @code{(gnu packages shells)} is imported with @code{use-modules} or any other way, this namespace contains the definition of the @code{zsh} package, which is used in the example above."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49348
msgid "The association list (@pxref{Association Lists, alists, Association Lists, guile, The GNU Guile Reference manual}) is a data structure containing key-value pairs, for @code{home-environment-variables-service-type} the key is always a string, the value can be a string, string-valued gexp (@pxref{G-Expressions}), file-like object (@pxref{G-Expressions, file-like object}) or boolean.  For gexps, the variable will be set to the value of the gexp; for file-like objects, it will be set to the path of the file in the store (@pxref{The Store}); for @code{#t}, it will export the variable without any value; and for @code{#f}, it will omit variable."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49351
#, fuzzy, no-wrap
msgid "home-profile-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49357
msgid "The service of this type will be instantiated by every home environment automatically, there is no need to define it, but you may want to extend it with a list of packages if you want to install additional packages into your profile.  Other services, which need to make some programs available to the user will also extend this service type."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49359
msgid "The extension value is just a list of packages:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49362
#, no-wrap
msgid "(list htop vim emacs)\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49372
msgid "The same approach as @code{simple-service} (@pxref{Service Reference, simple-service}) for @code{home-environment-variables-service-type} can be used here, too.  Make sure that modules containing the specified packages are imported with @code{use-modules}.  To find a package or information about its module use @command{guix search} (@pxref{Invoking guix package}).  Alternatively, @code{specification->package} can be used to get the package record from a string without importing its related module."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49376
msgid "There are few more essential services, but users are not expected to extend them."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49377
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49382
msgid "The root of home services DAG, it generates a folder, which later will be symlinked to @file{~/.guix-home}, it contains configurations, profile with binaries and libraries, and some necessary scripts to glue things together."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49384
#, fuzzy, no-wrap
msgid "home-run-on-first-login-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49389
msgid "The service of this type generates a Guile script, which is expected to be executed by the login shell.  It is only executed if the special flag file inside @env{XDG_RUNTIME_DIR} hasn't been created, this prevents redundant executions of the script if multiple login shells are spawned."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49395
msgid "It can be extended with a gexp.  However, to autostart an application, users @emph{should not} use this service, in most cases it's better to extend @code{home-shepherd-service-type} with a Shepherd service (@pxref{Shepherd Services}), or extend the shell's startup file with the required command using the appropriate service type."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49397
#, fuzzy, no-wrap
msgid "home-files-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49404
msgid "The service of this type allows to specify a list of files, which will go to @file{~/.guix-home/files}, usually this directory contains configuration files (to be more precise it contains symlinks to files in @file{/gnu/store}), which should be placed in @file{$XDG_CONFIG_HOME} or in rare cases in @file{$HOME}.  It accepts extension values in the following format:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49408
#, no-wrap
msgid ""
"`((\".sway/config\" ,sway-file-like-object)\n"
"  (\".tmux.conf\" ,(local-file \"./tmux.conf\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49421
msgid "Each nested list contains two values: a subdirectory and file-like object.  After building a home environment @file{~/.guix-home/files} will be populated with appropriate content and all nested directories will be created accordingly, however, those files won't go any further until some other service will do it.  By default a @code{home-symlink-manager-service-type}, which creates necessary symlinks in home folder to files from @file{~/.guix-home/files} and backs up already existing, but clashing configs and other things, is a part of essential home services (enabled by default), but it's possible to use alternative services to implement more advanced use cases like read-only home.  Feel free to experiment and share your results."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49423
#, no-wrap
msgid "dot files in Guix Home"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49427
msgid "It is often the case that Guix Home users already have a setup for versioning their user configuration files (also known as @emph{dot files}) in a single directory, and some way of automatically deploy changes to their user home."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49428
#, fuzzy, no-wrap
#| msgid "Power Management Services"
msgid "Stow-like dot file management"
msgstr "Serviços de gerenciamento de energia"

#. type: Plain text
#: guix-git/doc/guix.texi:49433
msgid "The @code{home-dotfiles-service-type} from @code{(gnu home services dotfiles)} is designed to ease the way into using Guix Home for this kind of users, allowing them to point the service to their dotfiles directory without migrating them to Guix native configurations."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49437
msgid "Please keep in mind that it is advisable to keep your dotfiles directories under version control, for example in the same repository where you'd track your Guix Home configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49440
msgid "There are two supported dotfiles directory layouts, for now. The @code{'plain} layout, which is structured as follows:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49457
#, no-wrap
msgid ""
"~$ tree -a ./dotfiles/\n"
"dotfiles/\n"
"├── .gitconfig\n"
"├── .gnupg\n"
"│   ├── gpg-agent.conf\n"
"│   └── gpg.conf\n"
"├── .guile\n"
"├── .config\n"
"│   ├── guix\n"
"│   │   └── channels.scm\n"
"│   └── nixpkgs\n"
"│       └── config.nix\n"
"├── .nix-channels\n"
"├── .tmux.conf\n"
"└── .vimrc\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49461
msgid "This tree structure is installed as is to the home directory upon @command{guix home reconfigure}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49466
msgid "The @code{'stow} layout, which must follow the layout suggested by @uref{https://www.gnu.org/software/stow/, GNU Stow} presents an additional application specific directory layer, just like:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49491
#, no-wrap
msgid ""
"~$ tree -a ./dotfiles/\n"
"dotfiles/\n"
"├── git\n"
"│   └── .gitconfig\n"
"├── gpg\n"
"│   └── .gnupg\n"
"│       ├── gpg-agent.conf\n"
"│       └── gpg.conf\n"
"├── guile\n"
"│   └── .guile\n"
"├── guix\n"
"│   └── .config\n"
"│       └── guix\n"
"│           └── channels.scm\n"
"├── nix\n"
"│   ├── .config\n"
"│   │   └── nixpkgs\n"
"│   │       └── config.nix\n"
"│   └── .nix-channels\n"
"├── tmux\n"
"│   └── .tmux.conf\n"
"└── vim\n"
"    └── .vimrc\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49493
#, no-wrap
msgid "13 directories, 10 files\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49499
msgid "For an informal specification please refer to the Stow manual (@pxref{Introduction,,, stow, The GNU Stow Manual}). This tree structure is installed following GNU Stow's logic to the home directory upon @command{guix home reconfigure}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49501
msgid "A suitable configuration with a @code{'plain} layout could be:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49509
#, no-wrap
msgid ""
"(home-environment\n"
"  ;; @dots{}\n"
"  (services\n"
"    (service home-dotfiles-service-type\n"
"             (home-dotfiles-configuration\n"
"               (directories '(\"./dotfiles\"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49512
msgid "The expected home directory state would then be:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49528
#, no-wrap
msgid ""
".\n"
"├── .config\n"
"│   ├── guix\n"
"│   │   └── channels.scm\n"
"│   └── nixpkgs\n"
"│       └── config.nix\n"
"├── .gitconfig\n"
"├── .gnupg\n"
"│   ├── gpg-agent.conf\n"
"│   └── gpg.conf\n"
"├── .guile\n"
"├── .nix-channels\n"
"├── .tmux.conf\n"
"└── .vimrc\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49530
#, fuzzy, no-wrap
msgid "home-dotfiles-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49538
msgid "Return a service which is very similar to @code{home-files-service-type} (and actually extends it), but designed to ease the way into using Guix Home for users that already track their dotfiles under some kind of version control.  This service allows users to point Guix Home to their dotfiles directory and have their files automatically provisioned to their home directory, without migrating all of their dotfiles to Guix native configurations."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49542
#, no-wrap
msgid "{Data Type} home-dotfiles-configuration"
msgstr "{Tipo de dados} home-dotfiles-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:49544
#, fuzzy
msgid "Available @code{home-dotfiles-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:49546
#, fuzzy, no-wrap
msgid "@code{source-directory} (default: @code{(current-source-directory)}) (type: string)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49550
msgid "The path where dotfile directories are resolved.  By default dotfile directories are resolved relative the source location where @code{home-dotfiles-configuration} appears."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49551
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{layout} (default: @code{'plain}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49554
msgid "The intended layout of the specified @code{directory}.  It can be either @code{'stow} or @code{'plain}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49555
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{directories} (default: @code{'()}) (type: list-of-strings)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49558
msgid "The list of dotfiles directories where @code{home-dotfiles-service-type} will look for application dotfiles."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49559
#, fuzzy, no-wrap
msgid "@code{packages} (type: maybe-list-of-strings)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49564
msgid "The names of a subset of the GNU Stow package layer directories.  When provided the @code{home-dotfiles-service-type} will only provision dotfiles from this subset of applications.  This field will be ignored if @code{layout} is set to @code{'plain}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49565
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{excluded} (default: @code{'(\".*~\" \".*\\\\.swp\" \"\\\\.git\" \"\\\\.gitignore\")}) (type: list-of-strings)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49568
msgid "The list of file patterns @code{home-dotfiles-service-type} will exclude while visiting each one of the @code{directories}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49576
#, fuzzy, no-wrap
msgid "home-xdg-configuration-files-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49583
msgid "The service is very similar to @code{home-files-service-type} (and actually extends it), but used for defining files, which will go to @file{~/.guix-home/files/.config}, which will be symlinked to @file{$XDG_CONFIG_HOME} by @code{home-symlink-manager-service-type} (for example) during activation.  It accepts extension values in the following format:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49589
#, no-wrap
msgid ""
"`((\"sway/config\" ,sway-file-like-object)\n"
"  ;; -> ~/.guix-home/files/.config/sway/config\n"
"  ;; -> $XDG_CONFIG_HOME/sway/config (by symlink-manager)\n"
"  (\"tmux/tmux.conf\" ,(local-file \"./tmux.conf\")))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49592
#, fuzzy, no-wrap
msgid "home-activation-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49596
msgid "The service of this type generates a guile script, which runs on every @command{guix home reconfigure} invocation or any other action, which leads to the activation of the home environment."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49598
#, fuzzy, no-wrap
msgid "home-symlink-manager-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49602
msgid "The service of this type generates a guile script, which will be executed during activation of home environment, and do a few following steps:"
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49607
msgid "Reads the content of @file{files/} directory of current and pending home environments."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49612
msgid "Cleans up all symlinks created by symlink-manager on previous activation.  Also, sub-directories, which become empty also will be cleaned up."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49625
msgid "Creates new symlinks the following way: It looks @file{files/} directory (usually defined with @code{home-files-service-type}, @code{home-xdg-configuration-files-service-type} and maybe some others), takes the files from @file{files/.config/} subdirectory and put respective links in @env{XDG_CONFIG_HOME}.  For example symlink for @file{files/.config/sway/config} will end up in @file{$XDG_CONFIG_HOME/sway/config}.  The rest files in @file{files/} outside of @file{files/.config/} subdirectory will be treated slightly different: symlink will just go to @file{$HOME}.  @file{files/.some-program/config} will end up in @file{$HOME/.some-program/config}."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49628
msgid "If some sub-directories are missing, they will be created."
msgstr ""

#. type: enumerate
#: guix-git/doc/guix.texi:49631
msgid "If there is a clashing files on the way, they will be backed up."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49636
msgid "symlink-manager is a part of essential home services and is enabled and used by default."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:49639
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "Shells Home Services"
msgstr "Serviços de Shepherd"

#. type: subsection
#: guix-git/doc/guix.texi:49640
#, no-wrap
msgid "Shells"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49642 guix-git/doc/guix.texi:52379
#, no-wrap
msgid "shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49643
#, no-wrap
msgid "login shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49644
#, no-wrap
msgid "interactive shell"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49645 guix-git/doc/guix.texi:52381
#, no-wrap
msgid "bash"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49646 guix-git/doc/guix.texi:52382
#, no-wrap
msgid "zsh"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49652
msgid "Shells play a quite important role in the environment initialization process, you can configure them manually as described in section @ref{Configuring the Shell}, but the recommended way is to use home services listed below.  It's both easier and more reliable."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49662
msgid "Each home environment instantiates @code{home-shell-profile-service-type}, which creates a @file{~/.profile} startup file for all POSIX-compatible shells.  This file contains all the necessary steps to properly initialize the environment, but many modern shells like Bash or Zsh prefer their own startup files, that's why the respective home services (@code{home-bash-service-type} and @code{home-zsh-service-type}) ensure that @file{~/.profile} is sourced by @file{~/.bash_profile} and @file{~/.zprofile}, respectively."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:49663
#, fuzzy, no-wrap
#| msgid "Certificate Services"
msgid "Shell Profile Service"
msgstr "Serviços de certificado"

#. type: deftp
#: guix-git/doc/guix.texi:49665
#, no-wrap
msgid "{Data Type} home-shell-profile-configuration"
msgstr "{Tipo de dados} home-shell-profile-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:49667
msgid "Available @code{home-shell-profile-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49669
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{profile} (default: @code{'()}) (type: text-config)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49679
msgid "@code{home-shell-profile} is instantiated automatically by @code{home-environment}, DO NOT create this service manually, it can only be extended.  @code{profile} is a list of file-like objects, which will go to @file{~/.profile}.  By default @file{~/.profile} contains the initialization code which must be evaluated by the login shell to make home-environment's profile available to the user, but other commands can be added to the file if it is really necessary.  In most cases shell's configuration files are preferred places for user's customizations.  Extend home-shell-profile service only if you really know what you do."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:49684
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Bash Home Service"
msgstr "Serviços base"

#. type: anchor{#1}
#: guix-git/doc/guix.texi:49687
#, fuzzy
#| msgid "System Configuration"
msgid "home-bash-configuration"
msgstr "Configuração do sistema"

#. type: deftp
#: guix-git/doc/guix.texi:49687
#, no-wrap
msgid "{Data Type} home-bash-configuration"
msgstr "{Tipo de dados} home-bash-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:49689
msgid "Available @code{home-bash-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49691
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{bash}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49693
#, fuzzy
#| msgid "The GPM package to use."
msgid "The Bash package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:49694
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{guix-defaults?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49700
msgid "Add sane defaults like setting @env{PS1}, @env{SHELL}, and ensuring @file{/etc/profile} is sourced for non-interactive SSH shells.  If you use Guix System, is it safe to set this to @code{#f}, as in this case this is already taken care of by the globally installed @file{/etc/bashrc}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49701 guix-git/doc/guix.texi:49772
#: guix-git/doc/guix.texi:49811
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{environment-variables} (default: @code{'()}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49706
msgid "Association list of environment variables to set for the Bash session.  The rules for the @code{home-environment-variables-service-type} apply here (@pxref{Essential Home Services}).  The contents of this field will be added after the contents of the @code{bash-profile} field."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49707
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{aliases} (default: @code{%default-bash-aliases}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49712
msgid "Association list of aliases to set for the Bash session.  The aliases will be defined after the contents of the @code{bashrc} field has been put in the @file{.bashrc} file.  The alias will automatically be quoted, so something like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49715
#, no-wrap
msgid "'((\"ls\" . \"ls -alF\"))\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49718 guix-git/doc/guix.texi:49921
#: guix-git/doc/guix.texi:49935 guix-git/doc/guix.texi:49960
msgid "turns into"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49721
#, no-wrap
msgid "alias ls=\"ls -alF\"\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49723 guix-git/doc/guix.texi:49781
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{bash-profile} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49728
msgid "List of file-like objects, which will be added to @file{.bash_profile}.  Used for executing user's commands at start of login shell (In most cases the shell started on tty just after login).  @file{.bash_login} won't be ever read, because @file{.bash_profile} always present."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49729 guix-git/doc/guix.texi:49785
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{bashrc} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49734
msgid "List of file-like objects, which will be added to @file{.bashrc}.  Used for executing user's commands at start of interactive shell (The shell for interactive usage started by typing @code{bash} or by terminal app or any other program)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49735 guix-git/doc/guix.texi:49789
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{bash-logout} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49740
msgid "List of file-like objects, which will be added to @file{.bash_logout}.  Used for executing user's commands at the exit of login shell.  It won't be read in some cases (if the shell terminates by exec'ing another process for example)."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49750
msgid "You can extend the Bash service by using the @code{home-bash-extension} configuration record, whose fields must mirror that of @code{home-bash-configuration} (@pxref{home-bash-configuration}).  The contents of the extensions will be added to the end of the corresponding Bash configuration files (@pxref{Bash Startup Files,,, bash, The GNU Bash Reference Manual}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49754
msgid "For example, here is how you would define a service that extends the Bash service such that @file{~/.bash_profile} defines an additional environment variable, @env{PS1}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49762
#, no-wrap
msgid ""
"(define bash-fancy-prompt-service\n"
"  (simple-service 'bash-fancy-prompt\n"
"                  home-bash-service-type\n"
"                  (home-bash-extension\n"
"                   (environment-variables\n"
"                    '((\"PS1\" . \"\\\\u \\\\wλ \"))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49767
msgid "You would then add @code{bash-fancy-prompt-service} to the list in the @code{services} field of your @code{home-environment}.  The reference of @code{home-bash-extension} follows."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:49768
#, no-wrap
msgid "{Data Type} home-bash-extension"
msgstr "{Tipo de dados} home-bash-extension"

#. type: deftp
#: guix-git/doc/guix.texi:49770
msgid "Available @code{home-bash-extension} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49776
msgid "Additional environment variables to set.  These will be combined with the environment variables from other extensions and the base service to form one coherent block of environment variables."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49777
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{aliases} (default: @code{'()}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49780
msgid "Additional aliases to set.  These will be combined with the aliases from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49784
msgid "Additional text blocks to add to @file{.bash_profile}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49788
msgid "Additional text blocks to add to @file{.bashrc}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49792
msgid "Additional text blocks to add to @file{.bash_logout}, which will be combined with text blocks from other extensions and the base service."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:49796
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Zsh Home Service"
msgstr "Serviços de jogos"

#. type: deftp
#: guix-git/doc/guix.texi:49798
#, no-wrap
msgid "{Data Type} home-zsh-configuration"
msgstr "{Tipo de dados} home-zsh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:49800
msgid "Available @code{home-zsh-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49802
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{package} (default: @code{zsh}) (type: package)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49804
#, fuzzy
#| msgid "The GPM package to use."
msgid "The Zsh package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:49805
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{xdg-flavor?} (default: @code{#t}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49810
msgid "Place all the configs to @file{$XDG_CONFIG_HOME/zsh}.  Makes @file{~/.zshenv} to set @env{ZDOTDIR} to @file{$XDG_CONFIG_HOME/zsh}.  Shell startup process will continue with @file{$XDG_CONFIG_HOME/zsh/.zshenv}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:49813
msgid "Association list of environment variables to set for the Zsh session."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49814
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{zshenv} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49819
msgid "List of file-like objects, which will be added to @file{.zshenv}.  Used for setting user's shell environment variables.  Must not contain commands assuming the presence of tty or producing output.  Will be read always.  Will be read before any other file in @env{ZDOTDIR}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49820
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{zprofile} (default: @code{'()}) (type: text-config)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49825
msgid "List of file-like objects, which will be added to @file{.zprofile}.  Used for executing user's commands at start of login shell (In most cases the shell started on tty just after login).  Will be read before @file{.zlogin}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49826
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{zshrc} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49831
msgid "List of file-like objects, which will be added to @file{.zshrc}.  Used for executing user's commands at start of interactive shell (The shell for interactive usage started by typing @code{zsh} or by terminal app or any other program)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49832
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{zlogin} (default: @code{'()}) (type: text-config)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49836
msgid "List of file-like objects, which will be added to @file{.zlogin}.  Used for executing user's commands at the end of starting process of login shell."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49837
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{zlogout} (default: @code{'()}) (type: text-config)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:49842
msgid "List of file-like objects, which will be added to @file{.zlogout}.  Used for executing user's commands at the exit of login shell.  It won't be read in some cases (if the shell terminates by exec'ing another process for example)."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:49847
#, fuzzy, no-wrap
#| msgid "Certificate Services"
msgid "Inputrc Profile Service"
msgstr "Serviços de certificado"

#. type: cindex
#: guix-git/doc/guix.texi:49848
#, no-wrap
msgid "inputrc"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49849
#, no-wrap
msgid "readline"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49858
msgid "The @uref{https://tiswww.cwru.edu/php/chet/readline/rltop.html, GNU Readline package} includes Emacs and vi editing modes, with the ability to customize the configuration with settings in the @file{~/.inputrc} file.  With the @code{gnu home services shells} module, you can setup your readline configuration in a predictable manner, as shown below.  For more information about configuring an @file{~/.inputrc} file, @pxref{Readline Init File,,, readline, GNU Readline}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49859
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-inputrc-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:49864
msgid "This is the service to setup various @file{.inputrc} configurations. The settings in @file{.inputrc} are read by all programs which are linked with GNU Readline."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49867 guix-git/doc/guix.texi:50259
#: guix-git/doc/guix.texi:50513 guix-git/doc/guix.texi:51284
#: guix-git/doc/guix.texi:51346 guix-git/doc/guix.texi:51817
msgid "Here is an example of a service and its configuration that you could add to the @code{services} field of your @code{home-environment}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49893
#, no-wrap
msgid ""
"(service home-inputrc-service-type\n"
"         (home-inputrc-configuration\n"
"           (key-bindings\n"
"            `((\"Control-l\" . \"clear-screen\")))\n"
"           (variables\n"
"            `((\"bell-style\" . \"visible\")\n"
"              (\"colored-completion-prefix\" . #t)\n"
"              (\"editing-mode\" . \"vi\")\n"
"              (\"show-mode-in-prompt\" . #t)))\n"
"           (conditional-constructs\n"
"            `((\"$if mode=vi\" .\n"
"               ,(home-inputrc-configuration\n"
"                  (variables\n"
"                   `((\"colored-stats\" . #t)\n"
"                     (\"enable-bracketed-paste\" . #t)))))\n"
"              (\"$else\" .\n"
"               ,(home-inputrc-configuration\n"
"                  (variables\n"
"                   `((\"show-all-if-ambiguous\" . #t)))))\n"
"              (\"endif\" . #t)\n"
"              (\"$include\" . \"/etc/inputrc\")\n"
"              (\"$include\" . ,(file-append\n"
"                               (specification->package \"readline\")\n"
"                               \"/etc/inputrc\"))))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49901
msgid "The example above starts with a combination of @code{key-bindings} and @code{variables}.  The @code{conditional-constructs} show how it is possible to add conditionals and includes.  In the example above @code{colored-stats} is only enabled if the editing mode is @code{vi} style, and it also reads any additional configuration located in @file{/etc/inputrc} or in @file{/gnu/store/@dots{}-readline/etc/inputrc}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49904
msgid "The value associated with a @code{home-inputrc-service-type} instance must be a @code{home-inputrc-configuration} record, as described below."
msgstr ""

#. type: anchor{#1}
#: guix-git/doc/guix.texi:49908
#, fuzzy
#| msgid "System Configuration"
msgid "home-inputrc-configuration"
msgstr "Configuração do sistema"

#. type: deftp
#: guix-git/doc/guix.texi:49908
#, no-wrap
msgid "{Data Type} home-inputrc-configuration"
msgstr "{Tipo de dados} home-inputrc-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:49910
#, fuzzy
msgid "Available @code{home-inputrc-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:49912
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{key-bindings} (default: @code{'()}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49915
msgid "Association list of readline key bindings to be added to the @file{~/.inputrc} file."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49918
#, no-wrap
msgid "'((\\\"Control-l\\\" . \\\"clear-screen\\\"))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49924
#, no-wrap
msgid "Control-l: clear-screen\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49926
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{variables} (default: @code{'()}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49928
msgid "Association list of readline variables to set."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49932
#, no-wrap
msgid ""
"'((\\\"bell-style\\\" . \\\"visible\\\")\n"
"  (\\\"colored-completion-prefix\\\" . #t))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49939
#, no-wrap
msgid ""
"set bell-style visible\n"
"set colored-completion-prefix on\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49941
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{conditional-constructs} (default: @code{'()}) (type: alist)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49945
msgid "Association list of conditionals to add to the initialization file.  This includes @command{$if}, @command{else}, @command{endif} and @command{include} and they receive a value of another @command{home-inputrc-configuration}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:49957
#, no-wrap
msgid ""
"(conditional-constructs\n"
" `((\\\"$if mode=vi\\\" .\n"
"     ,(home-inputrc-configuration\n"
"        (variables\n"
"         `((\\\"show-mode-in-prompt\\\" . #t)))))\n"
"   (\\\"$else\\\" .\n"
"     ,(home-inputrc-configuration\n"
"        (key-bindings\n"
"         `((\\\"Control-l\\\" . \\\"clear-screen\\\")))))\n"
"   (\\\"$endif\\\" . #t)))\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:49967
#, no-wrap
msgid ""
"$if mode=vi\n"
"set show-mode-in-prompt on\n"
"$else\n"
"Control-l: clear-screen\n"
"$endif\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:49969
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{extra-content} (default: @code{\"\"}) (type: text-config)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:49972
msgid "Extra content appended as-is to the configuration file.  Run @command{man readline} for more information about all the configuration options."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:49976
#, fuzzy, no-wrap
#| msgid "Monitoring Services"
msgid "Mcron Home Service"
msgstr "Serviços de monitoramento"

#. type: subsection
#: guix-git/doc/guix.texi:49977
#, no-wrap
msgid "Scheduled User's Job Execution"
msgstr "Execução de trabalho agendado pessoal"

#. type: cindex
#: guix-git/doc/guix.texi:49979
#, no-wrap
msgid "cron, per-user"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49980
#, no-wrap
msgid "mcron, per-user"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:49981
#, no-wrap
msgid "scheduling jobs per-user"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:49989
msgid "The @code{(gnu home services mcron)} module provides an interface to GNU@tie{}mcron, a daemon to run jobs at scheduled times (@pxref{Top,,, mcron, GNU@tie{}mcron}).  The information about system's mcron is applicable here (@pxref{mcron-service, mcron reference}), the only difference for home services is that they have to be declared in a @code{home-environment} record instead of an @code{operating-system} record."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:49994
msgid "We recommend defining periodic tasks as Shepherd timers, which provide more flexibility than mcron.  @xref{Shepherd Home Service}, for more info."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:49996
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-mcron-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50000
msgid "This is the type of the @code{mcron} home service, whose value is a @code{home-mcron-configuration} object.  It allows to manage scheduled tasks."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50007
#, no-wrap
msgid "{Data Type} home-mcron-configuration"
msgstr "{Tipo de dados} home-mcron-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50009
#, fuzzy
msgid "Available @code{home-mcron-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:50030
msgid "@code{(ice-9 format)} format string for log messages.  The default value produces messages like \"@samp{@var{pid} @var{name}: @var{message}\"} (@pxref{Invoking mcron, Invoking,, mcron,GNU@tie{}mcron}).  Each message is also prefixed by a timestamp by GNU Shepherd."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50035 guix-git/doc/guix.texi:50036
#, fuzzy, no-wrap
#| msgid "Power Management Services"
msgid "Power Management Home Services"
msgstr "Serviços de gerenciamento de energia"

#. type: cindex
#: guix-git/doc/guix.texi:50038
#, fuzzy, no-wrap
#| msgid "Power Management Services"
msgid "power management"
msgstr "Serviços de gerenciamento de energia"

#. type: Plain text
#: guix-git/doc/guix.texi:50041
msgid "The @code{(gnu home services pm)} module provides home services pertaining to battery power."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50042
#, fuzzy, no-wrap
msgid "home-batsignal-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50048
msgid "Service for @code{batsignal}, a program that monitors battery levels and warns the user through desktop notifications when their battery is getting low.  You can also configure a command to be run when the battery level passes a point deemed ``dangerous''.  This service is configured with the @code{home-batsignal-configuration} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50050
#, no-wrap
msgid "{Data Type} home-batsignal-configuration"
msgstr "{Tipo de dados} home-batsignal-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50052
#, fuzzy
msgid "Data type representing the configuration for batsignal."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:50054
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{warning-level} (default: @code{15})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:50056
msgid "The battery level to send a warning message at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50057
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{warning-message} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50061
msgid "The message to send as a notification when the battery level reaches the @code{warning-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50062
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{critical-level} (default: @code{5})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:50064
msgid "The battery level to send a critical message at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50065
#, fuzzy, no-wrap
#| msgid "@code{challenge} (default: @code{#f})"
msgid "@code{critical-message} (default: @code{#f})"
msgstr "@code{challenge} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50069
msgid "The message to send as a notification when the battery level reaches the @code{critical-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50070
#, fuzzy, no-wrap
#| msgid "@code{log-level} (default: @code{'info})"
msgid "@code{danger-level} (default: @code{2})"
msgstr "@code{log-level} (default: @code{'info})"

#. type: table
#: guix-git/doc/guix.texi:50072
msgid "The battery level to run the @code{danger-command} at."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50073
#, fuzzy, no-wrap
#| msgid "@code{domain} (default: @code{#f})"
msgid "@code{danger-command} (default: @code{#f})"
msgstr "@code{domain} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50076
msgid "The command to run when the battery level reaches the @code{danger-level}.  Setting to @code{#f} disables running the command entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50077
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{full-level} (default: @code{#f})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50080
msgid "The battery level to send a full message at.  Setting to @code{#f} disables sending the full message entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50081
#, fuzzy, no-wrap
#| msgid "@code{file} (default: @code{#f})"
msgid "@code{full-message} (default: @code{#f})"
msgstr "@code{file} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50084
msgid "The message to send as a notification when the battery level reaches the @code{full-level}.  Setting to @code{#f} uses the default message."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50085
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{batteries} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:50088
msgid "The batteries to monitor.  Setting to @code{'()} tries to find batteries automatically."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50089
#, fuzzy, no-wrap
#| msgid "@code{delay} (default: @code{#f})"
msgid "@code{poll-delay} (default: @code{60})"
msgstr "@code{delay} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50091
msgid "The time in seconds to wait before checking the batteries again."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50092
#, fuzzy, no-wrap
#| msgid "@code{nice} (default: @code{#f})"
msgid "@code{icon} (default: @code{#f})"
msgstr "@code{nice} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50095
msgid "A file-like object to use as the icon for battery notifications.  Setting to @code{#f} disables notification icons entirely."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50096
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{notifications?} (default: @code{#t})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50098
msgid "Whether to send any notifications."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50099
#, fuzzy, no-wrap
#| msgid "@code{options} (default: @code{#f})"
msgid "@code{notifications-expire?} (default: @code{#f})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50101
msgid "Whether notifications sent expire after a time."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50102
#, fuzzy, no-wrap
#| msgid "@code{authentication-hook} (default: @code{#f})"
msgid "@code{notification-command} (default: @code{#f})"
msgstr "@code{authentication-hook} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50105
msgid "Command to use to send messages.  Setting to @code{#f} sends a notification through @code{libnotify}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50106
#, fuzzy, no-wrap
#| msgid "@code{ignore-lid?} (default: @code{#f})"
msgid "@code{ignore-missing?} (default: @code{#f})"
msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50108
msgid "Whether to ignore missing battery errors."
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:50111
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "Shepherd Home Service"
msgstr "Serviços de Shepherd"

#. type: subsection
#: guix-git/doc/guix.texi:50112
#, fuzzy, no-wrap
#| msgid "Messaging services."
msgid "Managing User Daemons"
msgstr "Serviços de mensageria."

#. type: cindex
#: guix-git/doc/guix.texi:50114
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "shepherd services, for users"
msgstr "Serviços de Shepherd"

#. type: Plain text
#: guix-git/doc/guix.texi:50121
msgid "The @code{(gnu home services shepherd)} module supports the definitions of per-user Shepherd services (@pxref{Introduction,,, shepherd, The GNU Shepherd Manual}).  You extend @code{home-shepherd-service-type} with new services; Guix Home then takes care of starting the @code{shepherd} daemon for you when you log in, which in turns starts the services you asked for."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50122
#, fuzzy, no-wrap
msgid "home-shepherd-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50127
msgid "The service type for the userland Shepherd, which allows one to manage long-running processes or one-shot tasks.  User's Shepherd is not an init process (PID 1), but almost all other information described in (@pxref{Shepherd Services}) is applicable here too."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50132
msgid "This is the service type that extensions target when they want to create shepherd services (@pxref{Service Types and Services}, for an example).  Each extension must pass a list of @code{<shepherd-service>}.  Its value must be a @code{home-shepherd-configuration}, as described below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50134
#, no-wrap
msgid "{Data Type} home-shepherd-configuration"
msgstr "{Tipo de dados} home-shepherd-configuration"

#. type: item
#: guix-git/doc/guix.texi:50141
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "auto-start? (default: @code{#t})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50143
msgid "Whether or not to start Shepherd on first login."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50144
#, fuzzy, no-wrap
#| msgid "@code{mount?} (default: @code{#t})"
msgid "daemonize? (default: @code{#t})"
msgstr "@code{mount?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50146
msgid "Whether or not to run Shepherd in the background."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50147
#, fuzzy, no-wrap
#| msgid "@code{mount?} (default: @code{#t})"
msgid "silent? (default: @code{#t})"
msgstr "@code{mount?} (default: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50150
msgid "When true, the @command{shepherd} process does not write anything to standard output when started automatically."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50158
#, no-wrap
msgid "timers, per-user"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50163
msgid "The Shepherd allows you to define @dfn{timers}, a special type of service that performs a given task periodically.  Just like you can define timers at the system level (@pxref{Scheduled Job Execution}), you can do so in your home environment."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50172
msgid "The example below defines a home environment where a Shepherd timer runs the @command{mkid} command twice per day (@pxref{mkid invocation,,, idutils, ID Database Utilities}).  It does so by extending @code{home-shepherd-service-type} with @code{simple-service}; the Shepherd timer itself is produced by the @code{shepherd-timer} procedure (@pxref{shepherd-timer-procedure, @code{shepherd-timer}}), which is given the service name, a gexp specifying its schedule, and a gexp specifying the command to run."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50177
#, fuzzy, no-wrap
#| msgid ""
#| "(use-modules (guix packages)\n"
#| "             (gnu packages gdb)               ;for 'gdb'\n"
#| "             (gnu packages version-control))  ;for 'git'\n"
#| "\n"
msgid ""
"(use-modules (gnu) (guix)\n"
"             (gnu home services shepherd)\n"
"             (gnu packages idutils))\n"
"\n"
msgstr ""
"(use-modules (guix packages)\n"
"             (gnu packages gdb)               ;para 'gdb'\n"
"             (gnu packages version-control))  ;para 'git'\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:50187
#, no-wrap
msgid ""
"(define idutils-service\n"
"  ;; Index my 'doc' directory everyday at 12:15PM and 7:15PM.\n"
"  (simple-service\n"
"   'update-idutils-database home-shepherd-service-type\n"
"   (list (shepherd-timer '(update-idutils-database)\n"
"                         #~(calendar-event #:hours '(12 19)\n"
"                                           #:minutes '(15))\n"
"                         #~(#$(file-append idutils \"/bin/mkid\")\n"
"                            \"doc\")))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50192
#, no-wrap
msgid ""
"(home-environment\n"
"  ;; @dots{}\n"
"  (services (append (list idutils-service)\n"
"                    %base-home-services)))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50197
#, fuzzy, no-wrap
msgid "log rotation, for user services"
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:50202
msgid "The Shepherd also comes with a @dfn{log rotation service}, which compresses and then deletes old log files produced by services and daemons that it runs.  This service is made available through @code{home-log-rotation-service-type} as described below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50203
#, fuzzy, no-wrap
msgid "home-log-rotation-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50209
msgid "This is the service type for the user Shepherd log rotation service (@pxref{Log Rotation Service,,, shepherd, The GNU Shepherd Manual}).  Its value must be a @code{log-rotation-configuration} record, exactly as for its system-wide counterpart.  @xref{log-rotation-configuration}, for its reference."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50211
#, fuzzy
#| msgid "Core services such as @code{home-files-service-type}."
msgid "This service is part of @code{%base-home-services}."
msgstr "Serviços principais como @code{home-files-service-type}."

#. type: defvar
#: guix-git/doc/guix.texi:50213
#, fuzzy, no-wrap
msgid "home-shepherd-transient-service-type"
msgstr "guix-publish-service-type"

#. type: defvarx
#: guix-git/doc/guix.texi:50214
#, fuzzy, no-wrap
msgid "home-shepherd-timer-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50218
msgid "These are the @code{timer} and @code{transient} Shepherd services.  The former lets you schedule command execution for later, while the latter can run commands in the background as a regular service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50222
msgid "@xref{shepherd-transient-timer-services, the system @code{timer} and @code{transient} services}, which are their Guix System counterparts, for more info."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50224 guix-git/doc/guix.texi:50225
#, no-wrap
msgid "Secure Shell"
msgstr "Secure Shell"

#. type: cindex
#: guix-git/doc/guix.texi:50227
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "secure shell client, configuration"
msgstr "Configuração do git"

#. type: cindex
#: guix-git/doc/guix.texi:50228
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "SSH client, configuration"
msgstr "Configuração do git"

#. type: Plain text
#: guix-git/doc/guix.texi:50236
msgid "The @uref{https://www.openssh.com, OpenSSH package} includes a client, the @command{ssh} command, that allows you to connect to remote machines using the @acronym{SSH, secure shell} protocol.  With the @code{(gnu home services ssh)} module, you can set up OpenSSH so that it works in a predictable fashion, almost independently of state on the local machine.  To do that, you instantiate @code{home-openssh-service-type} in your Home configuration, as explained below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50237
#, fuzzy, no-wrap
msgid "home-openssh-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50240
msgid "This is the type of the service to set up the OpenSSH client.  It takes care of several things:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50246
msgid "providing a @file{~/.ssh/config} file based on your configuration so that @command{ssh} knows about hosts you regularly connect to and their associated parameters;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50251
msgid "providing a @file{~/.ssh/authorized_keys}, which lists public keys that the local SSH server, @command{sshd}, may accept to connect to this user account;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50255
msgid "optionally providing a @file{~/.ssh/known_hosts} file so that @file{ssh} can authenticate hosts you connect to."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50271
#, no-wrap
msgid ""
"(service home-openssh-service-type\n"
"         (home-openssh-configuration\n"
"          (hosts\n"
"           (list (openssh-host (name \"ci.guix.gnu.org\")\n"
"                               (user \"charlie\"))\n"
"                 (openssh-host (name \"chbouib\")\n"
"                               (host-name \"chbouib.example.org\")\n"
"                               (user \"supercharlie\")\n"
"                               (port 10022))))\n"
"          (authorized-keys (list (local-file \"alice.pub\")))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50278
msgid "The example above lists two hosts and their parameters.  For instance, running @command{ssh chbouib} will automatically connect to @code{chbouib.example.org} on port 10022, logging in as user @samp{supercharlie}.  Further, it marks the public key in @file{alice.pub} as authorized for incoming connections."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50281
msgid "The value associated with a @code{home-openssh-service-type} instance must be a @code{home-openssh-configuration} record, as describe below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50283
#, no-wrap
msgid "{Data Type} home-openssh-configuration"
msgstr "{Tipo de dados} home-openssh-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50287
msgid "This is the datatype representing the OpenSSH client and server configuration in one's home environment.  It contains the following fields:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50289
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{hosts} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:50293
msgid "A list of @code{openssh-host} records specifying host names and associated connection parameters (see below).  This host list goes into @file{~/.ssh/config}, which @command{ssh} reads at startup."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50294
#, fuzzy, no-wrap
#| msgid "@code{no-hosts?} (default: @code{#f})"
msgid "@code{known-hosts} (default: @code{*unspecified*})"
msgstr "@code{no-hosts?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50296
msgid "This must be either:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50302
msgid "@code{*unspecified*}, in which case @code{home-openssh-service-type} leaves it up to @command{ssh} and to the user to maintain the list of known hosts at @file{~/.ssh/known_hosts}, or"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:50306
msgid "a list of file-like objects, in which case those are concatenated and emitted as @file{~/.ssh/known_hosts}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50315
msgid "The @file{~/.ssh/known_hosts} contains a list of host name/host key pairs that allow @command{ssh} to authenticate hosts you connect to and to detect possible impersonation attacks.  By default, @command{ssh} updates it in a @dfn{TOFU, trust-on-first-use} fashion, meaning that it records the host's key in that file the first time you connect to it.  This behavior is preserved when @code{known-hosts} is set to @code{*unspecified*}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50321
msgid "If you instead provide a list of host keys upfront in the @code{known-hosts} field, your configuration becomes self-contained and stateless: it can be replicated elsewhere or at another point in time.  Preparing this list can be relatively tedious though, which is why @code{*unspecified*} is kept as a default."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50322
#, fuzzy, no-wrap
#| msgid "@code{uid} (default: @code{#f})"
msgid "@code{authorized-keys} (default: @code{#false})"
msgstr "@code{uid} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50327
msgid "The default @code{#false} value means: Leave any @file{~/.ssh/authorized_keys} file alone.  Otherwise, this must be a list of file-like objects, each of which containing an SSH public key that should be authorized to connect to this machine."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50333
msgid "Concretely, these files are concatenated and made available as @file{~/.ssh/authorized_keys}.  If an OpenSSH server, @command{sshd}, is running on this machine, then it @emph{may} take this file into account: this is what @command{sshd} does by default, but be aware that it can also be configured to ignore it."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50334
#, fuzzy, no-wrap
#| msgid "@code{chdir} (default: @code{#f})"
msgid "@code{add-keys-to-agent} (default: @code{no})"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50347
msgid "This string specifies whether keys should be automatically added to a running ssh-agent.  If this option is set to @code{yes} and a key is loaded from a file, the key and its passphrase are added to the agent with the default lifetime, as if by @code{ssh-add}.  If this option is set to @code{ask}, @code{ssh} will require confirmation.  If this option is set to @code{confirm}, each use of the key must be confirmed.  If this option is set to @code{no}, no keys are added to the agent.  Alternately, this option may be specified as a time interval to specify the key's lifetime in @code{ssh-agent}, after which it will automatically be removed.  The argument must be @code{no}, @code{yes}, @code{confirm} (optionally followed by a time interval), @code{ask} or a time interval."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50352
#, no-wrap
msgid "{Data Type} openssh-host"
msgstr "{Tipo de dados} openssh-host"

#. type: deftp
#: guix-git/doc/guix.texi:50354
msgid "Available @code{openssh-host} fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50360
msgid "Name of this host declaration.  A @code{openssh-host} must define only @code{name} or @code{match-criteria}.  Use host-name @code{\\\"*\\\"} for top-level options."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50361
#, fuzzy, no-wrap
msgid "@code{host-name} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50363
msgid "Host name---e.g., @code{\"foo.example.org\"} or @code{\"192.168.1.2\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50364
#, fuzzy, no-wrap
msgid "@code{match-criteria} (type: maybe-match-criteria)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50371
msgid "When specified, this string denotes the set of hosts to which the entry applies, superseding the @code{host-name} field.  Its first element must be all or one of @code{ssh-match-keywords}.  The rest of the elements are arguments for the keyword, or other criteria.  A @code{openssh-host} must define only @code{name} or @code{match-criteria}.  Other host configuration options will apply to all hosts matching @code{match-criteria}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50372
#, fuzzy, no-wrap
msgid "@code{address-family} (type: maybe-address-family)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50376
msgid "Address family to use when connecting to this host: one of @code{AF_INET} (for IPv4 only), @code{AF_INET6} (for IPv6 only).  Additionally, the field can be left unset to allow any address family."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50377
#, fuzzy, no-wrap
msgid "@code{identity-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50379
msgid "The identity file to use---e.g., @code{\"/home/charlie/.ssh/id_ed25519\"}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50380 guix-git/doc/guix.texi:50420
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{port} (type: maybe-natural-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50382 guix-git/doc/guix.texi:50422
msgid "TCP port number to connect to."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50385 guix-git/doc/guix.texi:50416
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "User name on the remote host."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:50386
#, fuzzy, no-wrap
msgid "@code{forward-x11?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50389
msgid "Whether to forward remote client connections to the local X11 graphical display."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50390
#, fuzzy, no-wrap
msgid "@code{forward-x11-trusted?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50393
msgid "Whether remote X11 clients have full access to the original X11 graphical display."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50394
#, fuzzy, no-wrap
msgid "@code{forward-agent?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50397
msgid "Whether the authentication agent (if any) is forwarded to the remote machine."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50398
#, fuzzy, no-wrap
msgid "@code{compression?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50400
msgid "Whether to compress data in transit."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50401
#, fuzzy, no-wrap
msgid "@code{proxy} (type: maybe-proxy-command-or-jump-list)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50405
msgid "The command to use to connect to the server or a list of SSH hosts to jump through before connecting to the server.  The field may be set to either a @code{proxy-command} or a list of @code{proxy-jump} records."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50409
msgid "As an example, a @code{proxy-command} to connect via an HTTP proxy at 192.0.2.0 would be constructed with: @code{(proxy-command \"nc -X connect -x 192.0.2.0:8080 %h %p\")}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50410
#, no-wrap
msgid "{Data Type} proxy-jump"
msgstr "{Tipo de dados} proxy-jump"

#. type: deftp
#: guix-git/doc/guix.texi:50412
#, fuzzy
msgid "Available @code{proxy-jump} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:50417
#, fuzzy, no-wrap
msgid "@code{host-name} (type: string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50419
msgid "Host name---e.g., @code{foo.example.org} or @code{192.168.1.2}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50427
#, fuzzy, no-wrap
msgid "@code{host-key-algorithms} (type: maybe-string-list)"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50430
msgid "The list of accepted host key algorithms---e.g., @code{'(\"ssh-ed25519\")}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50431
#, fuzzy, no-wrap
msgid "@code{accepted-key-types} (type: maybe-string-list)"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50433
msgid "The list of accepted user public key types."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50434 guix-git/doc/guix.texi:50612
#: guix-git/doc/guix.texi:50726
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-content} (default: @code{\"\"}) (type: raw-configuration-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50437
msgid "Extra content appended as-is to this @code{Host} block in @file{~/.ssh/config}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50442
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Parcimonie, Home service"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:50448
msgid "The @code{parcimonie} service runs a daemon that slowly refreshes a GnuPG public key from a keyserver.  It refreshes one key at a time; between every key update parcimonie sleeps a random amount of time, long enough for the previously used Tor circuit to expire.  This process is meant to make it hard for an attacker to correlate the multiple key update."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50452
msgid "As an example, here is how you would configure @code{parcimonie} to refresh the keys in your GnuPG keyring, as well as those keyrings created by Guix, such as when running @code{guix import}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50457
#, no-wrap
msgid ""
"(service home-parcimonie-service-type\n"
"         (home-parcimonie-configuration\n"
"           (refresh-guix-keyrings? #t)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50462
msgid "This assumes that the Tor anonymous routing daemon is already running on your system.  On Guix System, this can be achieved by setting up @code{tor-service-type} (@pxref{Networking Services, @code{tor-service-type}})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50464 guix-git/doc/guix.texi:50571
#: guix-git/doc/guix.texi:51149
msgid "The service reference is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50465
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "parcimonie-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50469
msgid "This is the service type for @command{parcimonie} (@uref{https://salsa.debian.org/intrigeri/parcimonie, Parcimonie's web site}).  Its value must be a @code{home-parcimonie-configuration}, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50473
#, no-wrap
msgid "{Data Table} home-parcimonie-configuration"
msgstr "{Tipo de dados} home-parcimonie-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50475
#, fuzzy
msgid "Available @code{home-parcimonie-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:50477
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{parcimonie} (default: @code{parcimonie}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50479
#, fuzzy
#| msgid "The GPM package to use."
msgid "The parcimonie package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:50482
msgid "Whether to have more verbose logging from the service."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50483
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{gnupg-already-torified?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50486
msgid "Whether GnuPG is already configured to pass all traffic through @uref{https://torproject.org, Tor}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50487
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{refresh-guix-keyrings?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50491
msgid "Guix creates a few keyrings in the @var{$XDG_CONFIG_HOME}, such as when running @code{guix import} (@pxref{Invoking guix import}).  Setting this to @code{#t} will also refresh any keyrings which Guix has created."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50492
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-content} (default: @code{#f}) (type: raw-configuration-string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50494
msgid "Raw content to add to the parcimonie command."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50501
#, no-wrap
msgid "ssh-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50509
msgid "The @uref{https://www.openssh.com, OpenSSH package} includes a daemon, the @command{ssh-agent} command, that manages keys to connect to remote machines using the @acronym{SSH, secure shell} protocol.  With the @code{(gnu home services ssh)} service, you can configure the OpenSSH ssh-agent to run upon login.  @xref{GNU Privacy Guard, @code{home-gpg-agent-service-type}}, for an alternative to OpenSSH's @command{ssh-agent}."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50518
#, no-wrap
msgid ""
"(service home-ssh-agent-service-type\n"
"         (home-ssh-agent-configuration\n"
"          (extra-options '(\"-t\" \"1h30m\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50520
#, fuzzy, no-wrap
msgid "home-ssh-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50523
msgid "This is the type of the @code{ssh-agent} home service, whose value is a @code{home-ssh-agent-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50525
#, no-wrap
msgid "{Data Type} home-ssh-agent-configuration"
msgstr "{Tipo de dados} home-ssh-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50527
#, fuzzy
msgid "Available @code{home-ssh-agent-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:50529
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{openssh} (default: @code{openssh}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: item
#: guix-git/doc/guix.texi:50532
#, fuzzy, no-wrap
msgid "@code{socket-directory} (default: @code{@env{XDG_RUNTIME_DIR}/ssh-agent\"}) (type: gexp)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50534
msgid "The directory to write the ssh-agent's @file{socket} file."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50538
msgid "Extra options will be passed to @command{ssh-agent}, please run @command{man ssh-agent} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50542 guix-git/doc/guix.texi:50543
#, no-wrap
msgid "GNU Privacy Guard"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50545
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "GNU Privacy Guard, Home service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:50546
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "GPG, Home service"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:50550
msgid "The @code{(gnu home services gnupg)} module provides services that help you set up the GNU Privacy Guard, also known as GnuPG or GPG, in your home environment."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50551
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "gpg-agent, Home service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:50552
#, no-wrap
msgid "SSH agent, with gpg-agent"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50557
msgid "The @code{gpg-agent} service configures and sets up GPG's agent, the program that is responsible for managing OpenPGP private keys and, optionally, OpenSSH (secure shell) private keys (@pxref{Invoking GPG-AGENT,,, gnupg, Using the GNU Privacy Guard})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50561
msgid "As an example, here is how you would configure @code{gpg-agent} with SSH support such that it uses the Emacs-based Pinentry interface when prompting for a passphrase:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50568
#, no-wrap
msgid ""
"(service home-gpg-agent-service-type\n"
"         (home-gpg-agent-configuration\n"
"          (pinentry-program\n"
"           (file-append pinentry-emacs \"/bin/pinentry-emacs\"))\n"
"          (ssh-support? #t)))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50572
#, fuzzy, no-wrap
msgid "home-gpg-agent-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50576
msgid "This is the service type for @command{gpg-agent} (@pxref{Invoking GPG-AGENT,,, gnupg, Using the GNU Privacy Guard}).  Its value must be a @code{home-gpg-agent-configuration}, as shown below."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50580
#, no-wrap
msgid "{Data Type} home-gpg-agent-configuration"
msgstr "{Tipo de dados} home-gpg-agent-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50582
#, fuzzy
msgid "Available @code{home-gpg-agent-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:50584
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{gnupg} (default: @code{gnupg}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50586
#, fuzzy
#| msgid "The GPM package to use."
msgid "The GnuPG package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:50587
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{pinentry-program} (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50592
msgid "Pinentry program to use.  Pinentry is a small user interface that @command{gpg-agent} delegates to anytime it needs user input for a passphrase or @acronym{PIN,personal identification number} (@pxref{Top,,, pinentry,Using the PIN-Entry})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50593
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{ssh-support?} (default: @code{#f}) (type: boolean)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50598
msgid "Whether to enable @acronym{SSH,secure shell} support.  When true, @command{gpg-agent} acts as a drop-in replacement for OpenSSH's @command{ssh-agent} program, taking care of OpenSSH secret keys and directing passphrase requests to the chosen Pinentry program."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50599
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{default-cache-ttl} (default: @code{600}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50601
msgid "Time a cache entry is valid, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50602
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-cache-ttl} (default: @code{7200}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50605
msgid "Maximum time a cache entry is valid, in seconds.  After this time a cache entry will be expired even if it has been accessed recently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50606
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{default-cache-ttl-ssh} (default: @code{1800}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50608
msgid "Time a cache entry for SSH keys is valid, in seconds."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50609
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{max-cache-ttl-ssh} (default: @code{7200}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50611
msgid "Maximum time a cache entry for SSH keys is valid, in seconds."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50614
msgid "Raw content to add to the end of @file{~/.gnupg/gpg-agent.conf}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50623 guix-git/doc/guix.texi:50624
#, fuzzy, no-wrap
#| msgid "Desktop Services"
msgid "Desktop Home Services"
msgstr "Serviços de desktop"

#. type: Plain text
#: guix-git/doc/guix.texi:50629
msgid "The @code{(gnu home services desktop)} module provides services that you may find useful on ``desktop'' systems running a graphical user environment such as Xorg."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50630
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "X Window, for Guix Home services"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:50631
#, no-wrap
msgid "X11, in Guix Home"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50632
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-x11-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50635
msgid "This is the service type representing the X Window graphical display server (also referred to as ``X11'')."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50641
msgid "X Window is necessarily started by a system service; on Guix System, starting it is the responsibility of @code{gdm-service-type} and similar services (@pxref{X Window}).  At the level of Guix Home, as an unprivileged user, we cannot start X Window; all we can do is check whether it is running.  This is what this service does."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50647
msgid "As a user, you probably don't need to worry or explicitly instantiate @code{home-x11-service-type}.  Services that require an X Window graphical display, such as @code{home-redshift-service-type} below, instantiate it and depend on its corresponding @code{x11-display} Shepherd service (@pxref{Shepherd Home Service})."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50652
msgid "When X Window is running, the @code{x11-display} Shepherd service starts and sets the @env{DISPLAY} environment variable of the @command{shepherd} process, using its original value if it was already set; otherwise, it fails to start."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50655
msgid "The service can also be forced to use a given value for @env{DISPLAY}, like so:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50658
#, no-wrap
msgid "herd start x11-display :3\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50662
msgid "In the example above, @code{x11-display} is instructed to set @env{DISPLAY} to @code{:3}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50664
#, fuzzy, no-wrap
msgid "home-redshift-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50669
msgid "This is the service type for @uref{https://github.com/jonls/redshift, Redshift}, a program that adjusts the display color temperature according to the time of day.  Its associated value must be a @code{home-redshift-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50672
msgid "A typical configuration, where we manually specify the latitude and longitude, might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50679
#, no-wrap
msgid ""
"(service home-redshift-service-type\n"
"         (home-redshift-configuration\n"
"          (location-provider 'manual)\n"
"          (latitude 35.81)    ;northern hemisphere\n"
"          (longitude -0.80))) ;west of Greenwich\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50682
#, no-wrap
msgid "{Data Type} home-redshift-configuration"
msgstr "{Tipo de dados} home-redshift-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50684
msgid "Available @code{home-redshift-configuration} fields are:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50686
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{redshift} (default: @code{redshift}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50688
#, fuzzy
#| msgid "The GPM package to use."
msgid "Redshift package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:50689
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{location-provider} (default: @code{geoclue2}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50695
msgid "Geolocation provider---@code{'manual} or @code{'geoclue2}.  In the former case, you must also specify the @code{latitude} and @code{longitude} fields so Redshift can determine daytime at your place.  In the latter case, the Geoclue system service must be running; it will be queried for location information."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50696
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{adjustment-method} (default: @code{randr}) (type: symbol)"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50698
msgid "Color adjustment method."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50699
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{daytime-temperature} (default: @code{6500}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50701
msgid "Daytime color temperature (kelvins)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50702
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{nighttime-temperature} (default: @code{4500}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50704
msgid "Nighttime color temperature (kelvins)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50705
#, fuzzy, no-wrap
msgid "@code{daytime-brightness} (type: maybe-inexact-number)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50707
msgid "Daytime screen brightness, between 0.1 and 1.0, or left unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50708
#, fuzzy, no-wrap
msgid "@code{nighttime-brightness} (type: maybe-inexact-number)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50710
msgid "Nighttime screen brightness, between 0.1 and 1.0, or left unspecified."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50711
#, fuzzy, no-wrap
msgid "@code{latitude} (type: maybe-inexact-number)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50713
msgid "Latitude, when @code{location-provider} is @code{'manual}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50714
#, fuzzy, no-wrap
#| msgid "@code{no-hints?} (default: @code{#f})"
msgid "@code{longitude} (type: maybe-inexact-number)"
msgstr "@code{no-hints?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50716
msgid "Longitude, when @code{location-provider} is @code{'manual}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50717
#, fuzzy, no-wrap
msgid "@code{dawn-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50721
msgid "Custom time for the transition from night to day in the morning---@code{\"HH:MM\"} format.  When specified, solar elevation is not used to determine the daytime/nighttime period."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:50722
#, fuzzy, no-wrap
msgid "@code{dusk-time} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50725
msgid "Likewise, custom time for the transition from day to night in the evening."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:50730
msgid "Extra content appended as-is to the Redshift configuration file.  Run @command{man redshift} for more information about the configuration file format."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50735
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-dbus-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50738
msgid "This is the service type for running a session-specific D-Bus, for unprivileged applications that require D-Bus to be running."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50740
#, no-wrap
msgid "{Data Type} home-dbus-configuration"
msgstr "{Tipo de dados} home-dbus-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50742
#, fuzzy
msgid "The configuration record for @code{home-dbus-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:50744
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{dbus} (default: @code{dbus})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50746
#, fuzzy
#| msgid "Package management commands."
msgid "The package providing the @code{/bin/dbus-daemon} command."
msgstr "Comandos de gerenciamento de pacote."

#. type: defvar
#: guix-git/doc/guix.texi:50749
#, fuzzy, no-wrap
msgid "home-unclutter-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50755
msgid "This is the service type for Unclutter, a program that runs on the background of an X11 session and detects when the X pointer hasn't moved for a specified idle timeout, after which it hides the cursor so that you can focus on the text underneath.  Its associated value must be a @code{home-unclutter-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50758
msgid "A typical configuration, where we manually specify the idle timeout (in seconds), might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50763
#, no-wrap
msgid ""
"(service home-unclutter-service-type\n"
"         (home-unclutter-configuration\n"
"          (idle-timeout 2)))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50766
#, no-wrap
msgid "{Data Type} home-unclutter-configuration"
msgstr "{Tipo de dados} home-unclutter-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50768
#, fuzzy
msgid "The configuration record for @code{home-unclutter-service-type}."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:50770
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{unclutter} (default: @code{unclutter}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50772
#, fuzzy
#| msgid "The GPM package to use."
msgid "Unclutter package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:50773
#, fuzzy, no-wrap
#| msgid "@code{debug?} (default: @code{#f})"
msgid "@code{idle-timeout} (default: @code{5}) (type: integer)"
msgstr "@code{debug?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50775
msgid "A timeout in seconds after which to hide cursor."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50779
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-xmodmap-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50785
msgid "This is the service type for the @uref{https://gitlab.freedesktop.org/xorg/app/xmodmap,xmodmap} utility to modify keymaps and pointer button mappings under the Xorg display server.  Its associated value must be a @code{home-xmodmap-configuration} record, as shown below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50793
msgid "The @code{key-map} field takes a list of objects, each of which is either a @dfn{statement} (a string) or an @dfn{assignment} (a pair of strings).  As an example, the snippet below swaps around the @kbd{Caps_Lock} and the @kbd{Control_L} keys, by first removing the keysyms (on the right-hand side) from the corresponding modifier maps (on the left-hand side), re-assigning them by swapping each other out, and finally adding back the keysyms to the modifier maps."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50803
#, no-wrap
msgid ""
"(service home-xmodmap-service-type\n"
"         (home-xmodmap-configuration\n"
"          (key-map '((\"remove Lock\" . \"Caps_Lock\")\n"
"                     (\"remove Control\" . \"Control_L\")\n"
"                     (\"keysym Control_L\" . \"Caps_Lock\")\n"
"                     (\"keysym Caps_Lock\" . \"Control_L\")\n"
"                     (\"add Lock\" . \"Caps_Lock\")\n"
"                     (\"add Control\" . \"Control_L\")))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:50806
#, no-wrap
msgid "{Data Type} home-xmodmap-configuration"
msgstr "{Tipo de dados} home-xmodmap-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:50809
#, fuzzy
msgid "The configuration record for @code{home-xmodmap-service-type}.  Its available fields are:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:50811
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{xmodmap} (default: @code{xmodmap}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:50813
#, fuzzy
#| msgid "The GPM package to use."
msgid "The @code{xmodmap} package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:50814
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{key-map} (default: @code{'()}) (type: list)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:50816
msgid "The list of expressions to be read by @code{xmodmap} on service startup."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50820
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-startx-command-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50822
msgid "Add @command{startx} to the home profile putting it onto @env{PATH}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50829 guix-git/doc/guix.texi:50830
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Guix Home Services"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:50834
msgid "The @code{(gnu home services guix)} module provides services for user-specific Guix configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50835
#, fuzzy, no-wrap
msgid "home-channels-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50841
msgid "This is the service type for managing @file{$XDG_CONFIG_HOME/guix/channels.scm}, the file that controls the channels received on @command{guix pull} (@pxref{Channels}).  Its associated value is a list of @code{channel} records, defined in the @code{(guix channels)} module."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50848
msgid "Generally, it is better to extend this service than to directly configure it, as its default value is the default guix channel(s)  defined by @code{%default-channels}.  If you configure this service directly, be sure to include a guix channel.  @xref{Specifying Additional Channels} and @ref{Using a Custom Guix Channel} for more details."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50850
msgid "A typical extension for adding a channel might look like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50858
#, no-wrap
msgid ""
"(simple-service 'variant-packages-service\n"
"                home-channels-service-type\n"
"                (list\n"
"                 (channel\n"
"                  (name 'variant-packages)\n"
"                  (url \"https://example.org/variant-packages.git\"))))\n"
msgstr ""

#. type: node
#: guix-git/doc/guix.texi:50861
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Backup Home Services"
msgstr "Serviços base"

#. type: Plain text
#: guix-git/doc/guix.texi:50866
msgid "The @code{(gnu home services backup)} module offers services for backing up file system trees.  For now, it provides the @code{home-restic-backup-service-type}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50871
msgid "With @code{home-restic-backup-service-type}, you can periodically back up directories and files with @uref{https://restic.net/, Restic}, which supports end-to-end encryption and deduplication.  Consider the following configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50876
#, no-wrap
msgid ""
"(use-modules (gnu home services backup) ;for 'restic-backup-job', 'home-restic-backup-service-type'\n"
"             (gnu packages sync)        ;for 'rclone'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50878 guix-git/doc/guix.texi:50913
#, fuzzy, no-wrap
#| msgid "build environment"
msgid ""
"(home-environment\n"
"\n"
msgstr "ambiente de compilação"

#. type: lisp
#: guix-git/doc/guix.texi:50895
#, fuzzy, no-wrap
#| msgid ""
#| "(operating-system\n"
#| "  ;; @dots{}\n"
#| "  (services\n"
#| "    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
#| "    ;; with the list of services you're actually using.\n"
#| "    (modify-services %desktop-services\n"
#| "      (guix-service-type config =>\n"
#| "                        (guix-configuration\n"
#| "                          (inherit config)\n"
#| "                          (substitute-urls\n"
#| "                            (append (list \"https://guix.example.org\")\n"
#| "                                    %default-substitute-urls))\n"
#| "                          (authorized-keys\n"
#| "                            (append (list (local-file \"./key.pub\"))\n"
#| "                                    %default-authorized-guix-keys)))))))\n"
msgid ""
"  (packages (list rclone    ;for use by restic\n"
"                  @dots{}))\n"
"  (services\n"
"    (list\n"
"      @dots{}\n"
"      (simple-service 'backup-jobs\n"
"                      home-restic-backup-service-type\n"
"                      (list (restic-backup-job\n"
"                              (name \"remote-ftp\")\n"
"                              (repository \"rclone:remote-ftp:backup/restic\")\n"
"                              (password-file \"/home/alice/.restic\")\n"
"                              ;; Every day at 23.\n"
"                              (schedule \"0 23 * * *\")\n"
"                              (files '(\"/home/alice/.restic\"\n"
"                                       \"/home/alice/.config/rclone\"\n"
"                                       \"/home/alice/Pictures\"))))))))\n"
msgstr ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"  ;; Suponha que estamos começando com '%desktop-services'. Substitua-o\n"
"  ;; pela lista de serviços que você está realmente usando.\n"
"  (modify-services %desktop-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        (substitute-urls\n"
"                         (append (list \"https://guix.example.org\")\n"
"                                 %default-substitute-urls))\n"
"                        (authorized-keys\n"
"                         (append (list (local-file \"./key.pub\"))\n"
"                                 %default-authorized-guix-keys)))))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:50901
msgid "In general it is preferrable to extend the @code{home-restic-backup-service-type}, as shown in the example above.  This is because it takes care of wrapping everything with @code{for-home}, which enables the @code{home-restic-backup-service-type} and @code{restic-backup-service-type} to share the same codebase."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50904
#, fuzzy
msgid "For a custom configuration, wrap your @code{restic-backup-configuration} in @code{for-home}, as in this example:"
msgstr "build-machine {Data Type}"

#. type: lisp
#: guix-git/doc/guix.texi:50911
#, no-wrap
msgid ""
"(use-modules (gnu services)             ;for 'for-home'\n"
"             (gnu services backup)      ;for 'restic-backup-job' and 'restic-backup-configuration'\n"
"             (gnu home services backup) ;for 'home-restic-backup-service-type'\n"
"             (gnu packages sync)        ;for 'rclone'\n"
"             @dots{})\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50923
#, no-wrap
msgid ""
"  (packages (list rclone    ;for use by restic\n"
"                  @dots{}))\n"
"  (services\n"
"    (list\n"
"      @dots{}\n"
"      (service home-restic-backup-service-type\n"
"               (for-home\n"
"                (restic-backup-configuration\n"
"                 (jobs (list @dots{}))))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50931
msgid "You can refer to @pxref{Miscellaneous Services, @code{restic-backup-service-type}} for details about @code{restic-backup-configuration} and @code{restic-backup-job}.  The only difference is that the @code{home-restic-backup-service-type} will ignore the @code{user} and @code{group} field of @code{restic-backup-job}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50932 guix-git/doc/guix.texi:50933
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Fonts Home Services"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:50939
msgid "The @code{(gnu home services fontutils)} module provides services for user-specific Fontconfig setup.  The @uref{https://www.freedesktop.org/wiki/Software/fontconfig,Fontconfig} library is used by many applications to access fonts on the system."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50940
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-fontconfig-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:50946
msgid "This is the service type for generating configurations for Fontconfig.  Its associated value is a list of either strings (or gexps) pointing to fonts locations, or SXML (@pxref{SXML,,, guile, GNU Guile Reference Manual}) fragments to be converted into XML and put inside the main @code{fontconfig} node."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50952
msgid "Generally, it is better to extend this service than to directly configure it, as its default value is the default Guix Home's profile font installation path (@file{~/.guix-home/profile/share/fonts}).  If you configure this service directly, be sure to include the above directory."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:50955
msgid "Here's how you'd extend it to include fonts installed with the Nix package manager, and to prefer your favourite monospace font:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:50964
#, no-wrap
msgid ""
"(simple-service 'additional-fonts-service\n"
"                home-fontconfig-service-type\n"
"                (list \"~/.nix-profile/share/fonts\"\n"
"                      '(alias\n"
"                        (family \"monospace\")\n"
"                        (prefer\n"
"                         (family \"Liberation Mono\")))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:50967 guix-git/doc/guix.texi:50968
#, fuzzy, no-wrap
#| msgid "Sound Services"
msgid "Sound Home Services"
msgstr "Serviços de som"

#. type: Plain text
#: guix-git/doc/guix.texi:50972
msgid "The @code{(gnu home services sound)} module provides services related to sound support."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:50973
#, no-wrap
msgid "PulseAudio, home service"
msgstr "PulseAudio, serviço pessoal"

#. type: cindex
#: guix-git/doc/guix.texi:50974
#, no-wrap
msgid "RTP, for PulseAudio"
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:50975
#, fuzzy, no-wrap
#| msgid "Other services."
msgid "PulseAudio RTP Streaming Services"
msgstr "Serviços domésticos"

#. type: Plain text
#: guix-git/doc/guix.texi:50985
msgid "The following services dynamically reconfigure the @uref{https://pulseaudio.org,PulseAudio sound server}: they let you toggle broadcast of audio output over the network using the @acronym{RTP, real-time transport protocol} and, correspondingly, playback of sound received over RTP.  Once @code{home-pulseaudio-rtp-sink-service-type} is among your home services, you can start broadcasting audio output by running this command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:50988 guix-git/doc/guix.texi:51054
#, no-wrap
msgid "herd start pulseaudio-rtp-sink\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:50993
msgid "You can then run a PulseAudio-capable mixer, such as @code{pavucontrol} or @code{pulsemixer} (both from the same-named package) to control which audio stream(s) should be sent to the RTP ``sink''."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51000
msgid "By default, audio is broadcasted to a multicast address: any device on the @acronym{LAN, local area network} receives it and may play it.  Using multicast in this way puts a lot of pressure on the network and degrades its performance, so you may instead prefer sending to specifically one device.  The first way to do that is by specifying the IP address of the target device when starting the service:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51003
#, no-wrap
msgid "herd start pulseaudio-rtp-sink 192.168.1.42\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51007
msgid "The other option is to specify this IP address as the one to use by default in your home environment configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51011
#, no-wrap
msgid ""
"(service home-pulseaudio-rtp-sink-service-type\n"
"         \"192.168.1.42\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51015
msgid "On the device where you intend to receive and play the RTP stream, you can use @code{home-pulseaudio-rtp-source-service-type}, like so:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51018
#, fuzzy, no-wrap
msgid "(service home-pulseaudio-rtp-source-service-type)\n"
msgstr "(service home-pulseaudio-rtp-source-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:51021
msgid "This will then let you start the receiving module for PulseAudio:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51024
#, no-wrap
msgid "herd start pulseaudio-rtp-source\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51029
msgid "Again, by default it will listen on the multicast address.  If, instead, you'd like it to listen for direct incoming connections, you can do that by running:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51033
#, no-wrap
msgid ""
"(service home-pulseaudio-rtp-source-service-type\n"
"         \"0.0.0.0\")\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51036
msgid "The reference of these services is given below."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51037
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-pulseaudio-rtp-sink-service-type"
msgstr "guix-publish-service-type"

#. type: defvarx
#: guix-git/doc/guix.texi:51038
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-pulseaudio-rtp-source-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51041
msgid "This is the type of the service to send, respectively receive, audio streams over @acronym{RTP, real-time transport protocol}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51046
msgid "The value associated with this service is the IP address (a string)  where to send, respectively receive, the audio stream.  By default, audio is sent/received on multicast address @code{%pulseaudio-rtp-multicast-address}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51051
msgid "This service defines one Shepherd service: @code{pulseaudio-rtp-sink}, respectively @code{pulseaudio-rtp-source}.  The service is not started by default, so you have to explicitly start it when you want to turn it on, as in this example:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51057
msgid "Stopping the Shepherd service turns off broadcasting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51059
#, no-wrap
msgid "%pulseaudio-rtp-multicast-address"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51061
msgid "This is the multicast address used by default by the two services above."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51063
#, no-wrap
msgid "PipeWire, home service"
msgstr "PipeWire, serviço pessoal"

#. type: subsubheading
#: guix-git/doc/guix.texi:51064
#, fuzzy, no-wrap
#| msgid "Shepherd Services"
msgid "PipeWire Home Service"
msgstr "Serviços de Shepherd"

#. type: Plain text
#: guix-git/doc/guix.texi:51070
msgid "@uref{https://pipewire.org, PipeWire} provides a low-latency, graph-based audio and video processing service.  In addition to its native protocol, it can also be used as a replacement for both JACK and PulseAudio."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51080
msgid "While PipeWire provides the media processing and API, it does not, directly, know about devices such as sound cards, nor how you might want to connect applications, hardware, and media processing filters.  Instead, PipeWire relies on a @dfn{session manager} to specify all these relationships.  While you may use any session manager you wish, for most people the @url{https://pipewire.pages.freedesktop.org/wireplumber/, WirePlumber} session manager, a reference implementation provided by the PipeWire project itself, suffices, and that is the one @code{home-pipewire-service-type} uses."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51085
msgid "PipeWire can be used as a replacement for PulseAudio by setting @code{enable-pulseaudio?} to @code{#t} in @code{home-pipewire-configuration}, so that existing PulseAudio clients may use it without any further configuration."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51090
msgid "In addition, JACK clients may connect to PipeWire by using the @command{pw-jack} program, which comes with PipeWire.  Simply prefix the command with @command{pw-jack} when you run it, and audio data should go through PipeWire:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:51093
#, no-wrap
msgid "pw-jack mpv -ao=jack sound-file.wav\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51099
msgid "For more information on PulseAudio emulation, see @uref{https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Config-PulseAudio}, for JACK, see @uref{https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Config-JACK}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51105
msgid "As PipeWire does not use @code{dbus} to start its services on demand (as PulseAudio does), @code{home-pipewire-service-type} uses Shepherd to start services when logged in, provisioning the @code{pipewire}, @code{wireplumber}, and, if configured, @code{pipewire-pulseaudio} services.  @xref{Shepherd Home Service}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51106
#, fuzzy, no-wrap
msgid "home-pipewire-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51109
msgid "This provides the service definition for @command{pipewire}, which will run on login.  Its value is a @code{home-pipewire-configuration} object."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51112
msgid "To start the service, add it to the @code{service} field of your @code{home-environment}, such as:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51115
#, fuzzy, no-wrap
msgid "(service home-pipewire-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: deftp
#: guix-git/doc/guix.texi:51118
#, no-wrap
msgid "{Data Type} home-pipewire-configuration"
msgstr "{Tipo de dados} home-pipewire-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51120
#, fuzzy
msgid "Available @code{home-pipewire-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51122
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{pipewire} (default: @code{pipewire}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51124
#, fuzzy
#| msgid "The GPM package to use."
msgid "The PipeWire package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:51125
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{wireplumber} (default: @code{wireplumber}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51127
#, fuzzy
msgid "The WirePlumber package to use."
msgstr "O pacote GPM a ser usado."

#. type: item
#: guix-git/doc/guix.texi:51128
#, fuzzy, no-wrap
#| msgid "@code{wait?} (default: @code{#t})"
msgid "@code{enable-pulseaudio?} (default: @code{#t}) (type: boolean)"
msgstr "@code{wait?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51131
msgid "When true, enable PipeWire's PulseAudio emulation support, allowing PulseAudio clients to use PipeWire transparently."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51132 guix-git/doc/guix.texi:51190
#: guix-git/doc/guix.texi:51261
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{extra-content} (default: @code{\"\"}) (type: string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51134
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "Extra content to add to the end of @file{~/.config/alsa/asoundrc}."
msgstr "Inicializando uma configuração pessoal."

#. type: subsection
#: guix-git/doc/guix.texi:51137 guix-git/doc/guix.texi:51138
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Mail Home Services"
msgstr "Serviços de jogos"

#. type: Plain text
#: guix-git/doc/guix.texi:51142
msgid "The @code{(gnu home services mail)} module provides services that help you set up the tools to work with emails in your home environment."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51143
#, no-wrap
msgid "msmtp"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51147
msgid "@uref{https://marlam.de/msmtp, MSMTP} is a @acronym{SMTP, Simple Mail Transfer Protocol} client.  It sends mail to a predefined SMTP server that takes care of proper delivery."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51150
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-msmtp-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51154
msgid "This is the service type for @command{msmtp}.  Its value must be a @code{home-msmtp-configuration}, as shown below.  It provides the @file{~/.config/msmtp/config} file."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51157
msgid "As an example, here is how you would configure @code{msmtp} for a single account:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51171
#, no-wrap
msgid ""
"(service home-msmtp-service-type\n"
"         (home-msmtp-configuration\n"
"          (accounts\n"
"           (list\n"
"            (msmtp-account\n"
"             (name \"alice\")\n"
"             (configuration\n"
"              (msmtp-configuration\n"
"               (host \"mail.example.org\")\n"
"               (port 587)\n"
"               (user \"alice\")\n"
"               (password-eval \"pass Mail/alice\"))))))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51176
#, no-wrap
msgid "{Data Type} home-msmtp-configuration"
msgstr "{Tipo de dados} home-msmtp-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51178
#, fuzzy
msgid "Available @code{home-msmtp-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51180
#, fuzzy, no-wrap
msgid "@code{defaults} (type: msmtp-configuration)"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:51182
msgid "The configuration that will be set as default for all accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51183
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{accounts} (default: @code{'()}) (type: list-of-msmtp-accounts)"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51186
msgid "A list of @code{msmtp-account} records which contain information about all your accounts."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51187
#, fuzzy, no-wrap
msgid "@code{default-account} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51189
msgid "Set the default account."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51194
msgid "Extra content appended as-is to the configuration file.  Run @command{man msmtp} for more information about the configuration file format."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51203
#, no-wrap
msgid "{Data Type} msmtp-account"
msgstr "{Tipo de dados} msmtp-account"

#. type: deftp
#: guix-git/doc/guix.texi:51205
#, fuzzy
msgid "Available @code{msmtp-account} fields are:"
msgstr "build-machine {Data Type}"

#. type: table
#: guix-git/doc/guix.texi:51209
#, fuzzy
#| msgid "The host name of the remote machine."
msgid "The unique name of the account."
msgstr "O nome de host da máquina remota."

#. type: item
#: guix-git/doc/guix.texi:51210
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{configuration} (type: msmtp-configuration)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51212
#, fuzzy
msgid "The configuration for this given account."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deftp
#: guix-git/doc/guix.texi:51221
#, no-wrap
msgid "{Data Type} msmtp-configuration"
msgstr "{Tipo de dados} msmtp-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51223
#, fuzzy
msgid "Available @code{msmtp-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51225
#, fuzzy, no-wrap
msgid "@code{auth?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51227
#, fuzzy
#| msgid "How to enable or disable substitutes."
msgid "Enable or disable authentication."
msgstr "Como habilitar ou desabilitar substitutos."

#. type: item
#: guix-git/doc/guix.texi:51228
#, fuzzy, no-wrap
msgid "@code{tls?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51230
msgid "Enable or disable TLS (also known as SSL) for secured connections."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51231
#, fuzzy, no-wrap
msgid "@code{tls-starttls?} (type: maybe-boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51234
msgid "Choose the TLS variant: start TLS from within the session (‘on’, default), or tunnel the session through TLS (‘off’)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51235
#, fuzzy, no-wrap
msgid "@code{tls-trust-file} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51238
msgid "Activate server certificate verification using a list of trusted Certification Authorities (CAs)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51243
msgid "Enable logging to the specified file.  An empty argument disables logging.  The file name ‘-’ directs the log information to standard output."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51244
#, fuzzy, no-wrap
msgid "@code{host} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51246
msgid "The SMTP server to send the mail to."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51247
#, fuzzy, no-wrap
msgid "@code{port} (type: maybe-integer)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51250
msgid "The port that the SMTP server listens on.  The default is 25 (\"smtp\"), unless TLS without STARTTLS is used, in which case it is 465 (\"smtps\")."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51253
#, fuzzy
#| msgid "Substitute Authentication"
msgid "Set the user name for authentication."
msgstr "Autenticação de substituto"

#. type: item
#: guix-git/doc/guix.texi:51254
#, fuzzy, no-wrap
msgid "@code{from} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51256
msgid "Set the envelope-from address."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51257
#, fuzzy, no-wrap
msgid "@code{password-eval} (type: maybe-string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51260
msgid "Set the password for authentication to the output (stdout) of the command cmd."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51265
msgid "Extra content appended as-is to the configuration block.  Run @command{man msmtp} for more information about the configuration file format."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51272 guix-git/doc/guix.texi:51273
#, fuzzy, no-wrap
#| msgid "Messaging Services"
msgid "Messaging Home Services"
msgstr "Serviços de mensageria"

#. type: cindex
#: guix-git/doc/guix.texi:51275
#, no-wrap
msgid "znc"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51279
msgid "The @uref{https://znc.in, ZNC bouncer} can be run as a daemon to manage your IRC presence.  With the @code{(gnu home services messaging)} service, you can configure ZNC to run upon login."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51281
msgid "You will have to provide a @file{~/.znc/configs/znc.conf} separately."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51287
#, fuzzy, no-wrap
msgid "(service home-znc-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:51289
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-znc-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51292
msgid "This is the type of the ZNC home service, whose value is a @code{home-znc-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51294
#, no-wrap
msgid "{Data Type} home-znc-configuration"
msgstr "{Tipo de dados} home-znc-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51296
#, fuzzy
msgid "Available @code{home-znc-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51298
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{znc} (default: @code{znc}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51300
#, fuzzy
#| msgid "The GPM package to use."
msgid "The ZNC package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:51304
msgid "Extra options will be passed to @command{znc}, please run @command{man znc} for more information."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51314
msgid "The @uref{https://gitlab.com/janneke/snuik, Snuik IRC bot} can be run as a daemon to aid talking to users that are currently offline.  With the @code{(gnu home services messaging)} service, you can configure Snuik to run upon login."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51315
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-snuik-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51318
#, fuzzy
msgid "This is the type of the Snuik home service, whose value is a @code{home-snuik-configuration} object."
msgstr "Gerencie a configuração do sistema operacional."

#. type: Plain text
#: guix-git/doc/guix.texi:51325
msgid "You may specify a custom configuration by providing a @code{snuik-configuration} record, exactly like for @code{snuik-service-type} and wrapping it in @code{for-home}.  Here is an example of a service and its configuration that you could add to the @code{services} field of your @code{home-environment}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51334
#, no-wrap
msgid ""
"(service home-snuik-service-type\n"
"         (for-home\n"
"          (snuik-configuration\n"
"           (server \"irc.oftc.net\")\n"
"           (nick \"sneek\")\n"
"           (password \"snuik is sneeky\")\n"
"           (channels '(\"#reproducible-builds\"))))\n"
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51336 guix-git/doc/guix.texi:51337
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "Media Home Services"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:51339
#, no-wrap
msgid "kodi"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51343
msgid "The @uref{https://kodi.tv, Kodi media center} can be run as a daemon on a media server.  With the @code{(gnu home services kodi)} service, you can configure Kodi to run upon login."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51351
#, no-wrap
msgid ""
"(service home-kodi-service-type\n"
"  (home-kodi-configuration\n"
"   (extra-options '(\"--settings=\"<settings-file>\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51353
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-kodi-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51356
msgid "This is the type of the Kodi home service, whose value is a @code{home-kodi-configuration} object."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51358
#, no-wrap
msgid "{Data Type} home-kodi-configuration"
msgstr "{Tipo de dados} home-kodi-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51360
#, fuzzy
msgid "Available @code{home-kodi-configuration} fields are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51362
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{kodi} (default: @code{kodi}) (type: file-like)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51364
#, fuzzy
msgid "The Kodi package to use."
msgstr "O pacote GPM a ser usado."

#. type: table
#: guix-git/doc/guix.texi:51368
msgid "Extra options will be passed to @command{kodi}, please run @command{man kodi} for more information."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51374 guix-git/doc/guix.texi:51375
#, no-wrap
msgid "mpv Media Player"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:51377
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "mpv, Home Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:51378
#, fuzzy, no-wrap
#| msgid "configuration"
msgid "mpv, configuration"
msgstr "configuration"

#. type: Plain text
#: guix-git/doc/guix.texi:51385
msgid "Configuring the @uref{https://mpv.io/, mpv media player} can be somewhat daunting task, due to the sheer amount of options available, especially if one wants to be able to inherit the configuration in their code.  The @code{home-mpv-service-type} is provided to help with that problem.  When the service is added to your home environment, file based on the passed configuration is generated and placed into the correct location."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51389
msgid "Due to the bug #74748, it does not use Guix Records to represent the configuration, but uses keyword arguments to achieve similar result.  Example follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51396
#, no-wrap
msgid ""
"(service home-mpv-service-type\n"
"         (make-home-mpv-configuration\n"
"          #:global (make-mpv-profile-configuration\n"
"                    #:fullscreen? #t\n"
"                    #:alang '(\"jpn\" \"eng\"))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51398
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-mpv-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51401
#, fuzzy
msgid "This is the type of the mpv home service, whose value is a @code{home-mpv-configuration} object."
msgstr "Gerencie a configuração do sistema operacional."

#. type: deffn
#: guix-git/doc/guix.texi:51403
#, fuzzy, no-wrap
msgid "{Procedure} make-home-mpv-configuration"
msgstr "build-machine {Data Type}"

#. type: deffn
#: guix-git/doc/guix.texi:51406
#, fuzzy
msgid "Return a new instance of @code{home-mpv-configuration}.  Available keyword arguments are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51408
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{inherit} (default: @code{#t})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51410
#, fuzzy
#| msgid "exporting files from the store"
msgid "Inherit fields from an another instance."
msgstr "exportando arquivos do armazém"

#. type: item
#: guix-git/doc/guix.texi:51411
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{global} (default: @code{(make-mpv-profile-configuration)})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51413
#, fuzzy
msgid "The global configuration preceding all profiles."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:51414
#, fuzzy, no-wrap
#| msgid "@code{properties} (default: @code{'()})"
msgid "@code{profiles} (default: @code{()})"
msgstr "@code{properties} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:51417
#, fuzzy
#| msgid "Instantiating a home configuration."
msgid "An alist containing configuration for any additional profiles to include in the configuration file."
msgstr "Inicializando uma configuração pessoal."

#. type: lisp
#: guix-git/doc/guix.texi:51422
#, no-wrap
msgid ""
"(make-home-mpv-configuration\n"
" #:profiles `((fullscreen . ,(make-mpv-profile-configuration\n"
"                              #:fullscreen? #t))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51424
#, fuzzy, no-wrap
#| msgid "@code{extend} (default: @code{#f})"
msgid "@code{extra-config} (default: @code{#f})"
msgstr "@code{extend} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51427
msgid "Additional content to include in the configuration file.  It is placed at the end of the file."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51431
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "{Procedure} make-mpv-profile-configuration"
msgstr "Configuração do git"

#. type: deffn
#: guix-git/doc/guix.texi:51437
msgid "Return a new instance of @code{mpv-profile-configuration}.  As above, it also supports the @code{#:inherit} argument.  Additionally it supports keyword arguments named after the options of @command{mpv}.  Hence @option{--fullscreen} (or @code{fullscreen} in the configuration file)  becomes @code{#:fullscreen?}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51443
msgid "Few options are using their aliases instead.  @option{audio} instead of @option{aid}, @option{video} instead of @option{vid}, @option{sub} instead of @option{sid}, @option{screenshot-directory} instead of @option{screenshot-dir} and @option{watch-later-directory} instead of @option{watch-later-dir}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51445
msgid "Valid values for the fields depend on their type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51447
#, no-wrap
msgid "Flags"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51449
msgid "The value should be @code{#f} or @code{#t}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51450
#, no-wrap
msgid "Numerical fields"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51453
msgid "Integer and integer64 fields are validated by @code{integer?}, float and double fields by @code{real?}.  Ranges are checked when applicable."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51454
#, no-wrap
msgid "Aspect"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51456
#, fuzzy
#| msgid "Game servers."
msgid "Same as integer."
msgstr "Servidores de jogos."

#. type: item
#: guix-git/doc/guix.texi:51457
#, no-wrap
msgid "ByteSize"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51459
msgid "Same as integer64."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51460
#, no-wrap
msgid "Choice"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51464
msgid "The value should be a symbol representing member of the enumeration.  If the choice has @samp{or ...} part, it can also be value of that alternative type."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51465
#, fuzzy, no-wrap
#| msgid "-t @var{type}"
msgid "@var{type} list"
msgstr "-t @var{tipo}"

#. type: table
#: guix-git/doc/guix.texi:51467
msgid "The value should be a list of the @var{type}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51474
msgid "Other types accept strings, with validation of the values where possible (e.g. type @samp{Color} is validated, but type @samp{Audio channels or channel map} is not).  If an option is marked as taking a file, values satisfying @code{file-like?} can also be used."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51479
msgid "The full list of currently supported keyword arguments is below.  For the types, allowed values and full description please refer to the @command{mpv --list-options} and @uref{https://mpv.io/manual/stable/#options, mpv manual}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51483
msgid "Only set fields are output to the configuration file.  Accessors are provided for every field, returning either their value or a sentinel object @code{%unset-value} (from @code{(gnu services configuration)})."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51802
msgid "@code{ab-loop-a}, @code{ab-loop-b}, @code{ab-loop-count}, @code{access-references?}, @code{ad}, @code{ad-lavc-ac3drc}, @code{ad-lavc-downmix?}, @code{ad-lavc-o}, @code{ad-lavc-threads}, @code{ad-queue-enable?}, @code{ad-queue-max-bytes}, @code{ad-queue-max-samples}, @code{ad-queue-max-secs}, @code{af}, @code{audio}, @code{alang}, @code{allow-delayed-peak-detect?}, @code{alsa-buffer-time}, @code{alsa-ignore-chmap?}, @code{alsa-mixer-device}, @code{alsa-mixer-index}, @code{alsa-mixer-name}, @code{alsa-non-interleaved?}, @code{alsa-periods}, @code{alsa-resample?}, @code{ao}, @code{ao-null-broken-delay?}, @code{ao-null-broken-eof?}, @code{ao-null-buffer}, @code{ao-null-channel-layouts}, @code{ao-null-format}, @code{ao-null-latency}, @code{ao-null-outburst}, @code{ao-null-speed}, @code{ao-null-untimed?}, @code{ao-pcm-append?}, @code{ao-pcm-file}, @code{ao-pcm-waveheader?}, @code{archive-exts}, @code{audio-backward-batch}, @code{audio-backward-overlap}, @code{audio-buffer}, @code{audio-channels}, @code{audio-client-name}, @code{audio-delay}, @code{audio-demuxer}, @code{audio-device}, @code{audio-display}, @code{audio-exclusive?}, @code{audio-exts}, @code{audio-fallback-to-null?}, @code{audio-file-auto}, @code{audio-file-paths}, @code{audio-files}, @code{audio-format}, @code{audio-normalize-downmix?}, @code{audio-pitch-correction?}, @code{audio-resample-cutoff}, @code{audio-resample-filter-size}, @code{audio-resample-linear?}, @code{audio-resample-max-output-size}, @code{audio-resample-phase-shift}, @code{audio-reversal-buffer}, @code{audio-samplerate}, @code{audio-spdif}, @code{audio-stream-silence?}, @code{audio-swresample-o}, @code{audio-wait-open}, @code{auto-window-resize?}, @code{autocreate-playlist}, @code{autofit}, @code{autofit-larger}, @code{autofit-smaller}, @code{autoload-files?}, @code{autosync}, @code{background}, @code{background-color}, @code{blend-subtitles}, @code{bluray-device}, @code{border?}, @code{border-background}, @code{brightness}, @code{cache}, @code{cache-on-disk?}, @code{cache-pause?}, @code{cache-pause-initial?}, @code{cache-pause-wait}, @code{cache-secs}, @code{cdda-cdtext?}, @code{cdda-device}, @code{cdda-overlap}, @code{cdda-paranoia}, @code{cdda-sector-size}, @code{cdda-skip?}, @code{cdda-span-a}, @code{cdda-span-b}, @code{cdda-speed}, @code{cdda-toc-offset}, @code{chapter-merge-threshold}, @code{chapter-seek-threshold}, @code{chapters-file}, @code{clipboard-backends}, @code{clipboard-monitor?}, @code{config?}, @code{container-fps-override}, @code{contrast}, @code{cookies?}, @code{cookies-file}, @code{corner-rounding}, @code{correct-downscaling?}, @code{correct-pts?}, @code{cover-art-auto}, @code{cover-art-files}, @code{cover-art-whitelist}, @code{cscale}, @code{cscale-antiring}, @code{cscale-blur}, @code{cscale-clamp}, @code{cscale-param1}, @code{cscale-param2}, @code{cscale-radius}, @code{cscale-taper}, @code{cscale-window}, @code{cscale-wparam}, @code{cscale-wtaper}, @code{cursor-autohide}, @code{cursor-autohide-fs-only?}, @code{deband?}, @code{deband-grain}, @code{deband-iterations}, @code{deband-range}, @code{deband-threshold}, @code{deinterlace}, @code{deinterlace-field-parity}, @code{demuxer}, @code{demuxer-backward-playback-step}, @code{demuxer-cache-dir}, @code{demuxer-cache-unlink-files}, @code{demuxer-cache-wait?}, @code{demuxer-donate-buffer?}, @code{demuxer-hysteresis-secs}, @code{demuxer-lavf-allow-mimetype?}, @code{demuxer-lavf-analyzeduration}, @code{demuxer-lavf-buffersize}, @code{demuxer-lavf-format}, @code{demuxer-lavf-hacks?}, @code{demuxer-lavf-linearize-timestamps}, @code{demuxer-lavf-o}, @code{demuxer-lavf-probe-info}, @code{demuxer-lavf-probescore}, @code{demuxer-lavf-probesize}, @code{demuxer-lavf-propagate-opts?}, @code{demuxer-max-back-bytes}, @code{demuxer-max-bytes}, @code{demuxer-mkv-crop-compat?}, @code{demuxer-mkv-probe-start-time?}, @code{demuxer-mkv-probe-video-duration}, @code{demuxer-mkv-subtitle-preroll}, @code{demuxer-mkv-subtitle-preroll-secs}, @code{demuxer-mkv-subtitle-preroll-secs-index}, @code{demuxer-rawaudio-channels}, @code{demuxer-rawaudio-format}, @code{demuxer-rawaudio-rate}, @code{demuxer-rawvideo-codec}, @code{demuxer-rawvideo-format}, @code{demuxer-rawvideo-fps}, @code{demuxer-rawvideo-h}, @code{demuxer-rawvideo-mp-format}, @code{demuxer-rawvideo-size}, @code{demuxer-rawvideo-w}, @code{demuxer-readahead-secs}, @code{demuxer-seekable-cache}, @code{demuxer-termination-timeout}, @code{demuxer-thread?}, @code{directory-filter-types}, @code{directory-mode}, @code{display-fps-override}, @code{display-tags}, @code{dither}, @code{dither-depth}, @code{dither-size-fruit}, @code{drag-and-drop}, @code{dscale}, @code{dscale-antiring}, @code{dscale-blur}, @code{dscale-clamp}, @code{dscale-param1}, @code{dscale-param2}, @code{dscale-radius}, @code{dscale-taper}, @code{dscale-window}, @code{dscale-wparam}, @code{dscale-wtaper}, @code{dump-stats}, @code{dvbin-card}, @code{dvbin-channel-switch-offset}, @code{dvbin-file}, @code{dvbin-full-transponder?}, @code{dvbin-prog}, @code{dvbin-timeout}, @code{dvd-angle}, @code{dvd-device}, @code{dvd-speed}, @code{edition}, @code{egl-config-id}, @code{egl-output-format}, @code{embeddedfonts?}, @code{end}, @code{error-diffusion}, @code{external-files}, @code{fbo-format}, @code{focus-on}, @code{force-media-title}, @code{force-render?}, @code{force-rgba-osd-rendering?}, @code{force-seekable?}, @code{force-window}, @code{force-window-position?}, @code{framedrop}, @code{frames}, @code{fs-screen}, @code{fs-screen-name}, @code{fullscreen?}, @code{gamma}, @code{gamma-auto?}, @code{gamma-factor}, @code{gamut-mapping-mode}, @code{gapless-audio}, @code{geometry}, @code{glsl-shader-opts}, @code{glsl-shaders}, @code{gpu-api}, @code{gpu-context}, @code{gpu-debug?}, @code{gpu-dumb-mode}, @code{gpu-hwdec-interop}, @code{gpu-shader-cache?}, @code{gpu-shader-cache-dir}, @code{gpu-sw?}, @code{gpu-tex-pad-x}, @code{gpu-tex-pad-y}, @code{hdr-compute-peak}, @code{hdr-contrast-recovery}, @code{hdr-contrast-smoothness}, @code{hdr-peak-decay-rate}, @code{hdr-peak-percentile}, @code{hdr-scene-threshold-high}, @code{hdr-scene-threshold-low}, @code{hidpi-window-scale?}, @code{hls-bitrate}, @code{hr-seek}, @code{hr-seek-demuxer-offset}, @code{hr-seek-framedrop?}, @code{http-header-fields}, @code{http-proxy}, @code{hue}, @code{hwdec}, @code{hwdec-codecs}, @code{hwdec-extra-frames}, @code{hwdec-image-format}, @code{hwdec-software-fallback}, @code{icc-3dlut-size}, @code{icc-cache?}, @code{icc-cache-dir}, @code{icc-force-contrast}, @code{icc-intent}, @code{icc-profile}, @code{icc-profile-auto?}, @code{icc-use-luma?}, @code{idle}, @code{ignore-path-in-watch-later-config?}, @code{image-display-duration}, @code{image-exts}, @code{image-lut}, @code{image-lut-type}, @code{image-subs-video-resolution?}, @code{include}, @code{index}, @code{initial-audio-sync?}, @code{input-ar-delay}, @code{input-ar-rate}, @code{input-builtin-bindings?}, @code{input-builtin-dragging?}, @code{input-commands}, @code{input-conf}, @code{input-cursor?}, @code{input-cursor-passthrough?}, @code{input-default-bindings?}, @code{input-doubleclick-time}, @code{input-dragging-deadzone}, @code{input-ime?}, @code{input-ipc-client}, @code{input-ipc-server}, @code{input-key-fifo-size}, @code{input-media-keys?}, @code{input-preprocess-wheel?}, @code{input-right-alt-gr?}, @code{input-terminal?}, @code{input-test?}, @code{input-touch-emulate-mouse?}, @code{input-vo-keyboard?}, @code{interpolation?}, @code{interpolation-preserve?}, @code{interpolation-threshold}, @code{inverse-tone-mapping?}, @code{jack-autostart?}, @code{jack-connect?}, @code{jack-name}, @code{jack-port}, @code{jack-std-channel-layout}, @code{keep-open}, @code{keep-open-pause?}, @code{keepaspect?}, @code{keepaspect-window?}, @code{lavfi-complex}, @code{length}, @code{libplacebo-opts}, @code{linear-downscaling?}, @code{linear-upscaling?}, @code{load-auto-profiles}, @code{load-commands?}, @code{load-console?}, @code{load-positioning?}, @code{load-scripts?}, @code{load-select?}, @code{load-stats-overlay?}, @code{load-unsafe-playlists?}, @code{log-file}, @code{loop-file}, @code{loop-playlist}, @code{lut}, @code{lut-type}, @code{mc}, @code{media-controls?}, @code{merge-files?}, @code{metadata-codepage}, @code{mf-fps}, @code{mf-type}, @code{monitoraspect}, @code{monitorpixelaspect}, @code{msg-color?}, @code{msg-level}, @code{msg-module?}, @code{msg-time?}, @code{mute?}, @code{native-fs?}, @code{native-keyrepeat?}, @code{native-touch?}, @code{network-timeout}, @code{oac}, @code{oacopts}, @code{ocopy-metadata?}, @code{of}, @code{ofopts}, @code{on-all-workspaces?}, @code{ontop?}, @code{ontop-level}, @code{opengl-check-pattern-a}, @code{opengl-check-pattern-b}, @code{opengl-early-flush}, @code{opengl-es}, @code{opengl-glfinish?}, @code{opengl-pbo?}, @code{opengl-rectangle-textures?}, @code{opengl-swapinterval}, @code{opengl-waitvsync?}, @code{orawts?}, @code{ordered-chapters?}, @code{ordered-chapters-files}, @code{oremove-metadata}, @code{osc?}, @code{osd-align-x}, @code{osd-align-y}, @code{osd-back-color}, @code{osd-bar?}, @code{osd-bar-align-x}, @code{osd-bar-align-y}, @code{osd-bar-h}, @code{osd-bar-marker-min-size}, @code{osd-bar-marker-scale}, @code{osd-bar-marker-style}, @code{osd-bar-outline-size}, @code{osd-bar-w}, @code{osd-blur}, @code{osd-bold?}, @code{osd-border-style}, @code{osd-color}, @code{osd-duration}, @code{osd-font}, @code{osd-font-provider}, @code{osd-font-size}, @code{osd-fonts-dir}, @code{osd-fractions?}, @code{osd-italic?}, @code{osd-justify}, @code{osd-level}, @code{osd-margin-x}, @code{osd-margin-y}, @code{osd-msg1}, @code{osd-msg2}, @code{osd-msg3}, @code{osd-on-seek}, @code{osd-outline-color}, @code{osd-outline-size}, @code{osd-playing-msg}, @code{osd-playing-msg-duration}, @code{osd-playlist-entry}, @code{osd-scale}, @code{osd-scale-by-window?}, @code{osd-selected-color}, @code{osd-selected-outline-color}, @code{osd-shadow-offset}, @code{osd-spacing}, @code{osd-status-msg}, @code{oset-metadata}, @code{ovc}, @code{ovcopts}, @code{panscan}, @code{pause?}, @code{pipewire-buffer}, @code{pipewire-remote}, @code{pipewire-volume-mode}, @code{pitch}, @code{play-direction}, @code{player-operation-mode}, @code{playlist-exts}, @code{playlist-start}, @code{prefetch-playlist?}, @code{profile}, @code{pulse-allow-suspended?}, @code{pulse-buffer}, @code{pulse-host}, @code{pulse-latency-hacks?}, @code{quiet?}, @code{really-quiet?}, @code{rebase-start-time?}, @code{referrer}, @code{replaygain}, @code{replaygain-clip?}, @code{replaygain-fallback}, @code{replaygain-preamp}, @code{reset-on-next-file}, @code{resume-playback?}, @code{resume-playback-check-mtime?}, @code{rtsp-transport}, @code{saturation}, @code{save-position-on-quit?}, @code{save-watch-history?}, @code{scale}, @code{scale-antiring}, @code{scale-blur}, @code{scale-clamp}, @code{scale-param1}, @code{scale-param2}, @code{scale-radius}, @code{scale-taper}, @code{scale-window}, @code{scale-wparam}, @code{scale-wtaper}, @code{scaler-resizes-only?}, @code{screen}, @code{screen-name}, @code{screenshot-avif-encoder}, @code{screenshot-avif-opts}, @code{screenshot-avif-pixfmt}, @code{screenshot-directory}, @code{screenshot-format}, @code{screenshot-high-bit-depth?}, @code{screenshot-jpeg-quality}, @code{screenshot-jpeg-source-chroma?}, @code{screenshot-jxl-distance}, @code{screenshot-jxl-effort}, @code{screenshot-png-compression}, @code{screenshot-png-filter}, @code{screenshot-sw?}, @code{screenshot-tag-colorspace?}, @code{screenshot-template}, @code{screenshot-webp-compression}, @code{screenshot-webp-lossless?}, @code{screenshot-webp-quality}, @code{script-opts}, @code{scripts}, @code{secondary-sid}, @code{secondary-sub-ass-override}, @code{secondary-sub-delay}, @code{secondary-sub-pos}, @code{secondary-sub-visibility?}, @code{sharpen}, @code{show-in-taskbar?}, @code{shuffle?}, @code{sub}, @code{sigmoid-center}, @code{sigmoid-slope}, @code{sigmoid-upscaling?}, @code{slang}, @code{snap-window?}, @code{speed}, @code{spirv-compiler}, @code{sstep}, @code{start}, @code{stop-playback-on-init-failure?}, @code{stop-screensaver}, @code{stream-buffer-size}, @code{stream-dump}, @code{stream-lavf-o}, @code{stream-record}, @code{stretch-dvd-subs?}, @code{stretch-image-subs-to-screen?}, @code{sub-align-x}, @code{sub-align-y}, @code{sub-ass?}, @code{sub-ass-force-margins?}, @code{sub-ass-justify?}, @code{sub-ass-override}, @code{sub-ass-prune-delay}, @code{sub-ass-scale-with-window?}, @code{sub-ass-style-overrides}, @code{sub-ass-styles}, @code{sub-ass-use-video-data}, @code{sub-ass-video-aspect-override}, @code{sub-ass-vsfilter-color-compat}, @code{sub-auto}, @code{sub-auto-exts}, @code{sub-back-color}, @code{sub-blur}, @code{sub-bold?}, @code{sub-border-style}, @code{sub-clear-on-seek?}, @code{sub-codepage}, @code{sub-color}, @code{sub-create-cc-track?}, @code{sub-delay}, @code{sub-demuxer}, @code{sub-file-paths}, @code{sub-files}, @code{sub-filter-jsre}, @code{sub-filter-regex}, @code{sub-filter-regex-enable?}, @code{sub-filter-regex-plain?}, @code{sub-filter-regex-warn?}, @code{sub-filter-sdh?}, @code{sub-filter-sdh-enclosures}, @code{sub-filter-sdh-harder?}, @code{sub-fix-timing?}, @code{sub-font}, @code{sub-font-provider}, @code{sub-font-size}, @code{sub-fonts-dir}, @code{sub-forced-events-only?}, @code{sub-fps}, @code{sub-gauss}, @code{sub-gray?}, @code{sub-hinting}, @code{sub-italic?}, @code{sub-justify}, @code{sub-lavc-o}, @code{sub-line-spacing}, @code{sub-margin-x}, @code{sub-margin-y}, @code{sub-outline-color}, @code{sub-outline-size}, @code{sub-past-video-end?}, @code{sub-pos}, @code{sub-scale}, @code{sub-scale-by-window?}, @code{sub-scale-signs?}, @code{sub-scale-with-window?}, @code{sub-shadow-offset}, @code{sub-shaper}, @code{sub-spacing}, @code{sub-speed}, @code{sub-stretch-durations?}, @code{sub-use-margins?}, @code{sub-visibility?}, @code{sub-vsfilter-bidi-compat?}, @code{subs-fallback}, @code{subs-fallback-forced}, @code{subs-match-os-language?}, @code{subs-with-matching-audio}, @code{swapchain-depth}, @code{sws-allow-zimg?}, @code{sws-bitexact?}, @code{sws-cgb}, @code{sws-chs}, @code{sws-cs}, @code{sws-cvs}, @code{sws-fast?}, @code{sws-lgb}, @code{sws-ls}, @code{sws-scaler}, @code{target-colorspace-hint}, @code{target-contrast}, @code{target-gamut}, @code{target-lut}, @code{target-peak}, @code{target-prim}, @code{target-trc}, @code{taskbar-progress?}, @code{teletext-page}, @code{temporal-dither?}, @code{temporal-dither-period}, @code{term-osd}, @code{term-osd-bar?}, @code{term-osd-bar-chars}, @code{term-playing-msg}, @code{term-status-msg}, @code{term-title}, @code{terminal?}, @code{title}, @code{title-bar?}, @code{tls-ca-file}, @code{tls-cert-file}, @code{tls-key-file}, @code{tls-verify?}, @code{tone-mapping}, @code{tone-mapping-max-boost}, @code{tone-mapping-param}, @code{tone-mapping-visualize?}, @code{track-auto-selection?}, @code{tscale}, @code{tscale-antiring}, @code{tscale-blur}, @code{tscale-clamp}, @code{tscale-param1}, @code{tscale-param2}, @code{tscale-radius}, @code{tscale-taper}, @code{tscale-window}, @code{tscale-wparam}, @code{tscale-wtaper}, @code{untimed?}, @code{use-embedded-icc-profile?}, @code{use-filedir-conf?}, @code{user-agent}, @code{vaapi-device}, @code{vd}, @code{vd-apply-cropping?}, @code{vd-lavc-assume-old-x264?}, @code{vd-lavc-bitexact?}, @code{vd-lavc-check-hw-profile?}, @code{vd-lavc-dr}, @code{vd-lavc-fast?}, @code{vd-lavc-film-grain}, @code{vd-lavc-framedrop}, @code{vd-lavc-o}, @code{vd-lavc-show-all?}, @code{vd-lavc-skipframe}, @code{vd-lavc-skipidct}, @code{vd-lavc-skiploopfilter}, @code{vd-lavc-threads}, @code{vd-queue-enable?}, @code{vd-queue-max-bytes}, @code{vd-queue-max-samples}, @code{vd-queue-max-secs}, @code{vf}, @code{video}, @code{video-align-x}, @code{video-align-y}, @code{video-aspect-method}, @code{video-aspect-override}, @code{video-backward-batch}, @code{video-backward-overlap}, @code{video-crop}, @code{video-exts}, @code{video-latency-hacks?}, @code{video-margin-ratio-bottom}, @code{video-margin-ratio-left}, @code{video-margin-ratio-right}, @code{video-margin-ratio-top}, @code{video-osd?}, @code{video-output-levels}, @code{video-pan-x}, @code{video-pan-y}, @code{video-recenter?}, @code{video-reversal-buffer}, @code{video-rotate}, @code{video-scale-x}, @code{video-scale-y}, @code{video-sync}, @code{video-sync-max-audio-change}, @code{video-sync-max-factor}, @code{video-sync-max-video-change}, @code{video-timing-offset}, @code{video-unscaled}, @code{video-zoom}, @code{vlang}, @code{vo}, @code{vo-image-avif-encoder}, @code{vo-image-avif-opts}, @code{vo-image-avif-pixfmt}, @code{vo-image-format}, @code{vo-image-high-bit-depth?}, @code{vo-image-jpeg-quality}, @code{vo-image-jpeg-source-chroma?}, @code{vo-image-jxl-distance}, @code{vo-image-jxl-effort}, @code{vo-image-outdir}, @code{vo-image-png-compression}, @code{vo-image-png-filter}, @code{vo-image-tag-colorspace?}, @code{vo-image-webp-compression}, @code{vo-image-webp-lossless?}, @code{vo-image-webp-quality}, @code{vo-kitty-alt-screen?}, @code{vo-kitty-cols}, @code{vo-kitty-config-clear?}, @code{vo-kitty-height}, @code{vo-kitty-left}, @code{vo-kitty-rows}, @code{vo-kitty-top}, @code{vo-kitty-use-shm?}, @code{vo-kitty-width}, @code{vo-null-fps}, @code{vo-sixel-alt-screen?}, @code{vo-sixel-buffered?}, @code{vo-sixel-cols}, @code{vo-sixel-config-clear?}, @code{vo-sixel-dither}, @code{vo-sixel-fixedpalette?}, @code{vo-sixel-height}, @code{vo-sixel-left}, @code{vo-sixel-pad-x}, @code{vo-sixel-pad-y}, @code{vo-sixel-reqcolors}, @code{vo-sixel-rows}, @code{vo-sixel-threshold}, @code{vo-sixel-top}, @code{vo-sixel-width}, @code{vo-tct-256?}, @code{vo-tct-algo}, @code{vo-tct-buffering}, @code{vo-tct-height}, @code{vo-tct-width}, @code{vo-vaapi-scaled-osd?}, @code{vo-vaapi-scaling}, @code{vo-vdpau-chroma-deint?}, @code{vo-vdpau-colorkey}, @code{vo-vdpau-composite-detect?}, @code{vo-vdpau-denoise}, @code{vo-vdpau-force-yuv?}, @code{vo-vdpau-fps}, @code{vo-vdpau-hqscaling}, @code{vo-vdpau-output-surfaces}, @code{vo-vdpau-pullup?}, @code{vo-vdpau-queuetime-fs}, @code{vo-vdpau-queuetime-windowed}, @code{vo-vdpau-sharpen}, @code{volume}, @code{volume-gain}, @code{volume-gain-max}, @code{volume-gain-min}, @code{volume-max}, @code{vulkan-async-compute?}, @code{vulkan-async-transfer?}, @code{vulkan-device}, @code{vulkan-display-display}, @code{vulkan-display-mode}, @code{vulkan-display-plane}, @code{vulkan-queue-count}, @code{vulkan-swap-mode}, @code{watch-history-path}, @code{watch-later-directory}, @code{watch-later-options}, @code{wayland-app-id}, @code{wayland-configure-bounds}, @code{wayland-content-type}, @code{wayland-disable-vsync?}, @code{wayland-edge-pixels-pointer}, @code{wayland-edge-pixels-touch}, @code{wayland-internal-vsync}, @code{wayland-present?}, @code{wid}, @code{window-dragging?}, @code{window-maximized?}, @code{window-minimized?}, @code{window-scale}, @code{write-filename-in-watch-later-config?}, @code{x11-bypass-compositor}, @code{x11-name}, @code{x11-netwm}, @code{x11-present}, @code{x11-wid-title?}, @code{xv-adaptor}, @code{xv-buffers}, @code{xv-ck}, @code{xv-ck-method}, @code{xv-colorkey}, @code{xv-port}, @code{ytdl?}, @code{ytdl-format}, @code{ytdl-raw-options}, @code{zimg-dither}, @code{zimg-fast?}, @code{zimg-scaler}, @code{zimg-scaler-chroma}, @code{zimg-scaler-chroma-param-a}, @code{zimg-scaler-chroma-param-b}, @code{zimg-scaler-param-a}, @code{zimg-scaler-param-b}, and @code{zimg-threads}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:51805 guix-git/doc/guix.texi:51806
#, no-wrap
msgid "Sway window manager"
msgstr "Gerenciador de janelas Sway"

#. type: cindex
#: guix-git/doc/guix.texi:51808
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "sway, Home Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:51809
#, fuzzy, no-wrap
#| msgid "git configuration"
msgid "sway, configuration"
msgstr "Configuração do git"

#. type: Plain text
#: guix-git/doc/guix.texi:51814
msgid "The @code{(gnu home services sway)} module provides @code{home-sway-service-type}, a home service to configure the @uref{https://github.com/swaywm/sway,Sway window manager for Wayland} in a declarative way."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51830
#, no-wrap
msgid ""
"(service home-sway-service-type\n"
"         (sway-configuration\n"
"          (gestures\n"
"           '((swipe:3:down . \"move to scratchpad\")\n"
"             (swipe:3:up   . \"scratchpad show\")))\n"
"          (outputs\n"
"           (list (sway-output\n"
"                  (identifier '*)\n"
"                  (background (file-append sway\n"
"                                           \"\\\n"
"/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png\")))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:51833
msgid "The above example describes a Sway configuration in which"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:51837
msgid "all monitors use a particular wallpaper whose @file{.png} is provided by the @code{sway} package;"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:51840
msgid "swiping down (resp.@: up) with three fingers moves the active window to the scratchpad (resp.@: shows/hides the scratchpad)."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:51847
msgid "This home service only sets up the configuration file and profile packages for Sway.  It does @emph{not} start Sway in any way.  If you want to do so, you might be interested in using @code{greetd-wlgreet-sway-session} instead."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:51851
msgid "The procedure @code{sway-configuration->file} defined below can be used to provide the value for the @emph{optional} @code{sway-configuration} field of @code{greetd-wlgreet-sway-session}."
msgstr ""

#. type: deffn
#: guix-git/doc/guix.texi:51853
#, fuzzy, no-wrap
msgid "{Procedure} sway-configuration->file config"
msgstr "build-machine {Data Type}"

#. type: deffn
#: guix-git/doc/guix.texi:51857
msgid "This procedure takes one argument @code{config}, which must be a @code{sway-configuration} record (defined below), and returns a file-like object representing the serialized configuration."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:51859
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-sway-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:51861
msgid "This is a home service type to set up Sway.  It takes care of:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:51864
msgid "providing a @file{~/.config/sway/config} file,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:51866
msgid "adding Sway-related packages to your profile."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51869
#, no-wrap
msgid "{Data Type} sway-configuration"
msgstr "{Tipo de dados} sway-configuration"

#. type: deftp
#: guix-git/doc/guix.texi:51872
#, fuzzy
msgid "This configuration record describes the Sway configuration (see@ @cite{sway(5)}).  Available fields are:"
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:51874
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{variables} (default: @code{%sway-default-variables})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51878
msgid "The value of this field is an association list in which keys are symbols and values are either strings, G-expressions or file-like objects (@pxref{G-Expressions})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51880
msgid "Example:"
msgstr "Exemplo:"

#. type: lisp
#: guix-git/doc/guix.texi:51886
#, no-wrap
msgid ""
"(variables `((mod . \"Mod4\") ; string\n"
"             (term ; file-append\n"
"              . ,(file-append foot \"/bin/foot\"))\n"
"             (Term ; G-expression\n"
"              . ,#~(string-append #$foot \"/bin/foot\"))))\n"
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:51893
msgid "Default keybindings assume the existence of variables named @code{$mod}, @code{$left}, @code{$right}, @code{$up} and @code{$down}.  If you choose not to define these variables, make sure to remove keybindings referring to them."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51895
#, fuzzy, no-wrap
msgid "@code{keybindings} (default: @code{%sway-default-keybindings})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51899
msgid "This field describes keybindings for the @emph{default} mode.  The value is an association list: keys are symbols and values are either strings or G-expressions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51903
msgid "The following snippet launches the terminal when pressing @kbd{$mod+t} and @kbd{$mod+Shift+t} (assuming that a variable @code{$term} is defined):"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51906
#, no-wrap
msgid ""
"`(($mod+t . ,#~(string-append \"exec \" #$foot \"/bin/foot\"))\n"
"  ($mod+Shift+t . \"exec $term\"))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51908
#, fuzzy, no-wrap
msgid "@code{gestures} (default: @code{%sway-default-gestures})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51910
msgid "Similar to the previous field, but for finger-gestures."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51913
msgid "The following snippet allows to navigate through workspaces by swiping right and left with three fingers:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51916
#, no-wrap
msgid ""
"'((swipe:3:right . \"workspace next_on_output\")\n"
"  (swipe:3:left  . \"workspace prev_on_output\"))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51918
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{packages} (default: @code{%sway-default-packages})"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51921
msgid "This field describes a list of packages to add to the user profile.  At the moment, the default value only adds @code{sway} to the profile."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51924
#, fuzzy
msgid "List of @code{sway-input} configuration records (described below)."
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51925
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{outputs} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:51927
#, fuzzy
msgid "List of @code{sway-output} configuration records (described below)."
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51928
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{bar} (optional @code{sway-bar} record)"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:51931
msgid "Optional @code{sway-bar} record (described below) to configure a Sway bar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51932
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{modes} (default: @code{%sway-default-modes})"
msgstr "@code{tor} (default: @code{tor})"

#. type: table
#: guix-git/doc/guix.texi:51937
msgid "List of @code{sway-mode} records (described below) to add modes to the Sway configuration.  The default value @code{%sway-default-modes} adds the ``resize'' mode of the default Sway configuration (as described below)."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51938
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{startup+reload-programs} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:51942
msgid "Programs to execute at startup time @emph{and} after every configuration reload.  The value of this field is a list of strings, G-expressions or file-like objects (@pxref{G-Expressions})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51943
#, fuzzy, no-wrap
msgid "@code{startup-programs} (default: @code{%sway-default-startup-programs})"
msgstr "@code{options} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51946
msgid "Programs to execute at startup time.  As above, values of this field are a list of strings, G-expressions or file-like objects."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51951
msgid "The default value, @code{%sway-default-startup-programs}, executes @code{swayidle} in order to lock the screen after 5@ minutes of inactivity (displaying a background distributed with Sway) and turn the screen off after 10@ minutes of inactivity."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51952 guix-git/doc/guix.texi:51999
#: guix-git/doc/guix.texi:52053
#, fuzzy, no-wrap
#| msgid "@code{replacement} (default: @code{#f})"
msgid "@code{extra-content} (default: @code{'()})"
msgstr "@code{replacement} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51955
msgid "Lines to add to the configuration file.  The value of this field is a list of strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51958
#, no-wrap
msgid "{Data Type} sway-input"
msgstr "{Tipo de dados} sway-input"

#. type: deftp
#: guix-git/doc/guix.texi:51963
msgid "@code{sway-input} records describe input blocks (see@ @cite{sway-input(5)}).  For example, the following snippet makes all keyboards use a French layout, in which @kbd{capslock} has been remapped to @kbd{ctrl}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:51967
#, no-wrap
msgid ""
"(sway-input (identifier \"type:keyboard\")\n"
"            (layout\n"
"              (keyboard-layout \"fr\" #:options '(\"ctrl:nocaps\"))))\n"
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:51970
#, fuzzy
msgid "Available fields for @code{sway-input} configuration records are:"
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:51972 guix-git/doc/guix.texi:52010
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{identifier} (default: @code{'*})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:51976
msgid "Identifier of the input.  The field accepts symbols and strings.  If the @code{identifier} is a symbol, it is inserted as is; if it is a string, it will be quoted in the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51977
#, no-wrap
msgid "@code{layout} (optional @code{<keyboard-layout>} record)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51981
msgid "Keyboard specific option.  Field specifying the layout to use for the input.  The value must be a @code{<keyboard-layout>} record (@pxref{Keyboard Layout})."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:51985
msgid "@code{(gnu home services sway)} does not re-export the @code{keyboard-layout} procedure."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51987
#, no-wrap
msgid "@code{disable-while-typing} (optional boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51990
msgid "If @code{#t} (resp.@: @code{#f}) enables (resp.@: disables) the ``disable while typing'' option for this input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51991
#, no-wrap
msgid "@code{disable-while-trackpointing} (optional boolean)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:51994
msgid "If @code{#t} (resp.@: @code{#f}), enables (resp.@: disables) the ``disable while track-pointing'' option for this input."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:51995
#, fuzzy, no-wrap
msgid "@code{tap} (optional boolean)"
msgstr "@code{chdir} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:51998
msgid "Enables or disables the ``tap'' option, which allows clicking by tapping on a touchpad."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52002
msgid "Lines to add to the input block.  The value of this field must a list whose elements are either strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52005
#, no-wrap
msgid "{Data Type} sway-output"
msgstr "{Tipo de dados} sway-output"

#. type: deftp
#: guix-git/doc/guix.texi:52008
msgid "@code{sway-output} records describe Sway outputs (see@ @cite{sway-output(5)}).  Available fields are:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52014
msgid "Identifier of the monitor.  The field accepts symbols and strings.  If the @code{identifier} is a symbol, it is inserted as is; if it is a string, it will be quoted in the configuration file."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52015
#, fuzzy, no-wrap
msgid "@code{resolution} (optional string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52017
msgid "This string defines the resolution of the monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52018 guix-git/doc/guix.texi:52108
#, fuzzy, no-wrap
msgid "@code{position} (optional)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52021
msgid "The (optional) value of this field must be a @code{point}.  Example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52025
#, no-wrap
msgid ""
"(position\n"
" (point (x 1920)\n"
"        (y 0)))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52027
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{background} (optional)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:52030
msgid "The value of this field describes what wallpaper to use on this output.  The field accepts the following types of values:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52033
msgid "a string,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52035
#, fuzzy
#| msgid "G-Expressions"
msgid "a G-expression,"
msgstr "Expressões-G"

#. type: itemize
#: guix-git/doc/guix.texi:52037
msgid "a file-like object,"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52042
msgid "a pair.  The first argument of this pair must be a string, a G-expression or a file-like object.  The second element describes how the wallpaper will be displayed.  It must be a symbol among @code{stretch}, @code{fill}, @code{fit}, @code{center} and @code{tile}."
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52045
msgid "If the second element is not specified (@i{i.e.}@: when the value is not a pair), the @code{fill} mode will be used."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52051
msgid "In order to use an SVG file, you must have @code{librsvg} in your profile (@i{e.g.}@: by adding it in the @code{packages} field of @code{sway-configuration})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52056
msgid "List defining additional lines to add to the output configuration block.  Elements of the list must be either strings or G-expressions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52059
#, no-wrap
msgid "{Data Type} sway-border-color"
msgstr "{Tipo de dados} sway-border-color"

#. type: item
#: guix-git/doc/guix.texi:52061
#, no-wrap
msgid "border"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52063
msgid "Color of the border."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52063
#, no-wrap
msgid "background"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52065
msgid "Color of the background."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52065
#, no-wrap
msgid "text"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52067
msgid "Color of the text."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52070
#, no-wrap
msgid "{Data Type} sway-color"
msgstr "{Tipo de dados} sway-color"

#. type: item
#: guix-git/doc/guix.texi:52072
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{background} (optional string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:52074
msgid "Background color of the bar."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52075
#, fuzzy, no-wrap
msgid "@code{statusline} (optional string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52077
#, fuzzy
#| msgid "The license of this manual."
msgid "Text color of the status line."
msgstr "A licença deste manual."

#. type: item
#: guix-git/doc/guix.texi:52078
#, fuzzy, no-wrap
#| msgid "@code{dbus?} (default: @code{#t})"
msgid "@code{focused-background} (optional string)"
msgstr "@code{dbus?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:52080
msgid "Background color of the bar on the currently focused monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52081
#, fuzzy, no-wrap
msgid "@code{focused-statusline} (optional string)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52083
msgid "Text color of the statusline on the currently focused monitor."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52084
#, no-wrap
msgid "@code{focused-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52086
msgid "Color scheme for focused workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52087
#, fuzzy, no-wrap
msgid "@code{active-workspace} (optional @code{sway-border-color})"
msgstr "@code{cache} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52089
msgid "Color scheme for active workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52090
#, no-wrap
msgid "@code{inactive-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52092
msgid "Color scheme for inactive workspaces."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52093
#, no-wrap
msgid "@code{urgent-workspace} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52095
msgid "Color scheme for workspaces containing ``urgent windows''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52096
#, no-wrap
msgid "@code{binding-mode} (optional @code{sway-border-color})"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52098
msgid "Color scheme for the binding mode indicator."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52101
#, no-wrap
msgid "{Data Type} sway-bar"
msgstr "{Tipo de dados} sway-bar"

#. type: deftp
#: guix-git/doc/guix.texi:52103
msgid "Describes the Sway bar (see@ @cite{sway-bar(5)})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52105
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{identifier} (default: @code{'bar0})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:52107
msgid "Identifier of the bar.  The value must be a symbol."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52111
msgid "Specify the position of the bar.  Accepted values are @code{'top} or @code{'bottom}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52112
#, fuzzy, no-wrap
msgid "@code{hidden-state} (optional)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52115
msgid "Specify the appearance of the bar when it is hidden.  Accepted values are @code{'hide} or @code{'show}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52116
#, no-wrap
msgid "@code{binding-mode-indicator} (optional)"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52118
msgid "Boolean enabling or disabling the binding mode indicator."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52119
#, fuzzy, no-wrap
msgid "@code{colors} (optional)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52121
#, fuzzy
msgid "An optional @code{sway-color} configuration record."
msgstr "build-machine {Data Type}"

#. type: item
#: guix-git/doc/guix.texi:52122
#, fuzzy, no-wrap
msgid "@code{status-command} (optional)"
msgstr "@code{remote?} (padrão: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52126
msgid "This field accept strings, G-expressions and executable file-like values.  The default value is a command (string) that prints the date and time every second."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52129
msgid "Each line printed on @code{stdout} by this command (or script) will be displayed on the status area of the bar."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52131
msgid "Below are a few examples using:"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52134
msgid "a string: @code{\"while date +'%Y-%m-%d %X'; do sleep 1; done\"},"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52136
msgid "a G-exp:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52140
#, no-wrap
msgid ""
"#~(string-append \"while \"\n"
"                 #$coreutils \"/bin/date\"\n"
"                 \" +'%Y-%m-%d %X'; do sleep 1; done\")\n"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52143
msgid "an executable file:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52156
#, no-wrap
msgid ""
"(program-file\n"
" \"sway-bar-status\"\n"
" #~(begin\n"
"     (use-modules (ice-9 format)\n"
"                  (srfi srfi-19))\n"
"     (let loop ()\n"
"       (let* ((date (date->string\n"
"                     (current-date)\n"
"                     \"~d/~m/~Y (~a) • ~H:~M:~S\")))\n"
"         (format #t \"~a~%~!\" date)\n"
"         (sleep 1)\n"
"         (loop)))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52159 guix-git/doc/guix.texi:52201
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{mouse-bindings} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:52162
msgid "This field accepts an associative list.  Keys are integers describing mouse events.  Values can either be strings or G-expressions."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52170
msgid "The module @code{(gnu home services sway)} exports constants @code{%ev-code-mouse-left}, @code{%ev-code-mouse-right} and @code{%ev-code-mouse-scroll-click} whose values are integers corresponding to left, right and scroll click respectively.  For example, with @code{(mouse-bindings `((,%ev-code-mouse-left . \"exec $term\")))}, left clicks in the status bar open the terminal (assuming that the variable @code{$term} is bound to a terminal)."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52173
#, no-wrap
msgid "{Data Type} sway-mode"
msgstr "{Tipo de dados} sway-mode"

#. type: deftp
#: guix-git/doc/guix.texi:52176
msgid "Describes a Sway mode (see@ @cite{sway(5)}).  For example, the following snippet defines the resize mode of the default Sway configuration:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52190
#, no-wrap
msgid ""
"(sway-mode\n"
" (mode-name \"resize\")\n"
" (keybindings\n"
"  '(($left  . \"resize shrink width 10px\")\n"
"    ($right . \"resize grow width 10px\")\n"
"    ($down  . \"resize grow height 10px\")\n"
"    ($up    . \"resize shrink height 10px\")\n"
"    (Left   . \"resize shrink width 10px\")\n"
"    (Right  . \"resize grow width 10px\")\n"
"    (Down   . \"resize grow height 10px\")\n"
"    (Up     . \"resize shrink height 10px\")\n"
"    (Return . \"mode \\\"default\\\"\")\n"
"    (Escape . \"mode \\\"default\\\"\"))))\n"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52193
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{mode-name} (default: @code{\"default\"})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52195
msgid "Name of the mode.  This field accepts strings."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52196
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{keybindings} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:52200
msgid "This field describes keybindings.  The value is an association list: keys are symbols and values are either strings or G-expressions, as above."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52205
msgid "Ditto, but keys are mouse events (integers).  Constants @code{%ev-code-mouse-*} described above can be used as helpers to define mouse bindings."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52208 guix-git/doc/guix.texi:52209
#, fuzzy, no-wrap
#| msgid "Networking Services"
msgid "Networking Home Services"
msgstr "Serviços de Rede"

#. type: Plain text
#: guix-git/doc/guix.texi:52213
msgid "This section lists services somewhat networking-related that you may use with Guix Home."
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:52214
#, fuzzy, no-wrap
#| msgid "Printing Services"
msgid "Syncthing Service"
msgstr "Serviços de impressão"

#. type: Plain text
#: guix-git/doc/guix.texi:52221
msgid "The @code{(gnu home services syncthing)} module provides a service to set up the @uref{Syncthing, https://syncthing.net} continuous file backup service."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52222
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-syncthing-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:52227
msgid "This is the service type for the @command{syncthing} daemon; it is the Home counterpart of the @code{syncthing-service-type} system service (@pxref{Networking Services, @code{syncthing-service-type}}).  The value for this service type is a @command{syncthing-configuration}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52229
msgid "Here is how you would set it up with the default configuration:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52232
#, fuzzy, no-wrap
msgid "(service home-syncthing-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: defvar
#: guix-git/doc/guix.texi:52236
msgid "For a custom configuration, wrap you @code{syncthing-configuration} in @code{for-home}, as in this example:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52241
#, no-wrap
msgid ""
"(service home-syncthing-service-type\n"
"         (for-home\n"
"          (syncthing-configuration (logflags 5))))\n"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52246
msgid "For details about @code{syncthing-configuration}, check out the documentation of the system service (@pxref{Networking Services, @code{syncthing-service-type}})."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:52249 guix-git/doc/guix.texi:52250
#, fuzzy, no-wrap
#| msgid "Miscellaneous Services"
msgid "Miscellaneous Home Services"
msgstr "Serviços diversos"

#. type: Plain text
#: guix-git/doc/guix.texi:52253
msgid "This section lists Home services that lack a better place."
msgstr ""

#. type: subsubheading
#: guix-git/doc/guix.texi:52254
#, fuzzy, no-wrap
#| msgid "Base Services"
msgid "Beets Service"
msgstr "Serviços base"

#. type: cindex
#: guix-git/doc/guix.texi:52256
#, fuzzy, no-wrap
#| msgid "Monitoring services."
msgid "Beets service, for Home"
msgstr "Serviços de monitoramento."

#. type: Plain text
#: guix-git/doc/guix.texi:52259
msgid "The @code{(gnu home services music)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52260
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-beets-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:52265
msgid "@uref{https://beets.io, Beets} is a music file and metadata manager that can be used via its command-line interface, @command{beet}. Beets requires a YAML configuration file and this Guix Home service is to create such file."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52268
msgid "The service can be used as follows:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52272
#, no-wrap
msgid ""
"(service home-beets-service-type\n"
"         (home-beets-configuration (directory \"/home/alice/music\")))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52276
msgid "Additional options can be specified via the service wild-card field @code{extra-options}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52284
#, no-wrap
msgid ""
"(service home-beets-service-type\n"
"         (home-beets-configuration\n"
"          (directory \"/home/alice/music\")\n"
"          (extra-options '(\"\n"
"import:\n"
"  move: yes\"))))\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52288
#, fuzzy, no-wrap
#| msgid "Monitoring services."
msgid "dictionary service, for Home"
msgstr "Serviços de monitoramento."

#. type: Plain text
#: guix-git/doc/guix.texi:52290
msgid "The @code{(gnu home services dict)} module provides the following service:"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52291
#, fuzzy, no-wrap
#| msgid "guix-publish-service-type"
msgid "home-dicod-service-type"
msgstr "guix-publish-service-type"

#. type: Plain text
#: guix-git/doc/guix.texi:52303
msgid "This service is a direct mapping of the @code{dicod-service-type} system service (@pxref{Miscellaneous Services, Dictionary Service}).  You can use it like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52306
#, fuzzy, no-wrap
msgid "(service home-dicod-service-type)\n"
msgstr "(service home-znc-service-type)\n"

#. type: Plain text
#: guix-git/doc/guix.texi:52311
msgid "You may specify a custom configuration by providing a @code{dicod-configuration} record, exactly like for @code{dicod-service-type}, but wrapping it in @code{for-home}:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52316
#, no-wrap
msgid ""
"(service home-dicod-service-type\n"
"         (for-home\n"
"          (dicod-configuration @dots{})))\n"
msgstr ""

#. type: subheading
#: guix-git/doc/guix.texi:52318
#, fuzzy, no-wrap
#| msgid "Game Services"
msgid "ReadyMedia Service"
msgstr "Serviços de jogos"

#. type: cindex
#: guix-git/doc/guix.texi:52320
#, fuzzy, no-wrap
#| msgid "LDAP Services"
msgid "ReadyMedia, DLNA/UPnP Service"
msgstr "Serviços LDAP"

#. type: Plain text
#: guix-git/doc/guix.texi:52325
msgid "The @code{(gnu home services upnp)} module provides a service to set up the @uref{https://minidlna.sourceforge.net/, ReadyMedia} @acronym{DLNA, Digital Living Network Alliance} @acronym{UPnP, Universal Plug and Play} media server."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52326
#, fuzzy, no-wrap
msgid "home-readymedia-service-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:52331
msgid "This is the service type for the @command{minidlnad} daemon; it is the Home counterpart of the @code{readymedia-service-type} system service (@pxref{Miscellaneous Services, @code{readymedia-service-type}}).  The value for this service type is a @code{readymedia-configuration}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52335
msgid "The service can be used with a @code{readymedia-configuration} wrapped in @code{for-home} like this:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:52349
#, fuzzy, no-wrap
#| msgid ""
#| "(operating-system\n"
#| "  ;; @dots{}\n"
#| "  (services\n"
#| "    ;; Assume we're starting from '%desktop-services'.  Replace it\n"
#| "    ;; with the list of services you're actually using.\n"
#| "    (modify-services %desktop-services\n"
#| "      (guix-service-type config =>\n"
#| "                        (guix-configuration\n"
#| "                          (inherit config)\n"
#| "                          (substitute-urls\n"
#| "                            (append (list \"https://guix.example.org\")\n"
#| "                                    %default-substitute-urls))\n"
#| "                          (authorized-keys\n"
#| "                            (append (list (local-file \"./key.pub\"))\n"
#| "                                    %default-authorized-guix-keys)))))))\n"
msgid ""
"(service home-readymedia-service-type\n"
"         (for-home\n"
"          (readymedia-configuration\n"
"            (media-directories\n"
"             (list (readymedia-directory\n"
"                     (path \"/path/to/media/audio\")\n"
"                     (types '(A)))\n"
"                   (readymedia-directory\n"
"                     (path \"/path/to/media/video\")\n"
"                     (types '(V)))\n"
"                   (readymedia-directory\n"
"                     (path \"/path/to/media/misc\")))))))\n"
msgstr ""
"(operating-system\n"
" ;; @dots{}\n"
" (services\n"
"  ;; Suponha que estamos começando com '%desktop-services'. Substitua-o\n"
"  ;; pela lista de serviços que você está realmente usando.\n"
"  (modify-services %desktop-services\n"
"    (guix-service-type config =>\n"
"                       (guix-configuration\n"
"                        (inherit config)\n"
"                        (substitute-urls\n"
"                         (append (list \"https://guix.example.org\")\n"
"                                 %default-substitute-urls))\n"
"                        (authorized-keys\n"
"                         (append (list (local-file \"./key.pub\"))\n"
"                                 %default-authorized-guix-keys)))))))\n"

#. type: Plain text
#: guix-git/doc/guix.texi:52354
msgid "For details about @code{readymedia-configuration}, check out the documentation of the system service (@pxref{Miscellaneous Services, @code{readymedia-service-type}})."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:52356
#, fuzzy, no-wrap
#| msgid "Invoking @command{guix size}"
msgid "Invoking @command{guix home}"
msgstr "Invocando @command{guix size}"

#. type: command{#1}
#: guix-git/doc/guix.texi:52358
#, fuzzy, no-wrap
#| msgid "# guix install hello\n"
msgid "guix home"
msgstr "guix home"

#. type: Plain text
#: guix-git/doc/guix.texi:52363
msgid "Once you have written a home environment declaration (@pxref{Declaring the Home Environment,,,,}, it can be @dfn{instantiated} using the @command{guix home} command.  The synopsis is:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52366
#, no-wrap
msgid "guix home @var{options}@dots{} @var{action} @var{file}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52373
msgid "@var{file} must be the name of a file containing a @code{home-environment} declaration.  @var{action} specifies how the home environment is instantiated, but there are few auxiliary actions which don't instantiate it.  Currently the following values are supported:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52378
msgid "Display available home service type definitions that match the given regular expressions, sorted by relevance:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52380
#, no-wrap
msgid "shell-profile"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52391
#, no-wrap
msgid ""
"$ guix home search shell\n"
"name: home-shell-profile\n"
"location: gnu/home/services/shells.scm:100:2\n"
"extends: home-files\n"
"description: Create `~/.profile', which is used for environment initialization of POSIX compliant login shells.\n"
"+ This service type can be extended with a list of file-like objects.\n"
"relevance: 6\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52397
#, no-wrap
msgid ""
"name: home-fish\n"
"location: gnu/home/services/shells.scm:640:2\n"
"extends: home-files home-profile\n"
"description: Install and configure Fish, the friendly interactive shell.\n"
"relevance: 3\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52403
#, no-wrap
msgid ""
"name: home-zsh\n"
"location: gnu/home/services/shells.scm:290:2\n"
"extends: home-files home-profile\n"
"description: Install and configure Zsh.\n"
"relevance: 1\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52409
#, no-wrap
msgid ""
"name: home-bash\n"
"location: gnu/home/services/shells.scm:508:2\n"
"extends: home-files home-profile\n"
"description: Install and configure GNU Bash.\n"
"relevance: 1\n"
"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52416
msgid "As for @command{guix search}, the result is written in @code{recutils} format, which makes it easy to filter the output (@pxref{Top, GNU recutils databases,, recutils, GNU recutils manual})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52421
msgid "Spawn a shell in an isolated environment---a @dfn{container}---containing your home as specified by @var{file}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52424
msgid "For example, this is how you would start an interactive shell in a container with your home:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52432
msgid "This is a throw-away container where you can lightheartedly fiddle with files; any changes made within the container, any process started---all this disappears as soon as you exit that shell."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52434
msgid "As with @command{guix shell}, several options control that container:"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52439
msgid "Enable networking within the container (it is disabled by default)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52446
msgid "As with @command{guix shell}, make directory @var{source} of the host system available as @var{target} inside the container---read-only if you pass @option{--expose}, and writable if you pass @option{--share} (@pxref{Invoking guix shell, @option{--expose} and @option{--share}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52452
msgid "Additionally, you can run a command in that container, instead of spawning an interactive shell.  For instance, here is how you would check which Shepherd services are started in a throw-away home container:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52455
#, no-wrap
msgid "guix home container config.scm -- herd status\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52459
msgid "The command to run in the container must come after @code{--} (double hyphen)."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52464
msgid "Edit or view the definition of the given Home service types."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52468
msgid "For example, the command below opens your editor, as specified by the @env{EDITOR} environment variable, on the definition of the @code{home-mcron} service type:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52471
#, fuzzy, no-wrap
#| msgid "Invoking guix describe"
msgid "guix home edit home-mcron\n"
msgstr "guix home describe\n"

#. type: table
#: guix-git/doc/guix.texi:52481
msgid "Build the home environment described in @var{file}, and switch to it.  Switching means that the activation script will be evaluated and (in basic scenario) symlinks to configuration files generated from @code{home-environment} declaration will be created in @file{~}.  If the file with the same path already exists in home folder it will be moved to @file{~/@var{timestamp}-guix-home-legacy-configs-backup}, where @var{timestamp} is a current UNIX epoch time."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52486
msgid "It is highly recommended to run @command{guix pull} once before you run @command{guix home reconfigure} for the first time (@pxref{Invoking guix pull})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52493
msgid "This effects all the configuration specified in @var{file}.  The command starts Shepherd services specified in @var{file} that are not currently running; if a service is currently running, this command will arrange for it to be upgraded the next time it is stopped (e.g.@: by @code{herd stop @var{service}} or @code{herd restart @var{service}})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52499
msgid "This command creates a new generation whose number is one greater than the current generation (as reported by @command{guix home list-generations}).  If that generation already exists, it will be overwritten.  This behavior mirrors that of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52500
#, no-wrap
msgid "provenance tracking, of the home environment"
msgstr "rastreamento de proveniência, do ambiente pessoal"

#. type: table
#: guix-git/doc/guix.texi:52505
msgid "Upon completion, the new home is deployed under @file{~/.guix-home}.  This directory contains @dfn{provenance meta-data}: the list of channels in use (@pxref{Channels}) and @var{file} itself, when available.  You can view the provenance information by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52508
#, fuzzy, no-wrap
#| msgid "Invoking guix describe"
msgid "guix home describe\n"
msgstr "guix home describe\n"

#. type: table
#: guix-git/doc/guix.texi:52514
msgid "This information is useful should you later want to inspect how this particular generation was built.  In fact, assuming @var{file} is self-contained, you can later rebuild generation @var{n} of your home environment with:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52520
#, no-wrap
msgid ""
"guix time-machine \\\n"
"  -C /var/guix/profiles/per-user/@var{USER}/guix-home-@var{n}-link/channels.scm -- \\\n"
"  home reconfigure \\\n"
"  /var/guix/profiles/per-user/@var{USER}/guix-home-@var{n}-link/configuration.scm\n"
"\n"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52525
msgid "You can think of it as some sort of built-in version control! Your home is not just a binary artifact: @emph{it carries its own source}."
msgstr ""

#. type: quotation
#: guix-git/doc/guix.texi:52531
msgid "If you're using Guix System, @ref{guix-home-service-type, @code{guix-home-service-type}}, on how to embed your home configuration in your system configuration such that @command{guix system reconfigure} deploys both your system and your home."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52534
#, fuzzy, no-wrap
#| msgid "generations"
msgid "home generations"
msgstr "gerações"

#. type: table
#: guix-git/doc/guix.texi:52537
msgid "Switch to an existing home generation.  This action atomically switches the home profile to the specified home generation."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52541
msgid "The target generation can be specified explicitly by its generation number.  For example, the following invocation would switch to home generation 7:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52544
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home switch-generation 7\n"
msgstr "$ guix system list-generations 10d\n"

#. type: example
#: guix-git/doc/guix.texi:52555
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home switch-generation -- -1\n"
msgstr "$ guix system list-generations 10d\n"

#. type: table
#: guix-git/doc/guix.texi:52564
msgid "Switch to the preceding home generation.  This is the inverse of @command{reconfigure}, and it is exactly the same as invoking @command{switch-generation} with an argument of @code{-1}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52566
#, fuzzy, no-wrap
#| msgid "generations"
msgid "deleting home generations"
msgstr "gerações"

#. type: table
#: guix-git/doc/guix.texi:52571
msgid "Delete home generations, making them candidates for garbage collection (@pxref{Invoking guix gc}, for information on how to run the ``garbage collector'')."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52575
msgid "This works in the same way as @samp{guix package --delete-generations} (@pxref{Invoking guix package, @option{--delete-generations}}).  With no arguments, all home generations but the current one are deleted:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52578
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home delete-generations\n"
msgstr "$ guix system list-generations 10d\n"

#. type: table
#: guix-git/doc/guix.texi:52582
msgid "You can also select the generations you want to delete.  The example below deletes all the home generations that are more than two months old:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52585
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home delete-generations 2m\n"
msgstr "$ guix system list-generations 10d\n"

#. type: table
#: guix-git/doc/guix.texi:52591
msgid "Build the derivation of the home environment, which includes all the configuration files and programs needed.  This action does not actually install anything."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52595
msgid "Describe the current home generation: its file name, as well as provenance information when available."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52602
msgid "To show installed packages in the current home generation's profile, the @code{--list-installed} flag is provided, with the same syntax that is used in @command{guix package --list-installed} (@pxref{Invoking guix package}).  For instance, the following command shows a table of all the packages with ``emacs'' in their name that are installed in the current home generation's profile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52605
#, fuzzy, no-wrap
#| msgid "Invoking guix describe"
msgid "guix home describe --list-installed=emacs\n"
msgstr "guix home describe\n"

#. type: table
#: guix-git/doc/guix.texi:52612
msgid "List a summary of each generation of the home environment available on disk, in a human-readable way.  This is similar to the @option{--list-generations} option of @command{guix package} (@pxref{Invoking guix package})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52620
#, fuzzy, no-wrap
#| msgid "$ guix system list-generations 10d\n"
msgid "guix home list-generations 10d\n"
msgstr "$ guix system list-generations 10d\n"

#. type: table
#: guix-git/doc/guix.texi:52626
msgid "The @code{--list-installed} flag may also be specified, with the same syntax that is used in @command{guix home describe}.  This may be helpful if trying to determine when a package was added to the home profile."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52627
#, no-wrap
msgid "import"
msgstr "import"

#. type: table
#: guix-git/doc/guix.texi:52634
msgid "Generate a @dfn{home environment} from the packages in the default profile and configuration files found in the user's home directory.  The configuration files will be copied to the specified directory, and a @file{home-configuration.scm} will be populated with the home environment.  Note that not every home service that exists is supported (@pxref{Home Services})."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52638
#, no-wrap
msgid ""
"$ guix home import ~/guix-config\n"
"guix home: '/home/alice/guix-config' populated with all the Home configuration files\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52644
msgid "And there's more! @command{guix home} also provides the following sub-commands to visualize how the services of your home environment relate to one another:"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52646
#, fuzzy, no-wrap
#| msgid "provenance tracking, of the home environment"
msgid "service extension graph, of a home environment"
msgstr "rastreamento de proveniência, do ambiente doméstico"

#. type: table
#: guix-git/doc/guix.texi:52654
msgid "Emit to standard output the @dfn{service extension graph} of the home environment defined in @var{file} (@pxref{Service Composition}, for more information on service extensions).  By default the output is in Dot/Graphviz format, but you can choose a different format with @option{--graph-backend}, as with @command{guix graph} (@pxref{Invoking guix graph, @option{--backend}}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52659
#, no-wrap
msgid "guix home extension-graph @var{file} | xdot -\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52663
#, fuzzy, no-wrap
#| msgid "provenance tracking, of the home environment"
msgid "Shepherd dependency graph, for a home environment"
msgstr "rastreamento de proveniência, do ambiente doméstico"

#. type: table
#: guix-git/doc/guix.texi:52668
msgid "Emit to standard output the @dfn{dependency graph} of shepherd services of the home environment defined in @var{file}.  @xref{Shepherd Services}, for more information and for an example graph."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52684
msgid "Consider the home-environment @var{expr} evaluates to.  This is an alternative to specifying a file which evaluates to a home environment."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52687
msgid "Instruct @command{guix home reconfigure} to allow system downgrades."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52694
msgid "Just like @command{guix system}, @command{guix home reconfigure}, by default, prevents you from downgrading your home to older or unrelated revisions compared to the channel revisions that were used to deploy it---those shown by @command{guix home describe}.  Using @option{--allow-downgrades} allows you to bypass that check, at the risk of downgrading your home---be careful!"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52700
#, no-wrap
msgid "documentation, searching for"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52701
#, no-wrap
msgid "searching for documentation"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52702
#, no-wrap
msgid "Info, documentation format"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52703
#, no-wrap
msgid "man pages"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52704
#, no-wrap
msgid "manual pages"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52711
msgid "In most cases packages installed with Guix come with documentation.  There are two main documentation formats: ``Info'', a browsable hypertext format used for GNU software, and ``manual pages'' (or ``man pages''), the linear documentation format traditionally found on Unix.  Info manuals are accessed with the @command{info} command or with Emacs, and man pages are accessed using @command{man}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52715
msgid "You can look for documentation of software installed on your system by keyword.  For example, the following command searches for information about ``TLS'' in Info manuals:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52723
#, no-wrap
msgid ""
"$ info -k TLS\n"
"\"(emacs)Network Security\" -- STARTTLS\n"
"\"(emacs)Network Security\" -- TLS\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_flags\n"
"\"(gnutls)Core TLS API\" -- gnutls_certificate_set_verify_function\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52729
msgid "The command below searches for the same keyword in man pages@footnote{The database searched by @command{man -k} is only created in profiles that contain the @code{man-db} package.}:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52735
#, no-wrap
msgid ""
"$ man -k TLS\n"
"SSL (7)              - OpenSSL SSL/TLS library\n"
"certtool (1)         - GnuTLS certificate tool\n"
"@dots {}\n"
msgstr ""
"$ man -k TLS\n"
"SSL (7)              - OpenSSL SSL/TLS library\n"
"certtool (1)         - GnuTLS certificate tool\n"
"@dots {}\n"

#. type: Plain text
#: guix-git/doc/guix.texi:52741
msgid "These searches are purely local to your computer so you have the guarantee that documentation you find corresponds to what you have actually installed, you can access it off-line, and your privacy is respected."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52744
msgid "Once you have these results, you can view the relevant documentation by running, say:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52747
#, no-wrap
msgid "$ info \"(gnutls)Core TLS API\"\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52751
msgid "or:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:52754
#, no-wrap
msgid "$ man certtool\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52762
msgid "Info manuals contain sections and indices as well as hyperlinks like those found in Web pages.  The @command{info} reader (@pxref{Top, Info reader,, info-stnd, Stand-alone GNU Info}) and its Emacs counterpart (@pxref{Misc Help,,, emacs, The GNU Emacs Manual}) provide intuitive key bindings to navigate manuals.  @xref{Getting Started,,, info, Info: An Introduction}, for an introduction to Info navigation."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52771
msgid "The packages and systems built by Guix are intended, like most computer programs, to run on a CPU with a specific instruction set, and under a specific operating system.  Those programs are often also targeting a specific kernel and system library.  Those constraints are captured by Guix in @code{platform} records."
msgstr ""

#. type: section
#: guix-git/doc/guix.texi:52778
#, no-wrap
msgid "@code{platform} Reference"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52784
msgid "The @code{platform} data type describes a @dfn{platform}: an @acronym{ISA, instruction set architecture}, combined with an operating system and possibly additional system-wide settings such as the @acronym{ABI, application binary interface}."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52785
#, no-wrap
msgid "{Data Type} platform"
msgstr "{Tipo de dados} platform"

#. type: deftp
#: guix-git/doc/guix.texi:52787
#, fuzzy
msgid "This is the data type representing a platform."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:52793
msgid "This field specifies the platform's GNU triplet as a string (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf})."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52797
msgid "This string is the system type as it is known to Guix and passed, for instance, to the @option{--system} option of most commands."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52801
msgid "It usually has the form @code{\"@var{cpu}-@var{kernel}\"}, where @var{cpu} is the target CPU and @var{kernel} the target operating system kernel."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52805
msgid "It can be for instance @code{\"aarch64-linux\"} or @code{\"armhf-linux\"}.  You will encounter system types when you perform native builds (@pxref{Native Builds})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52806
#, fuzzy, no-wrap
msgid "@code{linux-architecture} (default: @code{#false})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52810
msgid "This optional string field is only relevant if the kernel is Linux.  In that case, it corresponds to the ARCH variable used when building Linux, @code{\"mips\"} for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52811
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{rust-target} (default: @code{#false})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52815
msgid "This optional string field is used to determine which rust target is best supported by this platform.  For example, the base level system targeted by @code{armhf-linux} system is closest to @code{armv7-unknown-linux-gnueabihf}."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:52816
#, no-wrap
msgid "glibc-dynamic-linker"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52820
msgid "This field is the name of the GNU C Library dynamic linker for the corresponding system, as a string.  It can be @code{\"/lib/ld-linux-armhf.so.3\"}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52829
msgid "The @code{(guix platforms @dots{})} modules export the following variables, each of which is bound to a @code{platform} record."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52830
#, fuzzy, no-wrap
#| msgid "armhf-linux"
msgid "armv7-linux"
msgstr "armhf-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52832
msgid "Platform targeting ARM v7 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52836
msgid "Platform targeting ARM v8 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52838
#, fuzzy, no-wrap
#| msgid "aarch64-linux"
msgid "loongarch64-linux"
msgstr "aarch64-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52840
msgid "Platform targeting loongarch 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52842
#, fuzzy, no-wrap
#| msgid "aarch64-linux"
msgid "mips64-linux"
msgstr "aarch64-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52844
msgid "Platform targeting MIPS little-endian 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52846
#, fuzzy, no-wrap
msgid "powerpc-linux"
msgstr "aarch64-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52848
msgid "Platform targeting PowerPC big-endian 32-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52852
msgid "Platform targeting PowerPC little-endian 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52856
msgid "Platform targeting RISC-V 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52860
msgid "Platform targeting x86 CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52864
msgid "Platform targeting x86 64-bit CPU running GNU/Linux."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52866
#, fuzzy, no-wrap
#| msgid "x86_64-linux"
msgid "x86_64-linux-x32"
msgstr "x86_64-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52869
msgid "Platform targeting x86 64-bit CPU running GNU/Linux with the run-time using the X32 ABI."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52871
#, fuzzy, no-wrap
#| msgid "i686-linux"
msgid "i686-mingw"
msgstr "i686-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52874
msgid "Platform targeting x86 CPU running Windows, with run-time support from MinGW."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52876
#, fuzzy, no-wrap
#| msgid "x86_64-linux"
msgid "x86_64-mingw"
msgstr "x86_64-linux"

#. type: defvar
#: guix-git/doc/guix.texi:52879
msgid "Platform targeting x86 64-bit CPU running Windows, with run-time support from MinGW."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52884
msgid "Platform targeting x86 CPU running GNU/Hurd (also referred to as ``GNU'')."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52886
#, no-wrap
msgid "avr"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52889
msgid "Platform targeting AVR CPUs without an operating system, with run-time support from AVR Libc."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52891
#, no-wrap
msgid "or1k-elf"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52894
msgid "Platform targeting OpenRISC 1000 CPU without an operating system and without a C standard library."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52896
#, no-wrap
msgid "xtensa-ath9k-elf"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:52899
msgid "Platform targeting Xtensa CPU used in the Qualcomm Atheros AR7010 and AR9271 USB 802.11n @acronym{NICs, Network Interface Controllers}."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:52904
#, no-wrap
msgid "system images"
msgstr "imagens de sistema"

#. type: Plain text
#: guix-git/doc/guix.texi:52916
msgid "When it comes to installing Guix System for the first time on a new machine, you can basically proceed in three different ways.  The first one is to use an existing operating system on the machine to run the @command{guix system init} command (@pxref{Invoking guix system}).  The second one, is to produce an installation image (@pxref{Building the Installation Image}). This is a bootable system which role is to eventually run @command{guix system init}.  Finally, the third option would be to produce an image that is a direct instantiation of the system you wish to run.  That image can then be copied on a bootable device such as an USB drive or a memory card.  The target machine would then directly boot from it, without any kind of installation procedure."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52925
msgid "The @command{guix system image} command is able to turn an operating system definition into a bootable image.  This command supports different image types, such as @code{mbr-hybrid-raw}, @code{iso9660} and @code{docker}.  Any modern @code{x86_64} machine will probably be able to boot from an @code{iso9660} image.  However, there are a few machines out there that require specific image types.  Those machines, in general using @code{ARM} processors, may expect specific partitions at specific offsets."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52928
msgid "This chapter explains how to define customized system images and how to turn them into actual bootable images."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:52941
msgid "The @code{image} record, described right after, allows you to define a customized bootable system image."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:52942
#, no-wrap
msgid "{Data Type} image"
msgstr "{Tipo de dados} image"

#. type: deftp
#: guix-git/doc/guix.texi:52944
#, fuzzy
msgid "This is the data type representing a system image."
msgstr "Gerencie a configuração do sistema operacional."

#. type: item
#: guix-git/doc/guix.texi:52946
#, fuzzy, no-wrap
#| msgid "@code{hostname} (default: @code{#f})"
msgid "@code{name} (default: @code{#false})"
msgstr "@code{hostname} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52949
msgid "The image name as a symbol, @code{'my-iso9660} for instance.  The name is optional and it defaults to @code{#false}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52952
msgid "The image format as a symbol.  The following formats are supported:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52954
#, no-wrap
msgid "@code{disk-image}, a raw disk image composed of one or multiple"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52956
#, fuzzy
#| msgid "Derivations"
msgid "partitions."
msgstr "Derivações"

#. type: item
#: guix-git/doc/guix.texi:52957
#, no-wrap
msgid "@code{compressed-qcow2}, a compressed qcow2 image composed of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:52959
msgid "one or multiple partitions."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52960
#, fuzzy, no-wrap
#| msgid "@code{tor} (default: @code{tor})"
msgid "@code{docker}, a Docker image."
msgstr "@code{tor} (default: @code{tor})"

#. type: item
#: guix-git/doc/guix.texi:52962
#, no-wrap
msgid "@code{iso9660}, an ISO-9660 image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52964
#, no-wrap
msgid "@code{tarball}, a tar.gz image archive."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52966
#, no-wrap
msgid "@code{wsl2}, a WSL2 image."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52970
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{platform} (default: @code{#false})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52974
msgid "The @code{platform} record the image is targeting (@pxref{Platforms}), @code{aarch64-linux} for instance.  By default, this field is set to @code{#false} and the image will target the host platform."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52975 guix-git/doc/guix.texi:53037
#, fuzzy, no-wrap
#| msgid "@code{cache-size} (default: @code{150})"
msgid "@code{size} (default: @code{'guess})"
msgstr "@code{cache-size} (default: @code{150})"

#. type: table
#: guix-git/doc/guix.texi:52979
msgid "The image size in bytes or @code{'guess}.  The @code{'guess} symbol, which is the default, means that the image size will be inferred based on the image content."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:52982
msgid "The image's @code{operating-system} record that is instantiated."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52983
#, fuzzy, no-wrap
msgid "@code{partition-table-type} (default: @code{'mbr})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52986
msgid "The image partition table type as a symbol.  Possible values are @code{'mbr} and @code{'gpt}.  It default to @code{'mbr}."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52987
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{partitions} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:52990
msgid "The image partitions as a list of @code{partition} records (@pxref{partition Reference})."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52991
#, fuzzy, no-wrap
#| msgid "@code{compression-level} (default: @code{3})"
msgid "@code{compression?} (default: @code{#true})"
msgstr "@code{compression-level} (padrão: @code{3})"

#. type: table
#: guix-git/doc/guix.texi:52995
msgid "Whether the image content should be compressed, as a boolean.  It defaults to @code{#true} and only applies to @code{'iso9660} image formats."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:52996
#, fuzzy, no-wrap
#| msgid "@code{chroot} (default: @code{#f})"
msgid "@code{volatile-root?} (default: @code{#true})"
msgstr "@code{chroot} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:52998
msgid "Whether the image root partition should be made volatile, as a boolean."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53003
msgid "This is achieved by using a RAM backed file system (overlayfs) that is mounted on top of the root partition by the initrd.  It defaults to @code{#true}.  When set to @code{#false}, the image root partition is mounted as read-write partition by the initrd."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53004
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{shared-store?} (default: @code{#false})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:53011
msgid "Whether the image's store should be shared with the host system, as a boolean.  This can be useful when creating images dedicated to virtual machines.  When set to @code{#false}, which is the default, the image's @code{operating-system} closure is copied to the image.  Otherwise, when set to @code{#true}, it is assumed that the host store will be made available at boot, using a @code{9p} mount for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53012
#, fuzzy, no-wrap
#| msgid "@code{shared?} (default: @code{#t})"
msgid "@code{shared-network?} (default: @code{#false})"
msgstr "@code{shared?} (padrão: @code{#t})"

#. type: table
#: guix-git/doc/guix.texi:53016
msgid "Whether to use the host network interfaces within the image, as a boolean.  This is only used for the @code{'docker} image format.  It defaults to @code{#false}."
msgstr "Se deve usar as interfaces de rede do host dentro da imagem, como um booleano. Isso é usado apenas para o formato de imagem @code{'docker}. O padrão é @code{#false}."

#. type: item
#: guix-git/doc/guix.texi:53017
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{substitutable?} (default: @code{#true})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:53020
msgid "Whether the image derivation should be substitutable, as a boolean.  It defaults to @code{true}."
msgstr ""

#. type: subsection
#: guix-git/doc/guix.texi:53029
#, no-wrap
msgid "@code{partition} Reference"
msgstr "Referência do @code{partition}"

#. type: Plain text
#: guix-git/doc/guix.texi:53032
msgid "In @code{image} record may contain some partitions."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:53033
#, no-wrap
msgid "{Data Type} partition"
msgstr "{Tipo de dados} partition"

#. type: deftp
#: guix-git/doc/guix.texi:53035
#, fuzzy
msgid "This is the data type representing an image partition."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:53041
msgid "The partition size in bytes or @code{'guess}.  The @code{'guess} symbol, which is the default, means that the partition size will be inferred based on the partition content."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53042
#, fuzzy, no-wrap
#| msgid "@code{users} (default: @code{#f})"
msgid "@code{offset} (default: @code{0})"
msgstr "@code{users} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:53046
msgid "The partition's start offset in bytes, relative to the image start or the previous partition end.  It defaults to @code{0} which means that there is no offset applied."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53047
#, fuzzy, no-wrap
#| msgid "@code{system?} (default: @code{#f})"
msgid "@code{file-system} (default: @code{\"ext4\"})"
msgstr "@code{system?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:53049
#, fuzzy
#| msgid "@code{system?} (default: @code{#f})"
msgid "The partition file system as a string, defaulting to @code{\"ext4\"}."
msgstr "@code{system?} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:53052
msgid "The supported values are @code{\"vfat\"}, @code{\"fat16\"}, @code{\"fat32\"}, @code{\"btrfs\"}, and @code{\"ext4\"}."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53055
msgid "@code{\"vfat\"}, @code{\"fat16\"}, and @code{\"fat32\"} partitions without the @code{'esp} flag are by default LBA compatible."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53056
#, fuzzy, no-wrap
#| msgid "@code{features} (default: @code{'()})"
msgid "@code{file-system-options} (default: @code{'()})"
msgstr "@code{features} (padrão: @code{'()})"

#. type: table
#: guix-git/doc/guix.texi:53061
msgid "The partition file system creation options that should be passed to the partition creation tool, as a list of strings.  This is only supported when creating @code{\"vfat\"}, @code{\"fat16\"}, @code{\"fat32\"} or @code{\"ext4\"} partitions."
msgstr "As opções de criação do sistema de arquivos de partição que devem ser passadas para a ferramenta de criação de partição, como uma lista de strings. Isso só é suportado ao criar partições @code{\"vfat\"}, @code{\"fat16\"}, @code{\"fat32\"} ou @code{\"ext4\"}."

#. type: table
#: guix-git/doc/guix.texi:53064
msgid "See the @code{\"extended-options\"} man page section of the @code{\"mke2fs\"} tool for a more complete reference."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53068
msgid "The partition label as a mandatory string, @code{\"my-root\"} for instance."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53069
#, fuzzy, no-wrap
#| msgid "@code{uid} (default: @code{#f})"
msgid "@code{uuid} (default: @code{#false})"
msgstr "@code{uid} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:53073
msgid "The partition UUID as an @code{uuid} record (@pxref{File Systems}).  By default it is @code{#false}, which means that the partition creation tool will attribute a random UUID to the partition."
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53080
msgid "The partition flags as a list of symbols.  Possible values are @code{'boot} and @code{'esp}.  The @code{'boot} flags should be set if you want to boot from this partition.  Exactly one partition should have this flag set, usually the root one. The @code{'esp} flag identifies a UEFI System Partition."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53081
#, fuzzy, no-wrap
#| msgid "@code{term} (default: @code{#f})"
msgid "@code{initializer} (default: @code{#false})"
msgstr "@code{term} (default: @code{#f})"

#. type: table
#: guix-git/doc/guix.texi:53086
msgid "The partition initializer procedure as a gexp.  This procedure is called to populate a partition.  If no initializer is passed, the @code{initialize-root-partition} procedure from the @code{(gnu build image)} module is used."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53095
msgid "Let's say you would like to create an MBR image with three distinct partitions:"
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53097
#, no-wrap
msgid "The @acronym{ESP, EFI System Partition}, a partition of"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53099
msgid "40@tie{}MiB at offset 1024@tie{}KiB with a vfat file system."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53100
#, no-wrap
msgid "an ext4 partition of 50@tie{}MiB data file, and labeled ``data''."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53102
#, no-wrap
msgid "an ext4 bootable partition containing the @code{%simple-os}"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53104
#, fuzzy
#| msgid "operating-system"
msgid "operating-system."
msgstr "sistema operacional"

#. type: Plain text
#: guix-git/doc/guix.texi:53108
msgid "You would then write the following image definition in a @code{my-image.scm} file for instance."
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53115
#, no-wrap
msgid ""
"(use-modules (gnu)\n"
"             (gnu image)\n"
"             (gnu tests)\n"
"             (gnu system image)\n"
"             (guix gexp))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53117 guix-git/doc/guix.texi:53235
#, no-wrap
msgid ""
"(define MiB (expt 2 20))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53146
#, no-wrap
msgid ""
"(image\n"
" (format 'disk-image)\n"
" (operating-system %simple-os)\n"
" (partitions\n"
"  (list\n"
"   (partition\n"
"    (size (* 40 MiB))\n"
"    (offset (* 1024 1024))\n"
"    (label \"GNU-ESP\")\n"
"    (file-system \"vfat\")\n"
"    (flags '(esp))\n"
"    (initializer (gexp initialize-efi-partition)))\n"
"   (partition\n"
"    (size (* 50 MiB))\n"
"    (label \"DATA\")\n"
"    (file-system \"ext4\")\n"
"    (initializer #~(lambda* (root . rest)\n"
"                     (mkdir root)\n"
"                     (call-with-output-file\n"
"                         (string-append root \"/data\")\n"
"                       (lambda (port)\n"
"                         (format port \"my-data\"))))))\n"
"   (partition\n"
"    (size 'guess)\n"
"    (label root-label)\n"
"    (file-system \"ext4\")\n"
"    (flags '(boot))\n"
"    (initializer (gexp initialize-root-partition))))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53154
msgid "Note that the first and third partitions use generic initializers procedures, initialize-efi-partition and initialize-root-partition respectively.  The initialize-efi-partition installs a GRUB EFI loader that is loading the GRUB bootloader located in the root partition.  The initialize-root-partition instantiates a complete system as defined by the @code{%simple-os} operating-system."
msgstr "Note que a primeira e a terceira partições usam procedimentos de inicializadores genéricos, initialize-efi-partition e initialize-root-partition, respectivamente. O initialize-efi-partition instala um carregador EFI GRUB que está carregando o carregador de inicialização GRUB localizado na partição raiz. O initialize-root-partition instancia um sistema completo conforme definido pelo sistema operacional @code{%simple-os}."

#. type: Plain text
#: guix-git/doc/guix.texi:53156
msgid "You can now run:"
msgstr "Agora você pode executar:"

#. type: example
#: guix-git/doc/guix.texi:53159
#, no-wrap
msgid "guix system image my-image.scm\n"
msgstr "guix system image my-image.scm\n"

#. type: Plain text
#: guix-git/doc/guix.texi:53163
msgid "to instantiate the @code{image} definition.  That produces a disk image which has the expected structure:"
msgstr "para instanciar a definição @code{image}. Isso produz uma imagem de disco que tem a estrutura esperada:"

#. type: example
#: guix-git/doc/guix.texi:53172
#, no-wrap
msgid ""
"$ parted $(guix system image my-image.scm) print\n"
"@dots{}\n"
"Model:  (file)\n"
"Disk /gnu/store/yhylv1bp5b2ypb97pd3bbhz6jk5nbhxw-disk-image: 1714MB\n"
"Sector size (logical/physical): 512B/512B\n"
"Partition Table: msdos\n"
"Disk Flags:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53177
#, no-wrap
msgid ""
"Number  Start   End     Size    Type     File system  Flags\n"
" 1      1049kB  43.0MB  41.9MB  primary  fat16        esp\n"
" 2      43.0MB  95.4MB  52.4MB  primary  ext4\n"
" 3      95.4MB  1714MB  1619MB  primary  ext4         boot\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53182
msgid "The size of the @code{boot} partition has been inferred to @code{1619MB} so that it is large enough to host the @code{%simple-os} operating-system."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53187
msgid "You can also use existing @code{image} record definitions and inherit from them to simplify the @code{image} definition.  The @code{(gnu system image)} module provides the following @code{image} definition variables."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53188
#, fuzzy, no-wrap
msgid "mbr-disk-image"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53192
msgid "An MBR disk-image composed of a single ROOT partition.  The ROOT partition starts at a 1@tie{}MiB offset so that the bootloader can install itself in the post-MBR gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53194
#, fuzzy, no-wrap
msgid "mbr-hybrid-disk-image"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53202
msgid "An MBR disk-image composed of two partitions: a 64 bits ESP partition and a ROOT boot partition.  The ESP partition starts at a 1@tie{}MiB offset so that a BIOS compatible bootloader can install itself in the post-MBR gap.  The image can be used by @code{x86_64} and @code{i686} machines supporting only legacy BIOS booting.  The ESP partition ensures that it can also be used by newer machines relying on UEFI booting, hence the @emph{hybrid} denomination."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53204
#, fuzzy, no-wrap
msgid "efi-disk-image"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53208
msgid "A GPT disk-image composed of two partitions: a 64 bits ESP partition and a ROOT boot partition.  This image can be used on most @code{x86_64} and @code{i686} machines, supporting BIOS or UEFI booting."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53210
#, fuzzy, no-wrap
msgid "efi32-disk-image"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53212
msgid "Same as @code{efi-disk-image} but with a 32 bits EFI partition."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53214
#, no-wrap
msgid "iso9660-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53217
msgid "An ISO-9660 image composed of a single bootable partition.  This image can also be used on most @code{x86_64} and @code{i686} machines."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53219
#, no-wrap
msgid "docker-image"
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53221
msgid "A Docker image that can be used to spawn a Docker container."
msgstr "Uma imagem do Docker que pode ser usada para gerar um contêiner do Docker."

#. type: Plain text
#: guix-git/doc/guix.texi:53225
msgid "Using the @code{efi-disk-image} we can simplify our previous @code{image} declaration this way:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53233
#, no-wrap
msgid ""
"(use-modules (gnu)\n"
"             (gnu image)\n"
"             (gnu tests)\n"
"             (gnu system image)\n"
"             (guix gexp)\n"
"             (ice-9 match))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53247
#, no-wrap
msgid ""
"(define data\n"
"  (partition\n"
"   (size (* 50 MiB))\n"
"   (label \"DATA\")\n"
"   (file-system \"ext4\")\n"
"   (initializer #~(lambda* (root . rest)\n"
"                    (mkdir root)\n"
"                    (call-with-output-file\n"
"                        (string-append root \"/data\")\n"
"                      (lambda (port)\n"
"                        (format port \"my-data\")))))))\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53255
#, no-wrap
msgid ""
"(image\n"
" (inherit efi-disk-image)\n"
" (operating-system %simple-os)\n"
" (partitions\n"
"  (match (image-partitions efi-disk-image)\n"
"    ((esp root)\n"
"     (list esp data root)))))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53259
msgid "This will give the exact same @code{image} instantiation but the @code{image} declaration is simpler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53268
msgid "The @command{guix system image} command can, as we saw above, take a file containing an @code{image} declaration as argument and produce an actual disk image from it.  The same command can also handle a file containing an @code{operating-system} declaration as argument.  In that case, how is the @code{operating-system} turned into an image?"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53272
msgid "That's where the @code{image-type} record intervenes.  This record defines how to transform an @code{operating-system} record into an @code{image} record."
msgstr ""

#. type: deftp
#: guix-git/doc/guix.texi:53273
#, no-wrap
msgid "{Data Type} image-type"
msgstr "{Tipo de dados} image-type"

#. type: deftp
#: guix-git/doc/guix.texi:53275
#, fuzzy
msgid "This is the data type representing an image-type."
msgstr "Gerencie a configuração do sistema operacional."

#. type: table
#: guix-git/doc/guix.texi:53280
msgid "The image-type name as a mandatory symbol, @code{'efi32-raw} for instance."
msgstr ""

#. type: code{#1}
#: guix-git/doc/guix.texi:53281
#, no-wrap
msgid "constructor"
msgstr ""

#. type: table
#: guix-git/doc/guix.texi:53285
msgid "The image-type constructor, as a mandatory procedure that takes an @code{operating-system} record as argument and returns an @code{image} record."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53291
msgid "There are several @code{image-type} records provided by the @code{(gnu system image)} and the @code{(gnu system images @dots{})} modules."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53292
#, fuzzy, no-wrap
msgid "mbr-raw-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53294
msgid "Build an image based on the @code{mbr-disk-image} image."
msgstr "Crie uma imagem baseada na imagem @code{mbr-disk-image}."

#. type: defvar
#: guix-git/doc/guix.texi:53296
#, fuzzy, no-wrap
msgid "mbr-hybrid-raw-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53298
msgid "Build an image based on the @code{mbr-hybrid-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53300
#, fuzzy, no-wrap
msgid "efi-raw-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53302
msgid "Build an image based on the @code{efi-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53304
#, fuzzy, no-wrap
msgid "efi32-raw-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53306
msgid "Build an image based on the @code{efi32-disk-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53308
#, fuzzy, no-wrap
msgid "qcow2-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53311
msgid "Build an image based on the @code{mbr-disk-image} image but with the @code{compressed-qcow2} image format."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53313
#, fuzzy, no-wrap
msgid "iso-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53315
msgid "Build a compressed image based on the @code{iso9660-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53317
#, fuzzy, no-wrap
msgid "uncompressed-iso-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53320
msgid "Build an image based on the @code{iso9660-image} image but with the @code{compression?} field set to @code{#false}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53322
#, fuzzy, no-wrap
msgid "docker-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53324
msgid "Build an image based on the @code{docker-image} image."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53326
#, fuzzy, no-wrap
msgid "raw-with-offset-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53330
msgid "Build an MBR image with a single partition starting at a @code{1024KiB} offset.  This is useful to leave some room to install a bootloader in the post-MBR gap."
msgstr "Crie uma imagem MBR com uma única partição começando em um deslocamento @code{1024KiB}. Isso é útil para deixar algum espaço para instalar um bootloader na lacuna pós-MBR."

#. type: defvar
#: guix-git/doc/guix.texi:53332
#, fuzzy, no-wrap
msgid "pinebook-pro-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53337
msgid "Build an image that is targeting the Pinebook Pro machine.  The MBR image contains a single partition starting at a @code{9MiB} offset.  The @code{u-boot-pinebook-pro-rk3399-bootloader} bootloader will be installed in this gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53339
#, fuzzy, no-wrap
msgid "rock64-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53344
msgid "Build an image that is targeting the Rock64 machine.  The MBR image contains a single partition starting at a @code{16MiB} offset.  The @code{u-boot-rock64-rk3328-bootloader} bootloader will be installed in this gap."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53346
#, fuzzy, no-wrap
msgid "novena-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53349
msgid "Build an image that is targeting the Novena machine.  It has the same characteristics as @code{raw-with-offset-image-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53351
#, fuzzy, no-wrap
msgid "pine64-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53354
msgid "Build an image that is targeting the Pine64 machine.  It has the same characteristics as @code{raw-with-offset-image-type}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53356
#, fuzzy, no-wrap
msgid "hurd-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53360
msgid "Build an image that is targeting a @code{i386} machine running the Hurd kernel.  The MBR image contains a single ext2 partitions with specific @code{file-system-options} flags."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53362
#, fuzzy, no-wrap
msgid "hurd-qcow2-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53365
msgid "Build an image similar to the one built by the @code{hurd-image-type} but with the @code{format} set to @code{'compressed-qcow2}."
msgstr ""

#. type: defvar
#: guix-git/doc/guix.texi:53367
#, fuzzy, no-wrap
msgid "wsl2-image-type"
msgstr "guix-publish-service-type"

#. type: defvar
#: guix-git/doc/guix.texi:53370
msgid "Build an image for the @acronym{WSL2, Windows Subsystem for Linux 2}.  It can be imported by running:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53374
#, no-wrap
msgid ""
"wsl --import Guix ./guix ./wsl2-image.tar.gz\n"
"wsl -d Guix\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53382
msgid "So, if we get back to the @code{guix system image} command taking an @code{operating-system} declaration as argument.  By default, the @code{mbr-raw-image-type} is used to turn the provided @code{operating-system} into an actual bootable image."
msgstr "Então, se voltarmos ao comando @code{guix system image} tomando uma declaração @code{operating-system} como argumento. Por padrão, o @code{mbr-raw-image-type} é usado para transformar o @code{operating-system} fornecido em uma imagem inicializável real."

#. type: Plain text
#: guix-git/doc/guix.texi:53388
msgid "To use a different @code{image-type}, the @code{--image-type} option can be used.  The @code{--list-image-types} option will list all the supported image types.  It turns out to be a textual listing of all the @code{image-types} variables described just above (@pxref{Invoking guix system})."
msgstr "Para usar um @code{image-type} diferente, a opção @code{--image-type} pode ser usada. A opção @code{--list-image-types} listará todos os tipos de imagem suportados. Acontece que é uma listagem textual de todas as variáveis @code{image-types} descritas logo acima (@pxref{Invoking guix system})."

#. type: Plain text
#: guix-git/doc/guix.texi:53395
msgid "Let's take the example of the Pine64, an ARM based machine.  To be able to produce an image targeting this board, we need the following elements:"
msgstr "Vamos pegar o exemplo do Pine64, uma máquina baseada em ARM. Para poder produzir uma imagem direcionada a essa placa, precisamos dos seguintes elementos:"

#. type: item
#: guix-git/doc/guix.texi:53397
#, no-wrap
msgid "An @code{operating-system} record containing at least"
msgstr "Um registro @code{operating-system} contendo pelo menos"

#. type: itemize
#: guix-git/doc/guix.texi:53400
msgid "an appropriate kernel (@code{linux-libre-arm64-generic}) and bootloader @code{u-boot-pine64-lts-bootloader}) for the Pine64."
msgstr "um kernel apropriado (@code{linux-libre-arm64-generic}) e bootloader @code{u-boot-pine64-lts-bootloader}) para o Pine64."

#. type: item
#: guix-git/doc/guix.texi:53401
#, no-wrap
msgid "Possibly, an @code{image-type} record providing a way to"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53404
msgid "turn an @code{operating-system} record to an @code{image} record suitable for the Pine64."
msgstr ""

#. type: item
#: guix-git/doc/guix.texi:53405
#, no-wrap
msgid "An actual @code{image} that can be instantiated with the"
msgstr ""

#. type: itemize
#: guix-git/doc/guix.texi:53407
msgid "@command{guix system image} command."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53413
msgid "The @code{(gnu system images pine64)} module provides all those elements: @code{pine64-barebones-os}, @code{pine64-image-type} and @code{pine64-barebones-raw-image} respectively."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53416
msgid "The module returns the @code{pine64-barebones-raw-image} in order for users to be able to run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53419
#, no-wrap
msgid "guix system image gnu/system/images/pine64.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53424
msgid "Now, thanks to the @code{pine64-image-type} record declaring the @code{'pine64-raw} @code{image-type}, one could also prepare a @code{my-pine.scm} file with the following content:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53430
#, no-wrap
msgid ""
"(use-modules (gnu system images pine64))\n"
"(operating-system\n"
"  (inherit pine64-barebones-os)\n"
"  (timezone \"Europe/Athens\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53433
msgid "to customize the @code{pine64-barebones-os}, and run:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53436
#, no-wrap
msgid "$ guix system image --image-type=pine64-raw my-pine.scm\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53441
msgid "Note that there are other modules in the @code{gnu/system/images} directory targeting @code{Novena}, @code{Pine64}, @code{PinebookPro} and @code{Rock64} machines."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53445
#, no-wrap
msgid "debugging files"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53451
msgid "Program binaries, as produced by the GCC compilers for instance, are typically written in the ELF format, with a section containing @dfn{debugging information}.  Debugging information is what allows the debugger, GDB, to map binary code to source code; it is required to debug a compiled program in good conditions."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53455
msgid "This chapter explains how to use separate debug info when packages provide it, and how to rebuild packages with debug info when it's missing."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53471
msgid "The problem with debugging information is that it takes up a fair amount of disk space.  For example, debugging information for the GNU C Library weighs in at more than 60 MiB@.  Thus, as a user, keeping all the debugging info of all the installed programs is usually not an option.  Yet, space savings should not come at the cost of an impediment to debugging---especially in the GNU system, which should make it easier for users to exert their computing freedom (@pxref{GNU Distribution})."
msgstr "O problema com informações de depuração é que elas ocupam uma quantidade considerável de espaço em disco. Por exemplo, informações de depuração para a GNU C Library pesam mais de 60 MiB@. Assim, como usuário, manter todas as informações de depuração de todos os programas instalados geralmente não é uma opção. No entanto, a economia de espaço não deve vir ao custo de um impedimento à depuração --- especialmente no sistema GNU, o que deve tornar mais fácil para os usuários exercerem sua liberdade de computação (@pxref{GNU Distribution})."

#. type: Plain text
#: guix-git/doc/guix.texi:53478
msgid "Thankfully, the GNU Binary Utilities (Binutils) and GDB provide a mechanism that allows users to get the best of both worlds: debugging information can be stripped from the binaries and stored in separate files.  GDB is then able to load debugging information from those files, when they are available (@pxref{Separate Debug Files,,, gdb, Debugging with GDB})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53486
msgid "The GNU distribution takes advantage of this by storing debugging information in the @code{lib/debug} sub-directory of a separate package output unimaginatively called @code{debug} (@pxref{Packages with Multiple Outputs}).  Users can choose to install the @code{debug} output of a package when they need it.  For instance, the following command installs the debugging information for the GNU C Library and for GNU Guile:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53489
#, no-wrap
msgid "guix install glibc:debug guile:debug\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53495
msgid "GDB must then be told to look for debug files in the user's profile, by setting the @code{debug-file-directory} variable (consider setting it from the @file{~/.gdbinit} file, @pxref{Startup,,, gdb, Debugging with GDB}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53498
#, no-wrap
msgid "(gdb) set debug-file-directory ~/.guix-profile/lib/debug\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53502
msgid "From there on, GDB will pick up debugging information from the @file{.debug} files under @file{~/.guix-profile/lib/debug}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53507
msgid "Below is an alternative GDB script which is useful when working with other profiles.  It takes advantage of the optional Guile integration in GDB.  This snippet is included by default on Guix System in the @file{~/.gdbinit} file."
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53515
#, no-wrap
msgid ""
"guile\n"
"(use-modules (gdb))\n"
"(execute (string-append \"set debug-file-directory \"\n"
"                        (or (getenv \"GDB_DEBUG_FILE_DIRECTORY\")\n"
"                            \"~/.guix-profile/lib/debug\")))\n"
"end\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53523
msgid "In addition, you will most likely want GDB to be able to show the source code being debugged.  To do that, you will have to unpack the source code of the package of interest (obtained with @code{guix build --source}, @pxref{Invoking guix build}), and to point GDB to that source directory using the @code{directory} command (@pxref{Source Path, @code{directory},, gdb, Debugging with GDB})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53531
msgid "The @code{debug} output mechanism in Guix is implemented by the @code{gnu-build-system} (@pxref{Build Systems}).  Currently, it is opt-in---debugging information is available only for the packages with definitions explicitly declaring a @code{debug} output.  To check whether a package has a @code{debug} output, use @command{guix package --list-available} (@pxref{Invoking guix package})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53533
msgid "Read on for how to deal with packages lacking a @code{debug} output."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53545
msgid "As we saw above, some packages, but not all, provide debugging info in a @code{debug} output.  What can you do when debugging info is missing? The @option{--with-debug-info} option provides a solution to that: it allows you to rebuild the package(s) for which debugging info is missing---and only those---and to graft those onto the application you're debugging.  Thus, while it's not as fast as installing a @code{debug} output, it is relatively inexpensive."
msgstr "Como vimos acima, alguns pacotres, mas não todos, provêem informação de depuração numa saída @code{debug}.  O que podemos fazer quando informação de depuração está faltando? A opção @option{--with-debug-info} provê uma solução para isso: ela te permite reconstruir os pacotes para os quais a informação está faltando --- e nomente estes --- e exertá-los no aplicativo que você está deupurando.  Portanto, enquanto isso não é tão rápido quanto a instalação de uma saída do @code{debug}, isso é relativamente menos custoso."

#. type: Plain text
#: guix-git/doc/guix.texi:53550
msgid "Let's illustrate that.  Suppose you're experiencing a bug in Inkscape and would like to see what's going on in GLib, a library that's deep down in its dependency graph.  As it turns out, GLib does not have a @code{debug} output and the backtrace GDB shows is all sadness:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53561
#, no-wrap
msgid ""
"(gdb) bt\n"
"#0  0x00007ffff5f92190 in g_getenv ()\n"
"   from /gnu/store/@dots{}-glib-2.62.6/lib/libglib-2.0.so.0\n"
"#1  0x00007ffff608a7d6 in gobject_init_ctor ()\n"
"   from /gnu/store/@dots{}-glib-2.62.6/lib/libgobject-2.0.so.0\n"
"#2  0x00007ffff7fe275a in call_init (l=<optimized out>, argc=argc@@entry=1, argv=argv@@entry=0x7fffffffcfd8,\n"
"    env=env@@entry=0x7fffffffcfe8) at dl-init.c:72\n"
"#3  0x00007ffff7fe2866 in call_init (env=0x7fffffffcfe8, argv=0x7fffffffcfd8, argc=1, l=<optimized out>)\n"
"    at dl-init.c:118\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53565
msgid "To address that, you install Inkscape linked against a variant GLib that contains debug info:"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53571
msgid "This time, debugging will be a whole lot nicer:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53589
#, no-wrap
msgid ""
"$ gdb --args sh -c 'exec inkscape'\n"
"@dots{}\n"
"(gdb) b g_getenv\n"
"Function \"g_getenv\" not defined.\n"
"Make breakpoint pending on future shared library load? (y or [n]) y\n"
"Breakpoint 1 (g_getenv) pending.\n"
"(gdb) r\n"
"Starting program: /gnu/store/@dots{}-profile/bin/sh -c exec\\ inkscape\n"
"@dots{}\n"
"(gdb) bt\n"
"#0  g_getenv (variable=variable@@entry=0x7ffff60c7a2e \"GOBJECT_DEBUG\") at ../glib-2.62.6/glib/genviron.c:252\n"
"#1  0x00007ffff608a7d6 in gobject_init () at ../glib-2.62.6/gobject/gtype.c:4380\n"
"#2  gobject_init_ctor () at ../glib-2.62.6/gobject/gtype.c:4493\n"
"#3  0x00007ffff7fe275a in call_init (l=<optimized out>, argc=argc@@entry=3, argv=argv@@entry=0x7fffffffd088,\n"
"    env=env@@entry=0x7fffffffd0a8) at dl-init.c:72\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53592
msgid "Much better!"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53596
msgid "Note that there can be packages for which @option{--with-debug-info} will not have the desired effect.  @xref{Package Transformation Options, @option{--with-debug-info}}, for more information."
msgstr ""

#. type: chapter
#: guix-git/doc/guix.texi:53598
#, no-wrap
msgid "Using @TeX{} and @LaTeX{}"
msgstr "Usando @TeX{} e @LaTeX{}"

#. type: cindex
#: guix-git/doc/guix.texi:53600
#, no-wrap
msgid "@TeX{} packages"
msgstr "pacotes @TeX{}"

#. type: cindex
#: guix-git/doc/guix.texi:53601
#, no-wrap
msgid "@LaTeX{} packages"
msgstr "pacotes @LaTeX{}"

#. type: Plain text
#: guix-git/doc/guix.texi:53608
msgid "Guix provides packages for the @TeX{}, @LaTeX{}, ConTeXt, LuaTeX, and related typesetting systems, taken from the @uref{https://www.tug.org/texlive/, @TeX{} Live distribution}.  Because @TeX{} Live is so huge and because finding one's way in this maze is tricky, this section provides some guidance on how to deploy the relevant packages to compile @TeX{} and @LaTeX{} documents."
msgstr "Guix provê pacotes para os @TeX{}, @LaTeX{}, ConTeXt, LuaTeX e sistemas de tipografia afins, retirados da @uref{https://www.tug.org/texlive/, distribuição @TeX{} Live}.  Por conta da @TeX{} Live ser tão grande e encontrar um método neste labirinto é complicado, essa seção providenciará um guia de como implantar os pacotes relevantes para compilar documentos @TeX{} e @LaTeX{}."

#. type: Plain text
#: guix-git/doc/guix.texi:53610
msgid "@TeX{} Live currently comes in two mutually exclusive flavors in Guix:"
msgstr "@TeX{} Live atualmente vem em dois sabores mutualmente excluisvos no Guix:"

#. type: itemize
#: guix-git/doc/guix.texi:53616
msgid "The ``monolithic'' @code{texlive} package: it comes with @emph{every single @TeX{} Live package} (roughly 4,200), but it is huge---more than 4@tie{}GiB for a single package!"
msgstr "O pacote ``monolítico'' @code{texlive}: vem com @emph{todo pacote único da @TeX{} Live} (rigorosamente 4.200), mas isso é enorme --- mais que 4@tie{}GiB para um único pacote!"

#. type: itemize
#: guix-git/doc/guix.texi:53620
msgid "A ``modular'' @TeX{} Live distribution, in which you only install the packages you need, whose name is always prefixed with @samp{texlive-}."
msgstr "Uma distribuição ``modular'' da @TeX{} Live, na qual você instala os pacotes que você necessita, cujo nome é sempre prefixado com @samp{texlive-}."

#. type: Plain text
#: guix-git/doc/guix.texi:53629
#, fuzzy
#| msgid "So to insist, these two flavors cannot be combined@footnote{No rule without exception! As the monolithic @TeX{} Live does not contain the @command{biber} executable, it is okay to combine it with @code{texlive-biber}, which does.}.  If in the modular setting your document does not compile, the solution is not to add the monolithic @code{texlive} package, but to add the set of missing packages from the modular distribution."
msgid "To insist, these two flavors cannot be combined@footnote{No rule without exception! As the monolithic @TeX{} Live does not contain the @command{biber} executable, it is okay to combine it with @code{texlive-biber}, which does.}.  If in the modular setting your document does not compile, the solution is not to add the monolithic @code{texlive} package, but to add the set of missing packages from the modular distribution."
msgstr "Então insistindo, esses dois sabores não podem ser combinados@footnote{Nenhuma regra sem exceção! Tal qual o @TeX{} Live monolítico não contém o executável do @command{biber}, tudo bem ao combinar esse monolito com o @code{texlive-biber}.}.  Se numa configuração modular seu documentos não compilar, a solução não é adicionar o pacote monolítico @code{texlive}, mas sim adicionar o conjunto de pacotes que faltam da distribuição modular."

#. type: Plain text
#: guix-git/doc/guix.texi:53636
msgid "Building a coherent system that provides all the essential tools and, at the same time, satisfies all of its internal dependencies can be a difficult task.  It is therefore recommended to start with sets of packages, called @dfn{collections}, and @dfn{schemes}, the name for collections of collections.  The following command lists available schemes and collections (@pxref{guix-search,, Invoking guix package}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53639
#, no-wrap
msgid "guix search texlive-\\(scheme\\|collection\\) | recsel -p name,description\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53644
msgid "If needed, you may then complete your system with individual packages, particularly when they belong to a large collection you're not otherwise interested in."
msgstr "Se necessário, você pode completar seu sistema com pacotes individuais, principalmente quando eles pertencem a uma coleção grande na qual você não tem interesse."

#. type: Plain text
#: guix-git/doc/guix.texi:53647
msgid "For instance, the following manifest is a reasonable, yet frugal starting point for a French @LaTeX{} user:"
msgstr "Por exemplo. o seguinte manifesto e algo razoável, e ainda um ponto de partidal frugal para um usuário francês de @LaTeX{}:"

#. type: lisp
#: guix-git/doc/guix.texi:53651
#, fuzzy, no-wrap
#| msgid ""
#| "(specifications->manifest\n"
#| " '(\"emacs\" \"guile@@2.2\" \"guile@@2.2:debug\"))\n"
msgid ""
"(specifications->manifest\n"
" '(\"rubber\"\n"
"\n"
msgstr ""
"(specifications->manifest\n"
" '(\"rubber\"\n"
"\n"

#. type: lisp
#: guix-git/doc/guix.texi:53656
#, no-wrap
msgid ""
"   \"texlive-scheme-basic\"\n"
"   \"texlive-collection-latexrecommended\"\n"
"   \"texlive-collection-fontsrecommended\"\n"
"   \"texlive-babel-french\"\n"
"\n"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53661
#, no-wrap
msgid ""
"   ;; From \"latexextra\" collection.\n"
"   \"texlive-tabularray\"\n"
"   ;; From \"binextra\" collection.\n"
"   \"texlive-texdoc\"))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53667
msgid "If you come across a document that does not compile in such a basic setting, the main difficulty is finding the missing packages.  In this case, @command{pdflatex} and similar commands tend to fail with obscure error messages along the lines of:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53671
#, no-wrap
msgid ""
"doc.tex: File `tikz.sty' not found.\n"
"doc.tex:7: Emergency stop.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53675
msgid "or, for a missing font:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53679
#, no-wrap
msgid ""
"kpathsea: Running mktexmf phvr7t\n"
"! I can't find file `phvr7t'.\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53683
msgid "How do you determine what the missing package is? In the first case, you will find the answer by running:"
msgstr "Como determinar qual é o pacote que falta? No primeiro caso, encontrará a resposta executando:"

#. type: example
#: guix-git/doc/guix.texi:53689
#, no-wrap
msgid ""
"$ guix search texlive tikz\n"
"name: texlive-pgf\n"
"version: 59745\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53694
msgid "In the second case, @command{guix search} turns up nothing.  Instead, you can search the @TeX{} Live package database using the @command{tlmgr} command:"
msgstr "No segundo caso, @command{guix search} não fornece nada.  Ao invés disso, você pode buscar na base de dados de pacotes do @TeX{} Live usando o comando @command{tlmgr}:"

#. type: example
#: guix-git/doc/guix.texi:53698
#, no-wrap
msgid ""
"$ tlmgr info phvr7t\n"
"tlmgr: cannot find package phvr7t, searching for other matches:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53700
#, no-wrap
msgid ""
"Packages containing `phvr7t' in their title/description:\n"
"\n"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53709
#, no-wrap
msgid ""
"Packages containing files matching `phvr7t':\n"
"helvetic:\n"
"        texmf-dist/fonts/tfm/adobe/helvetic/phvr7t.tfm\n"
"        texmf-dist/fonts/tfm/adobe/helvetic/phvr7tn.tfm\n"
"        texmf-dist/fonts/vf/adobe/helvetic/phvr7t.vf\n"
"        texmf-dist/fonts/vf/adobe/helvetic/phvr7tn.vf\n"
"tex4ht:\n"
"        texmf-dist/tex4ht/ht-fonts/alias/adobe/helvetic/phvr7t.htf\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53715
msgid "The file is available in the @TeX{} Live @code{helvetic} package, which is known in Guix as @code{texlive-helvetic}.  Quite a ride, but you found it!"
msgstr "O arquivo está disponível no pacote @TeX{} Live @code{helvetic}, que é conhecido no Guix como @code{texlive-helvetic}. Uma viagem e tanto, mas você encontrou!"

#. type: cindex
#: guix-git/doc/guix.texi:53719
#, no-wrap
msgid "security updates"
msgstr "atualizações de segurança"

#. type: Plain text
#: guix-git/doc/guix.texi:53728
msgid "Occasionally, important security vulnerabilities are discovered in software packages and must be patched.  Guix developers try hard to keep track of known vulnerabilities and to apply fixes as soon as possible in the @code{master} branch of Guix (we do not yet provide a ``stable'' branch containing only security updates).  The @command{guix lint} tool helps developers find out about vulnerable versions of software packages in the distribution:"
msgstr "Ocasionalmente, vulnerabilidades de segurança importantes são descobertas em pacotes de software e devem ser corrigidas. Os desenvolvedores do Guix se esforçam para manter o controle das vulnerabilidades conhecidas e aplicar correções o mais rápido possível no branch @code{master} do Guix (ainda não fornecemos um branch ``stable'' contendo apenas atualizações de segurança). A ferramenta @command{guix lint} ajuda os desenvolvedores a descobrirem sobre versões vulneráveis de pacotes de software na distribuição:"

#. type: smallexample
#: guix-git/doc/guix.texi:53735
#, no-wrap
msgid ""
"$ guix lint -c cve\n"
"gnu/packages/base.scm:652:2: glibc@@2.21: probably vulnerable to CVE-2015-1781, CVE-2015-7547\n"
"gnu/packages/gcc.scm:334:2: gcc@@4.9.3: probably vulnerable to CVE-2015-5276\n"
"gnu/packages/image.scm:312:2: openjpeg@@2.1.0: probably vulnerable to CVE-2016-1923, CVE-2016-1924\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53738
msgid "@xref{Invoking guix lint}, for more information."
msgstr "@xref{Invoking guix lint}, para mais informações."

#. type: Plain text
#: guix-git/doc/guix.texi:53747
msgid "Guix follows a functional package management discipline (@pxref{Introduction}), which implies that, when a package is changed, @emph{every package that depends on it} must be rebuilt.  This can significantly slow down the deployment of fixes in core packages such as libc or Bash, since basically the whole distribution would need to be rebuilt.  Using pre-built binaries helps (@pxref{Substitutes}), but deployment may still take more time than desired."
msgstr "Guix segue uma disciplina de gerenciamento de pacotes funcional (@pxref{Introdução}), o que implica que, quando um pacote é alterado, @emph{todo pacote que depende dele} deve ser reconstruído. Isso pode desacelerar significativamente a implantação de correções em pacotes principais, como libc ou Bash, já que basicamente toda a distribuição precisaria ser reconstruída. Usar binários pré-construídos ajuda (@pxref{Substitutos}), mas a implantação ainda pode levar mais tempo do que o desejado."

#. type: cindex
#: guix-git/doc/guix.texi:53748
#, no-wrap
msgid "grafts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53756
msgid "To address this, Guix implements @dfn{grafts}, a mechanism that allows for fast deployment of critical updates without the costs associated with a whole-distribution rebuild.  The idea is to rebuild only the package that needs to be patched, and then to ``graft'' it onto packages explicitly installed by the user and that were previously referring to the original package.  The cost of grafting is typically very low, and order of magnitudes lower than a full rebuild of the dependency chain."
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53757
#, no-wrap
msgid "replacements of packages, for grafts"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53763
msgid "For instance, suppose a security update needs to be applied to Bash.  Guix developers will provide a package definition for the ``fixed'' Bash, say @code{bash-fixed}, in the usual way (@pxref{Defining Packages}).  Then, the original package definition is augmented with a @code{replacement} field pointing to the package containing the bug fix:"
msgstr ""

#. type: lisp
#: guix-git/doc/guix.texi:53770
#, no-wrap
msgid ""
"(define bash\n"
"  (package\n"
"    (name \"bash\")\n"
"    ;; @dots{}\n"
"    (replacement bash-fixed)))\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53780
msgid "From there on, any package depending directly or indirectly on Bash---as reported by @command{guix gc --requisites} (@pxref{Invoking guix gc})---that is installed is automatically ``rewritten'' to refer to @code{bash-fixed} instead of @code{bash}.  This grafting process takes time proportional to the size of the package, usually less than a minute for an ``average'' package on a recent machine.  Grafting is recursive: when an indirect dependency requires grafting, then grafting ``propagates'' up to the package that the user is installing."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53788
msgid "Currently, the length of the name and version of the graft and that of the package it replaces (@code{bash-fixed} and @code{bash} in the example above) must be equal.  This restriction mostly comes from the fact that grafting works by patching files, including binary files, directly.  Other restrictions may apply: for instance, when adding a graft to a package providing a shared library, the original shared library and its replacement must have the same @code{SONAME} and be binary-compatible."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53792
msgid "The @option{--no-grafts} command-line option allows you to forcefully avoid grafting (@pxref{Common Build Options, @option{--no-grafts}}).  Thus, the command:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53795
#, no-wrap
msgid "guix build bash --no-grafts\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53799
msgid "returns the store file name of the original Bash, whereas:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53802
#, no-wrap
msgid "guix build bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53807
msgid "returns the store file name of the ``fixed'', replacement Bash.  This allows you to distinguish between the two variants of Bash."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53810
msgid "To verify which Bash your whole profile refers to, you can run (@pxref{Invoking guix gc}):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:53813
#, no-wrap
msgid "guix gc -R $(readlink -f ~/.guix-profile) | grep bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53818
msgid "@dots{} and compare the store file names that you get with those above.  Likewise for a complete Guix system generation:"
msgstr "@dots{} e compare os nomes dos arquivos de armazém que você obtém com os acima. Da mesma forma para uma geração completa do sistema Guix:"

#. type: example
#: guix-git/doc/guix.texi:53821
#, no-wrap
msgid "guix gc -R $(guix system build my-config.scm) | grep bash\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53825
msgid "Lastly, to check which Bash running processes are using, you can use the @command{lsof} command:"
msgstr "Por fim, para verificar quais processos Bash estão em execução, você pode usar o comando @command{lsof}:"

#. type: example
#: guix-git/doc/guix.texi:53828
#, no-wrap
msgid "lsof | grep /gnu/store/.*bash\n"
msgstr ""

#. type: cindex
#: guix-git/doc/guix.texi:53836
#, no-wrap
msgid "bootstrapping"
msgstr "inicialização"

#. type: Plain text
#: guix-git/doc/guix.texi:53843
msgid "Bootstrapping in our context refers to how the distribution gets built ``from nothing''.  Remember that the build environment of a derivation contains nothing but its declared inputs (@pxref{Introduction}).  So there's an obvious chicken-and-egg problem: how does the first package get built? How does the first compiler get compiled?"
msgstr "Bootstrapping em nosso contexto se refere a como a distribuição é construída ``do nada''. Lembre-se de que o ambiente de construção de uma derivação não contém nada além de suas entradas declaradas (@pxref{Introdução}). Então há um problema óbvio de galinha e ovo: como o primeiro pacote é construído? Como o primeiro compilador é compilado?"

#. type: Plain text
#: guix-git/doc/guix.texi:53851
msgid "It is tempting to think of this question as one that only die-hard hackers may care about.  However, while the answer to that question is technical in nature, its implications are wide-ranging.  How the distribution is bootstrapped defines the extent to which we, as individuals and as a collective of users and hackers, can trust the software we run.  It is a central concern from the standpoint of @emph{security} and from a @emph{user freedom} viewpoint."
msgstr "É tentador pensar nessa questão como algo com que apenas hackers obstinados podem se importar. No entanto, embora a resposta a essa questão seja de natureza técnica, suas implicações são abrangentes. Como a distribuição é bootstrapped define até que ponto nós, como indivíduos e como um coletivo de usuários e hackers, podemos confiar no software que executamos. É uma preocupação central do ponto de vista da @emph{segurança} e do ponto de vista da @emph{liberdade do usuário}."

#. type: cindex
#: guix-git/doc/guix.texi:53852 guix-git/doc/guix.texi:54076
#, no-wrap
msgid "bootstrap binaries"
msgstr "binários bootstrap"

#. type: Plain text
#: guix-git/doc/guix.texi:53862
msgid "The GNU system is primarily made of C code, with libc at its core.  The GNU build system itself assumes the availability of a Bourne shell and command-line tools provided by GNU Coreutils, Awk, Findutils, `sed', and `grep'.  Furthermore, build programs---programs that run @code{./configure}, @code{make}, etc.---are written in Guile Scheme (@pxref{Derivations}).  Consequently, to be able to build anything at all, from scratch, Guix relies on pre-built binaries of Guile, GCC, Binutils, libc, and the other packages mentioned above---the @dfn{bootstrap binaries}."
msgstr "O sistema GNU é feito principalmente de código C, com libc em seu núcleo. O próprio sistema de construção GNU assume a disponibilidade de um Bourne shell e ferramentas de linha de comando fornecidas pelo GNU Coreutils, Awk, Findutils, `sed' e `grep'. Além disso, programas de construção --- programas que executam @code{./configure}, @code{make}, etc. --- são escritos em Guile Scheme (@pxref{Derivations}). Consequentemente, para ser capaz de construir qualquer coisa, do zero, Guix depende de binários pré-construídos de Guile, GCC, Binutils, libc e os outros pacotes mencionados acima --- os @dfn{binários bootstrap}."

#. type: Plain text
#: guix-git/doc/guix.texi:53866
msgid "These bootstrap binaries are ``taken for granted'', though we can also re-create them if needed (@pxref{Preparing to Use the Bootstrap Binaries})."
msgstr "Esses binários bootstrap são ``considerados garantidos'', embora também possamos recriá-los se necessário (@pxref{Preparing to Use the Bootstrap Binaries})."

#. type: section
#: guix-git/doc/guix.texi:53873
#, no-wrap
msgid "The Full-Source Bootstrap"
msgstr "O Bootstrap de código fonte completo"

#. type: Plain text
#: guix-git/doc/guix.texi:53880
msgid "Guix---like other GNU/Linux distributions---is traditionally bootstrapped from a set of bootstrap binaries: Bourne shell, command-line tools provided by GNU Coreutils, Awk, Findutils, `sed', and `grep' and Guile, GCC, Binutils, and the GNU C Library (@pxref{Bootstrapping}).  Usually, these bootstrap binaries are ``taken for granted.''"
msgstr "Guix---como outras distribuições GNU/Linux---é tradicionalmente bootstrapado a partir de um conjunto de binários bootstrap: Bourne shell, ferramentas de linha de comando fornecidas pelo GNU Coreutils, Awk, Findutils, ``sed' e `grep' e Guile, GCC, Binutils e a GNU C Library (@pxref{Bootstrapping}). Normalmente, esses binários bootstrap são ``considerados garantidos.''"

#. type: Plain text
#: guix-git/doc/guix.texi:53886
msgid "Taking the bootstrap binaries for granted means that we consider them to be a correct and trustworthy ``seed'' for building the complete system.  Therein lies a problem: the combined size of these bootstrap binaries is about 250MB (@pxref{Bootstrappable Builds,,, mes, GNU Mes}).  Auditing or even inspecting these is next to impossible."
msgstr "Tomar os binários bootstrap como garantidos significa que os consideramos uma ``semente'' correta e confiável para construir o sistema completo. Aí está um problema: o tamanho combinado desses binários bootstrap é de cerca de 250 MB (@pxref{Bootstrappable Builds,,, mes, GNU Mes}). Auditar ou mesmo inspecionar isso é quase impossível."

#. type: Plain text
#: guix-git/doc/guix.texi:53898
msgid "For @code{i686-linux} and @code{x86_64-linux}, Guix now features a @dfn{full-source bootstrap}.  This bootstrap is rooted in @file{hex0-seed} from the @url{https://savannah.gnu.org/projects/stage0, Stage0} package.  The hex0 program is minimalist assembler: it reads space-separated hexadecimal digits (nibbles) from a file, possibly including comments, and emits on standard output the bytes corresponding to those hexadecimal numbers.  The source code of this initial hex0 program is a file called @url{https://github.com/oriansj/bootstrap-seeds/blob/master/POSIX/x86/hex0_x86.hex0,@file{hex0_x86.hex0}} and is written in the @code{hex0} language."
msgstr "Para @code{i686-linux} e @code{x86_64-linux}, o Guix agora apresenta um @dfn{full-source bootstrap}. Este bootstrap está enraizado em @file{hex0-seed} do pacote @url{https://savannah.gnu.org/projects/stage0, Stage0}. O programa hex0 é um assembler minimalista: ele lê dígitos hexadecimais separados por espaços (nibbles) de um arquivo, possivelmente incluindo comentários, e emite na saída padrão os bytes correspondentes a esses números hexadecimais. O código-fonte deste programa hex0 inicial é um arquivo chamado @url{https://github.com/oriansj/bootstrap-seeds/blob/master/POSIX/x86/hex0_x86.hex0,@file{hex0_x86.hex0}} e é escrito na linguagem @code{hex0}."

#. type: Plain text
#: guix-git/doc/guix.texi:53900
msgid "Hex0 is self-hosting, which means that it can build itself:"
msgstr "O Hex0 é auto-hospedado, o que significa que ele pode se construir:"

#. type: example
#: guix-git/doc/guix.texi:53903
#, no-wrap
msgid "./hex0-seed hex0_x86.hex0 hex0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53907
msgid "Hex0 it is the ASCII-equivalent of the binary program and can be produced by doing something much like:"
msgstr "Hex0 é o equivalente ASCII do programa binário e pode ser produzido fazendo algo muito parecido com:"

#. type: example
#: guix-git/doc/guix.texi:53911
#, no-wrap
msgid ""
"sed 's/[;#].*$//g' hex0_x86.hex0 | xxd -r -p > hex0\n"
"chmod +x hex0\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53915
msgid "It is because of this ASCII-binary equivalence that we can bless this initial 357-byte binary as source, and hence `full-source bootstrap''."
msgstr "É por causa dessa equivalência ASCII-binário que podemos abençoar esse binário inicial de 357 bytes como fonte e, portanto, `bootstrap de fonte completa''."

#. type: Plain text
#: guix-git/doc/guix.texi:53922
msgid "The bootstrap then continues: @code{hex0} builds @code{hex1} and then on to @code{M0}, @code{hex2}, @code{M1}, @code{mescc-tools} and finally @code{M2-Planet}.  Then, using @code{mescc-tools}, @code{M2-Planet} we build Mes (@pxref{Top, GNU Mes Reference Manual,, mes, GNU Mes}, a Scheme interpreter and C compiler in Scheme).  From here on starts the more traditional @code{C}-based bootstrap of the GNU System."
msgstr "O bootstrap então continua: @code{hex0} constrói @code{hex1} e então para @code{M0}, @code{hex2}, @code{M1}, @code{mescc-tools} e finalmente @code{M2-Planet}. Então, usando @code{mescc-tools}, @code{M2-Planet} nós construímos Mes (@pxref{Top, GNU Mes Reference Manual,, mes, GNU Mes}, um interpretador Scheme e compilador C em Scheme). A partir daqui começa o bootstrap mais tradicional baseado em @code{C} do Sistema GNU."

#. type: Plain text
#: guix-git/doc/guix.texi:53929
msgid "Another step that Guix has taken is to replace the shell and all its utilities with implementations in Guile Scheme, the @emph{Scheme-only bootstrap}.  Gash (@pxref{Gash,,, gash, The Gash manual}) is a POSIX-compatible shell that replaces Bash, and it comes with Gash Utils which has minimalist replacements for Awk, the GNU Core Utilities, Grep, Gzip, Sed, and Tar."
msgstr "Outro passo que o Guix tomou foi substituir o shell e todos os seus utilitários por implementações no Guile Scheme, o @emph{Scheme-only bootstrap}. O Gash (@pxref{Gash,,, gash, The Gash manual}) é um shell compatível com POSIX que substitui o Bash, e vem com o Gash Utils, que tem substituições minimalistas para o Awk, o GNU Core Utilities, Grep, Gzip, Sed e Tar."

#. type: Plain text
#: guix-git/doc/guix.texi:53939
msgid "Building the GNU System from source is currently only possible by adding some historical GNU packages as intermediate steps@footnote{Packages such as @code{gcc-2.95.3}, @code{binutils-2.14}, @code{glibc-2.2.5}, @code{gzip-1.2.4}, @code{tar-1.22}, and some others.  For details, see @file{gnu/packages/commencement.scm}.}.  As Gash and Gash Utils mature, and GNU packages become more bootstrappable again (e.g., new releases of GNU Sed will also ship as gzipped tarballs again, as alternative to the hard to bootstrap @code{xz}-compression), this set of added packages can hopefully be reduced again."
msgstr "Atualmente, construir o Sistema GNU a partir do código-fonte só é possível adicionando alguns pacotes históricos do GNU como etapas intermediárias@footnote{Pacotes como @code{gcc-2.95.3}, @code{binutils-2.14}, @code{glibc-2.2.5}, @code{gzip-1.2.4}, @code{tar-1.22} e alguns outros. Para detalhes, veja @file{gnu/packages/commencement.scm}.}. Conforme o Gash e o Gash Utils amadurecem, e os pacotes GNU se tornam mais inicializáveis novamente (por exemplo, novos lançamentos do GNU Sed também serão enviados como tarballs compactados novamente, como alternativa à compressão @code{xz} difícil de inicializar), esse conjunto de pacotes adicionados pode ser reduzido novamente."

#. type: Plain text
#: guix-git/doc/guix.texi:53943
msgid "The graph below shows the resulting dependency graph for @code{gcc-core-mesboot0}, the bootstrap compiler used for the traditional bootstrap of the rest of the Guix System."
msgstr "O grafo abaixo mostra o grafo de dependência resultante para @code{gcc-core-mesboot0}, o compilador bootstrap usado para o bootstrap tradicional do restante do Sistema Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:53951
msgid "@image{images/gcc-core-mesboot0-graph,6in,,Dependency graph of gcc-core-mesboot0}"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53954
msgid "Work is ongoing to bring these bootstraps to the @code{arm-linux} and @code{aarch64-linux} architectures and to the Hurd."
msgstr "O trabalho está em andamento para levar esses bootstraps às arquiteturas @code{arm-linux} e @code{aarch64-linux} e ao Hurd."

#. type: Plain text
#: guix-git/doc/guix.texi:53958
msgid "If you are interested, join us on @samp{#bootstrappable} on the Libera.Chat IRC network or discuss on @email{bug-mes@@gnu.org} or @email{gash-devel@@nongnu.org}."
msgstr "Se você estiver interessado, junte-se a nós em @samp{#bootstrappable} na rede IRC Libera.Chat ou discuta em @email{bug-mes@@gnu.org} ou @email{gash-devel@@nongnu.org}."

#. type: Plain text
#: guix-git/doc/guix.texi:53965
msgid "@image{images/bootstrap-graph,6in,,Dependency graph of the early bootstrap derivations}"
msgstr "@image{images/bootstrap-graph,6in,,Grafo de dependência das primeiras derivações do bootstrap}"

#. type: Plain text
#: guix-git/doc/guix.texi:53970
msgid "The figure above shows the very beginning of the dependency graph of the distribution, corresponding to the package definitions of the @code{(gnu packages bootstrap)} module.  A similar figure can be generated with @command{guix graph} (@pxref{Invoking guix graph}), along the lines of:"
msgstr "A figura acima mostra o início do grafo de dependência da distribuição, correspondendo às definições de pacote do módulo @code{(gnu packages bootstrap)}. Uma figura similar pode ser gerada com @command{guix graph} (@pxref{Invoking guix graph}), ao longo das linhas de:"

#. type: example
#: guix-git/doc/guix.texi:53975
#, no-wrap
msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-gcc)' \\\n"
"  | dot -Tps > gcc.ps\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:53978
msgid "or, for the further Reduced Binary Seed bootstrap"
msgstr "ou, para o bootstrap de semente binária reduzida"

#. type: example
#: guix-git/doc/guix.texi:53983
#, no-wrap
msgid ""
"guix graph -t derivation \\\n"
"  -e '(@@@@ (gnu packages bootstrap) %bootstrap-mes)' \\\n"
"  | dot -Tps > mes.ps\n"
msgstr ""
"guix graph -t derivation  \\\n"
"-e '(@@@@ (pacotes gnu bootstrap) %bootstrap-mes)' \\\n"
"| ponto -Tps > mes.ps\n"

#. type: Plain text
#: guix-git/doc/guix.texi:53992
msgid "At this level of detail, things are slightly complex.  First, Guile itself consists of an ELF executable, along with many source and compiled Scheme files that are dynamically loaded when it runs.  This gets stored in the @file{guile-2.0.7.tar.xz} tarball shown in this graph.  This tarball is part of Guix's ``source'' distribution, and gets inserted into the store with @code{add-to-store} (@pxref{The Store})."
msgstr "Neste nível de detalhe, as coisas são um pouco complexas. Primeiro, o próprio Guile consiste em um executável ELF, junto com muitas fontes e arquivos de Scheme compilados que são carregados dinamicamente quando ele é executado. Isso é armazenado no tarball @file{guile-2.0.7.tar.xz} mostrado neste grafo. Este tarball é parte da distribuição de ``fontes'' do Guix e é inserido no armazém com @code{add-to-store} (@pxref{The Store})."

#. type: Plain text
#: guix-git/doc/guix.texi:54001
msgid "But how do we write a derivation that unpacks this tarball and adds it to the store? To solve this problem, the @code{guile-bootstrap-2.0.drv} derivation---the first one that gets built---uses @code{bash} as its builder, which runs @code{build-bootstrap-guile.sh}, which in turn calls @code{tar} to unpack the tarball.  Thus, @file{bash}, @file{tar}, @file{xz}, and @file{mkdir} are statically-linked binaries, also part of the Guix source distribution, whose sole purpose is to allow the Guile tarball to be unpacked."
msgstr "Mas como escrevemos uma derivação que descompacta esse tarball e o adiciona ao armazém? Para resolver esse problema, a derivação @code{guile-bootstrap-2.0.drv} --- a primeira que é construída --- usa @code{bash} como seu construtor, que executa @code{build-bootstrap-guile.sh}, que por sua vez chama @code{tar} para descompactar o tarball. Assim, @file{bash}, @file{tar}, @file{xz} e @file{mkdir} são binários estaticamente vinculados, também parte da distribuição de fontes do Guix, cujo único propósito é permitir que o tarball do Guile seja descompactado."

#. type: Plain text
#: guix-git/doc/guix.texi:54013
msgid "Once @code{guile-bootstrap-2.0.drv} is built, we have a functioning Guile that can be used to run subsequent build programs.  Its first task is to download tarballs containing the other pre-built binaries---this is what the @file{.tar.xz.drv} derivations do.  Guix modules such as @code{ftp-client.scm} are used for this purpose.  The @code{module-import.drv} derivations import those modules in a directory in the store, using the original layout.  The @code{module-import-compiled.drv} derivations compile those modules, and write them in an output directory with the right layout.  This corresponds to the @code{#:modules} argument of @code{build-expression->derivation} (@pxref{Derivations})."
msgstr "Uma vez que @code{guile-bootstrap-2.0.drv} é construído, temos um Guile funcional que pode ser usado para executar programas de construção subsequentes. Sua primeira tarefa é baixar tarballs contendo os outros binários pré-construídos --- é isso que as derivações @file{.tar.xz.drv} fazem. Módulos Guix como @code{ftp-client.scm} são usados para esse propósito. As derivações @code{module-import.drv} importam esses módulos em um diretório no armazém, usando o layout original. As derivações @code{module-import-compiled.drv} compilam esses módulos e os escrevem em um diretório de saída com o layout correto. Isso corresponde ao argumento @code{#:modules} de @code{build-expression->derivation} (@pxref{Derivations})."

#. type: Plain text
#: guix-git/doc/guix.texi:54018
msgid "Finally, the various tarballs are unpacked by the derivations @code{gcc-bootstrap-0.drv}, @code{glibc-bootstrap-0.drv}, or @code{bootstrap-mes-0.drv} and @code{bootstrap-mescc-tools-0.drv}, at which point we have a working C tool chain."
msgstr "Por fim, os vários tarballs são descompactados pelas derivações @code{gcc-bootstrap-0.drv}, @code{glibc-bootstrap-0.drv} ou @code{bootstrap-mes-0.drv} e @code{bootstrap-mescc-tools-0.drv}, ponto em que temos uma cadeia de ferramentas C funcional."

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54019
#, no-wrap
msgid "Building the Build Tools"
msgstr "Construindo as ferramentas de construção"

#. type: Plain text
#: guix-git/doc/guix.texi:54028
msgid "Bootstrapping is complete when we have a full tool chain that does not depend on the pre-built bootstrap tools discussed above.  This no-dependency requirement is verified by checking whether the files of the final tool chain contain references to the @file{/gnu/store} directories of the bootstrap inputs.  The process that leads to this ``final'' tool chain is described by the package definitions found in the @code{(gnu packages commencement)} module."
msgstr "O bootstrapping está completo quando temos uma cadeia de ferramentas completa que não depende das ferramentas bootstrap pré-construídas discutidas acima. Esse requisito de não dependência é verificado verificando se os arquivos da cadeia de ferramentas final contêm referências aos diretórios @file{/gnu/store} das entradas bootstrap. O processo que leva a essa cadeia de ferramentas ``final'' é descrito pelas definições de pacote encontradas no módulo @code{(gnu packages commencement)}."

#. type: Plain text
#: guix-git/doc/guix.texi:54035
msgid "The @command{guix graph} command allows us to ``zoom out'' compared to the graph above, by looking at the level of package objects instead of individual derivations---remember that a package may translate to several derivations, typically one derivation to download its source, one to build the Guile modules it needs, and one to actually build the package from source.  The command:"
msgstr "O comando @command{guix graph} nos permite ``diminuir o zoom'' em comparação ao grafo acima, observando o nível de objetos do pacote em vez de derivações individuais --- lembre-se de que um pacote pode ser traduzido para várias derivações, normalmente uma derivação para baixar sua fonte, uma para construir os módulos Guile de que ele precisa e uma para realmente construir o pacote a partir da fonte. O comando:"

#. type: example
#: guix-git/doc/guix.texi:54040
#, no-wrap
msgid ""
"guix graph -t bag \\\n"
"  -e '(@@@@ (gnu packages commencement)\n"
"          glibc-final-with-bootstrap-bash)' | xdot -\n"
msgstr ""
"guix graph -t bag \\\n"
"  -e '(@@@@ (gnu packages commencement)\n"
"          glibc-final-with-bootstrap-bash)' | xdot -\n"

#. type: Plain text
#: guix-git/doc/guix.texi:54047
msgid "displays the dependency graph leading to the ``final'' C library@footnote{You may notice the @code{glibc-intermediate} label, suggesting that it is not @emph{quite} final, but as a good approximation, we will consider it final.}, depicted below."
msgstr "exibe o grafo de dependência que leva à biblioteca C ``final''@footnote{Você pode notar o rótulo @code{glibc-intermediate}, sugerindo que ela não é @emph{completamente} final, mas como uma boa aproximação, a consideraremos final.}, descrita abaixo."

#. type: Plain text
#: guix-git/doc/guix.texi:54049
msgid "@image{images/bootstrap-packages,6in,,Dependency graph of the early packages}"
msgstr "@image{images/bootstrap-packages,6in,,Grafo de dependência dos primeiros pacotes}"

#. type: Plain text
#: guix-git/doc/guix.texi:54055
msgid "The first tool that gets built with the bootstrap binaries is GNU@tie{}Make---noted @code{make-boot0} above---which is a prerequisite for all the following packages.  From there Findutils and Diffutils get built."
msgstr "A primeira ferramenta que é construída com os binários bootstrap é o GNU@tie{}Make---observado @code{make-boot0} acima---que é um pré-requisito para todos os pacotes seguintes. A partir daí, Findutils e Diffutils são construídos."

#. type: Plain text
#: guix-git/doc/guix.texi:54060
msgid "Then come the first-stage Binutils and GCC, built as pseudo cross tools---i.e., with @option{--target} equal to @option{--host}.  They are used to build libc.  Thanks to this cross-build trick, this libc is guaranteed not to hold any reference to the initial tool chain."
msgstr "Então vêm os Binutils e GCC de primeiro estágio, construídos como pseudo cross tools---i.e., com @option{--target} igual a @option{--host}. Eles são usados para construir a libc. Graças a esse truque de cross-build, essa libc tem a garantia de não manter nenhuma referência à cadeia de ferramentas inicial."

#. type: Plain text
#: guix-git/doc/guix.texi:54066
msgid "From there the final Binutils and GCC (not shown above) are built.  GCC uses @command{ld} from the final Binutils, and links programs against the just-built libc.  This tool chain is used to build the other packages used by Guix and by the GNU Build System: Guile, Bash, Coreutils, etc."
msgstr "A partir daí, os Binutils finais e o GCC (não mostrados acima) são construídos. O GCC usa @command{ld} dos Binutils finais e vincula programas à libc recém-construída. Essa cadeia de ferramentas é usada para construir os outros pacotes usados pelo Guix e pelo GNU Build System: Guile, Bash, Coreutils, etc."

#. type: Plain text
#: guix-git/doc/guix.texi:54072
msgid "And voilà! At this point we have the complete set of build tools that the GNU Build System expects.  These are in the @code{%final-inputs} variable of the @code{(gnu packages commencement)} module, and are implicitly used by any package that uses @code{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."
msgstr "E voilà! Neste ponto, temos o conjunto completo de ferramentas de construção que o GNU Build System espera. Elas estão na variável @code{%final-inputs} do módulo @code{(gnu packages commencement)} e são implicitamente usadas por qualquer pacote que use @code{gnu-build-system} (@pxref{Build Systems, @code{gnu-build-system}})."

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54074
#, no-wrap
msgid "Building the Bootstrap Binaries"
msgstr "Construindo os binários Bootstrap"

#. type: Plain text
#: guix-git/doc/guix.texi:54081
msgid "Because the final tool chain does not depend on the bootstrap binaries, those rarely need to be updated.  Nevertheless, it is useful to have an automated way to produce them, should an update occur, and this is what the @code{(gnu packages make-bootstrap)} module provides."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54087
msgid "The following command builds the tarballs containing the bootstrap binaries (Binutils, GCC, glibc, for the traditional bootstrap and linux-libre-headers, bootstrap-mescc-tools, bootstrap-mes for the Reduced Binary Seed bootstrap, and Guile, and a tarball containing a mixture of Coreutils and other basic command-line tools):"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54090
#, no-wrap
msgid "guix build bootstrap-tarballs\n"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54095
msgid "The generated tarballs are those that should be referred to in the @code{(gnu packages bootstrap)} module mentioned at the beginning of this section."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54101
msgid "Still here? Then perhaps by now you've started to wonder: when do we reach a fixed point? That is an interesting question! The answer is unknown, but if you would like to investigate further (and have significant computational and storage resources to do so), then let us know."
msgstr ""

#. type: unnumberedsec
#: guix-git/doc/guix.texi:54102
#, no-wrap
msgid "Reducing the Set of Bootstrap Binaries"
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54110
msgid "Our traditional bootstrap includes GCC, GNU Libc, Guile, etc.  That's a lot of binary code! Why is that a problem? It's a problem because these big chunks of binary code are practically non-auditable, which makes it hard to establish what source code produced them.  Every unauditable binary also leaves us vulnerable to compiler backdoors as described by Ken Thompson in the 1984 paper @emph{Reflections on Trusting Trust}."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54116
msgid "This is mitigated by the fact that our bootstrap binaries were generated from an earlier Guix revision.  Nevertheless it lacks the level of transparency that we get in the rest of the package dependency graph, where Guix always gives us a source-to-binary mapping.  Thus, our goal is to reduce the set of bootstrap binaries to the bare minimum."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54122
msgid "The @uref{https://bootstrappable.org, Bootstrappable.org web site} lists on-going projects to do that.  One of these is about replacing the bootstrap GCC with a sequence of assemblers, interpreters, and compilers of increasing complexity, which could be built from source starting from a simple and auditable assembler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54131
msgid "Our first major achievement is the replacement of GCC, the GNU C Library and Binutils by MesCC-Tools (a simple hex linker and macro assembler) and Mes (@pxref{Top, GNU Mes Reference Manual,, mes, GNU Mes}, a Scheme interpreter and C compiler in Scheme).  Neither MesCC-Tools nor Mes can be fully bootstrapped yet and thus we inject them as binary seeds.  We call this the Reduced Binary Seed bootstrap, as it has halved the size of our bootstrap binaries! Also, it has eliminated the C compiler binary; i686-linux and x86_64-linux Guix packages are now bootstrapped without any binary C compiler."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54134
msgid "Work is ongoing to make MesCC-Tools and Mes fully bootstrappable and we are also looking at any other bootstrap binaries.  Your help is welcome!"
msgstr ""

#. type: chapter
#: guix-git/doc/guix.texi:54136
#, no-wrap
msgid "Porting to a New Platform"
msgstr "Portando para uma nova plataforma"

#. type: Plain text
#: guix-git/doc/guix.texi:54145
msgid "As discussed above, the GNU distribution is self-contained, and self-containment is achieved by relying on pre-built ``bootstrap binaries'' (@pxref{Bootstrapping}).  These binaries are specific to an operating system kernel, CPU architecture, and application binary interface (ABI).  Thus, to port the distribution to a platform that is not yet supported, one must build those bootstrap binaries, and update the @code{(gnu packages bootstrap)} module to use them on that platform."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54150
msgid "Fortunately, Guix can @emph{cross compile} those bootstrap binaries.  When everything goes well, and assuming the GNU tool chain supports the target platform, this can be as simple as running a command like this one:"
msgstr ""

#. type: example
#: guix-git/doc/guix.texi:54153
#, no-wrap
msgid "guix build --target=armv5tel-linux-gnueabi bootstrap-tarballs\n"
msgstr "guix build --target=armv5tel-linux-gnueabi bootstrap-tarballs\n"

#. type: Plain text
#: guix-git/doc/guix.texi:54162
msgid "For this to work, it is first required to register a new platform as defined in the @code{(guix platform)} module.  A platform is making the connection between a GNU triplet (@pxref{Specifying Target Triplets, GNU configuration triplets,, autoconf, Autoconf}), the equivalent @var{system} in Nix notation, the name of the @var{glibc-dynamic-linker}, and the corresponding Linux architecture name if applicable (@pxref{Platforms})."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54171
msgid "Once the bootstrap tarball are built, the @code{(gnu packages bootstrap)} module needs to be updated to refer to these binaries on the target platform.  That is, the hashes and URLs of the bootstrap tarballs for the new platform must be added alongside those of the currently supported platforms.  The bootstrap Guile tarball is treated specially: it is expected to be available locally, and @file{gnu/local.mk} has rules to download it for the supported architectures; a rule for the new platform must be added as well."
msgstr ""

#. type: Plain text
#: guix-git/doc/guix.texi:54180
msgid "In practice, there may be some complications.  First, it may be that the extended GNU triplet that specifies an ABI (like the @code{eabi} suffix above) is not recognized by all the GNU tools.  Typically, glibc recognizes some of these, whereas GCC uses an extra @option{--with-abi} configure flag (see @code{gcc.scm} for examples of how to handle this).  Second, some of the required packages could fail to build for that platform.  Lastly, the generated binaries could be broken for some reason."
msgstr ""

#. type: include
#: guix-git/doc/guix.texi:54182
#, no-wrap
msgid "contributing.texi"
msgstr "contributing.pt_BR.texi"

#. type: Plain text
#: guix-git/doc/guix.texi:54195
msgid "Guix is based on the @uref{https://nixos.org/nix/, Nix package manager}, which was designed and implemented by Eelco Dolstra, with contributions from other people (see the @file{nix/AUTHORS} file in Guix).  Nix pioneered functional package management, and promoted unprecedented features, such as transactional package upgrades and rollbacks, per-user profiles, and referentially transparent build processes.  Without this work, Guix would not exist."
msgstr "Guix é baseado no @uref{https://nixos.org/nix/, gerenciador de pacotes Nix}, que foi projetado e implementado por Eelco Dolstra, com contribuições de outras pessoas (veja o arquivo @file{nix/AUTHORS} no Guix.) O Nix foi pioneiro no gerenciamento funcional de pacotes e promoveu recursos sem precedentes, como atualizações e reversões de pacotes transacionais, perfis por usuário e processos de construção referencialmente transparentes. Sem esse trabalho, o Guix não existiria."

#. type: Plain text
#: guix-git/doc/guix.texi:54198
msgid "The Nix-based software distributions, Nixpkgs and NixOS, have also been an inspiration for Guix."
msgstr "As distribuições de software baseadas em Nix, Nixpkgs e NixOS, também foram uma inspiração para o Guix."

#. type: Plain text
#: guix-git/doc/guix.texi:54204
msgid "GNU@tie{}Guix itself is a collective work with contributions from a number of people.  See the @file{AUTHORS} file in Guix for more information on these fine people.  The @file{THANKS} file lists people who have helped by reporting bugs, taking care of the infrastructure, providing artwork and themes, making suggestions, and more---thank you!"
msgstr "O GNU@tie{}Guix em si é um trabalho coletivo com contribuições de várias pessoas. Veja o arquivo @file{AUTHORS} no Guix para obter mais informações sobre essas pessoas legais. O arquivo @file{THANKS} lista as pessoas que ajudaram a relatar erros, cuidar da infraestrutura, fornecer ilustrações e temas, fazer sugestões e muito mais -- obrigado!"

#. type: cindex
#: guix-git/doc/guix.texi:54209
#, no-wrap
msgid "license, GNU Free Documentation License"
msgstr "licença, Licença de Documentação Livre GNU"

#. type: include
#: guix-git/doc/guix.texi:54210
#, no-wrap
msgid "fdl-1.3.texi"
msgstr "fdl-1.3.texi"

#~ msgid "Bug reports and patch submissions are currently tracked using the Debbugs instance at @uref{https://bugs.gnu.org}.  Bug reports are filed against the @code{guix} ``package'' (in Debbugs parlance), by sending email to @email{bug-guix@@gnu.org}, while patch submissions are filed against the @code{guix-patches} package by sending email to @email{guix-patches@@gnu.org} (@pxref{Submitting Patches})."
#~ msgstr "Relatórios de bugs e envios de patches são atualmente rastreados usando a instância Debbugs em @uref{https://bugs.gnu.org}. Relatórios de bugs são arquivados no ``pacote'' @code{guix} (no jargão do Debbugs), enviando um e-mail para @email{bug-guix@@gnu.org}, enquanto envios de patches são arquivados no pacote @code{guix-patches} enviando um e-mail para @email{guix-patches@@gnu.org} (@pxref{Submitting Patches})."

#~ msgid "Configuring Git::"
#~ msgstr "Configurar o Git::"

#, fuzzy
#~| msgid "Coding Style"
#~ msgid "Coding::"
#~ msgstr "Estilo de código"

#~ msgid "System Administration::"
#~ msgstr "Administração do sistema::"

#, fuzzy
#~| msgid "System administration"
#~ msgid "Day-to-Day System Administration::"
#~ msgstr "Administração do Sistema"

#, fuzzy
#~| msgid "Porting"
#~ msgid "Hosting::"
#~ msgstr "Portando"

#, fuzzy, no-wrap
#~| msgid "@code{features} (default: @code{'()})"
#~ msgid "@code{shepherd-requirement} (default: @code{'(wpa-supplicant)})"
#~ msgstr "@code{features} (padrão: @code{'()})"

#, fuzzy
#~| msgid "guix package"
#~ msgid "Qemu package."
#~ msgstr "guix package"

#, fuzzy
#~ msgid "Data type representing the configuration of @command{elogind}."
#~ msgstr "Gerencie a configuração do sistema operacional."

#~ msgid "..."
#~ msgstr "..."

#, fuzzy, no-wrap
#~| msgid "@code{replacement} (default: @code{#f})"
#~ msgid "@code{kill-only-users} (default: @code{'()}) (type: list)"
#~ msgstr "@code{replacement} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{idle-action-seconds} (default: @code{(* 30 60)}) (type: integer)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{runtime-directory-size} (default: @code{#f}) (type: integer)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{replacement} (default: @code{#f})"
#~ msgid "@code{suspend-mode} (default: @code{'()}) (type: list)"
#~ msgstr "@code{replacement} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{replacement} (default: @code{#f})"
#~ msgid "@code{hibernate-state} (default: @code{'(\"disk\")}) (type: list)"
#~ msgstr "@code{replacement} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{replacement} (default: @code{#f})"
#~ msgid "@code{hybrid-sleep-state} (default: @code{'(\"disk\")}) (type: list)"
#~ msgstr "@code{replacement} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{dbus?} (default: @code{#t})"
#~ msgid "@code{hybrid-sleep-mode} (default: @code{'(\"suspend\" \"platform\" \"shutdown\")}) (type: list)"
#~ msgstr "@code{dbus?} (padrão: @code{#t})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{hibernate-delay-seconds} (default: @code{*unspecified*}) (type: integer)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{suspend-estimation-seconds} (default: @code{*unspecified*}) (type: integer)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~ msgid "@code{pid-file} (type: maybe-string)"
#~ msgstr "@code{remote?} (padrão: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{admin-pubkey} (default: @var{#f})"
#~ msgid "@code{admin-pubkey} (default: @code{#f})"
#~ msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#~ msgid "If you are installing Guix as an unprivileged user, it is still possible to run @command{guix-daemon} provided you pass @option{--disable-chroot}.  However, build processes will not be isolated from one another, and not from the rest of the system.  Thus, build processes may interfere with each other, and may access programs, libraries, and other files available on the system---making it much harder to view them as @emph{pure} functions."
#~ msgstr "Se você estiver instalando o Guix como um usuário sem privilégios, ainda é possível executar @command{guix-daemon} desde que você passe @option{--disable-chroot}. No entanto, os processos de construção não serão isolados uns dos outros, e nem do resto do sistema. Assim, os processos de construção podem interferir uns nos outros, e podem acessar programas, bibliotecas e outros arquivos disponíveis no sistema --- tornando muito mais difícil visualizá-los como funções @emph{puras}."

#~ msgid "Using this option is not recommended since, again, it would allow build processes to gain access to undeclared dependencies.  It is necessary, though, when @command{guix-daemon} is running under an unprivileged user account."
#~ msgstr "O uso dessa opção não é recomendado, pois, novamente, isso permitiria que os processos de compilação obtivessem acesso a dependências não declaradas. Porém, é necessário quando o @command{guix-daemon} está sendo executado em uma conta de usuário sem privilégios."

#, fuzzy, no-wrap
#~| msgid "@code{features} (default: @code{'()})"
#~ msgid "@code{monitor-ips-interval} (default: @code{'(next-minute (range 0 60 5))})"
#~ msgstr "@code{features} (padrão: @code{'()})"

#, no-wrap
#~ msgid "@code{user} (default: @var{git})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, no-wrap
#~ msgid "@code{group} (default: @var{git})"
#~ msgstr "@code{group} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{guix} (default: @var{guix})"
#~ msgid "@code{gui-enabled} (default: @var{\"true\"})"
#~ msgstr "@code{guix} (default: @var{guix})"

#, fuzzy, no-wrap
#~| msgid "@code{guix} (default: @var{guix})"
#~ msgid "@code{gui-tls} (default: @var{\"false\"})"
#~ msgstr "@code{guix} (default: @var{guix})"

#, fuzzy, no-wrap
#~| msgid "@code{uid} (default: @code{#f})"
#~ msgid "@code{gui-debugging} (default: @var{\"false\"})"
#~ msgstr "@code{uid} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{gui-user} (default: @var{#f})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{password} (default: @code{#f})"
#~ msgid "@code{gui-password} (default: @var{#f})"
#~ msgstr "@code{password} (padrão: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{ldap-enabled} (default: @var{#f})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{relays-enabled} (default: @var{\"true\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{upower} (default: @var{upower})"
#~ msgid "@code{start-browser} (default: @var{\"true\"})"
#~ msgstr "@code{upower} (default: @var{upower})"

#, fuzzy, no-wrap
#~| msgid "@code{cache} (default: @code{#f})"
#~ msgid "@code{nat-enabled} (default: @var{\"true\"})"
#~ msgstr "@code{cache} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{ur-accepted} (default: @var{\"0\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{ur-seen} (default: @var{\"0\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{upower} (default: @var{upower})"
#~ msgid "@code{ur-post-insecurely} (default: @var{\"false\"})"
#~ msgstr "@code{upower} (default: @var{upower})"

#, fuzzy, no-wrap
#~| msgid "@code{uid} (default: @code{#f})"
#~ msgid "@code{cache-ignored-files} (default: @var{\"false\"})"
#~ msgstr "@code{uid} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{set-low-priority} (default: @var{\"true\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{id} (default: @code{#f})"
#~ msgid "@code{id} (default: @var{#f})"
#~ msgstr "@code{id} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{delay} (default: @code{#f})"
#~ msgid "@code{rescan-interval-s} (default: @var{\"3600\"})"
#~ msgstr "@code{delay} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{admin-pubkey} (default: @var{#f})"
#~ msgid "@code{ignore-perms} (default: @var{\"false\"})"
#~ msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{upower} (default: @var{upower})"
#~ msgid "@code{auto-normalize} (default: @var{\"true\"})"
#~ msgstr "@code{upower} (default: @var{upower})"

#, fuzzy, no-wrap
#~| msgid "@code{device} (default: @code{#f})"
#~ msgid "@code{devices} (default: @var{'()})"
#~ msgstr "@code{device} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{copiers} (default: @var{\"0\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{hashers} (default: @var{\"0\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{ignore-lid?} (default: @code{#f})"
#~ msgid "@code{ignore-delete} (default: @var{\"false\"})"
#~ msgstr "@code{ignore-lid?} (padrão: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{paused} (default: @var{\"false\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{admin-pubkey} (default: @var{#f})"
#~ msgid "@code{disable-fsync} (default: @var{\"false\"})"
#~ msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{admin-pubkey} (default: @var{#f})"
#~ msgid "@code{case-sensitive-fs} (default: @var{\"false\"})"
#~ msgstr "@code{admin-pubkey} (padrão: @var{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{upower} (default: @var{upower})"
#~ msgid "@code{sync-ownership} (default: @var{\"false\"})"
#~ msgstr "@code{upower} (default: @var{upower})"

#, fuzzy, no-wrap
#~| msgid "@code{shared?} (default: @code{#t})"
#~ msgid "@code{send-ownership} (default: @var{\"false\"})"
#~ msgstr "@code{shared?} (padrão: @code{#t})"

#, fuzzy, no-wrap
#~| msgid "@code{hostname} (default: @code{#f})"
#~ msgid "@code{sync-xattrs} (default: @var{\"false\"})"
#~ msgstr "@code{hostname} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{shared?} (default: @code{#t})"
#~ msgid "@code{send-xattrs} (default: @var{\"false\"})"
#~ msgstr "@code{shared?} (padrão: @code{#t})"

#, fuzzy, no-wrap
#~| msgid "@code{user} (default: @var{git})"
#~ msgid "@code{name} (default: @var{\"\"})"
#~ msgstr "@code{user} (padrão: @var{git})"

#, fuzzy, no-wrap
#~| msgid "@code{hangup?} (default: @code{#f})"
#~ msgid "@code{introducer} (default: @var{\"false\"})"
#~ msgstr "@code{hangup?} (padrão: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{uid} (default: @code{#f})"
#~ msgid "@code{untrusted} (default: @var{\"false\"})"
#~ msgstr "@code{uid} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{max-zone-size} (default: @code{#f})"
#~ msgid "@code{num-connections} (default: @var{\"0\")})"
#~ msgstr "@code{max-zone-size} (default: @code{#f})"

#, fuzzy
#~| msgid "Produce debugging output."
#~ msgid "Whether to enable debug output."
#~ msgstr "Produz uma saída de depuração."

#, fuzzy
#~| msgid "Package management commands."
#~ msgid "The package with @command{/bin/agreety} command."
#~ msgstr "Comandos de gerenciamento de pacote."

#, no-wrap
#~ msgid "{Data Type} greetd-wlgreet-session"
#~ msgstr "{Tipo de dados} greetd-wlgreet-session"

#, fuzzy, no-wrap
#~ msgid "@code{command} (default: @code{(file-append sway \"/bin/sway\")})"
#~ msgstr "@code{tmpdir} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{features} (default: @code{'()})"
#~ msgid "@code{command-args} (default: @code{'()})"
#~ msgstr "@code{features} (padrão: @code{'()})"

#~ msgid "The rottlog service."
#~ msgstr "O serviço rottlog."

#~ msgid "Make sure the package builds on your platform, using @command{guix build @var{package}}."
#~ msgstr "Certifique-se de que o pacote compila em sua plataforma, usando @command{guix build @var{pacote}}."

#, no-wrap
#~ msgid "{Procedure} git-fetch ref hash-algo hash"
#~ msgstr "{Procedimento} git-fetch ref hash-algo hash"

#, no-wrap
#~ msgid "{Procedure} git-fetch/lfs ref hash-algo hash"
#~ msgstr "{Procedimento} git-fetch/lfs ref hash-algo hash"

#, fuzzy, no-wrap
#~| msgid "@code{shared?} (default: @code{#t})"
#~ msgid "@code{postgresql} (default: @code{postgresql})"
#~ msgstr "@code{shared?} (padrão: @code{#t})"

#~ msgid "There are several teams mentoring different parts of the Guix source code.  To list all those teams, you can run from a Guix checkout:"
#~ msgstr "Há várias equipes mentorando diferentes partes do código-fonte do Guix. Para listar todas essas equipes, você pode executar a partir de um checkout do Guix:"

#, fuzzy, no-wrap
#~| msgid "Setuid Programs"
#~ msgid "%setuid-programs"
#~ msgstr "Programas setuid"

#, fuzzy, no-wrap
#~| msgid "./pre-inst-env guile -c '(use-modules (gnu packages gnew))'\n"
#~ msgid ""
#~ "(use-modules (guix channels))\n"
#~ "\n"
#~ msgstr ""
#~ "(use-modules (gnu packages base))\n"
#~ "\n"

#, no-wrap
#~ msgid "start"
#~ msgstr "iniciar"

#, no-wrap
#~ msgid "make authenticate\n"
#~ msgstr "make authenticate\n"

#, fuzzy
#~| msgid "Submitting Patches"
#~ msgid "and send patches"
#~ msgstr "Enviando patches"

#, fuzzy, no-wrap
#~| msgid "--localstatedir"
#~ msgid "./configure --localstatedir=/var --sysconfdir=/etc\n"
#~ msgstr "./configure --localstatedir=/var --sysconfdir=/etc\n"

#~ msgid "The first run takes a couple of minutes, but subsequent runs are faster."
#~ msgstr "A primeira execução leva alguns minutos, mas as execuções subsequentes são mais rápidas."

#, no-wrap
#~ msgid "make authenticate GUIX_GIT_KEYRING=myremote/keyring\n"
#~ msgstr "make authenticate GUIX_GIT_KEYRING=myremote/keyring\n"

#~ msgid "You are advised to run @command{make authenticate} after every @command{git pull} invocation.  This ensures you keep receiving valid changes to the repository."
#~ msgstr "É aconselhável executar @command{make authenticate} após cada invocação de @command{git pull}. Isso garante que você continue recebendo alterações válidas no repositório."

#~ msgid "We recommend the use of this @uref{https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh, shell installer script} to install Guix on top of a running GNU/Linux system, thereafter called a @dfn{foreign distro}.@footnote{This section is concerned with the installation of the package manager, which can be done on top of a running GNU/Linux system.  If, instead, you want to install the complete GNU operating system, @pxref{System Installation}.} The script automates the download, installation, and initial configuration of Guix.  It should be run as the root user."
#~ msgstr "Recomendamos o uso deste @uref{https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh, script de instalação do shell} para instalar o Guix sobre o sistema GNU/Linux que você esteja usando, posteriormente denominado @dfn{distro alheia}.@footnote{Esta seção trata da instalação do gerenciador de pacotes, que pode ser feita sobre um sistema GNU/Linux atualmente em uso. Se, em vez disso, você deseja instalar o sistema operacional GNU completo, @pxref{Instalação do sistema}.} O script automatiza o download, a instalação e a configuração inicial do Guix. Ele deve ser executado como usuário root."

#~ msgid "If you prefer to perform the installation steps manually or want to tweak them, you may find the following subsections useful.  They describe the software requirements of Guix, as well as how to install it manually and get ready to use it."
#~ msgstr "Se você preferir executar as etapas de instalação manualmente ou desejar ajustá-las, poderá achar úteis as seguintes subseções. Eles descrevem os requisitos de software do Guix, bem como instalá-lo manualmente e se preparar para usá-lo."

#~ msgid "Installing goes along these lines:"
#~ msgstr "A instalação segue as seguintes linhas:"

#, no-wrap
#~ msgid "downloading Guix binary"
#~ msgstr "baixando binário do Guix"

#~ msgid "Make sure to download the associated @file{.sig} file and to verify the authenticity of the tarball against it, along these lines:"
#~ msgstr "Certifique-se de baixar o arquivo @file{.sig} associado e verificar a autenticidade do tarball, seguindo estas linhas:"

#~ msgid "Now, you need to become the @code{root} user.  Depending on your distribution, you may have to run @code{su -} or @code{sudo -i}.  As @code{root}, run:"
#~ msgstr "Agora, você precisa se tornar o usuário @code{root}. Dependendo de sua distribuição, você pode ter que executar @code{su -} ou @code{sudo -i}. Como @code{root}, execute:"

#~ msgid "Do @emph{not} unpack the tarball on a working Guix system since that would overwrite its own essential files."
#~ msgstr "@emph{Não} descompacte o tarball em um sistema Guix funcional, pois isso substituiria seus próprios arquivos essenciais."

#~ msgid "Make the profile available under @file{~root/.config/guix/current}, which is where @command{guix pull} will install updates (@pxref{Invoking guix pull}):"
#~ msgstr "Torne o perfil disponível sob @file{~root/.config/guix/current}, que é onde @command{guix pull} vai instalar atualizações (@pxref{Invoking guix pull}):"

#, no-wrap
#~ msgid ""
#~ "# mkdir -p ~root/.config/guix\n"
#~ "# ln -sf /var/guix/profiles/per-user/root/current-guix \\\n"
#~ "         ~root/.config/guix/current\n"
#~ msgstr ""
#~ "# mkdir -p ~root/.config/guix\n"
#~ "# ln -sf /var/guix/profiles/per-user/root/current-guix \\\n"
#~ "         ~root/.config/guix/current\n"

#, no-wrap
#~ msgid ""
#~ "# GUIX_PROFILE=\"`echo ~root`/.config/guix/current\" ; \\\n"
#~ "  source $GUIX_PROFILE/etc/profile\n"
#~ msgstr ""
#~ "# GUIX_PROFILE=\"`echo ~root`/.config/guix/current\" ; \\\n"
#~ "  source $GUIX_PROFILE/etc/profile\n"

#~ msgid "Create the group and user accounts for build users as explained below (@pxref{Build Environment Setup})."
#~ msgstr "Crie o grupo e contas de usuário para compilar usuários conforme explicado abaixo (@pxref{Configuração do ambiente de compilação})."

#~ msgid "Run the daemon, and set it to automatically start on boot."
#~ msgstr "Execute o daemon e configure-o para iniciar automaticamente na inicialização do sistema."

#~ msgid "If your host distro uses the systemd init system, this can be achieved with these commands:"
#~ msgstr "Se sua distro hospedeira usa o sistema init systemd, isso pode ser obtido com estes comandos:"

#, no-wrap
#~ msgid ""
#~ "# initctl reload-configuration\n"
#~ "# cp ~root/.config/guix/current/lib/upstart/system/guix-daemon.conf \\\n"
#~ "     /etc/init/\n"
#~ "# start guix-daemon\n"
#~ msgstr ""
#~ "# initctl reload-configuration\n"
#~ "# cp ~root/.config/guix/current/lib/upstart/system/guix-daemon.conf \\\n"
#~ "     /etc/init/\n"
#~ "# start guix-daemon\n"

#~ msgid "Otherwise, you can still start the daemon manually with:"
#~ msgstr "Caso contrário, você ainda pode iniciar o daemon manualmente com:"

#, no-wrap
#~ msgid ""
#~ "# ~root/.config/guix/current/bin/guix-daemon \\\n"
#~ "       --build-users-group=guixbuild\n"
#~ msgstr ""
#~ "# ~root/.config/guix/current/bin/guix-daemon \\\n"
#~ "       --build-users-group=guixbuild\n"

#~ msgid "Make the @command{guix} command available to other users on the machine, for instance with:"
#~ msgstr "Disponibilize o comando @command{guix} para outros usuários na máquina, por exemplo, com:"

#, no-wrap
#~ msgid ""
#~ "# mkdir -p /usr/local/bin\n"
#~ "# cd /usr/local/bin\n"
#~ "# ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix\n"
#~ msgstr ""
#~ "# mkdir -p /usr/local/bin\n"
#~ "# cd /usr/local/bin\n"
#~ "# ln -s /var/guix/profiles/per-user/root/current-guix/bin/guix\n"

#~ msgid "It is also a good idea to make the Info version of this manual available there:"
#~ msgstr "Também é uma boa ideia disponibilizar a versão Info deste manual:"

#, no-wrap
#~ msgid ""
#~ "# mkdir -p /usr/local/share/info\n"
#~ "# cd /usr/local/share/info\n"
#~ "# for i in /var/guix/profiles/per-user/root/current-guix/share/info/* ;\n"
#~ "  do ln -s $i ; done\n"
#~ msgstr ""
#~ "# mkdir -p /usr/local/share/info\n"
#~ "# cd /usr/local/share/info\n"
#~ "# for i in /var/guix/profiles/per-user/root/current-guix/share/info/* ;\n"
#~ "  do ln -s $i ; done\n"

#~ msgid "Each user may need to perform a few additional steps to make their Guix environment ready for use, @pxref{Application Setup}."
#~ msgstr "Cada usuário pode precisar executar algumas etapas adicionais para tornar seu ambiente Guix pronto para uso, @pxref{Configuração de aplicativo}."

#~ msgid "Voilà, the installation is complete!"
#~ msgstr "Voilà, a instalação está completa!"

#~ msgid "You can confirm that Guix is working by installing a sample package into the root profile:"
#~ msgstr "Você pode confirmar que o Guix está funcionando instalando um pacote de amostra no perfil raiz:"

#, fuzzy, no-wrap
#~| msgid "Mail Services"
#~ msgid "jami, service"
#~ msgstr "Serviços de correio"

#, fuzzy, no-wrap
#~| msgid "guix-publish-service-type"
#~ msgid "guix-build-coordinator-queue-builds-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy, no-wrap
#~| msgid "@code{device} (default: @code{#f})"
#~ msgid "@code{guix-data-service-build-server-id} (default: @code{#f})"
#~ msgstr "@code{device} (default: @code{#f})"

#, no-wrap
#~ msgid "Vim, Scheme code editing"
#~ msgstr "Vim, edição de código Scheme"

#~ msgid "If you are editing code with Vim, we recommend that you run @code{:set autoindent} so that your code is automatically indented as you type.  Additionally, @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}} may help you deal with all these parentheses."
#~ msgstr "Se você estiver editando código com o Vim, recomendamos que execute @code{:set autoindent} para que seu código seja automaticamente recuado na medida em que você digita. Além disso, o @uref{https://www.vim.org/scripts/script.php?script_id=3998, @code{paredit.vim}} pode ajudá-lo a lidar com todos esses parênteses."

#, no-wrap
#~ msgid ""
#~ ";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
#~ "(with-eval-after-load 'geiser-guile\n"
#~ "  (add-to-list 'geiser-guile-load-path \"~/src/guix\"))\n"
#~ msgstr ""
#~ ";; @r{Presumindo que o checkout do Guix está em ~/src/guix.}\n"
#~ "(with-eval-after-load 'geiser-guile\n"
#~ "  (add-to-list 'geiser-guile-load-path \"~/src/guix\"))\n"

#, fuzzy, no-wrap
#~| msgid "./pre-inst-env guix build gnew --keep-failed\n"
#~ msgid "guix import texlive @var{package}\n"
#~ msgstr "./pre-inst-env guix build gnew --keep-failed\n"

#, fuzzy, no-wrap
#~ msgid "@code{log-file} (default: @code{\"/var/log/mpd/log\"}) (type: maybe-string)"
#~ msgstr "@code{remote?} (padrão: @code{#f})"

#, fuzzy
#~ msgid "Data type representing a @command{mpd} audio output."
#~ msgstr "Gerencie a configuração do sistema operacional."

#, fuzzy, no-wrap
#~ msgid "@code{log-to} (default: @code{\"/var/log/mympd/log\"}) (type: string-or-symbol)"
#~ msgstr "@code{remote?} (padrão: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{forward-x11?} (default: @code{#f}) (type: boolean)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{forward-x11-trusted?} (default: @code{#f}) (type: boolean)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#, fuzzy, no-wrap
#~| msgid "@code{debug?} (default: @code{#f})"
#~ msgid "@code{forward-agent?} (default: @code{#f}) (type: boolean)"
#~ msgstr "@code{debug?} (default: @code{#f})"

#~ msgid "Depending on the number of dependent packages and thus the amount of rebuilding induced, commits go to different branches, along these lines:"
#~ msgstr "Dependendo do número de pacotes dependentes e, portanto, da quantidade de recompilação induzida, os commits vão para diferentes ramos, ao longo das seguintes linhas:"

#, no-wrap
#~ msgid "300 dependent packages or less"
#~ msgstr "300 pacotes dependentes ou menos"

#~ msgid "@code{master} branch (non-disruptive changes)."
#~ msgstr "Ramo @code{master} (alterações não disruptivas)."

#, fuzzy
#~| msgid "Detail of operating-system declarations."
#~ msgid "Name of this host declaration."
#~ msgstr "Detalhe das declarações do operating-system."

#, fuzzy
#~ msgid "Data type representing the configuration of @code{screen-locker-service-type}."
#~ msgstr "Gerencie a configuração do sistema operacional."

#, fuzzy, no-wrap
#~| msgid "@code{users} (default: @code{#f})"
#~ msgid "@code{allow-empty-password?} (type: boolean)"
#~ msgstr "@code{users} (default: @code{#f})"

#, no-wrap
#~ msgid "semodule -i etc/guix-daemon.cil\n"
#~ msgstr "semodule -i etc/guix-daemon.cil\n"

#, fuzzy
#~| msgid "Then relabel the file system with @code{restorecon} or by a different mechanism provided by your system."
#~ msgid "Then relabel the file system with @code{restorecon -vR /} or by a different mechanism provided by your system.  You may need to remount @file{/gnu/store} to make it writable first, e.g. with @code{mount -o remount,rw /gnu/store}."
#~ msgstr "Em seguida, altere o rótulo do sistema de arquivos com @code{restorecon} ou por um mecanismo diferente fornecido pelo seu sistema."

#, fuzzy
#~| msgid "@code{features} (default: @code{'()})"
#~ msgid "@code{shepherd-requirement} (default: @code{()})"
#~ msgstr "@code{features} (padrão: @code{'()})"

#, fuzzy
#~| msgid "System Configuration"
#~ msgid "Home Environment Configuration"
#~ msgstr "Configuração do sistema"

#, fuzzy
#~| msgid "Instantiating a system configuration."
#~ msgid "Instantiating a home environment configuration."
#~ msgstr "Inicializando uma configuração de sistema."

#~ msgid "%@{name@}"
#~ msgstr "%@{name@}"

#~ msgid "%C"
#~ msgstr "%C"

#~ msgid "%T"
#~ msgstr "%T"

#, fuzzy
#~ msgid "{Scheme Variable} tree-sitter-build-system"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~| msgid "packages->manifest"
#~ msgid "{Scheme Procedure} fail2ban-jail-service @var{svc-type} @var{jail}"
#~ msgstr "packages->manifest"

#, fuzzy
#~| msgid "git configuration"
#~ msgid "%nscd-default-configuration"
#~ msgstr "Configuração do git"

#~ msgid "5"
#~ msgstr "5"

#~ msgid "spice"
#~ msgstr "spice"

#, fuzzy
#~ msgid "{Data Type} host"
#~ msgstr "build-machine {Data Type}"

#, fuzzy
#~ msgid "@code{canonical-name} (type: string)"
#~ msgstr "@code{remote?} (padrão: @code{#f})"

#, fuzzy
#~| msgid "name"
#~ msgid "Hostname."
#~ msgstr "name"

#~ msgid "@code{port} (default: @code{\"6600\"})"
#~ msgstr "@code{porta} (default: @code{\"6600\"})"

#, fuzzy
#~ msgid "{Scheme Variable} opendht-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} ipfs-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} lightdm-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} bluetooth-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme variable} zabbix-agent-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} xvnc-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} bitmask-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme variable} samba-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} wsdd-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} rasdaemon-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} fail2ban-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} home-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} home-mcron-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} home-dbus-service-type"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} armv7-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} aarch64-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} mips64-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} powerpc-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} powerpc64le-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} riscv64-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} i686-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} x86_64-linux"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} i686-mingw"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} x86_64-mingw"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} i586-gnu"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} iso9660-image"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~ msgid "{Scheme Variable} docker-image"
#~ msgstr "guix-publish-service-type"

#, fuzzy
#~| msgid "@code{dbus?} (default: @code{#t})"
#~ msgid "@code{group} (default: @code{\"zabbix\"}) (type: group)"
#~ msgstr "@code{dbus?} (padrão: @code{#t})"

#~ msgid "@uref{https://gnutls.org/, GnuTLS}, specifically its Guile bindings (@pxref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile});"
#~ msgstr "@uref{https://gnutls.org/, GnuTLS}, especificamente suas associações com Guile (@pxref{Guile Preparations, how to install the GnuTLS bindings for Guile,, gnutls-guile, GnuTLS-Guile});"

#~ msgid "Invoking @code{guix system}"
#~ msgstr "Invocando @code{guix system}"

#, fuzzy
#~| msgid "Invoking @code{guix system}"
#~ msgid "Invoking @code{guix home}"
#~ msgstr "Invocando @code{guix system}"

#, fuzzy
#~ msgid "@deftp{Data Type} wsdd-configuration This data type represents the configuration for the wsdd service."
#~ msgstr "Gerencie a configuração do sistema operacional."

#~ msgid ""
#~ ";; @r{Assuming the Guix checkout is in ~/src/guix.}\n"
#~ "(with-eval-after-load 'yasnippet\n"
#~ "  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets\"))\n"
#~ msgstr ""
#~ ";; @r{Presumindo que o checkout do Guix está em ~/src/guix.}\n"
#~ "(with-eval-after-load 'yasnippet\n"
#~ "  (add-to-list 'yas-snippet-dirs \"~/src/guix/etc/snippets\"))\n"

#~ msgid ""
#~ "(specifications->manifest\n"
#~ " '(\"emacs\" \"guile@@2.2\" \"guile@@2.2:debug\"))\n"
#~ msgstr ""
#~ "(specifications->manifest\n"
#~ " '(\"emacs\" \"guile@@2.2\" \"guile@@2.2:debug\"))\n"

#~ msgid "./etc/indent-code.el gnu/packages/@var{file}.scm @var{package}\n"
#~ msgstr "./etc/indent-code.el gnu/packages/@var{arquivo}.scm @var{pacote}\n"

#~ msgid "This automatically indents the definition of @var{package} in @file{gnu/packages/@var{file}.scm} by running Emacs in batch mode.  To indent a whole file, omit the second argument:"
#~ msgstr "Isso automaticamente recua a definição de @var{pacote} em @file{gnu/packages/@var{arquivo}.scm} executando o Emacs no modo em lote. Para recuar um arquivo inteiro, omita o segundo argumento:"

#~ msgid "./etc/indent-code.el gnu/services/@var{file}.scm\n"
#~ msgstr "./etc/indent-code.el gnu/services/@var{arquivo}.scm\n"

#~ msgid "git-send-email"
#~ msgstr "git-send-email"

#, fuzzy
#~| msgid "contents"
#~ msgid "contentdb"
#~ msgstr "conteúdo"
